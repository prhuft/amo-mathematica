(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    112737,       2095]
NotebookOptionsPosition[    111553,       2050]
NotebookOutlinePosition[    111916,       2066]
CellTagsIndexPosition[    111873,       2063]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Gaussian beam propagation", "Title"]], "Chapter",
 CellChangeTimes->{{3.7930544267678022`*^9, 3.7930544414285855`*^9}, {
  3.8017595675824814`*^9, 3.8017595682546873`*^9}, {3.805058457955764*^9, 
  3.805058463859932*^9}}],

Cell["P.Huft", "Text",
 CellChangeTimes->{{3.825024605133949*^9, 3.8250246093565884`*^9}}],

Cell[CellGroupData[{

Cell["Setup", "Section",
 CellChangeTimes->{{3.825025289707836*^9, 3.825025290993514*^9}}],

Cell["import functions for Gaussian beams, propagation, etc.", "Text",
 CellChangeTimes->{{3.825025294785119*^9, 3.825025305903972*^9}, {
  3.82560264637486*^9, 3.825602647138805*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<optics.m\>\""}]}], "Input",
 CellChangeTimes->{{3.8250253170574408`*^9, 3.825025364302148*^9}}],

Cell["Guassian beam parameters:", "Text",
 CellChangeTimes->{{3.825027104736458*^9, 3.8250271213570604`*^9}, {
  3.8250272330762453`*^9, 3.82502723688023*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
FUvWbwoJ/fzz79euWWsymiwRubYuZFOwO3GrAySOJMWMTHrlT+CokgETufBD
8Ke8Qw0vIJVDIKyDYk4YDEJqGrtzt2nU2MqBHpXBK7jcfJOmdtPGba+88mq3
bt2qq6tFR1sbbr/idgczw4qZWcz6jfjg4fiQ4cyGjWJWtpwvDoFAtBgwIYSk
FHrFT/igYdhwd/3aLZmRCUVFWo4XjEZjUFDQ448//te//vX8+fOCYM0c4G2A
/YvbnZ7FKKZncAcPgQlHuHvRK1cLYMWRJBqLQyCaDDQZXg7wEG4k0kuW4yM8
qkf63QgJrY5NYfVGEqMFXmRZLjs7+5tvvnnssceeeuopHx8fjmvansg2xwHE
rQ6oWZqWSsvY3XvAhMO69YLuRiwvN9PM7d2iHarmEYi2xpIaVzYVaFosKCQX
hhg7dcM8vJgjx/KuZRTmVXPcr+k7KIoKDw//+9///sQTTzz55JOvvvpqVVWV
Y3mmjiRutyxWnCCATypptWz4IbzvQKxHH3rVGtlRJQiULw6BaAhRNGOYkHKT
Cl6IuXSvHTAsfdXOtOsFHEFLHC/9bwYPDMM8PT1fe+010LdXXnnlnXfe+eWX
X0DxbFj8puJg4lYHXCbL0l12525y9FjCy4fZul1ITjHrLCvxHWrC2imBLl4Q
mr9XOMKayDkkWUmt5uPi6bXra928K9x8id1hTKU6K1OFmej7XiUQt5CQkMOH
D/v5+e3bt2///v07duxgGKbNS998HFXc6hAEqayM3bOP8BmL9x9MLwrhr8ZC
92TrYj3SgKYVFRUVFBRw0NEgbI1ZX8tfuEjNmG3q1dc02j9v3a6EC+kE8RCZ
gr4JeiiSJFesWJGTk3NLjl/gJYeKUnB4cVPWvpGkWFjERZ6lps3ER3jIu0Vf
iDKbTHJoHDIe2hxoFL6+vrNmzTIajbYuy6OKJSuRWadnjxwjJk0xjfComDSn
OOwUX1RsrDEaakmxcd5NfXFzOBxe3OpQshZU18i7RY+fiHXqSvgH8leumgnC
kk8JTaq2EdC5EwTx3nvv+fv74zguWbJFIP+0jVAGpVnWjONc1EXMfaShvQs2
YXLJwYiYyLSKCkNTLwQSN3uhbosKkhSSU8jAIMylOzHKl4s8J6nUssQhWh+W
Za9cufLhhx+uXbu2trYWwzCaph3LnXFc5IHoqiruVAQ+cpSxc3e1f1Du0cuY
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
PfuSY8dxR46BrDnfkFqz4TguLi6uS5cuc+bM8fPzc3FxmThxYlZWlq3LhWg0
kiQWl4AbQoweq+vSi5oTrD95vipfxbKPemy2c4obdGosZ9bpuROnyAlBuKsn
tWARH31ZLCmRE3eggPx6KOI2bNiwwsLCjIyMlStXjh07Ni8vD/X7jgQvr3EQ
i4r5C1HU/IW6Ie7loyeaDp8Q9bUizUrCo+Ke3IVTiVtd1gWjiTt3AXfzxLr0
IKfNkDdk0evhBrB1+ewRnufj4+O9vLwUL7W8vHz48OHr169HY24OCc+Dq8Jf
jSUmTjF17mYa6VO8+4S2VHZUzdA0nH1g+S6cR9yUfFnl8p6ShLsX1qU7NW+B
PA1K0WCdOFDujjYGNC05OTkwMFBRMzDkzp8/P3To0MrKSjvcRhDxEJRBZo4z
U5SQmkZMmmJs76IZ4oEfOsZXVPGk3W2d1qo4vLgpk0dGk5iRyYUfJsdPkJM5
L1spJCXf3jvvUbqazUDZJhX8UGUGAf6naRr8U7VajZadOjBw24PEYRh/6TI5
Jxgb7q4fP7l8xyEyPUfCcbMcHuD87cLRxQ2cUDErm9m4GR8yAh88nFm3UczM
lKM7EAiEBTm/zfUE6PGNA4ZVD3anQnea0nM5yvm3UnVUcZMXhFJy/oQ16wlP
b8JvPLs/XEzPABPuUQhaQyCaADQHsOJqa4Wbacwvu3BfP52rd+XiNVxhsURR
ZuedX3Mwcbu9hYElgnHDJqxrT3zgEHbXHnkaVFk2hUAgHoS8jIsS8/LoDZtq
u/Qydu+DbdpWm1siUozZGU0CRxI3s9mM42Junrxyqnd/WdZ27zHra2VZg94H
ja0hEA0DbQQeFvNArNHQW7djPftWd++vXrmZyysUccLJVm85gLhZjGpJqxMS
k5jtoYTPGHgw234RS0rloDU0o4dANBVlUhWsODAVNmzGPLxxLx/DzzuwuCRO
ozNznHNYcfYvbvJWQbFx9OIlWJ/+hPdods8+sawcBeIiENaB48T8fAasODev
qs59jCEruKQUkXKGjFj2K26WiWzhWiw1Jxh38ySnTudOn5HTfZMkClpDIKyG
sokDTgi5eczho8SEyZjbSM304JoL18wEIY/FOSz2JW71djEQUtPIaTOwjl0I
r9Hc6QhJrUZBawhEK2IJjZMqKpgDh2r7DdH/6EItDOEyskSSMnO8I47/2Je4
iaJlF4MkcuoMrGtPYpQvfykaTDUzy6IpAwSi1VGsOJYFp4k9cQof6qrt3LN0
wmwiKVUyGB0u7tcuxE1OF89IVVV8zBV6+Urc1YOcEMQdPyknWwNZc4qxTQTC
kZAkOeCqspLeux8bMx5z9aRXr6WuxDPlVQ4Uc2V7cTObJb2eizhDTZ2O9ehN
TpkOTqhZp3OUCkQgnBlJkqpr2PDDRMCk6k69tEGz2KhLYNfZuliNwmbiZjbL
XYOy80XARMJ9JL1sBX85Rs4h6aS7GCAQjocSNELTYnkFe/YCOXcB7jbSNGla
9YETnM4gO1Z2TFuLW51Tb8L4cxcILx+sfWdy6gzheoJZX4s0DYGwU+SWK0oa
LVggRh8//XcdjX6B3LU4iSDN9pp1p03FTU6pw0sqNX/+AjHKF+vak5o1V8zL
l2NxlfpBIBB2S/18SskpRMBEY+fuaq9xpqgrokZrtr/22xbiplhrBCEWF3On
IshJU4hhbtS8BXxcvNloRAEeCISDoQSNaHXMqQh84hTDEFcyeBEbFc0Wl0n2
tC9JW4ibnOC1gt0bRowdhw8YQi9Zzl+NBfFHmoZAODbgixmN3LkL5IzZ+i69
tWMmUMdPSTq9nTTtVhQ3JTVuRQW7azc5eiwxchSzZaucQ7LWcItl7eT0EQhE
81E2jGYYqbqai7lKrlhtcvcmAiYZdx/g1Bqbp1W0vrjVTRnoa7mjx4hhrqYO
LvSSFWJWtjyDjDQNgXBKwEGrNfA3koiZcw3fd9S5jSLPnDfjuLxVk40i8K0s
bpYs/FJVFXfiJDHCA+vWiwpZBj6pmX4kNj5GIB5plOkGmhazc0xTZpm69DCO
9MXPXuRV1TbJdGEdcbu99hYXCwq54yfJoCmW3fQWC4nJsrWGVk4hEI8O8nQD
L1tx0THkjNm1g101gdO4CxeF4lKRIM1tuM+gdcQNLNLSUnbnbmL0GHnKYOVq
4UaSmUEDawjEI4wluyx7MZqaOx/r3d/oF2DYG86ra9pMFlokblB4ipYzfm/7
hRjlCw9mW6iQnGI2GOW4PqRsCMQjjiSZWVbSaPjYeHLVGv0wD9w/kD14iFPL
W6m2tkQ0R9zuTBlIOh2UEx84FOvcjV61Wt4kFMORpiEQiLsB585g4JOSqdnz
TD920o7w0h2JEE2YPPPYasNWTRY3KAbIWkUld/goPngE1qMPvfInqcqSKwBN
GSAQiAdRN92Qm2ucOhvr2kPeL+B8FF+lllonkr+x4qbsK2HCwDzjjhwjAyYR
rh50yFIh5Sa41WjKAIFANAqLkshW3NVr1Jxgw1A31bip5OlIsbhEIkmLFWe1
n2qsuImiWFDIbAslPLzBD2XWrBOSkm+hgTUEAtE8zGYzSbKXr5DBC7E+A/Cx
40y7D1BllVbcgashcVPCjylKLCxiNv1MePkQo8eyO3cLqWlgwiFlQyAQLQL0
jWUlrVa4nkCtXq8fPtIwyo/ZGyZW18jJNFosL/cXN2XKQF5VUcPu2ov3G4S5
9KA3bJL3ZyEIpGkIBMKagBFlNArJN8ngRab2nQ3D3DX7j/G1xhZON9xH3JQ0
kqVl7L79+IAheK9+9PqNkkaDpgwQCERrIe8MxcvTDXn52Oz5RpcemNtI7uw5
vlIlNddJ/FXcbk8ZmMSsbPZAODkukPDwopevFDIyZWvNbtKYIBAIp0WZbjAa
+aux5JxgbJibeswk/ESEUFhsbvp0w6/iJghibi6z+WfC3RMfMpzZtFlIz0B7
HyMQCBsgTzdQHEjcgsW1Pfpho/3JvQeY0kpzUzzHOnGjN/1MjPIl/QPYsANC
RoYcjsuhNJIIBMJG3J5u0HHxCfTa9UbXkYYxAcZzl82Ntrh+FbelK5jtO9CU
AQKBsCMsMRuSvpa/kWiat4iIuiwv7WwcdeKGHuiBHujhTA9F3NADPdADPZzs
8f+tzE4Y
    "], {{0, 204}, {415, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{415, 204},
  PlotRange->{{0, 415}, {0, 204}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
sFtlXSS5/VVM+pDq63xIdcZc3VOOt57mtsKuSfoWoHoVUH0aN0YVw+Qzm2Iu
7d2qfzMy/9XL/JSYlIxAi03bTVxd7z//UJPk53Z21axZ2kfsQT+mKHjTHBtz
4ezdEL+nz+KzXlSWZTy7ZWfrkfgOzBzIfqVwpKs44KoVYrVIYrUOPDgBq7b7
tunfiMyDrcamZATBVl1c76e8K08A3XnlzBkaB21vxb7D1mU98zJeN3fasl1W
rmGVg40FYQ8t9RZOW6Jnds2/pE/BRwmQFSetwzZuPtFZpWV50e7WBua3494M
AFJidnOs3X5gOiL3pdT0+c07TFxcvFKbusqT/K4dUZ85V/ek/c2nOS1UjhBp
HUVXpLytSvS7e3rVrBkaBy7djHmLqQVkTdbNm7Z8l6VraMVAQ0H4I8uti6Yv
0TN19i/uZXB5I90lgU7WdjefxuYU5SaFBYRl1SIZy59FhFceJ3cbecamRD19
VtRD44ggoZzCKBr2fVrA9SPqs+atPmF/40l2M/LpNjEu7vx+E9cHYWkllTUV
uVFeLvfTmoDIh1g13kfWrDUJ/URgfVc4AQqep/YYecYkRwIK3TQWrTnnmduZ
1bNnauy3uRH9Bl2bHXrfdP386ct3XrgeUo4aYdK6S4KcAcEnsdljBOUewysm
16YHuBzVmA1Y27k+Qb59B4HAtsQ7HNyh7xIGZpb8VDiwF/R2GV+7DpqCyuQy
B8pDrlnZ332WVlSamxId5mu9ZfYM9T0XbifWDrzLCPE4t2beHO1Dtt5Z7cjx
CBCjNtj8mLlXfEHFq/ykqNgn5qvmqGw0uBzw4n2Q8X5Tl/uhz5HgRN8HfbsR
L/dTT+B2Lg52vXzd61lydmZ8kJujjcuz4jYCZ1TM6ygKu2+yfv5s9T2Wzm4J
bwnyTyMQsYYqw5xNTR3uR2UWFabHPAtNfz+ITCyA3jOL4+aecQXlrwpgehar
5wJ6jgGldS8T/F2Pac6Zv/q4revjrEbSlx/OgrgdIQYbT95/0SPR8kDTJFw+
vFPfJTT7BYhaXGpGkOW23cbO1zxTGokMASQiVjw4s9/4XlRSpG9IYSdZ8qgH
MepCzp+w8IzLB+aTYfO6c5dtPOvgXwLMB7ge0wLmj11yQcwLJDduz4tnLjb2
Nx5HZxXmJoUHhmV+GJQ/Rf41GGWRMIM97a2tbZ19GCpXetwoxKMTMANdba0t
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
ShDhZJv8Kj0uKTk5LgiYeDRuAmK2Zz+6eS84OScnyc/l6v3cjhG5KdPi4ddR
ty8c3rLRMqoqLybK74r+iasp7Qy+SIStSY2Ol3rn7JH8ET8xkYXVXRzs/Xic
/4GZKyVbdaMd2fcdTu/YeNC9nMQRiul1SZ52+js27L1ZPAwkKb8l44HjmV0b
tzhm4llwpEfRL6MCotJLql5XvyxMuGdqF9VJn7yTBTcHpjrqkc+z2LTszORw
H88nmc0UZEOO1ZgZ+PDChumzN5q63vV8nN4wwvsyiKLByihPy22L/jFX7/wN
NxC/2BrZzisinGwTy9LjkQDeuGjzqLiXJc1wh1gdOT63PYKTskEAXZ0e5LTR
Ju8AfhZ25PvdtjMzMjSzvRX/rrEg2N3R3NjQwsHzedMIe6DMz+mCiaGpzaPC
flpTlvflszs3HXQrI8r0JaunJOTR47C4JBDEGBDEQ7NXIcJpdKgq2stq22JA
2eLGXQ+YMp4rkFIGwulSwou0+OQUhPKlR0U9TL4CaSQmvkuPTQi/a+ea2kJD
wirGlz1xDX1NAt2EXvPE+IR9bKucnUO5kCechL0hxxfNUDcBtfBGRz6lgKbf
uXHvjQI8gw/xW7MeXjHYvUnPIQ0NGgX2yXr7kn/O1TN3RXyqxslCrYQSSiih
xL8dRtse75jxP6pnvKMTUlISIoMeud264/Xw2fOKlkEKV8GWE6/abffGE16l
AwQyGdsUfWHLTtdCHDIljzKHUfU++2eq7nUMedmNwQ8PY+ufHtfcd/8NhQvP
6oKuZLtDBl5FrYP4YRKZhGtKvqDzi9Zl+cIJ4o0Qhipvb5muZfO8qXsQjSEy
pDoOCKd5izdb+L/oQhPGTLxGVqXEuILr+/bYxn/sw1NpZGxdoNE20/Amupyk
I0jIIA6U39w8Y9WRu9Hveyqfntl2+uk7KpdV7b538wnPkj48CXgXY7V1l0sB
hi2ZvQXdKfaHz3kVtozxt1z5q9blElg4QRwKutnvyBxV62wcEKGjLNJQ7aN9
s5aYJmPBZCpmk9FtoacXzjoZPjTCgz7zajxMbue0o8gMJnOEhi1wsvJvocrJ
7Ka99jl75nZWfT+OTKWQCENv/EyPXk5pG+GJRGwyrj/eRGWZYVhtRz+GzPp6
OQrijxCHqu5um6V9MbmhcwCOn0BaBAinBUs2m/uVdqLgNmrwPam936saaQUx
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
5K+WXC3kKPTvui0AAADAhwASJ3uGCZIPTflywcW8NjlkTgAAAMDwg8TJnmnp
8UfmfDZmhsszlkxnjwcQAAAAsC+QONktLTPzpqtXhN/2iZ/NOvGUIdXa4xEE
AAAA7AokTvYJZWS4OR73z6jjcnNc5nwx4+gTmgQyJwAAAGCYQeJkh1B6+pUd
284+LqFJdRimLL204MsfDsVRJKg9HkMAAADAjmgSdn0xZvnNRpHaHlMPTeLu
r/5vuXf9h5Q4aelPr2xavsMjhcTTGMxh4+qK64u/nLwviiyGIuIADDNcTXlZ
QVWo39qkQkxAfFnHUyJQxxaA952RmR8W4OtxetWEv//3Fwv2nbvu6feEJEfs
pCCQkVkQHmhq/eqJY8ytP3vN1HqiDBn9S8v0pMDtix2OPiymyXRY55Ub15D8
V383flNAtVANF18AhhFKSbsXkFzNVuj63KRgqEKB6I2DZlMGjbzPz+FaXmnI
rUeFVLjxAeA9hyMSLptFb22ora6uqSNT6QyWQGnA7ORhD45KeB2tr7Fq/eBX
rWFskbzs3oFNRx8RherhTD5xcW1eXjVDjPS68uqEdTlJaRVstRYSJwCGjYb0
+IpH9AuKWNtz/hmEhIS7N/2Dw6Ojw4MDwvIoUo3NKwCuohQmRoaFR8dEPQ64
5XkvuYan6hy1MqrYRXcveKU2wfZJAAA7Z2SX5NWKNH3vLW1TVoa4uj4oalMO
b10ATK/VGfF+H2HUaTSo3l7yXgDskJ4W63LcL6dZgHanN5joxV2n/RdD84hU
Dq8l6fyqees9ClgSXb/fxcXFD+/ElZJa29r57dw2elXkOWffPLq4c14irqHE
nD7omUkWwqgTAMCe6QquOgcRBUPbCg7TiHl8080mJC8AjEaaCp8djoEv6FJ9
1ymOy0o81y/c4plHFpkfnCsr7h/Z6RJW027jiqHIPr/HPatFgHQmSjpuxOHd
viV0cVeOZRBmXdh6IpzQpoBBJwCA/dJmndrhU8kbSlVuHIMbRQBGMU3p9TU7
fEvpku7LAcZNcvpxnINbEV1qyZQwjYjN5EoQWyO/8pQj8xbuuPG0UdwxXKVt
8Nt9JLSWLe9Ok3BpxulVBx5WsuR2MtEUAAD6G1rihAkrkyOjH7uduhBHEtue
3gAAsG96ks+ala5PyYLuoh+4NP3YzLGT9zzKSH6S/CQhNiIs6QVNihhsDjkb
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
AAAAAAAAfAj+H7kSgfU=
    "], {{0, 111}, {787, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{787, 111},
  PlotRange->{{0, 787}, {0, 111}}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Propagate and plot the beam", "Section"]], "Section",
 CellChangeTimes->{3.8050588399504967`*^9}],

Cell[CellGroupData[{

Cell["Waist transformation", "Subsection",
 CellChangeTimes->{{3.825023398032129*^9, 3.8250234016754355`*^9}, {
  3.825023561605477*^9, 3.8250235687157707`*^9}}],

Cell["\<\
check the relation w1w2 = \[Lambda]f/\[Pi], where w1,w2 are the full waists \
in the front and back focal plane of a lens with focal length f. \
\>", "Text",
 CellChangeTimes->{{3.825023694561491*^9, 3.8250237397215905`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", "1.04*^-6"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ng", " ", "=", " ", "1.474"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputWaist", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3*^-5", ",", "5*^-5"}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"system", " ", "input", " ", "waists", " ", "wx"}], ",", "wy"}], 
   "*)"}], "\n", 
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green"}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"colors", " ", "of", " ", "waist", " ", "plot", " ", "lines"}], 
   "*)"}], "\n", 
  RowBox[{"legends", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<``mm\>\"", ",", 
       RowBox[{"waist", "/", 
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"waist", ",", "inputWaist"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", " ", "=", " ", ".12"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"[", "m", "]"}], " ", "lens", " ", "focal", " ", "length"}], 
   "*)"}], "\n", 
  RowBox[{"d1", " ", "=", 
   RowBox[{"f1", "+", "0.1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lenses", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{"the", " ", "system", " ", "of", " ", "optics"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "0.103"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MRefract", "[", 
        RowBox[{"ng", ",", "1", ",", "\[Infinity]"}], "]"}], ",", "0.0073"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MRefract", "[", 
        RowBox[{"1", ",", "ng", ",", "\[Infinity]"}], "]"}], ",", "0.002"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MLens", "[", "f1", "]"}], ",", "d1"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8250237533186274`*^9, 3.8250238253926888`*^9}, {
  3.825023905053892*^9, 3.8250239737467346`*^9}, {3.825024349761407*^9, 
  3.825024373445656*^9}, {3.8250251524675903`*^9, 3.825025157572141*^9}, {
  3.8250254235673933`*^9, 3.8250254847967625`*^9}, {3.8256026939889984`*^9, 
  3.825602781640768*^9}, {3.8256028764889956`*^9, 3.8256029267507997`*^9}, {
  3.8256059844679503`*^9, 3.825606164807995*^9}, {3.8256062307317424`*^9, 
  3.825606260061689*^9}, {3.8256063092655115`*^9, 3.8256063796949825`*^9}, {
  3.8256064493097095`*^9, 3.8256065082170124`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"waistfuncs", " ", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{
     RowBox[{"Length", "[", "inputWaist", "]"}], "+", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\n", 
   RowBox[{
    RowBox[{"q0", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Pi]", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"inputWaist", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "2"], "/", "\[Lambda]"}]}]}], ";", 
    "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"waistfuncs", ",", 
      RowBox[{"beamPropagate", "[", 
       RowBox[{"q0", ",", "lenses", ",", "\[Lambda]"}], "]"}]}], "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"system", " ", "input", " ", "beam"}], "*)"}], "\n", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", "waistfuncs", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "d1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.002"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "inputWaist"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8250237533186274`*^9, 3.8250238253926888`*^9}, {
  3.825023905053892*^9, 3.8250239737467346`*^9}, {3.825024349761407*^9, 
  3.825024373445656*^9}, {3.8250251524675903`*^9, 3.825025157572141*^9}, {
  3.8250254235673933`*^9, 3.825025457186321*^9}, {3.8250255019376264`*^9, 
  3.825025520672882*^9}, {3.825025717585122*^9, 3.825025748770914*^9}, {
  3.825606273733596*^9, 3.825606298785901*^9}, {3.825606372333799*^9, 
  3.8256064234913387`*^9}, {3.8256065321045647`*^9, 3.825606538613594*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
V9OYwmGPry4d+1NimKgTRGMlh82Ul5P4D4WeqH0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVi2tIU3EAR5dlMucDbaksNdJcPmJq6ZQW/rLZQJN7/5qUWazYUJxoD9iW
uqKgCaEzikTKtMEw8UHZA0ruvZA5RSkzCpslzqWSZaVO0dHUoPXhcDgfzi7V
+fxiLx6PJ/bw3yL/jtcKJYN4c9uJpW4KIeaMAKOnI5LU5UVPKEi2LvApNYPo
0GOCWz0UFBUt3mGlDO4stnUO9FJQjuZumi5noNMoc9aHKFySbWx0XWSQmFr1
M+kDhXb+qRUYGChqxhKapygUWZXNPVcZDBcmqBVzFARXVFnJRgZVz0abnE4K
55yahqh6BvfXxIIjPBqpY5Up3mYGhet9i/ORNPpaG7Vv+hjEai1DOE1jAh9X
CnxZ2CUnX87YaNx0f2p+F8BCWPj9T/0kDTz/kqXYxqKuznogfZaGRTzVkBbO
ojWp+JVplYbG35kikrCofhQ9K/IlcI376xx5LEZMCWvWWIJAffaq5h6LCX5o
RkgJQbBtOmq4hcV+Z+TOzxoCofQykVhYUHuyeU0VBGGux13LnSzG4rZYI3QE
UXqhysCx6F8OyokxEkj1jhGTg4WjolKZYiFIt1VuLMyw8LnRlOl6SCCTBsfn
/WBxwWjf3dNBcMiVVbN9iUXi24FfsqcEOfpO2QMvDm5xhEHeS5Brk2t4Phz2
zsnPePcT0FJ7o0rA4a+9Vj44SFDgClwWCzns4Ff5HX1PoNTr2rtjOPz2GzXn
TxKctQXYguI9v2DNKJwmUEvbN2slHA7fRpntG0FJY2aybR+HuNpW+u4cQalr
XJmexmHxa2xq0TxB2XGtqUnG4cW1YVH4EkGLxr1efZDDdbfTMOHpf8SAGKc=

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0.1103012021291591, 0.0012556862250163747`}, {
         0.11035136740039216`, 0.0012562396279401091`}, {0.11048514145701363`,
          0.001257715369749659}, {0.11102023768349951`, 
         0.0012636183468107626`}, {0.11108712471181026`, 
         0.0012643562200413832`}, {0.11115401174012099`, 
         0.001265094093514577}, {0.11128778579674245`, 
         0.0012665698411869876`}, {0.1115553339099854, 
         0.001269521339424087}, {0.11162222093829613`, 
         0.0012702592145834694`}, {0.11168910796660687`, 
         0.0012709970899820592`}, {0.11182288202322835`, 
         0.0012724728414951947`}, {0.11188976905153908`, 
         0.0012732107176089108`}, {0.11195665607984982`, 
         0.0012739485939601742`}, {0.1120904301364713, 
         0.0012754243473736937`}, {0.11216299266665583`, 
         0.0012762248348317496`}, {0.11223555519684038`, 
         0.0012770253225674}, {0.11229723334749725`, 
         0.0012777057373605718`}}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV0XswlXkYB3BZSZ3GuiQ6W6w6Uzo2a/dU6iRfkttul433t27TrkU36TqG
tO1IbEUKEVtITc1mTS4RWt73OCG390VMreuyJE5uy0FarNnf/vHMM5/5PvP8
8Tzm/qfcD2lqaGi40Pq/J455NpWXs6hYIbOx+ZvBVERx3HYli03zQ5vl1MWb
jqpnq1ioSyWmXtTnOld5sXUsDoyfWRJKvSOG535qZDGT1jKeRK3st4rRaGPB
M42VTdSXbv419ryLzv9wLGeU2sn+JhPVy+Jln3GqaJxBfdq0mfYwi1OOeUEu
1K/c2WLRAoslZ2sMyqlTNE6ubtDkIF+zMN9F7Z1rdunGEg4NctfBWerupVF7
9fU5sPxKdusEA5XSrX+lhEPJjozDudTzVq36a7/iIBPtL89QM1B0XQ17s4+D
QxGbXUYdGSv/86EHhzBhZ0o7tfZARtaGgxwMHc6fMJpkoJcRiE2nOUxu71p9
nVoiUgdvS+Hws/nuiAtTDPYMLq/d18ehN/K+u+97BlmDBh2KAQ7Rlg/tw6i1
VCYjVsMcdEpKrJKoy1QSvY+nOGSe1Rfx1NIhW6+mxQrkhsRXyWcY6IwGq/Zv
VGDvsSK5+AODKrWgc+C0Avm2j2Tt/9B7L8S5eSwooNNs6OX5L4PUXQkqg1VK
9HDaQUNaBJYvdXs+y1fiZNiEi+9ygoF8Y7/VO5/j13OWunsNCR64SfvVr59j
cjDe7A8xwZUtNeq7gRWoz/z2fY85weVhk6c/jldA39/Go8aC5t4h53C1EmHL
ntg4WxPkiX1q2oyqkHc/5J6TDUF7ktsq77wqFI2er+iyI5D6VU7n2r1A9lyA
85QTQcr7iegt/AuUpYll7/YQaDlJjR8EVCOnNXFFKENwe2BENjBRDebrBuMo
XwJr+9899OJq8OF0jr1FAEFfgHz98XW1SNh1pjc7iKCswykqLb8WR5okATln
6P6lvm8K3OrQ7Gji7BpO8Mu12YbMtjqEJNWq/C8SFLXuO84F1mO946TS5wrB
q87Hoor5eiTf6ZQN3yAQy25tTY/l8fhihsXcLYLk2LvpRtd5pDY/KRSnEOj2
PdKMj+fR4dtuJ6delFjaGJnMw/gTfxJOrRrrOXzkLo/Pd/hEzVCXZEtTvyzg
sfFZf99kKgGzVjlT285jwdMvf+Q2QWN43cFdXTxKrDt3Lr9D4NrcUlnWzcNh
2zHektr24tv43Dc8IloUA0HU67qXWSSP8vCTfmP6jlp9m3h9v0iAo6ko8W0a
QfDEd4q2jwRw7DOzxen0365HJe7aAmqjw3Ml1O0z58d3iwS4JGwWAqiV5N5V
qZGAvGsJOn3U8pzfxh4YC4g70Zq6KIPgqVYhs0YswDf0iw3m1FmFLz7VMxNw
ac7U2Y96rajpcoy5AFlYwesI6nT/thFNiYArJt6HMqlXlva6X1gvwKLHYFpB
Ha8//GzaQkB1fU90N/V/6dQs8A==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVj3k8lAkDx12JZxhHRpZpCEW0I+VIMj/X8zQtiRmFsiU3hQ5SDVvjSqJD
lK2UlhbpGFfNPN7V6tCl5N2i3qwkR+PYtTVUOmzvH7/P9/P96/v5zQ1PEkSp
KCkpJX/b/zng9/OSYv4SHslnj/Q5EXjRKHHZINHD/pmhe62cCVT55VQ5S+ai
iOm6ZOKbR3g6OLjn2kCew5nycSGgY/LPRkuJPVpvaFy3dSUwanD3vDXbCWrV
ZyOL3AjcZ54dWZi7DPIax9vZ7gQqNXba2yt4eOD9tG7ai4Cn+NcmY4kHTEf9
3ivzCdh/PdrDHvRCRNbKwHxfAmaidGVTNgWVhWsyzwQQYH6ItZwr4GNNnJLT
0iACX5IDV1jk/oCOc3+zQn781v8H8fOafeHSNnlLKZLA/xJtC6wUfuD7Ov7J
3Uwg1EEsZ0kCYHxRLZ8tIvDk7eSU4QMBwsYi7V9kEvCp3aJlNChEbW/vj5wC
Asu4wXbG7LXY07HSZNE5ArWjD91NnINQsrw+40sNAesaLwFbEIxs1SzOqmsE
ZlvbpXBy1+Fy/83gre0EDg1W5JiWrwdvffZJz24C6ueNS8yaQ9HWeCWoSE5A
MVe9yVyxAe1/2PjUz2BAXpC4b5ZkEx5XDnHueTFgmbBAs8gtHGsYZII4kIEw
3/6jBg/C0ZXv1lIXxcAzYl05azACU7ba8rQDDLTuJ1tns6OR/fHy9uJOBlRi
lFaXVEfjnFE69XmYAR7V1GXkHIOUcx/Kn0wz0KhmL/9OEAvDlUL1ThstVIjZ
WuzceBwz7XGZztZCb1hX0WnWZvzCtUBnqRZM3AvnzCnfjMHBMYnhVS0Ufp1p
x2negshDNpL2IS2IRe8CzBSJcN2355GavzauLBvw0ZdsQ96+ey5HFjPhl3NH
r/XzNrASWNqaQiZGO6q7dq/cjhWXfJWHdzBhE5cY8apvOypHW5gvrzJRceL9
HgkrGR8PnE3a5qGDkwrNC36inWjrHx/SdtBFzmWuxkFKhBjfKttTu/Uwb0r3
Ee+YCFWZfp9sDuvhFvnu2NuXIpTPcPXvrtCD8p/XTNftTsPQvNCz5x7rIY3h
4bzgYjqS+KM3qxfow6VhQf1rjX0w7zk67vtKH3Z6y/vEiRnIrGWeYUUa4O6D
dquAwgyM2HUs3yAyQHhORILZ1QxQzVJSVmiAok95H5q/ZICVZVZ6vsUAHwae
Mz/nZ8Jm9UirvxkLN+hU1501Wagxile63svCmsj6ovg3ORj+azy5aMtsiK7Z
rBCGH4SoY+KZSaUx6Om6kRMGhegqK1juf8EMtyI4vryu4yidCDKvTrKE5qZu
paP8U/D8ONW0QcMadjqKwQKtMtQLW3S/TNli9Omb9k0TZQgkjg1Pi76Ht+Eq
o+Nxv0Bsc2Y07bUdJuPadyhKK5CS/jnxVas9rpTuevGXciVCG5pX7b+9BDM4
Pglwq0YYU3anuNwRd1rH7wkSamCXuWzmot3OOLL6t8UqDy+hxj+KcSDVBaLC
532qKhLc1T3eHRzoisVjMXWBjrVQsdh6mw5xA6d745B6RB0ePE1Kmb0WCNm2
xT4yrR5pGZwgzxJ3nNiZLz58qQH3B0w3S372gKV5y2DU/UbwY6tpVp4nGt00
BcT0VeS9eyG/dMgLojHaXJcrBdfVd/PZQ954oi4Y3LNYiva8J1XrCr2x0Exe
PeAkRabyriHWcW90C2bbN0GK+V+0Y/NLvcGT7kB0gBTpyVE7d1/0hlLmwtD/
JEthrca7I7zvjRyjM8WxTVKM1OQ6aqqT6LF3DPnjuhSX3wuLb2mScPJpY/Nu
STFr2mpyrzaJofSp8lkPpQhlvqEnDUjwX6+ta+6RwrBf6t9vQYJxWafdQEWG
+UGWl657kDjiJdZo4cuwNjxhXmo6iaoLi9QOrpLhPNvBJFNMokWvdzpQIIOK
LUf/cDaJty9579+sl2FvfYhqZQEJYdrnAd0kGehToe86S0kYNqbeDCuWobxE
TdO5mQSXbXXd5qQMlhUNul43SKzI7KQVZ2RQ/Zj+3epWErsCHOtyq2SI0lrH
jXlE4vnY2zJJkwxjHfOjTvSQOD0/8SelPhm4evnqH76SaCiYs+f+oAy1Trmm
aqoUHiraUopGZMjWKXLRnUnh6w3bBOsJGcaznm211qGwcaN8vb8GDYGr2miw
KYVdrSVBxto0XjckaEdZUDjyPV/Yr0dji3uf3TYrCr9/+vWHXSY0bngPpx6w
o2BeEulSxqVBzIk2oEFh2fQsx/glNDR4RrxWLwrC6JuLHJbSiB9+HPvfFRSy
HMyt73rQuFctbBleTeH0qQ6LQoqGZhn770khhQYVsWmoD40Fb+RzVIMptMUt
MpnvT6NNQa/SCaUw8Pil4Xggjamlh38yCfv2x/mwPh1Cg20dLbGKpMAVzUrR
3ECD75fl3RZD4V+wkCGX
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwViXtIU2EARz+nFks3y2nICqvlI4VGhk1h0S/v/bKMlWkWpLhk6thCjWIu
397SoPBFJuJrWqLkgywQctx7DVwFIRUVuUgtaT3tD1liI2tI64/D4XB2GM5n
FkoIITE+/lspG55K1fN4HNByudXCYHPfAXm9r902o+mVr9XrlqTH83ncztxz
UShnkFpsC4ww8Yi98qR6sIaB/o3Oz1Xk+w+jGlrqGFzSer2jF3iMdeu6yq8x
GJLmrKCSR3OTe/JYK4PsR/oeey0PVXVv7ud2BkHVBppQz2N1cGatoptBidvc
pmriEamcOzQ0wGDf27LEwD4eEunOr5IJBo6Bdsu0g8fhmrES+xyDebxeydog
YJsltiMqmkXz6kzPc7mA0rwPRiGOBcbf0VSFgBrGq8lUs+iP+diWtFXAmss0
V5vEwixzJyrVvj+ymDiXxsIzKytdyBAQvPFuXGsJixBr2i9zpwC38rrCz84i
1OlSPbMJuPmt4A8nsgjTVJ1Q9wvguSoXmWIR4RkbXR4R8IPPeUCmWaisYYZK
UYBj0VFE5llorAsvGhcEdNZWKgihSHaWeZc+CRgfvi/jAii0mtD4jO8C6rgw
KZFSHPTQq+E/BXwJLPQnoRRHrSPaXomI8JOKdSSKQudkzWS9iO1Td6TcLop0
zft2Q5CIhhsFcrKbIssTshwTJuJWStYWoqHQW0uH7kWLeJnrYcgRijyn3Lkp
XkTkGXs6p6PI1wz5W9QiJjt6ckkGhbE9JcG5V4Qnp7+IO0Vh8szqk5NETLie
VpFsinOnLY1dWhG9xSHNnJ7CZl79W7FfBDsT/Nt4luIfoS8J0g==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0.1103012021291591, 0.0007548544511695709}, {
         0.11035136740039216`, 0.0007551858585875118}, {0.11048514145701363`, 
         0.0007560696148302929}, {0.11102023768349951`, 
         0.0007596046850190138}, {0.11108712471181026`, 
         0.0007600465738470508}, {0.11115401174012099`, 
         0.0007604884637917717}, {0.11128778579674245`, 
         0.0007613722470234878}, {0.1115553339099854, 
         0.0007631398268018293}, {0.11162222093829613`, 
         0.0007635817245091167}, {0.11168910796660687`, 
         0.0007640236233176502}, {0.11182288202322835`, 
         0.0007649074242308201}, {0.11188976905153908`, 
         0.0007653493263316503}, {0.11195665607984982`, 
         0.0007657912295261142}, {0.1120904301364713, 
         0.0007666750391883777}, {0.11216299266665583`, 
         0.0007671544423744659}, {0.11223555519684038`, 
         0.0007676338468385913}, {0.11229723334749725`, 
         0.0007680413416361673}}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV03001XccB3AkNJunM0+tOwunccOMRLeHt1m6vi0aesBOmPTg5CyrnWpp
m6eTh+QpDzNcxrbkCCsp+v2ui4ur3y/aUl2R8hC3EbqRjkn77o/v+ZzX+Z7z
Pefz/ny+qyOOBhzQ0tDQENPzf82e2tvT3MzAbnNU/0shwexPDekbZAxcPQ6a
zFM3OB5WL8gZzBZWeZivJTjVbxnEdDHAuvIwd+qNqRz7QzeDCG3f5L3UslGn
VA0lg4SNjLKAOiHnyVTLAANBSZzWDWpvz5xdiUMM+uxfOyipbxXNWelMMFA3
aiRZOBD0BjAN+ksMMqJOigqp8zW+WXVbi8Wyvt6oRurgGquEDF0WNqFPC/uo
B1ck+hobs5BIrBYtHQlUMjJqZsvi8OXXil+oF50eGFtvZ/HZJVFSsROBdCDl
5IgfC89PFVKGOj5N9Oi3QBavK/QWBqh1xkoqP97HQrml/JjgEwKjkkg4xrDw
eOseLaG21VdHe+Sz2Os/EVfmTLBj/F2F3zCLoW9DnX93IagcN3koHWPR7JYX
1EatrbKYdJpgkfTjofgh6psqWyPDWRZ6+YO9AlcC4T+bgnqWSzFeapaYT633
PFq1016KsPXVi8nrCORqXs8/RgpH+9DII+tp3kvpJHBJCv9/I5avExEUeGWp
TCxl2HJXb+6oF8HaOwaPHepkqHQ1iMnaTjBWZx6+anMLWt1etTgFEFQQ4aj6
Xgsu1G89fiaEINmtUy2JbAXXq3dzWwTB2QmL+tiZVrjI3N97GUXvg787hZQ2
uFfoTn95jKB2ZUin0lSOzvZ8I/vTBH0XiGVwrRyfc9Pn6xNoP+FtczVb2nGi
KdGgMY3O79WLJDeuHXtCdDIkOTQPb6F5xf4O3OPeZG0oIigcm3Qde9EBrxpT
ny8qCJw9GwON0jtxx1cufr+aYHi/aM0RGwVM4ofuSutpfg+9E4vqFJCXNrGP
GPr+iq9GrpAuTFres2hoJ/j53MLtUmUXPpR/UKrZTXDtgd8RNvIWyi3ydzjc
p/vVX63fungL9idEcSaPCVa65q0vTuOgevKoPGqcIDdNUmx6nsOkeGE2g9pg
+KJWZiYHQZVCXE+tmd3UHZ/L4U1g7PQStWrq8cFDEg6SZ+7iXBXB9SphgcsV
Dtti9S2anxHsspbNK/o4HHDWhekkQff3Xfu8BjhcF+67KKL2+evvtpuDHExk
kUbh1JvinmbWjHAYqU0ZraK2GXzHLvc5h56dNnmezwnUhbuDwjR5mM2UmUdP
EUS/CJUql/EocjE8l0095nPYNkCHh+CJ09sG6r750zNb9XkYxyQ805ym/3N3
WYrQlMefhqc7CqhFly9NVZjz0N1zHCx1vfbVXYKVPAKnBY3D1JVX2z8ysuJx
xyC5xnGGwFq/52zqah5LGd7CQOriCOWkli0P6z3X/jhFbdY0FHBmDY+NX9+3
kVBnGk/cmLPjIb5c+Wsb9X+NjB2q
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 0.21999999551020408`}, {0, 0.002}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox["3", "100000"], 
       FractionBox["1", "20000"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.825606383010413*^9, 3.825606539370471*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{"waistfuncs", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", "d1"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.8250259368237405`*^9, 3.8250260168279934`*^9}, {
  3.825026079121313*^9, 3.825026095147738*^9}, {3.8250267244034376`*^9, 
  3.825026728950097*^9}, {3.8256065639959936`*^9, 3.825606615220909*^9}}],

Cell[BoxData["0.0013193772369218316`"], "Output",
 CellChangeTimes->{
  3.825026017674822*^9, 3.825026095776595*^9, 3.8250266213399706`*^9, 
   3.825026737348111*^9, {3.8256065676395135`*^9, 3.8256066162208595`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{"waistfuncs", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", "d1"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.8250266353486156`*^9, 3.825026637767605*^9}, {
  3.8250267317646837`*^9, 3.8250267339128814`*^9}, {3.825606612311595*^9, 
  3.825606626720523*^9}}],

Cell[BoxData["0.0007916407816621723`"], "Output",
 CellChangeTimes->{
  3.8250266427143164`*^9, {3.825026734595559*^9, 3.8250267402781887`*^9}, 
   3.8256066278139095`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1520, 805},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification->1.25,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 245, 3, 108, "Chapter"],
Cell[828, 27, 90, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[943, 32, 90, 1, 86, "Section"],
Cell[1036, 35, 184, 2, 38, "Text"],
Cell[1223, 39, 257, 6, 62, "Input"],
Cell[1483, 47, 159, 2, 38, "Text"],
Cell[1645, 51, 29166, 483, 273, "Input"],
Cell[30814, 536, 36742, 607, 157, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[67593, 1148, 121, 1, 68, "Section"],
Cell[CellGroupData[{
Cell[67739, 1153, 161, 2, 59, "Subsection"],
Cell[67903, 1157, 235, 4, 38, "Text"],
Cell[68141, 1163, 2708, 71, 307, "Input"],
Cell[CellGroupData[{
Cell[70874, 1238, 1726, 42, 170, "Input"],
Cell[72603, 1282, 37612, 722, 305, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110252, 2009, 433, 10, 37, "Input"],
Cell[110688, 2021, 216, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110941, 2029, 385, 10, 37, "Input"],
Cell[111329, 2041, 172, 3, 37, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

