(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    316201,       6834]
NotebookOptionsPosition[    296964,       6539]
NotebookOutlinePosition[    297370,       6555]
CellTagsIndexPosition[    297327,       6552]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Waveplates and polarization tomography", "Title",
 CellChangeTimes->{{3.9290024081143403`*^9, 
  3.9290024185517273`*^9}},ExpressionUUID->"c8cc374a-255d-4c98-ba78-\
fd3de5b77e0c"],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.9290024224549694`*^9, 
  3.9290024233694553`*^9}},ExpressionUUID->"0950b21a-4e41-4d00-bca1-\
d00a20acf248"],

Cell[CellGroupData[{

Cell["definitions", "Section",
 CellChangeTimes->{{3.929002396921625*^9, 
  3.9290023991728415`*^9}},ExpressionUUID->"c9728dee-7638-43a2-abb6-\
5c4706fcb4ab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QWP", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {"1", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}]},
       {
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "\[Theta]"}], "-", 
            RowBox[{"\[Pi]", "/", "2"}]}], ")"}]}]]}
      }], ")"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"this", " ", "is", " ", "from", " ", "Fowles"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\[Theta]", " ", "is", " ", "the", " ", "angle", " ", "of", " ", "the", 
     " ", "fast", " ", "axis", " ", "in", " ", "the", " ", "lab"}], ",", " ", 
    RowBox[{
     RowBox[{"where", " ", "0"}], " ", "=", " ", "vertical"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QWP", "[", "0", "]"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QWP", "[", 
   RowBox[{"\[Pi]", "/", "2"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QWP", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QWP", "[", "0", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QWP", "[", 
   RowBox[{"\[Pi]", "/", "2"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QWP", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8855659937350807`*^9, 3.885566190737722*^9}, {
   3.8855662317905912`*^9, 3.8855662895135183`*^9}, {3.8855669307524824`*^9, 
   3.8855670416866665`*^9}, {3.8855671651294436`*^9, 3.8855671965085726`*^9}, 
   3.928961888384018*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"5a220ab1-cfae-4a7b-83c9-afca461e94c0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "\[ImaginaryI]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88556614943664*^9, 3.885566191570915*^9}, {
   3.885566232956293*^9, 3.8855662539491367`*^9}, 3.885566290791222*^9, {
   3.885567029540626*^9, 3.8855670420358934`*^9}, 3.8855671986321554`*^9, 
   3.928961908670415*^9, 3.9290093908532143`*^9},
 CellLabel->
  "Out[2]//MatrixForm=",ExpressionUUID->"839b59a3-a6a8-4778-925d-\
34118bb493c1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "\[ImaginaryI]"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88556614943664*^9, 3.885566191570915*^9}, {
   3.885566232956293*^9, 3.8855662539491367`*^9}, 3.885566290791222*^9, {
   3.885567029540626*^9, 3.8855670420358934`*^9}, 3.8855671986321554`*^9, 
   3.928961908670415*^9, 3.9290093908582225`*^9},
 CellLabel->
  "Out[3]//MatrixForm=",ExpressionUUID->"56858d29-75c9-4792-b2fd-\
349efd6e1229"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "\[ImaginaryI]"},
     {"\[ImaginaryI]", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88556614943664*^9, 3.885566191570915*^9}, {
   3.885566232956293*^9, 3.8855662539491367`*^9}, 3.885566290791222*^9, {
   3.885567029540626*^9, 3.8855670420358934`*^9}, 3.8855671986321554`*^9, 
   3.928961908670415*^9, 3.9290093908582225`*^9},
 CellLabel->
  "Out[4]//MatrixForm=",ExpressionUUID->"c67222a0-3ba9-4d59-a64a-\
524ac3d0b8fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.88556614943664*^9, 3.885566191570915*^9}, {
   3.885566232956293*^9, 3.8855662539491367`*^9}, 3.885566290791222*^9, {
   3.885567029540626*^9, 3.8855670420358934`*^9}, 3.8855671986321554`*^9, 
   3.928961908670415*^9, 3.9290093908633547`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"bbac4ca4-8397-40d6-88e5-2b46e6e3f73b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.88556614943664*^9, 3.885566191570915*^9}, {
   3.885566232956293*^9, 3.8855662539491367`*^9}, 3.885566290791222*^9, {
   3.885567029540626*^9, 3.8855670420358934`*^9}, 3.8855671986321554`*^9, 
   3.928961908670415*^9, 3.9290093908633547`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"068f559d-212b-4377-a36b-46720d28dccf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\[ImaginaryI]"}], "}"}]], "Output",
 CellChangeTimes->{{3.88556614943664*^9, 3.885566191570915*^9}, {
   3.885566232956293*^9, 3.8855662539491367`*^9}, 3.885566290791222*^9, {
   3.885567029540626*^9, 3.8855670420358934`*^9}, 3.8855671986321554`*^9, 
   3.928961908670415*^9, 3.9290093908633547`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"7338e360-79d0-418b-ac2b-975eb795004d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HWP", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}], 
        RowBox[{" ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}]},
       {
        RowBox[{"Sin", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}], 
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[Theta]"}], "]"}]}]}
      }], ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\[Theta]", " ", "is", " ", "the", " ", "angle", " ", "of", " ", "the", 
     " ", "fast", " ", "axis", " ", "in", " ", "the", " ", "lab"}], ",", " ", 
    RowBox[{
     RowBox[{"where", " ", "0"}], " ", "=", " ", "vertical"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HWP", "[", "0", "]"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HWP", "[", 
   RowBox[{"\[Pi]", "/", "2"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HWP", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HWP", "[", "0", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HWP", "[", 
   RowBox[{"\[Pi]", "/", "2"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HWP", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.88556651361911*^9, 3.885566544003586*^9}, {
  3.8855667197742653`*^9, 3.885566793329054*^9}, {3.8855668734929733`*^9, 
  3.885566877767412*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"5a562aea-621a-4105-bb29-0d76a3045a10"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.885566545836937*^9, {3.8855667247906675`*^9, 3.885566745200441*^9}, {
   3.8855667813562717`*^9, 3.885566793807374*^9}, 3.885566878081*^9, 
   3.9289619118997917`*^9, 3.9290093911131797`*^9},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"bcd19a3c-e0e0-41b5-a3a3-\
4dea2bc163a4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.885566545836937*^9, {3.8855667247906675`*^9, 3.885566745200441*^9}, {
   3.8855667813562717`*^9, 3.885566793807374*^9}, 3.885566878081*^9, 
   3.9289619118997917`*^9, 3.9290093911235313`*^9},
 CellLabel->
  "Out[10]//MatrixForm=",ExpressionUUID->"9e8ecd8d-5c0a-407e-869c-\
46eb637d13c9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1"},
     {"1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.885566545836937*^9, {3.8855667247906675`*^9, 3.885566745200441*^9}, {
   3.8855667813562717`*^9, 3.885566793807374*^9}, 3.885566878081*^9, 
   3.9289619118997917`*^9, 3.9290093911235313`*^9},
 CellLabel->
  "Out[11]//MatrixForm=",ExpressionUUID->"faf519ce-340b-4016-afaa-\
15a2247210d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.885566545836937*^9, {3.8855667247906675`*^9, 3.885566745200441*^9}, {
   3.8855667813562717`*^9, 3.885566793807374*^9}, 3.885566878081*^9, 
   3.9289619118997917`*^9, 3.9290093911235313`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"05ee0854-7e99-4519-9f65-637465bd1866"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.885566545836937*^9, {3.8855667247906675`*^9, 3.885566745200441*^9}, {
   3.8855667813562717`*^9, 3.885566793807374*^9}, 3.885566878081*^9, 
   3.9289619118997917`*^9, 3.9290093911235313`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"902d90fb-323e-46a6-bf75-8b22fc77c23a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.885566545836937*^9, {3.8855667247906675`*^9, 3.885566745200441*^9}, {
   3.8855667813562717`*^9, 3.885566793807374*^9}, 3.885566878081*^9, 
   3.9289619118997917`*^9, 3.9290093911235313`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"e9e24556-2a4c-4c39-aa06-ae767cc770f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HWP", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"QWP", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.885567077822136*^9, 3.8855671218736815`*^9}, {
  3.885567214602691*^9, 3.8855672164099636`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ca2bafbf-ee91-4113-9f49-b7dd3d68324f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"5", " ", "\[Theta]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"4", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8855670852599115`*^9, {3.885567212927498*^9, 3.885567216982767*^9}, 
   3.929009391668065*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"189f6e72-0d41-4e20-acae-36e12c4fd9b7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["polarization state tomography", "Section",
 CellChangeTimes->{{3.9289619160609446`*^9, 
  3.9289619257530823`*^9}},ExpressionUUID->"288fcc00-4c54-4dc6-87ae-\
f76f89f95598"],

Cell[CellGroupData[{

Cell["\<\
single qubit (pure) state tomography - extract Stokes parameters\
\>", "Subsection",
 CellChangeTimes->{{3.9290015360531216`*^9, 3.929001552190325*^9}, {
   3.929002289908863*^9, 3.929002306254224*^9}, {3.929007285850469*^9, 
   3.9290073220012383`*^9}, 
   3.92900834550869*^9},ExpressionUUID->"1b1dec2a-08ba-4a94-8efe-\
531e1acb4776"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Phi]", ",", "\[Gamma]"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", "=", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"\[Beta]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]star", "=", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"\[Beta]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"\[Chi]", ",", "\[Chi]star"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Rho]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]0", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]3", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]2", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"-", "\[ImaginaryI]"}]},
      {"\[ImaginaryI]", "0"}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]1", "=", 
   RowBox[{"(", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.928961928066825*^9, 3.928962066303738*^9}, {
   3.92896214756013*^9, 3.9289621631663904`*^9}, {3.928962242763503*^9, 
   3.92896224613326*^9}, {3.928962282225876*^9, 3.928962291500073*^9}, {
   3.928962373231205*^9, 3.9289623943740273`*^9}, 3.92896246828109*^9, {
   3.9289629585886126`*^9, 3.9289629644667177`*^9}, {3.9289636206871557`*^9, 
   3.9289636214246016`*^9}, {3.9290018056203265`*^9, 
   3.9290018854827952`*^9}, {3.92900194056503*^9, 3.9290020346656017`*^9}, {
   3.9290021021098285`*^9, 3.929002110482586*^9}, {3.929008541441492*^9, 
   3.92900854194728*^9}, {3.929008727195523*^9, 3.9290087463155756`*^9}, {
   3.929008848701852*^9, 3.929008848839138*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"b38201c6-2976-43d8-b076-5b30c317898b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[Alpha]", "2"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", 
       " ", "\[Beta]"}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
       "\[Beta]"}], 
      SuperscriptBox["\[Beta]", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9290020350653477`*^9, 3.929002111126708*^9, 3.9290023374624767`*^9, 
   3.929008750645424*^9, 3.9290088531444817`*^9, {3.9290093917135506`*^9, 
   3.9290094081974773`*^9}},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"16c3e854-bcac-4544-b6c5-\
251ca6f7b3e5"]
}, Open  ]],

Cell["\<\
Reconstruct the state by expansion onto the Pauli matrices, where the \
coefficients are the Stokes parameters\
\>", "Text",
 CellChangeTimes->{{3.929002442624695*^9, 3.9290024695768204`*^9}, {
  3.9290026034736366`*^9, 
  3.9290026187938843`*^9}},ExpressionUUID->"69950d01-7854-452c-b03c-\
ea96546d2e39"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
y5Q8LiKLFi2i3kExhvPhtH6k2N7f358OoU4kfYvKx/m0HvfxKNClcZINRMuX
L6dhil6kSIxmbZr6afVKI5XMopUCXRoHaGyhkYHPLBQe8HLr1q1bcnKyfB4Y
dzG5qpQG1YhBaDVBERFdi1odVTp/KimtHfjrNA7LnEFg+dt1NAb9XUmUuXPn
5suXj+ZWmvIoBOKv//nnn1RKdHWa3dauXevyWApi5RsPQ8GDhox5bJlSLVq0
cHceI4paTzvUNlgJubQqFBk6lzOFHPZ/OxEtQilC++677zZv3kwLOmonlICW
eCNGjFASnunsiS6zx4agHTt2UHT0xhtvUP1S22Nv0cpaeB4WLFjgnAf+p/YJ
EyZQfOiymVFTZGOF/Uk7HzJkCA0jNEpT5EmTOHW3Nm3asJSvvvpqamqqx8LU
0CpE9S9tDVJ/9ensR9okJCSMGjUqZ86cFIrTGnzjxo0URfz999+bNm2idTpV
98KFC+2elvnKAw8hjVzIiKF2phPVuuzuoxcLhi46g0NG84ysp7VYoaVp6NFG
T1KMnhhJ8xyhPOoTMijZzRpRBY4MeurFW9m2Wjiqh+byd9kpqH06p6S+7JzS
+SOjAhuVd8dwnw4phbDsghRkaNt7nDFjBj+kQYMGMksth2GT5v0aNWqcOnXK
IRmPB6iRO5/k5s2bFy9eXL9+fdmyZfl1K1asuGXLlnPnzqWlpTmkv3r16rx5
82hiZSmLFy8+f/58urWHDx+yBDTV+vn50Xji8re5Cd0RRSA2p0mTxpPY2NjT
p0/TCWnOZeeX38ebOHEiS9ahQ4cHDx44J6D89+nTh2Iel6PTV199RQPXzp07
XZ6cssFO/uyzz/JhRIaQvUe7ATViEBr0ypQpY3vypxDpoMRkZGS8/vrr9C4F
YBRqujyD2PLX0xiEdCWdKHt9+/a1PXm+6759+1ymodUH6xqTJ092fpdqPOFf
vI1RHSX8N81/fZaehCqFnZ9qOcGJzBcihBe1nnaoebDSf2m17t27d+3atSNH
jlDAw4cFWoHScoY60Zo1axz+KE9doFevXnz0kP9sif6eSNmj0Xv//v1Dhw7l
2aPmSgNR4cKF2V82qVXQMpO9Rc3YYYDSnwe65evXrx8/fpzmULYus/0bKNJi
UL6ZtW3blv756NGjl156qXXr1g6f0aLgsFmzZiwlrU1cXp3T3Cr09y/Nl9ZZ
fTr7kTaHDx8uVaoUnZP+SyG9c4Jdu3bRbDhp0iT5Zb7ywEN/IxcyYmib6YSM
3nbZ6MVSoYvO4NCue0bW01q83tK09WhDJym7iBhJzxyhJOoTNSiZOaLqHxn0
14tXsm23WDiqmc7yp04RFxd39uzZqVOnso8U2tzsPVKrow5+8ODBMWPG8A7u
8uvqQmrH62O4r4eUelh/QQruqN17pNZIjZC3cOpu8pUiHTY//fTTqlWruozZ
pNlw/gsaR3EOTXYs2XvvvSef1WHDhtmebI0mJiY6vMXCzr1798oc/sMPP8hP
mv3792c5kdnHo9bO07h8IBiVRqtWrViamjVrOrx769Yt6jV58uShNO6KhQ8O
3bp1k7kdRtTeIyeqRoxw+/bt0qVL0xUph7t373aZJiUlheJkSpM3b17+TRNO
bPnrbAxiu5I23bt3p9PS1B8TEyOTbOnSpSwDFL7KJOOP1yhfvrzYfDJUztKJ
WDmxRa2zHeoZrPR3Ac14LBcQEEDRiLuZhWKSV155haUsUqSI9DlRUmJ7Il2U
hUlk/fr1YWFhy5YtY29RmMHrlMIk6ewmfDTmN07tk7qMkmb2xx9/0Eq/ffv2
Lr9a9dNPP7Fk1ENlPvwgqlVo6F9CLq2t+oRM+qrQtYKCgmxPNqxiY2PdJfvz
zz9DQkJ4tj0+Wk1J4GHXWkpCKkjnTMdoHr3tyqIXr4cuQkpJ1IysrbXoOVZ/
S9Pfo8VOUozYGEnDHCEf9QkclMwfURltI4PYetEgc4Sjmgksf/7dWJd7j1K8
g3t8VKa22rHUGG73/ZBSLd9akIKUw94jzTgPnVC4derUqZ9//vntt99mDYzN
XMuXL/d4fj5sVqxYkZqcTAuhBCylfBzYvHlzlqx69eryl54+fTpFFFevXnV3
y/JhZGpqasGCBWUmTconH3ZcJtixYwffpHU3F0RHR0vL/969e9J3qYT5WxQa
Of9RnlCR8jTOf+BwIHzv0S6iRgxCdccyRgOyTDJejxEREQ5vCSx//Y1BeFdS
a86cOey0I0aM8Jj4xRdftD2ZiTZv3uwujfX3HoUUtZ52qHOw0t8FNGvRogU7
JzX7X375RSZlUlISFTJLTOtWlyGc8JGwcePGLOWQIUMcmh81b/bWhAkTDM3D
2LFjWcouXbrQCZU0M4q6aUl45coVl8losuYf0Fq1apW7s4lqFRr6l6hLq60+
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
xvHntzgLCgr6+uuvZc4gE9/+9ttv/Dxly5b1eDseUehLs3/Lli3Z72pR/x05
cuSqVav27NlDNVivXj12LS/uPeqvEYH476CxofU9xX7//XeXJ9RT/qIag0Fd
SYmoqCh+C2PHjlV4VJcuXfhRX375pXMC6+896ixqUe1Qw2AlvAuopXZZJ31g
dalSpdwlEzUS8uwp+Y08g/JgRI+WDxTFtgpV/UvspbVVn/5JXwnpb50/88wz
Sg4xeu9RSSnpryCxYY9pe48mhy5CSsmIGVnPkGhyS+N09miBk5RBMZKoOcKg
QcmcEdWBqpHBoHrRINOEo6oYUf5e33u07Bju6yGlQj66IAUpH917zMjIqFCh
Akvfrl076Vt79+7Nli2bu5+Md3Djxo0ZM2bQKjJ37tw2V5YuXeruWJn4duvW
rfwMlE8lOZGxc+fOKlWqsLN17tx5//79Dgm8/p1ru7gaEWLkyJG8/N9++22d
Z9NZ/qIagxf3HocNG8ZvweMvaHDSPzPNmjXLOUGm33sU2w5VDVZiL62B2mXd
vn37eIbdFbvAkZBnz90DtN0RmAfzA0WxrUJV/xJ7ac3VZ9c36SshHfAtsveo
pJT0V5DYsMe0vUeTQxchpWTEjKynT5nc0hxo7tECJymDYiRRc4Shg5LRI6oD
VSODQfWiQSYLRxUyovy9vvdo2THc10NKhXx0QQpSPrr3SGbOnMnS+/v7X7x4
kb/ep0+fTp06qc1nenr6iRMnli1bFh4eHhwczAskKCjo8uXLLg+RiW8PHz7M
z+DxxuWNGzeOnScwMHDFihUu01hh79Euukb0kH4O3OUDcpXTX/6iGoMX9x7f
e+89fgtjxoxReFSzZs34UdHR0c4JvLv3mP6EywNFFbXAdiilZLAy6NLKqV3W
ScO55557zjmB2JFQ20JbbB7MDxTFtgpV/UvspfXsk0hzqHbSV+LQoUP8VKGh
oUoOscLeo/4KEhj22HWM3nb10YuZoYuQUjJiRjZt79G4uUltjxY4SRkUI4ma
I4welBiDRlQHqkYGg+rF6GxLWTwclWdE+Zu/9+hQO5Ydw309pFTIRxekIOW7
e4+JiYkBAQHskPHjx0tflP9xeUojf5v37t2bNGkSLxN3++oy8W18fDw/PFu2
bBkZGUruyNmUKVPYSfz8/L7//nt3ySyy96i5RoRbtWoVL3+PZSJDSPmLagxe
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
JqSUxM7IGlqLnmN1tjQhPVrgJMUIj5HEhiICByXzR1ROw8ggvF7MyTZjnXBU
M7Hlf+3aNSouliwhIcFlGjq2SJEizZs3Z8k8PopQQ+1YcAz39ZBSFZ9bkIKU
9AeDiKgv3HG87xOZWPHhw4dlypRhyQoXLuzxT5BSb7zxBjuQ1ndK0ks/fCvz
uJLly5fbnnxTwN0n8Tp06MDOkzdvXndPOaAuWa9ePZase/fuLh9wSucfNGhQ
8eLFaUSVvr5z504+wHbs2NHl+WfOnFmlSpUrV66wx73mz5+f4md6/fbt2zT4
OD/Uhec5KCjI3aCtNqUzVTXStWtXaQts0KCBqmvJO3PmDGtX2bNnd/ddNhqL
2rRp88wzzyQlJUlfF17+ehqD3ZSu5NGRI0fYaE+D86lTp1ym+fnnn9kKrnLl
ys6/ryHVo0cPls8cOXL8/fffAvPJUC3ky5ePXWLp0qXSt6Kiopo2beruQOFF
rbkd6h+s9HQBPfiyjgaBAgUKrFq1ymWy33//PTAwkLUBmoxcphHeE//55x/W
jFn2lHzW2ojRWEMzo3PK1NGtW7dy5crFUlJjkPmZDCGtQlv/0n9pDdUnatJX
JS4ujn2kn+5069atLtPcuHGjWrVq/I/ytv/esnZJSeBh11RKjP4K0jnTMZpH
b7uO6EVtMKmHkFISNSNrbi16jtXT0oT0aIGTFCc2RhIeiogalLwyojLaRgax
9WJatu1WCkf1EFv+FIOxO3XZH1NTU3v27BkREcE/B0hx0V9//SVzQm21Y6kx
3O77IaVavrUgzeKoSN96660xY8ZQd2jQoAFNHLb/9txzz/Xv358SjB071uUP
kXu0Z88eOnzo0KHS3zQn1EhoQBg1ahTfGN+wYcPo0aMHDhxISzZpSmrDffv2
pZN4/P4ROXnyJDtqyZIlSrLHJk268T59+lAbo/w4jNIUSk2ZMoWiVspVbGys
9K1Dhw6xW+Mf92Wefvrp8PBwesu5/T948IAuxJLVrl37119/5f2XBqVt27Y1
atSoVKlSLjvO5s2baX3BjqX6unv3Ln8rPj5+yJAhFSpUYL2Jx8ytWrVav359
u3bt+PNUZfLcr18/Kn9ebspTylNVI9QYpNeiYldyCeWooFq2bMlOTnV07tw5
/hYt3FasWFGuXLkaNWpQSOZ8rJDyl1LbGEzuSkrQBEqZtD35y9onn3wifSIW
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
NGfOHHYqOqfHxC+++KLtybp18+bN7tIYvfcovKtqK2fh5SbFVtY22b1H64ww
mvcelfcFvptUt25d+ZTsQ1mnT592fkt/iWk2duxYds4uXbrQMCKzWS196C4N
s1euXHGZ7OHDhzlz5mQpV61a5TKN/vsVMvqJmqP5t6o97j22bduWpZTZe7Rr
7fiiWpGPNgnNmadzylxR1RgipEXRUMzbba5cuYSEowAAAABgjrlz59ok4uPj
ndMkJyfzj8wp/BkFeZs2bWJn8/gzFhS3y6xr+LZb8+bNPV40MjKS3+acOXOc
E+zatYsn2L59u8yp9uzZw5Llzp1buq5PT09n3xgiL774orvDv/rqK34hKliX
zyzi34EVuPdIqz+W0t3eo8D8qyW2KoW3ag3VQW1j6tSpDu9euHBB/y94xsXF
8Y/YnThxwmP6NWvWsMSlS5d2t5Vn9N6j2Pq1aypnI8pNim+1uWtOlhphNO89
Ku8L0m549OhRmZQvvfRS586dnV/XX2J6vPPOO+yc2bJlky+lJk2a8HxS+cik
DA0NZck++ugj53eF3K+Q0U/UHM2ft+Bx75F/Kk9+71FDxxfYiny0SWjOfO/e
vWWSqRpDRLWo7777rmXLlob+BiIAAAAAGOHkyZP8KUm1a9d2l4x95YdERkbq
vyj/ntEzzzxz7tw5mZRvvfVW//793b3LlyH0Px4vGhsby589RdG+848k8m8p
BgUFyT+OLy0tLU+ePCyx9DNRq1ev5suEefPmuTv87t275cqVY8kGDx7sMo1X
9h4F5l8tsVUpvFVrqA5/f3/Kp8d70YA/G6148eJK0t++fZvvM7h7QJZpe49C
6teuqZyNKDcpj3uPlhphTNh7pGzwzd5hw4a5S3b58mWqRJe/9qu/xPTgezVE
/seI+SfTiPwfF2jKY8lcDtdC7lfI6CdqjuYPJhW+96i84wtsRT7aJDRnXn64
VjWGiGpRAAAAAOC7du3aRevTCRMmuPyABNOwYUMWNw4YMED/FRMTE/n3jEJC
Qt577z13seijR49cfmWMUbWhQTp27Mhj740bN0rfomUyX6/VqVPH46kaNWrE
EksfES89/6FDh2QOT05OptWBu2c32b209ygw/2oJrEpGbKvWUB20tFdwH6ql
p6cXLFiQXaJNmzYKj+JfBw4LC3OZwFJ7j3YF9au2nA0qNyn5vUerjTAm7D0S
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
nnmeP3/+lJQUev327dsUwcbExGi4rvTLjDLP/1m+fLntyVdv3P11m29o0Iqp
QIECq1atcpns999/DwwMpGQ5cuT48ssv5fN25syZMmXK2J58Z83d5wNprdSm
TZtnnnkmKSnJ+V1aKdSrV49lrHv37i5/ooLuaNCgQcWLF6elmctLdOjQgZ0h
b968Mk95+ueff9heiu3Js9llfvr23LlzPGIfPny4u2Si8q+WwKo0olVrqA66
EUM/lXHkyBF2rZIlS546dcplmp9//jkkJITSVK5cWf5noXr06MGyTQX7999/
C8+t2K6qp5zFlpuUkr1Hu2VGGGrq+fLlYydZunSp9K2oqKimTZu6y7/CvuAS
f3hdrly53O1EOdNfYtrw3TDibieWPHz4kGWPjSQyGbh16xbdOEtJ85q74VrP
/Yoa/UTN0YSywU7lskenpqb27NkzIiKCfyqPiuivv/5yeSo9HV9IK/LFJqEn
84ULF5b5mLqqMURIi+rWrZtN4t1333V3HgAAAACwms2bN9MSkgVytFa9e/cu
fys+Pn7IkCEVKlRgq+833niDJWvVqtX69evbtWun5PcXXGJRKIWgffr0yZEj
x6hRoxziW1piTJkyJSgoiJZIsbGx7s4j/QELWjFRGDx+/Hhp4E2n/eyzz1hs
X7Jkyf/5n/9Rkj268ZYtW7Izh4eHnzt3jr9Fa+0VK1aUK1euRo0acXFx7s7w
4MEDujV2htq1a//66698TUER9bZt2xo1alSqVCmHrY9Dhw6NGTNm6NCh/Juh
zNNPP03ZoLd4+jVr1owePXrAgAGVKlWSpqxVq9bgwYMp5W+//cZSfvrpp1S8
tLgLDQ3lyajkW7RoQRX65ptvutxo0pZ/PcRWpZBWrb86SpQo0bt3byr/sWPH
7t27V1RZcdeuXaOKsD35HMsnn3ySmJgofSsyMpIWqvRuly5dXK5GT5w4QXcx
bNgw/uVihs7WsWNHKhnKtse9eoWE1K+octZZbu4o3Hu0e2+EcbB69Wq2T1W4
cOGzZ8+yF9etW0fF8ssvv0hTKu8L8qgG2YHyP8HsTH+JKbRnzx52p/yrnUyx
YsUoz9TG+AfPNmzYQK1x4MCBNElJU1JOKIf01vLly1nKJUuW0D/79u1bunRp
acpq1arR4XQ5qi+B9ytk9BM1R9uf9KnixYuzfnrs2DGH22zatCmNP8nJyXzv
kXXMzp07jxw5kpWhqI6vrVR9uknoz3yZMmUon3QSnnkp5WOIkBa1aNEiad52
7drlMhkAAAAAWBNFjBTKsr9fFyhQoG3btrQ8adasWf78+fv373/jxg2WjFa7
/fr1YyEfRZsUuFKsqO2KK1eupJPQqp/+n5YMFDDTWqlDhw7Dhg2jKJeWt5SZ
kJCQqKgo+W87Ovx47vnz57t27ZonT5727dsPHz6cllHsCYdly5ala1H+VWWS
VnD169f3e4LC7+bNmzdo0CBnzpxFihT58MMPZb7qyMXExNBR7LMlFOpTkdKt
FS1aNDg4mLLnvK1BwTmdn4qC0tCShFaI5cuXL1myJEX1dAi9xb+CGhERERgY
SBVEp6Xlf8WKFSkxHUIH0uG5cuXiux81a9akYJ6qlVZ/dBeUkp2T7oJKmM7J
dyn1518P4VWpv1Wrqo6AgAC6VmhoKEtJSpUqRf+kS9MqjJZaCn+VWIPvv/+e
1pXUSqneaelKVUa1nP2JFi1ayGzS0mKT7oKaAd0R3RfdHR1IzYmaCpU23SOd
UPh36vXUr9hy1lxu7ijfe2TMH2GcbdmyhYZf25MvoVNpUAlQGa5bt84hmfK+
II9uim1D7d69W0l6B/pLzCNqP9Qe2J1S02Kdgq5F2aY2RmNpWFgYSzlmzBiH
1si6D1UEDTI0Pnfv3p2lpEbucrimA+lwOsn7778v9n71j36i5mgmLi6OSoOa
FrXVF154gToytc+XX36ZTkL/w/q7dO+RY7+ELrbjqy1Vn24SRmTegcIxREiL
ysjIoHZCww7dy8KFC90lAwAAAAAro6h1x44dixcv/uCDDyiIXbt27ZUrV5yT
xcfH79y5U/5zDh7R4Q4P6jlw4MCcOXMo7Hz33Xc///xzWvi7/CKhA4cNDebC
hQvr16+fMmUK3cXSpUsdPmih1rVr16Kjo2fMmDFx4sR58+b9/PPPMg/wd+nW
rVurV6+mkJvOMHfu3E2bNmnes/UKc/JvUFWa2aq9izfUCRMmzJo1i5Z+t2/f
9nam/j8Tuqo2AstN7d6jQwa8OMLs27ePhl86nP57+fJlVceqtWvXrmXLluk5
g/4S8y2a71fP6CdqjpZKSkrasGEDNVE6A/V6Or/0Q3rbt2+fNm0a5ZbGBGok
J0+evHnzpnE169OtyIKZ9ziGGNGiAAAAAADM4XJDA3wRqjJzywr1q23vEQAA
AAAAAAAsKytsaGQRqMrMLSvUL39Omvxv0QIAAAAAAACAr8gKGxpZBKoyc8tk
9evyUXslS5Zk9+jyRxkAAAAAAAAAwOdksg2NrAxVmbllmvr97bffSpUqlS1b
tg4dOty/f5+/npGRERQUxO7xwIEDXswhAAAAAAAAAIjSqlUrttin//F2XkAX
VGXmlmnqt1KlSvxHeGfPns1fP378OHsxNDQ0PT3dizkEAAAAAAAAAFHCwsLY
er9u3brezgvogqrM3DJN/RYpUoTvPY4bN46//vnnn7MXdf6IMwAAAAAAAABY
xN69ewMDA9l6PygoiP7p7RyBRqjKzC0z1W/Pnj35jRw+fJi9ePv27dDQUHqx
QYMGGRkZ3s0hAAAAAAAAAOgRGRlZokSJkJAQmxN6kd6iBN7OIyiCqszcMmX9
xsbGVqxY0d/ff/bs2ex5jzdu3Hj55Zfpppo2bXr9+nVvZxAAAAAAAAAAdFm0
aFG/fv0GDx48cuTIt99+e8KECePHj6f/oX/Si3379qUE3s4jKIKqzNwya/3G
x8e/8847RYsWzZkzZ+HChW02W7FixaZOnYrHPAIAAAAAAAAAAIAQCQkJR48e
vXDhAnYdAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
Z/5GB3fv3q1cuXJkZKS5Z/iqMnLkSDGXNaelfO3RyodSWbax169fDwgICA8P
L/OCbbdBerpletqEzMaSngAAAACsZzAYQkJCxFJi0KBBqjoePnxYr9eLjn36
9FHS3m1qjzDH9G5yY8aMcXQ4/2af4kZhYWFERISnp6fCSwTNrffv3LkTGhoq
Ap46daq5vp06ddLJPi5EKhja5He1Wtcei7HgHwrLNlb8iyd6LV68WFUv10V6
umV62oTyDCU9AQAAAFjg+PHj0lIiKCjo7t27CnuJddwzzzwjetWsWfPq1atK
ulB7dG/F7iZX5qMc7Mk+xY2kpCQxS+fOnRW2N7feT05Olvbhhg0bzPUdM2aM
1ObkyZOlNhCv6/V6m9wzzflrj5Zt7IEDB6Sr16y5laWrID3dNT1tQtPaI+kJ
AAAAQLrZo+Sdd95R2Eu66ZOfn9/BgwcVdqH26N4OHTpkPJHESjMnJ8fREf1b
ZGSkiCoxMVHTWbp06aJqFnPr/b59+0q7UexSc30/+eQTqc2cOXPMtXnhhRc8
PDzOnDmjMB5znL/2+NDSja1WrZqY6KefflLVyxWRnu6anjahae3xIekJAAAA
lHtiBSEtJVq2bCn+m5CQIH+ZQUFBQWxsrGgZGBi4e/du5RNRe3Rv0hMWJFWr
VnX4xSrXr1/PzMz8/fffd+zY4e/vL6Lq3r378ePHL168mJWVlZ+fb9vpbt68
6ePjI2ZRvr42t95v2LChtBvFJpjru3PnTqlNr169zLX54osvRIO4uDiF8Zjj
ErVHyzZWOmmt30XOj/R01/S0Ca1rj6QnAAAAUM6FhYWJr/dvvvnmw/97oK1Y
g4j1YMk7w4tXtmzZUr9+fdGmbt266enpqiai9uhmVq1aNXbs2HfffTc2Nlac
D7r/1LJlyyFDhowZM2bChAnmfnioqbZt21aoUCE4ODg0NFSc5OHh4eK/ISEh
gYGBPj4+Nr/T2vbt28VWi7mUdyl1vX///n1vb29pH8pUYPbu3Su1adGihbk2
Dx48qFmzZtWqVa18XoNL1B4t29glS5aIiZ588knlXVwF6WnKjdPTJrSuPZKe
AAAAQHn266+/iu/2f/3rXwsLC6VXli1bVqNGDfGiWBV26tRp4MCBkydPnjRp
kljASj+A8vPzi4+Pt2C5RO3RzURFRXl6eorzoXLlyo888khkZGS9evXq169f
u3ZtcQqJZX5gYKDvnz7//HNHB6u5iRMninO7bdu2yruUut7PzMw0FohKfYqu
JDU1VWpTvXp1mSkSEhJEm9WrVyuPqiSXqD0+tGhjpRqRt7f3vXv3VM3l/EhP
U26cnjahde3xIekJAAAAlGMbN25s0qTJzZs3TV/My8tbunRpjx49xBLVw8ND
9+f9wcTqNTo6esmSJTI/NJNH7RFurHv37uLcHjBggPIupa73MzIyjMUNmb7S
gxiEKlWqyDS7cuWKWLm3bNlSeVQluUrt0YKNNZaSjhw5omouuBY3Tk+bsEPt
kfQEAAAAyjPjFY+lKioqunHjhk3uvkXtEW6sXbt24tyOj49X3qXU9f7Ro0el
NPH09JTpe/jwYamZn5+f/Cw9evQQzdLS0pQHVoyr1B4fWrSx0v9e2bVrl9q5
4ELcOD1twg61x4ekJwAAAADtUXuEG2vUqJE4t2fPnq28S6nr/WPHjim5sOrg
wYNSG19fX/lZvvvuO9Hs7bffVh5YMS5Ue7RgYwMDA0WXdevWqZ0LLsSN09Mm
7FN7JD0BAAAAaI3aIyymcw4yEYaEhIgGiYmJyjeq1PX+qVOnjNOVfN6T0f79
+6U2QUFBZU7UpEmTChUqFLu1guT48eOjRo0aLOuxxx4TE/Xs2VO+mUxhx261
R/mNLVX16tXFXPPnz7dgLkjsnYdmyETooun58M9boMTHx8unXpnee++9nJwc
tRtbKtITAAAAgDOj9giL2bWEYZ5MhGJBLRp88sknyjeq1PX+tWvXjNMVFBSY
67tv3z6pTe3atcucqFevXqLl4cOHS741Z84cW+0csTnmHkFlz9qjzMaWqlat
WqL99OnTLZgLEludQlaSidBF01M4ffq0l5eXlXtGr9fv379f7caWivQEAAAA
4MyOHz8urVk6d+7s6FgAG5PWyLNmzVLexdx6X7wuZYrMpUo7duyQ2kRHR8vP
cuPGDX9//8aNG5trkJWVdU5W//79xUR79+6VbybzLFq71R7L3NiSRHsx18KF
C9XOBRfiuukp3L59Wz71yiR/0aPMxpZEegIAAABwNvv27duzZ8/OnTuXL1/e
pk0bac3i7e09YcKEL7/8MiUlZe/evefPn3d0mIC1nnjiCXFujxs3TnkXc+v9
p556SsqU9PR0c32XLVsmtRk6dKj8LHPnzhXNFi1apDywYlzofo9qN/bu3bvS
XGvWrFE7F1yIG6enTdin9kh6AgAAANBCUFBQxYoVg4ODw8PDa9asWadOnaio
qIiIiGrVqoWEhAQGBvr6+k6bNs3RYaJ8uX///nfffWfbMdu3b69T+RgFc+v9
sWPHSivubdu2mes7efJkqc2mTZtkpjAYDPXq1RMT3b59W3lgxbhK7dGCjT13
7pw0Fw/SdR6kp/3ZofZIegIAAAAAyo/hw4fr1JMfU/ph8iuvvKI8DHPr/e+/
/16aUeYCIWk6Hx8f+ac27Ny5UzQbMmSI8qhKcpXaowUba3wecVZWlqq5oB3S
0/7sUHskPQEAAAAA5cShQ4c8PDxsXtxYvHixaNOgQQPlkcis91u0aCFG69ix
Y6nvFhYWhoeHiwbDhg2Tn6Jr16462R+HKuEqtUcLNvbzzz8XXcLCwlRNBO2Q
ng5hh9oj6QkAAAAAKA+KioqaN2/eokUL8QfbjnzkyBFpSX758mWFXWTW+ykp
KR4eHnq9PiMjo+S7a9euFRMFBQXJz3XhwgVPT882bdoojMccO9ceLXsolWUb
K11i9+qrr6rqBY2Qno6iPENJTwAAAAAAZCxatEgsgdPS0rQYPCIiQqyU161b
p7C9/Hp/4cKFYrSoqKiLFy+avp6amio6+vr67t27V378iRMnihHWr1+vMB5z
7FB7tP6hVJZtbMOGDUWvVatWqeoFjZCejiK/saQnAAAAAABKZGVlBQUFvfPO
OxqNP3r0aLFSHjBggML2ZVbkxFI9MjJSNBs1alRycvKaNWt69+7t5eXVvHnz
H374QX5w6YefYWFhBQUFSjfADDvUHq18KJVlG3vhwgWphJKdna1iY6AN0tOB
5DeW9AQAAAAAQIlevXqJxfKtW7dKvnXu3Ll169bFx8fHxcUlJiZ+++23Fvzq
MyMjQ6/Xi7W5WGsraa/kd475+fkbN26cMmVKTExM//79Z82atXPnToPBUObg
ycnJYuX+/vvvKwpdlp1/c20ByzZ22bJlolefPn00igqqkJ4OpGmGkp4AAAAA
gPIgJSVFrGTFKrjY6zdu3BgwYEBYWFjPnj3HjBnTo0ePmjVripb169dfvny5
2lmk5ymIVbOSxpqu99u2bevh4XHu3Dnrh3L+2qMFG2swGJo2bSq26+jRo9oF
BoVIT8dyto0lPQEAAAAArqWgoKBhw4Z/+9vfir2en5/fpk2bQYMG3bt3z7Tx
zJkzpXuazZ49W9VEaWlpnp6ederUuX//fpmNtVvvS8+DeOmll2wympPXHi3b
2A0bNohevXv31igqKEd6OpyzbSzpCQAAAABwLQkJCb6+vqdOnSr2+scff1yx
YsXt27eX7CI9YlWv16empqqaS7qt3IoVK8psqd16f+jQoSKGHTt22GS0efPm
+fv75+bmWjyCprVHCza2qKioUaNGISEh165d0ygqKEd6OpxTbSzpCQAAAABw
LWfOnPH394+Pjy/5Vs+ePcW62NfX98aNG8XeOnz4sHRt1ejRo1VNd/fu3QYN
GkRGRt68eVO+pUbr/du3bwcEBNStW1fJfecUunPnjjXdtatsWLaxH3/8sapH
HkM7pKczcKqNJT0BAAAAAK7l73//u1j85uXllXxrwoQJYpFbq1atkr/BzM3N
lYob/fr1Uzvjb7/9Fhoa2q1bN/lmGq33Fy9eLMKeM2eOzUe2mHa1Rws29vvv
v/fx8Rk5cqQW8UAt0tMZOM/Gkp4AAAAAACdx586dEydOlNls06ZNMr/4Kyoq
+vHHH3Nyckq+lZaWJhU35s2bZ0F4YlixnJ84caJMG43W+02aNPHz88vOzrb5
yBbTrvaodmNPnTpVtWrV7t27O9VVZ+6H9DTHCdPzodNsLOkJAAAAAHAS69at
q1GjRmBg4NWrV2Wa5ebm1qxZ8/XXX7dgCuk2ZWJJfv78ecuCTE9Pj4yMnD59
urkGVapUef755y0b3JwjR46IsPv27WvbYa2kxZY+VL+x4mypV6/egAEDCgsL
bR4MjEhPc5wzPR86x8aSngAAAAAAZ5CZmdm2bdu33347IiJCLGzFH2Qajx49
OiAg4NKlS2pnSU1N9fb21uv1Sp5JIeOPP/4YNmxYUVFRqe/Gx8evXr3amvFL
ys3NHTJkyO+//27bYa2kxZY+VL+x27ZtW7Vqlc3DgBHpKc850/Ohc2ws6QkA
AAAAcAbXrl07duyY+MP69et1Op2Hh8fhw4dLbSmaeXl5WfCTzIyMjNDQUB8f
nzVr1lgbLlCekJ4AAAAAAMBtPPPMMzqdrk2bNiXfMhgMrVq1evzxxx88eKBq
zB9//LFq1aoNGzY0VzMBoATpCQAAAAAAXNqBAwf0er1Op/vss8+KvfXJJ5+I
t/bv369qwA0bNvj7+w8aNOju3bu2CxMoj0hPAAAAAADg6mJjY3U6XURExL17
94wvXrt2LTg4eODAgaqGmj59elhY2JYtW0xfXLly5dSpU20TK1DOkJ4AAAAA
AMClXb58uWLFijqdzrQE0a9fv9DQ0OvXryscpKCgIDY29rnnnhOjFXurR48e
H3zwgc3CBcoT0hMAAAAAALi6hIQEnU5XoUKFixcvir9+//33er1+5cqVCrtn
Z2e3adOmQYMGS5YsWfZ/li5dmpiYOG3aND8/v127dmkZPuDOSE8AAAAAAODS
8vLyIiIidDpdTEzM/fv3Gzdu3LZtW4V9T548WbduXZ2szMxMTeMH3BjpCQAA
AAAAXF1ycrJUiHjjjTe8vb1//vlnhR07duwoX9kIDg7WNHLA7ZGeAAAAAADA
1T377LNSOWLcuHGOjgXAfyA9AQAAAACASzt48KBer4+IiLh7966jYwHwH0hP
AAAAAADg6tasWZOWluboKACUgvQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIMnNzb169arBYDDX4N69e/aM
BwAAAAAAAIDryszM/PDDD9u2bVu5cmXdn7y8vOrXrz9u3LiMjAzTlqmpqRUq
VLh9+7ajQoXDGQyGByo5OmQAxZHIAAAAAAA7yMnJiYuL8/Pz0+v1rVu3nj59
elJSUnJyckJCQmxsbHh4uLe397Rp06RV59mzZ0NDQxs2bOjoqOEwHTp08PDw
0KlUoUKFWrVqRUdHx8fHp6enO3ojgPKORAYAAAAA2MH+/furV68uVpQvvvji
zz//XLJBfn5+QkKCp6dnXFzcrVu3GjduLBoPHDjQ/qHCSWzevHnSpEnvvvtu
v379IiMjTesSjz/++KhRoyZMmDDRxJgxY2JiYqKjoytVqmRs2b59+9OnTzt6
U4Dyi0QGAAAAAGht/fr1Pj4+er1+2rRp8i2XL18ulplNmjSR1pvr1q2zT4Rw
ct98842xChEUFJSbmyvTWLy7bNmyatWqGS+g2rZtm91CBWAOiQwAAAAAsLnd
u3d7e3uLleOMGTOUtO/cubNxcXrx4kWtw4NLmDdvnvGs6Natm5Iu6enpxnuK
+vn5HTx4UOsgAcgjkQEAAAAAtnXp0qWgoCCxZuzQoYPCLt9++620zKxbt66m
scGFdO3a1ViyWLx4scJeM2bMMPZ64oknNI0QQJlIZAAAAACAbfXo0UOsFvV6
/YkTJxR2KSgo8Pf3F7369++vaWxwFUVFRVWqVDEWH4o9D13Gnj17TG8uxxVT
gAORyAAAAAAA2zpy5Ii0VHz22WdVdWzatKnotWrVKo0Cg2sxnkhCWFiY8o4X
LlwwLVnMmTNHuyAByCORAQAAAAC2NXr0aGmpOH78eFUdo6OjRa9z585pFBhc
i+k94rp3766846FDh0xLFmrPQwA2RCIDAAAAAGyrTp060lJRLDlVdXzxxRcj
IyO1CQqux7J7xAlr1641LVkkJiZqFyQAeSQyAAAAAMCG7t+/7+HhIS0VR40a
papvq1atYmNjNQoMrsXie8QJAwYMMC1Z/PDDD9rFCUAGiQwAAAAAsK1Lly4Z
l4rNmjUzGAzK+0ZFRa1evVq72OBCLL5HnDjlateubezbuHFj7YIEII9EBgAA
AADYVmFhobe3t3HBuGLFCuV9T5w4UVBQoFlocCXz5883nkWq7hH39ddfm14r
lZSUpF2QAOSRyAAAAAAAm2vUqJFxwejl5bVgwYLCwkJHBwUX8/LLLxvPIlX3
iGvfvr2xY0xMjHYRAigTiQwAAAAAsLlhw4bp/lN4eHivXr1WrFhx6dIlR0cH
F2AwGIKDg43nj/J7xCUmJhp7tWrVKjc3V9M4AcggkQEAAAAAWrh69WpgYKDO
jEcffXT48OFbt27Ny8tzdKRwUkePHjWeMMrvEbdhwwY/Pz+pV+fOne/du6dp
kADkkcgAAAAAAI2sXr3a09PTXPlRUrFixf79+1+4cMHRwdrb6dOnd+3atUMb
e/fuvXbtmqM30Vpq7xF38eLFPn36GM8r0b2oqMgOcQKQQSIDAAAAALSzZcuW
gIAA+fKjEBoampaW5uhg7ef8+fN6vb7M3WKNJk2aOHorrWV6j7j58+fnl3Dn
zp2srKyffvppyZIlXbp0kQrd/v7+gwYNEnvY5vHcunVrypQpv/zyi81HBtwY
iQwAAAAA0FROTs7MmTMfffRR+VpZSEjIlStXyhzt9u3bly5dcvXLYAoKCkaM
GNGpU6cO2hCL/cTEREdvpVWK3SOuTIGBgV26dFmwYEF2drZtw7h58+ZPP/00
efLk6tWri4mWLFliw/EB90YiAwAAAADsJjMzc82aNf369YuIiCh11dmrVy9z
fa9duzZixIiaNWtKLX18fBo1atSjR48DBw7YcxNgN8eOHTOeGF5eXl9//fXu
0qSkpBw9evTKlSsalaMrV64sAmjQoMHw4cOlEgolC0A5EhkAAAAA4BCnTp36
4IMPateubVp79PHx+eOPP0o2XrZsWdWqVV955ZVNmzZlZGSkpqbOnz+/RYsW
Uq+XX375999/t/sWQFsffvih8cR4+umnHRVGZmbmnTt3pD9Lp6tDShY5OTnm
3srNzS0oKLD5jC79TGGN9slDlbslLy8vPz9fizBcCIlsikRWyxl2C4kMAAAA
uDTxfX7gwIGm5cdNmzYVa7Nhw4aAgIAvv/yy2Ov3798fPXq01KtGjRqUH93M
K6+8Yjwr4uLiHB3OPzmqZLF48eIGDRqYux6sUaNGMhcMWyYjI8PDw2PNmjW2
HdZutNgnD9XvluTk5CeffPLSpUs2j0RIT09ftGjRHFv79NNPr1+/bsM4SWQj
EtkCzrBbNE1kAAAAAHZQWFhovIJRmDt3rum7586dCwoKEsthc92ff/55qWO7
du20DxZ2YjAYqlatajwrtm/f7uiI/sn+JYuioqIhQ4aEhYWdPHnSXJtKlSq1
bt3atvNmZ2f7+vo2bdrUtsPajRb75KFFu2X48OHVqlU7ePCgzYNp3rx5qXeu
sN7UqVNtFSSJLCGRLeYku0W7RAYAAACg1h9//PHbb7+p7bVp0ybj4nTixImm
b7333ns+Pj7jx4839xiaAwcOGPseOnTIwrjhZEzvEefp6Xnr1i1HR/RP9i9Z
jBgxIigo6MiRIzJtVK3NxaJb5lefpvr06SM2NjU1VeHIdpaXl2cwGMy9a0G9
QuwW429yZajdLUVFRW+88UZwcPCJEydUxVOm7777Tvxr+d+2Nm3atIsXL9oq
SBJZQiLLsG0uu1wiAwAAAFDrzTffHDx4sNpeZ8+eNa5Pi60HX3jhBel18YdS
+4oVgb+/v9Rm5syZFsYNJ2N6j7jmzZs7Opx/sXPJYvbs2WK6rVu3yjdTsjbf
vHnzc889Fx4eXqtWrZCQkKCgoJ49e+7bt0+my/79+8XsMTExquPW3tKlS319
fRs0aHDz5s1SG6itVyQlJVWuXLl3795ltrRgtxQUFLRo0aJOnTpZWVnKe7kH
EvkhiSzLtrlMIgMAAADlQfXq1cViU22v7Oxs4/p0586dpm916tRJev2xxx4z
171JkyZSmxEjRlgSNJzPq6++ajwlxo4d6+hw/sWeJYtDhw55enoOGDCgzJby
a/Nbt261a9dOhD1y5MjMzEzpxV9++eWll14SLw4dOvT+/fvm+jZr1szc458s
ICadOXOmzAVOCokRKlasKJ0bP/30U6ltlNQrCgsLT548mZiYKFpKo3Xr1k1J
ABbslhMnTvj5+XXs2FF5F/dAIrtfItuQTXKZRAYAAADKlYyMDPG1/7PPPlPb
8eeff5aWDGKVkZeXZ/rWt99+GxISEhkZuXnzZnPdRQOp+5w5cyyJ2xHEOnHG
jBlvvfVWP20MHjx448aNjt5KCxW7R9y2bdscHdG/2K1kIVbTjz32WEBAgJJ1
sczavKCgIDo6WsQ8e/bsYm+Jndy7d2/xVt++fc2NvHTpUhteTjx+/Hgxmk2e
1yA9viQ2NtZcA/l6xZEjR4KCgjw9PcUgderUEcmiqmRh2W4ZO3as6JWUlKSq
l0sjkd0ykW3LmlwmkQEAAIByaOHCheI7uUyR0JyVK1dKS4aePXuWfNfwJ3N9
s7KyjGvbXbt2qZ3aUUx/Zq6Rhg0bOnorLZSenm7cCrGuNPdbPPuzW8nio48+
EhNNmjRJSWOZtfmsWbPEOFFRUQ8ePCj57rVr10RfXYmLjY3u3r1buXLlyMhI
c0/mVWXkyJFiLgvuB1uq27dvy7wrX3u8cePGxo0bU1JSpEKoCElVycKy3XL9
+vWAgIDw8PBi/3vFjZHIbpnINmdxLpPIAAAAQDn02muvia/9YrWltmPnzp1F
R71en5aWprbv//zP/0jLjQYNGhQWFqrt7kCpqamrV69eqY3169fbqshjfwsW
LDCWLJ566ilHh/Nv9ilZiNM4IiLC09NT4SWC5tbmd+7cCQ0N1ck+tli6p4HM
jfikgqFNrlizbe1Rnqp7xKktWTy0dLcMGjRI9Fq8eLGqXq6LRHbLRLYz5blM
IgMAAABuz2AwSL99Fl/LVXU8fPiwXq8XHfv06aN20nv37lWvXl1abmzZskVt
dzgn03vEjRkzxtHh/Jt9ShZJSUlils6dOytsb25tnpycLO3DDRs2mOsrdq/U
5uTJk6U2EK+L9LTJ/c3cqfZo2W45cOCAdPWa9Te9dAkkslsmsp1pWnskkQEA
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
ygMrxuLnXEsMBkNUVJQYITQ0VOYCMIndao9qd8vdu3eludasWaN2LrgQN05k
62mUyyQyAAAAAMs8/fTTSgqPQkxMjKODBazVvn17ncpHHphbm48dO1ZKDXM3
KxAmT54stdm0aZPMFAaDoV69eqbPibCAlbXHlJQUKdS4uDjjiyLsUp9gZZ/a
owW75dy5c9JcPB7XvblxIltPo1wmkQEAAAAAbub+/fsKC+Om5MeUfpj8yiuv
KA/D3Nr8+++/l2aUuZhHms7Hx0f+CQs7d+4UzYYMGaI8qpKsrD1Kd2PT6/Wn
T5+WXvn11189PDyysrJKNrZP7dGC3WJ8HnGpYcMhSGQ70yiXSWQAAAAAgJsZ
Pny4zUsWixcvFm0aNGigPAyZtXmLFi3EaB07diz13cLCwvDwcNFg2LBh8lN0
7dpVJ/uTTyWsqT0aDIYqVaqI7m3atDG+OGbMGBFYqe3tU3u0YLd8/vnnoktY
WJiqiaApEtmetMtlEhkAAAAA4E4OHTrk4eGRmJho22GPHDkiLZ8vX76ssIvM
2jwlJUUEqdfrMzIySr67du1aMVFQUJD8XBcuXPD09DQtFFjGmtrjjRs3pN0y
adIk6ZXTp08HBASI3VVqe1W1x+PHj0uDd+7cWXlIlu0Wqcz16quvquoF7ZDI
dqZdLpPIAAAAAAC3UVRU1Lx58xYtWmjxaPWIiAixql23bp3C9vJr84ULF4rR
oqKiLl68aPp6amqq6Ojr67t371758SdOnChGWL9+vcJ4zLHyN9eNGjUS3adO
nfrwz3LBf/3Xfy1YsMBc4zLrFfv27duzZ8/OnTuXL1/epk0bqWTh7e09YcKE
L7/8MiUlReyW8+fPy4xg2W5p2LCh6LVq1SpVvaAREtkhbJjLJDIAAAAAwC0t
WrTI09MzLS1Ni8FHjx4tVrUDBgxQ2L7MOptYVkdGRopmo0aNSk5OXrNmTe/e
vb28vJo3b/7DDz/IDy79nDMsLKzMx9GWycra45EjR+rUqRMUFNSxY0cRz6xZ
s2Qal7lPxDgVK1YMDg4WW1ezZk0xclRUVERERLVq1UJCQgIDA319fadNm2au
u2W75cKFC1JhJDs7W3kvaIdEdggb5jKJDAAAAABwP1lZWWLB+84775R869y5
c+vWrYuPj4+Li0tMTPz2228tuJ4qIyNDr9eLdbRYFytpr+Q3ifn5+Rs3bpwy
ZUpMTEz//v3FYn/nzp0Gg6HMwZOTk8Uq+/3331cUuiwra48P/9yK//f//t/2
7duvXr0q31LVb64tYNluWbZsmejVp08fjaKCKiSyAzlJLpPIAAAAAAAn1KtX
r2rVqt26dcv0xRs3bgwYMCAsLKxnz55jxozp0aNHzZo1xfq0fv36y5cvVzuF
9OwDscJV0ljTtXnbtm09PDzOnTtn/VDW1x6V07r2aMFuMRgMTZs2FXvg6NGj
2gUG5Uhkl+Bsu4VEBgAAAABoKiUlRaw6k5OTTV/Mz89v06bNoEGD7t27Z3yx
oKBg5syZ0v3HZs+erWqWtLQ0T0/POnXq3L9/v8zG2q3NpWc3vPTSSzYZzW1q
j5btlg0bNohevXv31igqqEIiuwpn2y0kMgAAAABAOwUFBQ0bNvzb3/5W7PWP
P/64YsWK27dvL9lFehyqXq9PTU1VNZd0s7gVK1aU2VK7tfnQoUNFDDt27LDJ
aPPmzfP398/NzbXJaPI0rT1asFuKiooaNWoUEhJy7do1jaKCciSyC3Gq3UIi
AwAAAAA0lZCQ4Ovre+rUqWKv9+zZU6xhxVs3btwo9tbhw4elK6ZGjx6taq67
d+82aNAgMjLy5s2b8i01Wpvfvn07ICCgbt26Su4mp9CdO3dsNZQ87eoVlu2W
jz/+WNUjj6EpEtmFONVuIZEBAAAAANo5c+aMv79/fHx8ybcmTJggFqS1atUq
+cvK3NxcqWTRr18/tTP+9ttvoaGh3bp1k2+m0dp88eLFIuw5c+bYfGQ70K72
aMFu+f777318fEaOHKlFPFCLRHYtzrNbSGQAAAAAgKb+/ve/161bNy8vr+Rb
RUVFP/74Y05OTsm30tLSpJLFvHnzLJhUDCuW3hMnTpRpo9HavEmTJn5+ftnZ
2TYf2Q60qz2q3S2nTp2qWrVq9+7dXfSqM/dDIrsWJ9ktJDIAAAAAwDJ37tw5
ceJEmc02bdpk2Q3TpFuKieXz+fPnLQrwYXp6emRk5PTp0801qFKlyvPPP2/Z
4OYcOXJEhN23b1/bDms3WuyTh+p3y9WrV+vVqzdgwIDCwkKbBwNTJHKpXD2R
HzrHbiGRAQAAAACWWbduXY0aNQIDA8XSUqZZbm5uzZo1X3/9dbXjp6ament7
6/V6JU+akPHHH38MGzasqKio1Hfj4+NXr15tzfgliU0eMmTI77//btth7UaL
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
tukU/OrtvffeMw5eo0YNMVeZI8+aNUv35x26xHdOhcEAANzbkSNHpI+SZ599
VlXHpk2bil6rVq3SKDC4FuOJJISFhSnvKL4ymZaz5syZo12QkHCwAAAAnMSd
O3ek36AtXbrU4hEsqD0++eST1atXv3fvnnyzq1evStecSKZOnVrmyKKLdDsv
JZdxAgDKg9GjR0ufI+PHj1fVMTo6WvQ6d+6cRoHBtZjeP7B79+7KOx46dMi0
nKX2PIQFOFgAAABOYuXKlbo/b6Z98+ZNy0awoPb422+/6f78vfakSZOOHj0q
3/jNN980jt+gQQMl47/22muicdeuXZU0BgC4vTp16kifI/PmzVPV8cUXX4yM
jNQmKLgey+4fKKxdu9a0nJWYmKhdkJBwsAAAAJzEc889J75Wvf766xaPYEHt
UXq0jcTb2/uHH36QafzBBx+YfgM8c+ZMmeMnJSWJll5eXpmZmUo3AwDgpu7f
v+/h4SF9iIwaNUpV31atWsXGxmoUGFyLxfcPFAYMGGD6ZUb+mw+sx8ECAABw
Er/99pter9dZdycrC2qP06dPN/1SJ7+s++qrr0wbf/vtt2WOf/36dWmZOXPm
TKWbAQBwU5cuXTJ+iDRr1sxgMCjvGxUVtXr1au1igwux+P6B4pSrXbu2sW/j
xo21CxISDhYAAICTmDJlivTNSnpqjGUsqD0W+zHLwIEDZRofOHDAtPFnn32m
ZIqWLVvq/nzijKJtAAC4r8LCQuk+wJIVK1Yo73vixImCggLNQoMrmT9/vvEs
UnX/wK+//tr0m0xSUpJ2QULCwQIAAHAS7dq1E1+r6tWrZ80gFtQes7KyHnnk
EalLmb+5/vzzz02/BO7cuVPJFP/93/8tGuv1+uzsbEWbAQBwX40aNTJ+jnh5
eS1YsKCwsNDRQcHFvPzyy8azSNX9A9u3b2/sGBMTo12EMOJgAQAAOIOCggLp
EdK9evWyZhzLnnN97ty5CRMmjBw5Mi0tTb7lP/7xD9Pa4+nTp5WMv27dOqn9
V199pTAkAIC7GjZsmO4/hYeHi4+/FStWXLp0ydHRwQUYDIbg4GDj+aP8/oGJ
iYnGXq1atcrNzdU0TjzkYAEAADiN1NRU6cvVtGnTrBnHstqjcj179jSOr/xh
oydOnJC6jBkzxuYhAQBcy9WrVwMDA3VmPProo8OHD9+6dWteXp6jI4WTOnr0
qPGEUX7/wA0bNvj5+Um9OnfufO/ePU2DhISDBQAA4CTmzp0rfb/avHmzNeNo
WnvMycmRLs6UKH92TFFRkZeXl+jyzDPP2DYkAIArWr16taenp7nyo6RixYr9
+/e35h7ILur06dO7du3aoY29e/deu3bN0ZtoLbX3D7x48WKfPn2M55XoLr6Z
2CFOPORgAQAAOI0hQ4ZI37IOHz5szTia1h4XLFhgHLxatWq3b99W3jciIkL3
56/qbBsSAMBFbdmyJSAgQL78KISGhpZ5PxB3cv78eb1eX+ZusYYbPPrN9P6B
8+fPzy9BfB3Kysr66aeflixZ0qVLF6nQ7e/vP2jQILGHi42Wm5ur0TOM+Jnw
Qw4WAACA0+jQoYP0rezs2bPWjKNd7VF806tfv75x8K+//lpV92eeeUbqyK9m
AACSnJycmTNnPvroo/K1spCQkCtXrpQ5msFgEM1cvYAgPm1HjBjRqVOnDtp4
+eWXExMTHb2VVil2/8AyBQYGdunSZcGCBeYeeNeoUSMr77ZdqoyMDA8PjzVr
1th8ZBfCwQIAAHAeDRs2lL503bhxw5pxtKs9Tp8+3Tjy5MmT1XZ//fXXpb7K
7zEOACgnMjMzxaq/X79+0kXyJclUG86fPx8XF9egQYMqVarUqlXL398/LCys
Xbt2ycnJDx48sOdWwD6OHTtmPDG8vLy+/vrr3aVJSUk5evTolStXyvzFbqVK
lVq3bm3zOLOzs319fZs2bWrzkV0IBwsAAMB5GH93ZuVCSaPa49mzZ413enzr
rbcsGOHtt9+Wun/zzTe2igoA4H5OnTr1wQcf1K5d27T26OPj88cff5RsvGjR
osDAwJEjRx49elSqWhgMhi1btkRGRopeUVFRYjS7bwG09eGHHxpPjKefftr6
AdWWs7Kzs3NycpS0lO5bmJqaamloLs/hB+vhn9dXi6/HZTbjYAEAALcn3dwm
ICDAynG0qD0WFhY+++yz0ph9+/a17I7fI0aMkEb46quvbBIVAMCN5efnDxw4
0LT8uGnTpmJt1q5d6+/vv3///pLdjx075uPjI3rVqFHj999/t0fEsJdXXnnF
eFbExcVZP6DCctbmzZufe+658PDwWrVqhYSEBAUF9ezZc9++fTJdxMkpgoyJ
ibE+yGLS09MXLVo0x9Y+/fTT69ev2zBORx0so6SkpMqVKyv5SqzdwQIAAHAG
hYWF0reymjVrWjmUFrXHwYMHG694tPhRg+ILpzTI+vXrbRIVAMC9iQ/HFi1a
GD/U5s6dW6yBdBfiGjVqlHqr5FatWkkd3377bbvEC3swGAxVq1Y1nhXbt2+3
fswyy1m3bt1q166dmG7kyJGZmZnSi7/88stLL70kXhw6dOj9+/fN9W3WrJm5
q3at0bx5c502pk6daqsgHXKwHv75T8fJkycTExNFS2nqbt26KRlco4MFAADg
DG7fvi19NfrLX/5i5VA2rz0uWbJEGs3K/1s9ceJEaZzly5dbHxUAwLWI5fxv
v/2mttemTZuMH2ric8T0LYPBIP1kQFdaWVIwXjb5xBNPWB43/n97dx4T1fU2
cHxmUEAa2bEoBGRRY4vtH1VCm2oDtqZRioloTBXhp21c61bEEJVKI7YaMU1d
GlIMaSktKG5B20oirVRpXXGNRdPFauki4kYREBjfE0/eCZGZy8zcWRjm+/nD
0OEsz3Bu5z7zzNxze5mu+weKA+DevXvqx1QuZ7W1tSUlJYnpNm3a9MSvxEEo
ci3N46tCTHUvLCwUDT788EP1cXZVXV0t/o9YYWt5eXk3btywVZCOX6yzZ8/6
+fnJV4aoqCjDp+dm1h7ttFgAAAC9gUhrZWoUERGhcijb1h4rKipE/qbVavPz
81UOtWzZMhnVV199pXIoAIDLmT179vz58y3t9dtvvxlOagUFBU/8NjExUTyu
0+lqa2u79zVc7Dlp0iQrg0bv03X/wDFjxthkTOVy1saNGzWP9w41uiN3Q0OD
6C4aVFZWGu3e3Nzs7+8fGRlp9ZUjrsvxi3X79u3y8vKqqqo///xT/Ocvv/xi
Ue3RnRcLAAC4A/HWSaRGfn5+KsexYe3xxx9/HDBggKen55dffqkyqkeP33XK
qPbv369+NACAaxkyZMjHH39saa9bt24ZTmrdazudnZ3y9rhG+44YMUJ25FtM
fcmUKVMMh0RWVpZNxlQoZ4m0KiQkRKN4JfKkSZOUa2vy49eDBw/aIFaX4uDF
6s7S2uMjN14sAADgDuSH5jqdTq/XqxnHVrXHn3/+OTAw0NfX9/Dhw2riMTDk
n6a+GAAA6KsuX74sXv937txpacdLly7Jc4c4S7a0tJjf8ejRo7JjUFDQ/fv3
LZ3Xidrb2z/44IO33nrrf/Yxf/788vJyZz9LKz2xf6CtCkQK5ayysjI5165d
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
Qgp3Szl06JBsk5SUpDyRONQHDBjw7LPPqgrXvTms9mjdYl2+fNnT09PSuQAA
ABypoKBAJEgi1WlqanJ2LDYzZcoU8aRef/11ZwcCAOgjut5YLSUlxWibzs7O
gQMHqvnWE9yEQjlLfigsKOw+umPHDtlm4cKFyhNt3rxZNNu+fbuqcN2bw2qP
1i3WgQMHRo0aZelcAAAAjnTv3j0fHx+LLrvu5e7cuePl5SWe0a5du5wdCwCg
7wgJCREnF39//+rqaqMNTpw4YahPfvvttw4ODy5EoZyVlZUlD6GDBw+a6p6b
myvb7N69W2EWvV4fGxsr5jJzyxoY5Zjao9WLNXfu3HfeeceiLgAAAI63bNky
kSPFx8c7OxDbkJ8ajxw5sqOjw9mxAAD6DnF+8fHxOXHihNHf6vX6cePGybLD
tGnTHBwbXItCOeuHH36QR5HC99/mzJkjGnh6eirv8ldZWSmaLViwQG247s0x
tUfrFqu9vT04ONjUpyEAAAC9R0NDg6+vr0h4vvvuO2fHolZLS0toaKh4LuXl
5c6OBQDQ16xatUqcMbdv397c3Nz18ba2tpUrVxquyFZ/y2z0bcrlrPj4eHEg
TZw40ehvHz58+PTTT4sGixYtUp5l8uTJytduwxyOqT1at1jbtm1jM08AAOAq
8vPzRcIzfvx4Zwei1pYtW8QTSUxMdHYgAIC+qaysbMyYMf7+/ikpKTk5OZs3
b166dKm8xUxsbGxFRYWzA4QLUC5nVVVV6XQ6rVZ7+fLl7r8tKSkRB5ufn199
fb3CFNevX/fw8Bg7dqwNwnVvFtUeL168KGuPycnJ5k9h3WI1NjYGBQXxmgMA
AFxFR0eHeCfl6nsk3rx5Mzg42Nvb++rVq86OBQDQlx0/fnzr1q2ZmZlTp05N
S0vLzs7++uuv29ranB0XXEOP5SxxdImsLDo6+saNG10fr6mpEX29vLyOHDmi
PMWaNWvECKWlpTYI1731uFhHjx79/vvvKysri4qKxo4dK2uP/fv3X7169f79
+6uqqsRi/fHHHwojWLFYInWfMGEC97QCAACupa6uTiRXoaGhd+7ccXYsVpo+
fbrI3AoKCpwdCAAAgEnmfJWutLQ0MjJStFy+fHlZWdkXX3yRlpbWr1+/MWPG
HDt2TLmvvC570KBB1MPV63Gx/Pz8nnrqqcDAQPE3Dw8Pj4qKio6OjoiIGDx4
cHBwsK+vr5eXV15enqnu1i3W4sWL4+LilDf8BAAA6IVEZqvRaGbOnOnsQKyx
Z88e1w0eAAC4DzMv421tbS0vL3///fdFejNnzpyNGzdWVlbq9foeO8qMbtWq
VbYI1t1ZdM21FaxbrI8++qihocFOIQEAANjV+vXrRf4j/nV2IJY5d+6cyAzH
jRsnsnRnxwIAAKDE3uUskRHpdLpr167Zbwr3wWIBAADYXHZ2tlar3blzp7MD
MVd9fX14eHhCQsK9e/ecHQsAAEAP7FrOkrc7SUlJsdP47obFAgAAsIdNmzYN
GDCgpqbG2YH07MGDB88991xycnJTU5OzYwEAAOiZXctZCxcu1Gg0hw4dstP4
7obFAgAAsJOTJ0/W1dU5O4qe6fX6b775xpy9jwAAAHoD+5Wz7t+/P3DgwJiY
GFIjW2GxAAAAAAAA4ELsV8765JNPNBpNfn6+PQZ3TywWAAAAAAAAXIj9yllx
cXHe3t63bt2yx+DuicUCAAAAAACACwkICEhMTLT5sGfPntVoNBkZGTYf2Z2x
WAAAAAAAAHAha9euLS4utvmwTU1NCxYs+P33320+sjtjsQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAgPv4P7PZ4dU=
     "], {{0, 120.5}, {437., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{288., 288.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{460.9999999999997, Automatic},
   ImageSizeRaw->{437., 120.5},
   PlotRange->{{0, 437.}, {0, 120.5}}], ";"}]], "Input",
 CellChangeTimes->{
  3.9290027682249985`*^9},ExpressionUUID->"525941ce-65eb-4237-8f27-\
930775a0a070"],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<S0\>\"", "\[IndentingNewLine]", 
 RowBox[{"S0", "=", 
  RowBox[{"Tr", "[", 
   RowBox[{"\[Sigma]0", ".", "\[Rho]"}], 
   "]"}]}], "\[IndentingNewLine]", "\"\<S1\>\"", "\[IndentingNewLine]", 
 RowBox[{"S1", "=", 
  RowBox[{"Tr", "[", 
   RowBox[{"\[Sigma]1", ".", "\[Rho]"}], 
   "]"}]}], "\[IndentingNewLine]", "\"\<S2\>\"", "\[IndentingNewLine]", 
 RowBox[{"S2", "=", 
  RowBox[{"Tr", "[", 
   RowBox[{"\[Sigma]2", ".", "\[Rho]"}], 
   "]"}]}], "\[IndentingNewLine]", "\"\<S3\>\"", "\[IndentingNewLine]", 
 RowBox[{"S3", "=", 
  RowBox[{"Tr", "[", 
   RowBox[{"\[Sigma]3", ".", "\[Rho]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"S0", " ", "\[Sigma]0"}], "+", 
      RowBox[{"S1", " ", "\[Sigma]1"}], "+", 
      RowBox[{"S2", " ", "\[Sigma]2"}], "+", 
      RowBox[{"S3", " ", "\[Sigma]3"}]}], ")"}]}], "//", "FullSimplify"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.9290018943282347`*^9, 3.9290019318194036`*^9}, {
  3.929002066017505*^9, 3.929002074772062*^9}, {3.9290021207839317`*^9, 
  3.929002155457532*^9}, {3.929002192043496*^9, 3.92900222125908*^9}, {
  3.9290023137456207`*^9, 3.9290023610252504`*^9}, {3.929002623218898*^9, 
  3.9290026967079177`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"d1687a90-96e3-419a-9a9e-7ba94750d0c2"],

Cell[BoxData["\<\"S0\"\>"], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094095904765`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"5c0ba26b-e2de-4ecf-bad7-f2624017aa43"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Alpha]", "2"], "+", 
  SuperscriptBox["\[Beta]", "2"]}]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094096065874`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"194a6c7a-4c7e-4120-be79-d7bea793076a"],

Cell[BoxData["\<\"S1\"\>"], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094096065874`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"c0393f71-678b-46a4-aea0-98515bf4b3df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}]}]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094096065874`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"68c23834-d990-4e39-9087-362d61ece6f3"],

Cell[BoxData["\<\"S2\"\>"], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094096065874`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"64e45b49-26e1-4a41-8fe1-e504d0e78064"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}]}]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094096223497`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"37514ee8-1f8e-4eac-83b5-8b4d5f3f1e1c"],

Cell[BoxData["\<\"S3\"\>"], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094096225376`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"5b66520e-e00f-494f-814c-10ba1afcabff"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Alpha]", "2"], "-", 
  SuperscriptBox["\[Beta]", "2"]}]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094096225376`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"792743ea-3934-4287-bd54-ae5fdc9e8515"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[Alpha]", "2"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", 
       " ", "\[Beta]"}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
       "\[Beta]"}], 
      SuperscriptBox["\[Beta]", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
   3.9290026742258606`*^9, 3.9290026970285687`*^9}, 3.9290087536157527`*^9, 
   3.9290094096225376`*^9},
 CellLabel->
  "Out[36]//MatrixForm=",ExpressionUUID->"446f7a99-ad8f-4069-89f2-\
e317b82cc20f"]
}, Open  ]],

Cell["\<\
But what waveplate configurations do we need to do these measurements in the \
lab? Suppose I have a hwp, qwp, and linear polarizer in series. Can I do the \
same measurements?

Equivalent to measuring the Stokes parameters as shown above is measuring the \
overlap of the unknown state with V, D, and R, the results of which together \
fully quantify the state. \
\>", "Text",
 CellChangeTimes->{{3.9290025089742193`*^9, 3.9290025197510777`*^9}, {
  3.929002911320151*^9, 3.9290029226132245`*^9}, {3.9290073408853245`*^9, 
  3.929007371606324*^9}, {3.9290083561582575`*^9, 3.9290083668468723`*^9}, {
  3.9290084101080723`*^9, 
  3.92900848603613*^9}},ExpressionUUID->"ff35358e-c139-40ed-b6f6-\
136388b109e3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], ";", 
  RowBox[{"A", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[ImaginaryI]"}], "}"}]}]}], ";", 
  RowBox[{"R", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "\[ImaginaryI]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";", 
  RowBox[{"H", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", "\"\<project on V\>\"", "\[IndentingNewLine]", 
 RowBox[{"Refine", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"V", ".", "\[Chi]"}], "]"}], "2"], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"\[Phi]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Alpha]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Beta]", "\[Element]", "Reals"}]}]}]}], 
  "]"}], "\[IndentingNewLine]", "\"\<project on D\>\"", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Refine", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"d", ".", "\[Chi]"}], "]"}], "2"], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{
      RowBox[{"\[Phi]", "\[Element]", "Reals"}], "&&", 
      RowBox[{"\[Alpha]", "\[Element]", "Reals"}], "&&", 
      RowBox[{"\[Beta]", "\[Element]", "Reals"}]}]}]}], "]"}], "//", 
  "TrigExpand"}], "\[IndentingNewLine]", "\"\<project on R\>\"", "\
\[IndentingNewLine]", 
 RowBox[{"Refine", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"L", ".", "\[Chi]"}], "]"}], "2"], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"\[Phi]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Alpha]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Beta]", "\[Element]", "Reals"}]}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.929008490059307*^9, 3.9290085701118383`*^9}, {
  3.929008762044634*^9, 3.9290087621643767`*^9}, {3.929008800507848*^9, 
  3.929008813638338*^9}, {3.929009012457837*^9, 3.9290090274467287`*^9}, {
  3.9290094950786276`*^9, 3.929009503239914*^9}, {3.929009551454009*^9, 
  3.9290095535065393`*^9}, {3.929009583979103*^9, 3.9290095874926233`*^9}, {
  3.929010647929332*^9, 3.929010671409264*^9}, {3.929010755448107*^9, 
  3.929010755677887*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"10b5173d-63b5-4608-9e51-6a511598a102"],

Cell[BoxData["\<\"project on V\"\>"], "Output",
 CellChangeTimes->{3.929009587812764*^9, 3.929010678461647*^9, 
  3.929010756341714*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"af27fad5-1d3a-4d1d-9115-0ac8d4d4c47d"],

Cell[BoxData[
 SuperscriptBox["\[Beta]", "2"]], "Output",
 CellChangeTimes->{3.929009587812764*^9, 3.929010678461647*^9, 
  3.929010756341714*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"d2f7e8e7-e37e-4125-82f5-af6894865ea9"],

Cell[BoxData["\<\"project on D\"\>"], "Output",
 CellChangeTimes->{3.929009587812764*^9, 3.929010678461647*^9, 
  3.9290107563584356`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"2b7d22e9-b504-42be-aa8d-68f05d804cd8"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    FractionBox["\[Alpha]", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Beta]"}], 
     SqrtBox["2"]]}], "]"}], "2"]], "Output",
 CellChangeTimes->{3.929009587812764*^9, 3.929010678461647*^9, 
  3.9290107563584356`*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"bfbd4298-ab16-4788-8541-d38f7972fc3e"],

Cell[BoxData["\<\"project on R\"\>"], "Output",
 CellChangeTimes->{3.929009587812764*^9, 3.929010678461647*^9, 
  3.9290107563584356`*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"4f07230f-c99e-45be-ad1b-27c6a3b7a4c6"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    FractionBox["\[Alpha]", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Beta]"}], 
     SqrtBox["2"]]}], "]"}], "2"]], "Output",
 CellChangeTimes->{3.929009587812764*^9, 3.929010678461647*^9, 
  3.9290107563584356`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"c6cd3a69-59d6-4a97-a07e-e17cbaf03d5e"]
}, Open  ]],

Cell["\<\
Matrix projectors for the six pairs of states (an over-complete set of \
measurements):\
\>", "Text",
 CellChangeTimes->{{3.92900915932279*^9, 3.9290091765351496`*^9}, {
  3.9290106190062885`*^9, 
  3.9290106356440406`*^9}},ExpressionUUID->"2c09b19a-a54f-4a48-8133-\
516614754782"],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<V projector\>\"", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projV", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"V", ",", "V"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"projV", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", "\"\<H projector\>\"", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projH", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"projH", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", "\"\<A projector\>\"", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projA", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"A", ",", "A"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"projA", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", "\"\<D projector\>\"", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projD", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"d", ",", "d"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"projD", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", "\"\<L projector\>\"", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projL", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"L", ",", "L"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"projL", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", "\"\<R projector\>\"", "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projR", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"R", ",", "R"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"projR", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.9290091799944525`*^9, 3.9290092715907445`*^9}, {
  3.9290095171933303`*^9, 3.929009529492875*^9}, {3.9290095980937395`*^9, 
  3.929009605472627*^9}, {3.929010686216405*^9, 3.929010751089835*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"3f37fddd-1901-4f70-9246-5e4e648d2291"],

Cell[BoxData["\<\"V projector\"\>"], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.9290107595137215`*^9}},
 CellLabel->
  "Out[182]=",ExpressionUUID->"5fe4da27-1792-410b-9e9c-4786e988ff8d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.9290107595137215`*^9}},
 CellLabel->
  "Out[184]//MatrixForm=",ExpressionUUID->"c0896a87-fc7c-4c3c-8a5e-\
dc26ebebc7b3"],

Cell[BoxData["\<\"H projector\"\>"], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.9290107595295906`*^9}},
 CellLabel->
  "Out[185]=",ExpressionUUID->"dbf13612-e1f9-4734-9a99-671b03a1f6f7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.9290107595295906`*^9}},
 CellLabel->
  "Out[187]//MatrixForm=",ExpressionUUID->"2ac5e5c8-fe55-40d6-9ba3-\
182897cf5f54"],

Cell[BoxData["\<\"A projector\"\>"], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.9290107595295906`*^9}},
 CellLabel->
  "Out[188]=",ExpressionUUID->"ca0626b9-5fb9-4ca8-94b7-9a846b7f0983"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.9290107595295906`*^9}},
 CellLabel->
  "Out[190]//MatrixForm=",ExpressionUUID->"a5c4d43b-5fff-41dc-80c9-\
6aee9eea3b00"],

Cell[BoxData["\<\"D projector\"\>"], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.929010759545429*^9}},
 CellLabel->
  "Out[191]=",ExpressionUUID->"5e710ff7-072f-441e-94cb-bc8d4f413c00"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.929010759545429*^9}},
 CellLabel->
  "Out[193]//MatrixForm=",ExpressionUUID->"f562b1b6-08e1-457e-bd56-\
f2e4637193c8"],

Cell[BoxData["\<\"L projector\"\>"], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.929010759545429*^9}},
 CellLabel->
  "Out[194]=",ExpressionUUID->"077cc21b-c607-4fed-a76f-d180662ba842"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["\[ImaginaryI]", "2"]},
     {
      FractionBox["\[ImaginaryI]", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.929010759545429*^9}},
 CellLabel->
  "Out[196]//MatrixForm=",ExpressionUUID->"79f59acb-00bc-4ce3-b251-\
8c138514b7d7"],

Cell[BoxData["\<\"R projector\"\>"], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.929010759561244*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"db09b502-4e46-418b-b933-9e17e9ddafe9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", "2"]}]},
     {
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", "2"]}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9290091926587505`*^9, 3.9290092719536495`*^9}, 
   3.9290094265579004`*^9, 3.92900953145121*^9, 3.9290096058371477`*^9, {
   3.9290107326878147`*^9, 3.929010759561244*^9}},
 CellLabel->
  "Out[199]//MatrixForm=",ExpressionUUID->"9bd54ca1-31e3-4070-8ad3-\
b5822461dfab"]
}, Open  ]],

Cell["Verify that the projectors act as expected:", "Text",
 CellChangeTimes->{{3.9290092802152524`*^9, 
  3.929009295849236*^9}},ExpressionUUID->"57b61580-b0a3-49e5-9b79-\
5415f6428e8d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Tr", "[", 
  RowBox[{"projV", ".", "\[Rho]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tr", "[", 
   RowBox[{"projD", ".", "\[Rho]"}], "]"}], "//", 
  "ExpToTrig"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tr", "[", 
   RowBox[{"projL", ".", "\[Rho]"}], "]"}], "//", "ExpToTrig"}]}], "Input",
 CellChangeTimes->{{3.929009300845251*^9, 3.9290093051039753`*^9}, {
  3.9290094298388195`*^9, 3.9290094661031275`*^9}, {3.9290095359480247`*^9, 
  3.929009536207907*^9}, {3.9290096098692713`*^9, 3.9290096279285955`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"08258739-9e1c-4462-9404-e9e1b847d364"],

Cell[BoxData[
 SuperscriptBox["\[Beta]", "2"]], "Output",
 CellChangeTimes->{
  3.929009305673501*^9, {3.9290094376548557`*^9, 3.9290094670442038`*^9}, 
   3.929009536669611*^9, {3.929009610953263*^9, 3.929009628873499*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"0835f400-f25c-44e1-a8d4-e5c1f8522d36"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[Alpha]", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["\[Beta]", "2"], "2"], "+", 
  RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.929009305673501*^9, {3.9290094376548557`*^9, 3.9290094670442038`*^9}, 
   3.929009536669611*^9, {3.929009610953263*^9, 3.929009628873499*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"dbf42e33-3f69-4c6b-a4aa-31012228a6bb"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[Alpha]", "2"], "2"], "-", 
  FractionBox[
   SuperscriptBox["\[Beta]", "2"], "2"], "+", 
  RowBox[{"\[ImaginaryI]", " ", "\[Alpha]", " ", "\[Beta]", " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.929009305673501*^9, {3.9290094376548557`*^9, 3.9290094670442038`*^9}, 
   3.929009536669611*^9, {3.929009610953263*^9, 3.929009628873499*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"9c20311a-be86-42c6-b11a-e16630a801cc"]
}, Open  ]],

Cell["\<\
By inspection the V projector is just a linear polarizer oriented to transmit \
vertically polarized light, as expected. The others are not described by \
single elements. We want to be able to express each of these, up to an \
irrelevant overall phase, by a fixed linear polarizer preceded by a quarter \
and half waveplate which can have any angle wrt vertical\
\>", "Text",
 CellChangeTimes->{{3.9290096559042573`*^9, 3.9290096890179543`*^9}, {
  3.929009735991573*^9, 3.929009815915621*^9}, {3.9290098664863186`*^9, 
  3.9290098806802397`*^9}},ExpressionUUID->"70dfff89-d3f3-408f-ba24-\
32f7476f0898"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"projV", ".", 
  RowBox[{"QWP", "[", "0", "]"}], ".", 
  RowBox[{"HWP", "[", "0", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Tr", "[", 
  RowBox[{"projV", ".", 
   RowBox[{"QWP", "[", "0", "]"}], ".", 
   RowBox[{"HWP", "[", "0", "]"}], ".", "\[Rho]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9290097040319242`*^9, 3.92900972596537*^9}, {
  3.929009893949468*^9, 3.929009938677467*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"71ac0ca7-ed5e-4899-892f-4cba79c2771a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[ImaginaryI]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.929009726352192*^9, {3.9290099043307447`*^9, 3.9290099398743196`*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"b29f3b21-0d69-456d-963f-58b945e9b31f"],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  SuperscriptBox["\[Beta]", "2"]}]], "Output",
 CellChangeTimes->{
  3.929009726352192*^9, {3.9290099043307447`*^9, 3.9290099398743196`*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"b742aee2-916a-4461-8387-8269301a283f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tr", "[", 
  RowBox[{"projV", ".", 
   RowBox[{"QWP", "[", "0", "]"}], ".", 
   RowBox[{"HWP", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "\[Rho]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9290108425765333`*^9, 3.929010845186144*^9}, {
  3.9290109018752103`*^9, 3.929010914851771*^9}, {3.929011097496689*^9, 
  3.9290110981008816`*^9}, {3.929011347710602*^9, 3.929011350026425*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"b2ac064e-5f88-4316-a0e0-1b6d24c117bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
  "\[Beta]"}]], "Output",
 CellChangeTimes->{
  3.929010845797537*^9, {3.9290109068983765`*^9, 3.929010915270792*^9}, 
   3.9290110986523247`*^9, 3.9290113507526045`*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"3fec88c7-5640-419b-8121-f6f867b27db5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tr", "[", 
  RowBox[{"projV", ".", 
   RowBox[{"QWP", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", 
   RowBox[{"HWP", "[", "0", "]"}], ".", "\[Rho]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9290109244614034`*^9, 3.92901094859534*^9}, 
   3.9290113600540266`*^9},
 CellLabel->
  "In[217]:=",ExpressionUUID->"d191ee4c-5c42-4679-a8ee-7cb871bae28f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}], "-", 
  SuperscriptBox["\[Beta]", "2"]}]], "Output",
 CellChangeTimes->{{3.929010925052351*^9, 3.9290109488954554`*^9}, {
  3.929011352508611*^9, 3.9290113604297976`*^9}},
 CellLabel->
  "Out[217]=",ExpressionUUID->"b8cc2b12-c470-43e0-a8e9-b025b291a74d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tr", "[", 
  RowBox[{"projV", ".", 
   RowBox[{"QWP", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", 
   RowBox[{"HWP", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "\[Rho]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9290113703839316`*^9, 3.9290113719728947`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"41a26e5b-891d-4861-93d8-046ff1b0a78c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[Beta]", "2"]}]}]], "Output",
 CellChangeTimes->{3.9290113723321285`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"1f41ac35-832b-42dc-ab48-f71df36f8fc4"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929011261437961*^9, 
  3.9290112630349417`*^9}},ExpressionUUID->"262d2138-1767-46de-901f-\
8dd0f103bbb6"],

Cell[CellGroupData[{

Cell[BoxData["projA"], "Input",
 CellChangeTimes->{{3.9290108271851487`*^9, 3.9290108290322647`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"b8338142-5c43-4ba2-890a-6406534b95ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9290108294161835`*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"22c038f6-66ca-47ee-89e5-b622bfaaeade"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HWP", "[", "\[Theta]", "]"}], ".", 
  RowBox[{"QWP", "[", "\[Phi]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Tr", "[", 
    RowBox[{"projV", ".", 
     RowBox[{"QWP", "[", "0", "]"}], ".", 
     RowBox[{"HWP", "[", "0", "]"}], ".", "\[Rho]"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.9290099471302*^9, {3.9290100222963524`*^9, 3.929010105581338*^9}, {
   3.929012831724575*^9, 3.9290128387344975`*^9}, {3.9290156136982007`*^9, 
   3.92901561467417*^9}},ExpressionUUID->"8acc8d31-3e3f-4a31-bcdf-\
b974ae0c4cea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], "+", 
           RowBox[{"2", " ", "\[Phi]"}]}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], "+", 
            RowBox[{"2", " ", "\[Phi]"}]}], ")"}]}]]}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.929010024172139*^9, 3.9290101062928057`*^9}, 
   3.929010866407362*^9, 3.929012839025767*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"9e241b4a-056f-4e0e-8a8d-d282505ed9e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["V"], "Input",
 CellChangeTimes->{3.9290125496839843`*^9},
 CellLabel->
  "In[219]:=",ExpressionUUID->"52f66211-01da-4be6-96ac-d951c42a5083"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.9290125506980085`*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"1cf2b559-e095-42a5-9d28-85071e2f0618"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HWP", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "V"}]], "Input",
 CellChangeTimes->{{3.9290125550988193`*^9, 3.9290125616479673`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"638da281-e608-450c-ab64-761e52b5441a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.9290125620569763`*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"dac10e72-5659-4431-93da-c8ee9c68080d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HWP", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "H"}]], "Input",
 CellChangeTimes->{{3.9290125693900204`*^9, 3.929012569728706*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"58d1ef48-c6c7-45ed-b1ec-5e5eb024b106"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.9290125705107875`*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"9d21f1c3-7bdd-41f5-8d1c-1bf823f5bbbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HWP", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "d"}]], "Input",
 CellChangeTimes->{{3.9290125766858563`*^9, 3.929012580226632*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"c56a37c9-a0fa-49ca-8f54-bc34235366cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox["1", 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.9290125774304914`*^9, 3.929012580457049*^9}},
 CellLabel->
  "Out[223]=",ExpressionUUID->"c335245e-40b9-4634-bd94-9f66225c7f16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HWP", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "A"}]], "Input",
 CellChangeTimes->{{3.929012584501378*^9, 3.929012585021225*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"c1955a14-6960-490e-b6c3-e12a451fe900"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}], ",", 
   FractionBox["1", 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{3.92901258537523*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"c9b827f6-cf53-4b50-85c3-b10d94a75581"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929009830738967*^9, 3.9290098398825397`*^9}, {
  3.929009915347909*^9, 
  3.9290099192463536`*^9}},ExpressionUUID->"e1c40354-6620-494a-92e9-\
51f66ebef092"],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  SuperscriptBox["\[Beta]", "2"]}]], "Output",
 CellChangeTimes->{3.9290098406476974`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"673516af-8bb3-4048-8860-02b077825a35"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["single qubit (pure) state tomography - method 2:", "Subsection",
 CellChangeTimes->{{3.9290015360531216`*^9, 3.929001552190325*^9}, {
  3.929002289908863*^9, 3.929002306254224*^9}, {3.929007285850469*^9, 
  3.9290073272717423`*^9}},ExpressionUUID->"05a63e65-2d43-47fd-8a11-\
a1b7f4550ccb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Phi]", ",", "\[Gamma]"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", "=", 
   RowBox[{"(", GridBox[{
      {"\[Alpha]"},
      {
       RowBox[{"\[Beta]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]star", "=", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"\[Beta]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"\[Chi]", ",", "\[Chi]star"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Rho]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LP", "=", 
    RowBox[{"(", GridBox[{
       {"0", "0"},
       {"0", "1"}
      }], ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "linear", " ", "polarizer", " ", "with", " ", "vertical", " ", 
    "transmission"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]0", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]3", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]2", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"-", "\[ImaginaryI]"}]},
      {"\[ImaginaryI]", "0"}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]1", "=", 
   RowBox[{"(", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.928961928066825*^9, 3.928962066303738*^9}, {
   3.92896214756013*^9, 3.9289621631663904`*^9}, {3.928962242763503*^9, 
   3.92896224613326*^9}, {3.928962282225876*^9, 3.928962291500073*^9}, {
   3.928962373231205*^9, 3.9289623943740273`*^9}, 3.92896246828109*^9, {
   3.9289629585886126`*^9, 3.9289629644667177`*^9}, {3.9289636206871557`*^9, 
   3.9289636214246016`*^9}, {3.9290018056203265`*^9, 
   3.9290018854827952`*^9}, {3.92900194056503*^9, 3.9290020346656017`*^9}, {
   3.9290021021098285`*^9, 3.929002110482586*^9}},
 CellLabel->
  "In[486]:=",ExpressionUUID->"694069e8-7ae2-4412-9f7b-eeb789f59643"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[Alpha]", "2"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", 
       " ", "\[Beta]"}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
       "\[Beta]"}], 
      SuperscriptBox["\[Beta]", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9290020350653477`*^9, 3.929002111126708*^9, 
  3.9290023374624767`*^9},
 CellLabel->
  "Out[490]//MatrixForm=",ExpressionUUID->"0c988e81-2208-4bc7-bc09-\
4d0ea6e95a0f"]
}, Open  ]],

Cell["\<\
Reconstruct the state by expansion onto the Pauli matrices, where the \
coefficients are the Stokes parameters\
\>", "Text",
 CellChangeTimes->{{3.929002442624695*^9, 3.9290024695768204`*^9}, {
  3.9290026034736366`*^9, 
  3.9290026187938843`*^9}},ExpressionUUID->"71e4a5ff-c3aa-44a3-bac1-\
6425a889426a"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
y5Q8LiKLFi2i3kExhvPhtH6k2N7f358OoU4kfYvKx/m0HvfxKNClcZINRMuX
L6dhil6kSIxmbZr6afVKI5XMopUCXRoHaGyhkYHPLBQe8HLr1q1bcnKyfB4Y
dzG5qpQG1YhBaDVBERFdi1odVTp/KimtHfjrNA7LnEFg+dt1NAb9XUmUuXPn
5suXj+ZWmvIoBOKv//nnn1RKdHWa3dauXevyWApi5RsPQ8GDhox5bJlSLVq0
cHceI4paTzvUNlgJubQqFBk6lzOFHPZ/OxEtQilC++677zZv3kwLOmonlICW
eCNGjFASnunsiS6zx4agHTt2UHT0xhtvUP1S22Nv0cpaeB4WLFjgnAf+p/YJ
EyZQfOiymVFTZGOF/Uk7HzJkCA0jNEpT5EmTOHW3Nm3asJSvvvpqamqqx8LU
0CpE9S9tDVJ/9ensR9okJCSMGjUqZ86cFIrTGnzjxo0URfz999+bNm2idTpV
98KFC+2elvnKAw8hjVzIiKF2phPVuuzuoxcLhi46g0NG84ysp7VYoaVp6NFG
T1KMnhhJ8xyhPOoTMijZzRpRBY4MeurFW9m2Wjiqh+byd9kpqH06p6S+7JzS
+SOjAhuVd8dwnw4phbDsghRkaNt7nDFjBj+kQYMGMksth2GT5v0aNWqcOnXK
IRmPB6iRO5/k5s2bFy9eXL9+fdmyZfl1K1asuGXLlnPnzqWlpTmkv3r16rx5
82hiZSmLFy8+f/58urWHDx+yBDTV+vn50Xji8re5Cd0RRSA2p0mTxpPY2NjT
p0/TCWnOZeeX38ebOHEiS9ahQ4cHDx44J6D89+nTh2Iel6PTV199RQPXzp07
XZ6cssFO/uyzz/JhRIaQvUe7ATViEBr0ypQpY3vypxDpoMRkZGS8/vrr9C4F
YBRqujyD2PLX0xiEdCWdKHt9+/a1PXm+6759+1ymodUH6xqTJ092fpdqPOFf
vI1RHSX8N81/fZaehCqFnZ9qOcGJzBcihBe1nnaoebDSf2m17t27d+3atSNH
jlDAw4cFWoHScoY60Zo1axz+KE9doFevXnz0kP9sif6eSNmj0Xv//v1Dhw7l
2aPmSgNR4cKF2V82qVXQMpO9Rc3YYYDSnwe65evXrx8/fpzmULYus/0bKNJi
UL6ZtW3blv756NGjl156qXXr1g6f0aLgsFmzZiwlrU1cXp3T3Cr09y/Nl9ZZ
fTr7kTaHDx8uVaoUnZP+SyG9c4Jdu3bRbDhp0iT5Zb7ywEN/IxcyYmib6YSM
3nbZ6MVSoYvO4NCue0bW01q83tK09WhDJym7iBhJzxyhJOoTNSiZOaLqHxn0
14tXsm23WDiqmc7yp04RFxd39uzZqVOnso8U2tzsPVKrow5+8ODBMWPG8A7u
8uvqQmrH62O4r4eUelh/QQruqN17pNZIjZC3cOpu8pUiHTY//fTTqlWruozZ
pNlw/gsaR3EOTXYs2XvvvSef1WHDhtmebI0mJiY6vMXCzr1798oc/sMPP8hP
mv3792c5kdnHo9bO07h8IBiVRqtWrViamjVrOrx769Yt6jV58uShNO6KhQ8O
3bp1k7kdRtTeIyeqRoxw+/bt0qVL0xUph7t373aZJiUlheJkSpM3b17+TRNO
bPnrbAxiu5I23bt3p9PS1B8TEyOTbOnSpSwDFL7KJOOP1yhfvrzYfDJUztKJ
WDmxRa2zHeoZrPR3Ac14LBcQEEDRiLuZhWKSV155haUsUqSI9DlRUmJ7Il2U
hUlk/fr1YWFhy5YtY29RmMHrlMIk6ewmfDTmN07tk7qMkmb2xx9/0Eq/ffv2
Lr9a9dNPP7Fk1ENlPvwgqlVo6F9CLq2t+oRM+qrQtYKCgmxPNqxiY2PdJfvz
zz9DQkJ4tj0+Wk1J4GHXWkpCKkjnTMdoHr3tyqIXr4cuQkpJ1IysrbXoOVZ/
S9Pfo8VOUozYGEnDHCEf9QkclMwfURltI4PYetEgc4Sjmgksf/7dWJd7j1K8
g3t8VKa22rHUGG73/ZBSLd9akIKUw94jzTgPnVC4derUqZ9//vntt99mDYzN
XMuXL/d4fj5sVqxYkZqcTAuhBCylfBzYvHlzlqx69eryl54+fTpFFFevXnV3
y/JhZGpqasGCBWUmTconH3ZcJtixYwffpHU3F0RHR0vL/969e9J3qYT5WxQa
Of9RnlCR8jTOf+BwIHzv0S6iRgxCdccyRgOyTDJejxEREQ5vCSx//Y1BeFdS
a86cOey0I0aM8Jj4xRdftD2ZiTZv3uwujfX3HoUUtZ52qHOw0t8FNGvRogU7
JzX7X375RSZlUlISFTJLTOtWlyGc8JGwcePGLOWQIUMcmh81b/bWhAkTDM3D
2LFjWcouXbrQCZU0M4q6aUl45coVl8losuYf0Fq1apW7s4lqFRr6l6hLq60+
UZO+clRH7HtYxOMTkxYtWsSbjce9R4+BB6ehkeuvIP0zHWP03qPdq6GLkFIS
OyNraC16jtXZ0oT0aLGTlN2AGEnDHCETiggclMwfUTkNI4PwetEgE4Sjmokt
f/6tao97j23btmUpjdh7tOAY7ushpSo+tyAFKYe9R4/y58/fsWNH6lBKvv5v
lwybHjt1kyZNWLLevXvLJPvuu+/4Cffs2SOTkhrb8OHDnV/ftGkTO9zj40Op
V8pMmvLxbXp6Ovu6AaGcuDvJV199xW+H+kVKSor03blz50oLPz4+3vkMycnJ
/M/3M2fOlL8jI/Ye9deIEXbt2sVztX37dpmUlGeWLHfu3A5Tg6jyF9IYhHcl
VeLi4tify8mJEyc8pl+zZg1LXLp0aXeBuvX3HvUXtc52qGewEtIFNGvdujU7
Jy3wPSaOjIzkWaWIwjmB8JGQZ49ueerUqQ7vXrhwwfmnOYXngTezbNmyKWxm
hEZmmZShoaEs2UcffeQygcBWobZ/Cby02uoTNekrx6PxsLAwj4mvXr3KS8bj
3qPyqVltKemvICEzHWPC3qO3QhchpSR8RtYwJGo+Vn9LE9KjxU5SRsRIGuYI
mahP4KBk/ojKqR0ZjKgXDTJBOKqN8PLnT0vwuPfIPwcofO/RmmO4r4eUyvni
ghSkHPYe33///R1uHDhwgBK7e7KHO9JhU/4PbXxalP9987S0tOLFi7OUvXr1
cpeMWiP19JMnTzq/xT9F/Mwzz5w7d07mWm+99ZbMz+jIx7erV6/mN05N2t1J
7t69W65cOZZs8ODBDu9S/vnTcmrXru3uJPzDqBQdydyOxzxrS6m/RozAP+hO
A5T8o5ko/3ny5GGJHf4mIqr8hTQG4V1JFf7sFKprJelv377NN2H+85//uEzj
E3uPOotaZzvUM1gJ6QKa8WWdkkYYGxvLn+FDoQ5/SDUnfCTk2fP395f56pmh
edDQzIjMDgChdsKSsV9PcCawVajtXwIvrbb6RE36Cu3evZvX1xdffOExvfSr
qUbsPSosJf0VJGSmY0zYe/RW6CKklITPyBqGRM3H6m9pQnq02EnKiBhJYCgi
dlAyeUSVUjsyGFEvGmSCcFQb4eXPH7Hoxb1Ha47hvh5SKueLC1KQcth7FP67
w9K+IP94cD5KNG3aVP6c/BkLuXLlcvnhEzJ8+PAmTZq4fCsxMZF/ijgkJOS9
995zN3U+evTI5RfrGPn4tmPHjvzGXT7PmUtOTqZu6O4hCbt27aIha8KECe7u
lDRs2JBdaMCAATIX8phnbSntumtEOBrw+S5BnTp1PKZv1KgRS+z8QF0h5S+k
MRjRlRRKT08vWLAgO2ebNm0UHsUf5u/uj+w+sfeop6j1t0PNg5XALqCNqmWd
/b/7yMaNG50TiB0JefZKly6tJHtG5EFDMytWrJj8OfkDjoYOHer8rthWoap/
ib202uoTNekrFB4ezmtWyZ6V0XuPSkpJSAWJCnvspuw92r0UuugvJSNmZG1D
ooZjhbQ0IT1a4CRlUIwkMOoTOyiZPKJKqRoZDKoXDTJBOKqBEeXPC8SLe4/W
HMN9PaRUyEcXpCBl2t5jQECAfEreFxo3biyfMjY2lrf26dOnOydISUlhv1jn
MVccNbZevXp98cUXHh/SxcnEt6mpqXx739/fX+zM64zGVXYt+Yct2A3be9Rf
I2KtW7eO12znzp09pme/wEUGDRqk4XLy5S+qMRjRlRSS/sVc5vMhDnix+Pn5
xcXFOSew/t6jzqIW0g61DVYmdwFnapd1U6dO5RnWnAflIyHPXsOGDbVdS38e
NDQzj6MxDxRdfpxMbKtQ1b/EXlpD9QmZ9JV4/Pgx/33YbNmyKfmqiNF7j0pK
SX8FiQ17zNl7ND90EVJKRszIeoZEk1sao79HC5ykDIqRRIUiRgxKpo2oDlSN
DAbViwaZIxxVy4jy9/reo2XHcF8PKRXy0QUpSJm291iwYEH5lMpHCUKNnCUu
U6aM8zS6cOHC0NBQmSdSZmRkdO3a1eZGkSJFhg4d6vwz8Q5k4tszZ87ws+XP
n9/j7Sh38+ZNqqPx48d36dIlLCysZMmSfAy0eW/v0a67RsSaNm0aL5Nq1aq9
5QkfXWlglD+zhvIX1RgM6kpKzJ49m9/CkCFDFB7Vvn17ftSWLVucE1h/71Fn
UQtph9oGK+O6gEJql3XUrXiG69at6zG9zpGQZ+/VV19VdD8G5EFDM/O4tOf1
OHDgQOd3xbYKVf1L7KU1VJ+QSV8JOgk/bYkSJZQcYvTeo5JS0l9BYsMec/Ye
7aaHLkJKyYgZWc+QaHJLY/T3aIGTlEExkqhQxIhBybQR1YGqkcGgetEgc4Sj
ahlR/l7fe7TsGO7rIaVCProgBSnT9h4FjhJk+/btMq2IhhH531K3P/n9pnHj
xvHntzgLCgr6+uuvZc4gE9/+9ttv/Dxly5b1eDseUehLs3/Lli3Z72pR/x05
cuSqVav27NlDNVivXj12LS/uPeqvEYH476CxofU9xX7//XeXJ9RT/qIag0Fd
SYmoqCh+C2PHjlV4VJcuXfhRX375pXMC6+896ixqUe1Qw2AlvAuopXZZJ31g
dalSpdwlEzUS8uwp+Y08g/JgRI+WDxTFtgpV/UvspbVVn/5JXwnpb50/88wz
Sg4xeu9RSSnpryCxYY9pe48mhy5CSsmIGVnPkGhyS+N09miBk5RBMZKoOcKg
QcmcEdWBqpHBoHrRINOEo6oYUf5e33u07Bju6yGlQj66IAUpH917zMjIqFCh
Akvfrl076Vt79+7Nli2bu5+Md3Djxo0ZM2bQKjJ37tw2V5YuXeruWJn4duvW
rfwMlE8lOZGxc+fOKlWqsLN17tx5//79Dgm8/p1ru7gaEWLkyJG8/N9++22d
Z9NZ/qIagxf3HocNG8ZvweMvaHDSPzPNmjXLOUGm33sU2w5VDVZiL62B2mXd
vn37eIbdFbvAkZBnz90DtN0RmAfzA0WxrUJV/xJ7ac3VZ9c36SshHfAtsveo
pJT0V5DYsMe0vUeTQxchpWTEjKynT5nc0hxo7tECJymDYiRRc4Shg5LRI6oD
VSODQfWiQSYLRxUyovy9vvdo2THc10NKhXx0QQpSPrr3SGbOnMnS+/v7X7x4
kb/ep0+fTp06qc1nenr6iRMnli1bFh4eHhwczAskKCjo8uXLLg+RiW8PHz7M
z+DxxuWNGzeOnScwMHDFihUu01hh79Euukb0kH4O3OUDcpXTX/6iGoMX9x7f
e+89fgtjxoxReFSzZs34UdHR0c4JvLv3mP6EywNFFbXAdiilZLAy6NLKqV3W
ScO55557zjmB2JFQ20JbbB7MDxTFtgpV/UvspfXsk0hzqHbSV+LQoUP8VKGh
oUoOscLeo/4KEhj22HWM3nb10YuZoYuQUjJiRjZt79G4uUltjxY4SRkUI4ma
I4welBiDRlQHqkYGg+rF6GxLWTwclWdE+Zu/9+hQO5Ydw309pFTIRxekIOW7
e4+JiYkBAQHskPHjx0tflP9xeUojf5v37t2bNGkSLxN3++oy8W18fDw/PFu2
bBkZGUruyNmUKVPYSfz8/L7//nt3ySyy96i5RoRbtWoVL3+PZSJDSPmLagxe
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
JqSUxM7IGlqLnmN1tjQhPVrgJMUIj5HEhiICByXzR1ROw8ggvF7MyTZjnXBU
M7Hlf+3aNSouliwhIcFlGjq2SJEizZs3Z8k8PopQQ+1YcAz39ZBSFZ9bkIKU
9AeDiKgv3HG87xOZWPHhw4dlypRhyQoXLuzxT5BSb7zxBjuQ1ndK0ks/fCvz
uJLly5fbnnxTwN0n8Tp06MDOkzdvXndPOaAuWa9ePZase/fuLh9wSucfNGhQ
8eLFaUSVvr5z504+wHbs2NHl+WfOnFmlSpUrV66wx73mz5+f4md6/fbt2zT4
OD/Uhec5KCjI3aCtNqUzVTXStWtXaQts0KCBqmvJO3PmDGtX2bNnd/ddNhqL
2rRp88wzzyQlJUlfF17+ehqD3ZSu5NGRI0fYaE+D86lTp1ym+fnnn9kKrnLl
ys6/ryHVo0cPls8cOXL8/fffAvPJUC3ky5ePXWLp0qXSt6Kiopo2beruQOFF
rbkd6h+s9HQBPfiyjgaBAgUKrFq1ymWy33//PTAwkLUBmoxcphHeE//55x/W
jFn2lHzW2ojRWEMzo3PK1NGtW7dy5crFUlJjkPmZDCGtQlv/0n9pDdUnatJX
JS4ujn2kn+5069atLtPcuHGjWrVq/I/ytv/esnZJSeBh11RKjP4K0jnTMZpH
b7uO6EVtMKmHkFISNSNrbi16jtXT0oT0aIGTFCc2RhIeiogalLwyojLaRgax
9WJatu1WCkf1EFv+FIOxO3XZH1NTU3v27BkREcE/B0hx0V9//SVzQm21Y6kx
3O77IaVavrUgzeKoSN96660xY8ZQd2jQoAFNHLb/9txzz/Xv358SjB071uUP
kXu0Z88eOnzo0KHS3zQn1EhoQBg1ahTfGN+wYcPo0aMHDhxISzZpSmrDffv2
pZN4/P4ROXnyJDtqyZIlSrLHJk268T59+lAbo/w4jNIUSk2ZMoWiVspVbGys
9K1Dhw6xW+Mf92Wefvrp8PBwesu5/T948IAuxJLVrl37119/5f2XBqVt27Y1
atSoVKlSLjvO5s2baX3BjqX6unv3Ln8rPj5+yJAhFSpUYL2Jx8ytWrVav359
u3bt+PNUZfLcr18/Kn9ebspTylNVI9QYpNeiYldyCeWooFq2bMlOTnV07tw5
/hYt3FasWFGuXLkaNWpQSOZ8rJDyl1LbGEzuSkrQBEqZtD35y9onn3wifSIW
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
NGfOHHYqOqfHxC+++KLtybp18+bN7tIYvfcovKtqK2fh5SbFVtY22b1H64ww
mvcelfcFvptUt25d+ZTsQ1mnT592fkt/iWk2duxYds4uXbrQMCKzWS196C4N
s1euXHGZ7OHDhzlz5mQpV61a5TKN/vsVMvqJmqP5t6o97j22bduWpZTZe7Rr
7fiiWpGPNgnNmadzylxR1RgipEXRUMzbba5cuYSEowAAAABgjrlz59ok4uPj
ndMkJyfzj8wp/BkFeZs2bWJn8/gzFhS3y6xr+LZb8+bNPV40MjKS3+acOXOc
E+zatYsn2L59u8yp9uzZw5Llzp1buq5PT09n3xgiL774orvDv/rqK34hKliX
zyzi34EVuPdIqz+W0t3eo8D8qyW2KoW3ag3VQW1j6tSpDu9euHBB/y94xsXF
8Y/YnThxwmP6NWvWsMSlS5d2t5Vn9N6j2Pq1aypnI8pNim+1uWtOlhphNO89
Ku8L0m549OhRmZQvvfRS586dnV/XX2J6vPPOO+yc2bJlky+lJk2a8HxS+cik
DA0NZck++ugj53eF3K+Q0U/UHM2ft+Bx75F/Kk9+71FDxxfYiny0SWjOfO/e
vWWSqRpDRLWo7777rmXLlob+BiIAAAAAGOHkyZP8KUm1a9d2l4x95YdERkbq
vyj/ntEzzzxz7tw5mZRvvfVW//793b3LlyH0Px4vGhsby589RdG+848k8m8p
BgUFyT+OLy0tLU+ePCyx9DNRq1ev5suEefPmuTv87t275cqVY8kGDx7sMo1X
9h4F5l8tsVUpvFVrqA5/f3/Kp8d70YA/G6148eJK0t++fZvvM7h7QJZpe49C
6teuqZyNKDcpj3uPlhphTNh7pGzwzd5hw4a5S3b58mWqRJe/9qu/xPTgezVE
/seI+SfTiPwfF2jKY8lcDtdC7lfI6CdqjuYPJhW+96i84wtsRT7aJDRnXn64
VjWGiGpRAAAAAOC7du3aRevTCRMmuPyABNOwYUMWNw4YMED/FRMTE/n3jEJC
Qt577z13seijR49cfmWMUbWhQTp27Mhj740bN0rfomUyX6/VqVPH46kaNWrE
EksfES89/6FDh2QOT05OptWBu2c32b209ygw/2oJrEpGbKvWUB20tFdwH6ql
p6cXLFiQXaJNmzYKj+JfBw4LC3OZwFJ7j3YF9au2nA0qNyn5vUerjTAm7D0S
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
nnmeP3/+lJQUev327dsUwcbExGi4rvTLjDLP/1m+fLntyVdv3P11m29o0Iqp
QIECq1atcpns999/DwwMpGQ5cuT48ssv5fN25syZMmXK2J58Z83d5wNprdSm
TZtnnnkmKSnJ+V1aKdSrV49lrHv37i5/ooLuaNCgQcWLF6elmctLdOjQgZ0h
b968Mk95+ueff9heiu3Js9llfvr23LlzPGIfPny4u2Si8q+WwKo0olVrqA66
EUM/lXHkyBF2rZIlS546dcplmp9//jkkJITSVK5cWf5noXr06MGyTQX7999/
C8+t2K6qp5zFlpuUkr1Hu2VGGGrq+fLlYydZunSp9K2oqKimTZu6y7/CvuAS
f3hdrly53O1EOdNfYtrw3TDibieWPHz4kGWPjSQyGbh16xbdOEtJ85q74VrP
/Yoa/UTN0YSywU7lskenpqb27NkzIiKCfyqPiuivv/5yeSo9HV9IK/LFJqEn
84ULF5b5mLqqMURIi+rWrZtN4t1333V3HgAAAACwms2bN9MSkgVytFa9e/cu
fys+Pn7IkCEVKlRgq+833niDJWvVqtX69evbtWun5PcXXGJRKIWgffr0yZEj
x6hRoxziW1piTJkyJSgoiJZIsbGx7s4j/QELWjFRGDx+/Hhp4E2n/eyzz1hs
X7Jkyf/5n/9Rkj268ZYtW7Izh4eHnzt3jr9Fa+0VK1aUK1euRo0acXFx7s7w
4MEDujV2htq1a//66698TUER9bZt2xo1alSqVCmHrY9Dhw6NGTNm6NCh/Juh
zNNPP03ZoLd4+jVr1owePXrAgAGVKlWSpqxVq9bgwYMp5W+//cZSfvrpp1S8
tLgLDQ3lyajkW7RoQRX65ptvutxo0pZ/PcRWpZBWrb86SpQo0bt3byr/sWPH
7t27V1RZcdeuXaOKsD35HMsnn3ySmJgofSsyMpIWqvRuly5dXK5GT5w4QXcx
bNgw/uVihs7WsWNHKhnKtse9eoWE1K+octZZbu4o3Hu0e2+EcbB69Wq2T1W4
cOGzZ8+yF9etW0fF8ssvv0hTKu8L8qgG2YHyP8HsTH+JKbRnzx52p/yrnUyx
YsUoz9TG+AfPNmzYQK1x4MCBNElJU1JOKIf01vLly1nKJUuW0D/79u1bunRp
acpq1arR4XQ5qi+B9ytk9BM1R9uf9KnixYuzfnrs2DGH22zatCmNP8nJyXzv
kXXMzp07jxw5kpWhqI6vrVR9uknoz3yZMmUon3QSnnkp5WOIkBa1aNEiad52
7drlMhkAAAAAWBNFjBTKsr9fFyhQoG3btrQ8adasWf78+fv373/jxg2WjFa7
/fr1YyEfRZsUuFKsqO2KK1eupJPQqp/+n5YMFDDTWqlDhw7Dhg2jKJeWt5SZ
kJCQqKgo+W87Ovx47vnz57t27ZonT5727dsPHz6cllHsCYdly5ala1H+VWWS
VnD169f3e4LC7+bNmzdo0CBnzpxFihT58MMPZb7qyMXExNBR7LMlFOpTkdKt
FS1aNDg4mLLnvK1BwTmdn4qC0tCShFaI5cuXL1myJEX1dAi9xb+CGhERERgY
SBVEp6Xlf8WKFSkxHUIH0uG5cuXiux81a9akYJ6qlVZ/dBeUkp2T7oJKmM7J
dyn1518P4VWpv1Wrqo6AgAC6VmhoKEtJSpUqRf+kS9MqjJZaCn+VWIPvv/+e
1pXUSqneaelKVUa1nP2JFi1ayGzS0mKT7oKaAd0R3RfdHR1IzYmaCpU23SOd
UPh36vXUr9hy1lxu7ijfe2TMH2GcbdmyhYZf25MvoVNpUAlQGa5bt84hmfK+
II9uim1D7d69W0l6B/pLzCNqP9Qe2J1S02Kdgq5F2aY2RmNpWFgYSzlmzBiH
1si6D1UEDTI0Pnfv3p2lpEbucrimA+lwOsn7778v9n71j36i5mgmLi6OSoOa
FrXVF154gToytc+XX36ZTkL/w/q7dO+RY7+ELrbjqy1Vn24SRmTegcIxREiL
ysjIoHZCww7dy8KFC90lAwAAAAAro6h1x44dixcv/uCDDyiIXbt27ZUrV5yT
xcfH79y5U/5zDh7R4Q4P6jlw4MCcOXMo7Hz33Xc///xzWvi7/CKhA4cNDebC
hQvr16+fMmUK3cXSpUsdPmih1rVr16Kjo2fMmDFx4sR58+b9/PPPMg/wd+nW
rVurV6+mkJvOMHfu3E2bNmnes/UKc/JvUFWa2aq9izfUCRMmzJo1i5Z+t2/f
9nam/j8Tuqo2AstN7d6jQwa8OMLs27ePhl86nP57+fJlVceqtWvXrmXLluk5
g/4S8y2a71fP6CdqjpZKSkrasGEDNVE6A/V6Or/0Q3rbt2+fNm0a5ZbGBGok
J0+evHnzpnE169OtyIKZ9ziGGNGiAAAAAADM4XJDA3wRqjJzywr1q23vEQAA
AAAAAAAsKytsaGQRqMrMLSvUL39Omvxv0QIAAAAAAACAr8gKGxpZBKoyc8tk
9evyUXslS5Zk9+jyRxkAAAAAAAAAwOdksg2NrAxVmbllmvr97bffSpUqlS1b
tg4dOty/f5+/npGRERQUxO7xwIEDXswhAAAAAAAAAIjSqlUrttin//F2XkAX
VGXmlmnqt1KlSvxHeGfPns1fP378OHsxNDQ0PT3dizkEAAAAAAAAAFHCwsLY
er9u3brezgvogqrM3DJN/RYpUoTvPY4bN46//vnnn7MXdf6IMwAAAAAAAABY
xN69ewMDA9l6PygoiP7p7RyBRqjKzC0z1W/Pnj35jRw+fJi9ePv27dDQUHqx
QYMGGRkZ3s0hAAAAAAAAAOgRGRlZokSJkJAQmxN6kd6iBN7OIyiCqszcMmX9
xsbGVqxY0d/ff/bs2ex5jzdu3Hj55Zfpppo2bXr9+nVvZxAAAAAAAAAAdFm0
aFG/fv0GDx48cuTIt99+e8KECePHj6f/oX/Si3379qUE3s4jKIKqzNwya/3G
x8e/8847RYsWzZkzZ+HChW02W7FixaZOnYrHPAIAAAAAAAAAAIAQCQkJR48e
vXDhAnYdAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
Z/5GB3fv3q1cuXJkZKS5Z/iqMnLkSDGXNaelfO3RyodSWbax169fDwgICA8P
L/OCbbdBerpletqEzMaSngAAAACsZzAYQkJCxFJi0KBBqjoePnxYr9eLjn36
9FHS3m1qjzDH9G5yY8aMcXQ4/2af4kZhYWFERISnp6fCSwTNrffv3LkTGhoq
Ap46daq5vp06ddLJPi5EKhja5He1Wtcei7HgHwrLNlb8iyd6LV68WFUv10V6
umV62oTyDCU9AQAAAFjg+PHj0lIiKCjo7t27CnuJddwzzzwjetWsWfPq1atK
ulB7dG/F7iZX5qMc7Mk+xY2kpCQxS+fOnRW2N7feT05Olvbhhg0bzPUdM2aM
1ObkyZOlNhCv6/V6m9wzzflrj5Zt7IEDB6Sr16y5laWrID3dNT1tQtPaI+kJ
AAAAQLrZo+Sdd95R2Eu66ZOfn9/BgwcVdqH26N4OHTpkPJHESjMnJ8fREf1b
ZGSkiCoxMVHTWbp06aJqFnPr/b59+0q7UexSc30/+eQTqc2cOXPMtXnhhRc8
PDzOnDmjMB5znL/2+NDSja1WrZqY6KefflLVyxWRnu6anjahae3xIekJAAAA
lHtiBSEtJVq2bCn+m5CQIH+ZQUFBQWxsrGgZGBi4e/du5RNRe3Rv0hMWJFWr
VnX4xSrXr1/PzMz8/fffd+zY4e/vL6Lq3r378ePHL168mJWVlZ+fb9vpbt68
6ePjI2ZRvr42t95v2LChtBvFJpjru3PnTqlNr169zLX54osvRIO4uDiF8Zjj
ErVHyzZWOmmt30XOj/R01/S0Ca1rj6QnAAAAUM6FhYWJr/dvvvnmw/97oK1Y
g4j1YMk7w4tXtmzZUr9+fdGmbt266enpqiai9uhmVq1aNXbs2HfffTc2Nlac
D7r/1LJlyyFDhowZM2bChAnmfnioqbZt21aoUCE4ODg0NFSc5OHh4eK/ISEh
gYGBPj4+Nr/T2vbt28VWi7mUdyl1vX///n1vb29pH8pUYPbu3Su1adGihbk2
Dx48qFmzZtWqVa18XoNL1B4t29glS5aIiZ588knlXVwF6WnKjdPTJrSuPZKe
AAAAQHn266+/iu/2f/3rXwsLC6VXli1bVqNGDfGiWBV26tRp4MCBkydPnjRp
kljASj+A8vPzi4+Pt2C5RO3RzURFRXl6eorzoXLlyo888khkZGS9evXq169f
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
zJkzpXuazZ49W9VEaWlpnp6ederUuX//fpmNtVvvS8+DeOmll2wympPXHi3b
2A0bNohevXv31igqKEd6OpyzbSzpCQAAAABwLQkJCb6+vqdOnSr2+scff1yx
YsXt27eX7CI9YlWv16empqqaS7qt3IoVK8psqd16f+jQoSKGHTt22GS0efPm
+fv75+bmWjyCprVHCza2qKioUaNGISEh165d0ygqKEd6OpxTbSzpCQAAAABw
LWfOnPH394+Pjy/5Vs+ePcW62NfX98aNG8XeOnz4sHRt1ejRo1VNd/fu3QYN
GkRGRt68eVO+pUbr/du3bwcEBNStW1fJfecUunPnjjXdtatsWLaxH3/8sapH
HkM7pKczcKqNJT0BAAAAAK7l73//u1j85uXllXxrwoQJYpFbq1atkr/BzM3N
lYob/fr1Uzvjb7/9Fhoa2q1bN/lmGq33Fy9eLMKeM2eOzUe2mHa1Rws29vvv
v/fx8Rk5cqQW8UAt0tMZOM/Gkp4AAAAAACdx586dEydOlNls06ZNMr/4Kyoq
+vHHH3Nyckq+lZaWJhU35s2bZ0F4YlixnJ84caJMG43W+02aNPHz88vOzrb5
yBbTrvaodmNPnTpVtWrV7t27O9VVZ+6H9DTHCdPzodNsLOkJAAAAAHAS69at
q1GjRmBg4NWrV2Wa5ebm1qxZ8/XXX7dgCuk2ZWJJfv78ecuCTE9Pj4yMnD59
urkGVapUef755y0b3JwjR46IsPv27WvbYa2kxZY+VL+x4mypV6/egAEDCgsL
bR4MjEhPc5wzPR86x8aSngAAAAAAZ5CZmdm2bdu33347IiJCLGzFH2Qajx49
OiAg4NKlS2pnSU1N9fb21uv1Sp5JIeOPP/4YNmxYUVFRqe/Gx8evXr3amvFL
ys3NHTJkyO+//27bYa2kxZY+VL+x27ZtW7Vqlc3DgBHpKc850/Ohc2ws6QkA
AAAAcAbXrl07duyY+MP69et1Op2Hh8fhw4dLbSmaeXl5WfCTzIyMjNDQUB8f
nzVr1lgbLlCekJ4AAAAAAMBtPPPMMzqdrk2bNiXfMhgMrVq1evzxxx88eKBq
zB9//LFq1aoNGzY0VzMBoATpCQAAAAAAXNqBAwf0er1Op/vss8+KvfXJJ5+I
t/bv369qwA0bNvj7+w8aNOju3bu2CxMoj0hPAAAAAADg6mJjY3U6XURExL17
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
EvkhiSzLtrlMIgMAAADlQfXq1cViU22v7Oxs4/p0586dpm916tRJev2xxx4z
171JkyZSmxEjRlgSNJzPq6++ajwlxo4d6+hw/sWeJYtDhw55enoOGDCgzJby
a/Nbt261a9dOhD1y5MjMzEzpxV9++eWll14SLw4dOvT+/fvm+jZr1szc458s
ICadOXOmzAVOCokRKlasKJ0bP/30U6ltlNQrCgsLT548mZiYKFpKo3Xr1k1J
ABbslhMnTvj5+XXs2FF5F/dAIrtfItuQTXKZRAYAAADKlYyMDPG1/7PPPlPb
8eeff5aWDGKVkZeXZ/rWt99+GxISEhkZuXnzZnPdRQOp+5w5cyyJ2xHEOnHG
jBlvvfVWP20MHjx448aNjt5KCxW7R9y2bdscHdG/2K1kIVbTjz32WEBAgJJ1
sczavKCgIDo6WsQ8e/bsYm+Jndy7d2/xVt++fc2NvHTpUhteTjx+/Hgxmk2e
1yA9viQ2NtZcA/l6xZEjR4KCgjw9PcUgderUEcmiqmRh2W4ZO3as6JWUlKSq
l0sjkd0ykW3LmlwmkQEAAIByaOHCheI7uUyR0JyVK1dKS4aePXuWfNfwJ3N9
s7KyjGvbXbt2qZ3aUUx/Zq6Rhg0bOnorLZSenm7cCrGuNPdbPPuzW8nio48+
EhNNmjRJSWOZtfmsWbPEOFFRUQ8ePCj57rVr10RfXYmLjY3u3r1buXLlyMhI
c0/mVWXkyJFiLgvuB1uq27dvy7wrX3u8cePGxo0bU1JSpEKoCElVycKy3XL9
+vWAgIDw8PBi/3vFjZHIbpnINmdxLpPIAAAAQDn02muvia/9YrWltmPnzp1F
R71en5aWprbv//zP/0jLjQYNGhQWFqrt7kCpqamrV69eqY3169fbqshjfwsW
LDCWLJ566ilHh/Nv9ilZiNM4IiLC09NT4SWC5tbmd+7cCQ0N1ck+tli6p4HM
jfikgqFNrlizbe1Rnqp7xKktWTy0dLcMGjRI9Fq8eLGqXq6LRHbLRLYz5blM
IgMAAABuz2AwSL99Fl/LVXU8fPiwXq8XHfv06aN20nv37lWvXl1abmzZskVt
dzgn03vEjRkzxtHh/Jt9ShZJSUlils6dOytsb25tnpycLO3DDRs2mOsrdq/U
5uTJk6U2EK+L9LTJ/c3cqfZo2W45cOCAdPWa9Te9dAkkslsmsp1pWnskkQEA
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
ygMrxuLnXEsMBkNUVJQYITQ0VOYCMIndao9qd8vdu3eludasWaN2LrgQN05k
62mUyyQyAAAAAMs8/fTTSgqPQkxMjKODBazVvn17ncpHHphbm48dO1ZKDXM3
KxAmT54stdm0aZPMFAaDoV69eqbPibCAlbXHlJQUKdS4uDjjiyLsUp9gZZ/a
owW75dy5c9JcPB7XvblxIltPo1wmkQEAAAAAbub+/fsKC+Om5MeUfpj8yiuv
KA/D3Nr8+++/l2aUuZhHms7Hx0f+CQs7d+4UzYYMGaI8qpKsrD1Kd2PT6/Wn
T5+WXvn11189PDyysrJKNrZP7dGC3WJ8HnGpYcMhSGQ70yiXSWQAAAAAgJsZ
Pny4zUsWixcvFm0aNGigPAyZtXmLFi3EaB07diz13cLCwvDwcNFg2LBh8lN0
7dpVJ/uTTyWsqT0aDIYqVaqI7m3atDG+OGbMGBFYqe3tU3u0YLd8/vnnoktY
WJiqiaApEtmetMtlEhkAAAAA4E4OHTrk4eGRmJho22GPHDkiLZ8vX76ssIvM
2jwlJUUEqdfrMzIySr67du1aMVFQUJD8XBcuXPD09DQtFFjGmtrjjRs3pN0y
adIk6ZXTp08HBASI3VVqe1W1x+PHj0uDd+7cWXlIlu0Wqcz16quvquoF7ZDI
dqZdLpPIAAAAAAC3UVRU1Lx58xYtWmjxaPWIiAixql23bp3C9vJr84ULF4rR
oqKiLl68aPp6amqq6Ojr67t371758SdOnChGWL9+vcJ4zLHyN9eNGjUS3adO
nfrwz3LBf/3Xfy1YsMBc4zLrFfv27duzZ8/OnTuXL1/epk0bqWTh7e09YcKE
L7/8MiUlReyW8+fPy4xg2W5p2LCh6LVq1SpVvaAREtkhbJjLJDIAAAAAwC0t
WrTI09MzLS1Ni8FHjx4tVrUDBgxQ2L7MOptYVkdGRopmo0aNSk5OXrNmTe/e
vb28vJo3b/7DDz/IDy79nDMsLKzMx9GWycra45EjR+rUqRMUFNSxY0cRz6xZ
s2Qal7lPxDgVK1YMDg4WW1ezZk0xclRUVERERLVq1UJCQgIDA319fadNm2au
u2W75cKFC1JhJDs7W3kvaIdEdggb5jKJDAAAAABwP1lZWWLB+84775R869y5
c+vWrYuPj4+Li0tMTPz2228tuJ4qIyNDr9eLdbRYFytpr+Q3ifn5+Rs3bpwy
ZUpMTEz//v3FYn/nzp0Gg6HMwZOTk8Uq+/3331cUuiwra48P/9yK//f//t/2
7duvXr0q31LVb64tYNluWbZsmejVp08fjaKCKiSyAzlJLpPIAAAAAAAn1KtX
r2rVqt26dcv0xRs3bgwYMCAsLKxnz55jxozp0aNHzZo1xfq0fv36y5cvVzuF
9OwDscJV0ljTtXnbtm09PDzOnTtn/VDW1x6V07r2aMFuMRgMTZs2FXvg6NGj
2gUG5Uhkl+Bsu4VEBgAAAABoKiUlRaw6k5OTTV/Mz89v06bNoEGD7t27Z3yx
oKBg5syZ0v3HZs+erWqWtLQ0T0/POnXq3L9/v8zG2q3NpWc3vPTSSzYZzW1q
j5btlg0bNohevXv31igqqEIiuwpn2y0kMgAAAABAOwUFBQ0bNvzb3/5W7PWP
P/64YsWK27dvL9lFehyqXq9PTU1VNZd0s7gVK1aU2VK7tfnQoUNFDDt27LDJ
aPPmzfP398/NzbXJaPI0rT1asFuKiooaNWoUEhJy7do1jaKCciSyC3Gq3UIi
AwAAAAA0lZCQ4Ovre+rUqWKv9+zZU6xhxVs3btwo9tbhw4elK6ZGjx6taq67
d+82aNAgMjLy5s2b8i01Wpvfvn07ICCgbt26Su4mp9CdO3dsNZQ87eoVlu2W
jz/+WNUjj6EpEtmFONVuIZEBAAAAANo5c+aMv79/fHx8ybcmTJggFqS1atUq
+cvK3NxcqWTRr18/tTP+9ttvoaGh3bp1k2+m0dp88eLFIuw5c+bYfGQ70K72
aMFu+f777318fEaOHKlFPFCLRHYtzrNbSGQAAAAAgKb+/ve/161bNy8vr+Rb
RUVFP/74Y05OTsm30tLSpJLFvHnzLJhUDCuW3hMnTpRpo9HavEmTJn5+ftnZ
2TYf2Q60qz2q3S2nTp2qWrVq9+7dXfSqM/dDIrsWJ9ktJDIAAAAAwDJ37tw5
ceJEmc02bdpk2Q3TpFuKieXz+fPnLQrwYXp6emRk5PTp0801qFKlyvPPP2/Z
4OYcOXJEhN23b1/bDms3WuyTh+p3y9WrV+vVqzdgwIDCwkKbBwNTJHKpXD2R
HzrHbiGRAQAAAACWWbduXY0aNQIDA8XSUqZZbm5uzZo1X3/9dbXjp6ament7
6/V6JU+akPHHH38MGzasqKio1Hfj4+NXr15tzfgliU0eMmTI77//btth7UaL
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
tukU/OrtvffeMw5eo0YNMVeZI8+aNUv35x26xHdOhcEAANzbkSNHpI+SZ599
VlXHpk2bil6rVq3SKDC4FuOJJISFhSnvKL4ymZaz5syZo12QkHCwAAAAnMSd
O3ek36AtXbrU4hEsqD0++eST1atXv3fvnnyzq1evStecSKZOnVrmyKKLdDsv
JZdxAgDKg9GjR0ufI+PHj1fVMTo6WvQ6d+6cRoHBtZjeP7B79+7KOx46dMi0
nKX2PIQFOFgAAABOYuXKlbo/b6Z98+ZNy0awoPb422+/6f78vfakSZOOHj0q
3/jNN980jt+gQQMl47/22muicdeuXZU0BgC4vTp16kifI/PmzVPV8cUXX4yM
jNQmKLgey+4fKKxdu9a0nJWYmKhdkJBwsAAAAJzEc889J75Wvf766xaPYEHt
UXq0jcTb2/uHH36QafzBBx+YfgM8c+ZMmeMnJSWJll5eXpmZmUo3AwDgpu7f
v+/h4SF9iIwaNUpV31atWsXGxmoUGFyLxfcPFAYMGGD6ZUb+mw+sx8ECAABw
Er/99pter9dZdycrC2qP06dPN/1SJ7+s++qrr0wbf/vtt2WOf/36dWmZOXPm
TKWbAQBwU5cuXTJ+iDRr1sxgMCjvGxUVtXr1au1igwux+P6B4pSrXbu2sW/j
xo21CxISDhYAAICTmDJlivTNSnpqjGUsqD0W+zHLwIEDZRofOHDAtPFnn32m
ZIqWLVvq/nzijKJtAAC4r8LCQuk+wJIVK1Yo73vixImCggLNQoMrmT9/vvEs
UnX/wK+//tr0m0xSUpJ2QULCwQIAAHAS7dq1E1+r6tWrZ80gFtQes7KyHnnk
EalLmb+5/vzzz02/BO7cuVPJFP/93/8tGuv1+uzsbEWbAQBwX40aNTJ+jnh5
eS1YsKCwsNDRQcHFvPzyy8azSNX9A9u3b2/sGBMTo12EMOJgAQAAOIOCggLp
EdK9evWyZhzLnnN97ty5CRMmjBw5Mi0tTb7lP/7xD9Pa4+nTp5WMv27dOqn9
V199pTAkAIC7GjZsmO4/hYeHi4+/FStWXLp0ydHRwQUYDIbg4GDj+aP8/oGJ
iYnGXq1atcrNzdU0TjzkYAEAADiN1NRU6cvVtGnTrBnHstqjcj179jSOr/xh
oydOnJC6jBkzxuYhAQBcy9WrVwMDA3VmPProo8OHD9+6dWteXp6jI4WTOnr0
qPGEUX7/wA0bNvj5+Um9OnfufO/ePU2DhISDBQAA4CTmzp0rfb/avHmzNeNo
WnvMycmRLs6UKH92TFFRkZeXl+jyzDPP2DYkAIArWr16taenp7nyo6RixYr9
+/e35h7ILur06dO7du3aoY29e/deu3bN0ZtoLbX3D7x48WKfPn2M55XoLr6Z
2CFOPORgAQAAOI0hQ4ZI37IOHz5szTia1h4XLFhgHLxatWq3b99W3jciIkL3
56/qbBsSAMBFbdmyJSAgQL78KISGhpZ5PxB3cv78eb1eX+ZusYYbPPrN9P6B
8+fPzy9BfB3Kysr66aeflixZ0qVLF6nQ7e/vP2jQILGHi42Wm5ur0TOM+Jnw
Qw4WAACA0+jQoYP0rezs2bPWjKNd7VF806tfv75x8K+//lpV92eeeUbqyK9m
AACSnJycmTNnPvroo/K1spCQkCtXrpQ5msFgEM1cvYAgPm1HjBjRqVOnDtp4
+eWXExMTHb2VVil2/8AyBQYGdunSZcGCBeYeeNeoUSMr77ZdqoyMDA8PjzVr
1th8ZBfCwQIAAHAeDRs2lL503bhxw5pxtKs9Tp8+3Tjy5MmT1XZ//fXXpb7K
7zEOACgnMjMzxaq/X79+0kXyJclUG86fPx8XF9egQYMqVarUqlXL398/LCys
Xbt2ycnJDx48sOdWwD6OHTtmPDG8vLy+/vrr3aVJSUk5evTolStXyvzFbqVK
lVq3bm3zOLOzs319fZs2bWrzkV0IBwsAAMB5GH93ZuVCSaPa49mzZ413enzr
rbcsGOHtt9+Wun/zzTe2igoA4H5OnTr1wQcf1K5d27T26OPj88cff5RsvGjR
osDAwJEjRx49elSqWhgMhi1btkRGRopeUVFRYjS7bwG09eGHHxpPjKefftr6
AdWWs7Kzs3NycpS0lO5bmJqaamloLs/hB+vhn9dXi6/HZTbjYAEAALcn3dwm
ICDAynG0qD0WFhY+++yz0ph9+/a17I7fI0aMkEb46quvbBIVAMCN5efnDxw4
0LT8uGnTpmJt1q5d6+/vv3///pLdjx075uPjI3rVqFHj999/t0fEsJdXXnnF
eFbExcVZP6DCctbmzZufe+658PDwWrVqhYSEBAUF9ezZc9++fTJdxMkpgoyJ
ibE+yGLS09MXLVo0x9Y+/fTT69ev2zBORx0so6SkpMqVKyv5SqzdwQIAAHAG
hYWF0reymjVrWjmUFrXHwYMHG694tPhRg+ILpzTI+vXrbRIVAMC9iQ/HFi1a
GD/U5s6dW6yBdBfiGjVqlHqr5FatWkkd3377bbvEC3swGAxVq1Y1nhXbt2+3
fswyy1m3bt1q166dmG7kyJGZmZnSi7/88stLL70kXhw6dOj9+/fN9W3WrJm5
q3at0bx5c502pk6daqsgHXKwHv75T8fJkycTExNFS2nqbt26KRlco4MFAADg
DG7fvi19NfrLX/5i5VA2rz0uWbJEGs3K/1s9ceJEaZzly5dbHxUAwLWI5fxv
v/2mttemTZuMH2ric8T0LYPBIP1kQFdaWVIwXjb5xBNPWB43/n97dx4T1fU2
cHxmUEAa2bEoBGRRY4vtH1VCm2oDtqZRioloTBXhp21c61bEEJVKI7YaMU1d
GlIMaSktKG5B20oirVRpXXGNRdPFauki4kYREBjfE0/eCZGZy8zcWRjm+/nD
0OEsz3Bu5z7zzNxze5mu+weKA+DevXvqx1QuZ7W1tSUlJYnpNm3a9MSvxEEo
ci3N46tCTHUvLCwUDT788EP1cXZVXV0t/o9YYWt5eXk3btywVZCOX6yzZ8/6
+fnJV4aoqCjDp+dm1h7ttFgAAAC9gUhrZWoUERGhcijb1h4rKipE/qbVavPz
81UOtWzZMhnVV199pXIoAIDLmT179vz58y3t9dtvvxlOagUFBU/8NjExUTyu
0+lqa2u79zVc7Dlp0iQrg0bv03X/wDFjxthkTOVy1saNGzWP9w41uiN3Q0OD
6C4aVFZWGu3e3Nzs7+8fGRlp9ZUjrsvxi3X79u3y8vKqqqo///xT/Ocvv/xi
Ue3RnRcLAAC4A/HWSaRGfn5+KsexYe3xxx9/HDBggKen55dffqkyqkeP33XK
qPbv369+NACAaxkyZMjHH39saa9bt24ZTmrdazudnZ3y9rhG+44YMUJ25FtM
fcmUKVMMh0RWVpZNxlQoZ4m0KiQkRKN4JfKkSZOUa2vy49eDBw/aIFaX4uDF
6s7S2uMjN14sAADgDuSH5jqdTq/XqxnHVrXHn3/+OTAw0NfX9/Dhw2riMTDk
n6a+GAAA6KsuX74sXv937txpacdLly7Jc4c4S7a0tJjf8ejRo7JjUFDQ/fv3
LZ3Xidrb2z/44IO33nrrf/Yxf/788vJyZz9LKz2xf6CtCkQK5ayysjI5165d
u0x1z8zMlG2uXLlitIF4XKvVTpw40SbRugrHL1Z3VtQe3XOxAACAm5Ab5gsq
3yLZpPZYX18fERERGBh4+vRphWbp6emnTp0yc0y5V5Jw/vx566ICALiorVu3
itf/ffv2Wdrxs88+k+eON9980/xenZ2dL730kujl4+NTVVVl6aTO1fUyczsZ
MWKEs5+llS5cuGB4Fh4eHnfv3rXJsArlrIyMDDmdQkb06aefyjYKG9S8+uqr
Op3u119/tUG4LsLxi9WdFbXHR265WAAAwE1MmDBBZkcqt/hWX3sUyeGoUaNC
QkJMXcUm/fPPP2KKS5cumTnsCy+8IKNyre+fAADUS01NFa//27Zts7RjcnKy
6KjVas+cOWNmF3F6mjp1qugVExNTXV1t6Yy9QU1NTXFx8Wf2UVpaasVNf3qJ
LVu2GJKc0aNH22pYhXKW4cr9xsZGU90rKytlmxkzZphqs3fvXo3q2/a5Fscv
VnfW1R7dcLEAAICbMNyOU+XXAlXWHltbW1955ZXQ0NAei4oi0/bw8GhrazNz
ZPEeUIQUHBxsaUgAAJem1+vFi784BcybN8+ijrW1tVqtVnScNWuWcsv6+vqM
jIzXXntNnGv69eun0+k2bNjQ3t6uImr0Rl33D8zMzLTVsKbKWeIQ6t+/v5xO
JEimuh85ckS2iY+PN9Wmo6MjPDw8KCjIoq0DXJqDF8so62qPViyWOFTOnDlz
7do182cBAABwPHkXRWHPnj1qxlFTe+zs7ExNTQ0LC6urq+uxcU5OzvDhw80c
WWRx3t7eymk5AKBPunjxojwr+fn5NTc3m9nr4cOH8rrp8PDwf//9V7nxgwcP
ysrKSkpKioqKVqxY8fzzz3t5eU2bNs1Fv/cIo57YP/DAgQO2GtlUOeuvv/4y
TGf0JtdSTU2NbDNkyBCFWdatWyfaFBcX2yDiXs/xi2WUdbXHRxYuVkNDg3jN
kRPNmjWLe2QDAIBey/Ch+fr169WMo6b2uGjRooiICHMuxbp169awYcMmT55s
5shXrlyRIS1ZssSikAAArk5u9mjpWWD+/Pmivbe3t/kbCxt0dHSsWbNG8/gO
brm5uZQC+obTp08bDiStVnvnzh1bjWyqnCXvkSQpdD958qRsExAQoNDs77//
7t+/f0JCgtpwXYHjF8soq2uPFi3WypUrNV0UFhZaNBcAAIDDtLS0eHp6ioxl
5syZasa5efOmIflJTU01v+P69etFl8GDB8eZ9swzz0RHRwcFBcmL4LKzs80c
fN++fTKk3bt3W/W0AACuSu6+KIg38uLfdevW6fV6hfZtbW3p6emipa+v7+HD
h62e17CR8vLly60eBL1HWlqaIcMRqYjyUWQRU+Wsc+fOyek8PDwUutfW1spm
3t7eyhNNnz5dNDN/81LX5fjFMsrq2uMjSxbL8BInvfjii5bOBQAA4DDy4rLo
6Gg1gxQVFRmSn7CwsNu3b1vay3yff/65mVGtXr1adunxujkAQB8zaNAg8fo/
e/Zs8XN2drb4+eWXXz506FD3ryOKRyoqKoYNG6Z5fKeYCxcuqJn3p59+kqce
nU4nflYzFJxCpBlZWVlLly5NT0+Xu0Z3lZCQsGDBgszMTJFjXLlyRc1EpspZ
58+fN0yn0P3UqVOyjZeXl/JE1dXVotnbb7+tJtreyemLZZSa2qP5i7V9+/au
T9bHx8fSuQAAABxGviPTWHKr66tXr65YseLdd99dsmRJRkaGSO3kNxINgoKC
3njjjXnz5i1fvlykfEYv6D5+/Hi/fv2sqD2ePHnSzDhlWXXkyJHm/i0AAH1C
XV2deP0fP378w4cP5SM7duwICwsTDwYGBk6aNGnu3Lm5ubk5OTnp6emDBw/W
PP7y2Nq1a9XfkqO1tVWn08kTlqx8wrVER0d7eHiI48Hf3z80NDQyMjI2NnbY
sGFDhw4Vh1BISIivr6/XYyr3yjZVzhJZliHnUbhy31Dl9vPz63GuuLg4Hx+f
u3fvqgm4F3L6Yhmlpvb4yOzF6ujoENm4eI5DhgzZsGGDmK7vrS8AAOgzzp49
KxOkkpISM7scPnxYJEWDBg0KDw+PiooSad7w4cNH/D/xs8j6YmJiRAYo0qGA
gADRoPsg7733nhWFR+H+/fvmBPnff//J20Tm5eVZ8OcAALi+8vJy8f79iXfi
LS0thYWF06dPDwsLk+VBrVYbGhqalJRUUFDQ2NhozsjHjh1LTU1dunSpwtv8
iIgIecISMah9Jui7TJWzGhoaDDlPW1ubqe5Hjx6VbYYOHdrjXDNmzBAta2tr
VUXsxhxZe7RisZqamqg9AgCAXm706NFWJ0i91t69ezWPL3m7fv26s2MBADia
4RuPRnV2dt6+fbu1tdWiMTs6OgICAmRVYfHixaaaycu3BaMfvQGSQjlL/Eoe
Qgp3Szl06JBsk5SUpDyRONQHDBjw7LPPqgrXvTms9mjdYl2+fNnT09PSuQAA
ABypoKBAJEgi1WlqanJ2LDYzZcoU8aRef/11ZwcCAOgjut5YLSUlxWibzs7O
gQMHqvnWE9yEQjlLfigsKOw+umPHDtlm4cKFyhNt3rxZNNu+fbuqcN2bw2qP
1i3WgQMHRo0aZelcAAAAjnTv3j0fHx+LLrvu5e7cuePl5SWe0a5du5wdCwCg
7wgJCREnF39//+rqaqMNTpw4YahPfvvttw4ODy5EoZyVlZUlD6GDBw+a6p6b
myvb7N69W2EWvV4fGxsr5jJzyxoY5Zjao9WLNXfu3HfeeceiLgAAAI63bNky
kSPFx8c7OxDbkJ8ajxw5sqOjw9mxAAD6DnF+8fHxOXHihNHf6vX6cePGybLD
tGnTHBwbXItCOeuHH36QR5HC99/mzJkjGnh6eirv8ldZWSmaLViwQG247s0x
tUfrFqu9vT04ONjUpyEAAAC9R0NDg6+vr0h4vvvuO2fHolZLS0toaKh4LuXl
5c6OBQDQ16xatUqcMbdv397c3Nz18ba2tpUrVxquyFZ/y2z0bcrlrPj4eHEg
TZw40ehvHz58+PTTT4sGixYtUp5l8uTJytduwxyOqT1at1jbtm1jM08AAOAq
8vPzRcIzfvx4Zwei1pYtW8QTSUxMdHYgAIC+qaysbMyYMf7+/ikpKTk5OZs3
b166dKm8xUxsbGxFRYWzA4QLUC5nVVVV6XQ6rVZ7+fLl7r8tKSkRB5ufn199
fb3CFNevX/fw8Bg7dqwNwnVvFtUeL168KGuPycnJ5k9h3WI1NjYGBQXxmgMA
AFxFR0eHeCfl6nsk3rx5Mzg42Nvb++rVq86OBQDQlx0/fnzr1q2ZmZlTp05N
S0vLzs7++uuv29ranB0XXEOP5SxxdImsLDo6+saNG10fr6mpEX29vLyOHDmi
PMWaNWvECKWlpTYI1731uFhHjx79/vvvKysri4qKxo4dK2uP/fv3X7169f79
+6uqqsRi/fHHHwojWLFYInWfMGEC97QCAACupa6uTiRXoaGhd+7ccXYsVpo+
fbrI3AoKCpwdCAAAgEnmfJWutLQ0MjJStFy+fHlZWdkXX3yRlpbWr1+/MWPG
HDt2TLmvvC570KBB1MPV63Gx/Pz8nnrqqcDAQPE3Dw8Pj4qKio6OjoiIGDx4
cHBwsK+vr5eXV15enqnu1i3W4sWL4+LilDf8BAAA6IVEZqvRaGbOnOnsQKyx
Z88e1w0eAAC4DzMv421tbS0vL3///fdFejNnzpyNGzdWVlbq9foeO8qMbtWq
VbYI1t1ZdM21FaxbrI8++qihocFOIQEAANjV+vXrRf4j/nV2IJY5d+6cyAzH
jRsnsnRnxwIAAKDE3uUskRHpdLpr167Zbwr3wWIBAADYXHZ2tlar3blzp7MD
MVd9fX14eHhCQsK9e/ecHQsAAEAP7FrOkrc7SUlJsdP47obFAgAAsIdNmzYN
GDCgpqbG2YH07MGDB88991xycnJTU5OzYwEAAOiZXctZCxcu1Gg0hw4dstP4
7obFAgAAsJOTJ0/W1dU5O4qe6fX6b775xpy9jwAAAHoD+5Wz7t+/P3DgwJiY
GFIjW2GxAAAAAAAA4ELsV8765JNPNBpNfn6+PQZ3TywWAAAAAAAAXIj9yllx
cXHe3t63bt2yx+DuicUCAAAAAACACwkICEhMTLT5sGfPntVoNBkZGTYf2Z2x
WAAAAAAAAHAha9euLS4utvmwTU1NCxYs+P33320+sjtjsQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAgPv4P7PZ4dU=
     "], {{0, 120.5}, {437., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{288., 288.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{460.9999999999997, Automatic},
   ImageSizeRaw->{437., 120.5},
   PlotRange->{{0, 437.}, {0, 120.5}}], ";"}]], "Input",
 CellChangeTimes->{
  3.9290027682249985`*^9},ExpressionUUID->"e5c5593b-6600-4dad-a501-\
2608d36734b2"],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<S0\>\"", "\[IndentingNewLine]", 
 RowBox[{"S0", "=", 
  RowBox[{"Tr", "[", 
   RowBox[{"\[Sigma]0", ".", "\[Rho]"}], 
   "]"}]}], "\[IndentingNewLine]", "\"\<S1\>\"", "\[IndentingNewLine]", 
 RowBox[{"S1", "=", 
  RowBox[{"Tr", "[", 
   RowBox[{"\[Sigma]1", ".", "\[Rho]"}], 
   "]"}]}], "\[IndentingNewLine]", "\"\<S2\>\"", "\[IndentingNewLine]", 
 RowBox[{"S2", "=", 
  RowBox[{"Tr", "[", 
   RowBox[{"\[Sigma]2", ".", "\[Rho]"}], 
   "]"}]}], "\[IndentingNewLine]", "\"\<S3\>\"", "\[IndentingNewLine]", 
 RowBox[{"S3", "=", 
  RowBox[{"Tr", "[", 
   RowBox[{"\[Sigma]3", ".", "\[Rho]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"S0", " ", "\[Sigma]0"}], "+", 
      RowBox[{"S1", " ", "\[Sigma]1"}], "+", 
      RowBox[{"S2", " ", "\[Sigma]2"}], "+", 
      RowBox[{"S3", " ", "\[Sigma]3"}]}], ")"}]}], "//", "FullSimplify"}], "//",
   "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.9290018943282347`*^9, 3.9290019318194036`*^9}, {
  3.929002066017505*^9, 3.929002074772062*^9}, {3.9290021207839317`*^9, 
  3.929002155457532*^9}, {3.929002192043496*^9, 3.92900222125908*^9}, {
  3.9290023137456207`*^9, 3.9290023610252504`*^9}, {3.929002623218898*^9, 
  3.9290026967079177`*^9}},
 CellLabel->
  "In[509]:=",ExpressionUUID->"ad7151a1-1f6e-40de-aa44-97f1603ae7bf"],

Cell[BoxData["\<\"S0\"\>"], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970285687`*^9}},
 CellLabel->
  "Out[509]=",ExpressionUUID->"c68e147d-949f-4318-890f-248bfb2301a1"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Alpha]", "2"], "+", 
  SuperscriptBox["\[Beta]", "2"]}]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970285687`*^9}},
 CellLabel->
  "Out[510]=",ExpressionUUID->"c80df3e0-8d9a-433f-b02e-0e34769f14d6"],

Cell[BoxData["\<\"S1\"\>"], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970285687`*^9}},
 CellLabel->
  "Out[511]=",ExpressionUUID->"b7b31322-ed1b-4834-8fa6-21ae108c5715"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}]}]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970285687`*^9}},
 CellLabel->
  "Out[512]=",ExpressionUUID->"c6441f6b-a001-4643-b865-f381d4fb9ac2"],

Cell[BoxData["\<\"S2\"\>"], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970285687`*^9}},
 CellLabel->
  "Out[513]=",ExpressionUUID->"c01ed9e8-3013-4dae-8ab9-a90c82ff3a35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
   "\[Beta]"}]}]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970444784`*^9}},
 CellLabel->
  "Out[514]=",ExpressionUUID->"81084587-6c26-4650-b07f-dfb1bfa3b699"],

Cell[BoxData["\<\"S3\"\>"], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970444784`*^9}},
 CellLabel->
  "Out[515]=",ExpressionUUID->"4775ed27-a99c-496d-aa58-af8b224fcedd"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Alpha]", "2"], "-", 
  SuperscriptBox["\[Beta]", "2"]}]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970444784`*^9}},
 CellLabel->
  "Out[516]=",ExpressionUUID->"37cac234-2df4-4d03-a701-a520ed535679"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[Alpha]", "2"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", "\[Alpha]", 
       " ", "\[Beta]"}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Alpha]", " ", 
       "\[Beta]"}], 
      SuperscriptBox["\[Beta]", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9290023232828636`*^9, 3.9290023613969884`*^9}, {
  3.9290026742258606`*^9, 3.9290026970444784`*^9}},
 CellLabel->
  "Out[517]//MatrixForm=",ExpressionUUID->"aa8473a4-25e7-4c05-a670-\
abb967bc674e"]
}, Open  ]],

Cell["\<\
What waveplate configurations do we need to do these measurements in the lab?\
\>", "Text",
 CellChangeTimes->{{3.9290025089742193`*^9, 3.9290025197510777`*^9}, {
  3.929002911320151*^9, 
  3.9290029226132245`*^9}},ExpressionUUID->"b124f5bf-3aae-4155-8d74-\
a2185417c3d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LP", ".", 
  RowBox[{"QWP", "[", "\[Alpha]", "]"}], ".", 
  RowBox[{"HWP", "[", "0", "]"}], ".", "\[Sigma]1"}]], "Input",
 CellChangeTimes->{{3.9290031025566688`*^9, 3.9290031084269695`*^9}},
 CellLabel->
  "In[524]:=",ExpressionUUID->"3ce7bf47-e48b-4c08-b2c1-dcdd09199077"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[Pi]", "2"]}], "+", 
          RowBox[{"2", " ", "\[Alpha]"}]}], ")"}]}]]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Alpha]"}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9290030989985285`*^9, 3.9290031087122884`*^9}},
 CellLabel->
  "Out[524]=",ExpressionUUID->"6b8cf3bb-62a8-44d0-9232-b73e38a30852"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tr", "[", 
   RowBox[{"LP", ".", 
    RowBox[{"QWP", "[", "\[Alpha]", "]"}], ".", 
    RowBox[{"HWP", "[", "0", "]"}], ".", "\[Sigma]1"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.929002931960454*^9, 3.929002977480469*^9}, {
  3.9290030113270917`*^9, 3.929003118429056*^9}},
 CellLabel->
  "In[525]:=",ExpressionUUID->"d7314c1e-a25a-4155-9088-45a81d88c415"],

Cell[BoxData[
 TagBox[
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.92900305200665*^9, 3.929003088596034*^9}, 
   3.9290031188381815`*^9},
 CellLabel->
  "Out[525]//MatrixForm=",ExpressionUUID->"461cda1b-a42f-48d1-b670-\
e98ca51a14ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"QWP", "[", "\[Alpha]", "]"}], ".", 
  RowBox[{"HWP", "[", "0", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QWP", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", 
  RowBox[{"HWP", "[", "0", "]"}]}]}], "Input",
 CellChangeTimes->{{3.9290064245138855`*^9, 3.9290064892480245`*^9}},
 CellLabel->
  "In[531]:=",ExpressionUUID->"c0dda5b9-ef2b-4ab4-9603-9e2da0d9fa32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Alpha]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[Pi]", "2"]}], "+", 
          RowBox[{"2", " ", "\[Alpha]"}]}], ")"}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9290064180873284`*^9, 3.929006489877407*^9}},
 CellLabel->
  "Out[531]=",ExpressionUUID->"3d4f53ef-dd04-4f0e-996e-def392c4a6a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9290064180873284`*^9, 3.929006489877407*^9}},
 CellLabel->
  "Out[532]=",ExpressionUUID->"7cf34758-cf38-47e9-92c6-0ca107d92ba6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["misc testing", "Subsection",
 CellChangeTimes->{{3.9290015360531216`*^9, 
  3.929001552190325*^9}},ExpressionUUID->"28cab0f4-d8e9-48ab-a49f-\
a4e275735235"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Phi]", ",", "\[Gamma]"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", "=", 
   RowBox[{"(", GridBox[{
      {"\[Alpha]"},
      {
       RowBox[{"\[Beta]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LP", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {"0", "1"}
     }], ")"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "linear", " ", "polarizer", " ", "with", " ", "vertical", " ", 
    "transmission"}], "*)"}], "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.928961928066825*^9, 3.928962066303738*^9}, {
   3.92896214756013*^9, 3.9289621631663904`*^9}, {3.928962242763503*^9, 
   3.92896224613326*^9}, {3.928962282225876*^9, 3.928962291500073*^9}, {
   3.928962373231205*^9, 3.9289623943740273`*^9}, 3.92896246828109*^9, {
   3.9289629585886126`*^9, 3.9289629644667177`*^9}, {3.9289636206871557`*^9, 
   3.9289636214246016`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"adef5201-f95e-43bc-bcd5-59ab58bb8693"],

Cell["Measure along V/H", "Text",
 CellChangeTimes->{{3.9289624661138773`*^9, 3.928962478419933*^9}, {
  3.9289625272033443`*^9, 
  3.928962527794986*^9}},ExpressionUUID->"7c3a2288-02fc-4b61-afd8-\
7928bc0e261b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"V", ".", 
        RowBox[{"(", 
         RowBox[{"LP", ".", 
          RowBox[{"HWP", "[", "0", "]"}], ".", 
          RowBox[{"QWP", "[", "0", "]"}], ".", "\[Chi]"}], ")"}]}], ")"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Beta]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9289620699073277`*^9, 3.928962088074996*^9}, {
  3.928962167618916*^9, 3.9289622249409695`*^9}, {3.9289622952083993`*^9, 
  3.9289623328366528`*^9}, {3.928962401577162*^9, 
  3.928962464115676*^9}},ExpressionUUID->"837f456a-d986-449d-ac66-\
01dd3a61f5d1"],

Cell[BoxData[
 SuperscriptBox["\[Beta]", "2"]], "Output",
 CellChangeTimes->{
  3.928962089796858*^9, {3.928962172172135*^9, 3.9289622216337185`*^9}, {
   3.92896229577957*^9, 3.9289623332360744`*^9}, {3.9289624374282537`*^9, 
   3.9289624500625744`*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"70b38999-5bf4-4434-b1bf-17550509c8c1"]
}, Open  ]],

Cell["Measure along A/D", "Text",
 CellChangeTimes->{{3.9289624661138773`*^9, 3.9289624940078664`*^9}, {
  3.9289625296047745`*^9, 
  3.928962529857705*^9}},ExpressionUUID->"d5b2f830-6760-421a-95ba-\
b0469e47521c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"V", ".", 
        RowBox[{"(", 
         RowBox[{"LP", ".", 
          RowBox[{"HWP", "[", 
           RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", 
          RowBox[{"QWP", "[", "0", "]"}], ".", "\[Chi]"}], ")"}]}], ")"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Beta]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9289620699073277`*^9, 3.928962088074996*^9}, {
  3.928962167618916*^9, 3.9289622249409695`*^9}, {3.9289622952083993`*^9, 
  3.9289623328366528`*^9}, {3.928962401577162*^9, 3.928962464115676*^9}, {
  3.9289624984150777`*^9, 3.9289625006602135`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"bcfdbfb0-23e8-4abe-914f-02059b470537"],

Cell[BoxData[
 SuperscriptBox["\[Alpha]", "2"]], "Output",
 CellChangeTimes->{
  3.928962089796858*^9, {3.928962172172135*^9, 3.9289622216337185`*^9}, {
   3.92896229577957*^9, 3.9289623332360744`*^9}, {3.9289624374282537`*^9, 
   3.9289624500625744`*^9}, 3.928962501352749*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"98fb703a-0db1-4d8f-a1be-4ac5c1639293"]
}, Open  ]],

Cell["Measure along R/L", "Text",
 CellChangeTimes->{{3.92896251434802*^9, 
  3.9289625323712635`*^9}},ExpressionUUID->"1c68edbb-3e55-47a8-b1df-\
c91fea9c634f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"V", ".", 
        RowBox[{"(", 
         RowBox[{"LP", ".", 
          RowBox[{"HWP", "[", "0", "]"}], ".", 
          RowBox[{"QWP", "[", 
           RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "\[Chi]"}], ")"}]}], 
       ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Beta]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9289625393423715`*^9, 3.928962571143755*^9}, {
  3.928962611643649*^9, 3.928962619926046*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"30843628-4826-445b-8efd-ca028573b2a8"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Alpha]"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Beta]"}]}], "]"}], 
  "2"]], "Output",
 CellChangeTimes->{{3.928962545355156*^9, 3.9289625714830847`*^9}, {
  3.928962613670909*^9, 3.928962620434245*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"39fb4edb-8606-49b7-bc42-9786b081ca22"]
}, Open  ]],

Cell["Measure along R/L, 2nd measurement", "Text",
 CellChangeTimes->{{3.92896251434802*^9, 3.9289625323712635`*^9}, {
  3.9289638254254246`*^9, 
  3.9289638311493053`*^9}},ExpressionUUID->"b9e3f654-963d-4ee2-a535-\
e6cdb2fa1e79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"V", ".", 
        RowBox[{"(", 
         RowBox[{"LP", ".", 
          RowBox[{"HWP", "[", "0", "]"}], ".", 
          RowBox[{"QWP", "[", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", "\[Chi]"}], 
         ")"}]}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Beta]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9289625393423715`*^9, 3.928962571143755*^9}, {
   3.928962611643649*^9, 3.928962619926046*^9}, 3.9289638343544617`*^9},
 CellLabel->
  "In[196]:=",ExpressionUUID->"b18a49d9-0036-4a1f-a76c-20350321f679"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Beta]"}]}], "]"}], 
  "2"]], "Output",
 CellChangeTimes->{{3.928962545355156*^9, 3.9289625714830847`*^9}, {
  3.928962613670909*^9, 3.928962620434245*^9}, {3.92896383524282*^9, 
  3.9289638427100058`*^9}},
 CellLabel->
  "Out[196]=",ExpressionUUID->"a4650f64-348d-4b69-9d73-e9bbf083abef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Alpha]"}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Beta]"}]}], 
       "]"}], "2"], "==", "\[Gamma]"}], "&&", 
    RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], ",", "\[Phi]", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Beta]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Gamma]", "\[Element]", "Reals"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9289626512910767`*^9, 3.9289627241312027`*^9}, {
  3.928963477118993*^9, 3.9289634789120736`*^9}, {3.9289635910650406`*^9, 
  3.9289636053848906`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"03fbcef1-3abc-4e81-a860-b9699e9b099d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\[Pi]", "-", 
         RowBox[{"ArcSin", "[", 
           FractionBox[
            RowBox[{
              RowBox[{"-", 
                SuperscriptBox["\[Alpha]", "2"]}], "-", 
              SuperscriptBox["\[Beta]", "2"], "+", "\[Gamma]"}], 
            RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}]], "]"}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
            TagBox[
             TooltipBox["\"condition\"", 
              TagBox[
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}]}], 
               Short[#, 7]& ]], Annotation[#, 
              Short[
               Or[
                And[$CellContext`\[Alpha] > 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] > 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] > 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] < 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] < 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] > 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] < 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] < 0, 
                 Inequality[$CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]]], 7], "Tooltip"]& ], "IconizedCustomName", 
            StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Or", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["4040", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]}, "IconizedObject"]], 
        Or[
         And[$CellContext`\[Alpha] > 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] > 0, 
          
          Inequality[$CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] > 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] < 0, 
          
          Inequality[$CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] < 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] > 0, 
          
          Inequality[$CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] < 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] < 0, 
          
          Inequality[$CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]]], SelectWithContents -> True, Selectable -> False]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"ArcSin", "[", 
           FractionBox[
            RowBox[{
              RowBox[{"-", 
                SuperscriptBox["\[Alpha]", "2"]}], "-", 
              SuperscriptBox["\[Beta]", "2"], "+", "\[Gamma]"}], 
            RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}]], "]"}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
            TagBox[
             TooltipBox["\"condition\"", 
              TagBox[
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}]}], 
               Short[#, 7]& ]], Annotation[#, 
              Short[
               Or[
                And[$CellContext`\[Alpha] > 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] > 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] > 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] < 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] < 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] > 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] < 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] < 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]]], 7], "Tooltip"]& ], "IconizedCustomName", 
            StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Or", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["4040", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]}, "IconizedObject"]], 
        Or[
         And[$CellContext`\[Alpha] > 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] > 0, 
          
          Inequality[$CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] > 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] < 0, 
          
          Inequality[$CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] < 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] > 0, 
          
          Inequality[$CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] < 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] < 0, 
          
          Inequality[$CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]]], SelectWithContents -> True, Selectable -> False]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9289628872511888`*^9, {3.928963479613327*^9, 3.928963487492482*^9}, {
   3.928963608017959*^9, 3.9289636260850906`*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"53ddaf85-5851-4aff-9049-8ca5b6b86acd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Beta]"}]}], 
       "]"}], "2"], "==", "\[Gamma]"}], "&&", 
    RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], ",", "\[Phi]", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Beta]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Gamma]", "\[Element]", "Reals"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9289638766771097`*^9, 3.928963878293895*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"0098cbe0-4305-4512-baeb-3533835f968b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\[Pi]", "-", 
         RowBox[{"ArcSin", "[", 
           FractionBox[
            RowBox[{
              RowBox[{"-", 
                SuperscriptBox["\[Alpha]", "2"]}], "-", 
              SuperscriptBox["\[Beta]", "2"], "+", "\[Gamma]"}], 
            RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}]], "]"}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
            TagBox[
             TooltipBox["\"condition\"", 
              TagBox[
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}]}], 
               Short[#, 7]& ]], Annotation[#, 
              Short[
               Or[
                And[$CellContext`\[Alpha] > 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] > 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] > 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] < 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] < 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] > 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] < 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] < 0, 
                 Inequality[$CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]]], 7], "Tooltip"]& ], "IconizedCustomName", 
            StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Or", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["4040", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]}, "IconizedObject"]], 
        Or[
         And[$CellContext`\[Alpha] > 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] > 0, 
          
          Inequality[$CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] > 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] < 0, 
          
          Inequality[$CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] < 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] > 0, 
          
          Inequality[$CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] < 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] < 0, 
          
          Inequality[$CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]]], SelectWithContents -> True, Selectable -> False]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"ArcSin", "[", 
           FractionBox[
            RowBox[{
              RowBox[{"-", 
                SuperscriptBox["\[Alpha]", "2"]}], "-", 
              SuperscriptBox["\[Beta]", "2"], "+", "\[Gamma]"}], 
            RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}]], "]"}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
            TagBox[
             TooltipBox["\"condition\"", 
              TagBox[
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", ">", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}], "||", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", "<", "0"}], "&&", 
                    RowBox[{
                    TemplateBox[{"1"}, "C"], "\[Element]", 
                    TemplateBox[{}, "Integers"]}], "&&", 
                    RowBox[{"\[Beta]", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "-", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}], "\[LessEqual]", 
                    "\[Gamma]", "\[LessEqual]", 
                    RowBox[{
                    SuperscriptBox["\[Alpha]", "2"], "+", 
                    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
                    SuperscriptBox["\[Beta]", "2"]}]}]}], ")"}]}], 
               Short[#, 7]& ]], Annotation[#, 
              Short[
               Or[
                And[$CellContext`\[Alpha] > 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] > 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] > 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] < 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] < 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] > 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]], 
                And[$CellContext`\[Alpha] < 0, 
                 Element[
                  C[1], Integers], $CellContext`\[Beta] < 0, 
                 
                 Inequality[$CellContext`\[Alpha]^2 - (
                   2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
                  LessEqual, $CellContext`\[Alpha]^2 + (
                    2 $CellContext`\[Alpha]) $CellContext`\[Beta] + \
$CellContext`\[Beta]^2]]], 7], "Tooltip"]& ], "IconizedCustomName", 
            StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Or", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["4040", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]}, "IconizedObject"]], 
        Or[
         And[$CellContext`\[Alpha] > 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] > 0, 
          
          Inequality[$CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] > 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] < 0, 
          
          Inequality[$CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] < 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] > 0, 
          
          Inequality[$CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]], 
         And[$CellContext`\[Alpha] < 0, 
          Element[
           C[1], Integers], $CellContext`\[Beta] < 0, 
          
          Inequality[$CellContext`\[Alpha]^2 - (
            2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2, LessEqual, $CellContext`\[Gamma], 
           LessEqual, $CellContext`\[Alpha]^2 + (
             2 $CellContext`\[Alpha]) $CellContext`\[Beta] + $CellContext`\
\[Beta]^2]]], SelectWithContents -> True, Selectable -> False]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.928963957566065*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"9a415618-acd3-4253-bbbd-a22cc43f228d"]
}, Open  ]],

Cell["Try an example with specific numbers:", "Text",
 CellChangeTimes->{{3.928962926506408*^9, 
  3.9289629391004443`*^9}},ExpressionUUID->"b89b6647-3d0e-46af-b1bf-\
308a5c51f6f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "=", "0.13"}], ";", " ", 
    RowBox[{"\[Beta]", "=", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["\[Alpha]", "2"]}]]}], ";", 
    RowBox[{"\[Phi]", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<\[Alpha]: \>\"", ",", "\[Alpha]", ",", "\"\<; \[Beta]: \>\"", ",", 
     "\[Beta]", ",", "\"\<; \[Phi]: \>\"", ",", "\[Phi]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "=", 
     RowBox[{"(", GridBox[{
        {"\[Alpha]"},
        {
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\"\<\[Beta] from measurement along V/H\>\"", "\[IndentingNewLine]", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"V", ".", 
         RowBox[{"(", 
          RowBox[{"LP", ".", 
           RowBox[{"HWP", "[", "0", "]"}], ".", 
           RowBox[{"QWP", "[", "0", "]"}], ".", "\[Chi]"}], ")"}]}], ")"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"]], "\[IndentingNewLine]", 
   "\"\<\[Alpha] from measurement along A/D\>\"", "\[IndentingNewLine]", 
   SqrtBox[
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"V", ".", 
         RowBox[{"(", 
          RowBox[{"LP", ".", 
           RowBox[{"HWP", "[", 
            RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", 
           RowBox[{"QWP", "[", "0", "]"}], ".", "\[Chi]"}], ")"}]}], ")"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"]], "\[IndentingNewLine]", 
   "\"\<\[Phi] from measurement along R/L\>\"", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]", "=", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"V", ".", 
          RowBox[{"(", 
           RowBox[{"LP", ".", 
            RowBox[{"HWP", "[", "0", "]"}], ".", 
            RowBox[{"QWP", "[", 
             RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "\[Chi]"}], ")"}]}], 
         ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"ArcSin", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Alpha]", "2"]}], "-", 
         SuperscriptBox["\[Beta]", "2"], "+", "\[Gamma]"}], 
        RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}]], "]"}], ",", 
      "\"\< or \>\"", ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"ArcSin", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Alpha]", "2"]}], "-", 
          SuperscriptBox["\[Beta]", "2"], "+", "\[Gamma]"}], 
         RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}]], "]"}]}]}], "]"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Print", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Alpha]"}], "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", "\[Beta]"}]}], "]"}],
           "2"], "==", "\[Gamma]"}], "&&", " ", 
        RowBox[{"x", "\[Element]", "Reals"}]}], ",", 
       RowBox[{"Modulus", "->", 
        RowBox[{"2", "\[Pi]"}]}]}], "]"}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Print", "[", 
     RowBox[{"Reduce", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Alpha]"}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", "\[Beta]"}]}], "]"}], 
         "2"], "==", "\[Gamma]"}], "&&", " ", 
       RowBox[{"x", "\[Element]", "Reals"}], "&&", 
       RowBox[{"x", "\[Element]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}]}], "]"}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]", "=", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"V", ".", 
          RowBox[{"(", 
           RowBox[{"LP", ".", 
            RowBox[{"HWP", "[", "0", "]"}], ".", 
            RowBox[{"QWP", "[", 
             RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "\[Chi]"}], ")"}]}], 
         ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ArcSin", "[", 
    FractionBox[
     RowBox[{"\[Gamma]", "-", 
      SuperscriptBox["\[Alpha]", "2"]}], 
     RowBox[{"2", "\[Alpha]", " ", "\[Beta]"}]], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9289629540524716`*^9, 3.928963216041176*^9}, {
  3.928963259408233*^9, 3.928963329446721*^9}, {3.928963669083415*^9, 
  3.928963674091262*^9}, {3.928963709781001*^9, 3.9289637287846093`*^9}, {
  3.928964032908079*^9, 3.9289641176058235`*^9}, {3.9289641965162053`*^9, 
  3.9289642369584036`*^9}, {3.9289642707517753`*^9, 3.9289642881600933`*^9}, {
  3.928964326902675*^9, 3.928964328061236*^9}, {3.928966111037367*^9, 
  3.9289661266923647`*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"3f37b166-04e2-4ce4-84d9-faad2ba96b56"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Alpha]: \"\>", "\[InvisibleSpace]", "0.13`", 
   "\[InvisibleSpace]", "\<\"; \[Beta]: \"\>", "\[InvisibleSpace]", 
   "0.9915139938498094`", "\[InvisibleSpace]", "\<\"; \[Phi]: \"\>", 
   "\[InvisibleSpace]", "0.7`"}],
  SequenceForm[
  "\[Alpha]: ", 0.13, "; \[Beta]: ", 0.9915139938498094, "; \[Phi]: ", 0.7],
  Editable->False]], "Print",
 CellChangeTimes->{{3.928963093279509*^9, 3.928963104994961*^9}, {
   3.928963291036322*^9, 3.928963330499545*^9}, 3.92896367649844*^9, {
   3.9289637246052065`*^9, 3.928963730241557*^9}, {3.9289640523301773`*^9, 
   3.9289641180402393`*^9}, 3.928964203924036*^9, 3.928964237563013*^9, {
   3.928964280322212*^9, 3.928964288942831*^9}, 3.9289643311873827`*^9, {
   3.9289661213217363`*^9, 3.928966127242029*^9}},
 CellLabel->
  "During evaluation of \
In[322]:=",ExpressionUUID->"5391e0df-a8ce-4647-b90c-062ecbc70188"],

Cell[BoxData["\<\"\[Beta] from measurement along V/H\"\>"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.9289640523424673`*^9, 
   3.9289641180402393`*^9}, 3.928964203924036*^9, 3.928964237568922*^9, {
   3.928964280322212*^9, 3.928964288942831*^9}, 3.928964331189848*^9, {
   3.928966121325029*^9, 3.928966127242029*^9}},
 CellLabel->
  "Out[325]=",ExpressionUUID->"a3968925-94b5-47bd-8629-db11df41d967"],

Cell[BoxData["0.9915139938498094`"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.9289640523424673`*^9, 
   3.9289641180402393`*^9}, 3.928964203924036*^9, 3.928964237568922*^9, {
   3.928964280322212*^9, 3.928964288942831*^9}, 3.928964331189848*^9, {
   3.928966121325029*^9, 3.928966127242029*^9}},
 CellLabel->
  "Out[326]=",ExpressionUUID->"d2a1fa70-8535-4b48-84a5-133d6e60ea72"],

Cell[BoxData["\<\"\[Alpha] from measurement along A/D\"\>"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.9289640523424673`*^9, 
   3.9289641180402393`*^9}, 3.928964203924036*^9, 3.928964237568922*^9, {
   3.928964280322212*^9, 3.928964288942831*^9}, 3.928964331189848*^9, {
   3.928966121325029*^9, 3.928966127258032*^9}},
 CellLabel->
  "Out[327]=",ExpressionUUID->"955200b7-f675-4189-8df8-6ddca6c9ef9c"],

Cell[BoxData["0.13`"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.9289640523424673`*^9, 
   3.9289641180402393`*^9}, 3.928964203924036*^9, 3.928964237568922*^9, {
   3.928964280322212*^9, 3.928964288942831*^9}, 3.928964331189848*^9, {
   3.928966121325029*^9, 3.928966127258032*^9}},
 CellLabel->
  "Out[328]=",ExpressionUUID->"c921377b-e7d3-423e-a9e6-7a8b6384318a"],

Cell[BoxData["\<\"\[Phi] from measurement along R/L\"\>"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.9289640523424673`*^9, 
   3.9289641180402393`*^9}, 3.928964203924036*^9, 3.928964237568922*^9, {
   3.928964280322212*^9, 3.928964288942831*^9}, 3.928964331189848*^9, {
   3.928966121325029*^9, 3.928966127258032*^9}},
 CellLabel->
  "Out[329]=",ExpressionUUID->"f928d417-1cee-4fe7-ba83-79fc302822e4"],

Cell[BoxData[
 RowBox[{"1.5707963267948966`", "\[VeryThinSpace]", "-", 
  RowBox[{"2.1749623429954057`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.9289640523424673`*^9, 
   3.9289641180402393`*^9}, 3.928964203924036*^9, 3.928964237568922*^9, {
   3.928964280322212*^9, 3.928964288942831*^9}, 3.928964331189848*^9, {
   3.928966121325029*^9, 3.928966127258032*^9}},
 CellLabel->
  "Out[332]=",ExpressionUUID->"26ae13cc-19ea-4760-b4ea-896408d6e45b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Beta]"}]}], "]"}], 
  "2"]], "Input",
 CellChangeTimes->{{3.928966151112213*^9, 3.928966156107278*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"f1dbb7ac-f9a6-4014-9521-b91930b93f2f"],

Cell[BoxData["1.1660752215152497`"], "Output",
 CellChangeTimes->{3.9289661575900736`*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"49398459-27a4-4036-b006-e2e8db2aa648"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Alpha]", "2"], "+", 
  RowBox[{"2", "\[Alpha]", " ", "\[Beta]", " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
  SuperscriptBox["\[Beta]", "2"]}]], "Input",
 CellChangeTimes->{{3.928966162007348*^9, 3.928966210792184*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"61bedbee-f0e9-4b8d-a7d9-28e647010e83"],

Cell[BoxData["1.16607522151525`"], "Output",
 CellChangeTimes->{{3.928966187041253*^9, 3.9289662110500803`*^9}},
 CellLabel->
  "Out[336]=",ExpressionUUID->"23134069-e918-4cd8-a3dc-5f7d99576da9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";", " ", 
  RowBox[{"\[Beta]", "=", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["\[Alpha]", "2"]}]]}], ";", 
  RowBox[{"\[Phi]", "=", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"RandomReal", "[", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\[Alpha]: \>\"", ",", "\[Alpha]", ",", "\"\<; \[Beta]: \>\"", ",", 
   "\[Beta]", ",", "\"\<; \[Phi]: \>\"", ",", "\[Phi]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]", "=", 
   RowBox[{"(", GridBox[{
      {"\[Alpha]"},
      {
       RowBox[{"\[Beta]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}
     }], ")"}]}], 
  ";"}], "\[IndentingNewLine]", "\"\<\[Beta] from measurement along V/H\>\"", \
"\[IndentingNewLine]", 
 SqrtBox[
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"V", ".", 
       RowBox[{"(", 
        RowBox[{"LP", ".", 
         RowBox[{"HWP", "[", "0", "]"}], ".", 
         RowBox[{"QWP", "[", "0", "]"}], ".", "\[Chi]"}], ")"}]}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], 
   "2"]], "\[IndentingNewLine]", "\"\<\[Alpha] from measurement along \
A/D\>\"", "\[IndentingNewLine]", 
 SqrtBox[
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"V", ".", 
       RowBox[{"(", 
        RowBox[{"LP", ".", 
         RowBox[{"HWP", "[", 
          RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", 
         RowBox[{"QWP", "[", "0", "]"}], ".", "\[Chi]"}], ")"}]}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], 
   "2"]], "\[IndentingNewLine]", "\"\<\[Phi] from measurement along R/L\>\"", \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "=", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"V", ".", 
         RowBox[{"(", 
          RowBox[{"LP", ".", 
           RowBox[{"HWP", "[", "0", "]"}], ".", 
           RowBox[{"QWP", "[", 
            RowBox[{"\[Pi]", "/", "4"}], "]"}], ".", "\[Chi]"}], ")"}]}], 
        ")"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "arcsin", " ", "can", " ", "only", " ", "return", " ", "results", " ", 
     "from"}], " ", "-", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "2"}], " ", "to", " ", 
     RowBox[{"\[Pi]", "/", "2"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Values", "[", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "+", 
      SuperscriptBox["\[Beta]", "2"], "+", 
      RowBox[{"2", "\[Alpha]", " ", "\[Beta]", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], "==", "\[Gamma]"}], ",", "x"}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9289629540524716`*^9, 3.928963216041176*^9}, {
  3.928963259408233*^9, 3.928963329446721*^9}, {3.928963669083415*^9, 
  3.928963674091262*^9}, {3.928963709781001*^9, 3.9289637597855167`*^9}, {
  3.9289660025883117`*^9, 3.92896607722803*^9}, {3.9289662330512085`*^9, 
  3.928966295063102*^9}, {3.928966370724913*^9, 3.9289664383013363`*^9}, {
  3.928966501198455*^9, 3.928966562891833*^9}, {3.9289666644564447`*^9, 
  3.92896671773588*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"981d92e8-0450-481f-9ded-721ca4e20c97"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Alpha]: \"\>", "\[InvisibleSpace]", "0.2386537084553586`", 
   "\[InvisibleSpace]", "\<\"; \[Beta]: \"\>", "\[InvisibleSpace]", 
   "0.9711047355669237`", "\[InvisibleSpace]", "\<\"; \[Phi]: \"\>", 
   "\[InvisibleSpace]", "3.675140032059643`"}],
  SequenceForm[
  "\[Alpha]: ", 0.2386537084553586, "; \[Beta]: ", 0.9711047355669237, 
   "; \[Phi]: ", 3.675140032059643],
  Editable->False]], "Print",
 CellChangeTimes->{{3.928963093279509*^9, 3.928963104994961*^9}, {
   3.928963291036322*^9, 3.928963330499545*^9}, 3.92896367649844*^9, {
   3.9289637246052065`*^9, 3.928963730241557*^9}, {3.9289637603233633`*^9, 
   3.928963781347782*^9}, 3.928966055567066*^9, 3.928966237098591*^9, 
   3.9289662954562516`*^9, 3.928966439134795*^9, {3.9289666836473255`*^9, 
   3.9289667181058893`*^9}},
 CellLabel->
  "During evaluation of \
In[400]:=",ExpressionUUID->"e3b24fa2-f6cf-4462-b5e2-043dd2b9ab58"],

Cell[BoxData["\<\"\[Beta] from measurement along V/H\"\>"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.928963760339757*^9, 
   3.9289637813635197`*^9}, 3.928966055567066*^9, 3.928966237098591*^9, 
   3.9289662954562516`*^9, 3.928966439139177*^9, {3.928966683663939*^9, 
   3.9289667181058893`*^9}},
 CellLabel->
  "Out[403]=",ExpressionUUID->"7e0a56fa-c78b-44e4-90b8-9d3537e475e7"],

Cell[BoxData["0.9711047355669238`"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.928963760339757*^9, 
   3.9289637813635197`*^9}, 3.928966055567066*^9, 3.928966237098591*^9, 
   3.9289662954562516`*^9, 3.928966439139177*^9, {3.928966683663939*^9, 
   3.9289667181058893`*^9}},
 CellLabel->
  "Out[404]=",ExpressionUUID->"e186631f-6682-4e4d-9d2b-b6076f0d5e60"],

Cell[BoxData["\<\"\[Alpha] from measurement along A/D\"\>"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.928963760339757*^9, 
   3.9289637813635197`*^9}, 3.928966055567066*^9, 3.928966237098591*^9, 
   3.9289662954562516`*^9, 3.928966439139177*^9, {3.928966683663939*^9, 
   3.9289667181058893`*^9}},
 CellLabel->
  "Out[405]=",ExpressionUUID->"e3266e6e-e9ba-4a91-a9c8-0067f65d1879"],

Cell[BoxData["0.2386537084553586`"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.928963760339757*^9, 
   3.9289637813635197`*^9}, 3.928966055567066*^9, 3.928966237098591*^9, 
   3.9289662954562516`*^9, 3.928966439139177*^9, {3.928966683663939*^9, 
   3.9289667181058893`*^9}},
 CellLabel->
  "Out[406]=",ExpressionUUID->"14889f5f-f530-4933-81e5-7327b24063a8"],

Cell[BoxData["\<\"\[Phi] from measurement along R/L\"\>"], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.928963760339757*^9, 
   3.9289637813635197`*^9}, 3.928966055567066*^9, 3.928966237098591*^9, 
   3.9289662954562516`*^9, 3.928966439139177*^9, {3.928966683663939*^9, 
   3.9289667181217766`*^9}},
 CellLabel->
  "Out[407]=",ExpressionUUID->"f47a26f2-b49e-49bc-8522-e434d47237c0"],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"NSolve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 409, 34, 
   34578567006181964272, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9289666836961713`*^9, 3.9289667181217766`*^9}},
 CellLabel->
  "During evaluation of \
In[400]:=",ExpressionUUID->"f0e670f3-94f3-44d3-942a-86af88bb2ccc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"-", "0.533547378469849`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9289630405126114`*^9, {3.928963093295411*^9, 3.928963104994961*^9}, {
   3.9289632910520077`*^9, 3.928963330515484*^9}, 3.9289636765041027`*^9, {
   3.928963724621232*^9, 3.928963730241557*^9}, {3.928963760339757*^9, 
   3.9289637813635197`*^9}, 3.928966055567066*^9, 3.928966237098591*^9, 
   3.9289662954562516`*^9, 3.928966439139177*^9, {3.928966683663939*^9, 
   3.9289667181217766`*^9}},
 CellLabel->
  "Out[409]=",ExpressionUUID->"f0655882-b85e-4d77-be4c-458a1d1c0af7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"-", "0.533547378469849`"}], ",", 
   RowBox[{"2", "\[Pi]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9289667278177795`*^9, 3.92896673567285*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"1e99da71-217c-4ae3-b608-3c1b7e2908de"],

Cell[BoxData["5.7496379287097374`"], "Output",
 CellChangeTimes->{3.9289667365400906`*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"7811168b-e1b5-4fc0-9653-0054a04555fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "+", 
      SuperscriptBox["\[Beta]", "2"], "+", 
      RowBox[{"2", "\[Alpha]", " ", "\[Beta]", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ",", "\[Gamma]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9289666261627045`*^9, 3.928966646654972*^9}, {
  3.928966788318757*^9, 3.9289667924677377`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"e72700e7-a9b7-4fad-98b5-b1149104892d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk8lF8XAHBrliwzz4w9oqRNaSGEzk1SIUll30KRZKsklUqKJFnbpJCt
jSJLUkoRkvwiS0qeISSMdZ4Z63vfv+bz/Twzd+5z7jnnHjV3f+tDAnx8fPn8
fHz//xSsEG/o1rm45eyhCWk+vhFY9vetgUqiKzy1OPMoV3AEpp5rebYn+IMO
UjHeKzICf5je3OKE8xATu+JYhtQI/DCNqMxKuAE7yt3iTZRH4LtrwvLUhAew
2XPcLHLzCFj7Kvy4nZAPgtpfd/CdHIH4MafCmwkV0E36PIz9OwIGVWbixscb
4cAvK/IhaxQCQi0PFga0wSU1leQrH8bgWOmhWIGlXfC4MTl8f/I4NPfvEstx
7wF/Hwuf3UcmIFqLw1ds3w/BXp36JsqTELi6Jvld1iCM/nUbjqmdhJ5DPRfS
igdB+efZDXOfJ8Emjc/3wqdBGNg11H6sYRI2y+gbo7+D0GMja7WzaRIE5h8N
V2gOgXTKs+q/Pych4du1HRWFQ7Ao78aOTvYkFJzew3vzfhjCX9CErzI5MOVx
NO+X3wiEuBk4V9pxwI0+HlIePAJB4QmvMh04UPU2dFtK2AjssjwQc9mJA3EK
0W12sSPwus8i0diNA8u/5go0PxuB9sXuio+9OLB/c69N3eAI9P+zfLQ2mAN5
tIPzxT6j0IksKsQTOMB821+bHDQKQ1UcqdeJHDh9NCDpROgovOw1/HQkmQMm
1edXbogehcoL0/6VtznQceb+vmePRiHMduKm2wMOiPZ15DzsH4X0vCfknqcc
cH9jYxV3eAwOZzgUUR85sKFYnlDwH4OdK1guSdUcEMj/0ZR+agxssv4patVw
ICPNxbYwagyGs17UuHzmAOvSYZeWx2PQ6es5nP0fXs8s2HcRewzOW4nNt//C
bk2Oyj01Dne6o3RrJvD6jbZm6y+MQ1ROir0GB69fqyBRFjUOtNKcC+EUXr8s
9cbnO+PQoKT6U3sKr5+adXP49Ti4EF1vLs7j9TyLMrX5JoAl/rfttRgFHqPN
795FTcAdV5uhvEUUuIXG2ZbGTYChIp9omTIFToIWw/m3J8CCQbl8UKHARuaD
0oPcCXi4oPpdoyoFO/VfBJ+rmYBC9/8sWtQpWHvxuuZm0UnwFXbYE6NJwSrx
XR/W0ybB0pxDO7OGguWJQg4r5SfB5D9K3HstBapZZyLlV0xCpTDKMVxHAaP2
CIuzYxKacxJDGzdSwKWZ3i6MnATz5escMzZTMHGHX+vJjUlYKnE96oQBBaNL
3lRl3JoEiRVtAyaGFAxoa4/H50zCZK3P7i4jCn7ZLbEM+DQJhkJUBP9WCirT
5gTXiHDAU64+YciUgrcry+6qS3NgQcoXKmMHBa8LTq5fJMcBjnJprM1OCl5+
HHRZuJwDzsE395buoiCn/8erv6Yc2NdSpHHYgoKYdSX+2Vc4kK7R/ddnLwV1
G1p7T8ZyYOUWRxc+awpEdSjn7Tc5UHbNhJmEHaGva9GTxYEo785txfsoOGNc
smJJFQeuNPrn/TlAQalJ64PReg7Y2OavOmZDAceUkn3fzIEcdeu+Mewgc11h
tx4O2EcYq/FsKfDZX0KmClJgYu6bNGJPQa5Nq92xhRQMSh2k+ThQ0GtHfTVk
UFDTVPWZxD7orPu2YwkF8PQYX70jBXaHS+4qGFMQLb7B5ZozBTtCSvYlX6CA
rV/TXOSG9xvaWucZRcG45w4DxkEcv7PUVu04Cp4Zpf32w95yUXdd0wMKZsSi
SFV3CjZFl0jQK3BeCPZ98veg4ERM66WuagrOZfQpVmAXxFJT+Q0UePNUnkh4
UrAmUfevZScFieb94RnY6vdKqmJmKZj0m5J8dYgC9/uthk7CXHhXW7lzCjst
jSpcLcmFnnf67/QPU7AoSzejbhEXdgZSnoXYDjm2CnfVucBdo5YwhH370am4
I5pc+He9YnqZF86vvJIwUUMucH6pR8RjWz1vnWzdxgWztd8yPmLHFlC+OeZc
cGS9m53EFi/RdTR15IJOy0bvfd74vV7ZfpPx4IInrurz2Fden9r1x4cLS/PV
PzzCFnhXohsRyoUHyluleNiPJYns2XAuFI7TVNSOUGDt6Ms8dY0LZdfzFXZg
T+VWh48kcmF6G8F/FPshR3X0yD0uSAhpNcdgW5icce3O5EKz1UzCU+yJ+O9f
nJ5xIdY40KgO22RN9OM9b7kQ5Lb+wDz2YGiPfG01F2pzjlXK+lCQVLMl0vgr
F/zqNippYhvK3pl83coFt8/nXAH7j8e4h04XF2aNTW9YYce+2P0tr58LIq5R
j12xN83noBWj+H1Y8MIXu9NCID+dxwVLjSMPT2FfueukrCTAg3k5/osXsNf2
F19LEufBAgNhs0jsFh36lCSDB0q5x+euYYddOuodqcQDF0nz+7HYy/+rauFT
54F9XvTKG9iNKqrbQzV5+F7YkHYdO8Q3tHBcmwd37xkLRGOrljWrHTPiAc+x
fE8Edo2IVlzvdh4YGqRHncUOOHB1ztWSBxPe40+DsOUfdvu22/CA8aio/DD2
uxGjDmtX/Hz/vxI77CNbbu+q9+KBjePt+zuxiZixku0BPHBC7wM2YZe1W2hU
hPAgWvno2iXY7stzkvQu8uBTekrrQmzxk/yCBVfx7+n2vuM4/gWVjoGrE3jQ
sf3xYBu2A634d+ZdHuzPu2lXji3gQrNUecgD+T0az1OxnzzxKb/1hAdt7w+O
n8Xez/u4iv6SB8k61kscsGdMF9+JLudBrh+/kc7/84HVdPLcFx7ka1br/MH5
NaG1tofznQdN6mOMMux756KsAzp5kFEj1hmDPSRvpOXB5sFtD61Nmtixe7L7
d9KnAL3toPbi/N6UymdbqTAFK1v6N8lidw44VBksmYLZg7bubbh+tK5IZ6zd
OAVvP98Ps8FuLA9xZB6YAretZIM+rscQ8aba685TsGUL3/EhXL+qdmv0RA5P
QXSFktAD7IBxkjkVPAV/etOGpnH901eZN/y+PQXEhYCue7hf9Io8oNekTcHu
nHxdU+yyP2P7n+dOwQu3re+HcH/xTL/bcaF0CjZ4FR7VxS6VH+hXa5sCvhAz
1SJXCq5zjDTFu6Zg+GuihBW2e3O8/1jfFIT39q/+60LBwjh9TiU1BZ1blYRk
sV1Ergp6yk3DIvYZZQcnCjb++WlqsXganhyazuzF/VD0w7po7eXTEDHo6BaI
XRDWRhPWnYZ1mhuPX8T9U5izXCXbZhpMJEMkYuwoeNpTrdefPA3RXqUrzPdT
cLFS8Wxj6jQMHHkyU4b7u02aX0Vp1jSE2YctWInN5yRrerVoGpaI7Sufx/fF
vqZD+1Z9n4YbLq9e3tqD+8F7IT9f5gwgaQ4v0Az3mwfGD0cSZuDk4SFu4xYK
Imsaf4WnzMCaKu9ODr7fqkdd5GUyZ6D+YXu+IvZ2kzPX9YtmIEzvjpwTvh+N
/xaeCm+dAXrEff5qXVz/G5dZMBfNgn3k6tBN+L5d90lkUjdrFgjn9+xriynw
H0nWqns2CxJJHe3++L7PU1D3cSqehewQqnQvngfW+KLfFz7NAn3fOVtpJXy/
00/X1v6dhei9pEqQLO7fjgOpjmvngBE6qdYiQYEcu970fMkcbMvT9lfkcuB2
fMXBvxVzYKxjKvYRzy/y2gVn99XMQdXk9uKjk9inbxUsb5+D77evmxWNcUBR
0F2lcQo/P1x7eP0QB1TkqEnVLfPQ1kD7+IXkgAaoZVV+nIdrYhGdd2o5cPdT
Gb/gET5UnDWfdwvPdyNdz0+zfflQvOjGC/3xHNgxlT3aEcCHlhz9Wq4bx4EJ
zUTyZQgfkprqPv1fDAcsE46+PxzFh7pEKamxy3i+cl50sS6HDx3qbuPvP8WB
o2Pn+BJ6+ZC8/J8Fj/F8aqi8dV7Vkx+1JGzPfaDEgZ1OzUHu3vxoRo4aP6iA
59EUr96HvvxILv6/y0vwXHFUIfaLxkl+ZLnxeth9Au9XpiNF8wo/2mMm2XJR
jANcyZN6ern8qOmiXh6HMwkv53ID9wzyo5D4/MzUxklY3UXrOXdCAP2OOrZV
5PwkPMslvIuCBFFyRdAW95YJONvp3LT6ihAaer+tRk98AgIN9czvJwkjrfhp
rSStcZh6YOL+L24Betdnd7vUZgwaA+66ncoQQR8qslpOHBwF/R1L5n6li6IJ
yc3Wz/EcXrtdPxfdE0ME355Of2U2ZL24o896Io5uzrwVWLNqCGSWavq4PFqI
5tQblt72+Aff+EXDFcol0AtiXvDytb9QJHo8u7FWEllyDqr0tvWBpgzNx71K
Ct2+eOz9hEcvsGM5zI0t0ii0bTwgmdcDgyMqlWt+SKPGn9ecciZ6YMB6h/+K
Tmlk5JMlWM7ugR7Z27XKvdLIs3zz1aE/PfDjvn6YKEca1Ue0JgZ+6wF327fj
w+I0VNrTWzj3pAd2e/E7f1xFQ4U6tzx0DvbA0shILX8fGuotc96/v7kbglq0
w9x9aSjc5knIxsZueLeMVX/Aj4Z+yrwOl6nvBpePhj6GQTRk+kjcgvWhG+7y
j2WKhdJQsFxOw/3CbiDOOilmXqWhtzLBRzMTu0EgcL1wey4NRQ++S+k/0A17
33Xuq39MQ+5MeysN625Ik47JqHhKQ4YPn4h6WXbDlrxeyH5OQ9wY6ahR024I
/ZcSeryUhpqCb/1YpdcNY4cWjEjW0NDIusAELaVuYDl0/DDuo6EFdme2R3az
QMLINsftLw35zX8q+fWbBTqLm46H/aOhTVfftOj+ZEFUd51EGZuGTk+XqFDN
LNDyLduynktDellbx9OrWXD23J2MxWJ05H5m9vqjxyyQSbP1mVlFR6woRcvI
kyzYEt60SXENHdnZjBocCGKBt+ceQT0tOtrcpTip4c+C8hU77h3fSEdeAxP1
371Z4P5iU8OAAR3xXw1YfdCJBXmVMhvaLehoi5DHIS0TFuz808Qr8qOj2e6a
h/myLDi3OvZMfgAdfXz/UXo5kwUFgTtnc4PoaMzAuCudzgKluXK+e8F05Kmy
6UW6BAuGZbNFwsPoyGlwfmmdAAuSdobIWMbSkcy6A9/esknoerJofe8zOopl
MawM6kmQGWsp+J1PR5Vjtb6qdSSY6cVrt7+gI4GuhXxiNSQUfhTWqy+ioxgv
w5ieDyRc+TW8peANHd067rar6jUJmtLvLcK+0FFPlf/HNU9JCAk65C07REfr
jrPnUm+QEGU+7LWZTUf9vVzFr9dJuKV+ystlFP9/5BIHoRgSiluiDmdP0lFN
DmvbmSgSxjc/9dw0R0c33Vc13b1Igp/guJuNNIFqpuN3p58g4dzPM26hdAL5
7kxpYR4nIaZIyO0+g0D9Vr7RMYEkPPGSde2VI5BT3bITUX4k9H/Wdw5WJRDB
nnAs8CbBI+mC/c31BLJgL2xvcCYh6JiYfdlGAn26loouO5EQbppg16lDIBuO
bzs4kpDGfWirsZlAKp/00t7bkdDp9OlAsTGBpMR8Yqh9JAzpWB34YUKgn2vb
Ir9akzAj1b5/zpRAucIWJU/2kqD0fmCfqTmBkn7GFwbsIcFumZR1yz4CVdr5
rVpjToL33M29UwcIJHFvoEHDjIRTrYv3qtgRyOpI3yP1XSTcvLre6rATgTYv
uyq0ZgcJTUP7LTmeBHqqqrs/YBsJlsUpZrLBBOqBm7feG+L1xt3nZUIIFKxa
dnUh9qV1q17KhOLvH69abW9AQunjUmWZMAJ9y992YV6fhCUPvo8wrhBod8ol
/xBdEgx/3stiRBFo6n7sn9+bSLBV8HRgRBNIMfWzhDl2TOLYByKWQM92+ftr
6pDAiZS+Rb9JIEth7atKG0mgVbWY02/j8xp9EpO2gYTVAvf56HdxvFwPGa/E
djur6UO7T6C/HKJq+3oSQl+Nq9DSCLRoBBLa15GQzClrks4gkJmIKhGIXRew
y0g6m0A3hQ6ueqJFQs8z2phULoGUbMYrd2PPD7RmSz0mkOO9FKmJtSRoHzpM
k8oj0JWXVyrMsS0z1lRJPidQ6/Vx9dk1JBz5PXFasoBAj33qjAqw79tf6pYo
JpA7gy96OXbpTbPbEqUEEgu/+KZPE8e7ib5bogy/r35B5hPsYVo7v0Q5geQN
0+E4tqhlWvHCtwTyue8UuwV7yTWvowvfEYh5dTROEtuoZq3qwkoCtev67uha
jc9fmNMs/pFA1bzWF8XYQcZvropXE2jDemiMw445H7FFvIZAr/c9yfDDzik3
HxerI5DJgPpKK+xKHpErVk+gkbhCDx3sn5t+OIk1EEidcrZWweYcT6eLNRLo
8u+Vk+LY9Bfe1aLfCDS+eJHF9Cpcr8NaZ0SbCXQtXc+WjW26mtISbSFQtlu4
bB+2m/fbHpE2AjX7Tl9lYZ/JunxH5AfOr/7MFyT2TZaFpchP/D7i56/3YD9f
zBQU6STQhNJV5X/YdU4dJQu6CJQX8v7gJPafOxm+C1gEKotb5iCI98PXekRt
QQ+BhPpeLJDBVmSubxHuJVAp3d1rFbb2Xm60cD+B9MvWnd2GvSe2AoQHCKSZ
KrfdDdvn85UJoUGc39HSlRewI0QtHwkNE8jgEG08E/v+dhkXoRG836X0tnrs
V+E/CaExAik3igRysYdnfM4KcgjkHfL4rQM+H3s785U8ikCyIim2cdgfC1e3
DPMIxIq4fL4W+47PoNaPWQL5J9LOmuL8EKqu//l1Hp+3eqJVNLaf2rOrVfwM
NJfZVPgftknbse7nwgxUTtulcRTnX/5Gy7hsEQZyXm6v8wZb8cZao3tiDBQX
8esbgfN3ZDv7ZqQkAz0VHimtwU4pDDBzkWGglzPVa11xfSyQ3kvtk2OgDCXx
/C/YAT7rM3cpMJCmrvAbwPVkqjY2q63MQOfEii6uxfU3Fnv8xcJlDLS/q/rx
JlyfzgP7XPiXM5B4Rkrye+ya7doLqRUMZHZBR9IK13PqzIQnS5OBfoyszTiF
63+nT7D8K20G4l3a7jqK+0NhlU1V3iYGGhKweXp7MwkqarpBmXoM9G2TwOVt
uJ+Mt1KfbxgykPqvqLaHhv+P/+nzh00YqMUlVfAGkCCWbq/pZMpAUUW/c60R
CSdm9Nv37mSgrm7nNoWtJOwqnNpgZMFArgW7vxcYkzCheraXsZ+Besait0qb
kuB61ilRzAbvv2XrRjZ2XashmrdloCnr+8++4X74IHb2zoAjjneHr0Em7pdm
M2G733sw0BhvfVHgbhLSWy++9DvOQPc8lg4VHSCht2rd79iTDJTZcn1Trw2u
h5e/xfJPMZAip/WhIu7vxXFGruwzDKT06Fn/DQcS6nfxxAIiGCgrJJb+1JUE
7usA18BkHA+VhuuPfUjY8nhxdPwtBrJO/u/vIl/cb283vHxxB68vV+KReIwE
qZOa4mOp+PyYF/JjAkhYurb/ZVA2A30s0Ep5Hoz7U5qr+IkSBiIZh9zeXCIh
KVZKJ+kVA0mpHzsceJmE9rNvXF++ZqB/ousurYwkwdNeqWiiAsdPYGIuK5qE
00Sr68kaBno3kzj6NZ6EzAjLouB2BkKPDlv1pZEw5W3kdnoan0/9QzXVShyf
16vQyVkGWte4UmndR5xvkvKqgfMM9HNIKHlbNe7/BWO/vQWZ6EZOnshJPA+E
Tee42i1korStu3/wN5EgGEu46ioxUZnW1zeVPSRIFPY5T27Gz2Pf3PklzgIn
4e9Go4ZM9N+huRtOkix4ZlupPLSFiTQ8kiY6pVlgOXPvV48xEy3vNl0wjOeZ
uO3Wzs1mTNRhtnOzzmIWMNvKnQodmMhnSsLGS5sFyrPxjoGhTBSdsvb1gYN4
PmLtfnXrLBPlnrsxcN6TBSc+icm9DWOi3u16onleLKiLv/hN/BITzRQWisv6
sSBYI3BX5jUm6i/fS8icYUHjHivd1ntMxDcVZNeQzILwDCmGUQUT7XBN6tNo
YEHvjmt1okIyaGawPUfHrBvczd1Uly2QQb3TIpsRnkd/WeoEbxWVQZwY6QOW
eF5tPvBbLVRCBimIa6iddOiGSo+Np/8xZZCmafLooE83pJ7vWN6wTAYJrPEL
jIjphv0lqy8n7pBBhwcfPTL71g0fNOpB5ZoMGjI2eDfs1QM+otlCamKyKF5C
So+R/gdK0tSNPsTLopevZr9+U+uDBgPDKmu6HFopz5S686wfuD4p+9xi5ZCx
z8va5t0DUGP14ICkrDzK3GnA/rRyENz1DXNykuTRYu2FNXcnh+DI0JfJnzfl
kc5wk3vJ7BAEpLuaEHfkEXO3/d1m4WE4L3aJPJsqj5Iiir7TZIfhXnutknW2
PLpyzUcvbtMwtJy2jZspkUeaGYPhuaeGwaws6PTeDnnUuiH4y5qpYdjrJ1Rz
5Zc80hhftMFegA12S27Klv+WR87F9J4IcTZ4Rb8q1OiRR8XG7GW/FNkQ4cA3
PD0oj/piXnfEGbDh7dR19+w5eeTpdJAUOMeGqrzFLzr4FNDg8gH2+stsqHd/
MU8TVECe0LX04HU2dNQ13zsjooAqmIpjFals4N5VarWiKaCCiwNk2Fs2zFs+
W3aFUEDnVgm15FWzYYEgnHjNVEAby5I7OhvYwDzqTtdQUECRtsvo8JsNSosn
XB2VFJBMxTJD/z42LGm6nBenrIBGKzP8HrDZsCpSbrZqsQL6GaWc/ZViw3qD
R+bTagpIREeua36eDf8DhxEE9g==
       "]]},
     Annotation[#, "Charting`Private`Tag$28063#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj00a74/NOvb1Y8sI+KEfy1oxJ6+1h/Imf
YjZPm7Qfzrc+6sXlVHwBzi+o8kvcXHADzs/dkdrHpPwAzr/ywpNzedITOL9L
/xvDtsgXcH6h9ompB5a+gfN/JWevu5v3Ac5P2hsWMCHtE5yf/PHKgQMdX+D8
HoPt+cvavsH5TAe2m7dU/YDzBbW8z92f8QvO95jvtPjDpD9wvvj7M2712//B
+bOO72JkzmRwgPFtZB3/K6QwwvnaDwSe1JYwwflrVwhlbC1ihvNr7sVe1m5j
gfMLbSy8501hhfN/zXdJej2BDc6/UDAroXwRO5xv6a707+5CDjj/pKvlCoc5
nHD+0o0zLR+t5oLzRZV1suJWcsP5lxg5miT38MD5WzmKl104yQvn64gKZCUd
5YPz3/d9EzG+xg/nK7e36+dnCcD5j6Ju33J6juB7PL38c2ueIJxfUZSaIfYW
wffbNttLrEwIzn/3J6uG+RuCv/B645a8YmFEeGTYJlT+RvBl/06MLqwSgfOf
uXef4mARhfMPq52xl+tG8LM4lrEocorB+dsXqNgenojgn7O2ORokKA7n/8ia
HZzQh+CfCJgfyismAecnWdosXz4FwffaVVQZeBvBN7Re6f1bURLOBwAGAddp

       "]]},
     Annotation[#, "Charting`Private`Tag$28063#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5364845723736645},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {0.5364845723736633, 1.4635154364322231`}}, {{
     0, 6.283185307179586}, {0.5364845723736633, 1.4635154364322231`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9289666476631165`*^9, 3.928966748474554*^9, 
  3.9289667930613313`*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"3d69309f-4b2e-4159-9b02-39753e1ee4b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "a", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "c"}]]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"b", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "c"}]]}]}], "}"}]}], "]"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9290006948167157`*^9, 3.9290007495495358`*^9}, {
  3.929000787208869*^9, 3.9290008774699697`*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"cec30df0-f994-45aa-8d38-e941fca83edc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["a", "2"], 
      RowBox[{"a", " ", "b", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "c"}]]}]},
     {
      RowBox[{"a", " ", "b", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "c"}]]}], 
      SuperscriptBox["b", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.929000718396911*^9, 3.9290007499468803`*^9}, {
   3.929000788987228*^9, 3.9290008019781876`*^9}, 3.929000836398033*^9, 
   3.929000877831994*^9},
 CellLabel->
  "Out[421]//MatrixForm=",ExpressionUUID->"4a2eb243-2241-441d-808f-\
9ce56643e209"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigToExp", "[", 
  RowBox[{"Sin", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9290071632837305`*^9, 3.929007168736501*^9}},
 CellLabel->
  "In[533]:=",ExpressionUUID->"13b9146a-8f9e-4916-bd4e-5ea1df01eb39"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{3.9290071690271783`*^9},
 CellLabel->
  "Out[533]=",ExpressionUUID->"a8a3a5d7-ab27-4e89-8180-530f98c454d1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MA", "==", "MD"}], ",", " ", 
     RowBox[{"MD", "==", "1"}], ",", "..."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Beta]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Gamma]", "\[Element]", "Reals"}], "&&", 
     RowBox[{"0", "<=", "\[Alpha]", "<=", 
      RowBox[{"2", "\[Pi]"}]}], "&&", 
     RowBox[{"0", "<=", "\[Beta]", "<=", 
      RowBox[{"2", "\[Pi]"}]}], "&&", 
     RowBox[{"0", "<=", "\[Gamma]", "<=", 
      RowBox[{"2", "\[Pi]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92919548516354*^9, 
  3.929195588320665*^9}},ExpressionUUID->"fcce82fc-c490-478a-8c1c-\
e3baec04fe24"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["general waveplate", "Section",
 CellChangeTimes->{{3.929453765827923*^9, 
  3.929453774477931*^9}},ExpressionUUID->"bd3d6c40-6bd0-4912-8413-\
3952a086b465"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"QWP", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Phi]"}], "]"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "-", "1"}], ")"}], 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "-", "1"}], ")"}], 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HWP", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Theta]"}], "]"}], 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
      {
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}]}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AWP", "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "I"}], "*", 
      RowBox[{"eta", "/", "2"}]}], "]"}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "theta", "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", "eta"}], "]"}], "*", 
          RowBox[{
           RowBox[{"Sin", "[", "theta", "]"}], "^", "2"}]}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", "eta"}], "]"}]}], ")"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "phi"}], "]"}], "*", 
         RowBox[{"Cos", "[", "theta", "]"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", "eta"}], "]"}]}], ")"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", "phi"}], "]"}], "*", 
         RowBox[{"Cos", "[", "theta", "]"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", "eta"}], "]"}], "*", 
          RowBox[{
           RowBox[{"Cos", "[", "theta", "]"}], "^", "2"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "theta", "]"}], "^", "2"}]}]}], "}"}]}], 
     "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.929453775607436*^9, 3.9294537756177487`*^9}, {
  3.9294538174974937`*^9, 3.9294540677177525`*^9}, {3.929454139637706*^9, 
  3.92945419044751*^9}, {3.9294542568676977`*^9, 
  3.929454321837403*^9}},ExpressionUUID->"9f1dbd7b-30a9-4ef2-bc40-\
aa56cdde9142"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"res", " ", "=", 
  RowBox[{"V", ".", 
   RowBox[{"(", 
    RowBox[{"AWP", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eta", "->", "2"}], ",", 
       RowBox[{"phi", "->", "4.5"}], ",", 
       RowBox[{"theta", "->", "1.9"}]}], "}"}]}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{"HWP", "/.", 
     RowBox[{"\[Theta]", "->", 
      RowBox[{"\[Phi]", "+", ".1"}]}]}], ")"}], ".", "QWP", ".", 
   "V"}]}]}], "Input",
 CellChangeTimes->{{3.929454287937722*^9, 3.9294542936772537`*^9}, {
  3.929454327867199*^9, 3.929454340887797*^9}, {3.929454503517218*^9, 
  3.9294545174468136`*^9}, {3.9294545499367466`*^9, 3.929454571384988*^9}, {
  3.9294546452270985`*^9, 3.9294548427017183`*^9}, {3.929454894547327*^9, 
  3.9294548990665693`*^9}, {3.929455004116783*^9, 3.929455071526518*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5b7a2586-bf5e-40fc-a4c7-bb6b47c54a83"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.5032918035588274`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.10853046485314446`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"0.1`", "\[VeryThinSpace]", "+", "\[Phi]"}], ")"}]}], 
       "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.0806046117362795`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.3311527589917458`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"0.1`", "\[VeryThinSpace]", "+", "\[Phi]"}], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.5403023058681398`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.6655763794958729`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"0.1`", "\[VeryThinSpace]", "+", "\[Phi]"}], ")"}]}], 
       "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.0065836071176548`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.21706092970628893`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"0.1`", "\[VeryThinSpace]", "+", "\[Phi]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"0.1`", "\[VeryThinSpace]", "+", "\[Phi]"}], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.929454334257494*^9, 3.9294543422270083`*^9}, {
   3.9294545094870486`*^9, 3.929454517816876*^9}, {3.929454554777111*^9, 
   3.929454573904167*^9}, 3.9294546487428694`*^9, {3.929454817526665*^9, 
   3.929454844839289*^9}, 3.9294549010567555`*^9, {3.929455066636304*^9, 
   3.9294550719678764`*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"1f3a89fd-904a-4fe3-8834-4369a1d09c13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", "res", "]"}], "2"], "//", "FullSimplify"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"\[Phi]", " ", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929455075401885*^9, 3.92945512108685*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"3db35f2e-7165-4511-bfc8-3859da69948d"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.6561990881188577`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.022642803931165884`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.02217498082407178`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.651695858543663`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.0045032295751948614`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0004678231070941036`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.29139352144142383`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.3475489066207674`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.02979603055495543`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0030953943965174313`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "\[Phi]"}], "]"}]}]}], "]"}], "2"]], "Output",
 CellChangeTimes->{{3.9294550853765597`*^9, 3.929455121679883*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"1be3a0ab-ac95-487b-b227-33e2d6123578"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"a", "-", 
  RowBox[{"b", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
  RowBox[{"c", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "+", 
  RowBox[{"d", " ", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
  RowBox[{"f", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "\[Phi]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9294551392262316`*^9, 
  3.929455167916822*^9}},ExpressionUUID->"4cb38e0b-383c-4b6b-bc39-\
6b2dc249886c"],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Input",
 CellChangeTimes->{{3.929455210007106*^9, 
  3.9294552122120748`*^9}},ExpressionUUID->"95738ca6-d058-4e24-a596-\
b5357990050e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", "res", "]"}], "2"], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.929454958446678*^9, 3.9294549626366005`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"f4ea8202-eb26-4a34-9248-deb356eff6f5"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"Im", "[", 
    RowBox[{"eta", "+", 
     RowBox[{"2", " ", "phi"}]}], "]"}]], " ", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "phi"}]], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "theta", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"eta", "+", "phi"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
          RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "theta", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "-", 
          RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1.`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "eta"}]]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.9294549634868693`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"38eeac66-2ae6-4459-b7eb-ced44f20b12f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", "res", "]"}], "2"], "//", "FullSimplify"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\[Theta]", "|", "\[Phi]", "|", "eta", "|", "theta", "|", "phi"}], 
      ")"}], "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9294549046269565`*^9, 3.929454942587326*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"440ce9e1-029e-4439-a8ec-24757cb13ae3"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "phi"}]], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "theta", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"eta", "+", "phi"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "theta", "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "eta"}]]}]}], ")"}], " ", 
     RowBox[{"Cos", "[", "theta", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "theta", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], "2"]], "Output",
 CellChangeTimes->{{3.929454905708194*^9, 3.9294549430367427`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"9c14ab1a-9482-4762-b812-b28d59bfffa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"res", ",", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9294546498668976`*^9, 3.929454656417673*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1b3e583f-d0b7-4ef5-865f-60e0416a8c2e"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[ImaginaryI]", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "eta"}], "2"]}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "theta", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "eta"}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "eta"}], "2"]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "phi"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "eta"}]]}], ")"}], " ", 
        RowBox[{"Cos", "[", "theta", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "theta", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "eta"}], "2"]}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "phi"}]}]]}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "eta"}]]}], ")"}], " ", 
        RowBox[{"Cos", "[", "theta", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}], " ", 
        RowBox[{"Sin", "[", "theta", "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "eta"}], "2"]}]], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "theta", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "eta"}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], "]"}], 
  "2"]], "Output",
 CellChangeTimes->{3.9294546668968267`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"d4ef6dba-2ae0-4c91-9aff-795e48f48a02"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"period", " ", "for", " ", "above", " ", "is", " ", 
    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
   RowBox[{
   "\[Pi]", " ", "for", " ", "rotating", " ", "both", " ", "waveplates", " ", 
    "together"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.929454359667856*^9, 3.9294543640773916`*^9}, {
  3.9294544420167823`*^9, 3.929454496627116*^9}, {3.929454546237064*^9, 
  3.929454547312378*^9}},ExpressionUUID->"e90ce7aa-ec61-4b52-ad91-\
63ed620f1a0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"], "+", 
    RowBox[{"Sin", "[", "x", "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
   RowBox[{"Sin", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929454590297204*^9, 3.9294546369571905`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e60e0c9a-8390-4f08-9270-ea004d8a1f15"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
   RowBox[{"Sin", "[", "x", "]"}]}], "+", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.9294546380068693`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"ce78ee47-43b9-46de-a7bf-2dd54a567c6e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{479., 503.75},
WindowMargins->{{Automatic, 69.5}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8f4f1430-f34c-4fb0-aacc-507370a2830e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 185, 3, 121, "Title",ExpressionUUID->"c8cc374a-255d-4c98-ba78-fd3de5b77e0c"],
Cell[768, 27, 153, 3, 27, "Text",ExpressionUUID->"0950b21a-4e41-4d00-bca1-d00a20acf248"],
Cell[CellGroupData[{
Cell[946, 34, 158, 3, 50, "Section",ExpressionUUID->"c9728dee-7638-43a2-abb6-5c4706fcb4ab"],
Cell[CellGroupData[{
Cell[1129, 41, 2157, 60, 122, "Input",ExpressionUUID->"5a220ab1-cfae-4a7b-83c9-afca461e94c0"],
Cell[3289, 103, 876, 23, 45, "Output",ExpressionUUID->"839b59a3-a6a8-4778-925d-34118bb493c1"],
Cell[4168, 128, 854, 22, 45, "Output",ExpressionUUID->"56858d29-75c9-4792-b2fd-349efd6e1229"],
Cell[5025, 152, 866, 22, 45, "Output",ExpressionUUID->"c67222a0-3ba9-4d59-a64a-524ac3d0b8fc"],
Cell[5894, 176, 416, 7, 24, "Output",ExpressionUUID->"bbac4ca4-8397-40d6-88e5-2b46e6e3f73b"],
Cell[6313, 185, 416, 7, 24, "Output",ExpressionUUID->"068f559d-212b-4377-a36b-46720d28dccf"],
Cell[6732, 194, 428, 7, 24, "Output",ExpressionUUID->"7338e360-79d0-418b-ac2b-975eb795004d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7197, 206, 1828, 54, 120, "Input",ExpressionUUID->"5a562aea-621a-4105-bb29-0d76a3045a10"],
Cell[9028, 262, 815, 23, 45, "Output",ExpressionUUID->"bcd19a3c-e0e0-41b5-a3a3-4dea2bc163a4"],
Cell[9846, 287, 816, 23, 45, "Output",ExpressionUUID->"9e8ecd8d-5c0a-407e-869c-46eb637d13c9"],
Cell[10665, 312, 794, 22, 45, "Output",ExpressionUUID->"faf519ce-340b-4016-afaa-15a2247210d5"],
Cell[11462, 336, 368, 7, 24, "Output",ExpressionUUID->"05ee0854-7e99-4519-9f65-637465bd1866"],
Cell[11833, 345, 387, 8, 24, "Output",ExpressionUUID->"902d90fb-323e-46a6-bf75-8b22fc77c23a"],
Cell[12223, 355, 368, 7, 24, "Output",ExpressionUUID->"e9e24556-2a4c-4c39-aa06-ae767cc770f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12628, 367, 500, 12, 21, "Input",ExpressionUUID->"ca2bafbf-ee91-4113-9f49-b7dd3d68324f"],
Cell[13131, 381, 1742, 50, 39, "Output",ExpressionUUID->"189f6e72-0d41-4e20-acae-36e12c4fd9b7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[14922, 437, 178, 3, 40, "Section",ExpressionUUID->"288fcc00-4c54-4dc6-87ae-f76f89f95598"],
Cell[CellGroupData[{
Cell[15125, 444, 346, 7, 61, "Subsection",ExpressionUUID->"1b1dec2a-08ba-4a94-8efe-531e1acb4776"],
Cell[CellGroupData[{
Cell[15496, 455, 2238, 61, 110, "Input",ExpressionUUID->"b38201c6-2976-43d8-b076-5b30c317898b"],
Cell[17737, 518, 1163, 33, 49, "Output",ExpressionUUID->"16c3e854-bcac-4544-b6c5-251ca6f7b3e5"]
}, Open  ]],
Cell[18915, 554, 315, 7, 27, "Text",ExpressionUUID->"69950d01-7854-452c-b03c-ea96546d2e39"],
Cell[19233, 563, 64851, 1070, 107, "Input",ExpressionUUID->"525941ce-65eb-4237-8f27-930775a0a070"],
Cell[CellGroupData[{
Cell[84109, 1637, 1382, 32, 151, "Input",ExpressionUUID->"d1687a90-96e3-419a-9a9e-7ba94750d0c2"],
Cell[85494, 1671, 292, 4, 24, "Output",ExpressionUUID->"5c0ba26b-e2de-4ecf-bad7-f2624017aa43"],
Cell[85789, 1677, 366, 7, 25, "Output",ExpressionUUID->"194a6c7a-4c7e-4120-be79-d7bea793076a"],
Cell[86158, 1686, 292, 4, 24, "Output",ExpressionUUID->"c0393f71-678b-46a4-aea0-98515bf4b3df"],
Cell[86453, 1692, 588, 14, 25, "Output",ExpressionUUID->"68c23834-d990-4e39-9087-362d61ece6f3"],
Cell[87044, 1708, 292, 4, 24, "Output",ExpressionUUID->"64e45b49-26e1-4a41-8fe1-e504d0e78064"],
Cell[87339, 1714, 632, 14, 25, "Output",ExpressionUUID->"37514ee8-1f8e-4eac-83b5-8b4d5f3f1e1c"],
Cell[87974, 1730, 292, 4, 24, "Output",ExpressionUUID->"5b66520e-e00f-494f-814c-10ba1afcabff"],
Cell[88269, 1736, 366, 7, 25, "Output",ExpressionUUID->"792743ea-3934-4287-bd54-ae5fdc9e8515"],
Cell[88638, 1745, 1142, 32, 49, "Output",ExpressionUUID->"446f7a99-ad8f-4069-89f2-e317b82cc20f"]
}, Open  ]],
Cell[89795, 1780, 719, 14, 63, "Text",ExpressionUUID->"ff35358e-c139-40ed-b6f6-136388b109e3"],
Cell[CellGroupData[{
Cell[90539, 1798, 2780, 80, 186, "Input",ExpressionUUID->"10b5173d-63b5-4608-9e51-6a511598a102"],
Cell[93322, 1880, 219, 4, 24, "Output",ExpressionUUID->"af27fad5-1d3a-4d1d-9115-0ac8d4d4c47d"],
Cell[93544, 1886, 229, 5, 25, "Output",ExpressionUUID->"d2f7e8e7-e37e-4125-82f5-af6894865ea9"],
Cell[93776, 1893, 221, 4, 24, "Output",ExpressionUUID->"2b7d22e9-b504-42be-aa8d-68f05d804cd8"],
Cell[94000, 1899, 481, 14, 43, "Output",ExpressionUUID->"bfbd4298-ab16-4788-8541-d38f7972fc3e"],
Cell[94484, 1915, 221, 4, 24, "Output",ExpressionUUID->"4f07230f-c99e-45be-ad1b-27c6a3b7a4c6"],
Cell[94708, 1921, 503, 14, 43, "Output",ExpressionUUID->"c6cd3a69-59d6-4a97-a07e-e17cbaf03d5e"]
}, Open  ]],
Cell[95226, 1938, 291, 7, 27, "Text",ExpressionUUID->"2c09b19a-a54f-4a48-8133-516614754782"],
Cell[CellGroupData[{
Cell[95542, 1949, 1833, 45, 264, "Input",ExpressionUUID->"3f37fddd-1901-4f70-9246-5e4e648d2291"],
Cell[97378, 1996, 326, 5, 24, "Output",ExpressionUUID->"5fe4da27-1792-410b-9e9c-4786e988ff8d"],
Cell[97707, 2003, 776, 21, 45, "Output",ExpressionUUID->"c0896a87-fc7c-4c3c-8a5e-dc26ebebc7b3"],
Cell[98486, 2026, 326, 5, 24, "Output",ExpressionUUID->"dbf13612-e1f9-4734-9a99-671b03a1f6f7"],
Cell[98815, 2033, 776, 21, 45, "Output",ExpressionUUID->"2ac5e5c8-fe55-40d6-9ba3-182897cf5f54"],
Cell[99594, 2056, 326, 5, 24, "Output",ExpressionUUID->"ca0626b9-5fb9-4ca8-94b7-9a846b7f0983"],
Cell[99923, 2063, 922, 27, 61, "Output",ExpressionUUID->"a5c4d43b-5fff-41dc-80c9-6aee9eea3b00"],
Cell[100848, 2092, 324, 5, 24, "Output",ExpressionUUID->"5e710ff7-072f-441e-94cb-bc8d4f413c00"],
Cell[101175, 2099, 874, 25, 61, "Output",ExpressionUUID->"f562b1b6-08e1-457e-bd56-f2e4637193c8"],
Cell[102052, 2126, 324, 5, 24, "Output",ExpressionUUID->"077cc21b-c607-4fed-a76f-d180662ba842"],
Cell[102379, 2133, 921, 26, 61, "Output",ExpressionUUID->"79f59acb-00bc-4ce3-b251-8c138514b7d7"],
Cell[103303, 2161, 324, 5, 24, "Output",ExpressionUUID->"db09b502-4e46-418b-b933-9e17e9ddafe9"],
Cell[103630, 2168, 967, 28, 61, "Output",ExpressionUUID->"9bd54ca1-31e3-4070-8ad3-b5822461dfab"]
}, Open  ]],
Cell[104612, 2199, 187, 3, 27, "Text",ExpressionUUID->"57b61580-b0a3-49e5-9b79-5415f6428e8d"],
Cell[CellGroupData[{
Cell[104824, 2206, 639, 14, 50, "Input",ExpressionUUID->"08258739-9e1c-4462-9404-e9e1b847d364"],
Cell[105466, 2222, 307, 6, 25, "Output",ExpressionUUID->"0835f400-f25c-44e1-a8d4-e5c1f8522d36"],
Cell[105776, 2230, 497, 12, 41, "Output",ExpressionUUID->"dbf42e33-3f69-4c6b-a4aa-31012228a6bb"],
Cell[106276, 2244, 519, 12, 41, "Output",ExpressionUUID->"9c20311a-be86-42c6-b11a-e16630a801cc"]
}, Open  ]],
Cell[106810, 2259, 615, 10, 45, "Text",ExpressionUUID->"70dfff89-d3f3-408f-ba24-32f7476f0898"],
Cell[CellGroupData[{
Cell[107450, 2273, 494, 11, 36, "Input",ExpressionUUID->"71ac0ca7-ed5e-4899-892f-4cba79c2771a"],
Cell[107947, 2286, 361, 10, 24, "Output",ExpressionUUID->"b29f3b21-0d69-456d-963f-58b945e9b31f"],
Cell[108311, 2298, 270, 6, 25, "Output",ExpressionUUID->"b742aee2-916a-4461-8387-8269301a283f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108618, 2309, 497, 10, 21, "Input",ExpressionUUID->"b2ac064e-5f88-4316-a0e0-1b6d24c117bb"],
Cell[109118, 2321, 443, 11, 25, "Output",ExpressionUUID->"3fec88c7-5640-419b-8121-f6f867b27db5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109598, 2337, 376, 9, 21, "Input",ExpressionUUID->"d191ee4c-5c42-4679-a8ee-7cb871bae28f"],
Cell[109977, 2348, 456, 11, 25, "Output",ExpressionUUID->"b8cc2b12-c470-43e0-a8e9-b025b291a74d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110470, 2364, 380, 9, 21, "Input",ExpressionUUID->"41a26e5b-891d-4861-93d8-046ff1b0a78c"],
Cell[110853, 2375, 395, 11, 25, "Output",ExpressionUUID->"1f41ac35-832b-42dc-ab48-f71df36f8fc4"]
}, Open  ]],
Cell[111263, 2389, 154, 3, 21, "Input",ExpressionUUID->"262d2138-1767-46de-901f-8dd0f103bbb6"],
Cell[CellGroupData[{
Cell[111442, 2396, 184, 3, 21, "Input",ExpressionUUID->"b8338142-5c43-4ba2-890a-6406534b95ef"],
Cell[111629, 2401, 438, 15, 39, "Output",ExpressionUUID->"22c038f6-66ca-47ee-89e5-b622bfaaeade"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112104, 2421, 593, 15, 36, "Input",ExpressionUUID->"8acc8d31-3e3f-4a31-bcdf-b974ae0c4cea"],
Cell[112700, 2438, 1514, 43, 34, "Output",ExpressionUUID->"9e241b4a-056f-4e0e-8a8d-d282505ed9e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114251, 2486, 154, 3, 21, "Input",ExpressionUUID->"52f66211-01da-4be6-96ac-d951c42a5083"],
Cell[114408, 2491, 200, 5, 24, "Output",ExpressionUUID->"1cf2b559-e095-42a5-9d28-85071e2f0618"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114645, 2501, 260, 6, 21, "Input",ExpressionUUID->"638da281-e608-450c-ab64-761e52b5441a"],
Cell[114908, 2509, 200, 5, 24, "Output",ExpressionUUID->"dac10e72-5659-4431-93da-c8ee9c68080d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115145, 2519, 258, 6, 21, "Input",ExpressionUUID->"58d1ef48-c6c7-45ed-b1ec-5e5eb024b106"],
Cell[115406, 2527, 200, 5, 24, "Output",ExpressionUUID->"9d21f1c3-7bdd-41f5-8d1c-1bf823f5bbbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115643, 2537, 258, 6, 21, "Input",ExpressionUUID->"c56a37c9-a0fa-49ca-8f54-bc34235366cd"],
Cell[115904, 2545, 296, 9, 42, "Output",ExpressionUUID->"c335245e-40b9-4634-bd94-9f66225c7f16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116237, 2559, 256, 6, 21, "Input",ExpressionUUID->"c1955a14-6960-490e-b6c3-e12a451fe900"],
Cell[116496, 2567, 290, 10, 42, "Output",ExpressionUUID->"c9b827f6-cf53-4b50-85c3-b10d94a75581"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116823, 2582, 205, 4, 21, "Input",ExpressionUUID->"e1c40354-6620-494a-92e9-51f66ebef092"],
Cell[117031, 2588, 219, 5, 25, "Output",ExpressionUUID->"673516af-8bb3-4048-8860-02b077825a35"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[117299, 2599, 295, 4, 30, "Subsection",ExpressionUUID->"05a63e65-2d43-47fd-8a11-a1b7f4550ccb"],
Cell[CellGroupData[{
Cell[117619, 2607, 2539, 76, 261, "Input",ExpressionUUID->"694069e8-7ae2-4412-9f7b-eeb789f59643"],
Cell[120161, 2685, 1060, 31, 49, "Output",ExpressionUUID->"0c988e81-2208-4bc7-bc09-4d0ea6e95a0f"]
}, Open  ]],
Cell[121236, 2719, 315, 7, 27, "Text",ExpressionUUID->"71e4a5ff-c3aa-44a3-bac1-6425a889426a"],
Cell[121554, 2728, 64851, 1070, 107, "Input",ExpressionUUID->"e5c5593b-6600-4dad-a501-2608d36734b2"],
Cell[CellGroupData[{
Cell[186430, 3802, 1386, 33, 151, "Input",ExpressionUUID->"ad7151a1-1f6e-40de-aa44-97f1603ae7bf"],
Cell[187819, 3837, 243, 4, 24, "Output",ExpressionUUID->"c68e147d-949f-4318-890f-248bfb2301a1"],
Cell[188065, 3843, 317, 7, 25, "Output",ExpressionUUID->"c80df3e0-8d9a-433f-b02e-0e34769f14d6"],
Cell[188385, 3852, 243, 4, 24, "Output",ExpressionUUID->"b7b31322-ed1b-4834-8fa6-21ae108c5715"],
Cell[188631, 3858, 539, 14, 25, "Output",ExpressionUUID->"c6441f6b-a001-4643-b865-f381d4fb9ac2"],
Cell[189173, 3874, 243, 4, 24, "Output",ExpressionUUID->"c01ed9e8-3013-4dae-8ab9-a90c82ff3a35"],
Cell[189419, 3880, 583, 14, 25, "Output",ExpressionUUID->"81084587-6c26-4650-b07f-dfb1bfa3b699"],
Cell[190005, 3896, 243, 4, 24, "Output",ExpressionUUID->"4775ed27-a99c-496d-aa58-af8b224fcedd"],
Cell[190251, 3902, 317, 7, 25, "Output",ExpressionUUID->"37cac234-2df4-4d03-a701-a520ed535679"],
Cell[190571, 3911, 1090, 31, 49, "Output",ExpressionUUID->"aa8473a4-25e7-4c05-a670-abb967bc674e"]
}, Open  ]],
Cell[191676, 3945, 282, 6, 27, "Text",ExpressionUUID->"b124f5bf-3aae-4155-8d74-a2185417c3d4"],
Cell[CellGroupData[{
Cell[191983, 3955, 298, 6, 21, "Input",ExpressionUUID->"3ce7bf47-e48b-4c08-b2c1-dcdd09199077"],
Cell[192284, 3963, 691, 20, 34, "Output",ExpressionUUID->"6b8cf3bb-62a8-44d0-9232-b73e38a30852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193012, 3988, 415, 10, 21, "Input",ExpressionUUID->"d7314c1e-a25a-4155-9088-45a81d88c415"],
Cell[193430, 4000, 378, 11, 33, "Output",ExpressionUUID->"461cda1b-a42f-48d1-b670-e98ca51a14ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193845, 4016, 409, 10, 36, "Input",ExpressionUUID->"c0dda5b9-ef2b-4ab4-9603-9e2da0d9fa32"],
Cell[194257, 4028, 821, 25, 34, "Output",ExpressionUUID->"3d4f53ef-dd04-4f0e-996e-def392c4a6a5"],
Cell[195081, 4055, 388, 11, 24, "Output",ExpressionUUID->"7cf34758-cf38-47e9-92c6-0ca107d92ba6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[195518, 4072, 162, 3, 30, "Subsection",ExpressionUUID->"28cab0f4-d8e9-48ab-a49f-a4e275735235"],
Cell[195683, 4077, 1304, 35, 107, "Input",ExpressionUUID->"adef5201-f95e-43bc-bcd5-59ab58bb8693"],
Cell[196990, 4114, 212, 4, 27, "Text",ExpressionUUID->"7c3a2288-02fc-4b61-afd8-7928bc0e261b"],
Cell[CellGroupData[{
Cell[197227, 4122, 937, 24, 25, "Input",ExpressionUUID->"837f456a-d986-449d-ac66-01dd3a61f5d1"],
Cell[198167, 4148, 334, 6, 25, "Output",ExpressionUUID->"70b38999-5bf4-4434-b1bf-17550509c8c1"]
}, Open  ]],
Cell[198516, 4157, 214, 4, 27, "Text",ExpressionUUID->"d5b2f830-6760-421a-95ba-b0469e47521c"],
Cell[CellGroupData[{
Cell[198755, 4165, 1045, 25, 25, "Input",ExpressionUUID->"bcfdbfb0-23e8-4abe-914f-02059b470537"],
Cell[199803, 4192, 357, 6, 25, "Output",ExpressionUUID->"98fb703a-0db1-4d8f-a1be-4ac5c1639293"]
}, Open  ]],
Cell[200175, 4201, 160, 3, 27, "Text",ExpressionUUID->"1c68edbb-3e55-47a8-b1df-c91fea9c634f"],
Cell[CellGroupData[{
Cell[200360, 4208, 892, 23, 25, "Input",ExpressionUUID->"30843628-4826-445b-8efd-ca028573b2a8"],
Cell[201255, 4233, 485, 12, 28, "Output",ExpressionUUID->"39fb4edb-8606-49b7-bc42-9786b081ca22"]
}, Open  ]],
Cell[201755, 4248, 230, 4, 27, "Text",ExpressionUUID->"b9e3f654-963d-4ee2-a535-e6cdb2fa1e79"],
Cell[CellGroupData[{
Cell[202010, 4256, 951, 25, 25, "Input",ExpressionUUID->"b18a49d9-0036-4a1f-a76c-20350321f679"],
Cell[202964, 4283, 518, 13, 28, "Output",ExpressionUUID->"a4650f64-348d-4b69-9d73-e9bbf083abef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203519, 4301, 996, 26, 25, "Input",ExpressionUUID->"03fbcef1-3abc-4e81-a860-b9699e9b099d"],
Cell[204518, 4329, 17833, 382, 51, "Output",ExpressionUUID->"53ddaf85-5851-4aff-9049-8ca5b6b86acd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222388, 4716, 865, 23, 25, "Input",ExpressionUUID->"0098cbe0-4305-4512-baeb-3533835f968b"],
Cell[223256, 4741, 17730, 380, 51, "Output",ExpressionUUID->"9a415618-acd3-4253-bbbd-a22cc43f228d"]
}, Open  ]],
Cell[241001, 5124, 181, 3, 27, "Text",ExpressionUUID->"b89b6647-3d0e-46af-b1bf-308a5c51f6f2"],
Cell[CellGroupData[{
Cell[241207, 5131, 5601, 154, 286, "Input",ExpressionUUID->"3f37b166-04e2-4ce4-84d9-faad2ba96b56"],
Cell[246811, 5287, 911, 17, 18, "Print",ExpressionUUID->"5391e0df-a8ce-4647-b90c-062ecbc70188"],
Cell[247725, 5306, 591, 9, 24, "Output",ExpressionUUID->"a3968925-94b5-47bd-8629-db11df41d967"],
Cell[248319, 5317, 568, 9, 24, "Output",ExpressionUUID->"d2a1fa70-8535-4b48-84a5-133d6e60ea72"],
Cell[248890, 5328, 592, 9, 24, "Output",ExpressionUUID->"955200b7-f675-4189-8df8-6ddca6c9ef9c"],
Cell[249485, 5339, 554, 9, 24, "Output",ExpressionUUID->"c921377b-e7d3-423e-a9e6-7a8b6384318a"],
Cell[250042, 5350, 590, 9, 24, "Output",ExpressionUUID->"f928d417-1cee-4fe7-ba83-79fc302822e4"],
Cell[250635, 5361, 663, 11, 24, "Output",ExpressionUUID->"26ae13cc-19ea-4760-b4ea-896408d6e45b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251335, 5377, 416, 11, 25, "Input",ExpressionUUID->"f1dbb7ac-f9a6-4014-9521-b91930b93f2f"],
Cell[251754, 5390, 173, 3, 24, "Output",ExpressionUUID->"49398459-27a4-4036-b006-e2e8db2aa648"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251964, 5398, 356, 8, 22, "Input",ExpressionUUID->"61bedbee-f0e9-4b8d-a7d9-28e647010e83"],
Cell[252323, 5408, 195, 3, 24, "Output",ExpressionUUID->"23134069-e918-4cd8-a3dc-5f7d99576da9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252555, 5416, 3430, 96, 197, "Input",ExpressionUUID->"981d92e8-0450-481f-9ded-721ca4e20c97"],
Cell[255988, 5514, 947, 18, 18, "Print",ExpressionUUID->"e3b24fa2-f6cf-4462-b5e2-043dd2b9ab58"],
Cell[256938, 5534, 569, 9, 24, "Output",ExpressionUUID->"7e0a56fa-c78b-44e4-90b8-9d3537e475e7"],
Cell[257510, 5545, 546, 9, 24, "Output",ExpressionUUID->"e186631f-6682-4e4d-9d2b-b6076f0d5e60"],
Cell[258059, 5556, 570, 9, 24, "Output",ExpressionUUID->"e3266e6e-e9ba-4a91-a9c8-0067f65d1879"],
Cell[258632, 5567, 546, 9, 24, "Output",ExpressionUUID->"14889f5f-f530-4933-81e5-7327b24063a8"],
Cell[259181, 5578, 568, 9, 24, "Output",ExpressionUUID->"f47a26f2-b49e-49bc-8522-e434d47237c0"],
Cell[259752, 5589, 484, 11, 22, "Message",ExpressionUUID->"f0e670f3-94f3-44d3-942a-86af88bb2ccc"],
Cell[260239, 5602, 609, 12, 24, "Output",ExpressionUUID->"f0655882-b85e-4d77-be4c-458a1d1c0af7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260885, 5619, 288, 7, 21, "Input",ExpressionUUID->"1e99da71-217c-4ae3-b608-3c1b7e2908de"],
Cell[261176, 5628, 173, 3, 24, "Output",ExpressionUUID->"7811168b-e1b5-4fc0-9653-0054a04555fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261386, 5636, 617, 16, 25, "Input",ExpressionUUID->"e72700e7-a9b7-4fad-98b5-b1149104892d"],
Cell[262006, 5654, 11541, 212, 177, "Output",ExpressionUUID->"3d69309f-4b2e-4159-9b02-39753e1ee4b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273584, 5871, 739, 21, 25, "Input",ExpressionUUID->"cec30df0-f994-45aa-8d38-e941fca83edc"],
Cell[274326, 5894, 1070, 30, 49, "Output",ExpressionUUID->"4a2eb243-2241-441d-808f-9ce56643e209"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275433, 5929, 243, 5, 21, "Input",ExpressionUUID->"13b9146a-8f9e-4916-bd4e-5ea1df01eb39"],
Cell[275679, 5936, 484, 13, 39, "Output",ExpressionUUID->"a8a3a5d7-ab27-4e89-8180-530f98c454d1"]
}, Open  ]],
Cell[276178, 5952, 877, 22, 21, "Input",ExpressionUUID->"fcce82fc-c490-478a-8c1c-e3baec04fe24"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277104, 5980, 162, 3, 50, "Section",ExpressionUUID->"bd3d6c40-6bd0-4912-8413-3952a086b465"],
Cell[277269, 5985, 3433, 101, 135, "Input",ExpressionUUID->"9f1dbd7b-30a9-4ef2-bc40-aa56cdde9142"],
Cell[CellGroupData[{
Cell[280727, 6090, 1012, 24, 50, "Input",ExpressionUUID->"5b7a2586-bf5e-40fc-a4c7-bb6b47c54a83"],
Cell[281742, 6116, 2378, 59, 67, "Output",ExpressionUUID->"1f3a89fd-904a-4fe3-8834-4369a1d09c13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284157, 6180, 411, 9, 25, "Input",ExpressionUUID->"3db35f2e-7165-4511-bfc8-3859da69948d"],
Cell[284571, 6191, 1418, 32, 54, "Output",ExpressionUUID->"1be3a0ab-ac95-487b-b227-33e2d6123578"]
}, Open  ]],
Cell[286004, 6226, 564, 16, 21, "Input",ExpressionUUID->"4cb38e0b-383c-4b6b-bc39-6b2dc249886c"],
Cell[286571, 6244, 179, 4, 34, "Input",ExpressionUUID->"95738ca6-d058-4e24-a596-b5357990050e"],
Cell[CellGroupData[{
Cell[286775, 6252, 265, 5, 22, "Input",ExpressionUUID->"f4ea8202-eb26-4a34-9248-deb356eff6f5"],
Cell[287043, 6259, 2298, 61, 76, "Output",ExpressionUUID->"38eeac66-2ae6-4459-b7eb-ced44f20b12f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289378, 6325, 521, 13, 41, "Input",ExpressionUUID->"440ce9e1-029e-4439-a8ec-24757cb13ae3"],
Cell[289902, 6340, 2123, 56, 76, "Output",ExpressionUUID->"9c14ab1a-9482-4762-b812-b28d59bfffa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292062, 6401, 268, 5, 21, "Input",ExpressionUUID->"1b3e583f-d0b7-4ef5-865f-60e0416a8c2e"],
Cell[292333, 6408, 3245, 86, 161, "Output",ExpressionUUID->"d4ef6dba-2ae0-4c91-9aff-795e48f48a02"]
}, Open  ]],
Cell[295593, 6497, 504, 11, 21, "Input",ExpressionUUID->"e90ce7aa-ec61-4b52-ad91-63ed620f1a0d"],
Cell[CellGroupData[{
Cell[296122, 6512, 456, 11, 25, "Input",ExpressionUUID->"e60e0c9a-8390-4f08-9270-ea004d8a1f15"],
Cell[296581, 6525, 343, 9, 25, "Output",ExpressionUUID->"ce78ee47-43b9-46de-a7bf-2dd54a567c6e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

