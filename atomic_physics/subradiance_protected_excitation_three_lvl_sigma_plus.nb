(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2557645,      48459]
NotebookOptionsPosition[   2540608,      47932]
NotebookOutlinePosition[   2541128,      47951]
CellTagsIndexPosition[   2541085,      47948]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Subradiance-protected excitation spreading for \
collimated photon emission", "Title"]], "Chapter",
 CellChangeTimes->{{3.804795257142758*^9, 3.8047952870781355`*^9}}],

Cell["\<\
P. Huft
See paper by K. Ballantine, J. Ruostekoski; Molmer; others\
\>", "Text",
 CellChangeTimes->{{3.8047952896493063`*^9, 3.804795315348673*^9}, {
  3.8069647340862026`*^9, 3.80696474134041*^9}, {3.8114603466690383`*^9, 
  3.81146035702324*^9}}],

Cell[CellGroupData[{

Cell["notes", "Section",
 CellChangeTimes->{{3.805668161042568*^9, 3.8056681662163057`*^9}, 
   3.810905447817901*^9}],

Cell[CellGroupData[{

Cell["Notebook version notes", "Subsection",
 CellChangeTimes->{{3.810992369389367*^9, 3.8109923753200865`*^9}}],

Cell[TextData[{
 "J=0->J\[CloseCurlyQuote]=1 transition with large enough Zeeman shift so we \
have an effective two-level atom. For most lab-like situation, I choose the \
cycling transition \nm=0->m\[CloseCurlyQuote]=1. \n\nNow, introduce a third, \
long-lived state ",
 Cell[BoxData[
  TemplateBox[{"r"},
   "Ket"]]],
 " that is coupled only to ",
 Cell[BoxData[
  TemplateBox[{SuperscriptBox["e", 
     RowBox[{"+", "1"}]]},
   "Ket"]]],
 " by a coupling field ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalOmega]", "r"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". This notebook is concerned with the dynamics of an atom array which has \
been prepared with an initial single excitation which is shared only by the",
 Cell[BoxData[
  TemplateBox[{"r"},
   "Ket"]]],
 " states. After applying the coupling field with some curated pulse shape, \
what modes do we overlap and what does the emission do?"
}], "Text",
 CellChangeTimes->{{3.8109923793425665`*^9, 3.8109924949681654`*^9}, {
  3.8114440670002813`*^9, 3.811444276911229*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Questions", "Subsection",
 CellChangeTimes->{{3.805668173776622*^9, 3.8056681752571135`*^9}}],

Cell[TextData[{
 "The collective mode which is predominantly coupled by the initial \
excitation (after rotating the polarization to be normal to the atom grid \
plane) decays slowly, i.e. is subradiant, while other modes decay \
superradiantly. Why do these other modes see an a higher rate of decay than \
independent decay? Does it just \[OpenCurlyDoubleQuote]come out of the math\
\[CloseCurlyDoubleQuote] as with the ",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]]],
 " enhancement of ensemble Rabi flopping?"
}], "Text",
 CellChangeTimes->{{3.805668178473505*^9, 3.8056683966718793`*^9}, {
   3.808681468062796*^9, 3.808681624587453*^9}, 3.808681678962863*^9, {
   3.8109053588970165`*^9, 3.8109053788283596`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Physics", "Subsection",
 CellChangeTimes->{{3.8109923577706833`*^9, 3.8109923589142456`*^9}}],

Cell[TextData[{
 "Restricting this problem to the single-excitation subspace, the Hamiltonian \
matrix elements are: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "i"}], "-", "1", "+", "\[Psi]"}], ",", 
      RowBox[{
       RowBox[{"2", "j"}], "-", "1", "+", "\[Phi]"}]}]], "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["H", "ij"], 
      RowBox[{"(", "\[Psi]\[Phi]", ")"}]], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[CapitalDelta]", "er"]}], 
       SubscriptBox["\[Delta]", "ij"], 
       SubscriptBox["\[Delta]", "\[Psi]\[Phi]"]}], "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalOmega]", "ij"], "(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Delta]", "jk"]}], ")"}], 
       SubscriptBox["\[Delta]", "\[Psi]e"], 
       SubscriptBox["\[Delta]", "\[Phi]e"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["\[Gamma]", "ij"], 
       SubscriptBox["\[Delta]", "\[Psi]e"], 
       SubscriptBox["\[Delta]", 
        RowBox[{"\[Phi]e", " "}]]}], "-", 
      RowBox[{
       FractionBox[
        SubscriptBox["\[CapitalOmega]", "r"], "2"], 
       SubscriptBox["\[Delta]", "\[Psi]e"], 
       SubscriptBox["\[Delta]", "\[Phi]r"]}], "-", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["\[CapitalOmega]", "r"], "\[Conjugate]"}], "2"], 
       SubscriptBox["\[Delta]", "\[Psi]r"], 
       SubscriptBox["\[Delta]", "\[Phi]e"]}]}]}]}], TraditionalForm]]],
 " \nwhere \[Psi],\[Phi] specify the state of atoms i,j to be either ",
 Cell[BoxData[
  TemplateBox[{SuperscriptBox["e", 
     RowBox[{"+", "1"}]]},
   "Ket"]]],
 " or ",
 Cell[BoxData[
  TemplateBox[{"r"},
   "Ket"]]],
 " in a spherical basis and j,k are the atom indices in the 2D grid and \
\[HBar]=1. The RWA has been made, so ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalDelta]", "er"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " should be the detuning of the coupling light on the ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"e"},
    "Ket"], "\[Rule]", " ", 
   TemplateBox[{"r"},
    "Ket"]}]]],
 " transition (double check!). The dynamics in this subspace are coherent, \
but H is non-Hermitian, so there is dissipation as the excitation diffuses \
into the collective ground state. \n\nSingle atom states: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "j"], "=", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "e"], ",", 
      SubscriptBox["c", "r"]}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "u"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the amplitude for occupation in state u. "
}], "Text",
 CellChangeTimes->{{3.804795955202659*^9, 3.804796203497088*^9}, {
  3.8051540631375103`*^9, 3.8051541172328863`*^9}, {3.8060047095110035`*^9, 
  3.8060047102689743`*^9}, {3.8066050132591124`*^9, 3.8066050897983627`*^9}, {
  3.806708395044424*^9, 3.806708426075447*^9}, {3.8086762139235163`*^9, 
  3.808676221044484*^9}, {3.808681458085475*^9, 3.80868146251762*^9}, {
  3.8114443309765573`*^9, 3.8114445406454535`*^9}, {3.811444586029207*^9, 
  3.811444842376112*^9}, {3.811444876756612*^9, 3.8114449462928457`*^9}, {
  3.811460727374385*^9, 3.811460797132037*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["general setup - run first", "Section",
 CellChangeTimes->{
  3.804795272338377*^9, {3.8047953612651463`*^9, 3.8047953705323234`*^9}, {
   3.8094683321662207`*^9, 3.809468337342882*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PHYSICAL", " ", "CONSTANTS"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[HBar]", " ", "=", " ", 
   RowBox[{"6.62607015*^-34", "/", 
    RowBox[{"(", 
     RowBox[{"2", "\[Pi]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kB", " ", "=", " ", "1.380649*^-23"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]0", " ", "=", 
   RowBox[{"4", "\[Pi]", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", "299792458"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]0", " ", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "2"], " ", "\[Mu]0"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ee", " ", "=", " ", "1.602*^-19"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"electron", " ", "charge"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a0", " ", "=", " ", "5.27*^-11"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Bohr", " ", "radius"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PARAMETERS", " ", "and", " ", "other", " ", "DEFINITIONS"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"7.8", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"matelem", " ", "=", " ", 
    RowBox[{"ee", " ", "a0"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "just", " ", "assume", " ", "a", " ", "general", " ", "matrix", " ", 
    "element", " ", "is", " ", "of", " ", "this", " ", "order", " ", "for", 
    " ", 
    RowBox[{"now", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["matelem", "2"], 
     RowBox[{
      SuperscriptBox["k", "3"], "/", 
      RowBox[{"(", 
       RowBox[{"6", " ", "\[Pi]", " ", "\[Epsilon]0"}], ")"}]}]}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"single", " ", "two"}], "-", 
     RowBox[{"level", " ", "atom", " ", "linewidth"}]}], ",", " ", 
    RowBox[{"\[HBar]", "=", "1"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pol", " ", "=", " ", 
    RowBox[{"Range", "[", "3", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"pol", "[", 
      RowBox[{"[", "\[Mu]", "]"}], "]"}], "/.", 
     RowBox[{"u", "->", "1"}]}], ",", "2", ",", 
    RowBox[{
     RowBox[{"3", " ", "for", " ", "polarization", " ", "\[Sigma]"}], "=", 
     RowBox[{"-", "1"}]}], ",", "0", ",", 
    RowBox[{"+", "1"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomnum", " ", "=", " ", "atomnum"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Hamiltonian", " ", "shape", " ", "is", " ", "atomnum", " ", "x", " ", 
     "atomnum"}], ",", " ", 
    RowBox[{
     RowBox[{"with", " ", "state", " ", "vector"}], " ", "=", " ", 
     "atomnum"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "FUNCTIONS", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StepsTable", "[", 
    RowBox[{"stepList_", ",", "list_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"stepList", ",", "list"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unit", "[", "v_", "]"}], ":=", 
   FractionBox["v", 
    SqrtBox[
     RowBox[{"v", ".", "v"}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GdotP", "[", 
     RowBox[{"r_", ",", "p_"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k", " ", 
        SqrtBox[
         RowBox[{"r", ".", "r"}]]}]], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SqrtBox[
        RowBox[{"r", ".", "r"}]]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cross", "[", 
        RowBox[{
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"unit", "[", "r", "]"}], ",", "p"}], "]"}], ",", 
         RowBox[{"unit", "[", "r", "]"}]}], "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["k", "2"], 
            RowBox[{"r", ".", "r"}]}]], "-", 
          FractionBox["\[ImaginaryI]", 
           RowBox[{"k", " ", 
            SqrtBox[
             RowBox[{"r", ".", "r"}]]}]]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{"unit", "[", "r", "]"}], " ", 
           RowBox[{"Dot", "[", 
            RowBox[{
             RowBox[{"unit", "[", "r", "]"}], ",", "p"}], "]"}]}], "-", "p"}],
          ")"}]}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "r", " ", "is", " ", "the", " ", "positional", " ", "unit", " ", 
     "vector"}], ",", " ", 
    RowBox[{
    "p", " ", "is", " ", "an", " ", "atomic", " ", "dipole", " ", 
     "moment"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"generic", " ", "basis", " ", "vector", " ", "set"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["e", "\[Mu]_"], " ", ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "[", 
     RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "cartesian", " ", "basis", " ", "expressed", " ", "in", " ", "spherical", 
    " ", "basis"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["ecart", "\[Mu]_"], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "\[ImaginaryI]"}], 
         SqrtBox["2"]], 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", "0"}], "}"}]}], "}"}], "[", 
     RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sphr", ".", " ", "basis"}], " ", "in", " ", 
    RowBox[{
     RowBox[{"cart", ".", " ", "w"}], "/", " ", "the"}], " ", "quantization", 
    " ", "axis", " ", "along", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"out", "-", "of", "-", "plane"}], ")"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["esphrx", "\[Mu]_"], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[ImaginaryI]", ",", "1"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[ImaginaryI]", ",", 
          RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "[", 
     RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sphr", ".", " ", "basis"}], " ", "in", " ", 
    RowBox[{
     RowBox[{"cart", ".", " ", "w"}], "/", " ", "the"}], " ", "quantization", 
    " ", "axis", " ", "along", " ", "z", " ", 
    RowBox[{"(", 
     RowBox[{"in", "-", "plane"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["esphrz", "\[Mu]_"], " ", ":=", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"EulerMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", "0"}], "}"}], "]"}], ".", 
        SubscriptBox["esphrx", "\[Nu]"]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", 
         RowBox[{"Range", "[", "3", "]"}]}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "plotting", " ", "function", " ", "for", " ", "use", " ", "in", " ", "the",
     " ", "linewidth", " ", "section"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"linewidthplot", "[", 
     RowBox[{
     "sln_", ",", "polmodes_", ",", "gridshape_", ",", " ", "numx_", ",", 
      "numy_", ",", "plttitle_", ",", "saveplot_", ",", "savesoln_"}], "]"}], 
    ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"plots", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"lastmode", "=", "0"}], ",", "modelist", ",", "plt", ",", 
        "fname", ",", "title"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"polmode", "=", "1"}], ",", 
         RowBox[{"polmode", "<", 
          RowBox[{
           RowBox[{"Length", "[", "polmodes", "]"}], "+", "1"}]}], ",", 
         RowBox[{"polmode", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"modelist", "=", 
           RowBox[{"polmodes", "[", 
            RowBox[{"[", 
             RowBox[{"polmode", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "<", 
             RowBox[{
              RowBox[{"Length", "[", "modelist", "]"}], "+", "1"}]}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"plots", ",", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"sln", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "+", "lastmode"}], "]"}], "]"}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "5"}], ",", "3"}], "}"}]}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"modelist", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                 RowBox[{"PlotLegends", "\[Rule]", " ", 
                  RowBox[{"{", 
                   RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "}"}]}]}], "]"}]}],
               "]"}], " ", ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastmode", "=", 
           RowBox[{"i", "-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"gridshape", "\[Equal]", "\"\<square\>\""}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plots", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Log10", "[", 
              FractionBox["3", 
               RowBox[{"4", "\[Pi]", " ", 
                SuperscriptBox["d", "2"]}]], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"d", ",", "0.02", ",", "1.21"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Red", ",", "Dashed"}], "]"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"{", "\"\<N\[Rule]\[Infinity], In-Plane\>\"", "}"}]}]}],
             "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fname", " ", "=", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<plot_linewidth_v_period_````x``.png\>\"", ",", "gridshape", 
           ",", "numx", ",", "numy"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"saveplot", ",", 
         RowBox[{"Export", "[", 
          RowBox[{"fname", ",", "plt"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fname", " ", "=", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<soln_linewidth_v_period_````x``.txt\>\"", ",", "gridshape", 
           ",", "numx", ",", "numy"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"savesoln", ",", 
         RowBox[{"Export", "[", 
          RowBox[{"fname", ",", 
           RowBox[{"ToString", "[", "sln", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"title", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"plttitle", "\[Equal]", "\"\<\>\""}], ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Collective linewidths for ``x`` `` grid\>\"", ",", "numx", 
             ",", "numy", ",", "gridshape"}], "]"}], "]"}], ",", "plttitle"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"plt", " ", "=", " ", 
        RowBox[{"Show", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{"title", ",", 
             RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"Frame", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"True", ",", "True", ",", "False", ",", "False"}], 
            "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Lattice period d [\[Lambda]]\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(Log\), \
\(10\)]\)(\!\(\*SubscriptBox[\(v\), \(n\)]\)/\[Gamma])\>\""}], "}"}]}], ",", 
          RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}]}], " ", 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"x", ",", "y", ",", 
     RowBox[{"z", " ", "in", " ", "spherical", " ", "basis"}]}], "*)"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BuildEqSys", "[", 
    RowBox[{
    "hamiltonian_", ",", "atoms_", ",", "center_", ",", "excitation_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Psi]", ",", "\[Psi]0", ",", "excitedIdcs", ",", "eqs", ",", "ics", 
       ",", "tmax", ",", "sys"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "For", " ", "generating", " ", "the", " ", "Schrodinger", " ", "eq", 
         " ", "system", " ", "to", " ", "be", " ", "solved", " ", "for", " ", 
         "time"}], "-", 
        RowBox[{
        "evolution", " ", "of", " ", "a", " ", "system", " ", "with", " ", 
         "9", " ", "excitations", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "arguments", " ", "in", " ", 
         RowBox[{"order", ":", " ", 
          RowBox[{"matrix", " ", "of", " ", "dimensions", " ", 
           SqrtBox["atoms"], "x", 
           SqrtBox["atoms"]}]}]}]}], ",", " ", 
       RowBox[{
       "the", " ", "index", " ", "of", " ", "the", " ", "central", " ", 
        "atom"}], ",", " ", 
       RowBox[{
       "a", " ", "function", " ", "which", " ", "takes", " ", "a", " ", 
        "number", " ", "of", " ", "excited", " ", "atoms", " ", "and", " ", 
        "returns", " ", "a", " ", "scalar", " ", "list", " ", "of", " ", 
        "that", " ", "length"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
       "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Psi]", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", "atoms"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Psi]0", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "atoms"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"excitedIdcs", " ", "=", " ", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"center", "+", "i", "+", "j"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox["atoms"]}], ",", "0", ",", 
              SqrtBox["atoms"]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Psi]0", "[", 
        RowBox[{"[", "excitedIdcs", "]"}], "]"}], "=", 
       RowBox[{"excitation", "[", 
        RowBox[{"Length", "[", "excitedIdcs", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"eqs", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ics", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{"atoms", "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"eqs", ",", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"\[Psi]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"ics", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Psi]", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
            RowBox[{"\[Psi]0", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sys", " ", "=", " ", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Join", "[", 
         RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Psi]", ",", "\[Psi]0", ",", "sys", ",", "excitedIdcs"}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.804795372139743*^9, 3.8047954565762587`*^9}, {
   3.804795557477767*^9, 3.804795646192586*^9}, {3.805670829592176*^9, 
   3.8056708978355913`*^9}, {3.8059959856055202`*^9, 3.805995986254162*^9}, {
   3.8059985871648145`*^9, 3.8059986288484855`*^9}, {3.8059997358360014`*^9, 
   3.805999788758046*^9}, {3.8059999118297677`*^9, 3.8059999521643977`*^9}, {
   3.805999992044653*^9, 3.8060000636137767`*^9}, {3.8060001456463013`*^9, 
   3.8060001964015045`*^9}, {3.8060002660690813`*^9, 3.8060002884442167`*^9}, 
   3.806000626716222*^9, 3.806001860902274*^9, 3.8060020439721518`*^9, {
   3.8060026207721825`*^9, 3.80600266366413*^9}, {3.8060026966204414`*^9, 
   3.8060027062593665`*^9}, {3.8060060864367876`*^9, 3.806006284666767*^9}, {
   3.80600633970216*^9, 3.806006436560063*^9}, {3.8060064977258167`*^9, 
   3.8060065810076523`*^9}, {3.8065097730595045`*^9, 3.806509811016704*^9}, {
   3.8065108020023785`*^9, 3.8065108352304597`*^9}, {3.806511491827402*^9, 
   3.806511491880254*^9}, {3.8065116937092276`*^9, 3.8065117567284775`*^9}, 
   3.806512394112631*^9, {3.806512596967489*^9, 3.806512597549224*^9}, {
   3.806512635854741*^9, 3.806512639698132*^9}, 3.8065184714886026`*^9, {
   3.806518807617782*^9, 3.806518818536937*^9}, {3.8065188588224583`*^9, 
   3.8065188745589724`*^9}, {3.806522742274407*^9, 3.8065227992408857`*^9}, {
   3.80652624964219*^9, 3.8065263011476345`*^9}, {3.806526338176937*^9, 
   3.806526338878935*^9}, {3.806527870071875*^9, 3.806527886706303*^9}, {
   3.8065280491641827`*^9, 3.8065280499206524`*^9}, {3.8065288434330974`*^9, 
   3.8065288441316767`*^9}, {3.80652935916156*^9, 3.806529360595722*^9}, 
   3.8065909213975697`*^9, {3.8065945956794834`*^9, 3.8065946197902155`*^9}, {
   3.806595111718749*^9, 3.80659511816251*^9}, {3.8066044544589233`*^9, 
   3.8066044646028137`*^9}, {3.80696565986509*^9, 3.8069656634134607`*^9}, {
   3.8069656979471774`*^9, 3.8069657129861*^9}, {3.806965905008503*^9, 
   3.806965917930096*^9}, {3.806969203048703*^9, 3.806969247088546*^9}, {
   3.806969399593093*^9, 3.806969426621357*^9}, {3.8069694691605425`*^9, 
   3.8069695583291035`*^9}, {3.8069696687010384`*^9, 
   3.8069697479909005`*^9}, {3.8069708799936037`*^9, 3.806970937308947*^9}, {
   3.8071341724945297`*^9, 3.8071342023307457`*^9}, {3.807134239967105*^9, 
   3.807134245276909*^9}, {3.8071343282560205`*^9, 3.8071343467146626`*^9}, {
   3.8071344033173037`*^9, 3.8071345328828435`*^9}, {3.8071353004034786`*^9, 
   3.8071353048336315`*^9}, {3.807135353381813*^9, 3.807135371458476*^9}, {
   3.807136104073449*^9, 3.807136128133113*^9}, {3.807136286895579*^9, 
   3.8071363155599303`*^9}, {3.807182165268559*^9, 3.8071821736182346`*^9}, {
   3.807184444104906*^9, 3.8071845076699314`*^9}, {3.8071864003406534`*^9, 
   3.8071864384617157`*^9}, {3.807186480235013*^9, 3.807186493333987*^9}, {
   3.8071866070229807`*^9, 3.807186607130693*^9}, {3.8071868135856285`*^9, 
   3.8071868476256046`*^9}, 3.807203261610388*^9, {3.8072038692517233`*^9, 
   3.8072038740319357`*^9}, {3.807213911849493*^9, 3.8072139140357633`*^9}, {
   3.8072140018354006`*^9, 3.8072140100513997`*^9}, {3.8072173311304865`*^9, 
   3.807217345535433*^9}, {3.807221360734707*^9, 3.8072213636309876`*^9}, {
   3.8079821163915453`*^9, 3.8079821587163076`*^9}, {3.807986244761863*^9, 
   3.807986305420913*^9}, {3.807987427293959*^9, 3.807987461143407*^9}, {
   3.808064660727276*^9, 3.8080646710536537`*^9}, {3.808064978922209*^9, 
   3.8080649889520206`*^9}, {3.808065133138933*^9, 3.808065137247834*^9}, {
   3.8080656978757963`*^9, 3.8080657129905295`*^9}, {3.808068297769658*^9, 
   3.8080682988068843`*^9}, {3.8080683318016787`*^9, 3.808068333322548*^9}, {
   3.8080687285840673`*^9, 3.808068729604082*^9}, {3.808068793234928*^9, 
   3.8080687946362305`*^9}, {3.808071621206293*^9, 3.8080716723275375`*^9}, {
   3.8080729540168924`*^9, 3.8080729609414005`*^9}, 3.8081740669737325`*^9, {
   3.8081741515898724`*^9, 3.808174154407746*^9}, 3.8081757347113743`*^9, {
   3.80850296857384*^9, 3.8085030083264093`*^9}, {3.808503067468046*^9, 
   3.8085031670005584`*^9}, {3.8085034258887215`*^9, 3.808503429488124*^9}, {
   3.808503479673551*^9, 3.8085034823204985`*^9}, {3.8085035467900696`*^9, 
   3.808503594831055*^9}, {3.808503764886863*^9, 3.8085038227088747`*^9}, {
   3.8085062266270256`*^9, 3.8085062282964144`*^9}, 3.8085063375988884`*^9, {
   3.8085064788703156`*^9, 3.808506480017167*^9}, {3.80850652972351*^9, 
   3.8085065309142447`*^9}, {3.8085067139700546`*^9, 3.808506715888835*^9}, {
   3.808563738055747*^9, 3.808563804867737*^9}, {3.808573814421254*^9, 
   3.808573815415248*^9}, 3.808651641220073*^9, {3.8086518769444513`*^9, 
   3.808651893549247*^9}, 3.8086558780542803`*^9, {3.808656024934702*^9, 
   3.8086560272983837`*^9}, {3.808662363748914*^9, 3.808662408664112*^9}, {
   3.808664687414502*^9, 3.808664689986473*^9}, {3.8086682528166385`*^9, 
   3.8086682545748963`*^9}, {3.808676180008201*^9, 3.808676184370633*^9}, {
   3.808676232267743*^9, 3.8086762327931757`*^9}, {3.8086762661744785`*^9, 
   3.8086763102835283`*^9}, {3.8086806992151303`*^9, 3.808680700237514*^9}, {
   3.8087546100096054`*^9, 3.8087546122137136`*^9}, {3.8087547536620526`*^9, 
   3.8087547547062635`*^9}, {3.8087627100920486`*^9, 3.808762730682022*^9}, {
   3.808763339511509*^9, 3.8087633428755393`*^9}, 3.8087635580466175`*^9, {
   3.808864426190888*^9, 3.8088644468569455`*^9}, {3.8088648394815702`*^9, 
   3.8088648396005*^9}, {3.8088651910855045`*^9, 3.8088651922784843`*^9}, {
   3.809015895544302*^9, 3.80901589577279*^9}, {3.8090170885137053`*^9, 
   3.80901708984947*^9}, {3.809018596529349*^9, 3.8090185976979575`*^9}, {
   3.8090273113330765`*^9, 3.8090273114447775`*^9}, {3.8090284653517256`*^9, 
   3.8090286292701964`*^9}, {3.809028853843644*^9, 3.809028859165645*^9}, {
   3.809469660849782*^9, 3.809469660868692*^9}, {3.80953004055865*^9, 
   3.809530047376833*^9}, {3.8095411065943613`*^9, 3.80954110705513*^9}, {
   3.8096006063652363`*^9, 3.809600607036578*^9}, {3.810600754007701*^9, 
   3.81060078900488*^9}, {3.8106010991528254`*^9, 3.8106010999148273`*^9}, {
   3.8106013347122226`*^9, 3.810601348199915*^9}, 3.810601462725209*^9, {
   3.8106018681276875`*^9, 3.8106019126314144`*^9}, {3.8106020116726065`*^9, 
   3.8106020141318555`*^9}, {3.8106610992394*^9, 3.8106611181017876`*^9}, {
   3.810661312498348*^9, 3.81066131521597*^9}, {3.8110698930168056`*^9, 
   3.8110698972150936`*^9}, {3.8110699633182654`*^9, 3.811069987233721*^9}, {
   3.811070100030778*^9, 3.811070130512274*^9}, {3.8110701902813473`*^9, 
   3.8110703284530015`*^9}, {3.8110703922262816`*^9, 
   3.8110704068455915`*^9}, {3.8110705002775354`*^9, 
   3.8110706364960027`*^9}, {3.8110714121519256`*^9, 3.811071416757876*^9}, {
   3.8114613181120872`*^9, 3.8114613448282976`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["eigenmode analysis", "Section",
 CellChangeTimes->{{3.81107094856962*^9, 3.8110709536651173`*^9}}],

Cell["\<\
Outstanding questions
- What is the physical interpretation of an eigenmode with a negative \
linewidth? Try to plot how such a mode decays. Does it decay as a state with \
a linewidth of the same positive value?\
\>", "Text",
 CellChangeTimes->{{3.8110897722687244`*^9, 3.8110898949950733`*^9}}],

Cell[TextData[{
 "Set the quantization axis. By default, it is normal to the grid (",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "^"], TraditionalForm]]],
 "). Can rotate the spherical basis vectors for a different quantization axis."
}], "Text",
 CellChangeTimes->{{3.811165246708685*^9, 3.8111653323759103`*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]Blind\[CloseCurlyDoubleQuote] search for long-lived \
eigenmodes of interest for a given Hamiltonian\
\>", "Text",
 CellChangeTimes->{{3.81107095826427*^9, 3.811070971680812*^9}, {
  3.8110711660613527`*^9, 3.8110711857726555`*^9}, {3.8110897799084225`*^9, 
  3.8110897802619123`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   SuperscriptBox["11", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridname", "=", " ", "\"\<square\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qaxis", "=", "\"\<z\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"n", "\[Rule]", 
     SqrtBox["atomnum"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dlist", " ", "=", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"lattice", " ", "periods", " ", "to", " ", 
    RowBox[{"try", " ", "[", "\[Lambda]", "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e", "[", "i_", "]"}], ":=", 
   SubscriptBox["esphrz", "3"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.81107110606151*^9, 3.811071113034325*^9}, {
   3.811071145579527*^9, 3.811071161995124*^9}, {3.811071193206889*^9, 
   3.811071201889117*^9}, {3.8110712998445396`*^9, 3.811071364298283*^9}, {
   3.811072603425707*^9, 3.811072609608856*^9}, {3.8110729278004217`*^9, 
   3.8110729678624263`*^9}, 3.8111656030742297`*^9, {3.811165761630623*^9, 
   3.811165779490587*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"esysList", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", " ", 
       RowBox[{
       "esys", " ", "sorted", " ", "by", " ", "mode", " ", "linewidth"}]}], 
      "}"}], ",", "..."}], "}"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"loop", " ", "over", " ", "lattice", " ", "period"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"didx", "=", "1"}], ",", 
   RowBox[{"didx", "<", 
    RowBox[{
     RowBox[{"Length", "[", "dlist", "]"}], "+", "1"}]}], ",", 
   RowBox[{
    RowBox[{"didx", "++"}], "1"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"build", " ", "the", " ", "Hamiltonian"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hfull", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["H", "##"], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"atomnum", "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "<", 
          RowBox[{"atomnum", "+", "1"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "=", 
           RowBox[{
            RowBox[{"dlist", "[", 
             RowBox[{"[", "didx", "]"}], "]"}], " ", "\[Lambda]", " ", 
            SubscriptBox["r", 
             RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[CapitalOmega]ij", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
              RowBox[{"Re", "[", 
               RowBox[{
                RowBox[{"e", "[", "i", "]"}], ".", 
                RowBox[{"GdotP", "[", 
                 RowBox[{"u", ",", 
                  RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Gamma]ij", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
              RowBox[{"Im", "[", 
               RowBox[{
                RowBox[{"e", "[", "i", "]"}], ".", 
                RowBox[{"GdotP", "[", 
                 RowBox[{"u", ",", 
                  RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Hfull", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalOmega]ij", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}], ")"}]}], ";"}]}],
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "sort", " ", "eigenmodes", " ", "by", " ", "imaginary", " ", "component",
       " ", "of", " ", "the", " ", "corresponding", " ", "eigenvalues"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"esysList", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dlist", "[", 
         RowBox[{"[", "didx", "]"}], "]"}], ",", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "@", 
             RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[GreaterEqual]", 
              "0"}], "&"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ">", 
            RowBox[{"Im", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], 
       "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.811071228452739*^9, 3.8110712680740786`*^9}, {
  3.811071452883666*^9, 3.8110715981321244`*^9}, {3.8110716500782795`*^9, 
  3.8110716857245407`*^9}, {3.811071721206709*^9, 3.81107187387004*^9}, {
  3.811072438983576*^9, 3.8110724394970074`*^9}, {3.811079981611853*^9, 
  3.811080008821844*^9}, {3.811080116900613*^9, 3.811080205243092*^9}, {
  3.811164539797118*^9, 3.81116456452337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<soln_eigensystemlist_sigmaplus_``_axis_``x``_``.txt\>\"", ",", 
      "qaxis", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}], ",", 
   RowBox[{"ToString", "[", "esysList", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81116460035491*^9, 3.8111647042016244`*^9}, {
  3.8111696812256527`*^9, 3.811169706836543*^9}}],

Cell[BoxData["\<\"soln_eigensystemlist_sigmaplus_z_axis_11x11_square.txt\"\>"]\
, "Output",
 CellChangeTimes->{3.811164710342817*^9, 3.811164904318993*^9, 
  3.81116970859746*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["esysList"], "Input",
 CellChangeTimes->{{3.8111647956808047`*^9, 3.811164796546754*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.1`", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1.1826353676527133`*^-27", "+", 
                  RowBox[{
                  "2.8751681483048802`*^-27", " ", "\[ImaginaryI]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"0.0014107442480232166`", "\[VeryThinSpace]", "-", 
                    RowBox[{
                    "0.00024679821232453947`", " ", "\[ImaginaryI]"}]}], ",", 
                   TemplateBox[{"119"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, 
                    FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                    RoundingRadius -> 7]& )], ",", 
                   RowBox[{
                    RowBox[{"-", "0.0014107442480227692`"}], "+", 
                    RowBox[{
                    "0.0002467982123237504`", " ", "\[ImaginaryI]"}]}]}], 
                  "}"}]}], "}"}], ",", 
               TemplateBox[{"82"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, 
                  FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                  RoundingRadius -> 7]& )], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"6.987646531198539`*^-27", "+", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, 
                    FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                    RoundingRadius -> 7]& )]}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, 
                    FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                    RoundingRadius -> 7]& )]}], "}"}]}], "}"}]}], "}"}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{82., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 30710646691357922371, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{78., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 30710646691357922371, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{57., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 30710646691357922371, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{99., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{99., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[36]]], "Output",
 CellChangeTimes->{3.81116479932891*^9}]
}, Open  ]],

Cell["Plot the linewidths:", "Text",
 CellChangeTimes->{{3.811071922047756*^9, 3.8110719470393095`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plts", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linewidthPtsList", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Log10", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Transpose", "@", 
           RowBox[{"esysList", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "\[Gamma]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "esysList", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evecList", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", 
        RowBox[{"esysList", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "esysList", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{
     RowBox[{"Length", "[", "esysList", "]"}], "+", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"plts", ",", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"linewidthPtsList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], ",", 
          RowBox[{"RandomReal", "[", "]"}], ",", 
          RowBox[{"RandomReal", "[", "]"}]}], "]"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"dlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "}"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plts", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.811071948538206*^9, 3.8110719900444703`*^9}, {
  3.811072173110153*^9, 3.811072279995349*^9}, {3.811072314366967*^9, 
  3.811072316577919*^9}, {3.81107235499116*^9, 3.8110723750889034`*^9}, {
  3.8110724203299613`*^9, 3.8110724216700964`*^9}, {3.8110724857487545`*^9, 
  3.811072517641573*^9}, {3.811072548794074*^9, 3.8110725574773507`*^9}, {
  3.811072689698288*^9, 3.8110727089652042`*^9}, {3.811072794283854*^9, 
  3.8110729165713987`*^9}, {3.811072989286439*^9, 3.811072990702642*^9}, {
  3.8110730488379917`*^9, 3.8110731188350544`*^9}, {3.8110804179066834`*^9, 
  3.8110804634807625`*^9}, {3.8110807460657845`*^9, 3.811080802020475*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.31792436915109157`, 0.6760155598213982, 0.11123624738557392`]], 
         PointBox[CompressedData["
1:eJw1yw001Xccx/G7Zj1ztljM48jxmKK4xYyPKw+5hMt1cd26Z6WLbWWKtvJw
qYQVTlPzUORxnWMV4SSPNw9hUSyXWy0rNWmVrlSrxN127vf+z/md/3n9Pr+3
8Ve7OZELGAzGvv/O/3/lJ3dNLozzGhuZcKULyLRzW6cK75MXQ957Y+lzjz/J
HyO7ekYjK15G1kJDjG5OQcZVsg6Wlvz2a05zB1kfBd5l9VNXz5E/x92tmW/z
yirJJohjBbAZB0rJplCrWlnk6KCyGRyYhmuCOSVkC/CjNA6WpxeTrbCw3W3k
5+unyauhVyZqupOfR14Dme+cxkBrBtkWPdz4s03V6WQ7DNa/Ku70VHkdzgsz
m06xVF4Pb4H6bY7NYbI9DBPe7cjpOUR2QO6rxUjJE5OZcC43ratYqPIG/GAl
bGdn7yFvxBr+uiOp6io7olavxd/MPprsBG6T3+v7PlHkL+A05vhdrJvKzvjR
qiN0vlJI/hLNccs/My1R2QX3PjTNZGxT2RXbDUc9WNxtZCB24FruMz+e0mKg
OyTrUsfNANrdYPZTvu+SaLLYDWNy7SEdCZt2FgaXDaT1ZPjQzkLBdIeOdI83
7e7wV4gyV7zfRLs7Tjcykd7tTvsmGLZyeveuJ4s3YenZbMXLGRbtHmg5P98c
fRC0e+Dy0NNrD6qYtHtC11I6LbNdT7sn8kdYz9oWkRle6J5Md8y4upp2L3T1
lhgXyqxp90a/U8Xsxg1ksTfWfhCe4CWxoH0zKk0Wdc5dIIs34+L1OE2r3ard
B6HS1EO/Hzen3QcmfVNNWV0mtLMR31+tqVloRDsb9u6fxipKPqHdF7L9pXON
h8liX4zpPPy7Lki1++HJXkNR3IA67X64MulTrt0/66Lct2Ai8OITGzuyeAu2
2t11K7z0lnZ/3NkVZRDT9IZ2f1yZLX4oZf5DewCO9qu5lhu8VhoBuLdRvrY/
5hW9D0Dx4CjX7thLpSUBUFgON5zLe0F9ILQiPIwnH09THwjbjiRZd7ac+kAw
FqU8ttj5lPpANDzNEkqKHlHPQUnbyWf5qX9Qz0FxqpHBG7Vb1HPQu1N/VfeM
jHoOfHge20X7h6kPQpZcXcA50kl9EPLOpB+oq5NQH4Qo/eJ6y9oW6oPgKJb9
MvOwnPpgjHatGlieU0Z9MMaNqo1aY0qpD4ZN4r0FO9aRJcHQCVoc3vl8N/Vc
nJHvc1n+zddtyp4L9TTrlRV9iUqLudBdplYTfzNZaQkXfP9xlrlxqdKMEMy9
/0teVFpDfQi0FC1pY6cuUh+CyoYbTQv16qkPwbdnjpo7rm2knofHDqN7TsQ2
U8+DaW3FrQ2ePdTzUCjda93uMkg9D+a31aAWOUR9KOQnkko4M8PUh8K1dd/p
6IQR6kPhvCr++DsZWRIKjfJG5kTfFPVhiF8R1igdmaY+DFW9kbOiyJfUh0Fo
MT1unzRPfRiSWRAlpnzUruzD4Rxbn5R7VENphMP4hc2FI4m6SovDESvS1wzR
M1NaEo5HOg362W9sqeeD43elWjpsRz0fp6Yn5G3R9tTzYWBwbGSrF4d6PgL7
5qXfH+NRH4Fx4fHacO3t1EfAOsSrWu/ALuojkFLjoBBcT6Y+AmxLpt2T0izq
BXDSrGEPtZ+kXoD6JWJh0oMq6gUoilR0JXRfpl6AAi2LXi1Mtv8LnIM9AA==

          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.3169887359964936, 0.3786471257294708, 0.08226457431640655]], 
         PointBox[CompressedData["
1:eJw1yw881Hccx/FjlY4ejKjYpfy5EZlJUgpvXFS6c+64407CwzW3x61C65/U
laS1Vlf20B+VHpTqWqmjwsqf/ixpNTo7JTvGCqk9SsL6Z9vjPvd7PL6P3+P5
fX9fTimrBDJTBoOR8d/5/2/4XgYXDw9or6f+GUwX6Onvz/+o/YM8HnM/yLgl
3kZ/itB1gS1jTIy2xZGm2Ar/+jbyFFS5hPZa73xAZsFyRd2HZyubyNNxsUpn
Y1n2G9kZd7TV3HZ+I9kVs28nXMg8cYP8ORQ6c12gq9Hu6Pcvct+bXU32wPxK
5nBD4hXyTMhP8+yeBpSTv4B6V+qh5vyz5C/x61aZPbfvENkHuS1DU9+ICsiz
MN4na/TgexXZF/LLEnnV4HbybHy/tmHdyOYcsh/cvCIFpY7Z5DlILvSxsPLf
SPbHVJ9nrOyuDeS5KEzUcFnXjJ4HHrf1dYGb0QFoDlIrytPWkufD7ucWXeft
DPIC2J5iHtOvTicHwqTyB4/UDgU5CPbWvI9t14wOhlMO75Jjt4wM6NTxe1cl
kJWAviRA83RHKu0haPYJmh4Rnkx7CNKYB7zP9cTRHoqM6oZlzX5i2kPRNiSz
t2KLaA9DZFLKR9N1QtrDUGf/12WvrQLaOUg0cazeUhJNOwcin6GKtFI+7Qux
PunVvl4rHu0LkSH71m9k0WLaw6FPV3xTuyGC9nCsZz25dfPHMNojoOra9OhY
SwjtEfDMLLTbfRe0L8KLWp5txYpg2hfhu0N9pXOP+NO+GD318vK+PG/aF2PA
PKBsD8eD9iV4vTzvndaHrFyC3dPuDLfI3GmPhLWl1DTqtCvtkeh9FySb/MiF
9qVwzOF4i6c4074UKofQXNMiJ9q5sLTer1b5k5VcqHzZzpqX02nn4WplbLpL
B1nJw/2vfkputjDuUShYk7LM5BKL9ijsFcfNtJeSGXy4NmYek6XbGww+nEb1
18XHJ9F7PrzMH7NHztgaXMeHW7q+Y8s4MiMawwNyu8NlTOqjUTKkbJPkf0J9
NG7auAS0VplSHw12iMPDiU2jQYZegDdrHGa1JpEhwE5fhxkHn7w3WCmAh0vg
5ajuQYPrBNBcDQ7f1/yKeiFOPeflhk/so16IBubfxd0FPdQLweEXPnU/+oR6
IZjuFbOKM8mMGDBVDdKx6m7qY5Ae2tshv9NFfQz0hcXOlWM6qY+Bzdf1afvP
dlAfiwP30kzaa9upj8WYC74rm9m/Ux+LsckrJOwr96mPxbi204pbkTepF8FT
se2z/m3V1ItgNqDNzfEqp16ExoIX2pMTNNSLkJvS6enee5F6MXK7ch9fFJZS
L4ZZzzxOy6WD1IvRubGGp9mlpF6MJLbAUleTTX0crFpZv0x7IKA+DlncGAFr
hEd9HIQPVwUXTXKtNfRxGPA6HNf+Zo7BjHjMmbxHOIHNMRjxeHmj85r+pNhg
ZTxsazaN/0choT4eapvRXePOyKmXIO+Eq8WMSaupl6Axa7hw88Is6iVIw73j
C94qqZfgeM3Yrh6/7dRLcfRVUes5TxX1UrDD6nXPD+dTL4X5W43zjgQ19VLs
9igTDhadpz4BifvMLFKX36U+AW455zPWqpuoT4DWbDA8T9tS+y/pSg1d
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.05117133313609834, 0.25234441849119604`, 0.8068893587409842]], 
         PointBox[CompressedData["
1:eJw10H8w1Hkcx/Gd0u2em0sqhVF+5Fe15UfLZf162ays2Oyy9octPyLnzEVS
rVItN1aXY/QDY5I6yiX9mlNxmY1WOHH6zboiuequOiUqc9Vx3ezbd+Yz33l+
X5/HP1/b+FRx4jQGg7Hl0/n/bXhG/DOPWU5sc7jvTx+Q4L6v49x1PTULI55l
ZZWneqhnQd3EfOSRONVz0fhGU16z8R61OVprhUvPu9yltkJGq78+32GqbZB8
z0aQaf0btR0SmnTc49ouantsXfXo5IsnndSO6K1ov2QWO9XOcGD1ptwvvU69
BPbFTY8b17VTs9E4Oidtj+ga9XJYrXu3L6VAR+2KmfyP0e5tV6jdkDxUppos
0VK7Y/AoV1003kC9ApyJBdZeVVPNwUUTgTQ1oZ7aA3Wlgr2v1l+k9sRto/kH
tx89S/0V9gwr5r1lTPVKPD6RXWSfdJraC3Nid99a2VtLzcWNVvmTcnYNtTdq
+TnXa28ep/aBY4rN6Bcvy6l9Ue4x8SXXtYzaD0szN6S5M6baH6aT5uwDi0up
Aa3MTbKifL+h1UBipXTnCgcN7QGYJZh8w3uYS3sABmz6uxtu5tDOQ/LMyXwz
lZp2Hl72/zlHNjeL9lUQLus8c0a3k/ZVEO+IUqkKVLQHYrnxmsCqki20ByJ9
4Hltg3s67XyUKp05FfVf087H/vWqDZqQeNqD4JuUkDQ2GUd7EKbpfMTtb6kZ
q3H1uZ1Vrmks7auxyC3bbxNfSXswok2cqpmn5LQH4+DDx8PFdhG0C5B+u3J0
bFc47QIwHvAOyUvCaA9BTpJL4cnWUNpDwNv7fpf3ZgHta3Agkn+5oSiI9jX4
wS/Lo1jEpz0UhZtYwTkBPNpDsd7bx+zTb6Y9DKGzhcZVdv60h2HfB5cWxuc+
tAvhm9YyMuTNpV2I3alG3v889aR9LerzRrz8N3NoX4vq3POi4FBn2sMx6shM
j5HaGRrhWBerCyzR2tL9cOhd2fbOMdTN4Xijiu/IqVtAXoQHLhYfv3W1IC/C
6VJV3Yw0c/IipHK2htveNSMvAo/9tNfazYS8GNlOE4qQJ0zyYmxsD1UGOMwg
L8b0b6pGwDIiL0aa9ty4V9u/fgYfgdaKuAuDYR8MjQj8kW+sMW56Z2h1BE53
2Q4OHn5l6OYIiP5+nZSxa5h8JNgWR7YPCJ+Rj0SnZf72788NkY8Eoz97W8rs
h+QjwWWeX3bt5e/kJejrChr7cd4V8hKs/sj8edtnWvISTNdviDe98xN5CdiP
Dh8KKFjQZPBR6N7YJXnd4mRoROFY+y9ZFhaehlZHYeEo+2DerQBDN0chQuqU
0JIhIi/FfEVx20KWjLwUIWO8nd2BieSlyC3LcvuOk05eCse05Az1WTV5GR5c
iIJzpYa8DDc0I3LW+zzyMvgG+dr29ZSRl0GiaGHpn1WQl6NQqLUb1teQl2N4
0fubsUPN5OWoTi2oXWKvIy/H1UauF6f8GnkFLu/YI7r6awd5BbJ0FmYDid3k
FZjo8PGTBN0hr4D17Eutdfd6yEeDeUpTteiZnnw0FlvZZ54NGyAfjb4h7hHM
HSIfjbhLnTGp43+RV6LQ/fWmE/3PySuRwa2Ptep5QV6JvS1bu1MsX5FXwjs4
5Zii2rj5PyKKFOI=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.20738478146097283`, 0.7606684699933173, 0.7102862408079591]], 
         PointBox[CompressedData["
1:eJw1z38w1Hkcx/ENYTsuRV3kjiJRfnRSiqxXWD/D2h/WLit15Rwuyajoh21o
upDUycVUcka/7pYd5Uw/bbrQplrqaiwi/dow4UpdTrpu9r3fmc985/F9fZ5/
fOetT+Nu1GMwGFmfz/9v7TPi+5LlZe+e/ciXPiCiyKJ0Mesh2Rj6QR0fqsvv
k83Qiue2rJIOsgUk7KeOM3bqPAez83NavtrSTraG5npNtzpXRbaFMHnb+wm+
zvOxN+rSQnnmXbI9Jnxrz28SKskOMH/BSWGG6uwIduGYYjznFnkRjEdee1zL
aiY7o/WV2eaIVzfJrjgieG6bu1bnJdBsKHCWJd0gf4tDDaFulkebyO6IrLU7
5Oqo81KM5ultffReQfbA0nwrZOnpvAx1Owpbjs5qJC/HSZ942Y09l8ieMFo8
opcobSCvQPgVZurorD/IK1EYZtPVXldP9sLuN7dP5zReIHtjqvOBT3NczpNX
4aY8te61tc4+UA5VJIydrSOz8DJxbPFKnpzsixr1VuuLnbVk4KDq+k6+vEpr
KWAxOsli15AZq3HC92yJwZ4K2lfjY+bu3DLrE7T7gRPRzvnSnCz1wwTqPMon
j9Huj8+/ly7yIUv9EfCk27XTuIz2ANgVttTWKH+hPQCSuZW79zqRGWzYrHdj
uFoeop2NYgHbTHqhmPZAPDNXGcyXkaWBYJ1RP0hfkEd7EFwkbX/ahuyhPQj1
vw6MFihzaA/G8Sc2PeeMyNJg5Oc2Boal76I9BKfexegneW6nPQQjPZbIHMyk
PRRV3mUmHE0G7aEoeizTfAxPoz0MTm1Tg3nqRNrDsH/C/un5tnW0r8G9NJ95
R2XxtK/BQQ/FuL8nmRGOvIa/O69ai2kPR8Jh/m/1SRG0R8AtY8dCL/9w2iOQ
dm+pg7EhmREJfs+bjWfKA2mPROpAb3VJZADtHFzkpnzx6oiP1uCg5nL2ruSa
VXSfA6uOGT+L36zQWsFBtV5RwoFQMiMKola2wXJLV+qjoHDa3h9z14n6KFQ1
++3sTnCgPgpWyu+GfAwsqOdi1dfPjp3oN6Kei9EZ50TZDhMsbc9F7NgG9y3J
Sq0VXPz06ZsHO+64NGp7HjyHu3KY63hag4fpmzPEw4PrtJbycLLybf8ke73W
Ch6Kul66MwVS6vlo/5KzcWRWMfV8TOm8GVa1+jD1fMRNBpv0Kaqp5yOsLGGq
XHWKegH63F8EFa49Tb0Axyq2jZupZdQL4NU8/Lyym6wQ4HtnO19771rqo9Ex
W55iz6ynPhopg4Ie5rwr1H92g3xTgf816qOh7zn4e6XVdeqFGAgwNUwqbqJe
iH2BLoXqFrJUCBXnSpXCopl6IbKnsAcXvSAzYpD+tJSbWdpCfQwc9e/eCJrW
Sn0M7N0ajqx4e5v6GBj2Bs7EvjbqRfg3a7h+xOQO9SJUCy83mWtU1ItQ8Lg2
6H1qO/Ui3Npa3m3aR2aIsfZghvLh8Q7qxVgm+OGw9xhZKsZ4Yp8f7/R96sUw
dtYMdZr8RX0sdqUOlGa5PKQ+FvrD+dOZY2RpLGRLjKzLSx5RHwtmV/Wiq8md
1MdhctvVf2aGqKmPA+PHvNf8SLI0Dqmf7qxR5ZMVcei1s7EzNOqhXoKFz+aw
390jQ4KKtx8q1NN6qZdgPFo+ZLqgj3oJVAP7OfEiMiMeAdxzTZWbnlAfj0iN
H8N0bn/jf3c8SlY=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.5551904479363632, 0.6521594608319246, 0.3295465905195716]], 
         PointBox[CompressedData["
1:eJw10n9QzHkcx/FFo1s6cnERZtXJuNRtp+Syqldl2x/6sbtt248t5PrBnbiR
urpwW7Kqm8uvjphESoki+qHyY7dWabHaqKtLVJz8yHHpzDViOze99zvzme88
vq/P87+v9fotkuiJDAYj+eP5/z3+/O0x39RtcP6OHg/6gMSXi2IS9d3kT/Ay
zF44o6STbI6N+VuOajR3yTNRU2gykG/aRp6N0F0WPsGn9OR54PCzlhn26sgL
oMnoZddyjLaBqEvCb72oJS9EiXd+EZdj9CJkM6bmaItbyItxw8veZjTHaDsM
sWcueOB4g2yPwarBW4KK6+SvIP3syM0yVw3ZETzdHNWZ7kby12CbHtxQ39JA
Xgq11f0WQ7ea7AQmVNV+fkY7o3mYtzgBl8nL4FWRYja81GgX7D+QI3CzNHo5
bBtvH7F5U0f+Bk2nCsxfd14iu2LJpnM1K6Q15BV4eG1rmiitmswBp/tVR5NJ
JXklUkVTllxnXSS7QVFlezs05wLZHQ4dBbVHCyvIHqgorY/ZIzca4GeqdSf0
5eNWACzOF2W/bCMzPNHaetglR1hCuyfsfn5l4PUU0+4Fz/y58y7EFdHuBcuR
aoH1s0LavZHYFZDbnn6Cdm/4tu7b1JqVR/sqWD1qmqbqy6V9FWQxn14alR2m
nYuUCcOD/PaDtHNxbbar8l7xftp9cFxnPlAcR1b4YCBgfRTzVBbtPCQfbBlK
iCUreJj9Wju8cNoe2vnIVJ7VbS5U0M7H2Ih1jcE3mXYBrlawrzVuT6JdgHj/
qtFjnT/SLgRXaGMf7BBNuxDxgr6suKhw2lcjBNji/EFM+2qYdNQn77zjQrsv
VLXv/Q27vVXjuy98naV5zQ/jx83ww3ezInufSBW0+6Ewz3FlrDCVdn9EPmse
cPsyg3Z/lHZWSu+wcmgPwHSXKxuaXI/RHgDbNwU7fSJO0i4C41iDg0Vd0bgh
Qsqz5e2fD52h+yKMpEi89ieWjVstgqBIPnXtWDn1YowV6zmyd+eoF0O+MPbc
k6zz1IvhXRcgakisoF4Mpe+hVGUvmSHB1nfaFWbfX6RegiSZxPTk/SrqJXAb
GJs037SGegniua5xTim11AfCPF2x7vyaOuoDYdaZIPzBsp76QJQ/4CxKt7xM
fSCmZO+QXM2+Qr0Ub2zVyzRaMqSY9ci5g/XbVeqlcJa6HapzVFEvhcX70rvW
fmrqgzB51tOJ/s1kBEEqtljL7CcrgvCAZdoT7dhAfRCOX+ouuKUlM2SIt/sn
6sPjRuplsPLc1FMfpKFehobItL/uV5LVH23nNEG/8Tr1wWjksfUSqybqgxGT
WcmcbEtWBON3v7S3uiSyOhgtm396O8OimfoQDOUWePKtyB//1n8nnF6XO/0G
9SEQ/PGnZu5jsjoE+14ZmPlDZEYonJrPxJ91b6E+FPK2UZO932qpD0XnaaFZ
idVN6kORWVqezWeRGWGIOsuas3IDGWH4VdDX5dFPVoTBiclcnzDpFvVhSE16
cSD2OZkhx4vt1k97y25TL8dN8YkRX1Md9XK4r+vu2MUjq+VIjzFrP+xxh/pw
uPefd1c2kRGOedxAZZWWrAjHpIyk6Lx7ZHU4XIYz5kycpqc+AgG7n5dsBRkR
GMgormZnkBUR6J/ytM6gJ6sjwN3j3eXw3NivQWWfQqeMbKN+DXrZy7fFlbap
/gP5hV75
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.7326538673645353, 0.2329000687809868, 0.8327349487266056]], 
         PointBox[CompressedData["
1:eJw1yw1QzHkcx/EVzpXSw9Qpo3NO7qolD0dt6tZna3t+3La2h62Qq+6Qp3HU
Yfy5OnQr1BVJD+pQLumJSrL/YgtXXJQ8LZViOu2qKe5h59y56fv/zfzmN6/f
Z95z4zaFxOvxeLyU9/f/d+KMrOS3FxvdPNK1kj4g8A7fZp/I+UPYaXyDLmXc
JZtgygaD2/cknWRzJApfP3W142wJoesV34wZnGcj46Gj/mj3b+RPsLryzjq7
as6fQlStMctM4mwD3a1y3/OC2+TPEPCANTSM7CDb4m3MqCEzcItsD/W6Svme
5JvkBbiF0dj7/jfIDjDyj3vFP9pKXoxN/E7zQrGKvAQHhntT4+9fJy/FkjQH
T7/9nL9AyyxTo868ZvIy/GIqWL8hmfNy3DCuG9drZcmOWLXrK7seH85OkOv8
DtgXKckC/PVIMDDV6SrZGQHbi9w03zSSV0Aw1u3z1KqB7IIlxXlt6ux6siv2
5XnrxhfXkb+EWdPeQUFvFVmILqt0UYBDJXklhs0Cp6V2VJCBmpMqdsf+8gkz
QM55F13pmjLaRRi1WqvY+fAM7SJIzeuqkw6X0O6GvGLrzVsMyYwbLPqNH89s
zKfdHVlGXWpDy2za3TFP7NDslpZOuxjnmMyUanU87WI02IprXXnblBO7B3SO
btZzPVMnzHhA+mZruGlDBu2ekIxO7rNxOUK7JxrHBp5k+R+l3QupmSVG/PIs
2r2wZffFyxvVubR7I3u6Mr/t3QnavWEyz1ooNS6i3QevesfFWavIjA8KDyWe
jFvN7b5w1e7tszIppt0Xz7fqYqcfL6XdD7tjlJY/l5bR7geXhL0ex2dcoN0f
qWJfZkphJe3+OGBzaSgmt4r2AIgXOeYWPyAzAcgZyk9IXlhNeyCcPt5pe+Jf
MhMIE6FJeVpvDe1BiDMYsS7pJzNBaHymNR4JrKU9GAYFrP7wDjKC0VPQXuF+
gcwEY23y3LN9kZcmzAZj/eeFrmnnyTwJhBImq9S0jnoJ9t1Rzd8vq6degiSv
pStqdzVQL4G0u4PR/krmhUB72XhAMXiZ+hCwi3R6ASmN1IfAOcFtuSqfzIYg
PeJM456LZJ4U3+77U5f0iIz3bg96MmmI66UoaI9abaN/hXop3lh4TBsqa6I+
FGZ+woTcd2SEombBH5pOayX1oTCWZajf8slsKKpUzyQNViz1YfhHsKNpw2wy
wrCwqTZfwSczYSg6fbBv+3dkNgyzT1uULFZwvQw/ap0fL6vhehn4B33CTZu5
Xgbesammr8e5Xoay5JSiVW+5PhwvEv8eayltpj4cWufpFRuvkpn3tunua24l
s+GY4T1p+Ie7ZF4Eqgu6RSUaro9AR5vIvmdyC/URGK76uj5pAZmNwL329Wbq
dDIvEgave/rHcsiIROrYHi95C9dH4rker+JUK9dH4qjRnTeaca6Pwtn5Sc/i
3K5RH4XjT8e9PjpHZqLg4PcyVqEks1G4f+zuwpJrZJ4c+qKR2idzrlMvxzGL
mTWeMjIjh/3zoCvatWRWDvNCyRqLzWReNBiv+pEuBddHI6R5UDynn+uj8fIn
Rd2LMa6Pxm1THM4xUVEfg2C7SQ8euZARA3dhpnncFjITA6fvLVXJh8hsDCxP
DdlqBrk+FrL4d4d/n9VKfSx4mu6tH2S3Kf8D0jhrLA==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.7156100086934645, 0.7223110305856839, 0.6197308194257101]], 
         PointBox[CompressedData["
1:eJw1ywlMVFcYhuGrBKICFRSpjaKF2CmbG60ii/LJrsM2GwwzDhUQS42iEVoL
Sr1pG3FCxAJK0YyCrFJFoQzLMCwXRIxi1SJBBMeluCKCFKUKFWvDf09ycvKc
L69tzE5x3HSGYZI/3P/fqfPSy8x3uCe1o9OLPlD5YG/v86yr5BnQZulPbFFf
IltgrCjh0aHpvK3gW2r458n8dvJ8qIwmDWOjbeSFEBl2uAxF8P4Utg56ja2I
tx1Gu5be2uzIewnWJn0yfOHNBbIAV1R9v54Y4G0Przk/HRk/wdsRgrT6s57G
vJ1hlHD/vvZSK3kZRkoXBh/2aCGvgM+MtjsmLrxXotvte6Mbao7sgpkPHmbJ
NvL+AsMt8/ZPRDeTv8SxitZUZ4b3KmgOXLHR/9tIXo2anJA1ZU95u6LCyb0/
bjHvNYjsCTozkdNAdsNE4PMzEmk92R2muTEl3eM6sgcSilvYDVLenrje0fGs
R1tLXouU0oAXgbk15HVQTOMy+5by9oJfk4un9nk1GXDqK1IvuaedMgtorDxf
tW0hM+vR3KHw4DJ/p309Zs4NXMycqaDdGzE/mF1OciWz3igyGXS0TfqNdh88
rMlX2Xx1mnYfFL5W3rtqRWZ8kZw0YNPzdQntvpi5eEJ9Q19Mux/e3igYHLMo
ot0Pj7ZWb7YdK6TdH2u5xj2yo2TWH/GrQ2NUDadoD0D7bj/Nq5pjtAdg8ymb
fp1lNu2BqE5OsxIoMmgPREzowOlOcTrtG2BsVqwJeLyP9g0oS5XoOtlY2jfC
0meyLCT/YPPUvhGlqgFD7ZzsKTNC1JRrZSVeZFYI19nOQmHeEdqDsP1wzjad
IZf2IOxKP/2x+dJ82oPRk7+8/PhkIe3B2PY4XpItL6Y9BBNbvauEbiW0h6Ao
6uU5nztkJhS1Z38O8nY8S3so/PvmTeu7dp72MIgShwUy/4opIwyXp9+0X1BJ
ZsNwS2rsIJlbOWUuDOou8a5v66qoF+HdLyYjQ9BSL0JXZv+I5jKZFcH63GC8
3UMyJ4J5mHTNO49q6sWwfnk989pJMsQQnbfoyOsis2IYdPHjN9+QOTHiPo/I
qHzH9xKYrtPYYlYt9RIYLVy2Y/lJMitB3d4XOablddRLYJGSUPA0TEe9FHHq
TvO39WRIoT/g2DvYQmalcM8qWPDAqJ56KULK/ugWOJEZGe6vEDwReZIhw23j
qrsfxZJZGex0s4TrmvhehvHtau6oUk99OOwLOemf3WSEoypxdkOAWwP14ej9
bm8VE0rmwrHyWOezO3FkJgLvDRnXy/eREQHxNx5dLrl8H4GhgSerY4v4PgL9
k3lPL2r5Xo4925vddgoaqZfDUpMmhi+ZlcPcQejuKSZzcjjHLHiRpyQzkbB3
aJxbuJ/vI3HXrtfMKZ3vPzjaOjrpJt9Hoqt+yGT0Md8rILUyvVv/nu8VYOWv
mdbAJuoVyLBzu+2aSeYUaCsP1lg3kRklNLUm6XtWNVOvxKK0lviDco56JbJN
5sWmdJM5JQ5f0rrneLZQvwmtUct3J24lYxPqlvx1xdWhlfoPjv4sJHiUzG3C
qOWMW3r/C9Sr0JOidre+TYYK8xML4rqT26hXYRFjZihrJ3MqDAirU0eyLlIf
hXa/v70q+siIwtiqHy3eHm9v/g99DWqU
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.20048418690186698`, 0.4562294529376105, 0.969080302080999]], 
         PointBox[CompressedData["
1:eJw1ywswlWkcx/G3M0oz20o6k3bZySWlm5BQiZ/jLnIc5xzOjbRIEWo1pZjU
zu5kqVaJ0AW7XZB7OAZ5JbLFdLZWlkKblaYmubRSuuzu+L/vzDPvfJ7f8zXe
HisK5zEMk/Df+f8/8406efN79ug2tznRBWqO3R7OOs95LsIGm6btBLfIunir
LXN/c+gmmY8F96VTx+OayYsx683oUZcIzoYojir4WSukiWyEJv4ifso/jWQT
mPx0Ks/5FeeleBy7Ozb+IudluM07pG8u4WyObueB9k8izitRdfDWnv3+nFfj
64TI1+8cOFvgQMJUxK1vGsiWiJGbPaq7Vk+2gpH5+9qHOZytUZ3bfHdYwnkd
4lU7Y03e1ZFtkFhjerEvQ01ej7exl/WbPTnbwj2moOCBdy3ZDgq2+WP+42qy
Pf760aYiJ4fzBtQ84OvbZnPeiANrVpw9dOE6eRNS1i8Q3FNwdsC8oBWGYZoq
8mZYrZrK6Ovg7IjTzwrkFj6cnTDC36DuXc4ZeOB+YXveYOWMk4HR5NDwP66R
GWfY83Y7p82toN0ZBXMm2k5ml9MugIXM6wcnX3KyAPfV7Z2/S0tod8HL6PCC
wslrtLugtM9mpHygkHZX9OatXRgwdIV2V3R3DZZfSMqn3Q2Fi3e9vvE+j3Y3
aPZWPLmUnEu7O3R0OgWxHVm0u0Nq8Kaz2SGTdg9sLpq2t8o8Q7sHerqq2bJ0
MuOJELPXoePJabR74oniUYu2+CjtXvDT7P3gsfEI7V7oVw5qbPUSaPeG5vCO
4irdONq94Ra1qe3qERHtW7BIzn8enxjdNLNvwZq8yrjRzJgZMz5I4/n1CIIP
0+4DvR6dryYOp9LuC9Zxsisk/QTtvpjWJAXfrU2nfSt8dL7v3F9yivatKG53
26LdTmb8MDduoYGWdgbtfrD4zs7pi9Is2oVY79naUT2dPWMIUbKsJ1L2OZfe
C2E0HqFpcTg3Y1aIFz2tSUuiz1Pvjzll8hZW6yL1/lipnaSZ/pBHvT9srM8H
zLbLp94fe3RToqOmyYwIwrXuv5y2LaBehJ0TY+dKPX+lXoSo4agwwT4yK0LY
Yue7Kx9foj4AY+Ke0ND2y9QHwLZxyLLicxn1AYgOYUfM1OXUB8AjAXcyW8iM
GMYG7PyhATLE+HJZdeUH0wrqxagwNrOsayWzYrS02hn776ikXoLEo/7dL0aq
qJdAtS9v8lvXauolyPSN18T4kVkJahhL64ORZEaKoYaqvqjrZEhhL1TrBZ+p
oV6KTYYCh7FsMitF5D5Tnl8umQmE0C/cePweGYG4caLQtOtPrg9EBLPL58Ss
WuoD8SLk/SsLIzIThHnnEh1fZpARBIPl9bxsKzX1QYhN2/a8JKiO+iBMlqXW
m8ypp16GXTxnJxsbMmSYMjwdXlRGTpZBJTRilWkN1MvwbDxrDf8hmZFjYFia
JYlrpF6O/ne9LquekpPlyB9scNTa3ES9HF7qY1EjW8mMAk/rzJaoj5OhQLd1
sUJsy1KvgPVZ/U+6IjKrQPQ2VWP1STKjxETiFeXqFjKUaDtSVPTRrJl6JfTu
mP/9MoTMKtFhvDBHeZDMqJB9NX3p7FQyVPi8v5dXqnOTehXYZ/MD1xmQWRVS
nnj95iUnM8E4kGZw3TWLjGBMbH811t9/s+lfGRxikQ==
          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0.93486067033521, 0.435621218544221, 0.4653125577290753]], 
         PointBox[CompressedData["
1:eJw1ywlQ1GUcxvHlWJI8UiSElACPDRFXIC4F5Flgl0twD5Y92eFISSEvHAoV
Wlg0tEQONYUQF9xoOSQFAVHOvEpzPZAgDUWlLEZRS1IxrIbf/mfe+c/nfd6v
U+J64SpTBoOR8d/5/z/xPQ68+IX1M+ddnYF0ATOvBYbgpHbyJPjWeI6/ldlG
no6zzGtPlvkZbQ1/O0nB7bGTZFuUS2ofdrk0k+fgRv+oOiWtieyIfFmd8EqC
0XPhXMx97wMLo+cjaNOs68zuE2QWNpuz/77uZrQzMqLkQ/ZTjXYBFKGHquY1
kl2RZDi1O9LBaDbmDTc8DtvWQHZDWqOUHexotDs8hv6oK2YeI3ugh9N80VT1
Lfl9zAroidloarQnbNJsUwOUR8leuClN8uh6t47sDcfFW75fzq0h+0DnlFzX
zK4m+6JbFcuMmmb0Ukx5bG9ZqNWTl6FDubN2XbuO7IdXnAQuZ7PR/sjclZxY
wz9CDoCrRvBy/atK8nLYJDusaBwwOhC42zbAqDQa2JR9//j0fWQ1kH1g7+BX
S407B/PYO6sVKRW0c1BmJuvbP5vMCALrxbhw/I6W9iB8smjN3fDxw7QHY3Fm
bVQxp5z2YLQ1TR8JUR2iPQRJG1RDZXZkdQgWRcGu2lBKOxfxOn2w7t5B2rkY
rPSYPLv+S9p58Ofujj+eVUw7DzeEdgLLmCLaQ+HGsu3h39tDeyjOS+zO2T/L
pT0Mtnk8uzeyyOowOPXVlEpdsmkPx6hB42Zlso32cBRdT+GlSTJojwA/PwPR
7I20R8BZnBgnt0mhPRJmoT5dl4qSaI/EwYrCA0sEZMYKJKTl3Q6sD6d9BS4/
MPPN6uV2TOxReL60dNsTFW/C6iiwktZnF1gm0B6NEa3m7abeD2mPxrL4mdJH
69bQvhKyOcNmj1q30L4SU9au+eWM91ba+TBvshg7P0M9YfBxX+rgoHXJofd8
GDSaKzsKNBPu5KNVz5pjn/YZ9QKY/+b+1HsrGQLsuNQwZpDnUy+A1c9hHyfk
7qFeAPdHKwcvGAqoF0I0YmZqxSqkXgh2SdmN/lSyWgjWiLlbvXUR9UI81TZ0
twQWUy/CidSS31tC91IvgjzdobS2ah/1IrgaZp7ifLefehHiDbfSTdMPUB8D
71GDdXMeGTFgRvTW6EMOUh+DqgsPrvlnlVAfg+3jzMMDh8qpF2OG5POcPo2W
ejGm5U22Xj5UQb0YA6u7whZKK6kXo3VI3FIpPUJ9LGxu9ZX99EJHfSwcTGwX
Pj/zNfWxCPdVB/2aWkV9LFimk//cMPwN9RIouvlZcef11Eugf7WxI/Gjauol
uKwTqa5E11AvwaQ3TVI8tbXUSxEhGr347CUZUpiGzB7WWdZRL4XXj+1+d9aS
O6VIZt3XxaeQGTLIMlLn9p49Sr0Mq4Z/OLfEpZ56GbqfnOZZ5JI7ZViQ/5fA
J/M49XJ4pvfzhyUN1MuRa7V33CeZrJbjRVBTd3thI/Vy+N02sTrs0kS9AjlV
pT3ukc3UK7DWXTVzR1sL9Qo8fDhgIf6H3KnAnudHprbObaVeCU/ezfJrFWQo
UaLefjU08hT1SlT3Ow4WTDlNvRLhJ6/qF79DZsTh9ZCHE9O7jfo4iDljx9QB
ZHUcNmsvXF59h9wZh7ynJ19vYbZTr8KnDT6FykIyVHA95xU//257x7+6FkQb

          "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.5630152134056117, 0.6226446936014556, 0.6141415838956619]], 
         PointBox[CompressedData["
1:eJw1yw0w1Hkcx/F/7nJSSstV7uommzoqpqLTqrYPy7LkaRdrPXaXUF1d6QGV
/HfF0RRuK1SE5DmE5KEu2xUql3RFmU4UUuom4xTncu5ufPc385vfvH7v+Rh+
94N4iwbDMJH/3f/fyTO4YXe11mqOze0N9IHBUeX+T1MayVr4bWXhrhbhLbIu
jO8H3E0fU5H18dj5YdC2LrXnwex4+iPB0lryfIx1FrSnS6+QF2Ki9F5A0boq
MhdeIkGdaL7aRlBebW1o56i9BGGX5fz2rZfJxjhdvOpBsqKCvBRTGzsbap3U
Xo6UxUfsTsSXk81wNut4bTpf7RVwvt5SYjlQSl6JnUelo0yW2qsgfzncrLpz
kWyOxDMOYUNPCskWkPtdm1E2Xe3VqOrhMmMfC8jfYGZ0UbTgV7UtkZtZ3dwb
nk9eA8cn78x/D8oj87C8aF9N79UcshWkx4TKc6nnyWtRE52uH1mZTV6HMG3J
hy7hOfJ6bMyITZ4ynkHmQ8+0LiSQl07egIhxnd0OAafIQFNs55XRi8pJs4Bp
UXHIQ5Mk6tYYnfLw3vWSeOrWeN4qvbDuEzJjgx3To8weNMZSt8GT0njNJl4M
dQHub2aGDlYpqAvA58i7kxR7qdsieUjrTf2Pe6jbYp9Tsqax6W7qdugf2XTV
NiuYuh3CE0PmGdtIqQtRIUi5kX9EQF2ID8ZvpzT2mVO3x+OcAW7baw51e9yV
aLuXKy3qJ7sD7ku1KwzXfjtp1gEXQjfdXKb7PXUR+BO7Fvlq7qEuQmkZz7vC
bC91R/jJ3fJGWiOoO0JYEp/6rO0AdSeocsTmbSEK6k7IF5rHb40iMxvRYnju
VVN2DPWNWKSl6dL7Jo66MwQr0p5ubvmJujO27zmmjOogMy4w6OEeePSnurtA
EtwlsrqlpO6KHZ7b3w8/P0HdFQkrwlSO4pPU3VAzGN6ZwDs1abgh8oZWluNH
MusGYZSw1UAjZdIqN4xNvVljHZpKe3coNOYGLLVMo707ns98EerBO017dzjd
WR9u5ERWuUMr2mt6sDyT9mJ0n51rVdRMhhieL19p24+TWTGOdZ/m1qitEiNY
VKuRxGTRXoK05j6F7qxs2kswrjhcNz6HzEowcG3LjH4jskqCx+cXKE9eIjMe
qMB14d/W52nvAV3L1/3PXpFZD6ToyYePmOTQ3gN/vbEQLV5GZjxh91nlkug4
Mjzh/k9HgUEDmfXESELQgq8G1XtPVM4biNH48gLtvXBWR+7i8jUZXgg6WF3w
1JbMeoHzThjhLCGrvHDwUGp1ryyX9lKk8l7ur48lQwruH4lKnVwyK8Xlm138
bv082kvRb5+VqJlLZrzRP/PUoeSMfNp7Y/nsztiIPDLrjfG+kOxiWQHtvcGY
dlQnRZEZGeKGlx3VO0OGDLI1ARnHB8isDN47uVp2nxfSXoYGTpugZyuZ8QF3
2raMRYFFtPdBps7ELz/Hk1kfuDq53jMZIqt8YPLFbKtI12La+0K/40RImA8Z
vuBH9LU1hZbQ3heZm/IC+ybIKl8Y9MV7+OuV0d4PRqsqV5cbk+GHEcXiuvcJ
ZNYPMYPsLkPOJdr7IdB3uCltRjnt/cHRXuk2K4sMf8TMHYhr6SWz/rBof8S3
/VBBe3/w9OaICmsqaR+At2W3FS90q2gfgJ5p2XkTh6vr/wUGdFyg
          "]]}, {}}}, {}, {}, {{}, {}}}}, {
    PlotRange -> All, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 119.}, {-0.01177445975476499, 0.019584949774084016`}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 119.}, {-0.01177445975476499, 0.019584949774084016`}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"0.1`"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.31792436915109157`, 0.6760155598213982, 
                    0.11123624738557392`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.31792436915109157`, 0.6760155598213982, 
                    0.11123624738557392`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.31792436915109157`, 0.6760155598213982, 
                    0.11123624738557392`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.21194957943406106`, 0.4506770398809321, 
                    0.07415749825704929], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.31792436915109157, 0.6760155598213982, \
0.11123624738557392]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.31792436915109157`, 0.6760155598213982, 
                    0.11123624738557392`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.31792436915109157`, 0.6760155598213982, 
                    0.11123624738557392`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"0.2`"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3169887359964936, 0.3786471257294708, 
                    0.08226457431640655]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3169887359964936, 0.3786471257294708, 
                    0.08226457431640655]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3169887359964936, 0.3786471257294708, 
                    0.08226457431640655], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2113258239976624, 0.25243141715298056`, 
                    0.054843049544271036`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3169887359964936, 0.3786471257294708, \
0.08226457431640655]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3169887359964936, 0.3786471257294708, 
                    0.08226457431640655]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3169887359964936, 0.3786471257294708, 
                    0.08226457431640655], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"0.30000000000000004`"}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.05117133313609834, 0.25234441849119604`, 
                    0.8068893587409842]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.05117133313609834, 0.25234441849119604`, 
                    0.8068893587409842]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.05117133313609834, 0.25234441849119604`, 
                    0.8068893587409842], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.03411422209073223, 0.16822961232746403`, 
                    0.5379262391606562], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.05117133313609834, 0.25234441849119604, \
0.8068893587409842]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.05117133313609834, 0.25234441849119604`, 
                    0.8068893587409842]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.05117133313609834, 0.25234441849119604`, 
                    0.8068893587409842], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"0.4`"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.20738478146097283`, 0.7606684699933173, 
                    0.7102862408079591]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.20738478146097283`, 0.7606684699933173, 
                    0.7102862408079591]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.20738478146097283`, 0.7606684699933173, 
                    0.7102862408079591], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.1382565209739819, 0.5071123133288782, 
                    0.47352416053863944`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.20738478146097283, 0.7606684699933173, \
0.7102862408079591]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.20738478146097283`, 0.7606684699933173, 
                    0.7102862408079591]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.20738478146097283`, 0.7606684699933173, 
                    0.7102862408079591], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"0.5`"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5551904479363632, 0.6521594608319246, 
                    0.3295465905195716]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5551904479363632, 0.6521594608319246, 
                    0.3295465905195716]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5551904479363632, 0.6521594608319246, 
                    0.3295465905195716], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3701269652909088, 0.4347729738879497, 
                    0.21969772701304774`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5551904479363632, 0.6521594608319246, \
0.3295465905195716]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5551904479363632, 0.6521594608319246, 
                    0.3295465905195716]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5551904479363632, 0.6521594608319246, 
                    0.3295465905195716], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"0.6`"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7326538673645353, 0.2329000687809868, 
                    0.8327349487266056]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7326538673645353, 0.2329000687809868, 
                    0.8327349487266056]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7326538673645353, 0.2329000687809868, 
                    0.8327349487266056], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4884359115763569, 0.15526671252065788`, 
                    0.5551566324844037], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7326538673645353, 0.2329000687809868, \
0.8327349487266056]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7326538673645353, 0.2329000687809868, 
                    0.8327349487266056]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7326538673645353, 0.2329000687809868, 
                    0.8327349487266056], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"0.7000000000000001`"}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7156100086934645, 0.7223110305856839, 
                    0.6197308194257101]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7156100086934645, 0.7223110305856839, 
                    0.6197308194257101]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7156100086934645, 0.7223110305856839, 
                    0.6197308194257101], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4770733391289763, 0.4815406870571226, 
                    0.41315387961714006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7156100086934645, 0.7223110305856839, \
0.6197308194257101]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7156100086934645, 0.7223110305856839, 
                    0.6197308194257101]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7156100086934645, 0.7223110305856839, 
                    0.6197308194257101], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"0.8`"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.20048418690186698`, 0.4562294529376105, 
                    0.969080302080999]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.20048418690186698`, 0.4562294529376105, 
                    0.969080302080999]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.20048418690186698`, 0.4562294529376105, 
                    0.969080302080999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.13365612460124465`, 0.3041529686250737, 
                    0.6460535347206661], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.20048418690186698, 0.4562294529376105, \
0.969080302080999]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.20048418690186698`, 0.4562294529376105, 
                    0.969080302080999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.20048418690186698`, 0.4562294529376105, 
                    0.969080302080999], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"0.9`"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.93486067033521, 0.435621218544221, 
                    0.4653125577290753]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.93486067033521, 0.435621218544221, 0.4653125577290753]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.93486067033521, 0.435621218544221, 0.4653125577290753], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.62324044689014, 0.2904141456961473, 
                    0.31020837181938354`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.93486067033521, 0.435621218544221, \
0.4653125577290753]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.93486067033521, 0.435621218544221, 0.4653125577290753]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.93486067033521, 0.435621218544221, 0.4653125577290753], 
                    Editable -> False, Selectable -> False]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"1.`"}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5630152134056117, 0.6226446936014556, 
                    0.6141415838956619]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5630152134056117, 0.6226446936014556, 
                    0.6141415838956619]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5630152134056117, 0.6226446936014556, 
                    0.6141415838956619], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37534347560374115`, 0.4150964624009704, 
                    0.4094277225971079], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5630152134056117, 0.6226446936014556, \
0.6141415838956619]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5630152134056117, 0.6226446936014556, 
                    0.6141415838956619]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5630152134056117, 0.6226446936014556, 
                    0.6141415838956619], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8110722811923556`*^9, 3.8110723767311244`*^9, 3.8110724231971602`*^9, 
   3.8110724696999817`*^9, 3.811072518398455*^9, 3.8110725580979776`*^9, 
   3.8110726253193717`*^9, {3.8110726969251585`*^9, 3.8110727096572475`*^9}, 
   3.8110728318208094`*^9, {3.811072870175019*^9, 3.811072908962824*^9}, {
   3.811073091371731*^9, 3.8110731207440224`*^9}, 3.8110731571863756`*^9, 
   3.811080086017554*^9, 3.811080295803725*^9, {3.8110805972178516`*^9, 
   3.8110806023868628`*^9}, {3.8110808035238695`*^9, 3.811080806425562*^9}, 
   3.8111649570512886`*^9, 3.8111697149392643`*^9}]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.811079095856367*^9, 3.8110790992759852`*^9}}],

Cell["\<\
For \[Sigma]+ transition the subradiance is much weaker, which makes sense \
because this polarization overlaps in-plane modes. best looks to be at \
\[Lambda]=0.3, almost 3 oom. \
\>", "Text",
 CellChangeTimes->{{3.811073189247263*^9, 3.811073254211398*^9}, {
  3.811089465607395*^9, 3.8110895224076166`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"linewidthPtsList", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "dlist", "]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.811090435326002*^9, 3.8110904374098473`*^9}, {
  3.8111698164673824`*^9, 3.8111698676650915`*^9}, {3.8111698977061653`*^9, 
  3.811169915206422*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.7578224095638176`"}], ",", 
   RowBox[{"-", "0.32541067055728695`"}], ",", 
   RowBox[{"-", "3.33122754409217`"}], ",", 
   RowBox[{"-", "0.5658020978073725`"}], ",", 
   RowBox[{"-", "0.27596603726555985`"}], ",", 
   RowBox[{"-", "0.1842353878708778`"}], ",", 
   RowBox[{"-", "0.17660439783178078`"}], ",", 
   RowBox[{"-", "0.14742647946220408`"}], ",", 
   RowBox[{"-", "0.12063815449598597`"}], ",", 
   RowBox[{"-", "0.09178159540264334`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8110904376833954`*^9, 3.8111697462414865`*^9, {3.8111698169836025`*^9, 
   3.8111698203934107`*^9}, 3.811169868624279*^9, 3.811169915563511*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"linewidthPtsList", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8110797021896276`*^9, 3.8110797022894526`*^9}, {
  3.81107980843684*^9, 3.8110798160708904`*^9}, {3.811079897922511*^9, 
  3.8110799305415936`*^9}, {3.811080639690575*^9, 3.811080715803539*^9}, {
  3.8110896905692854`*^9, 3.811089704889041*^9}, {3.8110899146428995`*^9, 
  3.8110899162451906`*^9}}],

Cell[BoxData["116"], "Output",
 CellChangeTimes->{{3.8110798982949996`*^9, 3.8110799308566265`*^9}, {
  3.811080650352378*^9, 3.8110807160837307`*^9}, {3.811089691189911*^9, 
  3.8110897055758543`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"linewidthPtsList", "[", 
   RowBox[{"[", "5", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8110895452734656`*^9, 3.811089559999392*^9}}],

Cell[BoxData["118"], "Output",
 CellChangeTimes->{3.811089560930378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"didx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evec", " ", "=", " ", 
   RowBox[{"evecList", "[", 
    RowBox[{"[", 
     RowBox[{"didx", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cf", " ", "[", "z_", "]"}], ":=", " ", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Purple", ",", "Black", ",", "Green"}], "}"}], ",", "z"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cfData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"cf", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Legended", "[", 
    RowBox[{
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Re", "[", "evec", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SqrtBox["atomnum"], ",", 
           SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(+\)]\) eigenmode, d=``\
\[Lambda], \!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \
\(i\)]\)/\[Gamma])= ``\>\"", ",", 
            RowBox[{"dlist", "[", 
             RowBox[{"[", "didx", "]"}], "]"}], ",", 
            RowBox[{"linewidthPtsList", "[", 
             RowBox[{"[", 
              RowBox[{"didx", ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ",", "Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"Mesh", "->", "True"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            SqrtBox["atomnum"]}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"BarLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cfData", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8110901053186107`*^9, 3.8110901607409763`*^9}, {
  3.811090255604732*^9, 3.8110902563624277`*^9}, {3.81109031882555*^9, 
  3.811090518575637*^9}, {3.811090554921273*^9, 3.811090590887963*^9}, {
  3.8110906348952446`*^9, 3.811090672912064*^9}, {3.8110966098257337`*^9, 
  3.8110966099723744`*^9}, {3.811096644450863*^9, 3.811096670506591*^9}, {
  3.811169762973546*^9, 3.811169763575903*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0., 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5, 0., 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0., 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0., 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 0., 0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2666666666666667, 0., 0.2666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4, 0., 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 0., 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 0., 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3, 0., 0.3], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2, 0., 0.2],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3, 0., 0.3]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.3, 0., 0.3]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3, 0., 0.3],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.1333333333333333, 0., 0.1333333333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.19999999999999996, 0., 0.19999999999999996]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.19999999999999996`, 0., 0.19999999999999996`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666665, 0., 0.06666666666666665],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.09999999999999998, 0., 0.09999999999999998]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.09999999999999998, 0., 0.09999999999999998]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.09999999999999998, 0., 0.09999999999999998],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.20000000000000018`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.13333333333333347`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.20000000000000018, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.20000000000000018`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.20000000000000018`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.40000000000000013`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.2666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.40000000000000013, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.40000000000000013`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.40000000000000013`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.6000000000000001, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.6000000000000001, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.6000000000000001, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.6000000000000001, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.8, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.8, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0.8, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.8, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 1., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 1., 0.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8110902446075945`*^9, 3.8110902630544434`*^9}, {
   3.8110904751312523`*^9, 3.811090481543377*^9}, 3.8110905230313587`*^9, {
   3.811090667316848*^9, 3.8110906733037*^9}, 3.811096611359844*^9, {
   3.811096645613618*^9, 3.8110966708023357`*^9}, {3.811164947428283*^9, 
   3.8111649616757207`*^9}, 3.8111697652009497`*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{RasterBox[CompressedData["
1:eJx1lg0w1GkYwBddRWwUcZKxxqVyxypFEpo+RnUiIcJqFGFGH3LnampZnFpc
5+v2tnYMs+RWZ0n56k57rMgm33EW+UrIx7lLjmk73dTs+77j/0z/mZ3Z3292
/vu87/u8z/Mwgs55BKvRaLRVys+H75mS9xzj+BonmvJBrBGSLZHdaMMesf03
q451HuzCHjHLIX1WmNiBPeKolj0Fm1rqsKcyra/K7YIslbDyMVM9kJkmfQZ8
pZdu2HHaC+BTb/zQwK19CbxHDMOGvXIIeIN/1CKufduK/RGdy+IEURNglnln
x2elPWRdSqZ3RezI/3IAe8TFl55cqOH3YY84cN5o5/FL5P8Qm/R+WH8s9lTW
ZjgG6I8OgPijsrVM3Vsmge9X3B21OfUX8PauBgmZE6+Ab9jL5k8LSLwJthzz
rnf1gBdkcd5sHjkPxMvLMvZfCZRjj9jfVXvISkHyBDGr/m16mvAJ2U8la68t
zG1SZJJ1U9huYfHq25/kIP7xyGNpEutR4G3Gfma+9BgHXjRTt1yrCeaPbvyK
67NhndjniHN2bxTkAjY4YejNbxJjj3jcT+yZnHofe8QJcxsD8naVkP1UcqUZ
pzzZ/A72iJmU+0DlnDIhvUNaAuKP1T/jILGoAt7u9QO9+vBq+Ptr27q14iqA
d664GGObfQd4bbcTjDXl7cCbKIxOse2GgTeUHH20YDMGfMq0b11z8AjwT4Mr
jP2M/oRx9i29D5oqxS7c7TLAjr979QRHkvND3JjsKv9xTzf2iEM65fdmVEi9
QsxWe1b9xuUR9lQ2ScyIrknqBXE2D6jm8o5OAH9+67LJ0Fl4H0X7VfJjQqaA
t/TOiLwcOgj34bBgfrPlTZIXTHfppHUb4C/W/vfbuovPsV/K1PcOOkWIFyu+
YpH1IL5ur6Wft4HUQyozQ/t49VYwH4pW9Gf5zMF6+6l8oA3xk96IYD5Uf729
IF/4qXzIIXXoc2vJ7uIGwPmP1+k5W5F8QGzHp+uGL5L3Iu4ZujUtk5D1IOYb
ee8okNZijzjnIP+MZ+ltci8R/6sTWz9aTOJW8sjmgjDTrFLsEZ+uNY3c5XIP
e8TuXG5KAF2EPWLnj/3hPPZUZnrcslPpuw/27WQpK2RqnwTWz+qyLQHRNfBc
zCxUHQQPYH2YCerIaCvCvtD4fQkj/jHguIc16/PkpF8g5onaNYRCUscRDzu7
5Xs5knNB7CP+bsPzTY3YI049tPQ+UNlThzNbtBr2C5+QdO+RKNgvKnu65jR4
sF+YvFj2dKs2zM93Yd+vcfqb5BdrYd621bIZ8CtD3ZsW82R+QCyUFSoaz5G+
jnhfhLrtWC/px4jnJ/wWr1SR+QHxXU7S4cSTWdhTuXtndXtjIJwfXv/a7L8l
Bc4PoSsjGatNYL2S+solZ3+B88O4P40u1CPxRt2+qhmuLgUc69sfP9NG6hXi
qtBDBooUMicgnrJqq2yQkfqMOK/8j21RXmQ+wfzx/LkkPgprrm9QP+AA50lm
UGeu9UPYvzQER9ROx8J5sjV5+KxPHazP7rqaddGDLdj/D4071uc=
         "], {{0, 0}, {11, 11}}, {0, 1}], {
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 11}, {11, 11}}, {{0, 10}, {11, 10}}, {{0, 9}, {11, 
            9}}, {{0, 8}, {11, 8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0,
             5}, {11, 5}}, {{0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11,
             2}}, {{0, 1}, {11, 1}}, {{0, 0}, {11, 0}}}],
           Antialiasing->False]}, 
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 0}, {0, 11}}, {{1, 0}, {1, 11}}, {{2, 0}, {2, 
            11}}, {{3, 0}, {3, 11}}, {{4, 0}, {4, 11}}, {{5, 0}, {5, 11}}, {{
            6, 0}, {6, 11}}, {{7, 0}, {7, 11}}, {{8, 0}, {8, 11}}, {{9, 0}, {
            9, 11}}, {{10, 0}, {10, 11}}, {{11, 0}, {11, 11}}}],
           Antialiasing->False]}}}, {}},
      Axes->False,
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{None, None},
      FrameStyle->Opacity[0],
      FrameTicks->{{{{10.5, 
           FormBox["1", TraditionalForm]}, {9.5, 
           FormBox["2", TraditionalForm]}, {8.5, 
           FormBox["3", TraditionalForm]}, {7.5, 
           FormBox["4", TraditionalForm]}, {6.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {4.5, 
           FormBox["7", TraditionalForm]}, {3.5, 
           FormBox["8", TraditionalForm]}, {2.5, 
           FormBox["9", TraditionalForm]}, {1.5, 
           FormBox["10", TraditionalForm]}, {0.5, 
           FormBox["11", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {1.5, 
           FormBox["2", TraditionalForm]}, {2.5, 
           FormBox["3", TraditionalForm]}, {3.5, 
           FormBox["4", TraditionalForm]}, {4.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {6.5, 
           FormBox["7", TraditionalForm]}, {7.5, 
           FormBox["8", TraditionalForm]}, {8.5, 
           FormBox["9", TraditionalForm]}, {9.5, 
           FormBox["10", TraditionalForm]}, {10.5, 
           FormBox["11", TraditionalForm]}}, None}},
      FrameTicksStyle->Opacity[1],
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->None], Scaled[{0.5, 0.5}], Center, Scaled[{1, 1}]], InsetBox[
     TemplateBox[{FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1l01slGUUhaeBhWGDMRVXoiTGVNlocKEJ7birCxeCGxKJCyO6IYLRBSIx
DQHZ0S66sC4MhJJKUiclVPsThGlRgcrPaGc6RSu2tWqlRVlQ2Jhov3vfc2++
czMnmabn6XTeee893/uz6Y0923etKRQKl1dfTauv7HfVbLGQ02yx1D63v7n0
q3H4nZ3jKy07ncOvq5/Y27rOOfzwxsNL24ZvGod/S+Qc/mEZyDn8hdVROsd/
MQ7/bms2knP4x7JhNjqHv3ol04xx+A+bs4Gcwz8lE3QOL9Or/2wcXoY57Bz+
uS2ZnMPP788G+sk4fFdW1k7n8G1SWOfwy9kwSzeMw3/ak8k5/EtZO9udw9/L
yroybRy+N5veCefw26WhzvN+mnI1nXJVp1zVU67qlKt6ylWdclUvjkiOpozD
vy05cg6vOZqiXE2lXNUoV7WUqxrlqpZyVaNc1VKuqpSraspVlXJVTbmqUq6q
KVeTlKvJlKtJytVkUWK0xTm8tHPuR+PwUtZO5/AyvVbn8DLM0g/G4SVGPc7h
pZ3tzuGlrCsV4/CaowrlqpJyVaFcVYr/ia4bh39NJuIc/ivJxTXj8A9J/53D
vyMTv2ocfkL6ecU4/JPSN+fwB6VQ3xuHn5U+TBiH3yr1dg7/idT1snH4u1K/
S8bhX5E6OYfvl0ZcNA7/gATMOfyb8tx8Zxx+TBr3rXH4RyWQzuE/kLx/Yxy+
Jrm+YBz+Wcmvc3jN6Tjldjzlc4zyOZbWN+fwmq8y5a2ccnWecnW+OCR5OWcc
fo/k4mvj8NKGlrPG4bXPo9T30dTfEervSOrjMPVxOPVriPo1VCxLOb40Dn9A
6j1oHF73nzO0H51J+8hp2kdOp7oNUN0G0v5eov29lOrQT3XoT/M9RfM9lebV
R/PqK+6T79trHH5Rvtdx4/ADMv5nxuG7dIHy/TT5Dvm8buPwZfm/o17P5PXv
h+j9hxJ/n7j7RvqYPi/PuwOfoPnl398b+OdU7/znlAK/R/3Pf/5g4I9QHvPj
jgT+Aj0f+e9zLvAv6HnNf8+xwNto/YA+onUIukjrGbSe1kVoB62v0DFap6FF
Wu+hZ2jfgPbR/gOVaR+D1srPSqw/7avQy7Q/Q3don4e66bwAPU/nDmiGzi9Q
B52DoCfoPAVdonMZtJvOd9CDdE6EBum8Ce2gcyv0L51/oWN0joZepPM4tEDn
eugI3Q+gzXTPgK7TfQV6j+490Aa6P0GjdA+DXqf7HNQkP/leWCi8KnWL/KTk
LfL7Us/IdT+eC1zvJ5HrPhS53n/mA9f7UuR6v4pc97/f4ron/Yp8WuIW+dPS
x4XAdd+N/Jr0N/LH5bn4PXAp897I9TgUuQzb/Efget+OXPfvyPXe9Wfgek+L
XO91kasWA9fzfeR6zohc76WRa67+apCryDVXkWuubjXIVeSaq8g1V0sNchW5
5ipyzdVyg1xFrrmKXHN1u0GuItdcRa65+rtBriLXXEWuufqnQa4i11xFrrpj
/H8tDLSm
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                    Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                    Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                    Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                    Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                    Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]},
      "BarLegend",
      DisplayFunction->(#& ),
      InterpretationFunction:>(RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0., 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4, 0., 0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2666666666666667, 0., 0.2666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4, 0., 0.4]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4, 0., 0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4, 0., 0.4], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3, 0., 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.2, 0., 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3, 0., 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3, 0., 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3, 0., 0.3], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1333333333333333, 0., 0.1333333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19999999999999996, 0., 0.19999999999999996]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
                    Editable -> False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06666666666666665, 0., 0.06666666666666665], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.09999999999999998, 0., 0.09999999999999998]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
                    Editable -> False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.20000000000000018`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.13333333333333347`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.20000000000000018, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.20000000000000018`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.20000000000000018`, 0.], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.40000000000000013`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.2666666666666668, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.40000000000000013, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.40000000000000013`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.40000000000000013`, 0.], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6000000000000001, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4000000000000001, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.6000000000000001, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6000000000000001, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6000000000000001, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.5333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.8, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8, 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 1., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 1., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 1., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 1., 0.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1.01, 0.5}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   Axes->False,
   Frame->False,
   FrameLabel->{None, None},
   FrameStyle->Opacity[0],
   FrameTicks->{{{{10.5, 
        FormBox["1", TraditionalForm]}, {9.5, 
        FormBox["2", TraditionalForm]}, {8.5, 
        FormBox["3", TraditionalForm]}, {7.5, 
        FormBox["4", TraditionalForm]}, {6.5, 
        FormBox["5", TraditionalForm]}, {5.5, 
        FormBox["6", TraditionalForm]}, {4.5, 
        FormBox["7", TraditionalForm]}, {3.5, 
        FormBox["8", TraditionalForm]}, {2.5, 
        FormBox["9", TraditionalForm]}, {1.5, 
        FormBox["10", TraditionalForm]}, {0.5, 
        FormBox["11", TraditionalForm]}}, None}, {{{0.5, 
        FormBox["1", TraditionalForm]}, {1.5, 
        FormBox["2", TraditionalForm]}, {2.5, 
        FormBox["3", TraditionalForm]}, {3.5, 
        FormBox["4", TraditionalForm]}, {4.5, 
        FormBox["5", TraditionalForm]}, {5.5, 
        FormBox["6", TraditionalForm]}, {6.5, 
        FormBox["7", TraditionalForm]}, {7.5, 
        FormBox["8", TraditionalForm]}, {8.5, 
        FormBox["9", TraditionalForm]}, {9.5, 
        FormBox["10", TraditionalForm]}, {10.5, 
        FormBox["11", TraditionalForm]}}, None}},
   FrameTicksStyle->Opacity[1],
   ImagePadding->All,
   Method->{
    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
     "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
     "RangePadding" -> Scaled[0.05]},
   PlotLabel->FormBox[
     StyleBox[
      InterpretationBox[
      "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(+\\)]\\) eigenmode, \
d=\\!\\(\\*FormBox[\\\"0.30000000000000004`\\\", \
TraditionalForm]\\)\[Lambda], \\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(i\\)]\\)/\[Gamma])= \
\\!\\(\\*FormBox[RowBox[{\\\"-\\\", \\\"3.33122754409217`\\\"}], \
TraditionalForm]\\)\"", 
       StringForm[
       "\!\(\*SubscriptBox[\(\[Sigma]\), \(+\)]\) eigenmode, d=``\[Lambda], \
\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \(i\)]\)/\
\[Gamma])= ``", 0.30000000000000004`, -3.33122754409217], Editable -> False], 
      GrayLevel[0], FontSize -> 14, StripOnInput -> False], TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False],
  InterpretTemplate[Legended[
    Graphics[{
      Raster[CompressedData["
1:eJx1lg0w1GkYwBddRWwUcZKxxqVyxypFEpo+RnUiIcJqFGFGH3LnampZnFpc
5+v2tnYMs+RWZ0n56k57rMgm33EW+UrIx7lLjmk73dTs+77j/0z/mZ3Z3292
/vu87/u8z/Mwgs55BKvRaLRVys+H75mS9xzj+BonmvJBrBGSLZHdaMMesf03
q451HuzCHjHLIX1WmNiBPeKolj0Fm1rqsKcyra/K7YIslbDyMVM9kJkmfQZ8
pZdu2HHaC+BTb/zQwK19CbxHDMOGvXIIeIN/1CKufduK/RGdy+IEURNglnln
x2elPWRdSqZ3RezI/3IAe8TFl55cqOH3YY84cN5o5/FL5P8Qm/R+WH8s9lTW
ZjgG6I8OgPijsrVM3Vsmge9X3B21OfUX8PauBgmZE6+Ab9jL5k8LSLwJthzz
rnf1gBdkcd5sHjkPxMvLMvZfCZRjj9jfVXvISkHyBDGr/m16mvAJ2U8la68t
zG1SZJJ1U9huYfHq25/kIP7xyGNpEutR4G3Gfma+9BgHXjRTt1yrCeaPbvyK
67NhndjniHN2bxTkAjY4YejNbxJjj3jcT+yZnHofe8QJcxsD8naVkP1UcqUZ
pzzZ/A72iJmU+0DlnDIhvUNaAuKP1T/jILGoAt7u9QO9+vBq+Ptr27q14iqA
d664GGObfQd4bbcTjDXl7cCbKIxOse2GgTeUHH20YDMGfMq0b11z8AjwT4Mr
jP2M/oRx9i29D5oqxS7c7TLAjr979QRHkvND3JjsKv9xTzf2iEM65fdmVEi9
QsxWe1b9xuUR9lQ2ScyIrknqBXE2D6jm8o5OAH9+67LJ0Fl4H0X7VfJjQqaA
t/TOiLwcOgj34bBgfrPlTZIXTHfppHUb4C/W/vfbuovPsV/K1PcOOkWIFyu+
YpH1IL5ur6Wft4HUQyozQ/t49VYwH4pW9Gf5zMF6+6l8oA3xk96IYD5Uf729
IF/4qXzIIXXoc2vJ7uIGwPmP1+k5W5F8QGzHp+uGL5L3Iu4ZujUtk5D1IOYb
ee8okNZijzjnIP+MZ+ltci8R/6sTWz9aTOJW8sjmgjDTrFLsEZ+uNY3c5XIP
e8TuXG5KAF2EPWLnj/3hPPZUZnrcslPpuw/27WQpK2RqnwTWz+qyLQHRNfBc
zCxUHQQPYH2YCerIaCvCvtD4fQkj/jHguIc16/PkpF8g5onaNYRCUscRDzu7
5Xs5knNB7CP+bsPzTY3YI049tPQ+UNlThzNbtBr2C5+QdO+RKNgvKnu65jR4
sF+YvFj2dKs2zM93Yd+vcfqb5BdrYd621bIZ8CtD3ZsW82R+QCyUFSoaz5G+
jnhfhLrtWC/px4jnJ/wWr1SR+QHxXU7S4cSTWdhTuXtndXtjIJwfXv/a7L8l
Bc4PoSsjGatNYL2S+solZ3+B88O4P40u1CPxRt2+qhmuLgUc69sfP9NG6hXi
qtBDBooUMicgnrJqq2yQkfqMOK/8j21RXmQ+wfzx/LkkPgprrm9QP+AA50lm
UGeu9UPYvzQER9ROx8J5sjV5+KxPHazP7rqaddGDLdj/D4071uc=
       "], {{0, 0}, {11, 11}}, {0, 1}], {{Antialiasing -> False, 
        GrayLevel[-1 + GoldenRatio], 
        Line[{{{0, 11}, {11, 11}}, {{0, 10}, {11, 10}}, {{0, 9}, {11, 9}}, {{
         0, 8}, {11, 8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0, 5}, {11, 
         5}}, {{0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11, 2}}, {{0, 
         1}, {11, 1}}, {{0, 0}, {11, 0}}}]}, {Antialiasing -> False, 
        GrayLevel[-1 + GoldenRatio], 
        Line[{{{0, 0}, {0, 11}}, {{1, 0}, {1, 11}}, {{2, 0}, {2, 11}}, {{3, 
         0}, {3, 11}}, {{4, 0}, {4, 11}}, {{5, 0}, {5, 11}}, {{6, 0}, {6, 
         11}}, {{7, 0}, {7, 11}}, {{8, 0}, {8, 11}}, {{9, 0}, {9, 11}}, {{10, 
         0}, {10, 11}}, {{11, 0}, {11, 11}}}]}}}, {
     Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
      Opacity[0], 
      FrameTicks -> {{{{10.5, 1}, {9.5, 2}, {8.5, 3}, {7.5, 4}, {6.5, 5}, {
          5.5, 6}, {4.5, 7}, {3.5, 8}, {2.5, 9}, {1.5, 10}, {0.5, 11}}, 
         None}, {{{0.5, 1}, {1.5, 2}, {2.5, 3}, {3.5, 4}, {4.5, 5}, {
          5.5, 6}, {6.5, 7}, {7.5, 8}, {8.5, 9}, {9.5, 10}, {10.5, 11}}, 
         None}}, FrameTicksStyle -> Opacity[1], GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]}, PlotLabel -> Style[
        StringForm[
        "\!\(\*SubscriptBox[\(\[Sigma]\), \(+\)]\) eigenmode, d=``\[Lambda], \
\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \(i\)]\)/\
\[Gamma])= ``", 0.30000000000000004`, -3.33122754409217], 
        GrayLevel[0], FontSize -> 14]}], 
    Placed[
     Unevaluated[
      BarLegend[{{
         RGBColor[0.5, 0., 0.5], 
         RGBColor[0.4, 0., 0.4], 
         RGBColor[0.3, 0., 0.3], 
         RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
         RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
         RGBColor[0., 0., 0.], 
         RGBColor[0., 0.20000000000000018`, 0.], 
         RGBColor[0., 0.40000000000000013`, 0.], 
         RGBColor[0., 0.6000000000000001, 0.], 
         RGBColor[0., 0.8, 0.], 
         RGBColor[0., 1., 0.]}, {-1, 1}}, LegendLayout -> "Column"]], {
     After, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.8110902446075945`*^9, 3.8110902630544434`*^9}, {
   3.8110904751312523`*^9, 3.811090481543377*^9}, 3.8110905230313587`*^9, {
   3.811090667316848*^9, 3.8110906733037*^9}, 3.811096611359844*^9, {
   3.811096645613618*^9, 3.8110966708023357`*^9}, {3.811164947428283*^9, 
   3.8111649616757207`*^9}, 3.8111697654017377`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<plot_sigmaplus_longlived_eigmode``_``_axis.png\>\"", ",", "emode", 
       ",", "qaxis"}], "]"}], "]"}], ",", "plt"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emode", "++"}], ";"}]}], "Input",
 CellChangeTimes->{{3.811090273176535*^9, 3.8110903108050165`*^9}, {
  3.8110905372994175`*^9, 3.81109054851712*^9}, {3.81109067804609*^9, 
  3.811090703926237*^9}, {3.8110966255041056`*^9, 3.8110966374846706`*^9}, {
  3.811096686985077*^9, 3.8110966879134607`*^9}, {3.811165806008504*^9, 
  3.81116585916092*^9}, {3.8111659104870586`*^9, 3.8111659618463945`*^9}, {
  3.8111659970093584`*^9, 3.8111660013411245`*^9}, {3.811169784042862*^9, 
  3.8111697934816933`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"emode", " ", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.8111659391190467`*^9, 3.811165942060941*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["linewidths vs lattice spacing", "Section",
 CellChangeTimes->{{3.8060017187482805`*^9, 3.806001720111932*^9}, {
  3.807219143212973*^9, 3.8072191566618133`*^9}, {3.8087775624633417`*^9, 
  3.8087775635834894`*^9}, {3.8090163404212494`*^9, 3.809016340797243*^9}, {
  3.810736753501782*^9, 3.81073675496758*^9}}],

Cell["\<\
Set atomnums, run one of the grid geometry cells below, then run the \
\[OpenCurlyDoubleQuote]run\[CloseCurlyDoubleQuote] cell. \
\>", "Text",
 CellChangeTimes->{{3.8090169793060865`*^9, 3.80901704709494*^9}, {
  3.809019674019689*^9, 3.809019689982016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"atomnumx", " ", "=", " ", "11"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "only", " ", "x", " ", "value", " ", "will", " ", "be", " ", "used", " ", 
    "to", " ", "build", " ", "square", " ", "grid"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"atomnumy", " ", "=", " ", 
   RowBox[{"Floor", "[", 
    RowBox[{
     FractionBox["2", 
      SqrtBox["3"]], "atomnumx"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"used", " ", "for", " ", "hex", " ", "lattices"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"atomnumx", ",", "atomnumy"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.809018686810726*^9, 3.8090186888103704`*^9}, {
   3.809018759945447*^9, 3.809018821077754*^9}, {3.8090188783247404`*^9, 
   3.809018914808607*^9}, {3.809018946610208*^9, 3.8090189836036034`*^9}, {
   3.8090196598430157`*^9, 3.809019665008836*^9}, {3.8090197081858063`*^9, 
   3.809019710750782*^9}, {3.8090230477493725`*^9, 3.80902304851731*^9}, 
   3.8090231091711864`*^9, {3.809023314803544*^9, 3.809023314881336*^9}, {
   3.809023506975886*^9, 3.809023513547315*^9}, {3.809023575210723*^9, 
   3.8090235839184003`*^9}, {3.8090236582547035`*^9, 
   3.8090236862319236`*^9}, {3.809023727606332*^9, 3.8090237457608447`*^9}, {
   3.80902381673116*^9, 3.8090238167839675`*^9}, {3.8090244286419945`*^9, 
   3.8090244446063175`*^9}, {3.8090251819225273`*^9, 3.809025182823117*^9}, {
   3.80902990374408*^9, 3.809029918557509*^9}, 3.809032843797409*^9, {
   3.809542114064296*^9, 3.809542217285282*^9}, {3.8095422602493224`*^9, 
   3.809542269455696*^9}, {3.8110707733568783`*^9, 3.8110707734566083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8090237477674437`*^9, 3.809023817820197*^9, 3.80902410662554*^9, {
   3.809024429508671*^9, 3.809024445203719*^9}, 3.809025183052512*^9, 
   3.8090273445502877`*^9, {3.809029905040451*^9, 3.8090299196206665`*^9}, 
   3.8090312697983327`*^9, 3.8090328453672094`*^9, 3.8095300962765064`*^9, 
   3.809540898684434*^9, 3.809540993503817*^9, 3.8095411356935263`*^9, {
   3.809542194457293*^9, 3.8095422179956355`*^9}, {3.8095422631046815`*^9, 
   3.8095422702306185`*^9}, 3.809605200302825*^9, 3.8110707784495397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["square lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090167692966056`*^9, 3.8090167910903134`*^9}, {
  3.809016870300989*^9, 3.809016891726209*^9}, {3.809023198381733*^9, 
  3.809023200615773*^9}, {3.8094683197593937`*^9, 3.8094683204016514`*^9}, {
  3.8095300977777147`*^9, 3.809530098439992*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridname", "=", " ", "\"\<square\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnumy", "=", "atomnumx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   RowBox[{"atomnumx", "*", "atomnumy"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afmode", ",", "\"\<Antiferromagnetic\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"mode", ",", " ", "name", ",", " ", 
      RowBox[{
      "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
       "cartesian", " ", "basis"}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"idx", "[", 
    RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}], "n"}], "+", "j"}], "//", 
    "Simplify"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "1", "D", " ", "atom", " ", "idx", " ", "from", " ", "2", "D", 
    " ", "coordinate", " ", "indices"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"n", "\[Rule]", 
     SqrtBox["atomnum"]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8090171183870115`*^9, 3.809017118509525*^9}, {
  3.809018668352194*^9, 3.8090187435481806`*^9}, {3.809019108668911*^9, 
  3.8090191237504044`*^9}, {3.8090194326770754`*^9, 3.8090194334092865`*^9}, {
  3.8110708323654327`*^9, 3.81107090451067*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["hexagonal lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090168466120195`*^9, 3.8090168526145716`*^9}, {
  3.8090168863400745`*^9, 3.8090168935046854`*^9}, {3.8090238204661245`*^9, 
  3.8090238210405893`*^9}, {3.809468324648697*^9, 3.8094683254928503`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnumy", " ", "=", " ", "atomnumx"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridname", " ", "=", " ", "\"\<hex\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   RowBox[{"atomnumx", " ", "atomnumy"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"1", "&"}], ",", 
       RowBox[{"atomnumx", " ", "atomnumy"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afrowsmode", " ", "=", " ", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], 
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{"1", "&"}], ",", "atomnumx"}], "]"}]}], "&"}], ",", 
       "atomnumy"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afcolsmode", " ", "=", " ", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "#"], 
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{"1", "&"}], ",", "atomnumy"}], "]"}]}], "&"}], ",", 
        "atomnumx"}], " ", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afrowsmode", ",", "\"\<A.F. rows\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
            "2"}], "]"}], "-", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
            "2"}], "]"}]}], ")"}]}]}], ",", 
      RowBox[{
       FractionBox[
        SqrtBox["3"], "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
        ")"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809017140657352*^9, 3.809017154350025*^9}, {
   3.8090188539498825`*^9, 3.809018860509693*^9}, {3.809019129436096*^9, 
   3.8090191345158234`*^9}, {3.8090230603207874`*^9, 3.8090230777661314`*^9}, 
   3.8090231362179184`*^9, {3.8090236883512573`*^9, 3.8090236901055713`*^9}, {
   3.809024859356752*^9, 3.8090249368256736`*^9}, 3.8090251639675293`*^9, {
   3.8090274533055954`*^9, 3.809027453373412*^9}, {3.809090300086687*^9, 
   3.8090903159707894`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["run", "Subsubsection",
 CellChangeTimes->{{3.8090169056528196`*^9, 3.8090169355856133`*^9}}],

Cell["\<\
find the lattice period dependent transition linewidth for modes defined \
above.\
\>", "Text",
 CellChangeTimes->{{3.809016939710581*^9, 3.809016974719592*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "}"}], "&"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"polarizationmodes", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "polarizationmodes", "]"}]}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lastmode", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runtime", " ", "=", " ", 
   RowBox[{
    RowBox[{"Timing", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"polmode", "=", "1"}], ",", 
        RowBox[{"polmode", "<", 
         RowBox[{
          RowBox[{"Length", "[", "polarizationmodes", "]"}], "+", "1"}]}], 
        ",", 
        RowBox[{"polmode", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"e", "[", "\[Nu]_", "]"}], "=", 
          RowBox[{"polarizationmodes", "[", 
           RowBox[{"[", 
            RowBox[{"polmode", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"modelist", " ", "=", " ", 
          RowBox[{"polarizationmodes", "[", 
           RowBox[{"[", 
            RowBox[{"polmode", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"d", "=", "0.01"}], ",", 
           RowBox[{"d", "<", "1.26"}], ",", 
           RowBox[{"d", "=", 
            RowBox[{"d", "+", "0.05"}]}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "loop", " ", "over", " ", "fractional", " ", "lattice", " ", 
             "period"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"build", " ", "the", " ", "Hamiltonian"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Hfull", " ", "=", " ", 
             RowBox[{"Array", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["H", "##"], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{"atomnum", "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "<", 
                  RowBox[{"atomnum", "+", "1"}]}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"u", "=", 
                   RowBox[{"d", " ", "\[Lambda]", " ", 
                    SubscriptBox["r", 
                    RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"\[CapitalOmega]ij", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"\[Gamma]ij", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Hfull", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
                   RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]ij", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}], ")"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "find", " ", "the", " ", "eigenmode", " ", "overlap", " ", 
              "with", " ", "modes", " ", "of", " ", "interest"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
             RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"mode", "=", "1"}], ",", 
              RowBox[{"mode", "<", 
               RowBox[{
                RowBox[{"Length", "[", "modelist", "]"}], "+", "1"}]}], ",", 
              RowBox[{"mode", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"overlap", " ", "=", " ", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", " ", "=", " ", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"mode", ",", "1"}], "]"}], "]"}], ".", 
                    RowBox[{"evecs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], 
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"maxIdx", "=", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"v", "=", " ", 
                RowBox[{"Im", "[", 
                 RowBox[{"evals", "[", 
                  RowBox[{"[", "maxIdx", "]"}], "]"}], "]"}]}], ";", 
               RowBox[{"(*", 
                RowBox[{"mode", " ", "linewidth"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"soln", "[", 
                  RowBox[{"[", 
                   RowBox[{"mode", "+", "lastmode"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"Log10", "[", 
                    RowBox[{"v", "/", "\[Gamma]"}], "]"}]}], "}"}]}], "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          RowBox[{"(*", 
           RowBox[{"end", " ", "mode", " ", "loop"}], "*)"}], 
          "\[IndentingNewLine]", "]"}], ";", 
         RowBox[{"(*", 
          RowBox[{"end", " ", "d", " ", "loop"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"lastmode", "=", 
          RowBox[{"mode", "-", "1"}]}], ";"}]}], 
       RowBox[{"(*", 
        RowBox[{
        "since", " ", "mode", " ", "will", " ", "increment", " ", "just", " ",
          "before", " ", "the", " ", "loop", " ", "exits"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";"}], 
     RowBox[{"(*", 
      RowBox[{"end", " ", "pol", " ", "loop"}], "*)"}], "\[IndentingNewLine]",
      "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<Simulation took `` minutes\>\"", ",", 
   RowBox[{
    RowBox[{"runtime", "/", "60"}], "//", "N"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8088321953972454`*^9, 3.80883252033072*^9}, {
   3.808832551461509*^9, 3.8088327182497296`*^9}, {3.8088328170416355`*^9, 
   3.8088328489214215`*^9}, 3.808832881153268*^9, {3.808832912325945*^9, 
   3.808832937556507*^9}, 3.8088330655145044`*^9, {3.8088332017258544`*^9, 
   3.8088332024449263`*^9}, 3.808833266958461*^9, 3.808833298854204*^9, {
   3.8088333464898767`*^9, 3.8088335531086016`*^9}, {3.8088415808641357`*^9, 
   3.808841585619443*^9}, {3.8088644621911683`*^9, 3.8088645395140877`*^9}, {
   3.808864605851305*^9, 3.808864606220704*^9}, {3.809100435742504*^9, 
   3.8091004362461615`*^9}, {3.809536097821503*^9, 3.8095361061602135`*^9}, {
   3.8095362995998125`*^9, 3.8095363025239925`*^9}, {3.8095369682059484`*^9, 
   3.8095369750588193`*^9}, 3.8095411199735737`*^9, {3.809546448642682*^9, 
   3.8095464701696715`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Simulation took \
\\!\\(\\*RowBox[{\\\"0.17291666666666666`\\\"}]\\) minutes\"\>",
  StringForm["Simulation took `` minutes", 0.17291666666666666`],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8090274743134413`*^9, 3.809028325932001*^9, 3.8090301705121117`*^9, 
   3.8090316085760727`*^9, 3.809032865222105*^9, 3.8090903551240854`*^9, 
   3.8095301185594454`*^9, 3.8095369804563236`*^9, 3.8095409208641243`*^9, 
   3.8095410100186434`*^9, {3.809541125603516*^9, 3.809541153103958*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["soln analysis", "Subsubsection",
 CellChangeTimes->{{3.8090194737115297`*^9, 3.8090194849383807`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"saveplt", " ", "=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savesln", " ", "=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"linewidthplot", "[", 
  RowBox[{
  "soln", ",", "polarizationmodes", ",", "gridname", ",", "atomnumx", ",", 
   "atomnumy", ",", "\"\<\>\"", ",", "saveplt", ",", "savesln"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.809028634816141*^9, 3.8090286356109934`*^9}, {
  3.809028868797657*^9, 3.8090288734162717`*^9}, {3.809029951123826*^9, 
  3.809029989347587*^9}, {3.8095301158736453`*^9, 3.809530123227334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYt95C9hxclrvtrvlGt9Hbhjnb2W4LWW
gyVf7LVi+g991dhjH+/0vHKC40f7GrD6I/Z8nE9KGcqf2z+qAgmcshfMlnBk
Z7tmv6TAluv64gv2l02rLV6kdu+/vhgkcNmepXzagbbUK/u5IAL2qpxT31ms
frTfFixwy15lr+Q8PdtX+8HaC+7aH54cfK22/sP+oB0gBz2wDwt4L1zf/Hn/
m0CQwEN7A285+TeK3/a3vQYJPLb/X9RXmCf0Y78CyPlyT+3XVQdPYBf6uX8X
2D/P7E8eWnBqj/2P/SFg817YL2eZFRV98cv+d2DzXtrz/3X4+fnt2/0dYPNe
2y8O5vzJavhgvxLYvLf27yvW+P/YsX//HrB57+wvTOrafiTokL02OHw+2Asp
Fr9rFLpk/0MDJPDBfsKlEmvh0sv2R7+CBD7aR01LeJG9+az9pEMggU/2xTyT
lVzu77KPB2mP+Ww/nynKxuj53P0A3a3RDw==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9pdiiJXs4uA/slGt9Hbhjnf2Nqifq
E9P5D2jF9B/6qrHHfkXwwWVNvQIHasDqj9jf6NX2+B/De+BRFUjglL2k1iGf
3CjuA0sKbLmuL75g77C10DP1NeuB64tBApftm+JTJ79o5jzABRGwD+Nb/lU2
juWALVjglr2T3Bf1+N5/+8HaC+7a/6ryv73f7uv+oB0gBz2wv/TdbfPz+Jf7
3wSCBB7aT6s3UpGXvrK/7TVI4LH9Eb6VBU3rNtkrgJwv99Q+ikv7vcvzq/a7
wP55Zi+v/31z7o979iFg817Yv99+ZL3Qv/v278DmvbTn3fVq9uOUW/YdYPNe
2y/LeBNcGXrRXgls3lv75T+nWh/4vc9+D9i8d/YHr+j+M1g8eb82OHw+2Ker
CbwtCT20/4cGSOCDPaP/uXuKthf2H/0KEvhof9jV9LTB+mv7Jx0CCXyy3yNg
UhI15c7+eJD2mM/2ln+UnT0+PtgPADeW01w=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv97fVnD3ef+2S/U671deCOdfbfPzIf
jqv6bK8V03/oq8Yee6MfYuafP320rwGrP2L/RO/lmqD1b+0fVYEETtk3LDwa
s8L9uf2SAluu64sv2BsXLzn5dcZD++uLQQKX7f3aHFn1Wm7ac0EE7NWb17+5
b3jR3hYscMve+8vve3ZXD9uDtRfctT85faEb05XV9kE7QA56YJ8kd2+6bPSi
/W8CQQIP7efWLQxuZNu3v+01SOCx/VvZ7GMG2Sf2K4CcL/fUPvSv/tGFuRf2
7wL755k978mb+XXSV/aHgM17YV8RF/4i4fW1/e/A5r20DxZrn/lg5fX9HWDz
Xtsnzrl9eNfOy/uVwOa9tf+V//gbi9yR/XvA5r2z944Icp+cNcNeGxw+H+wv
fVrw4330AfsfGiCBD/aukgpqQolH7I9+BQl8tC/d/2bXG+H99pMOgQQ+2b++
8uFQtPNq+3iQ9pjP9v4zuniXfirfDwAardmH
          "]]}}}, {}, {}, {{}, {}}}, {{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
iZ2OBFjc1bAL1+KhfwHlfOfU
          "]]}}}, {}, {}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Collective linewidths for 5x5 square grid\"", FontSize -> 14, 
        StripOnInput -> False], TraditionalForm], ImageSize -> Medium, 
     Frame -> {True, True, False, False}, FrameLabel -> {
       FormBox["\"Lattice period d [\[Lambda]]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(n\\)]\\)/\[Gamma])\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.2100000000000006`}, {-5, 3}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.2100000000000006`}, {-5, 3}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Ferromagnetic\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Antiferromagnetic\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.5, 0, 0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N\[Rule]\[Infinity], In-Plane\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8095409473462753`*^9, 3.809540965067875*^9}, 
   3.809541012193862*^9, 3.809541166767414*^9}]
}, Open  ]],

Cell["compare square and hex grids", "Text",
 CellChangeTimes->{{3.8090276994174333`*^9, 3.8090277274066734`*^9}, {
  3.809027768558586*^9, 3.809027778439172*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"hexsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_hex5x6.txt\>\"", "]"}], 
      "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hexsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_hex5x5.txt\>\"", "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sqsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_square5x5.txt\>\"", "]"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8090279428347816`*^9, 3.809028088801463*^9}, {
   3.8090281461860676`*^9, 3.8090281468632965`*^9}, 3.8090282090850344`*^9, {
   3.809028245391554*^9, 3.8090282515640545`*^9}, {3.80903265241492*^9, 
   3.8090327021270423`*^9}, {3.8090327992749586`*^9, 
   3.8090328163762355`*^9}, {3.8090904155601416`*^9, 3.809090415623972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sln", " ", "=", " ", 
   RowBox[{"Catenate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sqsoln", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "hexsoln"}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. Ferro.\>\"", ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. A.F.\>\"", ",", "Purple"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. In-plane\>\"", ",", "Orange"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Hex. Ferro.\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", "Dashed"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Hex. A.F. rows\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Purple", ",", "Dashed"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", " ", "\"\<In-plane\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Orange", ",", "Dashed"}], "]"}]}], "}"}]}], "}"}]}], 
     "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"linewidthplot", "[", 
   RowBox[{
   "sln", ",", "modes", ",", "\"\<\>\"", ",", "atomnumx", ",", "atomnumy", 
    ",", "\"\<Collective linewidths for 30-atom grids\>\"", ",", "False", ",",
     "False"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8090291825424013`*^9, 3.809029251828573*^9}, {
   3.809029289352435*^9, 3.8090295265953355`*^9}, {3.809029679199459*^9, 
   3.809029681999523*^9}, {3.809029712415219*^9, 3.8090297411436815`*^9}, {
   3.8090297905716853`*^9, 3.809029816927494*^9}, {3.809032708095091*^9, 
   3.8090327131437397`*^9}, {3.8090328845574236`*^9, 3.8090328847628765`*^9}, 
   3.809032921837782*^9, 3.809090409557664*^9, {3.809090451062523*^9, 
   3.8090904569985943`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9/eNDjRPWfLXfIdf6OnDHOvvbP+uy
9pR8sdeM6T/0VWOPvVT3ss2THT/aQ9QfsS8T2xvMWP7c/mEVSOCUfeLBvw3s
bNfslxTYcl1ffMHeXvLx4Tep3fuvLwYJXLb/EyIq1ZF6ZT8XRMB+bcu7SRar
H+23BQvcsq+pvr5A3/bV/kKwwF37Naf2aTfVf9gfBHbQA/uDlspe1c2f978J
BAk8tD8SP9n0leK3/SDXyrU+tr/v3zs9T+jHfnmwwFP7vMWMe1iFfu6H+OeZ
vSzzpuu77X9AzXthL/VLfUfExS9Q817a+zUk/vz89i3UvNf2kyZ3RrMaPoCa
99Z+WW1x/dcd+6HmvbPvf7hx/tGgQ9Dw+WB/+IbThGahS/bfNEACH+ynsQrX
i5Retj/8FSTw0X7mx22XsjeftQepjun/ZH+LRWKa/f1d9mDtMZ/tY8zu65o+
n7sfAAxK13g=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9lSubtu7j4D6wQ671deCOdfb8ro12
E9P5D2jG9B/6qrHHvqzz1drGXoEDEPVH7Mu92F//j+E98LAKJHDKvubThoDs
KO4DSwpsua4vvmA/jWXFytTXrAeuLwYJXLbP9riT/LKZ8wAXRMB+XcpxN4U4
lgO2YIFb9mc0pkVH9f7bXwgWuGtfMkNf/4Dd1/1BYAc9sP/qfST6efzL/W8C
QQIP7Tn/bZ8kK31lP8i1cq2P7ZULX8U1rdtkLw8WeGr/InvaabfnV+0h/nlm
//qvm3Xej3v2EPNe2HP+LhMS/HffHmLeS3u+b2ptT1Ju2UPMe23/oE1ifWXo
Rah5b+3/SN5bc/D3Pqh57+zj9gVIGyyevB8SPh/sN82Lqi0NPbT/mwZI4IP9
3XP7PinYXth/+CtI4KP94c9BGw3XX9sPUh3T/8l+f4J5TvSUO/vB2mM+28fN
+ZHl/vHBfgBI4tYW
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9BteXTpuTX+13yLW+Dtyxzn57Uv1N
259f7DVj+g991dhjn7rUU/NF2Sd7iPoj9pNeWe/XcHxn/7AKJHDK3pTLM+1r
33P7JQW2XNcXX7A/+m9T9acND+2vLwYJXLYvOb/L7XTjTXsuiID9ndn3DS4q
XLS3BQvcstfv7jx7fOth+0KwwF37hhM5t64lrLYPAjvogf3vgM2Bz2cv2v8m
ECTw0P743p+8wrz79oNcK9f62L5BY4Yha/aJ/fJggaf2/OoGc6/lXtgP8c8z
+2+b3m4xVbqyH2LeC3sGxuyr6zivQ817ab/CsnIi54/rUPNe25cdUZT2EL8C
Ne+tPQ9rDrvyt8NQ897Zsz//wbsjeDo0fD7YH3Z99/JV30H7bxoggQ/2yxJ/
dMwQOmp/+CtI4KP9PbvVZ6Zc228PUh3T/8n+xWZfa7fDq+3B2mM+2zOs2lHY
/bNxPwCIztWR
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9/MKHDh7TvtrvkGt9Hbhjnf3349VX
T7V8sdeM6T/0VWOP/atNM27U3PloD1F/xD5R3JW/hueV/cMqkMAp++MLhJ3Y
Y+/aLymw5bq++II9t9aquqWf99pfXwwSuGyvsf1t9ZX44/u5IAL2Lr/evj5g
eWe/LVjglr3Nt80RXSlP9xeCBe7aCxlNSJ/+/vX+ILCDHtifZFIreP3uw/43
gSCBh/ZH4iebvlr4eT/ItXKtj+3nOTr/ZxH/tl8eLPDUPqzp6MMz+j/2Q/zz
zD67acVvhiU/oea9sGc+v7fdm+8X1LyX9jYirL9c5H5CzXttbzn90apN+TDz
3tqrH2pbHn7qI9S8d/YT/GJ/6vg/3w8Jnw/2N88naU5af2X/Nw2QwAd7vRnr
xPquTbc//BUk8NGeRb5ZdHnURXuQ6pj+T/a5sjJvfHlu2YO1x3y2b63sN/a9
cdseAMwC10g=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYt9+KZkZYH1n/fvkGt9Hbhjnb2r0N6e
pJ3f9mvG9B/6qrHHXmLqFc4Mpb/7IeqP2AsytgcsTfu6/2EVSOCUfd2xVmZF
SbYDSwpsua4vvmA/54jChqIX3/dfXwwSuGyf+/z3yo+XPuznggjYr73DfYbr
6LP9tmCBW/YGXzouFnPf2F8IFrhrf5+VoVZQedP+ILCDHtjrJN1I9Pl12P5N
IEjgob1rSsRR6ZmX7EGulWt9bM/tumt+8ISr9vJggaf2njqa5fMfX7KH+OeZ
/eZzP/btCDluDzHvhX3yybSIa+4Loea9tNc+vEPaJXvnfoh5r+2DJ5Va7PI6
vB9i3lt71uw5vu4Mm6Hh887+vEutedPPNfaQ8Plgf65bOP6txiH7bxoggQ/2
m1UcfHWjD9of/goS+Gi/ZEp2quzL1fYg1TH9n+xDftxgem64cT9Ye8xn++vC
seJ1BSf2AwCD987+
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9wW51fu6tX+13yLW+Dtyxzl7veVBM
6Lcv9pox/Ye+auyx/7XDLKTn8yd7iPoj9mLtxvtnMX+wf1gFEjhlP3nN4Yuh
u17aLymw5bq++IL9yt8MS8w+Pra/vhgkcNnevKfpwce3d+25IAL22ZdyO2MK
rtrbggVu2bvV/RWQ1jljXwgWuGv/pdPGc1faPvsgsIMe2NtZuDQ+vj7H/k0g
SOChvX5s+crjOav3g1wr1/rY/loPT5F44oH98mCBp/ab324xVZI4uR/in2f2
NuncHGvbL+yHmPfC3vuFXudmpSv7Iea9tL+i9cvZ2P861LzX9jJvdzwsv3wT
at5b+7WLV3EuencLat47+/XnDBWq997YDwmfD/YL8hYcsP55Yf83DZDAB3u+
pYF3fB5s3n/4K0jgo71uTFii8YGd9iDVMf2f7A2nh+SaHzxtD9Ye89n+w59F
LH9bL9gDAMGK1Hc=
          "]]}}}, {}, {}, {{}, {}}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Collective linewidths for 30-atom grids\"", FontSize -> 14, 
        StripOnInput -> False], TraditionalForm], ImageSize -> Medium, 
     Frame -> {True, True, False, False}, FrameLabel -> {
       FormBox["\"Lattice period d [\[Lambda]]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(n\\)]\\)/\[Gamma])\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.21}, {-5, 3}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.21}, {-5, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Sq. Ferro.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Sq. A.F.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Sq. In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Hex. Ferro.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Hex. A.F. rows\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.80903290188512*^9, 3.8090329239521236`*^9}, 
   3.8090904209128623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<linewidth_v_period_exactly30atoms_sq_hex.png\>\"", ",", "plt"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.809029852486635*^9, 3.8090298783693295`*^9}, {
  3.8090327726437063`*^9, 3.8090327842656107`*^9}, {3.8090329307718973`*^9, 
  3.8090329339145007`*^9}, {3.8090904638911943`*^9, 3.8090904669679937`*^9}}],

Cell[BoxData["\<\"linewidth_v_period_exactly30atoms_sq_hex.png\"\>"], "Output",
 CellChangeTimes->{3.80902988513923*^9, 3.8090327790156612`*^9, 
  3.8090329347761917`*^9, 3.809090474114911*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afrowsmode", ",", "\"\<A.F. rows\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
      "}"}]}], "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"polarizationmodes", "=", " ", 
   RowBox[{"{", 
    RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8090277860448437`*^9, 3.809027788215191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"evecs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "25"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "evecs", "]"}], "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}}}, Typeset`size$$ = {
    515., {3., 11.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$13122$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13122$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Re[
         Part[$CellContext`evecs, $CellContext`i$$]], 
        PlotStyle -> {{0, 25}, {-0.5, 0.5}}], 
      "Specifications" :> {{$CellContext`i$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{576., {65., 72.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.809032890399807*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,123,19,30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.80946966129014*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,123,20,
   30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8094696614386873`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,123,21,
   30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8094696615473967`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,83,1,30707806650057123586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8107338339612336`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,83,2,30707806650057123586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8107338340497665`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,83,3,
   30707806650057123586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810733834153328*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,83,4,
   30707806650057123586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8107338342492123`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,83,5,
   30707806650057123586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8107338343448553`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListPlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,83,6,30707806650057123586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8107338343817563`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,64,1,30708948824947189604,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810905459850109*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,64,2,30708948824947189604,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810905459924735*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,64,3,
   30708948824947189604,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810905460146706*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,64,4,
   30708948824947189604,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.810905460235468*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,64,5,
   30708948824947189604,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8109054603252277`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListPlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,64,6,30708948824947189604,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8109054603611584`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,39,1,30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8110707628474293`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,39,2,30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8110707629297905`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,39,3,
   30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811070763165231*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,39,4,
   30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8110707633838043`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,39,5,
   30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8110707637090635`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListPlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,39,6,30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811070763769256*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,262,58,30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811089998665763*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,262,59,
   30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8110899988279395`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,262,60,
   30710027514607925035,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811089998956013*^9}]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["time evolution and defects", "Section",
 CellChangeTimes->{{3.8094676677317724`*^9, 3.8094676720642166`*^9}, {
  3.8106623315199633`*^9, 3.8106623363440113`*^9}}],

Cell[CellGroupData[{

Cell["\<\
TODO for conversion to new basis with long-lived state:
- rewrite mode definitions -- check
- edit Hamiltonian definition loops\
\>", "Subsubsection",
 CellChangeTimes->{{3.8114600864651623`*^9, 3.811460135939623*^9}, {
  3.8114616121084642`*^9, 3.811461644230655*^9}}],

Cell["\<\
Run cells in order: lattice setup, either f- or afmode, build hamiltonian, \
add noise (optional), run. \
\>", "Text",
 CellChangeTimes->{{3.810599250665079*^9, 3.8105993090537615`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnum", " ", "=", 
   SuperscriptBox["5", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "easier", " ", "to", " ", "solve", " ", "system", " ", "if", " ", 
    "everything", " ", "is", " ", "a", " ", "few", " ", "orders", " ", "of", 
    " ", "magnitude", " ", "from", " ", "1"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809468691632693*^9, 3.8094686964952307`*^9}, 
   3.809471193092425*^9, {3.8095346504945126`*^9, 3.8095346505533533`*^9}, {
   3.809535226269971*^9, 3.8095352433869815`*^9}, 3.809535319848155*^9, 
   3.8095399729422846`*^9, {3.8095452597710123`*^9, 3.809545262825846*^9}, {
   3.809559875541829*^9, 3.809559918667977*^9}, {3.8095990098106685`*^9, 
   3.809599010592574*^9}, {3.8096052143423004`*^9, 3.8096052144869137`*^9}, {
   3.8096056859687347`*^9, 3.8096056860634813`*^9}, {3.8096409192750893`*^9, 
   3.809640919753411*^9}, {3.809684767494185*^9, 3.8096847675969095`*^9}, {
   3.8096857967111936`*^9, 3.8096857973983636`*^9}, {3.8102290544678364`*^9, 
   3.8102290645222178`*^9}, {3.8105933038958282`*^9, 
   3.8105933055579405`*^9}, {3.8105933429059696`*^9, 3.8105933574543357`*^9}, 
   3.8105978097451534`*^9, {3.8106007228750067`*^9, 3.8106007268825026`*^9}, {
   3.810601066021388*^9, 3.8106010695577073`*^9}, {3.810734545244032*^9, 
   3.8107345467728453`*^9}, {3.81076701882111*^9, 3.8107670188689804`*^9}, {
   3.8109084067546873`*^9, 3.810908406907202*^9}, {3.8114600180155773`*^9, 
   3.811460018642561*^9}, 3.8114604843716183`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["square lattice setup", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.8090167692966056`*^9, 3.8090167910903134`*^9}, {
   3.809016870300989*^9, 3.809016891726209*^9}, {3.809023198381733*^9, 
   3.809023200615773*^9}, {3.809468314558218*^9, 3.8094683163169413`*^9}, {
   3.809728415834035*^9, 3.8097284219337177`*^9}, 3.8102290586432962`*^9, {
   3.810229484207923*^9, 3.810229486146435*^9}, {3.81059781160897*^9, 
   3.810597813449194*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gridname", "=", " ", "\"\<square\>\""}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"W", "-", 
    RowBox[{"states", ":", " ", 
     RowBox[{
     "single", " ", "excitation", " ", "shared", " ", "across", " ", "all", 
      " ", "of", " ", "long", " ", "lived", " ", "single", " ", "atom", " ", 
      RowBox[{"states", ".", " ", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "r"], ",", 
         SubscriptBox["c", "e"]}], "}"}]}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], "&"}], ",", "atomnum"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afmode", " ", "=", " ", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "#"], ",", "0"}], "}"}], "&"}], ",", 
        "atomnum"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"modes", " ", "for", " ", "different", " ", "quantization", " ", 
      RowBox[{"axes", ".", " ", 
       SubscriptBox["e", "\[Nu]"]}], " ", "gives", " ", "the", " ", "e"}], 
     "\[Rule]", 
     RowBox[{
     "g", " ", "transition", " ", "polarization", " ", "expressed", " ", "in",
       " ", "cartesian", " ", "depending", " ", "on", " ", "the", " ", 
      "quantization", " ", "axis", " ", "given", " ", "in", " ", "the", " ", 
      "mode", " ", "name"}]}], ";", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "xmodes"}], " ", "have", " ", 
     "quantization", " ", "axis", " ", "along", " ", "x", " ", "and", " ", 
     SubscriptBox["esphrx", "3"], " ", "is", " ", "the", " ", 
     SubscriptBox["\[Sigma]", "+"], " ", "vector", " ", "in", " ", "that", 
     " ", "basis"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["esphrx", "3"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afmode", ",", "\"\<Antiferromagnetic\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zmodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["esphrz", "3"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"mode", ",", " ", "name", ",", " ", 
      RowBox[{
      "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
       "cartesian", " ", "basis"}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "zmodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"idx", "[", 
    RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}], "n"}], "+", "j"}], "//", 
    "Simplify"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "1", "D", " ", "atom", " ", "idx", " ", "from", " ", "2", "D", 
    " ", "coordinate", " ", "indices"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"n", "\[Rule]", 
     SqrtBox["atomnum"]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["r", "i_"], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "n"}], "]"}], ",", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}], "}"}], "/.", 
    RowBox[{"n", "\[Rule]", " ", 
     SqrtBox["atomnum"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"centerIdx", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{
        SqrtBox["atomnum"], "/", "2"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        SqrtBox["atomnum"], "+", "1"}], ")"}]}], "+", "1"}]}], " ", ";"}], 
  " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"idx", " ", "of", " ", "the", " ", "central", " ", "atom"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perimeterIdcs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       SqrtBox["atomnum"]}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"atomnum", "-", 
        SqrtBox["atomnum"], "+", "1"}], ",", "atomnum"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"n", " ", 
         SqrtBox["atomnum"]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox["atomnum"], "-", "1"}]}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "n"}], ")"}], " ", 
        SqrtBox["atomnum"]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox["atomnum"], "-", "1"}]}], "]"}]}], "}"}]}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"centerRowIdcs", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"centerIdx", "+", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            SqrtBox["atomnum"]}], "+", "1"}], "2"], ",", 
         FractionBox[
          RowBox[{
           SqrtBox["atomnum"], "-", "1"}], "2"]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8090171183870115`*^9, 3.809017118509525*^9}, {
   3.809018668352194*^9, 3.8090187435481806`*^9}, {3.809019108668911*^9, 
   3.8090191237504044`*^9}, {3.8090194326770754`*^9, 
   3.8090194334092865`*^9}, {3.8094677627939987`*^9, 3.809467768263092*^9}, {
   3.8094683836403894`*^9, 3.809468384246768*^9}, {3.8094686733752575`*^9, 
   3.8094686739143047`*^9}, {3.8096440700083637`*^9, 
   3.8096440713278327`*^9}, {3.809644560302745*^9, 3.8096446249268913`*^9}, {
   3.8096446970449677`*^9, 3.809644704890011*^9}, {3.809644734985485*^9, 
   3.8096447447966223`*^9}, 3.810230797772606*^9, {3.8105973043732204`*^9, 
   3.8105973684720435`*^9}, {3.8114605373687057`*^9, 
   3.8114605967154818`*^9}, {3.8114608392928*^9, 3.811460990642578*^9}, {
   3.8114610725566792`*^9, 3.81146128547141*^9}, {3.81146136775261*^9, 
   3.8114614345080614`*^9}, 3.8114617361797905`*^9, {3.8114619698433475`*^9, 
   3.8114619930997553`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["build noise-free Hamiltonian, find target eigenmode", \
"Subsection"]], "Subsection",
 CellChangeTimes->{{3.809467855845191*^9, 3.809467856083066*^9}, {
  3.810229458362745*^9, 3.810229462432009*^9}, {3.810593395007247*^9, 
  3.8105933965030627`*^9}, {3.8105988764007454`*^9, 3.8105988963144503`*^9}, {
  3.810599742327798*^9, 3.8105997565968227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Nu]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fmode", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"2", "i"}], "-", "\[Nu]", "+", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.811461862015006*^9, 3.811461958232798*^9}, {
  3.811462000201294*^9, 3.8114620003091345`*^9}}],

Cell[BoxData[
 FractionBox["1", "5"]], "Output",
 CellChangeTimes->{{3.8114618629656377`*^9, 3.811461869911881*^9}, {
  3.811461929622691*^9, 3.811461959812671*^9}, {3.8114619978149605`*^9, 
  3.8114620005803647`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", " ", "=", "0.75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"modename", " ", "=", "  ", 
  "\"\<ferromagnetic\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wstatemode", " ", "=", " ", "fmode"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"idealTargetMode", " ", "=", " ", "fmode"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"e", "[", "i_", "]"}], ":=", 
    SubscriptBox["esphrx", "3"]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Build", " ", "the", " ", "noise"}], "-", 
    RowBox[{
    "free", " ", "Hamiltonian", " ", "then", " ", "find", " ", "the", " ", 
     "well"}], "-", 
    RowBox[{"defined", " ", "target", " ", "eigenmode"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hfull", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["H", "##"], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "atomnum"}], ",", 
       RowBox[{"2", "atomnum"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<", 
      RowBox[{"atomnum", "+", "1"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{"atomnum", "+", "1"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"\[Nu]", "=", "1"}], ",", 
           RowBox[{"\[Nu]", "<", "3"}], ",", 
           RowBox[{"\[Nu]", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"\[Mu]", "=", "1"}], ",", 
              RowBox[{"\[Mu]", "<", "3"}], ",", 
              RowBox[{"\[Mu]", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"u", "=", 
                RowBox[{"d", " ", "\[Lambda]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["r", "j"], "-", 
                   SubscriptBox["r", "i"]}], ")"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"\[CapitalOmega]ij", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"\[Gamma]ij", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], 
                   "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Hfull", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]", "+", "\[Gamma]"}], ")"}], " ", 
                  RowBox[{"KroneckerDelta", "[", 
                   RowBox[{"i", ",", "j"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"KroneckerDelta", "[", 
                    RowBox[{"i", ",", "j"}], "]"}]}], ")"}], 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], ")"}], 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}]}], "-"}], 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[CapitalOmega]r", "[", 
                    RowBox[{
                    SubscriptBox["r", "j"], "-", 
                    SubscriptBox["r", "i"]}], "]"}], "2"], 
                    RowBox[{"KroneckerDelta", "[", 
                    RowBox[{"\[Nu]", ",", "1"}], "]"}], 
                    RowBox[{"KroneckerDelta", "[", 
                    RowBox[{"\[Mu]", ",", "2"}], "]"}]}], "-", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"\[CapitalOmega]r", "[", 
                    RowBox[{
                    SubscriptBox["r", "j"], "-", 
                    SubscriptBox["r", "i"]}], "]"}], "\[Conjugate]"}], "2"], 
                    " ", 
                    RowBox[{"KroneckerDelta", "[", 
                    RowBox[{"\[Nu]", ",", "2"}], "]"}], 
                    RowBox[{"KroneckerDelta", "[", 
                    RowBox[{"\[Mu]", ",", "1"}], "]"}]}]}], ";"}], "*)"}], 
                   ")"}]}]}]}], ";"}]}], "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "turn", " ", "off", " ", "blockade", " ", "to", " ", "find", 
               " ", "eigenmodes", " ", "of", " ", "the", " ", "dipole", " ", 
               "interactions", " ", "between", " ", "intermediate", " ", 
               "excited", " ", "states"}], "*)"}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Find", " ", "the", " ", "target", " ", "eigenmode"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"overlap", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
   RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{
      RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"overlap", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"idealTargetMode", ".", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modeIdx", "=", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"overlap", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"#2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"targetMode", " ", "=", " ", 
   RowBox[{"evecs", "[", 
    RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8105990356622343`*^9, 3.8105990357979107`*^9}, {
  3.8114617652810807`*^9, 3.8114617944516716`*^9}, {3.811462005659279*^9, 
  3.8114620608116717`*^9}, {3.8114621141115556`*^9, 3.811462125790572*^9}, {
  3.811462418333164*^9, 3.8114624463140926`*^9}, {3.8114624941341925`*^9, 
  3.8114628192295847`*^9}, {3.8114628722622414`*^9, 3.811462994808118*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["run - ideal case", "Subsection",
 CellChangeTimes->{{3.810593431136575*^9, 3.8105934512611575`*^9}, {
  3.810598946308624*^9, 3.8105989480591865`*^9}, {3.810599866929473*^9, 
  3.8105998705173016`*^9}, {3.810600014688163*^9, 3.8106000506897573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "the", " ", "Schrodinger", " ", "eq", " ", "system", " ", 
    "then", " ", "solve"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tmax", "=", 
     FractionBox["800", "\[Gamma]"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "\[Psi]0", ",", "eqSys", ",", "excitedIdcs"}], 
      "}"}], " ", "=", " ", 
     RowBox[{"BuildEqSys", "[", 
      RowBox[{
      "Hfull", ",", "atomnum", ",", "centerIdx", ",", "initExcitation"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"eqSys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
         RowBox[{"Method", "\[Rule]", " ", "\"\<ExplicitRungeKutta\>\""}]}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.810597952808503*^9, 3.8105980369363565`*^9}, {
   3.8105986737230835`*^9, 3.810598790311452*^9}, {3.810598855427455*^9, 
   3.8105988685013833`*^9}, 3.8105990475463533`*^9, {3.810601153703929*^9, 
   3.8106011816651983`*^9}, {3.8106013795633698`*^9, 
   3.8106013845274997`*^9}, {3.810601440023057*^9, 3.810601448305662*^9}, {
   3.810602068264508*^9, 3.8106021207651057`*^9}, {3.810660504004507*^9, 
   3.8106605229826007`*^9}, {3.811461756614518*^9, 3.8114617602507277`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.810660365486251*^9, 3.8106605265014167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"soln", "[", 
     RowBox[{"[", "centerIdx", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8106603667524786`*^9, 3.810660367601178*^9}, {
  3.8106604093732543`*^9, 3.8106604284680514`*^9}, {3.810660529796576*^9, 
  3.810660530018423*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-0.12019883812956947`, 0.3333331722081587}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.810660421338044*^9, 3.8106604292303867`*^9}, 
   3.810660530876696*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["run - noise and defects", "Subsection",
 CellChangeTimes->{{3.8105998903175592`*^9, 3.8105999037417316`*^9}}],

Cell[CellGroupData[{

Cell["polarization defects", "Subsubsection",
 CellChangeTimes->{{3.81065810880235*^9, 3.8106581153845387`*^9}}],

Cell["\<\
what is typical polarization spread after a Glenn-Taylor polarizer?\
\>", "Text",
 CellChangeTimes->{{3.8106626530622673`*^9, 3.810662730970001*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["positional variance", "Subsubsection",
 CellChangeTimes->{{3.8106624268245115`*^9, 3.810662473167281*^9}, {
  3.810758471284704*^9, 3.8107584716753025`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"avgs", " ", "=", " ", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "averages"}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8106023536303325`*^9, 3.8106025123630056`*^9}, {
   3.8106026316848536`*^9, 3.8106026923329697`*^9}, {3.810602727252089*^9, 
   3.8106027341937385`*^9}, {3.8106027928614283`*^9, 
   3.8106031870449286`*^9}, {3.8106032200461287`*^9, 
   3.8106033511337476`*^9}, {3.8106363821680174`*^9, 3.810636593502617*^9}, {
   3.8106367225099525`*^9, 3.8106368374496927`*^9}, 3.8106370654237633`*^9, {
   3.8106371301504087`*^9, 3.8106372347940826`*^9}, {3.8106372650563545`*^9, 
   3.810637266144451*^9}, {3.8106373115056686`*^9, 3.810637346967545*^9}, {
   3.810637389031525*^9, 3.810637443083971*^9}, {3.8106526299505386`*^9, 
   3.810652654613839*^9}, {3.810652798800788*^9, 3.8106528355628214`*^9}, {
   3.8106528776976457`*^9, 3.810652979729291*^9}, {3.8106532081752615`*^9, 
   3.81065321004831*^9}, {3.8106532923466873`*^9, 3.810653327790284*^9}, {
   3.810654621280106*^9, 3.810654637186804*^9}, {3.8106546760556602`*^9, 
   3.810654688018352*^9}, {3.8106549076927676`*^9, 3.8106549709505286`*^9}, 
   3.810656221839223*^9, {3.8106562699630227`*^9, 3.810656306136948*^9}, {
   3.8106563443556356`*^9, 3.810656354974471*^9}, {3.8106563946768723`*^9, 
   3.810656396371873*^9}, {3.8106564566175747`*^9, 3.8106564924193153`*^9}, {
   3.8106565249370775`*^9, 3.810656545678978*^9}, {3.810656643824422*^9, 
   3.810656661588936*^9}, {3.8106566945084553`*^9, 3.810656699642357*^9}, {
   3.8106567913222733`*^9, 3.810656848324584*^9}, {3.810656879738904*^9, 
   3.810656903107007*^9}, {3.810657091964929*^9, 3.8106572008089075`*^9}, {
   3.81065797243886*^9, 3.8106579739114733`*^9}, {3.8106584010224977`*^9, 
   3.810658403015836*^9}, 3.810658711530428*^9, {3.810659057947962*^9, 
   3.810659090470477*^9}, 3.8106591513883533`*^9, {3.8106592071850424`*^9, 
   3.810659224940364*^9}, {3.810659386435833*^9, 3.810659393504279*^9}, {
   3.810659489480883*^9, 3.8106595116108637`*^9}, {3.810659595456733*^9, 
   3.8106595980877934`*^9}, {3.810659834901828*^9, 3.81065987511611*^9}, {
   3.8106600068634796`*^9, 3.810660013635179*^9}, {3.8106602049573145`*^9, 
   3.810660214757901*^9}, {3.810660380185355*^9, 3.810660398642268*^9}, {
   3.8106615410048475`*^9, 3.8106615473966846`*^9}, {3.810661601357648*^9, 
   3.810661610271406*^9}, {3.8106617238528347`*^9, 3.8106617642961226`*^9}, {
   3.810662506556605*^9, 3.8106625652325807`*^9}, {3.8106627967424545`*^9, 
   3.810662803390599*^9}, {3.810663534724964*^9, 3.810663557540327*^9}, {
   3.8106635967585297`*^9, 3.810663661146315*^9}, {3.810663749420813*^9, 
   3.810663765960331*^9}, {3.8106638177114725`*^9, 3.810664202044404*^9}, {
   3.8106664402905655`*^9, 3.81066645886145*^9}, {3.8106665147460384`*^9, 
   3.8106666243783464`*^9}, {3.8106666641753016`*^9, 
   3.8106666780428267`*^9}, {3.810666722443082*^9, 3.8106667251629286`*^9}, 
   3.8106667577741275`*^9, {3.810666792815234*^9, 3.810666877964841*^9}, {
   3.8106669214816103`*^9, 3.8106669357804313`*^9}, {3.8106678128693867`*^9, 
   3.8106678170693817`*^9}, {3.810727076138598*^9, 3.8107271270952168`*^9}, {
   3.810727165269833*^9, 3.8107272095710845`*^9}, {3.810727243780963*^9, 
   3.810727256629833*^9}, {3.810727321496382*^9, 3.8107275378417406`*^9}, {
   3.810728489319067*^9, 3.810728498761309*^9}, {3.81072855368802*^9, 
   3.8107285590824656`*^9}, {3.810728642716112*^9, 3.810728643687804*^9}, {
   3.810728979439581*^9, 3.81072908764014*^9}, {3.810729123848587*^9, 
   3.81072912519348*^9}, {3.810729525094656*^9, 3.810729619056693*^9}, {
   3.8107297787954197`*^9, 3.8107297904818344`*^9}, {3.810733158770322*^9, 
   3.8107331691732025`*^9}, {3.8107370610339975`*^9, 
   3.8107371691183434`*^9}, {3.810737348683406*^9, 3.810737365732115*^9}, {
   3.81073742231549*^9, 3.810737431261313*^9}, {3.8107386702456594`*^9, 
   3.81073888842988*^9}, {3.8107389335147*^9, 3.8107391216562433`*^9}, 
   3.810739153315813*^9, {3.8107391842341075`*^9, 3.8107391978119392`*^9}, {
   3.8107504688922014`*^9, 3.8107504691433744`*^9}, {3.810750517681264*^9, 
   3.810750519625415*^9}, {3.8107506154179916`*^9, 3.8107506607483883`*^9}, {
   3.810750695417894*^9, 3.810750697201892*^9}, {3.8107507318600316`*^9, 
   3.8107507451314373`*^9}, {3.8107510145497985`*^9, 
   3.8107510160587845`*^9}, {3.8107511186744685`*^9, 
   3.8107511282046967`*^9}, {3.810751158384184*^9, 3.810751185443181*^9}, {
   3.810751273075248*^9, 3.810751288251116*^9}, {3.8107517734232583`*^9, 
   3.8107518501230965`*^9}, {3.8109089602414694`*^9, 3.810908968635686*^9}, {
   3.8109372766708345`*^9, 3.8109372792634635`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"e", "[", "i_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgs", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"number", " ", "of", " ", "averages"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"stdSteps", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]], ",", "5*^-3", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]], ",", "5*^-2", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "2"}]], ",", ".5", ",", ".1"}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"trap", " ", "depth", " ", "steps"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fmode", ",", "0.75", ",", "\"\<Ferromagnetic\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"afmode", ",", "0.4", ",", "\"\<A.F.\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solnList", " ", "=", " ", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "}"}], "&"}], ",", 
      RowBox[{"Length", "[", "modes", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"soln", "=", 
     RowBox[{"{", "}"}]}], ";"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"tuples", ":", " ", 
    RowBox[{"{", 
     RowBox[{"depth", ",", 
      RowBox[{"Log10", "[", 
       RowBox[{"linewidth", "/", "\[Gamma]"}], "]"}]}], "}"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", 
   RowBox[{
    RowBox[{"Timing", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"midx", "=", "1"}], ",", 
        RowBox[{"midx", "<", 
         RowBox[{
          RowBox[{"Length", "[", "modes", "]"}], "+", "1"}]}], ",", 
        RowBox[{"midx", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"didx", "=", "1"}], ",", 
           RowBox[{"didx", "<", 
            RowBox[{
             RowBox[{"Length", "[", "stdSteps", "]"}], "+", "1"}]}], ",", 
           RowBox[{"didx", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[Sigma]", " ", "=", 
             RowBox[{
              RowBox[{"stdSteps", "[", 
               RowBox[{"[", "didx", "]"}], "]"}], "\[Lambda]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"evalAvg", "=", "0"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", " ", "[", 
             RowBox[{
              RowBox[{"step", "=", "0"}], ",", 
              RowBox[{"step", "<", "avgs"}], ",", 
              RowBox[{"step", "++"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"generate", " ", "positional", " ", "noise"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"rNoise", " ", "=", " ", 
                RowBox[{"Array", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "\[Sigma]"}], "]"}], "]"}], ",", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "\[Sigma]"}], "]"}], "]"}], ",", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "\[Sigma]"}], "]"}], "]"}]}], "}"}], 
                   "&"}], ",", "atomnum"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"\[CapitalDelta]rNoise", " ", "=", " ", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"rNoise", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", 
                   RowBox[{"rNoise", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", 
                    RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "construct", " ", "the", " ", "Hamiltonian", " ", "with", " ",
                  "noise"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Hnoisy", "=", " ", 
                RowBox[{"Array", "[", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["H", "##"], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{"atomnum", "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "<", 
                    RowBox[{"atomnum", "+", "1"}]}], ",", 
                    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"u", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"modes", "[", 
                    RowBox[{"[", 
                    RowBox[{"midx", ",", "2"}], "]"}], "]"}], " ", 
                    "\[Lambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["r", "j"], "-", 
                    SubscriptBox["r", "i"]}], ")"}]}], "+", 
                    RowBox[{"\[CapitalDelta]rNoise", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "i"}], "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\[CapitalOmega]ij", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"\[Gamma]ij", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Hnoisy", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
                    RowBox[{"\[CapitalOmega]ij", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}],
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "find", " ", "linewidth", " ", "of", " ", "target", " ", 
                 "mode"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"evalsNoisy", ",", " ", "evecsNoisy"}], "}"}], "=", 
                RowBox[{"Eigensystem", "[", "Hnoisy", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"overlap", " ", "=", " ", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", " ", "=", " ", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "evecsNoisy", "]"}], "+", "1"}]}], 
                 ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"modes", "[", 
                    RowBox[{"[", 
                    RowBox[{"midx", ",", "1"}], "]"}], "]"}], ".", 
                    RowBox[{"evecsNoisy", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], 
                  "]"}]}], 
                RowBox[{"(*", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"targetIdx", "=", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"evalAvg", "+=", 
                RowBox[{
                 RowBox[{"evalsNoisy", "[", 
                  RowBox[{"[", "targetIdx", "]"}], "]"}], "/", "avgs"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"solnList", "[", 
               RowBox[{"[", "midx", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Sigma]", "/", "\[Lambda]"}], ",", 
                RowBox[{"Log10", "[", 
                 RowBox[{
                  RowBox[{"Im", "[", "evalAvg", "]"}], "/", "\[Gamma]"}], 
                 "]"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"ToString", "[", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<ran sim in `` mins\>\"", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8106023536303325`*^9, 3.8106025123630056`*^9}, {
   3.8106026316848536`*^9, 3.8106026923329697`*^9}, {3.810602727252089*^9, 
   3.8106027341937385`*^9}, {3.8106027928614283`*^9, 
   3.8106031870449286`*^9}, {3.8106032200461287`*^9, 
   3.8106033511337476`*^9}, {3.8106363821680174`*^9, 3.810636593502617*^9}, {
   3.8106367225099525`*^9, 3.8106368374496927`*^9}, 3.8106370654237633`*^9, {
   3.8106371301504087`*^9, 3.8106372347940826`*^9}, {3.8106372650563545`*^9, 
   3.810637266144451*^9}, {3.8106373115056686`*^9, 3.810637346967545*^9}, {
   3.810637389031525*^9, 3.810637443083971*^9}, {3.8106526299505386`*^9, 
   3.810652654613839*^9}, {3.810652798800788*^9, 3.8106528355628214`*^9}, {
   3.8106528776976457`*^9, 3.810652979729291*^9}, {3.8106532081752615`*^9, 
   3.81065321004831*^9}, {3.8106532923466873`*^9, 3.810653327790284*^9}, {
   3.810654621280106*^9, 3.810654637186804*^9}, {3.8106546760556602`*^9, 
   3.810654688018352*^9}, {3.8106549076927676`*^9, 3.8106549709505286`*^9}, 
   3.810656221839223*^9, {3.8106562699630227`*^9, 3.810656306136948*^9}, {
   3.8106563443556356`*^9, 3.810656354974471*^9}, {3.8106563946768723`*^9, 
   3.810656396371873*^9}, {3.8106564566175747`*^9, 3.8106564924193153`*^9}, {
   3.8106565249370775`*^9, 3.810656545678978*^9}, {3.810656643824422*^9, 
   3.810656661588936*^9}, {3.8106566945084553`*^9, 3.810656699642357*^9}, {
   3.8106567913222733`*^9, 3.810656848324584*^9}, {3.810656879738904*^9, 
   3.810656903107007*^9}, {3.810657091964929*^9, 3.8106572008089075`*^9}, {
   3.81065797243886*^9, 3.8106579739114733`*^9}, {3.8106584010224977`*^9, 
   3.810658403015836*^9}, 3.810658711530428*^9, {3.810659057947962*^9, 
   3.810659090470477*^9}, 3.8106591513883533`*^9, {3.8106592071850424`*^9, 
   3.810659224940364*^9}, {3.810659386435833*^9, 3.810659393504279*^9}, {
   3.810659489480883*^9, 3.8106595116108637`*^9}, {3.810659595456733*^9, 
   3.8106595980877934`*^9}, {3.810659834901828*^9, 3.81065987511611*^9}, {
   3.8106600068634796`*^9, 3.810660013635179*^9}, {3.8106602049573145`*^9, 
   3.810660214757901*^9}, {3.810660380185355*^9, 3.810660398642268*^9}, {
   3.8106615410048475`*^9, 3.8106615473966846`*^9}, {3.810661601357648*^9, 
   3.810661610271406*^9}, {3.8106617238528347`*^9, 3.8106617642961226`*^9}, {
   3.810662506556605*^9, 3.8106625652325807`*^9}, {3.8106627967424545`*^9, 
   3.810662803390599*^9}, {3.810663534724964*^9, 3.810663557540327*^9}, {
   3.8106635967585297`*^9, 3.810663661146315*^9}, {3.810663749420813*^9, 
   3.810663765960331*^9}, {3.8106638177114725`*^9, 3.810664202044404*^9}, {
   3.8106664402905655`*^9, 3.81066645886145*^9}, {3.8106665147460384`*^9, 
   3.8106666243783464`*^9}, {3.8106666641753016`*^9, 
   3.8106666780428267`*^9}, {3.810666722443082*^9, 3.8106667251629286`*^9}, 
   3.8106667577741275`*^9, {3.810666792815234*^9, 3.810666877964841*^9}, {
   3.8106669214816103`*^9, 3.8106669357804313`*^9}, {3.8106678128693867`*^9, 
   3.8106678170693817`*^9}, {3.810727076138598*^9, 3.8107271270952168`*^9}, {
   3.810727165269833*^9, 3.8107272095710845`*^9}, {3.810727243780963*^9, 
   3.810727256629833*^9}, {3.810727321496382*^9, 3.8107275378417406`*^9}, {
   3.810728489319067*^9, 3.810728498761309*^9}, {3.81072855368802*^9, 
   3.8107285590824656`*^9}, {3.810728642716112*^9, 3.810728643687804*^9}, {
   3.810728979439581*^9, 3.81072908764014*^9}, {3.810729123848587*^9, 
   3.81072912519348*^9}, {3.810729525094656*^9, 3.810729619056693*^9}, {
   3.8107297787954197`*^9, 3.8107297904818344`*^9}, {3.810733158770322*^9, 
   3.8107331691732025`*^9}, {3.8107370610339975`*^9, 
   3.8107371691183434`*^9}, {3.810737348683406*^9, 3.810737365732115*^9}, {
   3.81073742231549*^9, 3.810737431261313*^9}, {3.8107386702456594`*^9, 
   3.81073888842988*^9}, {3.8107389335147*^9, 3.8107391216562433`*^9}, 
   3.810739153315813*^9, {3.8107391842341075`*^9, 3.8107391978119392`*^9}, {
   3.8107504688922014`*^9, 3.8107504691433744`*^9}, {3.810750517681264*^9, 
   3.810750519625415*^9}, {3.8107506154179916`*^9, 3.8107506607483883`*^9}, {
   3.810750695417894*^9, 3.810750697201892*^9}, {3.8107507318600316`*^9, 
   3.8107507451314373`*^9}, {3.8107510145497985`*^9, 
   3.8107510160587845`*^9}, {3.8107511186744685`*^9, 
   3.8107511282046967`*^9}, {3.810751158384184*^9, 3.810751185443181*^9}, {
   3.810751273075248*^9, 3.810751288251116*^9}, {3.8107517734232583`*^9, 
   3.8107518501230965`*^9}, {3.8109089602414694`*^9, 3.810908961144948*^9}, {
   3.8109372978525453`*^9, 3.810937475261454*^9}, {3.8109375145783815`*^9, 
   3.810937554399542*^9}, 3.8109382730818863`*^9, {3.810940354446269*^9, 
   3.8109403946867557`*^9}}],

Cell[BoxData["\<\"ran sim in 20 mins\"\>"], "Print",
 CellChangeTimes->{3.8109398091173563`*^9, 3.8109416392550106`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<soln_linewidth_v_trapdepth_``avgs_``x``_``.txt\>\"", ",", "avgs", 
      ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}], ",", 
   RowBox[{"ToString", "[", "solnList", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.810733878651677*^9, 3.8107338854044476`*^9}, {
  3.810733916277492*^9, 3.8107339715538654`*^9}, {3.8107369261037226`*^9, 
  3.8107369738721347`*^9}}],

Cell[BoxData["\<\"soln_linewidth_v_trapdepth_10avgs_11x11_square.txt\"\>"], \
"Output",
 CellChangeTimes->{3.8107339722940483`*^9, 3.810735540529543*^9, 
  3.8107369749427223`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solnList", " ", "=", " ", 
   RowBox[{"ToExpression", "[", 
    RowBox[{
    "Import", "[", "\"\<soln_linewidth_v_pos_std_20avgs_11x11_square.txt\>\"",
      "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.810983421065462*^9, 3.8109834270361547`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"solnList", ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Ferro.,d=0.75\[Lambda]\>\"", ",", "\"\<A.F.,d=0.4\[Lambda]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Linewidth vs positional std., ``x`` ``\>\"", ",", 
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"], ",", "gridname"}], "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Sigma] [\[Lambda]]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \
\(i\)]\)/\[Gamma])\>\""}], "}"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.810730623650977*^9, 3.810730669032957*^9}, {
   3.8107307103120575`*^9, 3.810730778026699*^9}, {3.81073113777429*^9, 
   3.810731141043548*^9}, {3.810731233657107*^9, 3.810731287987068*^9}, {
   3.8107335688374434`*^9, 3.810733692493232*^9}, {3.810733793950739*^9, 
   3.81073379685457*^9}, {3.8107340474645658`*^9, 3.810734092237039*^9}, {
   3.8107341253893948`*^9, 3.8107342007166924`*^9}, {3.8107343090222445`*^9, 
   3.8107343151055603`*^9}, {3.810734369395897*^9, 3.810734416305269*^9}, 
   3.8107344488826475`*^9, {3.8107344819091525`*^9, 3.810734515114732*^9}, {
   3.8109402288438883`*^9, 3.810940248397122*^9}, {3.81094173837375*^9, 
   3.8109417390754275`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             FontSize -> 5, StripOnInput -> False], TraditionalForm]], {0., 
          
          0.}], {{{-9.210340371976182, -2.26795}}, {{-5.298317366548036, \
-2.20274}}, {{-6.907755278982137, -2.26466}}, {{-2.995732273553991, \
-1.06374}}, {{-4.605170185988091, -2.04306}}, {{-0.6931471805599453, \
-0.0340658}}, {{-2.3025850929940455`, -0.689993}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             FontSize -> 5, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{-9.210340371976182, -4.2725}}, {{-5.298317366548036, \
-3.59692}}, {{-6.907755278982137, -4.20985}}, {{-2.995732273553991, \
-1.4265}}, {{-4.605170185988091, -3.01111}}, {{-0.6931471805599453, \
-0.122937}}, {{-2.3025850929940455`, -0.97319}}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {-9.523635564238564, 0}, 
     PlotRange -> {{-9.387781896797355, -0.6931471805599453}, {-4.2725, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-9.523635564238564, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(i\\)]\\)/\[Gamma])\"", 
         TraditionalForm], None}, {
        FormBox["\"\[Sigma] [\[Lambda]]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Linewidth vs positional std., \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) \
square\"", 
        StringForm[
        "Linewidth vs positional std., ``x`` ``", 11, 11, "square"], Editable -> 
        False], TraditionalForm], 
     PlotRange -> {{-9.387781896797355, -0.6931471805599453}, {-4.2725, 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ferro.,d=0.75\[Lambda]\"", "\"A.F.,d=0.4\[Lambda]\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", "5"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8107335542530646`*^9, 3.8107336486223783`*^9}, {
   3.8107340865629363`*^9, 3.810734092926916*^9}, {3.810734132601056*^9, 
   3.8107341653889422`*^9}, 3.81073420308637*^9, {3.8107343101971254`*^9, 
   3.810734315977656*^9}, {3.8107343773754663`*^9, 3.8107344168871756`*^9}, 
   3.810734450036874*^9, {3.8107345107169914`*^9, 3.8107345158676167`*^9}, 
   3.810735546577605*^9, 3.810940278176564*^9, 3.8109417399812384`*^9, 
   3.810983431359148*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"avgs", "=", "20"}], ";", "\[IndentingNewLine]", 
   RowBox[{"fname", " ", "=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<plot_linewidth_v_pos_std_``avgs_``x``_``.png\>\"", ",", "avgs", 
       ",", 
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"fname", ",", "plt"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.810733740064287*^9, 3.8107337758578644`*^9}, {
   3.8107342271520185`*^9, 3.810734236768506*^9}, {3.8107354940827007`*^9, 
   3.8107355337435126`*^9}, 3.81090881909861*^9, {3.8109834451387477`*^9, 
   3.810983494449375*^9}}],

Cell[BoxData["\<\"plot_linewidth_v_pos_std_20avgs_11x11_square.png\"\>"], \
"Output",
 CellChangeTimes->{3.810733777864684*^9, 3.810734239036929*^9, 
  3.8107344643191495`*^9, 3.810734522950943*^9, 3.81073551081384*^9, 
  3.810735634518162*^9, 3.810983489758535*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solnList", " ", "=", " ", 
   RowBox[{"ToExpression", "[", 
    RowBox[{
    "Import", "[", 
     "\"\<soln_linewidth_v_trapdepth_10avgs_11x11_square.txt\>\"", "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8109088264072475`*^9, 3.8109088270336447`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"solnList", ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Ferro.,d=0.75\[Lambda]\>\"", ",", "\"\<A.F.,d=0.4\[Lambda]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Linewidth vs trap depth, ``x`` ``\>\"", ",", 
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"], ",", "gridname"}], "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Trap Depth [\!\(\*SubscriptBox[\(T\), \(atom\)]\)]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \
\(i\)]\)/\[Gamma])\>\""}], "}"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             FontSize -> 5, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{3.912023005428146, -0.379053}}, {{
         4.605170185988092, -0.316336}}, {{6.214608098422191, -0.74282}}, {{
         6.907755278982137, -1.04049}}, {{8.517193191416238, -1.59618}}, {{
         9.210340371976184, -1.73971}}, {{10.819778284410283`, -2.11689}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             FontSize -> 5, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{3.912023005428146, -0.203544}}, {{
         4.605170185988092, -0.545765}}, {{6.214608098422191, -0.717731}}, {{
         6.907755278982137, -0.978112}}, {{8.517193191416238, -1.4787}}, {{
         9.210340371976184, -1.88321}}, {{
         10.819778284410283`, -2.61673}}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {3.6579291426270464`, 0}, 
     PlotRange -> {{3.7681114371160187`, 10.819778284410283`}, {-2.61673, 0}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6579291426270464`, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(i\\)]\\)/\[Gamma])\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Trap Depth [\\!\\(\\*SubscriptBox[\\(T\\), \\(atom\\)]\\)]\"", 
         TraditionalForm], None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Linewidth vs trap depth, \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) \
square\"", 
        StringForm["Linewidth vs trap depth, ``x`` ``", 11, 11, "square"], 
        Editable -> False], TraditionalForm], 
     PlotRange -> {{3.7681114371160187`, 10.819778284410283`}, {-2.61673, 0}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ferro.,d=0.75\[Lambda]\"", "\"A.F.,d=0.4\[Lambda]\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", "5"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8109088389949756`*^9}]
}, Open  ]],

Cell[BoxData["Clear"], "Input",
 CellChangeTimes->{{3.810909209329301*^9, 3.810909209902745*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]z", "[", "depth_", "]"}], ":=", 
   FractionBox["w0", 
    RowBox[{"2", 
     SqrtBox["depth"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]z", "[", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"a", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "a", "]"}], "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.810908846039613*^9, 3.810908901078379*^9}, {
  3.8109089392946568`*^9, 3.8109089449971123`*^9}, {3.8109089852716637`*^9, 
  3.8109090324261813`*^9}, {3.810909094485317*^9, 3.8109091493990817`*^9}, {
  3.81090918017546*^9, 3.810909186943657*^9}, {3.8109092424209523`*^9, 
  3.810909385474019*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2000000"], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2000000", " ", 
       SqrtBox["2"]}]], ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8109091503952055`*^9, 3.810909188247883*^9, 3.8109093404145393`*^9, {
   3.810909378037903*^9, 3.8109093866129208`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.8109091614501047`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8109091619191875`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stdPtsList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{
      RowBox[{"Length", "[", "solnList", "]"}], "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pts", " ", "=", " ", 
      RowBox[{"solnList", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stdPts", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sigma]z", "[", 
            RowBox[{"pts", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}], "/", 
           "\[Lambda]"}], ",", 
          RowBox[{"pts", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "pts", "]"}], "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stdPtsList", ",", "stdPts"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.810909406782749*^9, 3.810909568644022*^9}, {
  3.810909799368719*^9, 3.8109098017637877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"stdPtsList", ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Ferro.,d=0.75\[Lambda]\>\"", ",", "\"\<A.F.,d=0.4\[Lambda]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Linewidth vs atom position std., ``x`` ``\>\"", ",", 
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"], ",", "gridname"}], "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<In-plane positional std. [\[Lambda]]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \
\(i\)]\)/\[Gamma])\>\""}], "}"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8109096089210362`*^9, 3.8109096583248606`*^9}, {
  3.8109097811900454`*^9, 3.810909784980081*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             FontSize -> 5, StripOnInput -> False], TraditionalForm]], {0., 
          
          0.}], {{{-2.400697323975519, -0.379053}}, {{-2.747270914255491, \
-0.316336}}, {{-3.5519898704725414`, -0.74282}}, {{-3.898563460752514, \
-1.04049}}, {{-4.703282416969564, -1.59618}}, {{-5.049856007249537, \
-1.73971}}, {{-5.854574963466587, -2.11689}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             FontSize -> 5, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{-2.400697323975519, -0.203544}}, {{-2.747270914255491, \
-0.545765}}, {{-3.5519898704725414`, -0.717731}}, {{-3.898563460752514, \
-0.978112}}, {{-4.703282416969564, -1.4787}}, {{-5.049856007249537, \
-1.88321}}, {{-5.854574963466587, -2.61673}}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {-5.981621894867139, 0}, 
     PlotRange -> {{-5.926530747622651, -2.400697323975519}, {-2.61673, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-5.981621894867139, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(i\\)]\\)/\[Gamma])\"", 
         TraditionalForm], None}, {
        FormBox["\"In-plane positional std. [\[Lambda]]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Linewidth vs atom position std., \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) \
square\"", 
        StringForm[
        "Linewidth vs atom position std., ``x`` ``", 11, 11, "square"], 
        Editable -> False], TraditionalForm], 
     PlotRange -> {{-5.926530747622651, -2.400697323975519}, {-2.61673, 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ferro.,d=0.75\[Lambda]\"", "\"A.F.,d=0.4\[Lambda]\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", "5"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8109096596639595`*^9, {3.810909789020316*^9, 3.810909804162309*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<soln_linewidth_v_pos_std_``avgs_``x``_``.txt\>\"", ",", "avgs", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}], ",", 
   RowBox[{"ToString", "[", "stdPtsList", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8109099961140456`*^9, 3.810910004817444*^9}}],

Cell[BoxData["\<\"soln_linewidth_v_pos_std_10avgs_11x11_square.txt\"\>"], \
"Output",
 CellChangeTimes->{3.81091000867144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<plot_linewidth_v_pos_std_``avgs_``x``_``.png\>\"", ",", "avgs", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}], ",", "plt"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8109099053912907`*^9, 3.810909946325487*^9}}],

Cell[BoxData["\<\"plot_linewidth_v_pos_std_10avgs_11x11_square.png\"\>"], \
"Output",
 CellChangeTimes->{{3.810909935449197*^9, 3.8109099481382666`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["imperfect array filling", "Subsubsection",
 CellChangeTimes->{{3.810751057899934*^9, 3.810751062066662*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fillSteps", " ", "=", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"0.3", ",", "1", ",", "0.1"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"grid", " ", "filling", " ", "if", " ", "defects"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgs", " ", "=", " ", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "averages"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e", "[", "i_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgs", " ", "=", " ", "50"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "averages"}], "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"trap", " ", "depth", " ", "steps"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fmode", ",", "0.75", ",", "\"\<Ferromagnetic\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"afmode", ",", "0.4", ",", "\"\<A.F.\>\""}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8106023536303325`*^9, 3.8106025123630056`*^9}, {
   3.8106026316848536`*^9, 3.8106026923329697`*^9}, {3.810602727252089*^9, 
   3.8106027341937385`*^9}, {3.8106027928614283`*^9, 
   3.8106031870449286`*^9}, {3.8106032200461287`*^9, 
   3.8106033511337476`*^9}, {3.8106363821680174`*^9, 3.810636593502617*^9}, {
   3.8106367225099525`*^9, 3.8106368374496927`*^9}, 3.8106370654237633`*^9, {
   3.8106371301504087`*^9, 3.8106372347940826`*^9}, {3.8106372650563545`*^9, 
   3.810637266144451*^9}, {3.8106373115056686`*^9, 3.810637346967545*^9}, {
   3.810637389031525*^9, 3.810637443083971*^9}, {3.8106526299505386`*^9, 
   3.810652654613839*^9}, {3.810652798800788*^9, 3.8106528355628214`*^9}, {
   3.8106528776976457`*^9, 3.810652979729291*^9}, {3.8106532081752615`*^9, 
   3.81065321004831*^9}, {3.8106532923466873`*^9, 3.810653327790284*^9}, {
   3.810654621280106*^9, 3.810654637186804*^9}, {3.8106546760556602`*^9, 
   3.810654688018352*^9}, {3.8106549076927676`*^9, 3.8106549709505286`*^9}, 
   3.810656221839223*^9, {3.8106562699630227`*^9, 3.810656306136948*^9}, {
   3.8106563443556356`*^9, 3.810656354974471*^9}, {3.8106563946768723`*^9, 
   3.810656396371873*^9}, {3.8106564566175747`*^9, 3.8106564924193153`*^9}, {
   3.8106565249370775`*^9, 3.810656545678978*^9}, {3.810656643824422*^9, 
   3.810656661588936*^9}, {3.8106566945084553`*^9, 3.810656699642357*^9}, {
   3.8106567913222733`*^9, 3.810656848324584*^9}, {3.810656879738904*^9, 
   3.810656903107007*^9}, {3.810657091964929*^9, 3.8106572008089075`*^9}, {
   3.81065797243886*^9, 3.8106579739114733`*^9}, {3.8106584010224977`*^9, 
   3.810658403015836*^9}, 3.810658711530428*^9, {3.810659057947962*^9, 
   3.810659090470477*^9}, 3.8106591513883533`*^9, {3.8106592071850424`*^9, 
   3.810659224940364*^9}, {3.810659386435833*^9, 3.810659393504279*^9}, {
   3.810659489480883*^9, 3.8106595116108637`*^9}, {3.810659595456733*^9, 
   3.8106595980877934`*^9}, {3.810659834901828*^9, 3.81065987511611*^9}, {
   3.8106600068634796`*^9, 3.810660013635179*^9}, {3.8106602049573145`*^9, 
   3.810660214757901*^9}, {3.810660380185355*^9, 3.810660398642268*^9}, {
   3.8106615410048475`*^9, 3.8106615473966846`*^9}, {3.810661601357648*^9, 
   3.810661610271406*^9}, {3.8106617238528347`*^9, 3.8106617642961226`*^9}, {
   3.810662506556605*^9, 3.8106625652325807`*^9}, {3.8106627967424545`*^9, 
   3.810662803390599*^9}, {3.810663534724964*^9, 3.810663557540327*^9}, {
   3.8106635967585297`*^9, 3.810663661146315*^9}, {3.810663749420813*^9, 
   3.810663765960331*^9}, {3.8106638177114725`*^9, 3.810664202044404*^9}, {
   3.8106664402905655`*^9, 3.81066645886145*^9}, {3.8106665147460384`*^9, 
   3.8106666243783464`*^9}, {3.8106666641753016`*^9, 
   3.8106666780428267`*^9}, {3.810666722443082*^9, 3.8106667251629286`*^9}, 
   3.8106667577741275`*^9, {3.810666792815234*^9, 3.810666877964841*^9}, {
   3.8106669214816103`*^9, 3.8106669357804313`*^9}, {3.8106678128693867`*^9, 
   3.8106678170693817`*^9}, {3.810727076138598*^9, 3.8107271270952168`*^9}, {
   3.810727165269833*^9, 3.8107272095710845`*^9}, {3.810727243780963*^9, 
   3.810727256629833*^9}, {3.810727321496382*^9, 3.8107275378417406`*^9}, {
   3.810728489319067*^9, 3.810728498761309*^9}, {3.81072855368802*^9, 
   3.8107285590824656`*^9}, {3.810728642716112*^9, 3.810728643687804*^9}, {
   3.810728979439581*^9, 3.81072908764014*^9}, {3.810729123848587*^9, 
   3.81072912519348*^9}, {3.810729525094656*^9, 3.810729619056693*^9}, {
   3.8107297787954197`*^9, 3.8107297904818344`*^9}, {3.810733158770322*^9, 
   3.8107331691732025`*^9}, {3.8107370610339975`*^9, 
   3.8107371691183434`*^9}, {3.810737348683406*^9, 3.810737365732115*^9}, {
   3.81073742231549*^9, 3.810737431261313*^9}, {3.8107386702456594`*^9, 
   3.81073888842988*^9}, {3.8107389335147*^9, 3.8107391216562433`*^9}, 
   3.810739153315813*^9, {3.8107391842341075`*^9, 3.8107391978119392`*^9}, {
   3.8107504688922014`*^9, 3.8107504691433744`*^9}, {3.810750517681264*^9, 
   3.810750519625415*^9}, {3.8107506154179916`*^9, 3.8107506607483883`*^9}, {
   3.810750695417894*^9, 3.810750697201892*^9}, {3.8107507318600316`*^9, 
   3.8107507451314373`*^9}, {3.8107510145497985`*^9, 
   3.8107510160587845`*^9}, {3.810751107813838*^9, 3.810751108712244*^9}, {
   3.81075125215762*^9, 3.8107512527760234`*^9}, {3.8107513003958535`*^9, 
   3.8107513870778713`*^9}, {3.8107514247480054`*^9, 3.810751528249061*^9}, {
   3.8107518727401776`*^9, 3.8107519723319607`*^9}, 3.8107520072486715`*^9, {
   3.810755490052764*^9, 3.810755564305564*^9}, {3.8107559083886003`*^9, 
   3.8107559338742657`*^9}, {3.810755990923419*^9, 3.810756018640771*^9}, {
   3.8107579800561466`*^9, 3.810757983771761*^9}, {3.8107582116518755`*^9, 
   3.810758212340417*^9}, {3.8107582724773607`*^9, 3.810758301091998*^9}, {
   3.810758601100812*^9, 3.810758603329065*^9}, {3.810758791076486*^9, 
   3.810758808738266*^9}, {3.810758913693343*^9, 3.810758915425562*^9}, {
   3.8107593943222427`*^9, 3.810759423449274*^9}, {3.8107594580169353`*^9, 
   3.810759493622402*^9}, {3.8107595431028376`*^9, 3.810759558464307*^9}, {
   3.8107596448399982`*^9, 3.810759687535898*^9}, {3.8107597651246643`*^9, 
   3.810759788554669*^9}, {3.810760447764699*^9, 3.8107604481746535`*^9}, {
   3.8107605529620066`*^9, 3.810760576424037*^9}, 3.810760802917096*^9, {
   3.810760849981915*^9, 3.8107608574297013`*^9}, {3.8107609673661575`*^9, 
   3.8107610375353384`*^9}, {3.8107610681113777`*^9, 3.810761068210205*^9}, {
   3.810761120724757*^9, 3.8107611211915092`*^9}, {3.8107611623735437`*^9, 
   3.810761212387026*^9}, {3.8107615531280723`*^9, 3.810761553207775*^9}, {
   3.810764194754352*^9, 3.810764217206276*^9}, {3.810767045457673*^9, 
   3.810767058275079*^9}, {3.810905524316702*^9, 3.810905525842125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"solnList", " ", "=", " ", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "}"}], "&"}], ",", 
      RowBox[{"Length", "[", "modes", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"soln", "=", 
     RowBox[{"{", "}"}]}], ";"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"tuples", ":", " ", 
    RowBox[{"{", 
     RowBox[{"depth", ",", 
      RowBox[{"Log10", "[", 
       RowBox[{"linewidth", "/", "\[Gamma]"}], "]"}]}], "}"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", 
   RowBox[{
    RowBox[{"Timing", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"midx", "=", "1"}], ",", 
        RowBox[{"midx", "<", 
         RowBox[{
          RowBox[{"Length", "[", "modes", "]"}], "+", "1"}]}], ",", 
        RowBox[{"midx", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"fidx", "=", "1"}], ",", 
           RowBox[{"fidx", "<", 
            RowBox[{
             RowBox[{"Length", "[", "fillSteps", "]"}], "+", "1"}]}], ",", 
           RowBox[{"fidx", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"filling", " ", "=", 
             RowBox[{"fillSteps", "[", 
              RowBox[{"[", "fidx", "]"}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"defects", "=", 
             RowBox[{"atomnum", "-", 
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"filling", " ", "atomnum"}], "+", "0.5"}], "]"}]}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"evalAvg", "=", "0"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", " ", "[", 
             RowBox[{
              RowBox[{"step", "=", "0"}], ",", 
              RowBox[{"step", "<", "avgs"}], ",", 
              RowBox[{"step", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "remove", " ", "some", " ", "atoms", " ", "from", " ", "the", 
                " ", "system"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"atomIcds", " ", "=", " ", 
                RowBox[{"Range", "[", "atomnum", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "0"}], ",", 
                 RowBox[{"i", "<", "defects"}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"rand", " ", "=", " ", 
                   RowBox[{"RandomChoice", "[", "atomIcds", "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"atomIcds", "=", " ", 
                   RowBox[{"Select", "[", 
                    RowBox[{"atomIcds", ",", 
                    RowBox[{
                    RowBox[{"#", "\[NotEqual]", "rand"}], "&"}]}], "]"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"atoms", "=", 
                RowBox[{"Length", "[", "atomIcds", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "construct", " ", "the", " ", "Hamiltonian", " ", "with", " ",
                  "noise"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Hnoisy", "=", " ", 
                RowBox[{"Array", "[", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["H", "##"], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"atoms", ",", "atoms"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{"atoms", "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "<", 
                    RowBox[{"atoms", "+", "1"}]}], ",", 
                    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"u", "=", 
                    RowBox[{
                    RowBox[{"modes", "[", 
                    RowBox[{"[", 
                    RowBox[{"midx", ",", "2"}], "]"}], "]"}], " ", 
                    "\[Lambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["r", 
                    RowBox[{"atomIcds", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]], "-", 
                    SubscriptBox["r", 
                    RowBox[{"atomIcds", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]]}], ")"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\[CapitalOmega]ij", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"\[Gamma]ij", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Hnoisy", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
                    RowBox[{"\[CapitalOmega]ij", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}],
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "find", " ", "linewidth", " ", "of", " ", "target", " ", 
                 "mode"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"evalsNoisy", ",", " ", "evecsNoisy"}], "}"}], "=", 
                RowBox[{"Eigensystem", "[", "Hnoisy", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"overlap", " ", "=", " ", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", " ", "=", " ", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "evecsNoisy", "]"}], "+", "1"}]}], 
                 ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"modes", "[", 
                    RowBox[{"[", 
                    RowBox[{"midx", ",", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{";;", "atoms"}], "]"}], "]"}], ".", 
                    RowBox[{"evecsNoisy", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], 
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"targetIdx", "=", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"evalAvg", "+=", 
                RowBox[{
                 RowBox[{"evalsNoisy", "[", 
                  RowBox[{"[", "targetIdx", "]"}], "]"}], "/", "avgs"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"filling", "\[Equal]", "1"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"evalAvg", "*=", "avgs"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Break", "[", "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"solnList", "[", 
               RowBox[{"[", "midx", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"filling", ",", 
                RowBox[{"Log10", "[", 
                 RowBox[{
                  RowBox[{"Im", "[", "evalAvg", "]"}], "/", "\[Gamma]"}], 
                 "]"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"ToString", "[", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<ran sim in `` mins\>\"", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8106023536303325`*^9, 3.8106025123630056`*^9}, {
   3.8106026316848536`*^9, 3.8106026923329697`*^9}, {3.810602727252089*^9, 
   3.8106027341937385`*^9}, {3.8106027928614283`*^9, 
   3.8106031870449286`*^9}, {3.8106032200461287`*^9, 
   3.8106033511337476`*^9}, {3.8106363821680174`*^9, 3.810636593502617*^9}, {
   3.8106367225099525`*^9, 3.8106368374496927`*^9}, 3.8106370654237633`*^9, {
   3.8106371301504087`*^9, 3.8106372347940826`*^9}, {3.8106372650563545`*^9, 
   3.810637266144451*^9}, {3.8106373115056686`*^9, 3.810637346967545*^9}, {
   3.810637389031525*^9, 3.810637443083971*^9}, {3.8106526299505386`*^9, 
   3.810652654613839*^9}, {3.810652798800788*^9, 3.8106528355628214`*^9}, {
   3.8106528776976457`*^9, 3.810652979729291*^9}, {3.8106532081752615`*^9, 
   3.81065321004831*^9}, {3.8106532923466873`*^9, 3.810653327790284*^9}, {
   3.810654621280106*^9, 3.810654637186804*^9}, {3.8106546760556602`*^9, 
   3.810654688018352*^9}, {3.8106549076927676`*^9, 3.8106549709505286`*^9}, 
   3.810656221839223*^9, {3.8106562699630227`*^9, 3.810656306136948*^9}, {
   3.8106563443556356`*^9, 3.810656354974471*^9}, {3.8106563946768723`*^9, 
   3.810656396371873*^9}, {3.8106564566175747`*^9, 3.8106564924193153`*^9}, {
   3.8106565249370775`*^9, 3.810656545678978*^9}, {3.810656643824422*^9, 
   3.810656661588936*^9}, {3.8106566945084553`*^9, 3.810656699642357*^9}, {
   3.8106567913222733`*^9, 3.810656848324584*^9}, {3.810656879738904*^9, 
   3.810656903107007*^9}, {3.810657091964929*^9, 3.8106572008089075`*^9}, {
   3.81065797243886*^9, 3.8106579739114733`*^9}, {3.8106584010224977`*^9, 
   3.810658403015836*^9}, 3.810658711530428*^9, {3.810659057947962*^9, 
   3.810659090470477*^9}, 3.8106591513883533`*^9, {3.8106592071850424`*^9, 
   3.810659224940364*^9}, {3.810659386435833*^9, 3.810659393504279*^9}, {
   3.810659489480883*^9, 3.8106595116108637`*^9}, {3.810659595456733*^9, 
   3.8106595980877934`*^9}, {3.810659834901828*^9, 3.81065987511611*^9}, {
   3.8106600068634796`*^9, 3.810660013635179*^9}, {3.8106602049573145`*^9, 
   3.810660214757901*^9}, {3.810660380185355*^9, 3.810660398642268*^9}, {
   3.8106615410048475`*^9, 3.8106615473966846`*^9}, {3.810661601357648*^9, 
   3.810661610271406*^9}, {3.8106617238528347`*^9, 3.8106617642961226`*^9}, {
   3.810662506556605*^9, 3.8106625652325807`*^9}, {3.8106627967424545`*^9, 
   3.810662803390599*^9}, {3.810663534724964*^9, 3.810663557540327*^9}, {
   3.8106635967585297`*^9, 3.810663661146315*^9}, {3.810663749420813*^9, 
   3.810663765960331*^9}, {3.8106638177114725`*^9, 3.810664202044404*^9}, {
   3.8106664402905655`*^9, 3.81066645886145*^9}, {3.8106665147460384`*^9, 
   3.8106666243783464`*^9}, {3.8106666641753016`*^9, 
   3.8106666780428267`*^9}, {3.810666722443082*^9, 3.8106667251629286`*^9}, 
   3.8106667577741275`*^9, {3.810666792815234*^9, 3.810666877964841*^9}, {
   3.8106669214816103`*^9, 3.8106669357804313`*^9}, {3.8106678128693867`*^9, 
   3.8106678170693817`*^9}, {3.810727076138598*^9, 3.8107271270952168`*^9}, {
   3.810727165269833*^9, 3.8107272095710845`*^9}, {3.810727243780963*^9, 
   3.810727256629833*^9}, {3.810727321496382*^9, 3.8107275378417406`*^9}, {
   3.810728489319067*^9, 3.810728498761309*^9}, {3.81072855368802*^9, 
   3.8107285590824656`*^9}, {3.810728642716112*^9, 3.810728643687804*^9}, {
   3.810728979439581*^9, 3.81072908764014*^9}, {3.810729123848587*^9, 
   3.81072912519348*^9}, {3.810729525094656*^9, 3.810729619056693*^9}, {
   3.8107297787954197`*^9, 3.8107297904818344`*^9}, {3.810733158770322*^9, 
   3.8107331691732025`*^9}, {3.8107370610339975`*^9, 
   3.8107371691183434`*^9}, {3.810737348683406*^9, 3.810737365732115*^9}, {
   3.81073742231549*^9, 3.810737431261313*^9}, {3.8107386702456594`*^9, 
   3.81073888842988*^9}, {3.8107389335147*^9, 3.8107391216562433`*^9}, 
   3.810739153315813*^9, {3.8107391842341075`*^9, 3.8107391978119392`*^9}, {
   3.8107504688922014`*^9, 3.8107504691433744`*^9}, {3.810750517681264*^9, 
   3.810750519625415*^9}, {3.8107506154179916`*^9, 3.8107506607483883`*^9}, {
   3.810750695417894*^9, 3.810750697201892*^9}, {3.8107507318600316`*^9, 
   3.8107507451314373`*^9}, {3.8107510145497985`*^9, 
   3.8107510160587845`*^9}, {3.810751107813838*^9, 3.810751108712244*^9}, {
   3.81075125215762*^9, 3.8107512527760234`*^9}, {3.8107513003958535`*^9, 
   3.8107513870778713`*^9}, {3.8107514247480054`*^9, 3.810751528249061*^9}, {
   3.8107518727401776`*^9, 3.8107519723319607`*^9}, 3.8107520072486715`*^9, {
   3.810755490052764*^9, 3.810755564305564*^9}, {3.8107559083886003`*^9, 
   3.8107559338742657`*^9}, {3.810755990923419*^9, 3.810756018640771*^9}, {
   3.8107579800561466`*^9, 3.810757983771761*^9}, {3.8107582116518755`*^9, 
   3.810758212340417*^9}, {3.8107582724773607`*^9, 3.810758301091998*^9}, {
   3.810758601100812*^9, 3.810758603329065*^9}, {3.810758791076486*^9, 
   3.810758808738266*^9}, {3.810758913693343*^9, 3.810758915425562*^9}, {
   3.8107593943222427`*^9, 3.810759423449274*^9}, {3.8107594580169353`*^9, 
   3.810759493622402*^9}, {3.8107595431028376`*^9, 3.810759558464307*^9}, {
   3.8107596448399982`*^9, 3.810759687535898*^9}, {3.8107597651246643`*^9, 
   3.810759788554669*^9}, {3.810760447764699*^9, 3.8107604481746535`*^9}, {
   3.8107605529620066`*^9, 3.810760576424037*^9}, 3.810760802917096*^9, {
   3.810760849981915*^9, 3.8107608574297013`*^9}, {3.8107609673661575`*^9, 
   3.8107610375353384`*^9}, {3.8107610681113777`*^9, 3.810761068210205*^9}, {
   3.810761120724757*^9, 3.8107611211915092`*^9}, {3.8107611623735437`*^9, 
   3.810761212387026*^9}, {3.8107615531280723`*^9, 3.810761553207775*^9}, {
   3.810764194754352*^9, 3.810764217206276*^9}, {3.810767045457673*^9, 
   3.810767058275079*^9}, {3.810905524316702*^9, 3.810905525842125*^9}}],

Cell[BoxData["\<\"ran sim in 32 mins\"\>"], "Print",
 CellChangeTimes->{3.810761368623337*^9, 3.8107624563686557`*^9, 
  3.810766182423213*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<soln_linewidth_v_filling_higheff_``avgs_``x``_``.txt\>\"", ",", 
       "avgs", ",", 
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}], ",", 
    RowBox[{"ToString", "[", "solnList", "]"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.810758500492215*^9, 3.810758501237377*^9}, {
   3.8107666156227508`*^9, 3.810766621790168*^9}, 3.8109084288933992`*^9}],

Cell[BoxData["\<\"soln_linewidth_v_filling_higheff_30avgs_11x11_square.txt\"\>\
"], "Output",
 CellChangeTimes->{3.8107585718693733`*^9, 3.8107615385022755`*^9, 
  3.810763864497883*^9, 3.8107666916844244`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"solnList", ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Ferro.,d=0.75\[Lambda]\>\"", ",", "\"\<A.F.,d=0.4\[Lambda]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Linewidth vs array filling, ``x`` ``\>\"", ",", 
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"], ",", "gridname"}], "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Array Filling Efficiency\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \
\(i\)]\)/\[Gamma])\>\""}], "}"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8107585957150197`*^9, 3.810758596985242*^9}, {
  3.810758719341878*^9, 3.8107587497203555`*^9}, {3.8107588765563984`*^9, 
  3.8107589059736605`*^9}, {3.8107666964146953`*^9, 3.8107666977003665`*^9}, {
  3.810766757382922*^9, 3.8107667748324547`*^9}, {3.8109056511406*^9, 
  3.8109057099430265`*^9}, {3.8109057688076925`*^9, 3.8109057897267184`*^9}, {
  3.810908349299176*^9, 3.8109083970584974`*^9}, {3.81090844596616*^9, 
  3.810908460722639*^9}, {3.8109087698414545`*^9, 3.8109088040305047`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             FontSize -> 5, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{3.912023005428146, -0.379053}}, {{
         4.605170185988092, -0.316336}}, {{6.214608098422191, -0.74282}}, {{
         6.907755278982137, -1.04049}}, {{8.517193191416238, -1.59618}}, {{
         9.210340371976184, -1.73971}}, {{10.819778284410283`, -2.11689}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             FontSize -> 5, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{3.912023005428146, -0.203544}}, {{
         4.605170185988092, -0.545765}}, {{6.214608098422191, -0.717731}}, {{
         6.907755278982137, -0.978112}}, {{8.517193191416238, -1.4787}}, {{
         9.210340371976184, -1.88321}}, {{
         10.819778284410283`, -2.61673}}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {3.6579291426270464`, 0}, 
     PlotRange -> {{3.7681114371160187`, 10.819778284410283`}, {-2.61673, 0}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6579291426270464`, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(i\\)]\\)/\[Gamma])\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Trap depth [\\!\\(\\*SubscriptBox[\\(T\\), \\(atom\\)]\\)]\"", 
         TraditionalForm], None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Log, Exp}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Log, Exp}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Linewidth vs trap depth, \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) \
square\"", 
        StringForm["Linewidth vs trap depth, ``x`` ``", 11, 11, "square"], 
        Editable -> False], TraditionalForm], 
     PlotRange -> {{3.7681114371160187`, 10.819778284410283`}, {-2.61673, 0}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ferro.,d=0.75\[Lambda]\"", "\"A.F.,d=0.4\[Lambda]\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", "5"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8107587317243724`*^9, 3.810758750398424*^9}, 
   3.810758868691566*^9, 3.810759593659464*^9, 3.810760929512415*^9, 
   3.810761387906005*^9, 3.8107615451865063`*^9, 3.810763789809804*^9, 
   3.810766628197644*^9, 3.8107666986566925`*^9, {3.8107667614366703`*^9, 
   3.810766775625455*^9}, {3.810905702341079*^9, 3.810905711251379*^9}, {
   3.8109057713183966`*^9, 3.8109057904073286`*^9}, {3.810908384332867*^9, 
   3.81090842314913*^9}, 3.810908461584497*^9}]
}, Open  ]],

Cell["\<\
Replace trap depth index with corresponding in-plane positional std in units \
\[Lambda]\
\>", "Text",
 CellChangeTimes->{{3.8109083224912267`*^9, 3.810908330130692*^9}, {
  3.81090849165688*^9, 3.8109085254281964`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<plot_linewidth_v_filling_higheff_``avgs_``x``_``.png\>\"", ",", 
       "avgs", ",", 
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}], ",", "plt"}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8107638933681855`*^9, 3.810763907555521*^9}, {
  3.810766676612295*^9, 3.8107666827827864`*^9}, {3.810766783710124*^9, 
  3.8107667996409283`*^9}}],

Cell[BoxData["\<\"plot_linewidth_v_filling_higheff_small_30avgs_11x11_square.\
png\"\>"], "Output",
 CellChangeTimes->{3.8107639088870316`*^9, 3.8107666837763247`*^9, 
  3.810766786176042*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8107521614971933`*^9, 3.81075216200841*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["positional variance - time evol", "Subsubsection",
 CellChangeTimes->{{3.810600237597455*^9, 3.810600385593173*^9}, {
  3.810600538313654*^9, 3.81060057414482*^9}, {3.8106006182628236`*^9, 
  3.810600714849717*^9}, {3.8106016644352446`*^9, 3.8106016754561586`*^9}, {
  3.810602200940406*^9, 3.8106022059964952`*^9}, {3.810662352197484*^9, 
  3.8106623580452204`*^9}, {3.8106624009588294`*^9, 3.8106624030774317`*^9}, {
  3.81066243601207*^9, 3.810662438291983*^9}}],

Cell["\<\
average over solutions where atoms have Boltzmann positional variance. assume \
gaussian beam dipole traps.\
\>", "Text",
 CellChangeTimes->{{3.810602225240841*^9, 3.810602290869557*^9}, {
  3.8106571177368326`*^9, 3.8106571350652523`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"w0", "=", "1*^-6"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"trap", " ", 
    RowBox[{"waist", " ", "[", "m", "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"depth", " ", "=", "1000"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "trap", " ", "depth", " ", "as", " ", "multiple", " ", "of", " ", "the", 
    " ", "atom", " ", "temperature"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"zR", " ", "=", " ", 
   RowBox[{"\[Pi]", " ", 
    RowBox[{
     SuperscriptBox["w0", "2"], "/", "\[Lambda]"}]}]}], 
  ";"}], "\[IndentingNewLine]", "\"\<in-plane positional std / \
\[Lambda]\>\"", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]y", " ", "=", 
   RowBox[{"\[Sigma]z", "=", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"w0", "/", 
      SqrtBox["depth"]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]y", "/", "\[Lambda]"}], "//", 
  "N"}], "\[IndentingNewLine]", "\"\<out-of-plane positional std / \
\[Lambda]\>\"", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]x", "=", 
   RowBox[{"zR", "/", 
    SqrtBox[
     RowBox[{"2", " ", "depth"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]x", "/", "\[Lambda]"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.8106023536303325`*^9, 3.8106025123630056`*^9}, {
   3.8106026316848536`*^9, 3.8106026923329697`*^9}, {3.810602727252089*^9, 
   3.8106027341937385`*^9}, {3.8106027928614283`*^9, 
   3.8106031870449286`*^9}, {3.8106032200461287`*^9, 
   3.8106033511337476`*^9}, {3.8106363821680174`*^9, 3.810636593502617*^9}, {
   3.8106367225099525`*^9, 3.8106368374496927`*^9}, 3.8106370654237633`*^9, {
   3.8106371301504087`*^9, 3.8106372347940826`*^9}, {3.8106372650563545`*^9, 
   3.810637266144451*^9}, {3.8106373115056686`*^9, 3.810637346967545*^9}, {
   3.810637389031525*^9, 3.810637443083971*^9}, {3.8106526299505386`*^9, 
   3.810652654613839*^9}, {3.810652798800788*^9, 3.8106528355628214`*^9}, {
   3.8106528776976457`*^9, 3.810652979729291*^9}, {3.8106532081752615`*^9, 
   3.81065321004831*^9}, {3.8106532923466873`*^9, 3.810653327790284*^9}, {
   3.810654621280106*^9, 3.810654637186804*^9}, {3.8106546760556602`*^9, 
   3.810654688018352*^9}, {3.8106549076927676`*^9, 3.8106549709505286`*^9}, 
   3.810656221839223*^9, {3.8106562699630227`*^9, 3.810656306136948*^9}, {
   3.8106563443556356`*^9, 3.810656354974471*^9}, {3.8106563946768723`*^9, 
   3.810656396371873*^9}, {3.8106564566175747`*^9, 3.8106564924193153`*^9}, {
   3.8106565249370775`*^9, 3.810656545678978*^9}, {3.810656643824422*^9, 
   3.810656661588936*^9}, {3.8106566945084553`*^9, 3.810656699642357*^9}, {
   3.8106567913222733`*^9, 3.810656848324584*^9}, {3.810656879738904*^9, 
   3.810656903107007*^9}, {3.810657091964929*^9, 3.810657492963722*^9}, {
   3.810657532728218*^9, 3.8106575729589615`*^9}, {3.8106579817962523`*^9, 
   3.810658072704832*^9}, {3.810659339528797*^9, 3.810659341033455*^9}, 
   3.810659454865636*^9}],

Cell[BoxData["\<\"in-plane positional std / \[Lambda]\"\>"], "Output",
 CellChangeTimes->{{3.8106580627180204`*^9, 3.8106580734279947`*^9}, 
   3.8106593431427803`*^9, 3.8106594565501757`*^9, 3.810661551141118*^9}],

Cell[BoxData["0.020271010642105`"], "Output",
 CellChangeTimes->{{3.8106580627180204`*^9, 3.8106580734279947`*^9}, 
   3.8106593431427803`*^9, 3.8106594565501757`*^9, 3.8106615511460805`*^9}],

Cell[BoxData["\<\"out-of-plane positional std / \[Lambda]\"\>"], "Output",
 CellChangeTimes->{{3.8106580627180204`*^9, 3.8106580734279947`*^9}, 
   3.8106593431427803`*^9, 3.8106594565501757`*^9, 3.8106615511510663`*^9}],

Cell[BoxData["0.11546375297568585`"], "Output",
 CellChangeTimes->{{3.8106580627180204`*^9, 3.8106580734279947`*^9}, 
   3.8106593431427803`*^9, 3.8106594565501757`*^9, 3.8106615511550565`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", 
    RowBox[{"100", "/", "\[Gamma]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"max", " ", "timestep"}], ";", " ", 
    RowBox[{"starts", " ", "at", " ", "0"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgs", " ", "=", " ", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "averages"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solnSum", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"0", "&"}], ",", "atomnum"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", " ", "[", 
  RowBox[{
   RowBox[{"step", "=", "0"}], ",", 
   RowBox[{"step", "<", "avgs"}], ",", 
   RowBox[{"step", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"generate", " ", "noise"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rNoise", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]x"}], "]"}], "]"}], ",", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]y"}], "]"}], "]"}], ",", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]z"}], "]"}], "]"}]}], "}"}], "&"}], 
       ",", "atomnum"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]rNoise", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rNoise", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "-", 
        RowBox[{"rNoise", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "construct", " ", "the", " ", "Hamiltonian", " ", "with", " ", "noise"}],
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Hnoisy", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["H", "##"], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"atomnum", "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "<", 
          RowBox[{"atomnum", "+", "1"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "=", 
           RowBox[{
            RowBox[{"d", " ", "\[Lambda]", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["r", "j"], "-", 
               SubscriptBox["r", "i"]}], ")"}]}], "+", 
            RowBox[{"\[CapitalDelta]rNoise", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[CapitalOmega]ij", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
              RowBox[{"Re", "[", 
               RowBox[{
                RowBox[{"e", "[", "i", "]"}], ".", 
                RowBox[{"GdotP", "[", 
                 RowBox[{"u", ",", 
                  RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Gamma]ij", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
              RowBox[{"Im", "[", 
               RowBox[{
                RowBox[{"e", "[", "i", "]"}], ".", 
                RowBox[{"GdotP", "[", 
                 RowBox[{"u", ",", 
                  RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Hnoisy", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
           RowBox[{"\[CapitalOmega]ij", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "solve", " ", "the", " ", "system", " ", "over", " ", "specified", " ", 
      "time", " ", "domain"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "\[Psi]0", ",", "eqSys", ",", "excitedIdcs"}], 
      "}"}], " ", "=", " ", 
     RowBox[{"BuildEqSys", "[", 
      RowBox[{
      "Hnoisy", ",", "atomnum", ",", "centerIdx", ",", "initExcitation"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"eqSys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
         RowBox[{"Method", "\[Rule]", " ", "Automatic"}]}], "]"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"solnSum", "+=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"ToString", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<ran step `` in `` mins\>\"", ",", "step", ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"solnSum", " ", "/", "avgs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8106023536303325`*^9, 3.8106025123630056`*^9}, {
   3.8106026316848536`*^9, 3.8106026923329697`*^9}, {3.810602727252089*^9, 
   3.8106027341937385`*^9}, {3.8106027928614283`*^9, 
   3.8106031870449286`*^9}, {3.8106032200461287`*^9, 
   3.8106033511337476`*^9}, {3.8106363821680174`*^9, 3.810636593502617*^9}, {
   3.8106367225099525`*^9, 3.8106368374496927`*^9}, 3.8106370654237633`*^9, {
   3.8106371301504087`*^9, 3.8106372347940826`*^9}, {3.8106372650563545`*^9, 
   3.810637266144451*^9}, {3.8106373115056686`*^9, 3.810637346967545*^9}, {
   3.810637389031525*^9, 3.810637443083971*^9}, {3.8106526299505386`*^9, 
   3.810652654613839*^9}, {3.810652798800788*^9, 3.8106528355628214`*^9}, {
   3.8106528776976457`*^9, 3.810652979729291*^9}, {3.8106532081752615`*^9, 
   3.81065321004831*^9}, {3.8106532923466873`*^9, 3.810653327790284*^9}, {
   3.810654621280106*^9, 3.810654637186804*^9}, {3.8106546760556602`*^9, 
   3.810654688018352*^9}, {3.8106549076927676`*^9, 3.8106549709505286`*^9}, 
   3.810656221839223*^9, {3.8106562699630227`*^9, 3.810656306136948*^9}, {
   3.8106563443556356`*^9, 3.810656354974471*^9}, {3.8106563946768723`*^9, 
   3.810656396371873*^9}, {3.8106564566175747`*^9, 3.8106564924193153`*^9}, {
   3.8106565249370775`*^9, 3.810656545678978*^9}, {3.810656643824422*^9, 
   3.810656661588936*^9}, {3.8106566945084553`*^9, 3.810656699642357*^9}, {
   3.8106567913222733`*^9, 3.810656848324584*^9}, {3.810656879738904*^9, 
   3.810656903107007*^9}, {3.810657091964929*^9, 3.8106572008089075`*^9}, {
   3.81065797243886*^9, 3.8106579739114733`*^9}, {3.8106584010224977`*^9, 
   3.810658403015836*^9}, 3.810658711530428*^9, {3.810659057947962*^9, 
   3.810659090470477*^9}, 3.8106591513883533`*^9, {3.8106592071850424`*^9, 
   3.810659224940364*^9}, {3.810659386435833*^9, 3.810659393504279*^9}, {
   3.810659489480883*^9, 3.8106595116108637`*^9}, {3.810659595456733*^9, 
   3.8106595980877934`*^9}, {3.810659834901828*^9, 3.81065987511611*^9}, {
   3.8106600068634796`*^9, 3.810660013635179*^9}, {3.8106602049573145`*^9, 
   3.810660214757901*^9}, {3.810660380185355*^9, 3.810660398642268*^9}, {
   3.8106615410048475`*^9, 3.8106615473966846`*^9}, {3.810661601357648*^9, 
   3.810661610271406*^9}, {3.8106617238528347`*^9, 3.8106617642961226`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"ran step 0 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.810661768089467*^9}],

Cell[BoxData["\<\"ran step 1 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.8106617712700443`*^9}],

Cell[BoxData["\<\"ran step 2 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.8106617744044943`*^9}],

Cell[BoxData["\<\"ran step 3 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.810661777294868*^9}],

Cell[BoxData["\<\"ran step 4 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.810661780199029*^9}],

Cell[BoxData["\<\"ran step 5 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.8106617832597075`*^9}],

Cell[BoxData["\<\"ran step 6 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.81066178650929*^9}],

Cell[BoxData["\<\"ran step 7 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.810661789863531*^9}],

Cell[BoxData["\<\"ran step 8 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.8106617928719006`*^9}],

Cell[BoxData["\<\"ran step 9 in 0 mins\"\>"], "Print",
 CellChangeTimes->{3.810661620921756*^9, 3.810661733621179*^9, 
  3.8106617961750193`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"Re", "[", 
     RowBox[{"avgSoln", "[", 
      RowBox[{"[", "centerIdx", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.810659746767103*^9, 3.8106598089086733`*^9}, {
  3.8106598946625853`*^9, 3.8106598977677774`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
P66wcPf//1hAdhZNjIkvFD8vQjOs
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.4982552926591444`*^-7},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8106596662704535`*^9, 3.810659752809164*^9, {3.810659783907776*^9, 
   3.810659813109928*^9}, {3.810659890248147*^9, 3.810659898874318*^9}, 
   3.8106616582765827`*^9, 3.810661801585326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<ran step `` in `` mins\>\"", ",", "step", ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"time", ">", "60"}], ",", 
     RowBox[{"time", "/", "60"}], ",", 
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8106591461909924`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\"\>",
  StringForm["ran step `` in `` mins", 2, 0],
  Editable->False]], "Output",
 CellChangeTimes->{{3.8106591465458665`*^9, 3.8106591746437635`*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ideal soln analysis", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.810229448943488*^9, {3.811090053001546*^9, 3.811090053557516*^9}}],

Cell[CellGroupData[{

Cell["ring down", "Subsubsection",
 CellChangeTimes->{{3.8102293937140617`*^9, 3.8102293968211813`*^9}}],

Cell["\<\
Plot the excitation in the x polarization state for the initially excited \
atoms\
\>", "Text",
 CellChangeTimes->{{3.80964157433803*^9, 3.8096416122752094`*^9}, 
   3.809774105823183*^9, 3.8105980491962223`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"Re", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "excitedIdcs"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", " ", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Decay of localized excitation, ``x`` ``, d=``\[Lambda]\>\"", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<Excitation\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8095401462024803`*^9, 3.80954020351366*^9}, {
   3.8095415236013713`*^9, 3.8095415299533806`*^9}, {3.8095451517330256`*^9, 
   3.809545185116693*^9}, {3.8095453811296387`*^9, 3.809545398520114*^9}, {
   3.8095454586393156`*^9, 3.809545659971798*^9}, {3.809559699479993*^9, 
   3.809559710631551*^9}, {3.809599030044757*^9, 3.809599081442619*^9}, {
   3.8095991126624804`*^9, 3.8095991135519257`*^9}, {3.8096052835702677`*^9, 
   3.80960528398516*^9}, {3.8096415548512354`*^9, 3.8096415687667065`*^9}, {
   3.8097292692983923`*^9, 3.809729285191844*^9}, 3.810660596369375*^9, {
   3.810661697124363*^9, 3.8106616972582283`*^9}, {3.810661831021494*^9, 
   3.8106618411032457`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c81f8XlhCZSVZWNiGbjHuOcbnGNS6unb1JGYnslqSSlJKMrJIKGaWy
kvWNSsouyaqIIkXS7/7+uq/n9Xm/zznP85zzueezxzuc4kdPR0e3h4GO7v+/
4hf+FueLtBJ0fvV52zu8hQZmOdGwwAIomBIaOyPyFlqP3iuRDbwPvY/yz+l+
HoAO5cMBTIHNUH2kgpWQOgBdGf2knwEvwd6T5bVz0xvo1jn+aD7gA7jLXei2
Me+Hnoujh+cCFoG/xEL94lofpF290n1JZQnWd443vijqA4VAcFG7vwQJBTJ5
duZ9ELHt4rGIiu/g4nwwhZLXC5tE9aalwmUYr9WKTDB+AfzP4owWzv0C7vLm
xku3usH86TarmYB/4NhWw2jf3w4q/7x/8i79g7RzW8fuHG+HDDGPPgk9OrzX
ynCgTqMdorwbo+3b6VC4NGzLxPVnYDxzqL1uYAv+sS2xKDjUBpML415Hf27F
+gqj/E7dFnh3/mxd5n4GrLgVe/n6UjP07NvPcjuBAS/896RlW0gz1BzOrhpm
ZMQbzTwdv32aIOWn+T8dXibER8Xh2/yfgNjfhry/mswY0y60+82th8CT77e0
6xgzNiox8o9oPgRm2Gms1MyMET8O3RbsaIDF5INfD5iyoOmo+G29uXpoYpDS
aXHcjr4rh9ju69SBO1vWYOpRNuzd0sV+aVcN9LJrsjC4cyFFOEF7UPA29Ftw
X+2L58KWiHcza8dvwdCZb9LX8rjwab/E6uVv5TDFWG6sNMaFXV/F0mW7ymDj
L1+yk+sOrBspYYeMEpD/trZa6cyNInI2f/LtC0FZ4d3JmFhubLDalO0uKwDN
4Boew2vcaFrnENtZlg+GM8Gqg0PcaKNdOLblXh44vx8N2+K0Ezncj7k/GLoK
aX1PpxyoPDjW4HTnxrWLcJ4tN1LsCA8Sz6UVeDzOhGzzI/RfL/OgKgy2BTZd
gIIOJbHktzw4uMpxlcElA+qbClwr7HdhV6zVmF3rSXiycexLVNQudLubCr8k
T0CbjlMsZO/CkUlyT3RGKvTVc+UMvNmFhqJsQh29iTB9L6V/k8KLOcy7KggX
I+DLvLtXdwQv/iSoGyzKhsOSvM7SpSzac8VtQe/0g2A1kDfpQA0vhne6/eL1
8oGNsh/scv286Pt48exeKVegn+7LW/7Oiwk7J3I/kqyBWeLO3qYdfNhCcBOQ
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
xj7KT5Jy
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Vek=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c8le8bluzICJWv7JW9t3PfOMc8xMkxQtmrQUZGRCKipFJJw06JQiKK
jEIqSqRQUVYpSZTt9/7+Op/r8zzvdV/3dV/PeZ9X3CuY5svIwMAgxcTA8P9f
ibOrhTdEmknOEzZ0B3of1LLtFD0YkAuTbr3ugf/1QXPU3SK5gHswoifAM/Wl
F9pUD/uzBDwBURNa1N6IXug43WMx798N4a3dbYWFb+G5/om6H/6fIe/y5FQ0
bw90nhs8POn/C3IKExaEWLsgNfvS8wtqM8DTWh8aWPIKFANgj8a9GUgta+rm
sXgFoaznjoaW/oY5P9YN8WkvYY2i2TiT9wfcmMDcn/8FbGuNMf155h9ILx4J
D8cOsGpgtR33X4fVrA9Nl3hbQW3da15wZh3m7/wI02hsgdNi+7okDRmQ21+5
vWx/C4R71Uc4PGXAfabhOrrPm4E8HvL0Qe8G3OiV9qIhowm+/PzoGTW/EXM4
F+m9Jx/Du4z0B5l6TOh0NkujdvkRdKrosd+OY0IO6YJXVqGPoOpwVsUHZmZc
2sMXHONTD8fnrdb1BVkw95uB3123hyC2WnttVZsNAz6V6F26Ug38N3xnBI6y
YWbhj7ptctXABlvIyk/YcF747wXBh/fhV8Khqb3m7PjR4xxT+FAVNDJJ6zc5
cWD7ColirF0J7pzn+xOjODHC/ACt16EM7MpB4epjTmQ4Ir3d/vodINv+PHaf
gQtXdpm6Gk6WgmKmhcxoKhcWmLkLGybfhpUt6+GUK5uxc99/Gn8GbsIrLm12
JnceTHMzUmKazocea77srlgeXF1+dsHSOx/en5qWuXKNBz+aVucZDuTBKHMJ
WXmIB31OW9ySycmFldWtCc6uvGgRaW1Yn34V5KcX/5a58OH8ic53X1cvgKri
u+TIaD4cC6E3NW27ANpBVfwmV/hQ9wqbqYX2eTAZD1Lvf8+HMfsEr6hGZ4LL
p8GDG5y3oFHN2xOt+mmQ2tUwSnfkRyf2wMaCvUchgzMnTOwIP6YLNDRt9ImC
LKsjjFMX+bH6wk74fTgCctuUxRL6+HHg1LP0dZtgKGLadM9qnh9Dh8p1314N
hFKTCSMBAQHM8neV/7LoDRUJrS8/awrgxHiv9Ey3G9Q05rqWOgigDn91bOsL
e3i8cvR7eLgAlnTcYve7agAt+s7RkCWADPMxDAmLytARpcnGUS2AsjYnXx7m
soGuGp7LvW8F8Ew/eYsojwv0zv2Qzv0jgMlXDxz63OAJA+rPqwO3COLK+fg3
C6N+MHb3eM8aTRCHe95ZDZ4Ige8/3D2fhwpiSJPKVP+GMJiR15+5cF4Qmzni
uLuiImDl5izXzh5BVL9zKO6vfQzw53pb7rbfiv95iwQWfzgOJmcpTSW7tmFO
9ZPS7Lw0SLCqvt1zaBsaXjmg5X0zHRqZJS+sntmGPrnahba3T4N+LIPf7pfb
sKjua17+zQzQCHy0ad1iO9ZPRYT9hnMgZarm5GgihHuV9JmG3meB11ouHvcU
Qr31SLqk2UXIq9ssX5YghK2GQxdkqi6CsOqPlQ1PhFCcP7E58OQlENhRUlBu
8B++V3nbLyKWDSz/hKeZtIRRaSnlAKPQVSBXpferOAgjz6mjF9fCrkLiwaWm
PWHCGL7j7UDfy6uw9rX/QkWlMLL+WzwqfPQa/Ht9Xs9NeQf2+As36XReh8lS
tuT7siJ42+rSjw1CeSDjF3nok5kIeu6etNcl5YGP+LgTu58IquqpXp/0zIPh
y63y+4pEMCy/oaWuJA8+JB17zSEuiupp2TNqSvngq7LEpcYlhqGnmdb4xQqA
OphSvE1EDO89m+zIIRWAZoqAEYOKGB7xMx8861YATJ9VD3TbiWHTurLDi0sF
UJDh33kwSwwPHp1rz2UqhDT9eU96sRi+qA3a/lCkEA6PJy4a1oih2tKBQjPd
QkDSDTnO92JotOftl+eBhfD5Z+/J0v/EMfLk7qjjbYXQdsVL5LyiODbM1XL6
DBXCXcrMg2gjcSwLcP3c+rsQjl3fNGaxTxwZhm68XBMqAmEbE9OJAnEszYot
j/EvAqbF7oGu++KYoEkX94gugqki99Cap8Tz1heWn6cVQf1KVH7yOLGfuyVB
uawIXMrurUvKS2DAXgELh29FgM5GlzcZSGBTVLTnkX9FIMf0QvmPtQQW1VJV
pJiLYcF13L3loAR6z1/PlhEthmHW8PnbxyRwruUyZ5xCMbTf33Dm3FkJlNA9
NumlUwyXNu147FEpgcak6HPDNsVwrLZ0t0WLBGZHahvEOBeDr7fulMpbCfwR
4cha4lUMmo92C63PSeDPM5ltDRHFIOw/UjnOLIk85po5t48VA9OWYMsuQUnU
1Tlqp5hSDG+D0qKu60rimfo22aVLxVAvuI0n2VISJzX+KJjfKIaCluKSA3sk
Mfnyx3fKxcWQdkgDHPZLovr4i21Vd4ohVKj5nUGsJPZeffX1TWUx7GmzPSR5
RhLXX7DIn60tBuPQIeZNNySxXOzB0PfHxcDT+U9z4IkkDqXMmh9vI/yISH7Z
/FoSW8OdRxs6i+Gz+Baf2yOSmFu6UHmtqxjaXuUtZ85K4svk2VyRnmK4G618
IWqjFNYaad4g9xH+SD+W9+CXwk5tmRvc7wl/3li2mEtL4VvhxsyEgWLwi+t3
UdGWwkvhzj7ZQ8Vgs9P3t6C5FFKmX7E6fyqGpfSIRx8dpdCrkJ3nzudiuDWd
nFzkJ4XvOb0Gq4aLwdH+0q79R6TwkXygQsgI4V/1ze3qJ6Vw1MSv6SuBqwRr
vy5clMIso3t7Nn8phn3R7eVPiqXwx0RD/QyxzjnUH3nygRQypyzkpRO4njRp
bPNMCmM1Sl9+JvgD8hc28fdJofrY7eWfRH0BJvZ3A6NSqBW1OFVD6Gvx256X
PyeFuZc/uxp8LIaQ5zuDApikUZ+pjC12sBhEFPU1Vfil8TAt6G70h2J4kWG1
Ni8pjcE+JWxa/cUQ9XtPx2MNaczkHu+521sMMg77z58wlUaVwYr2iTfF0Ftz
1M1qtzQ+U+vPGyb8Pr79tAyvtzQuq/luzXlRDMqx12b6Q6VxZa/AV/6OYhj6
VFZ/I5HYPyb/2P4pkQfjhiTf89JIpTS72DcVg27RK1vFAmmsvat6mJ+Y94XA
6S91zdLoeYw8MlFVDPhyrSzhjTT23ossWCwvhmll7kjzEWk0XNUvf3OrGKzm
VDb1McggVeiST//1YmCIP6wxAzJIN3E9T00m5j9yfLVmlwz+viM5UEjk2ZV8
vj1unwzmu97/1BZZDDXs9103xcugh35ZS2hgMRzImjsh0yiDc5znLcOtikHo
H5Ptz1cyWL5Kf2lgQpw3F4Ft1R9l8HJAmGGvXjFIiGqXGa/KoICkv1+MXDF8
uB3Z62YoizKi0TrlG4vhJGfqDUmqLNrdGzzGtVQEmsHZAd9dZfFHE+dV05ki
yNSsW4k8Kovv7wbf1RgqArMnS1IX6mXR/XrISY2qIqjqjYt4riuHCr1UVlWn
IriV7OP1xVIOddx/OatYFcENbetdy3vkUFcrNJfVqAjSsrftVIqTw/oa8SKK
RBF4u90fymyWQzc3mgv7VCHwj06aOlvtxF8Dsv90jhTCkT+7+SZc5fEiOf/r
tsgCMOCTv8cUr4jb+FcOXTXMA//l89eLnVXxmUKAq+PkJQhum9C4Z6OOpUHq
dkkD6dCEZfsVHdUx52vUPd+MdOB5FFJ4e686zg84bthrkg4V9xb5ioLVke9B
KtvF0jSYzd40m31OHWv1v1+SjT0FR/arVCT2qaMS+/RrbakUiOWJVHR018D0
ZytbX6Ulwss0A5+3vhoY/ytZgGaSCDuYGa7ZHdJAjya26aXF49C4mLrJOl4D
E/yWP9YFHgeGrznfIV8DH0W8il+wSoATDxpv7RzTwCzpffR7O2MhbQ+L9OoB
TTR8sntJ63wYkFQ5/34L18QVo8dpbfxh8JuZr/1drCZeZNrpWn45FJwrdwRW
nNbEsylKKQk3DoM0m1a5d5km9pzU3pzvEQxND7y1Oqc08ZXdwrJPpz+Epwey
1P7RRI5fTY1zA34g6xncX7isiTYZh6XMf/gS96uj0XGbtLCJV95Kj9cHXL3P
N6gqaGHlCyXGaB8P+MvTTLkcpIUPMtOzZLxpUDreJpgUqoUcwwZsn67bgfvj
lxMhMVqYkk7akV5tA0/935+yStNCmwPfj++tMINIo097dM5roQyXiuJBDVOQ
3zKqIJWjhak5+91GwgDONf56tXpbC3WurB7rK1ADctb8je+VWjgQt+Vn+Slp
WAhcDu6v00J9oaibjsHccAc2GD9t1sK5mugwGW5W2CvAylf5XAs9ul51/0eX
BL4pzq/X32jhkHpqEssBVXjWxFed9kELeWoDnpBldEDxgIijzzctnLpfQokw
MYFhYylZ+99auM7QRsnNosCFrfILRotaSLYUjd/21QKWWrRytrJrY5bkJcpY
+C7o2G7zqVNOGysG2w9VajmCd/tRP7UAbaRuiB376+8JPoYytn+DtVGgPL+M
ttML/Cpfaz2K1MZcF8G2um9eEHBVmpmSoo1PTxmOFPv7wKHg7kLnm9ootbMi
94OTP8RslRyJH9XGgGOXJvrYDsJ5/07XLg8d1GXIt/V/GwZZQ+GmFwJ00H04
8f0XyXC4aC+q4Byig+RvWtN9YeGQbRC+NBKvg5wmbtbifBFwg1vkyvwNHVy6
wrXR1OIIlNYefif8UQcjT+3/EJATBc2s2+33u+iivgQ7k2FvLIwXKlt98NTF
XdOeLzy3xQEnkk3Ng3TxzMebZ4dc48A5KlhL8qguemzJlXo9HAe/Jp9tH7ym
i0GsNypufzkGOzpDv1gN62JwgKD+ulcCmPilDj6c1EWNf8x378YnQADjjV6Z
37p4bDzClvVaAlTrP29jZNTDhOWN4/ffJoD1HdE79ZJ6ePXW+cBF0nGIPv0y
TN5fD+cyZ7epMSfCDbkvB7KD9TBNiSQbIpwIT5/+82WJ0sPIBBtZZ41E4FmV
cP6Sqoc652X5JT0SoeRgtGFOqR6KHqAnFT8gzi/7WS22+3oIlaeWFTsTYba4
SPnIIz1csgyscP+UCKRP3WK0l3p41lWV6xHzCeizlWHmmNbDgYe5gf52J2Dp
u8Fa5F89tLRpv6rvdQLEUuz/ja3poVP17Wu1YSfgwJPYb83c+uhr4Rpw7+IJ
2Kj69lW0mj5GGl6ayu47AXIvJ9sm9Ahc3LK7YfQE2AasPaGb6KOyrK7H6T8n
ICdvZ5Xabn2cULccl+dJAjXehEvfwvWRXc/S+SAlCerZ+uXaY/XRlOO68Vb7
JDBhUH5UlKSP+048ehnplgQOvwY/78vSR8rvCAv30CQYGlcPNbqmj6qRgrFf
YpPA99Mppv+K9DHpnmK/SEoSHHmls/PdfX00ZtQ815CTBOtPMx7df6SPwilF
umJFSZD6eMzmXKs+3ovqztYvT4Irdy6EUt/qIzXiucjlxiR4fOrXo5ZZfXTb
IJX/52MSUI6b2eYt6SPNs/bAtrEk6Iq6PhzHaIAxqXJ6f6eS4LO/NbMenwGW
Fr5J/riQBAH7Ci4LChngeVYJz4m1JJhxXNw5J26AG7qnZkuZkoHRrMT2npoB
/iiL/LuPOxnSjdaGT+sZoDC1qsOePxn4tehhQcYG2Kl6jm9tWzJcUyxjtrA0
wMXXG1l8dySDtNTGbGl7A+w4c6DvpHgy3P1vj/xGFwPU45y+7y2dDNpbKh8P
exigEMPPvmW5ZHjCwbarMcAA4/jDQ3YpJoMF476RqyEGeM5//OFelWR4s/gg
LDqK4N9gMLZTPRn2/OZkcUowQIajexQrNZPhy6R3tmaqAU521D6b006G/cP1
8nyZBmhY6PttTjcZ5vp5G35dNkAF572vK/WTIbY7YNerXAMEC8NqBcNkYG5/
MlJaYoCie/i6vYySIaNRMDz1ngG6ySe6OpGSYWvNQRa/WgPcL/gvix2SIa/8
abbpEwNsFauqjSawXPF/CuLtBnimyYvhFoErr4U2rHUZIGP0obIsAutnPd81
9M4AbT2eLQKBW9LFvtR9MkC25m6ZUoLf+kRk+OVxAyS1MYe9Jer3xnSxREwb
YGOzk8hjQp97qPQV2l9CH84F+Bgkw3hgrILqmgGSz65deKmXDIc83zZwsRgi
TcdyZE4nGf45y9tNcRnixwyeCx+1kiHB7viXDgFD1HXn+XFSIxnYLN6H39xh
iIzvylR+qyYTX6AqrEnShtiUsr1AWDkZhHROXvFUMsTIbs5UdoVkKFT+qABa
hljRekHmoWwyKMpoNgobGaKPsWOrnFQyGAl8+dJPNcT+0BBee+FkaOPUi3jg
YIhkPjt7diIftkyZrBfcDFFrSrQsaUsyePwxUrQ9QPCPG/Y9Y08GLj6G173h
hih7f0BxO5G/etWWMNc4Q8x8/NlJhsgn/yGzRwEZhiiapV0c/DsJmk+z7ft1
yRCXPHtTyr4nwaE7nYxHcg3RjftKY9HXJOiYtLU6UWGIwZGhlR29SRDByjvN
XmeIjc/3asy/TAIJmbfnMpsN8U/czYufniZBrLfTh+s9hshudyDj2/0kUP20
L+DhnCH+d3ModiojCT6uiHPCqiE+o+yW40hOgrT/Ru89YzZCJXLU1GRMEow6
B/zrETTC1oVaj0nfJMh+G3Lyp64R5r7bWLekmwQMz48XScQZoZ27ac7Ltyeg
fMLU4nayEeJ7w1OibSdgDwvLD5UMIzR/aXdQ7+EJqDZN0zDKNcKavVMfW6+e
gIDG8y1OzUb481LKEnicgNf3C4dPM5OwOyeeYvA5EeJ6fJO2bCbh6q7SRY2u
RJD/LSuXI0jCpt6D/5YeJ0KScllwiSwJdWZcK+evJILu7eq1ZksS+mPmvjv2
iZB/45nwvzMk5NYxT0t8eByuuSn20y+RsHh70Ym/RcchW+jCueobJJzISJ81
PnccMi55sITeI6FXzzqrJ3HfislY/vXjNQlbI0eXX249DrRjaq1ftgA2jpl3
tx5MAKa91wO7rgBm9iynfGY8Bvcz9Ad7aIhDvjVy2a2R4HV1M3O9I+KC36nM
TRcige/WF+X8PYgS02wV+70iIaQ5LTHYC7HqudCfOYZIUJwb2MkZivj9WFk0
GB2BIpejUZRziMx7Th6h3Q+HLKnHAg+7Ecnw8qlJzmEwVcuE3LeIk6bMTjcD
DsOskU/gyX7EkvKmeE6dw2DnxNng8BnR9NZGma9vQ4Azzc3n9zQS9zPahRdc
IZD0a6VKfrMxdj+2kZJnOQjh9UZ216nG+DTjcFbSLz94sKed8YOdMRqZPr+l
kuIHf5fsHvDTjTFeRrOVS9QPog18hE67G+N6Ym16wC5fOPY4bTTmkDGOxGYf
bqzyhpTG/ijnTGNssuBX2pLsAR17PRWysozRN/7p5QwxD+BY//6xO9sYd2yf
elUYtQ9Ow5qJeT6x//pf0aBv7pDZJMWlXWWM12tuv9jRswdyWg7nb+k1RnW1
fSPSLQ4w6LW8e9d7Y9QvIDmqbXQA4Y3JLOlDxnip/PrsDHk33DDN3s84ZoxT
ezTmsjrtofBpo9bveWMMeqFsTWuwgVEfi0nFJWO813eaW8SaCjLMPTkBa8Y4
KltnGTpgBbcoY+ufWUxQzrves3XVHMraNnV2bTXBn5+EjUKcTOCn38VYDmET
vD2wpjz5G0GZVVTFTMwE3fcoDW0SBqg0V89qkDPBjSPXlhIu6cHsxCOzRUUT
LFu1Fe14rw2aqZRFTTUTfI7vpyNENKGmw3lvmR7BHxt1CQKU4F/AF55JIxP0
EBn3smeTA132A62SJib4rPrYD+97EhB9ez5in5kJDnF+E2B9JAT1lvFyV61M
UFzf4F2UNA8sf2MbfGdrgkV7tt/ujfpLMkw7f4ZvtwnW56WVVQT9IR2TF0Zb
JxOkpAeKyKZthiedxbOnXE1w9Ny19W9526Fq2+vDcftMUIrHM+hgrjgU+S3N
hHiboNviz84lfxlIY9z1y2m/CUZuMp2sGFMBB/2FKemjJnh1qNufaqkH329b
jTXnEPqPGgu+KaXA0L9wnwc3TFD1T+Cd761m0E3J/XqrwASXyWcWLAfNoXrk
z8jZUqKfiJLpHiYriN9+/ZN7PVH//lWdERNb4D/1q3/xgwlma45p92juBpb+
7U4/P5ognNy7Qe3+bliUIr8bHjFBkwcqGiWqDvCpKbu3/RvR363FxH45Otxe
MH5zcdEEozNO3dfd7ASkgKxOte2mSMuZyj1ftgcCzfUaAp1NMULfvC8zxwOm
5bY/q3QzxWX2lCM9XR4QyrH4ctHDFB+Fv3BJZvSE2FcPh04FmmJJvVMdKcAT
MnfrrtyOMUXWoW/i64peULNPx+D7NVNUU9kw8/CqNxgYbzVVzzfFbZuZ9m9u
94YmiX9WMcWmeHrF93Tfb294Plazh+OuKQ51kNXqKD4wtF87Rv6JKTrsHTv3
YdwHGKO06oJGTLFcSpa3YLMfpLgINFeNmSI31+4sSTU/4DSY71j6Zoop+Y+P
bt/tBwJr1e/TZk0RHlGDvS/6gVyS5kLpRjJyGm7AyC3+UO7Lz/CHlYyNB+sl
CtX8Qd18jtWAk4xlPscuUHb5gyFH9dYX/GTMbR5x/ZXqD7syNXSmpMkozG57
6fO8P/Qe3gIa8mSULBz/1sEdAM67/5gdVSajCVt3mMLOAPASvO+4SYeM0rMj
Re57AuDINfUjChZkTPvkw3+8JgCW4/iOhVHJyC1oWEN6GQAJ+2aTH9mRMeLw
x9KokQA4JVF10dqFjEblyzreHIFw7Zbag/1BZPyl4rtJ1DEQOj54d+QeIuOo
2JBQjH8gzHFcGnwbSkb8KZLvEhUI1geXNhgeJWNmAQ6WZAfCkRuKAiHxZLTp
mI3YeisQCrr3yhWdIGPM1wA6V20gLKm12nKeJqM5p1DzmbeBIOM974mZZIzc
WAvbRwKBliUbEZ5FRp1mjwnF6UAo/Zt+degaGX+umxVOswTBO9nGuzz5ZCzx
Cq++zhcEjC4zzeRiMsqJKky82xEELo8cJsvKybh0ybTmm3oQJP04uTxcSUaB
/3KdnxoGQcWOus0CNWQMPvNWTsEsCNgSdmjFNZKRgfoxKNcpCDQrd1lUtpCx
/8OFqfJ9QeDx5bjrWBsZ68Oia638g+Ahefy4TTcZG+gzbmoRQTAase3i8bdk
5OIdsY09GgQ8JVa3HvSTkSftzGOn40Fg+D720bdBwo9oF82nJ4PAn/1e145h
MnaOVlFa0oPgvP7IiP0oGRnTphJomUHQuH/LfPIkGYvEaiMjsoLg+zUKW/0P
Ql9X62OF7CAQ7Ir8b3qG0KN17WvE1SAwWb+tLDFPxuyfHQkON4LgkOqQseMi
GZO3CO7syAuCHM/N9LRVMsZ9FQ19UxAEbecxoHEDBXWDJP+EFAXBbGvo0Vlm
CmYdNCaXFAeByHxRhgwHBRO6m9bCbwaBlUx//p7NFNRSUHg8QOAIJ/YHGXwU
DJCyFvxA4LxUg44WQQoevHCxJITAL+sODv4VouCDOApnAcG38D13Wl6Ugnj+
zchBop6UcM+GfZIUXH3R9qyX0GNnwyRwQZaC5Y2z9H5Cb+wxbbl2BQqWXX6s
eoTo59a9AINlFQo+/v14vpLot3c4x1ZFk4JNT85Q0gk/GPheeXrrUrDEkt7M
eDEIFE3Xwy8bUvCfpT/H9nNB4ByulvoCKSiQ1tHSdToIThR7X10nU5Dj5cUz
UqlBcPfdxbsalhRkk3fb/N+JIBhg7Wj2tyH0M89NVsUFgXqQ4mQ3ndCTakB6
fjgI9l7du7xxDwX7HLczWe4PgrSXmZt191LQx+Vp3QGfIPiiPK+Z50dBpyi2
swX0INjsIWvRG0TB/sHy1Qc2QaB/zsWVLZjwk0lgKZgSBOf+NBwPiaRg51cu
GNAg5teT6el2lIL6JnUHlBWCgFrpbWwRT8FcZV1mHYkgYAlm3yCWQsGnC+V5
/tyEX98dErovUVDzuvdd+ngguDyX9XiUQ/QTyeflNhgI2reWoOQGhTjPBwf+
ex0Iv33z1o/dJPxmZ7FsfxgIfiNTx5RrCH8+Cp36fDIQyE2Ne4XqKcgc1v30
UXQgiOeeI7E0UlBW7Loi/UAgDLnprH18RsFtwvEPm+0Cwf59YtyZPkJfz16r
c4KBYNi9PfbHHAUla9I/nbwUANvv/nB9v0DB16ZGqVHJAfD39BODpysUPK1b
TVYND4BKK9/lq0xmGOn0UHXOLgBk2ipirPnNMNPr1KGPrAHA22AeXaphhk/a
A/Sq9vvDeGnEkYBQM6z9oxJD4fYDxx1rn24dMcOX3V1Kgn994dnZk+bfYszw
/emRK7VDvlAUfnlb0AkzlCn1dA2+7QtepLr6/VlmaP1Kq/YZ+sKnNytrh2rM
0ChoP/9Nfx/oWziRErFkhg9NeIo/53jBU7Pz2YmJ5ih2U5nxYIQ7bNg18OVs
ggW6Tx46V+huAx2NdMnwJAuc4aN8j5umQqbyG2/nVAssvWo3eDmeCmKbO0bF
Mon1vGflGQXWgK8ejFfmWqCSWObpoilLSLA+9/1towVuZL8ebJNuBgwWFrNb
Vy3Qnhp5a54FoaO2VX2FwRJL7DFVxRQgUxbChpkssT/NW0gxmgRirNpztzgt
sT5BRsNhwhCwTfKvnrAlqs/6Xkt9qQcJ5PVFVwNLbBnO1XzwSAMsqmP0ESyR
ceFausyqOvBI/Y2RMrXE+A0PG3xBHfI2/lz+YWWJ+a4LEbQ2VWhqGViN22OJ
r7NXbTY9VgAG45oNedGWePPl1V+n94vBHvJE5/s4S2T79nlL2LsdUG2+LYs3
0RI9Unx/jn0QggDbGJkTaZY4sMNJQeEnP7TY3/n1KMMSXzqIZbCs8oIwfejh
3HlLFF7K8ftPYjO8cSVZ+121xFTZaCHPdEZQ3BfMn5trif+EmE/TriySTnrl
fewvJPh0WQ1LXX6Qhn3f3OS5ZYkJvwrIr9LaSPqBjCGWZZaolH09SWx2mJR1
QEMvscISrc7cqnKp+kOaDvZhfFRN+OWJc2EDa6SCI21Zig2W2H7G4ljIUQ5Y
if7n7ttsifJ7C/rS57nBMU5O9sYzS3Q2ymuPvs8HHElpddxdlvi5bdmsfes2
CDtn+2n2kyWusj29/4YuDuSyd7J1DFb4sKapaemYAty4x/r7N5MVZm2VN2Kt
V4SFKt16eXYr3Fof3PxmVgnK6nKo13it0HnwQHyXsioItO89HC9hhVwSos8W
09VhfGS8nkK2wpMlLy/EcetA6tZ/Nj0pVvg0/PmWq3oAWR0dX1vSrfD77I8B
n1KA3Oic6PtnrfCSV/sDQS6EmkGj4qzLVpjS9CfH/SjCWG7SimOJFQbdZWUd
tzcGEzm+O4NtVmjdr6r4e9wEbD98xZedVpiUMPV291ZTcEl78O5xlxWWJStL
6pibQsgPZ8Yb76xw4pWmYUKxKeRW5Lp4jFvh2Z/r6mJuZFjRVWIbY7ZG/U7P
4fpKCrB9X7vex26NokE31fQHKLDl6muNNi5rnCgqeWPIaAbyq2H7SgSs0agy
4t1LOzNwaa6vCZS2RlbzHztFJs2gxtLCd5psjX4DOz7Wr5tDy9L25U8W1pjd
fLYvTcwCXt2ZyuymWmNRY/yGL2gBo1xnH1c4EOvydwVlEyxgS0/fljAfa8zV
ddrFv2gBIXu8W/6dsMaPmls5nvRawubc78OGqdZ4T693wnjGEsq+Hl4/ftoa
m94XPDbcZAUTBxIMOS9ao8rIXbZrYAV746/XiN20Rvk55qtcBVaw0irV51tq
jaolfNfd6qwgh63sT+lda2y5mKIu+9oK+s7Vq2rVWqMUG8OK6ooVUIv6Sy07
rJGNUShRytYavk/ufZ7x0ho1+a9dcPe0hlSl8Ym3r61xR+qRHYLh1tBaMye1
94M1PnOxymfNtgaP5aOmhR+tkZFFpcD4tjWswUavyRGC/2G97GqdNeg/580N
/W6NBbyKfUsfrOE915WG2mlr7OZ6wUH6Zg1HaGJDK7PWuPIvYZhpwRoqB5W3
pyxbY4jqlnOi/FSQm7a+cJWTijYT+3WyzajQpv62cpiHijtqFHJYaVTwidzz
WlqAikwU39U1NyrkMgRyVeyg4vUPVayph6lgSJlRmBenonAd9bXQUSoMnIq0
0pehYlN8z5BOEhUEt5xMeapMRd1II54tF6lQ7cR1k12DigNbX3n0XKMC7VrW
U1sdKnJ/32IuUkSFmeH/vl4woOJCw7DTv1IqnJEu3PABqOg0Oiq3t5IK8kHy
YiJkKgafEqLtrqVCx91KkrcFFU2adh3of0wFvz+67reoVKwOM+WZaqYCk27T
0Z92VMxyOfkuo40KBbHmOep0Ksp7HXZu7aQCNnc9jHShotKQjeqpLip8Ynbs
f+xOxZB/DQvDb6hw1Orj/AYvKpKbam1e9FJh21kffnM/Kgo8fvbCop8KNW+n
1E8HUTHy9wvuPR+o4LAtzP7NISq6sbHUrg9QYdZtKVgwjIoH4xr36g8R74v8
4xmukYT+g1eKOD5SQXmcrTzvKBVlR5JkDxP4pXzmi7F4Kj7kP5dyiMBBwVu/
yydRkcvrp89GArNV32ALSaWizvCtfaoE380FadkHp6kYpMm07S9Rj2xUTlnK
JPwsmlamE3pGjmv6wEUq1nLMUWwJvTKCmzNCrlDx810l/Wmin6DSidr861R0
F1AQVOqhwj1S80hPPhWHJTnCN3VTYa4nZxPTTSpKB0z+PPWCCnr+4VpapUQ9
VXGR2+1UOLZss8/vLhUvMnfnBrYS+qQ23O+ooeJTow2sb+qoYPNwYGixnooz
GqnS0dVUOE+tZlF4QkUOtsssz+5S4b8I/z1n2ql4tsUo0aqACh7sxkmNL6j4
/ed9x+SrVCi6LnT3VzcVeYDk5ZdF+NX2agPtPRWl+kQu70imQtieEoUTQ1R8
MlexMhdLhYfTCfTqYSqmDOzkiwingvFWzduC36hI+8XccdiLmE9Ajt3gIhXN
9w6/PqRPhSsrYTGca1QUtbsifl2FmH+mTZERow2WKhmKREtRwb+OYSGXwwY5
DhpfN+SiQgyHf67PfzbYufDCdOOgNTy5gc8vitrg08CCpIpX1sCkIfSnTdIG
V/M2RPI0WcMZ11dmOxVt0M7iwfz3QmvIK9OY/mlogz48Oav/BVhDuy2DUeRe
GzwYe9F3+YsVcH794HfLywa/rGW5i76xArvI+5kf/GywgalAmOGJFQzk+o0a
BNtgH29j+NIVK5ieeZnOkGCDUg27ZEapVsB/4crAqXwb7J01lNpWYgkcfVve
hBbb4L7KO5dfnrcEhq0Z7a63bVDsyxPYdcwSfuYkVitV2iA1fEy92cES2gr2
Z7xpsiHmmVfnu24BUVVGJtuHbbBl+5ur4lQL+Phm5PYtEVv8kU+cjDYzuMkj
H91+1RbjBj9IerqZEnl2WWDKs0VG9t3h7EamUPvoVKRJkS3+ZAuQubrDFDr8
vkU0lNmi3lPn77GfTOD741uh9xtsMb3Q54DlPhNQCpQ9kPvZFm1jljMT3I2h
ullqX6TkLtzx2YVXO48EzaGiFNk7BO5fvwa7tWFp/lem8L1dOH72lW2FgDZo
RjcN8d7fhX+Lgy6qvNeCW/Ge4Sv1u1Duvl6sm7sWZJ4uLHzTuQuHZuQeHQ/Q
BI+bsoyx33dhwXHDFycT1WH9x+V9k/x2eKZtix/tghJcU05g/ipohyV6uW06
IkqgGxJw5+M2O+L7++HCvtuKEPpH91+PsB3GP8/4G9ukAOOLHzIapOyQUXB0
nXl2J3SxCDee17RDjQrTeVVvGbghlids5GCHMwYnJhrZRGFzmlqHkqMdXptk
M5fUEYH4Py1hIs52mPtXtwX8doBH21jnuqsdBjCud95s+w8kDihEt3jbYcx/
DmcdMrfBzdqaPvMwOxQoUAxxt+ADQXGL47oRdqgTPMc4mcgLKWkfFHdG2uEW
xe4f0MgDAe4rJziO2iH/nxqxukObQX6jifqrRDskL54Kf+vHBndtX2XQztsh
1/pNAaVdiySRh3v1TbPs0J/7RWbnob+ks+IzYxqXCH9uZg58OfeHFDLHZySQ
Y4dNpdoOMs+mSMPuRZPM1+zQZvmYl6/YOMm+XSvr73U7LH8nxvQwcZjUotoO
E7l2GB4389rqfR9JPcd5qj/fDqvvivj1hD4jFWz8fqmjkKhn5h1S9TyCtOXg
UZO6YjtM2Ly5/G5VGynpHef07RI7nMvbsSRk8440Bzeu5Nwm9p8PN1a/Mkzy
ua1CSb9jhx7JJikXmMZJfXzNM0fL7XC43PR3acAUqWbsq7l7pR3q+75LOcz1
hySzK+KPzX3Cz/01rUer50mXH7Lkkh7YYWY/Z1ev0wIpKn3nX9E6Ozz4hv+d
/4VVkr5acNGXJqK/LTFTI9MboSF2iSHgtR0mL0e6nfrEBX/vjc8k9tghvukx
l1TmBtWvPcPXe+2QPlme/diIB4os7zS9fW+Hyj7b5m6n8EKaoFsCjNgh94jW
8Tdc/OBY0bAuOGuHds//sxj6sg0yv97+pTZnh5SaC+JmUdvhueClz9S/duie
R/mUzCkEhnGHniQu2eF6rtDFZDUiH1ai8dOM9jjBvGE99uAO+PU1Ye3ZFntk
TZP4cuqdGMhtPTg9LGCPFzweOXzcKg5eVi6flrfaY/e4+/gVZ3F4V6HWqCZs
j3r3wtH2vTg8jvsSd13KHrersm4vfC1B3EfJq+Fa9pgp9ihurUgKWqxUf57V
sUd5crXR1yEpWI4T/liqZ49GDn2eavzScGh07vGwkT3KvVRQ5DguDQ6VxbFU
M3sc4luKqdgtA+LWrCuSTvZIldmk8mNIFjT7THuEXOzx3m6zClc2OTDbl3CL
19Uerz0K+2upIQdBYYsO63vtUfSESXhhihxUX50qH/Czx4oDN37ayu8Esx/d
+84dsccnHK6jlU7y4HyEUzs1yh45djzylTwqD0EMlpzxMfa4xzSkQ/CGPJzl
b3l44Jg99o7NSCZ9kYf3htW8FiftUd+1hC/BVwGCzmS3rl20x862KGcdB0WI
3dp3Zf6yPQ5kiV0bC1aEjHzekB9X7JEt6BK7ULoi3H+QJjxw3R6/aHteE2xS
hJWPsREPiu3xIfuIs7+UEmwOqLMuIz7ufjYyFu8yVALx2Xnxwtv2yHRupqhp
txKYsQR3ZZbb444sx22k40pwVtlT9sADe7Qrjt9X8U4JCh5eX/WqtUf+/+wH
J74rQbXJwFuXOmL/h+We0jUleO+4O8G8wR49ng+W9Eopg0Q85YPEM3t8VhNi
3rJfGTTZE+9tbyf6D3j/b1+sMphdaEzmeU7U/7Zb8vRpZdhfoqO+9tIeQ6Vr
Ys/dUYbq7p3pH3rt0Yo528F1VBkyJZuLl97ZY+nPKMEzs8T+SOem/z7YY6x8
JxoxqICEaMq8+0d7lK2//E1ISAVWQ0V44j/bI1+Xa4yljAq8b3sgnzdC5NFj
+NKCmgqcPTS678uYPXKxRuQPmKtAUMvRmI2T9lj9qvrWZpoKmAluuSj13R65
42oOPXNVgZUG406/aaK+4pewhoMEH++H0ZQZe0zJt+ldj1CB+74h67dm7fGx
poV2exzBx5WrOfXXHs392y0n0gk+T+1dnIv2aEhdlTA+rwLiD14FKi3b4wOZ
rbYS2QQ/m2+S7SrR7+B1z/TrBL/byo3gdcJ/Pq652AKCv+JCXeYGGpbs/3rt
300VyGBS6K3cSMOBAZ355VKinnPLdA8zDel2ZpfT7qoApcyFfY6VhlHsOjuK
KlVAjOG3pAAHDZV+nBO3rCbq7U4laXPS0EHkKcTUqEB/iaiL02Yafj4tyK/7
UAWqlmvConhoyPfnjOGJOqLeLtuMK3w0ZHZacXKrV4HAwrFb9fw0jAg8zfSU
wOR/sa2DgjRM+L02XE9gMWv+TyvbaMiR/vy0MYFXbtxZ2PEfDeMX/t5yJvj6
Z022wA5CT9bNfob/1zMbUPIQpeHM6fV6fUJPRs5hi+PiNLSjXpxnIfQGTrN5
F0jS8JqOtrwf0Q/ZJC+uVZqGcVTHFWeiX7FLOtmjsjQMaFXhGSb8WP7WVcUs
T8NSKeNNK4Rf74z8Xsko0lBIf3tWOeFn1bnVCXNlGlIYX9nNE36fGctiDFQl
+J5smnhLzCNAT3FHmjoNTSzsVy0vEPXOtOrc0aThxXk2Q+czKiA6sof2UpuG
PFoi1PWTBH/qqZTNBjQ8LSORJBRN8A+JFagY0VB9cGr17GGCX/XhYzug4Wh/
6HReIMH3fvz3eVMapt7Y9PmyM8GneIyzmkLDgiMGWvG7VGApXkC2z5yGPkwV
95jMVKBSluy2lUrDfo/alh9Efk8fHTyia0vD4WM7q+1kCb3doedc7Ih5yQXH
0oVVQCQyv+2qAw2ZvCqsyczE/rY1VTF3Glbvv7P4vEcZ8PC42o59NJSz50tT
aVOGuf+61IU8aejs2TVoVqcMboeva/L70nChVp3xzA1lUBI21GU7SEPNnDK+
FF9l+NImqcccTMNf3yiBaY7KcOnwJn3GwzScpI8wks2VYa1twGAlnIYqazk4
JKsMXYejYSaWhuXOR55WjClBorAn/jxGw+ydxziP9CqBdruF8fcEIn+eNuJ/
W5TghvA209EkGq7uzV+Qy1WC4PYas/enaQgi8tRAByXg2TFn03SN6FeLyau3
ShGetg/aNtwg5tuzfSTtuiJEhbbuqs+j4T4HV1vmVEUYbj9vX11EQ6qTq56F
myJUhqrRb5XRUNZM3lqQURFoHYfcMh8T5+Hh0hzNVAEuhH0L8hgi/HZxOkXJ
2wlCZjGHd38i/LE2LRRJ3gkF2zZFmQ3TUHjkvmt34E6oalBMVhylIfcoualO
fSe8Zg3JXZii4UvJ32NNLXKw+drft5nLRF7SjcI4ifdN6tONRs1Cu1HjUNI3
uX/SECsgwi3hshs7qlpkZ76Lw+2dzJ3hw7vx4cfcuY+NvNAjbLx88MtuVB0L
4cmL44UV7jhF/9HdOPJaUOuEIS/Y/p3LcJncjULHJNju1fPAXMvobtIMgUNc
uvYc5gZ0e/qRlcEB57bRb5+O3ATvM078zhF1QKeJvyS/pxuBMfGJRJa4A0aM
HTN0pG4EhYjl3WckHXBLoZ5zaS8jHHMNq4mXdUAGAe3UxPENICXnfdRHxQE1
FD5lb+JmgOBmE2ZlcEB5JoOLxyYXSNnVx7RljR3wqYJtQSXzAqmlpN5fzNQB
r8YHVbVL/iPxZ6h38pk7YMnTIwsFXvOk+j0SZ//ZOiDnrLQvTP0mscxt2N68
1wHf2zRXZdHGSQsV2RmjHg4oGxhQTksZJU0dVGFi83ZAOo/tN5fGL6TXE26/
bP0d8MzWm0z5fp9ILUV/fEIDHdAfT7WlfxkgPfBMG7i43wGrTcRMxL37STmD
tc+Ggh1QqS3sqXfoa9LpbFsDhlAHjPE13qHL2EmKp49VSIY7oMfeET+Fna2k
UL5YGfMjxPMicXed7z8k+XTzXQuKckAhS/wnuOsmyfH0bd6MGMIPNaz/nJJI
srTElMpYB9TMUnpCO3CPZMjSv9J7zAEHNM4MTLI2kJRbD4YuJBDPt/jQt0g+
I4klME3+d4LoT1U83//hC9IWo6vukEz4Lxn16o/4G9JCTYfFyVPEehF7b8GN
flJLqaQo/3kHzCvtURJX/kJyPP/hhUqhA5aOSFtGh06TLHaFGO8uJvReu2d8
/NcvkgEna+2REgeUfCZEW6qeIYmd1CxouOOAVNvDVekKs6Tv0WejrKsd0I29
4RUv+zzpmCdF2v+ZA4rB9mvbkpdIJaqVx25MOOCyq/TVbhIjHBL4vVj7zQF1
frR3paQwguaSasSbKQfMjD0xcKWbEZpaK/YzzThgrvV+ixfuG4n7QYVz0IID
nk6fuOkVygRscffUtdnpeMAq/oZ3LAt0ef4q37WJjtevUIUf1rNAlpnKzkAu
OqYEZpX7LbCAGM890Wu8dNSknvLrOcwKuoV3ORmF6DjKHC4x4cYGAc/Lx1/J
05ExatBUip8DlO/+9JxQpKOuafCanAUHzJ1X+sigQkfyvhW5tKMckOBW/lZD
g44PcpZueg1zQPavsqYrBnT8/J/jh9CCTbC394fBfSOink/DUc83m0CqTrH2
JdDRa9w96u76JqhILCtfN6Xj1oN8+T57OKFDoCzHl0roh9U7lmxckLE0JRBv
S8ens2KKGupc4PBZ4Vy2HR3PnN0YEOfKBcO37qS8cKBju5yLp1YZFywY3AlX
c6fjmITxV0OzzbDTq9R29SAd42TPCq+4cUPHdf2K2WA68nRPpS3EcIPfh07e
ycN0TFJlvRCczQ1FdlO9PRFEP+u8fV1vuEEMFF1vxdExNOrImpIoDzyJefz4
ejwddxo8P/OfIg/sraGKXDhORwVdrsF2XR64qnRwJC6ZjveDPcPc7XlAUPiu
/+4zdDy6vX3teDwPPHAiPbc4S0cHDpaxoDQecLjQJU86R0frxvz/+C/ywDmO
Xz/lLtIxLUfB9tZtHuBcVAlfu0b4p5Ce/bGbB+5oNvX9uUHH9yxh/V3vecAq
xE7nWx4dN/T92po4wgMpEyFLb4vouKuDkqAyywOM7yoTbpcR8+q0kCrj4YV8
XpMvN+7SUe3mi9L7W3kBbXpMsyroqHKnlSFehBfins6yxFfTESX+sHsp8IIw
w4mA8Bo6vj03oBmjxgv1Bls6Ax8S+0m2Ik46vLBQpXHG4TEdF9L/iXmY8MLl
6dZpy0Y6xo7uqj1tzgva8g520ETkyyOXKZ7KC2H54Vvkn9LRtPTykwd0XuD7
yBQh2kbHsr7g0iUXXqjYdvEdfwcdKfbvzVj28sL02QdX1l/Q8az74Yuhvrxw
5gVlee4VHc3G8zvfBvCCIus7t+/ddLzFUPVgZT8vdJr4NX5+Q0fv48zZPw/x
QuCxv6J9b+nYOtRVdfMwL7DVnzze2UfHrHdu5nLhvHBzXvDrk346SnKKXw49
wgsUtRLygw90XFHMH02O4oXRAzo3Swfp+GPtaZhXDC+cuNXOmveRjuOPTqWy
xfKCxKhT4MXPdBS8n+8XRbxPmkUnO9NG6HiT8su+6hgveLhGKSZ8paNbf0BG
TTwvrF9iy4gYo6Ns3ZV9yQm8cKMn+1fQBB1/fnRlFz3OC4abd9p7fKMjw/qR
NycIPGhZV0WfomNMJvvqfQKb7CpyjvhJxz+cogLlBC51OLuW9YuOBienVwII
zLcnpqj6Nx2/x97kmiT4Y/b5WvX+IfK5oz9PnsBffOxm/szTMfNICo8aoccq
yODSlgU69llH1iwT+quCZQw1loi8ZO36mUb0JxTB+4W2QkfplX/cn4n+E2NW
UkLX6CjhmBe9QPjzPX5C6TyDIxoc/pzcT/hHS+55W8noiGGuJzNjCX/r0hqi
3zA54sPgi/MThP9imbdEf7M44pM//LxCwbyQevHCMx52R0xhToMtB3jBOS+Q
147LEdcuH7J0I+bdVOxQG8ztiHs3v/9c5skLcnfA/SyvIx7t2LX2zJ3I3wOB
210CjnhAUdl6N5Enj0cMu6a3OmLnML92hx0vdDRNzXEJOeKZNicJViJ/l180
o42IIxZYZUeNGvPC2uuy8QNijuhfUp73//e/37vLp09LEHzPt5hNaxP5HTn4
/oWMI17E1FRZ4jy8+7s9xErFEbFa1FuTlxdIK0yCQWqOSE04/kePg8jThplH
pzQcETa0M27eyAtHONtYn+s4ImuOjajkHA8ISITmmqMjzkt5zm/q5YFYWXeK
v4kjbhzl3p75ggdGFS2mTpId0dBL/9lYCw9U64jotFk44qRjL4m1kvi/sOns
Its74qW6EyFK6TzwmPYg3Ge3I1Y67sy0OM4DUs55Qkl0R+Q/PGKhG0ncX7yO
+LW6OKJcdBj3ZS8euBAlsWbs5YghXSZlbjo80FMYowRhBL+S+b3HVdzAx1BT
px9BrBdUCKdf5Ybdbr8p2pGOGHl24+ltSdzQyx+wV+moI678eTkf6sAN/cn0
s/+dcET58xtTdWY3w5C/6u9/5x2RfK/4Q5rEZhhTGK+uqHLEn3JsXPeI/3eZ
VHHjsmpHLItrKD1nyAl+o26vSmqIPFiksJmLcMLktbdjN+od0RdH/BVHNsF3
rmbBMy2OWJLcfHbWZxNM/7oaFdjjiNxteeqzPhywcN/eUGKW8Penz54PVmzA
qavdtWXOEXssS30n5NhA7LGQB/NfR7xlvePjIAsbWDz9emJy0REt9BPkYlpY
4UpvxIu7G5xQbKlwIkeXFfTnr+wx4HVCt4yfJ4bFWCBW+0uUg6oT6nOem2AY
2wjrD0MfnDzkhAUtS6tYtkYaYqlKLwhxwoXz7vt53ddI9Q6/PRtDnTC+V4P5
B9caKXwmePPfI044oL/xRWvwKmlS9qC/b7wT1rr+qtuuuULqueS/nZzphBwC
MKrXtEgqDneL21DlhJskkne9+DFHSmy5untHtRP2HNfYWJc3R/LgGdypV+OE
zYdFFLoc5khCZS7vQuqdsKRthDO04Q8p46ujynCLE+a4u0rXZM6Somj2I41v
nbCaqYd9EGZI1qpmlNh5ot9Mqzyl9AkSQ1/fhvB/TkhuT3LlYZ8g1UT7Nu5f
dELhZu+GvSnjJInWJB3XVSd8szxhY5I8Rlqit+7UZ3bGBZa7naSTX0mlR3Hz
Ar8zuvVFSZYZfCZ5iL3u/CXojDm5ZKlmyieS4LN9KRPbnNHLQ/ruc7uPpMTN
8Qz9ws7ou7W29VHgIGlPfsPsAylnvPJks8yukn4Se7t+f5imM77t0FuKpb0m
Ne7vvLBf2xnnxpotV993kcJ59th56zpj9fWiaQHuV6Rhl+jnNENnLHGMjz13
/Dnp4Y/aR2pkZ5QkCy7Ox7eQDp0zj9pp5oxb485ofnvaRJLS7tcUt3BGJtJN
W45tjaTM+L/lPFRnrH8sL5tgXEsykzoZxGbrjPxbz3a1Dd0nrXQIyDLYOeOr
Dev2IbEVpAA+rbxfuwn8w5lv8VwhSaT2qdsEncBfF7fe6L9C6nV12P7ZyRk1
eyhflfVPkdIYRvveuRB+fDu0bBdqTMLisPNdrsR+1S1N+eR00l/Ljbva3J3R
Zv+5O/wlOaSy6fObGvc5o3nvyKWJl4WkbbpVSeXezviP+2KkAa2C1DVkbFzs
64xiRssJNsfvk5KOv1m95u+MHNJ2ut13akgznTNHTu8n+ILZK/j/PCa1u6sE
7g9zRnd7Qy/Z4qckPu+AR9cjnLGl/Mw3N6c20t6AfK7Xkc64Z9+QwB2WDtLf
0C1VmrHOyPVuc+8ptxckqdR/S6tJznjQ7lHE2dnXpISqJ6czLzljpb+GgZRm
P+ll7cKnlmxnVFcb2J8/30/a2qCmNp/jjBXvN2zIffCedLe9sM8l1xl9jnVS
tqsNkD4OpYhI3nJGOc+ptRWBjyR9VruKB3XOyG1zlvOy9QjpJOcpxslHzljg
+sIF80ZIb3hbHIQanVGW015edm6EFCCsuXisxRlTYi+zlF/5Qrqsts3E4oUz
TrlnVGcPfiXNuQ6/HRhyxh9RXsMz+uMk/F8ArwBQ/2EZJg3fWEC44ZDicIPm
PotmUng/4VhAUIbxti7L5j4iccQcpOVYQEfP/VVkWOc+UYaoZW3uWEBs+mZc
u2noPpyL4bef8FhADNyi1C2s6D7okBoK0vJYQFbToljf7eg+gJuMrjb3WEC0
cEtKAG/pPsygxQBp+VhAd7FHJnCu6T4Xpv5Sm/tYQOjU1egf7ek+Yqs3pc39
WEDYgmHODyvqPq6wcPf//1hAio0cFEBo6j5mEaO9
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
xole1wd+XhZ0ztEwxp7B3QPhKj7wIuqHZoKOMS5/frTznpwPnNbMXHY2JLDM
UukJAR9Yrfl0nN3OGBUCD7B7z3vDZHlYuG+wMT4aP3b/d5430ITXP5WFG2P9
Oa/l+VRveHrhtMm3KGPk8nNIrTnpDddDcwX8Eo3RiSvjUYKHNxwiPWg8kmWM
rBzrHAflvOHTm9X1Y3XGaCH9JCStygusjE753Gkk/BftWVgv8IKmOq7Xs83G
6O+zpKaX5gUFl3deDew0xry9ATwifl7g4oWGwYNEfp/1fpyW8IK3y4nJYX+N
sSrn65DrOU8wOsI5d3/dGCvP03l3R3pC7XCW0yKDCZZoJfJyentCRtsN2eOb
TDDsPcc0F8kTbNI6n0cImSD/tJWA4HcPeCGyiTuaZIJtX+RXO9ED2o0z8hIS
TDCpr/kN+2t3mPB+2BN12gSnHrGKZj5wB5bkcYaQFBN8tXbUjOmaO5h2qh/1
yDDBbOPBJ8Vh7vDC5KO+UYkJ9u62Otix3R36TCVnmNtM8AB7ab7s/oMwRqnT
O0tvitrP8lsna9yA3vrD2IU4UxyiW2Uo9XCErmYHidAkU6S2OR+K3+MI6Ypv
PJzOmGKGoaqc8wYNRDd3jYumm2JhxlUy42UaEBeLybvFpui7wFJn2+sAceYX
p/uaTfGstXqug7490Jma/tq2ZoqsX/7ytEjaQlf9k72rdGZ489TO/U6/bSBd
GkJGmMxwIfSC6EarDYiyqv8p4zTDvprbvyMP2AB2SCxqCZnh3hMG4KluDXFG
Gyv7dMxwWZRnSlreAuj06+ivRJphldwJun1axuBiNNU9GEP8p27e+NtHhloT
gSyeBDN0SgzMGj5GBl+rKKnEFDMcGZV1PnbDCN7sI5l7XzbD5I8MFYN8hlAS
3pEl32SGM/4qVgVMCKuRS25erWYouqB5qswEgBYjI1301Az/mtSaN54mAUdS
yoP/Xprh0NLM4jMWPQi5aPXp1yczVJauKenYrA1Gle+kH9BR0ICT9PMcqELR
Hdb5eSYKMofyv393RgWW72k2yrFTkNf1aff73r1Q+SDfooCHglvGF3S2HN4D
fJ37g2LFKShpnMLxW1cBArsvaDdIUbDbQvB3wMfd0N3TwjgvR0G//urnYSfk
4GS/eM4hFQq+otsrK9UiDZOjk41kIwp6F+uwubqKA05sSzppSsEDz8juHqxi
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
N3CwPq6wcPf//1hATAyLiyEMtD5MzXBv
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
5F/n9411DwN3xozO/XNqmBcZLuN+JQxK1d82MjIexs7jvS8la8LA9LHQ41di
h5FaIlzUrngZAmNbfKXcDqPpWnvZY+ZwyJAYOZPqdRiddr93eSYUDvX1/1yY
Aw7j+cJRWVe1cGBfE7UZiTqMclF2s53u4fDAM1AzLf8wvqz7nd7WEA4tW+NV
WEsOI5vlkzCtgXCYz8uVvfD6MA6673WwnQ8HwuAHYXLLYfTq1uJNFYiALrP9
W7ZNH0abzS97FbwjYPm7xrr/38M48jpthTUyAoSvWvwbX6c/3xmgez0lAs68
Cf5W8586agt5U+9WRsBm+Y7WQAV19F5b9fyyJRIUOMKSv/mpY+ymf7nfr0TC
K9YeiaZgdazuPM+QnRQJOgyyr3Mj1THJuUyeMzsSrGb6v55MUkcfUUZXgYpI
uNB6SLK7RB13CpuXDv+MhI36uNclr9XxUoM44dRiJERVjJNu1KnjwpaeE+mb
aXD78U0fYoc6Plj17tbaQ4OKazOva+fV8SHVtUtNmwb6lw3MspbVcdOxQuI1
Exq0BdwdusSogQ5X9pklWdLgq5vplsOcGmguznXhszMN3E9mp+zm08DEzlMj
3J40mKUsSS6IaODqCWZntvM0YDR4YPZUQQPVIEftYCQNYrTWh2IPa2D8n9Bu
yxga7FKx9qVqa6DiCoewWiINxPdtThW30ECi/x1L5UwaFO61k9psq4HVN72u
E/NooMpVXDHkoIF912e5RB7TwIjx5PAdbw38EOZYtFFGg09LZb6BARr455Yw
/7bXNLCbY2M+GqaBt/onwj69ocHIlFOqcpQGqnt7b6fU0+D00CspzgQNDK6Y
m0pppsFCD0flTIoGRrneMkxpoUHwB/cjrZkaeL7YhmL1kQZxVbv9op5q4O4P
C9qsPTTgKfdkdn2ugT07lEM3+miQ9aQ+VfeNBv7j6pApG6CBRN7egyJNdH/k
G0Ilv9KgON2ncr1NA0fWbzw4PkwD9aS3Rwa6NfCE6dFes1Ea1MYIj7wc1ECz
3FZ9hnEamEb4+6VMaOArmUf7zk3QoDOojfn8tAZ6P2XNvzdJA3sf8dvkvxp4
PVd6e+IUDSY8gg/Kr2vg1aQTITrfaHDWsaNyB7Mmsip9Vi+h4382UuY/dtDx
NpWAMToOM7880sytiduGiWe76ZjVqNfvvoAmmh/3s75GxzdAjiVSXBM1D2+4
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
KUSSUC+wzUTuBxEC9oR9PRVFn8/rG3eyh4iwSUdJqSGBhH4EvX8J74iw6+bt
z9fukTD+C3nL3TQibOvi+uSTR8LE6t/u5XFEYOCJazr2iIS3wsVkY8KJ8Cst
vFSmmD4PqfvN7h5EaMw+HfepmoQOx1+XbVKm13umpbNniITpBEjeXWkKZxee
qzGOkTBc5uhPoSem4KyqKPdjkoTETd4nf6abgsWr/fyVMyRMISrFfbxoClK1
//112KDPs1yvoEPVFL58Gn70UNAMlR89ZFHMNoFOruNZN0TN0O6mXPKDOBN4
Z92dHLTfDD9+mds+FWQC5X3vIoiyZsi27VfWe7IJJAyX2M9qmaFQSxbnQQYT
0JmjcajZm2HT2+jp5xbGcJ9dKrDpjhmmd4g7nOkwpH9/bBeZsszQf2dr+/YX
hvD89TV/nVwzJOm8ZQlNN4Rm12/nKwvMMOxnsdiosyF8r3joU1JJr3+Dn6nk
twHIeBw4k/nVDG1/v734b6sBlNbsO+kvdgQpExxflAT0oMZHSP/A4yNYxKEB
V1YBMoSz+LWszDGbz3Z4u7I87IxWaJahmGOZfPBt0qwchP6u9RW0MUf9qPjD
lQFy4NA4/m7jmDneunpB2CxaFkTPHAysdTJH5UElMasiabj/vLzL0Nccd21R
s+hhlYRCs9Y4cqI5xvQ0BEbOi4DgixPquknm2HyHg3UkQgTiRWbHlZLNcSXB
ezKFWwS8Fzi1uNPMsWfy5uh/6sKgmGbzo+eeOaq5e/XH7RSA8vFRQ/tic7S7
VPZxi9tu2H/k/G9SiTn2t/6WjbrFDSkvmDMJZeaYjl3FHfW7ICBG8q/QS3Mc
vr+j6L04F6greOWOVJtjFLXa5/3If1AZvMzg/pGu11HiaovDZvj7dGI2vN0c
mdh6FwfLN4H8aPvQ3U5zPBjQHL+ykwFyjR9Xd/Sa4+I/0tPK6CXCYHBK0fRn
czQun4uhGP4l8BRFZG39Qn/+zOZ7fKy/CdG7j4fBMN2fQ2e++Ul/I9QbG3nb
jZpjSU3KFp2mEcJasLLD+XFz5EnvjRTp6iWoFgmbJ0yaY5o48eET22aC9ygb
Pv5mjq2xASITN4II+buX5Bp/mKP6lQZ506G3hFHjcaHhX+b4nYnV+6lzH4FS
VLmxe94cPSXv3a9g+0ZIGH00o7BgjhvZH0beSs8Q3u5O/kr8a46SDK6PN2fP
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
sgMANomRkw==
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Z32djlFLDdeKH48R/wc3hUgo
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
wufUYYkYiLaKmXrBo40LnyzVTsvEAJPxaHCJsDbGHVW6PLI/BgTVLt5wO6CN
W8Myj5kPxcBt+ff7QUUb7z5wejesHANyUspNQjra6G9ZqXJCLQaqha9Y/THQ
xqp/YfP9GjGgwzM1NWKujdkLk/w02jHQwaZxpsZWG1mUtn3d0IkBS7oUxnRn
bbxdQU7ogBgY+Tt74zRFG1/e/8ruohsDrj905CxPaOMT863KZr0Y2MFJMzAc
rI1vLbsGmQxioEGhNcgpUhsv7gyK5SHGgPfheL6pC9ooPGmxMkvF3CcNn/hc
1UYaRmObSMMYaEliOraUqY2U8cF3o1R88m437dkCbbwztqNtnYp3dyeVbJRq
o+QeX+0JKn4xb2kaV6WNaxx1UUlUfIaRY5H5sTZKmfu0b1Lzi0kNpaa0aOMN
5Ro9NSruN7iuwtdN7Xf7USVVan8RHvZv8wap+mS7DPyl9r8vViBSYlwbZ/7u
tL1E5femcFzk7idt/HbKcH2cyj/uWV674ldtzKvK+fuLqo/Ch2M+9T+1UWLW
N+utVgy83xBlg3/aqBdNwxJP1Tdx9/T95/Q6mNcklPpLNQbUNEtszHfq4HI+
j58idT7TDj6/B3l1cHtjxhtlxRhIDZG9eWSvDsrMANc2+RggZH4lTEjr4H6j
YbdM2RjIHjp98Zu6DipdPKQhLB4DxO+HZIN1dbDXyZy4a28MfGdf7f1jooMJ
i2W+LwVjwNwyjIfJSQfbLpzddZsjBmi6YorFInVwTMDOaGQjGv6b0zcuv6CD
YTe3F4j+pp4nBoavB6/qYM+HDS31lWio1k9U0inQwSuLz71eTkeDT1Naq32L
DhY0SV9Ipb6/8Ly39frQReV3+imTYWs0tP7lZfEc1EFSdaJoV0M0CGnctA78
pIPfVfoMtO9Gw8Cj2xNJ9ASE0O09Hy5HQ+SgZzzXTgK+tyw8xR4TDbIr0jI5
vATkXxUV4AqNhnj5e6dKpQkYtPS4KckzGtTLqzdbTAg44qWn5kiIhqL850K/
kwn4/NdYunl/FOQ6y43YZRLQ1Yrla2J9FGQLpqdW5xNwmju9KbQoCq5mujIE
3icgX7+9u2dgFIRf/bv0dYCA2rzSjzLYo4B0XrFtigtQuFVm5j3hPNAdzTve
dwNw4FJXd6d3BGztppM4cAsw+JXwbh1j6n5/6/vhCvUzUUG6nBwiEwHLduo2
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
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
STtWcV8luPJxzcUGU1CFyLn3XMQ5Ak9DXkV4KO35zpIPr04dIrS77T94KJyC
dPw2XTcUIgk8PoGPbhyj4AOiZGMKezrBPbCA800k7bl70E97jRzCUhhvtUoc
BX/5LqYqKpYSpJL/rm4k0fQ/oZJsomoJ1OonKelXKci+uCu6TfkZoat+eaQt
m4LvR32S+yjPCdublJQWcygo//DQ2fuxLwj32oveOeVRsEPekvK8sYPwafjs
Lskymt6LfifIu7oJWiw2lbUNFIx7vx5o3tRLOMNxjuHbIwp+tvWLYiP0Ed5y
t9kLNVMQFfa53W7qIwQKq6wktFHwgAevZ2pDPyFLSVDf5BUFM4u3XP5ZNEBY
cBnt+zhMwd7BBBsGg48E9Nohw/mZ5q/Xw8Ofqz4SLviTomCMgm+6r3vliQ4R
JEKfCRdPUvB+t/39jr9DBNszZX5HZmjztHOgpD3nEyH3wlh93hwF55Lkddro
Rgjf0oXYe39TMDJu9lmB3wiBej3lntpf2jzsaGDk3vuZ0JX/nO7gCgWnXQvC
Ci5+Jmy/tUm6vkZBEbFbIDjzmeB9R72ke4Pmr9vWb40yo4R7lSF///2j6dlZ
RPxEHiX8D6Kk41A=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Gamma]t\"", TraditionalForm], 
    FormBox["\"Excitation\"", TraditionalForm]},
  AxesOrigin->{0, 8.12418208909904*^-9},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     InterpretationBox[
     "\"Decay of localized excitation, \\!\\(\\*FormBox[\\\"9\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) square, \
d=\\!\\(\\*FormBox[\\\"0.75`\\\", TraditionalForm]\\)\[Lambda]\"", 
      StringForm[
      "Decay of localized excitation, ``x`` ``, d=``\[Lambda]", 9, 9, 
       "square", 0.75], Editable -> False], FontSize -> 14, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8095452008725505`*^9, 3.809545361950925*^9, 3.809545402329921*^9, 
   3.8095454606239996`*^9, {3.809545498339122*^9, 3.8095455364801044`*^9}, {
   3.809545631000289*^9, 3.8095456606410065`*^9}, 3.809599083439243*^9, 
   3.8095991160324078`*^9, {3.80960527422325*^9, 3.809605285242796*^9}, 
   3.809606517759519*^9, 3.8096079387255583`*^9, 3.809641181321965*^9, 
   3.8097290344873123`*^9, 3.809729217660472*^9, {3.809729278237445*^9, 
   3.809729286561181*^9}, {3.8097310253893948`*^9, 3.809731050358438*^9}, 
   3.8097712158552103`*^9, 3.809774108712022*^9, 3.810229128586315*^9, 
   3.8102292042289524`*^9, 3.8105978441985087`*^9, 3.810599065662389*^9, 
   3.810599441293308*^9, 3.8106012415489445`*^9, 3.810601288551831*^9, 
   3.810601395765088*^9, 3.8106014808884993`*^9, 3.8106015216171465`*^9, 
   3.8106016185655107`*^9, 3.8106020459265013`*^9, 3.810660598745751*^9, 
   3.8106616979475803`*^9, 3.810661807498729*^9, 3.8106618424166203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_excitation_decay_fmode_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8095991185851345`*^9, 3.80959924850183*^9}, 
   3.80964436073803*^9, {3.8097292305629625`*^9, 3.8097292429309206`*^9}, 
   3.8106618679908743`*^9}],

Cell[BoxData["\<\"plot_excitation_decay_afmode_11x11_square.png\"\>"], \
"Output",
 CellChangeTimes->{{3.8095992244007683`*^9, 3.80959925102477*^9}, 
   3.809605290843827*^9, 3.809729233149047*^9}]
}, Open  ]],

Cell["Same as above but varying the atoms of interest", "Text",
 CellChangeTimes->{{3.809641320493924*^9, 3.8096413292697406`*^9}, {
  3.8096414805133643`*^9, 3.809641500650298*^9}, {3.8096416329307384`*^9, 
  3.809641689067629*^9}, {3.809641736369666*^9, 3.8096417592015233`*^9}, {
  3.809641827723316*^9, 3.809641838424391*^9}, {3.809644889757348*^9, 
  3.809644897063801*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{
   RowBox[{"-", "2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8096420661161876`*^9, 3.80964206962634*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8096420701081543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inner25Idcs", " ", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"centerIdx", "+", "i", "+", "j"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], 
           SqrtBox["atomnum"]}], ",", 
          RowBox[{"-", 
           SqrtBox["atomnum"]}], ",", "0", ",", 
          SqrtBox["atomnum"], ",", 
          RowBox[{"2", 
           SqrtBox["atomnum"]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "]"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outer16Idcs", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"inner25Idcs", ",", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"excitedIdcs", ",", "#"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sliceIdcs", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"centerIdx", ",", 
     RowBox[{"centerIdx", "+", 
      FractionBox[
       RowBox[{
        SqrtBox["atomnum"], "-", "1"}], "2"]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "sliceIdcs"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", " ", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Excitation in central row, ``x`` ``, d=``\[Lambda]\>\"", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<Excitation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"sliceIdcs", ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<Atom indices\>\""}]}], "]"}]}], 
    ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8096418008174095`*^9, 3.809641842698697*^9}, {
   3.8096420077648635`*^9, 3.809642027501035*^9}, {3.809642060080149*^9, 
   3.8096421356353445`*^9}, 3.809642254019083*^9, {3.8096423458157787`*^9, 
   3.8096423548753114`*^9}, {3.8096427155364885`*^9, 
   3.8096427530581374`*^9}, {3.80964281796024*^9, 3.809642835015952*^9}, {
   3.80964408474993*^9, 3.809644087659124*^9}, {3.8096442105544176`*^9, 
   3.809644226555932*^9}, {3.8096442792071085`*^9, 3.8096443178288*^9}, {
   3.809644426421321*^9, 3.8096444294681945`*^9}, {3.809644467262104*^9, 
   3.8096445018600364`*^9}, {3.8096445365273447`*^9, 
   3.8096445391293516`*^9}, {3.809644786268194*^9, 3.809644805021984*^9}, {
   3.80964487057365*^9, 3.809644917087267*^9}, {3.809645106503605*^9, 
   3.8096451459580717`*^9}, {3.809691060102807*^9, 3.8096910993348136`*^9}, {
   3.8096911410756927`*^9, 3.8096911513605375`*^9}, {3.8097292947313557`*^9, 
   3.809729311343926*^9}, {3.810660610872944*^9, 3.810660611051197*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
LHWDD7PGYokMceLc4Tabtysf3ntiye6CpD3s43LuaxPgw1H7g2uj99jD1Y3S
9J/JJLxL2vPUYUV78OWW4JsO48UBTYYbFJA93Lp6F7QquDH7/LrtTW5E/aa1
qvlj7PhvRXbKuLs9ZL1VL3P6tAF/81dk4/S0BywmFabhtAF3fT4wY+VjD8v7
h1MOG7HhnKEHz4YD7GHrUveFe6KsWKHFP+hvjD34p7hULX1caqCnD75UvEHw
nT2g0vn3c4OZdaCBXbE9XGce5ODjmWzQ4eJ4cPKWPehOdLW0yow3iJ1VK6y/
aw91ituVEw6PNnwNTw2zrLaHy7oatVdm3jREeRhL+Tyzh2y1CYml/Gf6t5Qq
o/I+2wP/WIepqcCs/jH+n/8efLEn/j9mZFi/n9VXW1Q68eabPRywWN/CVvRT
v7Gl4gjbrD2QzfOuBu39pT9Ar3Bi/LWHZmXSKVPZ3/qcp8tVNDY6gN4Pn0b4
vKTf6TFzz3qzA3wVNWB7mr2sn2GiKOO3xQFkGR95vpqt6IvxlIvm8jqAqQxL
s3Dxqr7mjTIuViECO/+9mXCTBfk+vzfZIesANdKpzFD59Uih7IfHZzkHKL0R
Fa59aj2aT5cfYVF0gFfj3ZGU9vUo5sC9HlVVB/guuT7E1Z0NZc+UNl7RcYAG
oSRVlYQNqJ2/NMeL4gBiqy+O3qzlQCmL3/ijrRyALf1GrtM/DmT/Ye/FbBsH
kO8L5XbR4USjt++ee2nvAPfea263rOdEf3Xuhii7OsCK/avBqYcbkcyhEqsV
fwfYyuhRUE3djNqvaVfMBTiA1DpGl1LLZuQ9+IJ36rgDHJ2525n5ezMqsvnW
233CAdTuTRXk7udCYkhu/+3TDvBDoo/v8s4taJtwmY/dBQfIeXtqPyOBG9U4
6j83S3WAd6UbRDmquJH9pU5Z/YsOcODCj/H/RrjRxU0zP6QvO8BbZJ3prfgf
4vqnGLKa6wAhkmczlDr+Q6x9lTF3Sh1ge+e22fqTPOg6r+FYXpkDuF0bOhp1
jgcBtdsoo8IBKrcXBv7J4kGnn86xR1c7wLGItWd8D3nQ3/uqF+zrHCAxgda6
OM+DsqZbps0bHMDKLzs3fj0v0pC1t0GNDlDN6h3ezsuLgq+H8Mk+JfbH0sAb
Lc+LplNrrqy9dIAlXwfnex686MJL46X5DoLv/ke2Lcd4kRxH34Gvrx3ghNpb
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
3rGG/wGku1Af
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
GO9pRmV16O/1dTdwNYo6HBo9zfgfbyyJVw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Ny7sGBixwTGTl9dGynUhWGJKbn3eBpftrWHjrtKFsvb0skImW8wUtVcxsl4X
+Ab8LROlbfEz3e/RZm90Ye/Eok1joC0eC+JLi36vC2hPww2hS7aY/b5xUWW/
LsiePeG2M80Wn2Iu7d47QtNbuuXZpae2mKc7ZM/UjC6sW1gar/y2xdr/Hkgf
XKDprQucq1iyxWdkh7RsVnTh+lnhvo3/qLg1Gdzrt+jBDPcNKdU9VDzX7H92
jlEPhI/O35Q6RMX7FvLjD7HoAUMl46FSWSoOsmWujOfUg93+OYUuulScE6fe
3sSjB+RI+9SbZlTcWeM9uLhbD+74ZObY21CxsEDPluNCeuBYQbcv3Y2KLc0Y
uFNE9UDUbySV8wwVR5xTEmuT1IMbzDpKgkFU3DuSYS6joAe6eSY7l6KpmI6z
64SLih7MrRhQGmOpWErnX+AtDT3YNvPtq+ANKqYGysW9Bj0IfaBD8CRT8cUC
lzv/dPXARfrP/L2bVPz4Q9rjI0Z64ObRmdiSQcWftrU3njLTg2S/zMxzWVS8
VXW19w5JD3YGnip6e4+K5T2lfr6h6EGslT56nk/Fx+4cW/vPXg+OlMjPEvep
+GpnIpvKMT3gqo02c3xAxVUbTQe8nPUgoUdlbNdDKv4mvaCQ40bL5/e/em4l
VMzmJGrY66kHq8PajNaPqFgtyc6ByUcPbD+fqBymYbema2c0AvSgxq3+13+P
qTjpb120b4geLCypKLXRzs/0JJ5wPKsHuWnPJhRp2LTcRcvwvB5ssYc4C5p/
8USlAwoX9aDzlO1lLhr/Vh/mLYKxejDY5+F0iaZvzGxoZPs1PSg8cDkpl6a/
Uaq0YSleD9w/HEnzKqDirO0XckaT9SDyyLsfo7m0evy2jnpzUw/2X/lvK3MO
Fdu9EnV6nqEHAv9UvYfuUrFS0Sq6n6UHMrN2d47dpmKu2K79Kbk0PcX/sSWm
UfGsa86/c4V6kPr6mI5fEhV36wZ88SzWA3mfolp6Wr1KhPSxzWNafAF087px
tPi/TpyTrtKDRIvNkuFIKtZtqD+2u1YPXrg0SSmGUvGB7CRia70esFPqfJA/
FQ85Km8Ov9QDSTV5wzOuVFyjzvL51Ss9KG7i+JZyjIpv7h6uq+zSg9JJbsMz
tlRMGrgQeaOP1r9PC2N0DKlYuppyNOyjHky93e+MgIpZb4ppug7rgXdbLf+c
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
vq6wcPf//1hA4JXQmKyn0r5OYuOo
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
1VL/BzPzfUY=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Gamma]t\"", TraditionalForm], 
       FormBox["\"Excitation\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"Excitation in central row, \\!\\(\\*FormBox[\\\"9\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) square, \
d=\\!\\(\\*FormBox[\\\"0.75`\\\", TraditionalForm]\\)\[Lambda]\"", 
         StringForm[
         "Excitation in central row, ``x`` ``, d=``\[Lambda]", 9, 9, "square",
           0.75], Editable -> False], FontSize -> 14, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"41", "42", "43", "44", "45"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"Atom indices\"", {
                 Directive[
                  GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Atom indices\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.809642242584541*^9, 3.809642359146446*^9, {3.80964282893996*^9, 
   3.8096428357161055`*^9}, 3.8096440882754726`*^9, 3.809644227655964*^9, 
   3.8096442914424024`*^9, {3.809644474625911*^9, 3.80964450329021*^9}, 
   3.80964480874702*^9, 3.809645067681473*^9, {3.8096451109876127`*^9, 
   3.8096451471119843`*^9}, 3.8096910371706266`*^9, 3.809691152608757*^9, 
   3.8097290657836065`*^9, 3.809729312226534*^9, 3.809771225316037*^9, 
   3.810229293424165*^9, 3.8106606126112676`*^9, 3.8106619065090356`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<plot_excitation_decay_afmode_central_row_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8096443813668275`*^9, 3.8096443991672115`*^9}, {
  3.809645252191497*^9, 3.8096452556073303`*^9}, {3.8097293325102835`*^9, 
  3.8097293336412573`*^9}}],

Cell[BoxData["\<\"plot_excitation_decay_afmode_central_row_9x9_square.png\"\>\
"], "Output",
 CellChangeTimes->{3.809644404506936*^9, 3.8096452566445856`*^9, 
  3.8096911626939363`*^9, 3.809729343762185*^9, 3.809771241296883*^9, 
  3.810229321735434*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.8102925331596265`*^9, 3.810292535215131*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "-", 
    SubscriptBox["r", 
     RowBox[{"centerIdx", ",", "i"}]]}], ")"}], "/.", 
  RowBox[{"{", 
   RowBox[{"i", "\[Rule]", " ", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8102925238195906`*^9, 3.8102926146228924`*^9}, {
  3.8102991640989094`*^9, 3.8102992164440093`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{
  3.810292545609351*^9, {3.8102991770034194`*^9, 3.8102992086019697`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["emission pattern", "Subsubsection",
 CellChangeTimes->{{3.810229407892502*^9, 3.810229412066498*^9}}],

Cell["Plot the emitted field", "Text",
 CellChangeTimes->{{3.81022932538491*^9, 3.8102293324601707`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"state", "[", "time_", "]"}], ":=", 
   RowBox[{
    RowBox[{"soln", "[", 
     RowBox[{"[", ";;", "]"}], "]"}], "/.", 
    RowBox[{"t", "\[Rule]", " ", "time"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"field", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "\[Mu]_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"state", "[", "t", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], "-", 
         SubscriptBox["r", 
          RowBox[{"centerIdx", ",", "i"}]]}], ",", "\[Mu]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8102297500242558`*^9, 3.810229867883979*^9}, {
   3.8102299056912355`*^9, 3.8102299095040054`*^9}, {3.810230109237124*^9, 
   3.810230316469524*^9}, {3.810230348765873*^9, 3.81023039301291*^9}, {
   3.8102306480432734`*^9, 3.810230652495104*^9}, {3.810230715391405*^9, 
   3.8102307170061293`*^9}, 3.810230838106262*^9, {3.8102309050666323`*^9, 
   3.810230954127664*^9}, {3.810231618514459*^9, 3.8102316251782284`*^9}, {
   3.81023166907409*^9, 3.810231696369036*^9}, {3.810231726631247*^9, 
   3.8102317982174892`*^9}, {3.8102924572405424`*^9, 
   3.8102924704721775`*^9}, {3.810292676650104*^9, 3.8102926797019486`*^9}, {
   3.8102992286563673`*^9, 3.8102992427497005`*^9}, {3.8106606261210575`*^9, 
   3.8106606262898383`*^9}}],

Cell["plot the field in the y-z plane at various time steps", "Text",
 CellChangeTimes->{{3.8102304056573544`*^9, 3.810230424829867*^9}, {
  3.810230886129267*^9, 3.810230887577463*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ymax", " ", "=", "  ", 
   RowBox[{"3", 
    SqrtBox["atomnum"], "d", " ", 
    RowBox[{"\[Lambda]", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymin", " ", "=", " ", 
   RowBox[{"-", "ymax"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zmax", " ", "=", " ", "ymax"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zmin", " ", "=", " ", "ymin"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"time", ",", "intplot"}], "}"}], "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"DensityPlot", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          SubscriptBox["e", "1"], ".", 
          RowBox[{"field", "[", 
           RowBox[{
            RowBox[{"0.001", " ", "d", " ", "\[Lambda]"}], ",", "y", ",", "z",
             ",", 
            SubscriptBox["e", "1"], ",", 
            RowBox[{".5", " ", "\[Gamma]"}]}], "]"}]}], "]"}], "2"], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<SunsetColors\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "100"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<time to run: `` minutes\>\"", ",", 
   RowBox[{"Floor", "[", 
    RowBox[{"time", "/", "60"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8102304953943396`*^9, 3.8102306199672003`*^9}, {
   3.8102308962164984`*^9, 3.8102309000945177`*^9}, {3.810231039072832*^9, 
   3.8102310698051105`*^9}, {3.8102311107182045`*^9, 
   3.8102311618420067`*^9}, {3.8102312202278824`*^9, 3.8102312335438247`*^9}, 
   3.810231275615522*^9, {3.8102320812850003`*^9, 3.810232154229912*^9}, {
   3.8102322881792445`*^9, 3.8102323173313255`*^9}, 3.810238329247749*^9, {
   3.810238477288533*^9, 3.810238532396242*^9}, {3.8102386741733*^9, 
   3.81023876410493*^9}, {3.810238839624082*^9, 3.810238879582282*^9}, {
   3.81023897373164*^9, 3.8102389745394783`*^9}, {3.8102390209863377`*^9, 
   3.8102391006374445`*^9}, 3.8102452027834635`*^9, {3.8102455980858984`*^9, 
   3.810245641822998*^9}, {3.810245690917778*^9, 3.810245772672263*^9}, {
   3.810292698631353*^9, 3.810292699497039*^9}, {3.8103122881808796`*^9, 
   3.810312347828454*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"time to run: \\!\\(\\*RowBox[{\\\"8\\\"}]\\) \
minutes\"\>",
  StringForm["time to run: `` minutes", 8],
  Editable->False]], "Output",
 CellChangeTimes->{3.810299852904873*^9, 3.810312350903234*^9, 
  3.810312876972157*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["r", 
  RowBox[{"centerIdx", ",", "i"}]]], "Input",
 CellChangeTimes->{3.8103168006479383`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "+", "i"}], ",", "9"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    RowBox[{"Floor", "[", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "i"}], ")"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8103167929285707`*^9, 3.810316801111699*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomDisks", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"\[Lambda]", " ", "d", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 SqrtBox["atomnum"]}], "]"}], ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "/", 
                 SqrtBox["atomnum"]}], "]"}]}], "}"}], "-", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                SubscriptBox["r", 
                 RowBox[{"centerIdx", ",", "i"}]], "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{
                SubscriptBox["r", 
                 RowBox[{"centerIdx", ",", "i"}]], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ")"}]}], ",", 
          RowBox[{"0.05", " ", "d", " ", "\[Lambda]"}]}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"intplot", ",", "atomDisks"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8102451735585766`*^9, 3.8102451986265736`*^9}, {
   3.8102452539955845`*^9, 3.8102452585633755`*^9}, {3.8102452915871096`*^9, 
   3.81024545654521*^9}, 3.810299143477027*^9, {3.8102994264137993`*^9, 
   3.8102994303004103`*^9}, {3.810316663103567*^9, 3.8103166895927672`*^9}, {
   3.8103167251866317`*^9, 3.8103167756886587`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxk3X3I/v1d1/GrSVJ2t3TZ5ZplNxqMGCNCRSzm8o9VS3LdIAtS1M3V5m3e
BTWipDAjhyaZWORI0sFCW3fmPDU358o0lzrLqQvsZongEiOaEdF1vh+vi56/
v04e4KGe1/dzvJ+/8zi+38/nt37m57/iVc956qmnXvg7n3rq//386E/9mt/2
/q/+jw9+ftuv/PlPf9knPOsv/Yq/9Qmf9K/eO//1//FH/sl//8hn/cZXf8iL
3/hFPz3/8x9/25te8f0/Nf/Qy/7CR3/QC571f/qOj/17b/mCn5w/8ML3P/+z
v+8983O/8Vu/7nnPf9Yf82s+67nf93k/MX/i61/wVV/ytv8wv+Lnf+yXf8zT
z/o1n/HVf/Hdr/v38+vf9bJf+iv/8sfnv/nS53zpx334s37TW77z/f/1z7x7
/p7f8SWv/frv/rH53V/3ov/ysuc965/74Pd9xv96zY/Oz/nyb3rPt37Xj8xP
/7dX/olXfuizftErn/euD/mcfzd/8g/84B/6zu981/zKT/yr73jtc5/1F7z5
JZ/0glf98Pyrf+8vftnf/rP/dv743/I5n/uBF/zQ/Nm/7Cc+80++49/Mb/iZ
l3/aWz//B+a3ft93/+GP/Ih/Pb/vH/zu3//6733n/Ly/9s0f/97Xfv/8ktc9
/aKX/IZ3zK/7lK/67d/08Pb561/8f55+zmveNr/9Q7/w137Wr//e+f2/+DMf
9PZ/8T3zx/3DN//CH3jnw/w3vuhrf+pX/aa3zv/5Y//cO3/wc7/j2ev7S3/q
LV/9Pf90/trv/uS/+6kf9o/nn/3LL/zKD3v1t89/6Q0f9b43feGb5xd/xM99
14t+47fMP/1N/+xr/9Fb3/js9fnjH/wjr3v7N8xf/Oq/8/ov/nVvmF/63nd9
y/v/9JfML3/PM/59ez+86pn/+fn5f+yZ/33zpz/+35u//eln/v+ZP+jx/9/5
TY+/z/xHH3/f+X9/4Jn/HvM3P/73mj/l8b/n/D/f/Mx/7/mHH6/H/Pcfr9f8
5Y/Xc3754/WeP+pxPcy/+JXPrJf5nY/raf7Gx/U2f8Hjepw/+XG9zk8/ruf5
5z7xmfU+f8bj+2H+g4/vl/n3PL6f5t/8+H6bf8Xj+3H+hS975v06/+Tj+3l+
x+P7ff62x3kwf8PjvJi/4nGezJ/3OG/mT3ucR/NLH+fV/Lse59n84Y/zbn7q
cR7OP/s4L+cffZyn88PjvJ2/5XEez1/zOK/nP/84z+dXP877Z1//2IP5ftbr
Rn/qB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfr
B+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH68eu7/WD9YP1g/WD
9YP1Y9fn+sH6wfrB+rH3w/WD9YP1g/WD9WPr7/rB+sH6wfrB+sH6wfrB+sH6
sd/3+sH6wfrB+sH6sfV8/dj6v37selw/9v66frB+sH6wfrB+sH6wfrB+sH5s
Dl4/WD9YP1g/WD+2vq4frB+sH6wfW//XD9YP1g/WD9YP1g/Wj73++pG/K+on
OsH9qR+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wf
rB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH7u+1w/WD9YP1g/W
D9aPXZ/rB+sH6wfrx94H1w/WD9YP1g/Wj62/6wfrB+sH6wfrB+sH6wfrB+vH
ft/rB+sH6wfrB+vH1vP1Y+v/+rHrcf3Y++v6wfrB+sH6wfrB+sH6wfrB+rF5
eP1g/WD9YP1g/dj6un6wfrB+sH5s/V8/WD9YP1g/WD9YP1g/9vrrRz6Hqp/4
u6Kd4P7UD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP
1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/Wj13f6wfrB+sH6wfr
B+vHrs/1g/WD9YP1Y++H6wfrB+sH6wfrx9bf9YP1g/WD9YP1g/WD9YP1g/Vj
v+/1g/WD9YP1g/Vj6/n6sfV//dj1uH7s/XX9YP1g/WD9YP1g/WD9YP1g/dg8
vH6wfrB+sH6wfmx9XT9YP1g/WD+2/q8frB+sH6wfrB+sH6wfe/31I99b1E98
DtW/K9oJ7k/9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9
YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/dj1vX6wfrB+sH6w
frB+7PpcP1g/WD9YP/Z+uH6wfrB+sH6wfmz9XT9YP1g/WD9YP1g/WD9YP1g/
9vteP1g/WD9YP1g/tp6vH1v/149dj+vH3l/XD9YP1g/WD9YP1g/WD9YP1o/N
w+sH6wfrB+sH68fW1/WD9YP1g/Vj6//6wfrB+sH6wfrB+sH6sddfP/I9d/3E
9xb9HKp/V7QT3J/6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB
+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfqx63v9YP1g/WD9
YP1g/dj1uX6wfrB+sH7s/XD9YP1g/WD9YP3Y+rt+sH6wfrB+sH6wfrB+sH6w
fuz3vX6wfrB+sH6wfmw9Xz+2/q8fux7Xj72/rh+sH6wfrB+sH6wfrB+sH6wf
m4fXD9YP1g/WD9aPra/rB+sH6wfrx9b/9YP1g/WD9YP1g/WD9WOvv37kvqj6
ie+5+71FP4fq3xXtBPenfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6w
frB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfuz6Xj9YP1g/
WD9YP1g/dn2uH6wfrB+sH3s/XD9YP1g/WD9YP7b+rh+sH6wfrB+sH6wfrB+s
H6wf+32vH6wfrB+sH6wfW8/Xj63/68eux/Vj76/rB+sH6wfrB+sH6wfrB+sH
68fm4fWD9YP1g/WD9WPr6/rB+sH6wfqx9X/9YP1g/WD9YP1g/WD92OuvH7mP
tn7ivqh+z93vLfo5VP+uaCe4P/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD
9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1Y9f3+sH6
wfrB+sH6wfqx63P9YP1g/WD92Pvh+sH6wfrB+sH6sfV3/WD9YP1g/WD9YP1g
/WD9YP3Y73v9YP1g/WD9YP3Yer5+bP1fP3Y9rh97f10/WD9YP1g/WD9YP1g/
WD9YPzYPrx+sH6wfrB+sH1tf1w/WD9YP1o+t/+sH6wfrB+sH6wfrB+vHXn/9
yHMX9RP30fa+qH7P3e8t+jlU/65oJ7g/9YP1g/WD9YP1g/WD9YP1g/WD9YP1
g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1Y9f3
+sH6wfrB+sH6wfqx63P9YP1g/WD92Pvh+sH6wfrB+sH6sfV3/WD9YP1g/WD9
YP1g/WD9YP3Y73v9YP1g/WD9YP3Yer5+bP1fP3Y9rh97f10/WD9YP1g/WD9Y
P1g/WD9YPzYPrx+sH6wfrB+sH1tf1w/WD9YP1o+t/+sH6wfrB+sH6wfrB+vH
Xn/9yHN69RPPXfQ+2t4X1e+5+71FP4fq3xXtBPenfrB+sH6wfrB+sH6wfrB+
sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6w
fuz6Xj9YP1g/WD9YP1g/dn2uH6wfrB+sH3s/XD9YP1g/WD9YP7b+rh+sH6wf
rB+sH6wfrB+sH6wf+32vH6wfrB+sH6wfW8/Xj63/68eux/Vj76/rB+sH6wfr
B+sH6wfrB+sH68fm4fWD9YP1g/WD9WPr6/rB+sH6wfqx9X/9YP1g/WD9YP1g
/WD92OuvH3muu37iOb0+d9H7aHtfVL/n7vcW/Ryqf1e0E9yf+sH6wfrB+sH6
wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB
+sH6wfqx63v9YP1g/WD9YP1g/dj1uX6wfrB+sH7s/XD9YP1g/WD9YP3Y+rt+
sH6wfrB+sH6wfrB+sH6wfuz3vX6wfrB+sH6wfmw9Xz+2/q8fux7Xj72/rh+s
H6wfrB+sH6wfrB+sH6wfm4fXD9YP1g/WD9aPra/rB+sH6wfrx9b/9YP1g/WD
9YP1g/WD9WOvv35kH5D6iee6+5xen7vofbS9L6rfc/d7i34O1b8r2gnuT/1g
/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9
YP1g/WD9YP1g/dh1vX6wfrB+sH6wfrB+7PpcP1g/WD9YP/Z+uH6wfrB+sH6w
fmz9XT9YP1g/WD9YP1g/WD9YP1g/9vteP1g/WD9YP1g/tp6vH1v/149dj+vH
3l/XD9YP1g/WD9YP1g/WD9YP1o/Nw+sH6wfrB+sH68fW1/WD9YP1g/Vj6//6
wfrB+sH6wfrB+sH6sddfP7JvVP3EPiB9rrvP6fW5i95H2/ui+j13v7fo51D9
u6Kd4P7UD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP
1g/WD9YP1g/WD9YP1g/Wj13f6wfrB+sH6wfrB+vHrs/1g/WD9YP1Y++H6wfr
B+sH6wfrx9bf9YP1g/WD9YP1g/WD9YP1g/Vjv+/1g/WD9YP1g/Vj6/n6sfV/
/dj1uH7s/XX9YP1g/WD9YP1g/WD9YP1g/dg8vH6wfrB+sH6wfmx9XT9YP1g/
WD+2/q8frB+sH6wfrB+sH6wfe/31I/sM1k/sG9V9QPpcd5/T63MXvY+290X1
e+5+b9HPofp3RTvB/akfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wf
rB+sH6wfrB+sH6wfrB+sH6wfrB+sH7u+1w/WD9YP1g/WD9aPXZ/rB+sH6wfr
x94P1w/WD9YP1g/Wj62/6wfrB+sH6wfrB+sH6wfrB+vHft/rB+sH6wfrB+vH
1vP1Y+v/+rHrcf3Y++v6wfrB+sH6wfrB+sH6wfrB+rF5eP1g/WD9YP1g/dj6
un6wfrB+sH5s/V8/WD9YP1g/WD9YP1g/9vrrR/alrZ/YZ7D7RnUfkD7X3ef0
+txF76PtfVH9nrvfW/RzqP5d0U5wf+oH6wfrB+sH6wfrB+sH6wfrB+sH6wfr
B+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH68eu7/WD9YP1g/WD9YP1Y9fn
+sH6wfrB+rH3w/WD9YP1g/WD9WPr7/rB+sH6wfrB+sH6wfrB+sH6sd/3+sH6
wfrB+sH6sfV8/dj6v37selw/9v66frB+sH6wfrB+sH6wfrB+sH5sHl4/WD9Y
P1g/WD+2vq4frB+sH6wfW//XD9YP1g/WD9YP1g/Wj73++pF9zOsn9qXtPoPd
N6r7gPS57j6n1+cueh9t74vq99z93qKfQ/XvinaC+1M/WD9YP1g/WD9YP1g/
WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/dn2vH6wfrB+s
H6wfrB+7PtcP1g/WD9aPvR+uH6wfrB+sH6wfW3/XD9YP1g/WD9YP1g/WD9YP
1o/9vtcP1g/WD9YP1o+t5+vH1v/1Y9fj+rH31/WD9YP1g/WD9YP1g/WD9YP1
Y/Pw+sH6wfrB+sH6sfV1/WD9YP1g/dj6v36wfrB+sH6wfrB+sH7s9dePnHtR
P7GPefel7T6D3Teq+4D0ue4+p9fnLnofbe+L6vfc/d6in0P174p2gvtTP1g/
WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD92
fa8frB+sH6wfrB+sH7s+1w/WD9YP1o+9H64frB+sH6wfrB9bd9cP1g/WD9YP
1g/WD9YP1g/Wj/2+1w/WD9YP1g/Wj63n68fW//Vj1+P6sffX9YP1g/WD9YP1
g/WD9YP1g/Vj8/D6wfrB+sH6wfqx9XX9YP1g/WD92Pq/frB+sH6wfrB+sH6w
fuz114+ck1Q/ce5F9zHvvrTdZ7D7RnUfkD7X3ef0+txF76PtfVH9nrvfW/Rz
qP5d0U5wf+oH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH
6wfrB+sH68eu7/WD9YP1g/WD9YP1Y9fn+sH6wfrB+rH3w/WD9YP1g/WD9WPr
7/rB+sH6wfrB+sH6wfrB+sH6sd/3+sH6wfrB+sH6sfV8/dj6v37selw/9v66
frB+sH6wfrB+sH6wfrB+sH5sHl4/WD9YP1g/WD+2vq4frB+sH6wfW//XD9YP
1g/WD9YP1g/Wj73++pFz9eonzknquRfdx7z70nafwe4b1X1A+lx3n9Prcxe9
j7b3RfV77n5v0c+h+ndFO8H9qR+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+s
H6wfrB+sH6wfrB+sH6wfrB+7vtcP1g/WD9YP1g/Wj12f6wfrB+sH68feD9cP
1g/WD9YP1o+tv+sH6wfrB+sH6wfrB+sH6wfrx37f6wfrB+sH6wfrx9bz9WPr
//qx63H92Pvr+sH6wfrB+sH6wfrB+sH6wfqxeXj9YP1g/WD9YP3Y+rp+sH6w
frB+bP1fP1g/WD9YP1g/WD9YP/b660fOYa2fOFev5yT13IvuY959abvPYPeN
6j4gfa67z+n1uYveR9v7ovo9d7+36OdQ/buineD+1A/WD9YP1g/WD9YP1g/W
D9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9aPXd/rB+sH6wfrB+sH68euz/WD
9YP1g/Vj74frB+sH6wfrB+vH1t/1g/WD9YP1g/WD9YP1g/WD9WO/7/WD9YP1
g/WD9WPr+fqx9X/92PW4fux9df1g/WD9YP1g/WD9YP1g/WD92Dy8frB+sH6w
frB+bH1dP1g/WD9YP7b+rx+sH6wfrB+sH6wfrB97/fUj53bXT5zD2nP1ek5S
z73oPubdl7b7DHbfqO4D0ue6+5xen7vofbS9L6rfc/d7i34O1b8r2gnuT/1g
/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/dj1vX6wfrB+
sH6wfrB+7PpcP1g/WD9YP/Z+uH6wfrB+sH6wfmz9XT9YP1g/WD9YP1g/WD9Y
P1g/9vteP1g/WD9YP1g/tp6vH1v/149dj+vH3l/XD9YP1g/WD9YP1g/WD9YP
1o/Nw+sH6wfrB+sH68fW1/WD9YP1g/Vj6//6wfrB+sH6wfrB+sH6sddfP1g/
4ifO7e45rD1Xr+ck9dyL7mPefWm7z2D3jeo+IH2uu8/p9bmL3kfb+6L6PXe/
t+jnUP27op3g/tQP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/W
D9aPXd/rB+sH6wfrB+sH68euy/WD9YP1g/Vj74frB+sH6wfrB+vH1t/1g/WD
9YP1g/WD9YP1g/WD9WO/7/WD9YP1g/WD9WPr+fqx9X/92PW4fuz9df1g/WD9
YP1g/WD9YP1g/WD92Dy8frB+sH6wfrB+bH1dP1g/WD9YP7b+rx+sH6wfrB+s
H6wfrB97/fWD9SPenNOPntvdc1h7rl7PSeq5F93HvPvSdp/B7hvVfUD6XHef
0+tzF72PtvdF9Xvufm/Rz6H6d0U7wf2pH6wfrB+sH6wfrB+sH6wfrB+sH6wf
rB+sH6wfrB+sH6wfrB+7vtcP1g/WD9YP1g/Wj12f6wfrB+sH68feD9cP1g/W
D9YP1o+tv+sH6wfrB+sH6wfrB+sH6wfrx37f6wfrB+sH6wfrx9bz9WPr//qx
63H92Pvr+sH6wfrB+sH6wfrB+sH6wfqxeXj9YP1g/WD9YP3Y+rp+sH6wfrB+
bP1fP1g/WD9YP1g/WD9YP/b66wfrR7y5ph+8c+9zbnfPYe25ej0nqededB/z
7kvbfQa7b1T3Aelz3X1Or89d9D7a3hfV77n7vUU/h+rfFe0E96d+sH6wfrB+
sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH7s+l4/WD9YP1g/WD9YP3Z9rh+s
H6wfrB97P1w/WD9YP1g/WD+2/q4frB+sH6wfrB+sH6wfrB+sH/t9rx+sH6wf
rB+sH1vP14+t++vHrsf1Y++v6wfrB+sH6wfrB+sH6wfrB+vH5uH1g/WD9YP1
g/Vj6+v6wfrB+sH6sfV//WD9YP1g/WD9YP1g/djrrx+sH/HmmH6wfrB+9Nzu
nsPac/V6TlLPveg+5t2XtvsMdt+o7gPS57r7nF6fu+h9tL0vqt9z93uLfg7V
vyvaCe5P/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/dj1vX6wfrB+
sH6wfrB+7PpcP1g/WD9YP/Z+uH6wfrB+sH6wfmz9XT9YP1g/WD9YP1g/WD9Y
P1g/9vteP1g/WD9YP1g/tp6vH1v/149dj+vH3l/XD9YP1g/WD9YP1g/WD9YP
1o/Nw+sH6wfrB+sH68fW1/WD9YP1g/Vj6//6wfrB+sH6wfrB+sH6sddfP1g/
4s0t/WD9YP1g/ei53T2Htefq9ZyknnvRfcy7L233Gey+Ud0HpM919zm9PnfR
+2h7X1S/5+73Fv0cqn9XtBPcn/rB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB
+sH6set7/WD9YP1g/WD9YP3Y9bl+sH6wfrB+7P1w/WD9YP1g/WD92Pq7frB+
sH6wfrB+sH6wfrB+sH7s971+sH6wfrB+sH5sHV8/tv6vH7se14+9v64frB+s
H6wfrB+sH6wfrB+sH5uH1w/WD9YP1g/Wj62v6wfrB+sH68fW//WD9YP1g/WD
9YP1g/Vjr79+sH7Em1P6wfrB+sH6wfrRc7t7DmvP1es5ST33ovuYd1/a7jPY
faO6D0if6+5zen3uovfR9r6ofs/d7y36OVT/rmgnuD/1g/WD9YP1g/WD9YP1
g/WD9YP1g/WD9YP1g/Vj1/f6wfrB+sH6wfrB+rHrc/1g/WD9YP3Y++H6wfrB
+sH6wfqx9Xf9YP1g/WD9YP1g/WD9YP1g/djve/1g/WD9YP1g/dh6vn5s/V8/
dj2uH3t/XT9YP1g/WD9YP1g/WD9YP1g/Ng+vH6wfrB+sH6wfW1/XD9YP1g/W
j63/6wfrB+sH6wfrB+sH68def/1g/Yg3l/SD9YP1g/WD9YP1o+d29xzWnqvX
c5J67kX3Me++tN1nsPtGdR+QPtfd5/T63EXvo+19Uf2eu99b9HOo/l3RTnB/
6gfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH68eu7/WD9YP1g/WD9YP1Y9fn+sH6
wfrB+rH3w/WD9YP1g/WD9WPr7/rB+sH6wfrB+sH6wfrB+sH6sd/3+sH6wfrB
+sH6sfV8/dj6v37selw/9v66frB+sH6wfrB+sH6wfrB+sH5sHl4/WD9YP1g/
WD+2vq4frB+sH6wfW//XD9YP1g/WD9YP1g/Wj73++sH6EW8O6QfrB+sH6wfr
B+sH60fP7e45rD1Xr+ck9dyL7mPefWm7z2D3jeo+IH2uu8/p9bmL3kfb+6L6
PXe/t+jnUP27op3g/tQP1g/WD9YP1g/WD9YP1g/WD9YP1g/Wj13f6wfrB+sH
6wfrB+vHrs/1g/WD9YP1Y++H6wfrB+sH6wfrx9bf9YP1g/WD9YP1g/WD9YP1
g/Vjv+/1g/WD9YP1g/Vj6/n6sfV//dj1uH7s/XX9YP1g/WD9YP1g/WD9YP1g
/dg8vH6wfrB+sH6wfmx9XT9YP1g/WD+2/q8frB+sH6wfrB+sH6wfe/31g/Uj
3tzRD9YP1g/WD9YP1g/WD9aPntvdc1h7rl7PSeq5F93HvPvSdp/B7hvVfUD6
XHef0+tzF72PtvdF9Xvufm/Rz6H6d0U7wf2pH6wfrB+sH6wfrB+sH6wfrB+s
H6wfu77XD9YP1g/WD9YP1o9dn+sH6wfrB+vH3g/XD9YP1g/WD9aPrb/rB+sH
6wfrB+sH6wfrB+sH68d+3+sH6wfrB+sH68fW8/Vj6//6setx/dj76/rB+sH6
wfrB+sH6wfrB+sH6sXl4/WD9YP1g/WD92Pq6frB+sH6wfmz9Xz9YP1g/WD9Y
P1g/WD/2+usH60e8OaMfrB+sH6wfrB+sH6wfrB+sHz23u+ew9ly9npPUcy+6
j3n3pe0+g903qvuA9LnuPqfX5y56H23vi+r33P3eop9D9e+KdoL7Uz9YP1g/
WD9YP1g/WD9YP1g/WD92fa8frB+sH6wfrB+sH7s+1w/WD9YP1o+9H64frB+s
H6wfrB9bf9cP1g/WD9YP1g/WD9YP1g/Wj/2+1w/WD9YP1g/Wj63n68fW//Vj
1+P6sffX9YP1g/WD9YP1g/WD9YP1g/Vj8/D6wfrB+sH6wfqx9XX9YP1g/WD9
2Pq/frB+sH6wfrB+sH6wfuz11w/Wj3hzRT9YP1g/WD9YP1g/WD9YP1g/WD96
bnfPYe25ej0nqededB/z7kvbfQa7b1T3Aelz3X1Or89d9D7a3hfV77n7vUU/
h+rfFe0E96d+sH6wfrB+sH6wfrB+sH6wfuz6Xj9YP1g/WD9YP1g/dn2uH6wf
rB+sH3s/XD9YP1g/WD9YP7b+rh+sH6wfrB+sH6wfrB+sH6wf+32vH6wfrB+s
H6wfW8/Xj63/68eux/Vj76/rB+sH6wfrB+sH6wfrB+sH68fm4fWD9YP1g/WD
9WPr6/rB+sH6wfqx9X/9YP1g/WD9YP1g/WD92OuvH6wf8eaIfrB+sH6wfrB+
sH6wfrB+sH6wfrB+9NzunsPac/V6TlLPveg+5t2XtvsMdt+o7gPS57r7nF6f
u+h9tL0vqt9z93uLfg7VvyvaCe5P/WD9YP1g/WD9YP1g/WD92PW9frB+sH6w
frB+sH7s+lw/WD9YP1g/9n64frB+sH6wfrB+bP1dP1g/WD9YP1g/WD9YP1g/
WD/2+14/WD9YP1g/WD+2nq8fW//Xj12P68feX9cP1g/WD9YP1g/WD9YP1g/W
j83D6wfrB+sH6wfrx9bX9YP1g/WD9WPr//rB+sH6wfrB+sH6wfqx118/WD/i
zQ39YP1g/WD9YP1g/WD9YP1g/WD9YP1g/ei53T2Htefq9ZyknnvRfcy7L233
Gey+Ud0HpM919zm9PnfR+2h7X1S/5+73Fv0cqn9XtBPcn/rB+sH6wfrB+sH6
wfqx63v9YP1g/WD9YP1g/dj1uX6wfrB+sH7s/XD9YP1g/WD9YP3Y+rt+sH6w
frB+sH6wfrB+sH6wfuz3vX6wfrB+sH6wfmw9Xz+2/q8fux7Xj72/rh+sH6wf
rB+sH6wfrB+sH6wfm4fXD9YP1g/WD9aPra/rB+sH6wfrx9b/9YP1g/WD9YP1
g/WD9WOvv36wfsSbE/rB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrRc7t7DmvP
1es5ST33ovuYd1/a7jPYfaO6D0if6+5zen3uovfR9r6ofs/d7y36OVT/rmgn
uD/1g/WD9YP1g/WD9WPX9/rB+sH6wfrB+sH6setz/WD9YP1g/dj74frB+sH6
wfrB+rH1d/1g/WD9YP1g/WD9YP1g/WD92O97/WD9YP1g/WD92Hq+fmz9Xz92
Pa4fe39dP1g/WD9YP1g/WD9YP1g/WD82D68frB+sH6wfrB9bX9cP1g/WD9aP
rf/rB+sH6wfrB+sH6wfrx15//WD9iDcX9IP1g/WD9YP1g/WD9YP1g/WD9YP1
g/WD9YP1o+d29xzWnqvXc5J67kX3Me++tN1nsPtGdR+QPtfd5/T63EXvo+19
Uf2eu99b9HOo/l3RTnB/6gfrB+sH6wfrx67v9YP1g/WD9YP1g/Vj1+f6wfrB
+sH6sffD9YP1g/WD9YP1Y+vv+sH6wfrB+sH6wfrB+sH6wfqx3/f6wfrB+sH6
wfqx9Xz92Pq/fux6XD/2/rp+sH6wfrB+sH6wfrB+sH6wfmweXj9YP1g/WD9Y
P7a+rh+sH6wfrB9b/9cP1g/WD9YP1g/WD9aPvf76wfoRbw7oB+sH6wfrB+sH
6wfrB+sH6wfrB+sH6wfrB+sH60fP7e45rD1Xr+ck9dyL7mPefWm7z2D3jeo+
IH2uu8/p9bmL3kfb+6L6PXe/t+jnUP27op3g/tQP1g/WD9aPXd/rB+sH6wfr
B+sH68euz/WD9YP1g/Vj74frB+sH6wfrB+vH1t/1g/WD9YP1g/WD9YP1g/WD
9WO/7/WD9YP1g/WD9WPr+fqx9X/92PW4fuz9df1g/WD9YP1g/WD9YP1g/WD9
2Dy8frB+sH6wfrB+bH1dP1g/WD9YP7b+rx+sH6wfrB+sH6wfrB97/fWD9SPe
+14/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/em53z2HtuXo9J6nn
XnQf8+5L230Gu29U9wHpc919Tq/PXfQ+2t4X1e+5+71FP4fq3xXtBPenfrB+
sH7s+l4/WD9YP1g/WD9YP3Z9rh+sH6wfrB97P1w/WD9YP1g/WD+2/q4frB+s
H6wfrB+sH6wfrB+sH/t9rx+sH6wfrB+sH1vP14+t/+vHrsf1Y++v6wfrB+sH
6wfrB+sH6wfrB+vH5uH1g/WD9YP1g/Vj6+v6wfrB+sH6sfV//WD9YP1g/WD9
YP1g/djrrx+sH/He5/rB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB
+tFzu3sOa8/V6zlJPfei+5h3X9ruM9h9o7oPSJ/r7nN6fe6i99H2vqh+z93v
Lfo5VP+uaCe4P/WD9WPX9/rB+sH6wfrB+sH6setz/WD9YP1g/dj74frB+sH6
wfrB+rH1d/1g/WD9YP1g/WD9YP1g/WD92O97/WD9YP1g/WD92Hq+fmz9Xz92
Pa4fe39dP1g/WD9YP1g/WD9YP1g/WD82D68frB+sH6wfrB9bX9cP1g/WD9aP
rf/rB+sH6wfrB+sH6wfrx15//WD9iPe+1g/WD9YP1g/WD9YP1g/WD9YP1g/W
D9YP1g/WD9YP1g/WD9aPntvdc1h7rl7PSeq5F93HvPvSdp/B7hvVfUD6XHef
0+tzF72PtvdF9Xvufm/Rz6H6d0U7wf2pH7u+1w/WD9YP1g/WD9aPXZ/rB+sH
6wfrx94P1w/WD9YP1g/Wj62/6wfrB+sH6wfrB+sH6wfrB+vHft/rB+sH6wfr
B+vH1vP1Y+v/+rHrcf3Y++v6wfrB+sH6wfrB+sH6wfrB+rF5eP1g/WD9YP1g
/dj6un6wfrB+sH5s/V8/WD9YP1g/WD9YP1g/9vrrB+tHvPexfrB+sH6wfrB+
sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfvTc7p7D2nP1ek5Sz73oPubd
l7b7DHbfqO4D0ue6+5xen7vofbS9L6rfc/d7i34O1b8r2gnuT/1g/WD9YP1g
/WD92PW5frB+sH6wfuz9cP1g/WD9YP1g/dj6u36wfrB+sH6wfrB+sH6wfrB+
7Pe9frB+sH6wfrB+bD1fP7b+rx+7HtePvb+uH6wfrB+sH6wfrB+sH6wfrB+b
h9cP1g/WD9YP1o+tr+sH6wfrB+vH1v/1g/WD9YP1g/WD9YP1Y6+/frB+xHvf
6gfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrR8/t7jms
PVev5yT13IvuY959abvPYPeN6j4gfa67z+n1uYveR9v7ovo9d7+36OdQ/bui
ndj1zU/9YP1g/WD9YP3Y9bl+sH6wfrB+7P1w/WD9YP1g/WD92Pq7frB+sH6w
frB+sH6wfrB+sH7s971+sH6wfrB+sH5sPV8/tv6vH7se14+9v64frB+sH6wf
rB+sH6wfrB+sH5uH1w/WD9YP1g/Wj62v6wfrB+sH68fW//WD9YP1g/WD9YP1
g/Vjr79+sH7Ee5/qB+sH6wfrB+sH6wfrB+sH6wfrx+bI9YP1g/WD9YP1g/WD
9YP1g/WD9YP1o+d29xzWnqvXc5J67kX3Me++tN1nsPtGdR+QPtfd5/T63EXv
o+19Uf2eu99b9HOo/l3RTnB/6gfrB+sH68euz/WD9YP1g/Vj74frB+sH6wfr
B+vH1t/1g/WD9YP1g/WD9YP1g/WD9WO/7/WD9YP1g/WD9WPr+fqx9X/92PW4
fuz9df1g/WD9YP1g/WD9YP1g/WD92Dy8frB+sH6wfrB+bH1dP1g/WD9YP7b+
rx+sH6wfrB+sH6wfrB97/fWD9SPe+1I/WD9YP1g/WD9YP1g/WD9YP1g/9u/O
6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+/c+5zb3XNYe65ez0nquRfdx7z70naf
we4b1X1A+lx3n9Prcxe9j7b3RfV77n5v0c+h+ndFO8H9qR+sH6wfbL6z+c7m
+9bHzXc239l8Z/OdzXc239l8Z/OdzXc239l8Z/OdzXc237febr5vfd5833q+
+b71f/OdzXc239l8Z/OdzXc239l8Z/N98+rmO5vvbL6z+c7mO5vvbL6z+c7m
+9blzXc239l8Z/OdzXc239l83+tvvrP5Hu99Yr6z+c7mO5vvbL6z+c7mO5vv
bL6z+b7PEW6+s/nO5jub72y+s/nO5jub72y+s/nO5jub72y+91ztnpPac+96
jlHPpeg+4903tvsAdl+n7tPR5677HF2fi+h9rr1vqd9D93uFfk7Uf/d3jnN/
ms+7vjef2Xxm85nNZzaf2Xxm85nNZzaf2Xxm85nNZzaf2Xzeern5vPV183nr
8ebz1u/NZzaf2Xxm85nNZzaf2Xxm85nN582bm89sPrP5zOYzm89sPrP5zOYz
m89bXzef2Xxm85nNZzaf2Xxm83mvv/nM5nO8f7eYz2w+s/nM5jObz2w+s/nM
5jObz2w+73Pdm89sPrP5zOYzm89sPrP5zOYzm89sPrP5zOYzm89sPvfc6p5D
2nPlek5Qz33oPt7dl7X77HXfpO6D0eea+5xanzvofaS9L6jf8/Zz+34O039X
7/rd/GXzl81fNn/Z/GXzl81fNn/Z/GXzl81fNn/Z/GXzd+vh5u/Wz83frbeb
v1ufN3/Z/GXzl81fNn/Z/GXzl81fNn83T27+svnL5i+bv2z+svnL5i+bv2z+
bv3c/GXzl81fNn/Z/GXzl83fvf7mL5u/8f5ONH/Z/GXzl81fNn/Z/GXzl81f
Nn/Z/N33aDd/2fxl85fNXzZ/2fxl85fNXzZ/2fxl85fNXzZ/2fxl87fnPvcc
z57L1nN2em5C98Huvqbdp677DnUfiT4X3Oe8et9+78PsfTX9nrSfe/dzjF2/
m79s/rL5y+Yvm79s/rL5y+Yvm79s/rL5y+Yvm79s/m493Pzd+rn5u/V283fr
8+Yvm79s/rL5y+Yvm79s/rL5y+bv5snNXzZ/2fxl85fNXzZ/2fxl85fN362f
m79s/rL5y+Yvm79s/rL5u9ff/GXzN973OuYvm79s/rL5y+Yvm79s/rL5y+Yv
m7+7b+HmL5u/bP6y+cvmL5u/bP6y+cvmL5u/bP6y+cvmL5u/bP7yznnPuck9
B7PnmvWcmp470H2kuy9o93nrvj3dh6HP1fY5qd733vsYe19Kv2dk85XNVzZf
2Xxl85XNVzZf2Xxl85XNVzZf2Xxl83XX++br1sfN162nm69bfzdf2Xxl85XN
VzZf2Xxl85XNVzZfNy9uvrL5yuYrm69svrL5yuYrm69svrL5yuYrm69svrL5
yuYrm697/c1XNl/jfU9uvrL5yuYrm69svrL5yuYrm69svrL5uvvAbr6y+crm
K5uvbL6y+crmK5uvbL6y+crmK5uvbL6y+crmK5uvPYe+5wr3nMie+9VzXLov
f/dZ7r6Z3Qet+9p0n4I+d9rniHpfeO/z630bbL6y+crmK5uvbL6y+crmK5uv
bL6y+crmK5uvbL7uet983fq4+br1dPN16+/mK5uvbL6y+crmK5uvbL6y+crm
6+bFzVc2X9l8ZfOVzVc2X9l8ZfOVzVc2X9l8ZfOVzVc2X9l8ZfN1r7/5yuZr
vPuOzFc2X9l8ZfOVzVc2X9l8ZfOVzVc2X3df7c1XNl/ZfGXzlc1XNl/ZfGXz
lc1XNl/ZfGXzlc1XNl/ZfGXzlc3XntPec3d7jmLPxeo5J923vvsQd1/J7hPW
fV/6HH+fy+xzNr1vuvfBsfnK5iubr2y+svnK5iubr2y+svnK5iubr2y+svm6
633zdevj5uvW083Xrb+br2y+svnK5iubr2y+svnK5iubr5sXN1/ZfGXzlc1X
Nl/ZfGXzlc1XNl/ZfGXzlc1XNl/ZfGXzlc3Xvf7mK5uv8e7jNF/ZfGXzlc1X
Nl/ZfGXzlc1XNl/ZfN1zCjdf2Xxl85XNVzZf2Xxl85XNVzZf2Xxl85XNVzZf
2Xxl85XNVzZf2XztOeY9l7bnDPbcqJ4D0n3du09v913sPlrdF6XPufe5xT6H
0vuK2Xxl85XNVzZf2Xxl85XNVzZf2Xxl85XNVzZf2Xzd9b75uvVx83Xr6ebr
1t/NVzZf2Xxl85XNVzZf2Xxl85XN182Lm69svrL5yuYrm69svrL5yuYrm69s
vrL5yuYrm69svrL5yubrXn/zlc3XePfFm69svrL5yuYrm69svrL5yuYrm69s
vu65r5uvbL6y+crmK5uvbL6y+crmK5uvbL6y+crmK5uvbL6y+crmK5uvbL6y
+dpzvntua8/h67lKPSej+553H9vuS9h9prpvSJ8D73N9fU6DzVc2X9l8ZfOV
zVc2X9l8ZfOVzVc2X9l8ZfOVzddd75uvWx83X7eebr5u/d18ZfOVzVc2X9l8
ZfOVzVc2X9l83by4+crmK5uvbL6y+crmK5uvbL6y+crmK5uvbL6y+crmK5uv
bL7u9Tdf2XyN95yR+crmK5uvbL6y+crmK5uvbL6y+crm656jvfnK5iubr2y+
svnK5iubr2y+svnK5iubr2y+svnK5iubr2y+svnK5iubr2y+9hzsnmvac+p6
7lDPkei+4N3ntfv2dR+m7qvR56T73Bubr2y+svnK5iubr2y+svnK5iubr2y+
svnK5iubr7veN1+3Pm6+bj3dfN36u/nK5iubr2y+svnK5iubr2y+svm6eXHz
lc1XNl/ZfGXzlc1XNl/ZfGXzlc1XNl/ZfGXzlc1XNl/ZfN3rb76y+RrvuR7z
lc1XNl/ZfGXzlc1XNl/ZfGXzlc3X7Utw85XNVzZf2Xxl85XNVzZf2Xxl85XN
VzZf2Xxl85XNVzZf2Xxl85XNVzZf2Xxl87XnRPfcz57j1nN5es5C983uPqjd
1677FHXfiT5H3OfOdv3u/i02f9n8ZfOXzV82f9n8ZfOXzV82f9n8ZfOXzV82
f7cebv5u/dz83Xq7+bv1efOXzV82f9n8ZfOXzV82f9n8ZfN38+TmL5u/bP6y
+cvmL5u/bP6y+cvm79bPzV82f9n8ZfOXzV82f9n83etv/rL5G+85SvOXzV82
f9n8ZfOXzV82f9n8ZfOXzd/tA3Pzl81fNn/Z/GXzl81fNn/Z/GXzl81fNn/Z
/GXzl81fNn/Z/GXzl81fNn/Z/GXzl83fnrPcczN7DlrPtek5Bd13uvuIdl+4
7vPTfRv6nO+u381fNn/Z/GXzl81fNn/Z/GXzl81fNn/Z/GXzl81fNn+3Hm7+
bv3c/N16u/m79Xnzl81fNn/Z/GXzl81fNn/Z/GXzd/Pk5i+bv2z+svnL5i+b
v2z+svnL5u/Wz81fNn/Z/GXzl81fNn/Z/N3rb/6y+RvvuUjzl81fNn/Z/GXz
l81fNn/Z/GXzl83f7bt185fNXzZ/2fxl85fNXzZ/2fxl85fNXzZ/2fxl85fN
XzZ/2fxl85fNXzZ/2fxl85fN355r33OKe+5kzxHruTDd57/7Nncfzu6r1n1y
uq9Cn+Pl/jSf2Xxm85nNZzaf2Xxm85nNZzaf2Xxm85nNZzaf2Xzeern5vPV1
83nr8ebz1u/NZzaf2Xxm85nNZzaf2Xxm85nN582bm89sPrP5zOYzm89sPrP5
zOYzm89bXzef2Xxm85nNZzaf2Xxm83mvv/nM5nO853TMZzaf2Xxm85nNZzaf
2Xxm85nNZzaftw/izWc2n9l8ZvOZzWc2n9l8ZvOZzWc2n9l8ZvOZzWc2n9l8
ZvOZzWc2n9l8ZvOZzWc2n9l85p4j33OBe85jz+3qOSzdV7/7JHffy+5j1n1v
us9Cn/vtc2j9XKP/zu5c70/znc13Nt/ZfGfznc13Nt/ZfGfznc13Nt/ZfGfz
fevt5vvW5833reeb71v/N9/ZfGfznc13Nt/ZfGfznc13Nt83r26+s/nO5jub
72y+s/nO5jub72y+b33efGfznc13Nt/ZfGfznc33vf7mO5vv8e6rNN/3PfXN
dzbf2Xxn853Ndzbf2Xxn853Ndzbf2Xxn853Ndzbf9z69+c7mO5vvbL6z+b7n
qm6+s/nO5jub72y+s/nO5jub72y+s/nO5jub72y+s/nOPee95/b2HMaeq9Vz
Urrvffcx7r6U5nv3yem+DX2OuM+99TmN3lfc++B630a/Z+zn3v0cpv/ubye4
P/WD9YP1g/WD9YP1g/Vjv+/1g/WD9YP1g/Vj6/n6sfV//dj1uH7s/XX9YP1g
/WD9YP1g/WD9YP1g/dg8vH6wfrB+sH6wfmx9XT9YP1g/WD+2/q8frB+sH6wf
rB+sH6wfe/31g/Uj3n34+rH7mq4frB+sH6wfrB+sH6wfrB+sH9sH/frB+sH6
wfrB+rF/110/WD9YP1g/WD/2HO71g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1
g/WD9aPnuvec3p672HO0ei5K97nvvsXd57L7qnWfn+470eek+1xfn0PpfdO9
z6/3pfR70n5u38+J+ndFO8H9qR+sH6wfrB+sH6wf+32vH6wfrB+sH6wfW8/X
j63/68eux/Vj76/rB+sH6wfrB+sH6wfrB+sH68fm4fWD9YP1g/WD9WPr6/rB
+sH6wfqx9X/9YP1g/WD9YP1g/WD92OuvH6wf8Z7b0o/dB3v9YP1g/WD9YP1g
/WD9YP1g/di5GdcP1g/WD9YP1o99DnD9YP1g/WD9YP3Yvg3XD9YP1g/WD9YP
1g/WD9YP1g/WD9YP1g/WD9YP1g/WD+457z23t+cw9lytnpOiH90Xuftwdl+4
7lPUfTX6HHifW+xzNr0vvPcx9r6afs/b7xX6OVT/rmgnuD/1g/WD9YP1g/Vj
v+/1g/WD9YP1g/Vj6/n6sfV//dj1uH7s/XX9YP1g/WD9YP1g/WD9YP1g/dg8
vH6wfrB+sH6wfmx9XT9YP1g/WD+2/q8frB+sH6wfrB+sH6wfe/31g/Uj3nO+
+rHnJq4frB+sH6wfrB+sH6wfrB+sHztn6frB+sH6wfrB+rHPja8frB+sH6wf
rB/b5+f6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrBPee95/bq
R8/R6rko3Ue/+zZ3H9Hua9d9mLpvSJ9z73OZfY6o9733PszeF9Tvofu9RT+H
6t8V7QT3p36wfrB+sH7s971+sH6wfrB+sH5sPV8/tv6vH7se14+9v64frB+s
H6wfrB+sH6wfrB+sH5uH1w/WD9YP1g/Wj62v6wfrB+sH68fW//WD9YP1g/WD
9YP1g/Vjr79+sH7E2xdCP/ac3fWD9YP1g/WD9YP1g/WD9YP1Y+fyXT9YP1g/
WD9YP/Y94/WD9YP1g/WD9WP7wl0/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/
WD9YP1g/WD9YP3que8/p7bmLPUer5650n//uO919ULtvX/eZ6r4ofY6/z532
Oanet9/7SHvfUr/n7vcW/Ryqf1e0E9yf+sH6wfqx3/f6wfrB+sH6wfqx9Xz9
2Pq/fux6XD/2/rp+sH6wfrB+sH6wfrB+sH6wfmweXj9YP1g/WD9YP7a+rh+s
H6wfrB9b/9cP1g/WD9YP1g/WD9aPvf76wfoRbx8h/dhz2dcP1g/WD9YP1g/W
D9YP1g/Wj53jev1g/WD9YP1g/dh9KdcP1g/WD9YP1o/tI3r9YP1g/WD9YP1g
/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD96LnuPae35y72nK6eC9NzCrpv
dvd57b6E3Uer+750n4I+V9vnvPrcQe9z7X1R/Z6731v0c6j+XdFOcH/qB+vH
ft/rB+sH6wfrB+vH1vP1Y+v/+rHrcf3Y++v6wfrB+sH6wfrB+sH6wfrB+rF5
eP1g/WD9YP1g/dj6un6wfrB+sH5s/V8/WD9YP1g/WD9YP1g/9vrrB+tHvH3n
9GP7eFw/WD9YP1g/WD9YP1g/WD9YP3bu9/WD9YP1g/WD9WP3MV4/WD9YP1g/
WD+27/T1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/Wj
57r3nN6e69hzxHquTc9Z6L7g3ce2+y52n7Dua9N9GPpccJ9T63MRvY+290X1
e+5+b9HPofp3RTvB/akf+32vH6wfrB+sH6wfW8/Xj63/68eux/Vj76/rB+sH
6wfrB+sH6wfrB+sH68fm4fWD9YP1g/WD9WPr6/rB+sH6wfqx9X/9YP1g/WD9
YP1g/WD92OuvH6wf8fYp1Y/t+3T9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9
YP3Yfe/XD9YP1g/WD9aPnVNw/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9
YP1g/WD9YP1g/WD92PW9fvRc954D3HMnew5az+XpORLd97z79HZfye6D1n17
uo9En2vuc3R97qL30fa+qH7P3e8t+jlU/65oJ7g/9YP1g/WD9YP1Y+v5+rH1
f/3Y9bh+7P11/WD9YP1g/WD9YP1g/WD9YP3YPLx+sH6wfrB+sH5sfV0/WD9Y
P1g/tv6vH6wfrB+sH6wfrB+sH3v99YP1I96+1tuf2D6B9ic+b3/i8/YnPm9/
4vP2Jz5vf+Lz9ic+b3/i8/YnPm9/4vP2Jz5vf+Lz9ic+b39iz0nZn/i8/YnP
25/4vP2Jz9uf2Lk29ic+b3/i8/YnPm9/4vP2Jz5vf+Lz9ic+b3/i8/YnPm9/
4vP2Jz5vf+Lz9ic+b3/is36wfrB+8PYnPusH68eur/2Jz/rRc+N7TnHPzew5
bj13qOdkdF/37kPcfTO7z1v3Heo+GH3uus/p9bmL3kfb+6L6PXe/t+jnUP27
op3Y75uf23/5vP2Xz9t/+bz9l61n+y9b//Zfdj3sv+z9Zf/l8/ZfPm//5fP2
Xz5v/+Xz9l8+b//l8/ZfPm//ZfPQ/svn7b983v7L5+2/fN7+y9aX/ZfP23/5
vP2Xz9t/2fq3//J5+y+ft//yefsvn7f/8nn7L5+3/7LX23/5vP2X/3/vHAT9
2L6y1w/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/Wjz1Xe/1g/WD9YP1g/dg5
aNcP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1o9d3+sH
6wfrR8+17znLPfez59T1XKWeA9J967vPcvcF7T513Tep+3T0ue4+p9fnLnof
be+L6vfc/d6in0P174p2gvtTP1g/WD+2nq8fW//Xj12P68feX9cP1g/WD9YP
1g/WD9YP1g/Wj83D6wfrB+sH6wfrx9bX9YP1g/WD9WPr//rB+sH6wfrB+sH6
wfqx118/WD/inZujH9uH/PrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+rF9
GK4frB+sH6wfrB87N/P6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6
wfrB+sH6wfqx63v9YP1g/WD9YP3oOdE917Tn8PXcqJ5z0n35u4909zXtPnvd
16n7gPS57j6n1+cueh9t74vq99z93qKfQ/XvinaC+1M/WD+2nq8fW//Xj12P
68feX9cP1g/WD9YP1g/WD9YP1g/Wj83D6wfrB+sH6wfrx9bX9YP1g/WD9WPr
//rB+sH6wfrB+sH6wfqx118/WD/inbOmHzu34vrB+sH6wfrB+sH6wfrB+sH6
wfrB+sH6wfrB+rF9e64frB+sH6wfrB87Z/n6wfrB+sH6wfrB+sH6wfrB+sH6
wfrB+sH6wfrB+sH6wfrB+sH6wfqx63v9YP1g/WD9YP1g/eg52D23tecM9lys
nuPScwe6D3b3Ze0+gN03qvuA9LnuPqfX5y56H23vi+r33P3eop9D9e+KdoL7
Uz+2nq8fW//Xj12P68feX9cP1g/WD9YP1g/WD9YP1g/Wj83D6wfrB+sH6wfr
x9bX9YP1g/WD9WPr//rB+sH6wfrB+sH6wfqx118/WD/incupHzvn6PrB+sH6
wfrB+sH6wfrB+sH6wfrB+sH6wfrB+rF93q4frB+sH6wfrB+sH6wfrB+sH6wf
rB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfu77XD9YP1g/WD9YP1o9d
n+tHz/nuubQ9R7HnfvWcmp6b0H28u29s9xnsvlHdB6TPdfc5vT530ftoe19U
v+fu9xb9HKp/V7QT3J/6sfV//dj1uH7s/XX9YP1g/WD9YP1g/WD9YP1g/dg8
vH6wfrB+sH6wfmx9XT9YP1g/WD+2/q8frB+sH6wfrB+sH6wfe/31g/Uj3jnO
+rFz8a4frB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB/bF/T6wfrB+sH6wfrB
+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6set7/WD9
YP1g/WD9YP3Y9bl+sH70HPOeu9tzInuuWc/Z6bkP3We8+9J2n8HuG9V9QPpc
d5/T63MXvY+290X1e+5+b9HPofp3RTux9Zyf+rHrcf3Y++v6wfrB+sH6wfrB
+sH6wfrB+rF5eP1g/WD9YP1g/dj6un6wfrB+sH5s/V8/WD9YP1g/WD9YP1g/
9vrrB+tH/OC66sfOUb1+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH5sH+nr
B+sH6wfrB+sH6wfrB+sH68feV9cP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP
1g/WD9aPXd/rB+sH6wfrB+sH68euz/WD9YP1o+e091zhnoPZc9l6TlDPpeg+
5t2XtvsMdt+o7gPS57r7nF6fu+h9tL0vqt9z93uLfg7Vvyvaia3//NSPvb+u
H6wfrB+sH6wfrB+sH6wfrB+bh9cP1g/WD9YP1o+tr+sH6wfrB+vH1v/1g/WD
9YP1g/WD9YP1Y6+/frB+xA+uo37s3O3rB+sH6wfrB+sH6wfrB+sH6wfrB+sH
6wfrB+vHzh24frB+sH6wfrB+sH6wfux9cv1g/di/w64frB+sH6wfrB+sH6wf
rB+sH6wfrB+sH6wfrB+sH6wfu77XD9YP1g/WD9YP1o9dn+sH6wfrx+4rvX70
HPqem9xzPHuuXM8x6rkX3ce8+9J2n8HuG9V9QPpcd5/T63MXvY+290X1e+5+
b9HPofp3RTux65Gf+sH6wfrB+sH6wfrB+sH6wfqxeXj9YP1g/WD9YP3Y+rp+
sH6wfrB+bP1fP1g/WD9YP1g/WD9YP/b66wfrR/zguukH6wfrB+sH6wfrB+sH
6wfrB+sH6wfrB+sH6wfrx86puX6wfrB+sH6wfmzdXz9YP/bvqusH68f+br9+
sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+7PpeP1g/WD9YP1g/WD92
fa4frB+sH3sO4fqx98P1g/Wj5z73HNKee9dzknruRfcx77603Wew+0Z1H5A+
193n9PrcRe+j7X1R/Z6731v0c6j+XdFO7P2Vn/rB+sH6wfrB+sH6wfrB+rF5
eP1g/WD9YP1g/dj6un6wfrB+sH5s/V8/WD9YP1g/WD9YP1g/9vrrB+tH/OA6
6QfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+vHzjW7frB+sH5sHV8/WD/2
76TrB+vH/g6/frB+7HPe6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH
68eu7/WD9YP1g/WD9YP1Y9fn+sH6wfqx59auH3s/XD9YP1g/em51z0ntuXo9
J6nnXnQf8+5L230Gu29U9wHpc919Tq/PXfQ+2t4X1e+5+71FP4fq3xXtBPen
frB+sH6wfrB+sH6wfmweXj9YP1g/WD9YP7a+rh+sH6wfrB9b/9cP1g/WD9YP
1g/WD9aPvf76wfoRP7gu+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfqx
czCvH6wfrB/7d8/1g/Vjf1dfP1g/9rnt9YP1Y98LXj9YP1g/WD9YP1g/WD9Y
P1g/WD9YP1g/WD9YP1g/WD92fa8frB+sH6wfrB+sH7s+1w/WD9aPPed8/dj7
4frB+sH6wfrRc7V7DmvP1es5ST33ovuYd1/a7jPYfaO6D0if6+5zen3uovfR
9r6ofs/d7y36OVT/rmgnuD/1g/WD9YP1g/WD9WPz8PrB+sH6wfrB+rH1df1g
/WD9YP3Y+r9+sH6wfrB+sH6wfrB+7PXXD9aP+MF10A/WD9YP1g/WD9YP1g/W
D9YP1g/WD9YP1g/WD9aPnZt8/WD9YP3Y38nXD9aPfQ57/WD92Pd81w/Wj91H
cv1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP3Y9b1+sH6wfrB+sH6w
fuz6XD9YP1g/ti/G9WPvh+sH6wfrB+sH60fP7e45rD1Xr+ck9dyL7mPefWm7
z2D3jeo+IH2uu8/p9bmL3kfb+6L6PXe/t+jnUP27op3g/tQP1g/WD9YP1o/N
w+sH6wfrB+sH68fW1/WD9YP1g/Vj6//6wfrB+sH6wfrB+sH6sddfP1g/4gf/
3fWD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1Y5+rXj9YP/a9
3fWD9WP3hVw/WD923+H1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1
Y9f3+sH6wfrB+sH6wfqx63P9YP1g/dg+StePvR+uH6wfrB+sH6wfW3/Xj57b
3XNYe65ez0nquRfdx7z70nafwe4b1X1A+lx3n9Prcxe9j7b3RfV77n5v0c+h
+ndFO8H9qR+sH6wfrB+bh9cP1g/WD9YP1o+tr+sH6wfrB+vH1v/1g/WD9YP1
g/WD9YP1Y6+/frB+xA/+O+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfr
B+sH6wfrx76Hu36wfuw+j+sH68fuI7x+sH7sPvXrB+sH6wfrB+sH6wfrB+sH
6wfrB+sH6wfrB+sH6wfrx67v9YP1g/WD9YP1g/Vj1+f6wfrB+rF9964fez9c
P1g/WD9YP1g/tv6uH6wfPbe757D2XL2ek9RzL7qPefel7T6D3Teq+4D0ue4+
p9fnLnofbe+L6vfc/d6in0P174p2gvtTP1g/WD82D68frB+sH6wfrB9bX9cP
1g/WD9aPrf/rB+sH6wfrB+sH6wfrx15//WD9iB/8d9UP1g/WD9YP1g/WD9YP
1g/WD9YP1g/WD9YP1g/WD9YP1g/Wj923cf1g/dh9gdcP1o/dd379YP3Yc03X
D9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/Wj13f6wfrB+sH6wfrB+vH
rs/1g/WD9WP7tF4/9n64frB+sH6wfrB+bP1dP1g/WD96bnfPYe25ej0nqede
dB/z7kvbfQa7b1T3Aelz3X1Or89d9D7a3hfV77n7vUU/h+rfFe0E96d+sH5s
Hl4/WD9YP1g/WD+2vq4frB+sH6wfW//XD9YP1g/WD9YP1g/Wj73++sH6ET/4
76gfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH7vP7/rB+rH7
yK8frB97Tun6wfqx52CvH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+s
H7u+1w/WD9YP1g/WD9aPXZ/rB+sH68f29b5+7P1w/WD9YP1g/WD92Pq7frB+
sH6wfvTc7p7D2nP1ek5Sz73oPubdl7b7DHbfqO4D0ue6+5xen7vofbS9L6rf
c/d7i34O1b8r2gnuT/3YPLx+sH6wfrB+sH5sfV0/WD9YP1g/tv6vH6wfrB+s
H6wfrB+sH3v99YP1I37w300/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9Y
P1g/WD9YP3Zf+PWD9WPPHV0/WD/2XOv1g/Vj+yZcP1g/WD9YP1g/WD9YP1g/
WD9YP1g/WD9YP1g/WD9YP3Z9rx+sH6wfrB+sH6wfuz7XD9YP1o+dA3H92Pvh
+sH6wfrB+sH6sfV3/WD9YP1g/WD96LndPYe15+r1nKSee9F9zLsvbfcZ7L5R
3Qekz3X3Ob0+d9H7aHtfVL/n7vcW/Ryqf1e0E9yf+sH6wfrB+sH6sfV1/WD9
YP1g/dj6v36wfrB+sH6wfrB+sH7s9dcP1o/4wX8n/WD9YP1g/WD9YP1g/WD9
YP1g/WD9YP1g/WD9YP1g/WD9YP3Yc0TXD9aPPad6/WD92D4I1w/Wj+2zc/1g
/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP3Y9b1+sH6wfrB+sH6wfuz6
XD9YP1g/dm7Q9WPvh+sH6wfrB+sH68fW3/WD9YP1g/WD9YP1o+d29xzWnqvX
c5J67kX3Me++tN1nsPtGdR+QPtfd5/T63EXvo+19Uf2eu99b9HOo/l3RTmwe
5qd+sH6wfrB+bH1dP1g/WD9YP7b+rx+sH6wfrB+sH6wfrB97/fWD9SN+2H+X
6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+vHnju9frB+bF+D
6wfrx/bNuX6wfmxftusH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+vH
ru/1g/WD9YP1g/WD9WPX5/rB+sH6sXPmrh97P1w/WD9YP1g/WD+2/q4frB+s
H6wfrB+sH6wfPbe757D2XL2ek9RzL7qPefel7T6D3Teq+4D0ue4+p9fnLnof
be+L6vfc/d6in0P174p2gvtTP1g/WD+2vq4frB+sH6wfW//XD9YP1g/WD9YP
1g/Wj73++sH6ET+so9cP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP
1g/Wj+1TcP1g/dg+ONcP1o/ts3b9YP3YPp7XD9YP1g/WD9YP1g/WD9YP1g/W
D9YP1g/WD9YP1g/Wj13f6wfrB+sH6wfrB+vHrs/1g/WD9WPnkl4/9n64frB+
sH6wfrB+bP1dP1g/WD9YP1g/WD9YP1g/em53z2HtuXo9J6nnXnQf8+5L230G
u29U9wHpc919Tq/PXfQ+2t4X1e+5+71FP4fq3xXtBPenfrB+bH1dP1g/WD9Y
P7b+rx+sH6wfrB+sH6wfrB97/fWD9SN+2N9d1w/WD9YP1g/WD9YP1g/WD9YP
1g/WD9YP1g/WD9YP1g/WD9aP7Wtz/WD92L5p1w/Wj+3Lef1g/di+z9cP1g/W
D9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9aPXd/rB+sH6wfrB+sH68euz/WD
9YP1Y+dYXz/2frh+sH6wfrB+sH5s/V0/WD9YP1g/WD9YP1g/WD9YP3pud89h
7bl6PSep5150H/PuS9t9BrtvVPcB6XPdfU6vz130PtreF9Xvufu9RT+H6t8V
7QT3p35sfV0/WD9YP1g/tv6vH6wfrB+sH6wfrB+sH3v99YP1I37Y53TXD9YP
1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1o/tg3b9YP3YPpvXD9aP
7eN8/WD92DkB1w/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1o9d3+sH
6wfrB+sH6wfrx67P9YP1g/WD9WPvh+sH6wfrB+sH68fW3/WD9YP1g/WD9YP1
g/WD9YP1Y7/v9aPndvcc1p6r13OSeu5F9zHvvrTdZ7D7RnUfkD7X3ef0+txF
76PtfVH9nrvfW/RzqP5d0U5wf+oH6wfrB+vH1v/1g/WD9YP1g/WD9YP1Y6+/
frB+xA/7Xuf6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB+rF9
M68frB/bl/n6wfqxff+vH6wfO1fm+sH6wfrB+sH6wfrB+sH6wfrB+sH6wfrB
+sH6wfrB+rHre/1g/WD9YP1g/WD92PW5frB+sH6wfuz9cP1g/WD9YP1g/dj6
u36wfrB+sH6wfrB+sH6wfrB+7Pe9frB+9NzunsPac/V6TlLPveg+5t2XtvsM
dt+o7gPS57r7nF6fu+h9tL0vqt9z93uLfg7Vvyvaia2v/NQP1g/Wj63/6wfr
B+sH6wfrB+sH68def/1g/Ygfdh/A9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD
9YP1g/WD9YP1g/Vj+yxfP1g/to//9YP1Y+fEXD9YP3YO2fWD9YP1g/WD9YP1
g/WD9YP1g/WD9YP1g/WD9YP1g/Vj1/f6wfrB+sH6wfrB+rHrc/1g/dj7+PrB
+rH3w/WD9YP1g/WD9WPr7/rB+sH6wfrB+sH6wfrB+sH6sd/3+sH6wfrRc7t7
DmvP1es5ST33ovuYd1/a7jPYfaO6D0if6+5zen3uovfR9r6ofs/d7y36OVT/
rmgnuD/1g/Vj6//6wfrB+sH6wfrB+sH6sddfP1g/4ofdN3b9YP1g/WD9YP1g
/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/di+/NcP1o+d+3L9YP3YuWLXD9aP
nVt5/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/dj1vX6wfrB+sH6w
frB+7PpcP1g/9u++6wfrx94P1w/WD9YP1g/Wj62/6wfrB+sH6wfrB+sH6wfr
B+vHft/rB+sH6wfrR8/t7jmsPVev5yT13IvuY959abvPYPeN6j4gfa67z+n1
uYveR9v7ovo9d7+36OdQ/buineD+1I+t/+sH6wfrB+sH6wfrB+vHXn/9YP2I
H3af8fWD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1g/WD9YP1Y+e4XD9Y
P3ZO2PWD9eP/FnZvIZfVdRjHjbIg6CZKpLxpCrO0qIsoiDZDDqNmaIZIRwh1
pgOYMB0oSUZhLCsmKBDpwgtNs5CGcabECpaoGR3QRC866eRUgkV4E4QQRcys
3+cZeoYXvdl853332nsdtp/97v9e6595KMcPzY/Mczx+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+ZP+OH5ofmh+aH5ofmh/ZP+OH5kc+Jxg/ND/y
ehg/ND80PzQ/ND9y/I0fmh+aH5ofmh+aH5ofmh+aH1nf8UPzQ/ND80Pzo+ft
7nlYe169niep573o65j3dWn7OoN93ai+Dkif193n6fV5F/092v5eVI9z97hF
fw7Vf1e0E7pv+aH5ofmh+aH5ofmh+ZH7jx+aH9VLzksZPzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8y79f4ofmReSXHD82PzFs8fmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5k/44fmh+aH5ofmh+aH9k/
44fmRz5XHj80P/J6GD80PzQ/ND80P3L8jR+aH5ofmh+aH5ofmh+aH5ofWd/x
Q/ND80PzQ/Mjx/P40fN29zysPa9ez5PU8170dcz7urR9ncG+blRfB6TP6+7z
9Pq8i/4ebX8vqse5e9yiP4fqvyvaiRz/dcsPzQ/ND80PzQ/Nj9x//ND8qF5y
HuP4ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZF5IscPzY/M
Qzx+aH5knvvxQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8yP7
d/zQ/MjrZPzQ/ND80PzI/hk/ND8yDjl+aH7k9TB+aH5ofmh+aH7k+Bs/ND80
PzQ/ND80PzQ/ND80P7K+44fmh+aH5ofmR47n8SPH//jR83b3PKw9r17Pk9Tz
XvR1zPu6tH2dwb5uVF8HpM/r7vP0+ryL/h5tfy+qx7l73KI/h+q/K9oJ3bf8
0PzQ/ND80PzI/ccPzY/qJee9jx+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmVd4/ND8yLz144fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmR/bv+KH5kfdV44fmh+aH5kf2z/ih+ZHvrYwfmh95PYwf
mh+aH5ofmh85/sYPzQ/ND80PzQ/ND80PzQ/Nj6zv+KH5ofmh+aH5keN5/Mjx
P35kf4wfPW93z8Pa8+r1PEk970Vfx7yvS9vXGezrRvV1QPq87j5Pr8+76O/R
9veiepy7xy36c6j+u6Kd0H3LD80PzQ/Nj9x//ND8qF5ynZTxQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8yPz0I8fmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of2b/jh+ZH/g4fPzQ/ND80P7J/
xg/Nj3zPcfzQ/MjrYfzQ/ND80PzQ/MjxN35ofmh+aH5ofmh+aH5ofmh+ZH3H
D80PzQ/ND82PHM/jR47/8SP7Y/zI62v86Hm7ex7Wnlev50nqeS/6OuZ9Xdq+
zmBfN6qvA9Lndfd5en3eRX+Ptr8X1ePcPW7Rn0P13xXthO5bfmh+aH7kfuOH
5kf1Yrn80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8yP4dPzQ/
ND80PzQ/ND+yf8YPzQ/ND82PvB7GD80PzQ/ND82PHH/jh+aH5ofmh+aH5ofm
h+aH5kfWd/zQ/ND80PzQ/MjxPH7k+B8/sj/Gj7y+xg/ND93zePe8rD3PXs+b
1PNg9HXN+zq1fd3Bvo5UXxekz/Pu8/b6PIz+Xm1/T6rHvXscoz+X6r8z2o2+
5YfmR+4/fmh+VC+5DuP4ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5kf07fmh+ZJxv/ND80PzQ/Mj+GT80P3Ie1fih+ZHXw/ih+aH5ofmh+ZHj
b/zQ/ND80PzQ/ND80PzQ/ND8yPqOH5ofmh+aH5ofOZ7Hjxz/40f2x/iR19f4
ofmh+dHzdvc8rD2vXs+T1PNe9HXM+7q0fZ3Bvm5UXwekz+vu8/T6vIv+Hm1/
L6rHuXvcoj+H6r8r2gndt/zI/ccPzY/qJdftHT80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND+yf8cPzY98L2T80PzQ/ND8yP4ZPzQ/ct7t+KH5
kdfD+KH5ofmh+aH5keNv/ND80PzQ/ND80PzQ/ND80PzI+o4fmh+aH5ofmh85
nsePHP/jR/bH+JHX1/ih+aH5ofnR83b3PKw9r17Pk9TzXvR1zPu6tH2dwb5u
VF8HpM/r7vP0+ryL/h5tfy+qx7l73KI/h+q/K9oJ3bf80PyoXnKdd+Mf0xn/
mM74x3TGP6Yz/jGd8Y/pjH9MZ/xjOuMf0xn/mM74x3TGP6Yz/jGd8Y/pjH9M
Z/xjOuMf0xn/mM74x3TGP6Yz/jGd8Y/pjH9MZ/xjOuMf0xn/mM74x3TGP6Yz
/jGd8Y/pjH9MZ/xjOuMf0xn/mM74x3TGP6Yz/jGd8Y/pjH9MZ/zD/jX+MZ3x
D98jNP4xnfGP6Yx/TGf8w/4x/jGd8Q/XaTD+MZ3xD68H4x/TGf+YzvjHdMY/
pjP+4fgz/jGd8Y/pjH9MZ/xjOuMf0xn/mM74x3TGP6Yz/mF9jX9MZ/xjOuMf
0xn/mM74h+PZ+Ifj3/iH/WH8w+vL+Md0xj+mM/4xnfGP6Yx/1LzdPQ9rz6vX
8yT1vBd9HfO+Lm1fZ7CvG9XXAenzuvs8vT7vor9H29+L6nHuHrfoz6H674p2
Ivev24x//H8vmRdk/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/Mj+HT80P/K98/FD80PzQ/Mj+2f80PzIdX3GD82PvB7GD80PzQ/ND82PHH/j
h+aH5ofmh+aH5ofmh+aH5kfWd/zQ/ND80PzQ/MjxPH7k+B8/sj/Gj7y+xg/N
D80PzQ/ND82PLebtPmle1p5nr+dN6nkw+rrmfZ3avu5gX0eqrwvS53n3eXt9
HkZ/r7a/J9Xj3j2O0Z9L9d8Z7Ubffur4/nlqccsTvePIsdfPDelTjv138L6f
6gueOP7zLGf3erup5Z30OJbr97d6HD/f6nH9fKvnkc/n6nF6ub0cvdVtr5fH
sfyc1z/L15bfz6sc7+Vsnme5m+d5nJO2zxbL7eVsejk5zuZ5n7/3b2/98jVP
LW53rrdb/nvfer79e/3v/fj9OH7f//+t57uOHutdJy1H+z1O+PdLfn/8fllP
y/W4lutx/Xs+75r7WY6f616P9srz8vv9vPp16vn5vX5+2vPyOP288vnd/J77
bbHeOV56f/t39+vjqrfLc1cec/m6TW9H9/vXcbdPLNf73K3+Xe//483vO3Tx
ie327Pr7WW7e509/Zf39rKf7WY5bP/f68Dw8b+3+j79959VHXnfi+Xrdadvd
7/XyrZft5Pe8H7r+pf9++d7dh5Yd/zn9jFctty7eZ3l/tO0jF1+2++zDeZwr
7n7iofNuPJznu2s613eb3/f+6Nuz/EvW5ed9nPdr97zomze86dEDy7Z7f3nn
7374/cX7Ou/fbr3owlMufePdi/dXD057f/XCU9f7n7reP+8L3b5slnv7PI7H
9X7swPx8nkfeR3pcz+O2tU+cVzzrYbvZjrar93cf/u/682vXn+d9qO1qO79m
7bwvtZ1t94+tndfZrtoPfp7r7s3y7ZezZ/nafqn9dOK85lm/z89+e7j2g/X7
+Lp+m5/N9vFz+8V+OmPtvC+2f+w3+8F+cXvn/Nytf6/jZ9P76crZ7p6n5+V5
et5+7nm9cp5n5nua7dL7qfdL74fe7r2dH3v4+t9e/aNbltMvv+A9l247tJy2
54lzznnwpuWxnT/57AseP7Tcvu/is8/6+1eXr132kn0/fu/h5ZHnbt3x3T2f
zH6/Y/eFf3r/z/dunjzzyWu+ftXh5Rf77/n0Jz5w02bv5za3veL+Q8s7r9p3
0Q+e/t6y/6/3fuEN2w8sZ37mS/se+vMdy9MH9/zjyIUHl8fP+ufbrt1z27Lr
vPP/8Nz2u5dHj971+jPfffvm0BVvue+D3zm4XDf3e/Ms59xn7nr2ow/clVvL
sdzH1vttvrEuZzlt1utXs54ex+NaT+v9xfV5b46s65H1th2Oruu5+dC63tkO
tovtfu7a2S62043r8jY3r8vLdrLdHlmfz+bF6/PZXL4+381v1ue7efW6Ppsn
1/XZ/Hq20y2z3Z5Zt8fmnHV7bN6xbqfcfmvdnpvt6/bMdrLdPI7Hfe0s5y+z
XPeznPtnO1032812sZ1sB9vFetsO1tN6Wy/r+T+qLcf1
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw0nWO8NDnXd6/u6mpUVWts2zP32LZt27Zt27Zt27Ztm0/Wu/b7Ib/0riQ7
Ozv5r1Sfc+aaCTfcbsVt6yNGjHhnqREjslRvM9mIEdibprJlKnkqzVSOTGXS
VFLziN1SGSmVkVPZI5VRUhk1lYNTGT+VCVLZOpVWKu1Utgof2Fuk0gi/u6Yy
DF/bp1KmUqWyXSpF2IeEvwlT2TaVTrRtNsI4iXnzqPG7TcxJv11SGcQch4aP
iVI5PJWJU5kklX1SGSOVMVP5J5XTUzkjletTSSkZsXQqN6ayTCrLpvJxKvul
sn/UY6Uydir7hg/svVMZPfzuHnkiRwelMl7k6MBUxg37sIiLmA5IZZxo2zPy
Oloqe0U9esw9dvT7JGzG7ZxKP9a8YyrdVHqpHJ/K1KlMk8rRqUyeyhSpnJPK
7KnMkcp5qcyZylypXJnKIqksmsqJqUybynSpnBA+sI9LZarwe3Yqs4WvM9MB
2S6VmdLnU1KZIZUZU7kq/C2WysmpTB9tx0QsU6ZybNT4PSnmpN9OsQ7WdnX4
WDyVa1NZIpUlU7kolXlTmS+V6+IZ+3fUCM8saz4i9pxzvMMIzxo5uiSV+VNZ
IJWLwwf2hanME37PjTyRoytSWThydHkqC4V9TcRFTJelsmC0nR95nTuVC6LG
76UxJ/3OSmXWyOOnsZ+ckc9HeG7Q1q2prJDKiqm8FntMbh5KZd1U1kvlkVTW
T2WDVF4YoQ7RxO2prJTKyqncFj6wb0ll+fD7YCrrhK+7U1ktldVTuSuVVcN+
MfyhxTtTWSXabhqhPpZL5eao8XtHzEm/B1JZO+Z4KXyg9VdGqH/25MlUNhkh
f06rpXOUyv9SOT3qmVM5I+pZUtkECKRSS+XpEXIBHjwVPrBPTAdgp1R2TOXh
yBM5en6EbCJHz42Qd9gvR1zE9OwImUXbo5HXDVN5LOqNUnkm5qTfZ7Fv7Nn9
qawVa743lTVSWTOVd0bIBdj5xgh1C6u+HCHvYNXXI+QCrPpthDpEE++NkAvw
4N3wgf32CLmM3y9GeF7w9dEI2QSrPhwh77B/D39o8YMRMou2NyMW2PxW1Ph9
P+ak332xDtb2R/hA6w+l/D6Yym2pfD9C7cGbG0bIURj6+gjPLGt+Nfacc3zP
CM8aOfpxhFyABz+ED+zvRngP4feryBM5+nWEbCJHv4yQd9h/RlynpvLzCJlF
2zeRV3jwbdT4/SnmpN+mcabqqZyZ7FlGqM8d0tpmHuE9kdXkAuycuOYek5tB
Td7BqpFqcgFWjVtTh2gir8kFeNCo6QO7XpPL+O3XZDG+OjXZBKvaNXmHPV5N
f2ixVZNZtI2oyRTYXKtZ47dZc0769WqyjDnGr+kDrU9YU//syWg194878L8R
5gK/S9a8e2DV0jXPPazaJ30eI5Uxo4YL8GD0mj6wR615v+J3WDNP5Gicmmwi
R2PX5B32BDXjIqaxajKLtpFr5hXej1Kzxi9zMyf99o1YGNetyWvWXNbkL5ye
siYXYOekNXULq2aryTtYNUdNLsCqhWvq8P1Upq7JBXgwVU0f2FPU5DJ+Z63J
YnzNUJNNsGr6mrzDXqSmP7Q4Xfr8xAjbJqsZC2yevGaN32lqzvl4KlXNdbC2
RWv6QOuL19Q/7yzz1NQevFmi5jP2b5KaZ5Y1T1RzzznHRc2zRo7mq8kFeDBv
TR/Yc9e8h/A7e808kaOFarKJHC1Yk3fYi9WMi5gWqMks2uasmVd4MFfNGr/z
15yTfryToTt0uF/sJ2fkgJrnBm0tX5MLsHP7mntMbtapyTtYtV5NLvyVypY1
dYgmVqzJBXiwQk0f2MvV5DJ+167JYnytWpNNsGqVmrzD3ir8ocWVazKLtmVq
6gM2L1uzxu9KNeek31o1WcYcW4cPtL5tTf2zJxul8u8ItXhq+jxjzTvy38gR
+nxgMvn0N+c7fb40le1T2ST1gwvwYOOaPrA3rPnui491a+aJHG1Rk03kaPOa
vMPeJuIips1qMou29WvmlXk3qFnjd9OYk377x76xZ2vW5DVrXr0mf+H0rjW5
ADt3DN3CqoNq8g5WHVKTC7Dq+Jo6RBO71+QCPNgtfGDvUpPL+D0wzgu+9q7J
Jli1V03eYZ+YyrQ1tbhnTWbRtlPEApt3jhq/e8Sc9Fuj5jpY20nhA62fUlP/
7NkRNbUHb5aqyVEYukOcWda8Xew553i1mmeNHB1Vkwvw4MjwgX14zXsIvwdH
nsjRcTXZRI6Orck77JMjLmI6piazaDs08goPDosav0fHnPTj3Yv3J7i2WdyT
WSpbpNJIJU/lnJpcgJ331NxjcnNlTd7BqqtrcgFW3VZTh2jivJpcgAfnhg/s
s2tyGb9X1GQxvi6qySZYdWFN3mHfHv7Q4gU1mUXbmbEG2HxW1Pg9P+ak3+U1
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
35u5nMLv1+EDvX6bq210/2munmHDx7F/3IFP5zILv6M3ZRZnf8ymzOLcfRJ9
Gf9R7j3K+PciH+Tiw1xG0/ZdzIlWvsxlFmv7JuIipi9y2UfbZxEXPPsg8oqv
z+MZ/ZZqugb6vpHLXNb8WuQPNv+Rq2fY8FsuL2DnT7nMgoWNpsyCDc2mzIIf
v0dfxv+ay1/GZ01ZyZhfcjlLG5yCNbT9k8ssmDdsygX093cu+2j7M+KCZz9H
LPj6K57R7/VYB2sbqakP9DpKU22j+6qpnmFD0VR78Ga0pu8Q7N+PuWeWNX8f
+8A5Lpv2ZXyn6X3D+LxpPshFu6mGaRu16Zz4HTRlFmsbuWlcxNRvyj7auk3j
gmetpnnFV6/pM/rxLobm0OHSTfeTfV626ZngvIzfVM+wYdymvICd8zTNEfs/
VVNmwYZpmjILfozXtC/jx2nKX8ZP2ZSVjBm7KWdpm6Ipa2ibuCmzYN5sTbmA
/iZqyj7aJmgaFzwbq6k+8DVh02f0m7wpp/A7e1Mf6HXOptpG9zM11TNsmCF9
fipXixulz//m3pE8g1no84lcZpG/GZv2Zfz0Td9x6Tt103yQi+majqFtrqZz
opVZmzKLtc3RNC5imqUp+2j7X9O44Nm0TfOKr5mbPqPfMk33jT2brClzWfMk
TfMHmxdtqmfYsHBTXsDO+ZoyCxau0JRZsGGlpsyCH4s07cv4hZryl/HLN2Ul
YxZMn9/JbVuu6dmhbcmmzIIX6zblAvpboin7aFusaVzwbP6mscDsxZs+o9+k
TdfB2tZr6gO9btBU2+h+jaZ6hg2rNdUevBmjKUdh6LxNzyxrnrvpPnCOV2/a
l/GrNr1vGL9i03yQi1Waapi2DZvOyflYpymzWNv6TeMiprWbso+2NZvGBc9W
bppXfK3V9Bn9eOfi3QiW/a/lPflcKrOkz89zVlLZuqmeYcOWTXkBO49smiP2
f7emzIINezRlFvzYKvoyfoum/GX8rk1ZyZjNm3KWtl2asoa27ZsyC+Yd3JQL
6G+7puyjbZuIC55t1pTL+No2ntFv56acwu8h4QO9HtZU2+h+v6Z6hg37NN0/
7sAbmnKK835j1LDqpqg5d/tGX8bv3fQeZfzukQ9ysVdTRtN2eMyJVg5qyizW
dmjERUwHNmUfbftHXPBsz8grvg6IZ/T7JPrxbKemzGXNO0T+YPOJTfUMG45v
ygvYeXRTZsHCc5oyCzac15RZ8OOE6Mv445ryl/FnN2UlY45tylnazmrKGtpO
bcosmHdVUy6gv1Oaso+2kyIueHZMxIKvk+MZ/XaMdbC2q8MHer22qbbR/aWp
LNCUDRc11R68ub7pOwR7eVTTM8uaj4h94BxfHH3hwYVN7xvGnxv5IBcXNNUw
bdfFnPi9simzWNs1ERcxXdGUfbRdFnHBs/Mjr/i6PJ7R78ymLCZ3n8Z+chY+
b3pW0MEdTfUMG25rygvY+XBTTsGDR6KGVY9GDT9uj76Mv7Upfxn/UFNWMv6W
ppyl7cGmrKHtnqbMgnn/nwvo7+6m7KPtzogLnt3cVB/4uiue0e+BppzC74vh
A72+FDX6fqrpd0I0/XTUcOLJpt8baTt85HR2UpkplSOi/l8qTzT9nkk/eAZ3
4NbjTe9X2h6LfGC/0pQ1aOXVqDlr8G+rWOfLERf9ngt/tD0TcTEH31H5Gw5+
Z/VZ7Bt7dn9T5rLmeyN/sPn9plyAGe825Sb6frMpB2HkV025AKu+acoOzux7
0Zfx7zRlDeO/bMo4xrzdlMu0fdH07ND2cVPewYvfm2oPnX3UlGW0fRBxwcK3
IhZ8fRjP6HdfrIO1/RE+0PRfTTV/Wio/NeUCzPihKWvQ9xtNucw6X2/KLOzX
IvfYP0Zfxn/fVLeM/zryQS6+a3oP0fZ3zHl6Kr815R1r+zPiIqZfm7KMtp8j
Llj4beQVX7/EM/rN3HK/OQtnNH0HmiXmgWe8KzVbcgFmNFpyE31P2nLvOe8j
teQCrBqlJTtgUt6yL+Ozlqxh/LAl4xhTb8ll2gYtGUpb2ZJ3cGX8ltpDZ0X6
fEnTtlbLuGBhrSWv8dVu+Qzm9VvyC78TtPSBpidqqXnO7FgtuQAzxmh5/6Fv
/jE8WI/fpVoyi7O/TEtmce7GbNmX8aO3vEcZP3LLfJCL0VretbRN3HJOztd4
LXnH2iZsGRcxjduSZbSN3TIuWDhqy7zia5yWz+i3X8s10LfXksusuWqZPxg8
bUtGwI+pW3ITTkzekoMwcvaWnIIHc7ZkB8yYpmVfxk/Vkr+Mn60l4xgzZUtG
0zZrS4bSNmNLxsGSRVpyAf3N0JKDtE3XMi74N0XLWPA1fctn9Ou2XAdrW7Sl
D/S6eEtto/v5W+oZNszbUofwZsmW7xDs32QtzyxrnqTlPnCO52vZl/HztNQt
4+domQ9yMXdLDdO2RMs58btwS2axtsVaxkVMC7VkH20LtIwLns3VMq/4WrDl
M/qhbTSHDveP/WSfD2x5JjgvK7XUM2xYoSUvYOeOLXPE/q/bklmwYf2WzIIf
K7bsy/jlW/KX8eu0ZCVjlmvJWdrWbska2lZrySyYt1VLLqC/VVuyj7aVW8YF
z5ZtqQ98rdLyGf3Waskp/G4dPtDrdi21je43baln2LBxKv811SI17xBo8t+m
zML+J3KHvUnLvozfqGU/xq3XMh/kYsOWY2jbPuZEK1u2ZBZr2zaVTsS0RUv2
0bZZxAXPNmiZV3xtHs/od0DsG3u2ZkvmsubVW+YPNu/ZUs+wYfeWvICdO7dk
Fiw8pCWzYMNhLZkFP/aIvozfrSV/GX9wS1YyZteWnKXtoDg7tO3bklnw4sSW
XEB/+7RkH217RVzwbJeIBV97xzP6rdFyHaztpPCBXk9pqW10f0xLPcOGo1pq
D94s3ZKjMHSnOLOseYfYB87x0dGX8Ue2vG8Yf2jkg1wc0VLDtJ0ac/Iz0RNa
Mou1nRxxEdPxLdlH27ERFzw7PPKKr+PiGf02i9838rtGfpbPz9DPju+o/DyM
n7Wf31LPsOHclryAnfdGjtj/q1oyCzZc05JZ8OO86Mv4c1ryl/FXtmQlY85u
yVnarmjJGtoubsksmHd7Sy6gv4taso+2CyIueHZWSy7j68J4Rr/LW3IKv3eE
D/R6V0tto/ubWuoZNtwQ+8cdOGPKy9OpfiaVT1oyi7P/WUtmce5ujL6Mv77l
Pcr4qyMf5OK6loym7e6YE63c1pJZrO3OiIuYbm3JPtpujrjg2bWRV3zdEs/o
N0bbNdD3spbMZc2XRP5g86Mt9QwbHm7JC9h5f0tmwcIXU9mmJRtebsks+PFI
9GX8Qy35y/jnW7ISzj3YkrO0PdeSNbQ92ZJZMO+9llxAf0+0ZB9tj0Vc8OyB
iAVfj8cz+l0a62Bt74cP9PphS22j+zdb6hk2vN5Se/Dm45bvEOzffS3PLGu+
J/aBc/xG9GX8ay3vG8a/FPkgF6+21DBtH8Wc+H23JbNY2wcRFzG905J9tL0V
ccGzVyKv+Ho7ntHv2ZYsJndjtt1P9nnstmeC8/JNSz3Dhq9a8gJ2lm1zxP7/
3pJZsOHPlsyCH19HX8Z/2ZK/jP+tJSsZ80VLztL2a0vW0PZDS2bBvLwtF9Df
9y3ZR9u3ERc8+7ylPvD1XTyj3y8tOYXfZlsf6LXdVtvonv8mGz3Dhn9TOSOV
M6Pwsy10/lTbv5mAYc/E30xskcp/0Y/x/6Ryeoz/I/JBLv5O5bRo67SdE63w
9xYwi7W12sZFTPAR9tHG32gQFzz7K/KKLzjKM/qN1Xbf2LOfWzKXNf8Y+YPN
I7fVM2wYtuUF7Oy2ZRYsHK8ts2DDBG2ZBT9GatuX8YO2/GX8uG1ZyZh+W87S
Nk7bs0Pb6G2ZBS+mbssF9DdaW/bRNkrbuOBZr20s+Bq17TP6/RTrYG3TtPWB
Xqdrq210P1lbPcOGSdpqD9582pKjMLRqe2ZZc9F2HzjHk7bty/iJ2943jB+/
bT7IxURtNUzb9G3nfCqVqdoyi7VN2zYuYpqyLftom7xtXPBswrZ5xdcUbZ/R
7/ROel9NZeaOdwDvQFvEHPCMd6U52+oZNszelhewc/W2OWL/F2nLLNiwWFtm
wY852vZl/Gxt+cv4hduykjGzps8vtGxbqC1raJu3LbNg3optuYD+5mnLPtrm
ahsXPJu5LZdh9txtn9Fvwbacwu9KbX2g11XaahvdL9NWz7Bhqbb7xx34v7bM
wu++bZnF2d+/LbM4d0u37cv4Jdveo4xftG0+yMUSbRlN26pt50QrK7RlFmtb
uW1cxLR8W/bRtmzbuODZ4m3ziq/l2j6j341t10DfBdoylzXP1zZ/sHn9tnqG
Deu25QXsXLMts2DhVm2ZBRu2acss+LFe276MX6ctfxm/ZVtWMmbttpylbYv4
2y7aNg5mwbzd23IB/W3Uln20bdA2Lni2VttY8LVh22f0m7/tOljbHuEDve7V
Vtvofqe2eoYNO7TVHrzZp+07BPu3Rtszy5pXa7sPnOMdoy/jt2973zB+68gH
udiurYZp2zvmxO9ubZnF2vaMuIhp17bso23niAuebRt5xdcu8Yx+T4fm0OFN
sZ/s8y1tzwTn5dC2eoYNB7flBey8pG2O2P8T2jILNpzUllnw45Doy/iD2vKX
8ce3ZSVjDmzLWdqOa8sa2o5syyyYd15bLqC/I9qyj7bDIi54dkBbfeDr8HhG
v2Pbcgq/54cP9HphW22j+zNTmaUtG05LZaa2Wnyy7b9psmk8g1noc4a2zCJ/
p0dfeHBq23dc+p4Y+SAXp7QdQ9tFMSdaObcts1jbBREXMZ3Tln20nRVxwbOT
I6/4Ojue0e/m2Df27Ji2zGXNR0X+YPM1bfUMG65qywvYeVlbZsHC29syCzbc
2ZZZ8OPq6Mv4K9vyl/G3tWUlY65oy1nabm17dmi7oS2z4MUjbbmA/q5vyz7a
ro244NnlEQu+rotn9Ds61sHaHg0f6PXxttpG9/e31TNsuLet9uDNfm05CkMv
bXtmWfPFsQ+c4/uiL+PvaXvfMP6OyAe5uLuthml7IubkfDzcllms7bGIi5ge
ass+2h6IuODZXZFXfD0Yz+j3X3xH5HvjGXFPzpLKWanMmspsqbzUVs+w4YW2
vICdP0SO2P932zILNrzfllnw48Xoy/jn2/KX8e+0ZSVjnmvLWdrebssa2l5r
yyyY91VbLqC/V9uyj7aXIy549mxbLuPrlXhGv7facgq/X4cP9PptW22j+0/b
6hk2fBz7xx24Cf8DkFRqqYzRkVmc/bE6Motz90n0ZfxHbe9Rxr8X+SAXH7Zl
NG3fxZxo5cu2zGJt30RcxPRFW/bR9lnEBc8+iLzi6/N4Rr+lOq6Bvm+2ZS5r
fj3yB5v/aKtn2PBbW17Azp/aMgsW5h2ZBRtaHZkFP36Pvoz/tS1/Gd/oyErG
/NKWs7RlHVlD27+pnNGWeSN15AL6+7st++DZnxEXPPs5YsHXX/GMfm/EOljb
yB19oNdRO2ob3Xc76hk2lB21B29G7/gOwf792PbMsubvYx84x1XHvowvOt43
jG92zAe56HTUMG2jdZwTv8OOzGJto3SMi5gGHdlHW69jXPCs3TGv+Op3fEa/
ekcWk7ulO+4n+7xsxzPBeZmgo55hw3gdeQE75+2YI/Z/6o7Mgg3TdmQW/Bi/
Y1/Gj9uRv4yfqiMrGTNOR87SNmVH1tA2SUdmwbzZgwvob+KO7KNtwo5xwbOx
O+oDXxN1fEa/KTpyCr9zdPSBXufqqG10zzs7eoYNM6bPT7f9jsj3QH4nxHdI
vvv9L2y+v80U9kwd+zJ+ho7fMxk/Tcd8kIvpO961tM3dcU60Au9gFmubs2Nc
xAQLYR9tMJK44Nl0HfOKL7jJM/ot03Hf2LPJOzKXNU/aMX+wedGOeoYNC3fk
BeycvyOzYOEKHZkFG1bqyCz4sUjHvoxfqCN/Gb98R1YyZsGOnKVtuY5nh7Yl
OzILXqzbkQvob4mO7KNtsY5xwbMFOsaCr8U7PqPfZB3XwdrW6+gDvW6YPv/T
VvdrdNQzbFito/bgzZgdOQpD5+t4ZlnzPB33gXO8ese+jF+1433D+BU75oNc
rNJRw7Rt1HHO/1JZpyOzWNv6HeOCN2t3ZB9ta3aMC56t3DGv+Fqr4zP6nRn3
4axxB/AOdE7MAc94V9qmo55hw1YdeQE7j+qYI/Z/947Mgg17dmQW/Ng6+jJ+
y478ZfxuHVnJmC06cpa2XTuyhrYdOjIL5h3SkQvob/uO7KNt24gLnm3ekcv4
2i6e0W+XjpzC76HhA70e3lHb6H7/jnqGDft23D/uwM06Mgu/N3RkFmf/po7M
4tztF30Zv0/He5Txe0Q+yMXeHRlN2xExJ1o5uCOzWNthERcxHdSRfbQdEHHB
s70ir/g6MJ7R75NYA3137shc1rxj5A82n9RRz7DhhI68gJ3HdGQWLDy3I7Ng
w/kdmQU/Toy+jD++I38Zf05HVjLmuI6cpe3sjqyh7bSOzIJ5V3XkAvo7tSP7
aDs54oJnx0Ys+DolntFvp1gHa7s6fKDXaztqG91f2lHPsOHijtqDN9d3fIdg
/47ueGZZ85GxD5zjS6Iv4y/qeN8w/rzIB7m4sKOGabsu5sTvlR2ZxdquibiI
6YqO7KPtsogLnl0QecXX5fGMfryLoTl0+GnsJ/v8ecczwXm5o6OeYcNtHXkB
O1+PHLH/D3dkFmx4rCOz4Mft0Zfxt3bkL+Mf6shKxtzSkbO0PdiRNbTd05FZ
MO/FjlxAf3d3ZB9td0Zc8OzmjvrA113xjH4PdOQUfl8KH+j1lY7aRvfPdNQz
bHgqlU07apF7jp+n8rNUnsEs9LlxR2aRv6ejL+Of7PiOS99HU9kgcvFEjKHt
1ZgTrbzQkVms7eWIi5ie78g+2p6NuODZ45FXfD0Xz+j3Wewbe3Z/R+ay5nsj
f7D5/Y56hg3vduQF7HyzI7Ng4VcdmQUbvunILPjxXvRl/Dsd+cv4LzuykjFv
d+QsbV90PDu0fdyRWfDi945cQH8fdWQfbR9EXPDsrYgFXx/GM/rdF+tgbX+E
D/T6V0dto/ufOuoZNvzQUXvw5saOHIWhb3Q8s6z5tdgHzvGP0Zfx33e8bxj/
deSDXHzXUcO0/R1z8jPR3zoyi7X9GXER068d2UfbzxEXPPs28oqvX+IZ/fhv
bmeN/waS/wZ3lrD5t5xmDrsoZAfs6RRyB7tdyBHsViE7sGuFfISd/UJ2wMVe
IS+wu4VcwK4K2YE9f+F+sLfzFuaO81Iv9Ae/lyy8D+DHxIVnjr0qC2PE16SF
5xItzlfoA7+Dwljga154B8CqcQvZAXvGKeQO9tiFHMEeq5Ad2KMU8hHuTlTI
DuKYsJAX2BMUcgF7/EJ2YDcL5yRfjUL+EkdWuD7sSQrXxBpGLrwDmG+8whjx
NSxcBzwetTAW7vB5CllJ7uYuPHPYMxayA/bMUMgd7OkLOYI9XSE7sCcv5CPs
nLWQHXBxlkJeYM9cyAXs/xWyA5v/aedZnINU/k3ljFTOTGWKQn/we4bU5yli
SuW0VGYq9EFNjPhiHHMw5xyFzIKjsxXGAl+nKbwDYNXCheyAPQsVcgd7wUKO
YC9QeL6w5yrkIzlaopAdnK3FC3mBvVghF7AXLWQH9rSFc5KvqQv5SxxTpc+P
dLQnKzyD5HHOwtiZb5HCGPE1e+E6WNt/kSdyN1Lh3rL3YxS+k3HnrFbIDtiz
aiF3sFcp5Aj2yoXswF62kI+wc+1CdsDFtQp5gb1mIRew1yhkB/bRheeAfTuy
UFesablCf/B76cL7gDt8+0IdounVC2PE146FmocBR4UP/K5TGAt8XbHwDoBV
WxbqE61sUagT7M0LdYK9WSEXsDco5OM/qWxXyCzi2LaQWdjbFDILe+tCZmGv
VDgn+VqhkL/EsXzh+rB3iDWxhvUL7wDm2ypixNe6heuAx6MVapF74IhCPZO7
wwuZhb1P4b6OmcreqYwe9l6F47H3LNQ29s6FPIVhBxYyCx4cUMgs7P0LmYW9
XyGzxo45ODvwC7/ExXnaJfzBktML9YfelincT87NvjEeX0sVcpf9PqSQcTDv
oIgFzu1eyCwYeUKhPtHK8YU6wT6uUCfYx6YyZdiHFfKUHJ1ayCx4cEohs7BP
LmQW9kmFzMLeI+YkX7sV6oc4do31Ye9UeAbJ46ERO/OdGDHi6+BYB2vbsPBM
8f+N+SdyBJP+LmQW9sWFdwx310WF9xb2hYUsxr6gkMXYaBuewrArCpkFDy4v
ZBb2ZYXMwr60kFnYb8Q5YN9eK9QVazo7/MGSjwr3jP2/p1CHaPqSiBFf9xVq
Hga8Hj7we2XEAufOK2QWjLytUJ9o5dZCnWDfUqgT7JsLuYB9bSFPuavvLmQW
cdxVyCzsOwuZhX1HIbOwz485yde5hdwnjnNifdj3xppYwzWFvGa+2yNGfF0V
64Df10UsnN9XC/VM7l4pZBb2k6lsksqmqTyRysZhP57KRmE/VngmsB8o5CkM
e66QWfDg2UJmYT9TyCxs7rnNwuZ/ZHxWN+1bKv+mckYqZ6byYPiDJZtW6V0q
lXoqG6fyX/yPsZ+KGPG1SeUz+r1YyDiY93zEAuceKWQWjHynUJ9o5e1CnWC/
VagT7DcLzxf2y4U8JUcfFjKLs/VBIbOw3y9kFvZ7hczCfjTmJF8Pp7JexPFQ
rA/7/sIzSB5fitiZ792IEV8vxDpY2x+F+ocHV8fesvc3FjKLu+77wjuGu+u7
wnsL+9tCFmN/U8hi7M8KeQrDfi1kFjz4pZBZ2D8XMgv7p0JmYU9Weg7Yt0lK
dcWaPg9/sOSTQi7D6aJUh2j6x1SOCV9VqeZhwKSlPvD7W8QC574qZBaMbJTq
E61kpTrBrpfqBLtWygXsvwp5CrM6pcwijnYps7BbpczCbpYyC/vrmJN8fVnI
feL4ItaHXZauiTX8GfvDfHlpjPj6PdbB/l1fqEXeHSYu1TO5m6iUWdijl+7r
TamMlj7fEPs8aul47FFKtY3dK+UpDBunlFnwYOxSZmGPVcos7DFLmXVLzMHZ
WS78Lh3nqV/qD5bwXsZ7KOz+NPaTczNG6Xh8fVzIXfZ7/FLGwbxxS2OBcyOV
MgtGTlWqT7QyZalOsKco1Qn25KXnC3vCUp6So+lLmQUPpitlFva0pczCnqaU
Wdgjl85Jvoal+iGOQen6sLulZ5A8TlAaO/NNXRojvsYrXQdr+y+4BcvQM+8+
vBvBzRGF3wXnKb1juLvmLr23sOcqZTH2nKUsxp65lKcwbMFSZsGDBUqZhT1/
KbOw5ytlFvZOpeeAfduhVFesaZZSf7Bkn9I9Y/9XK9Uhmp63NEZ8rVGqeRiw
Y/jA70KlscC52UuZBSOXL9UnWlmuVCfYy5bqBHuZUi5gL1bKU+7qVdPnHwrj
WLmUWTBspVJmYa9YyizsOUrnJF+zlXKfOGYtXR/26qVrYg2LlvKa+VYojRFf
C5euA34vXhoL53f7Uj2Tu+1KmYW9cen3E77bbVT6vQ57w9J3I+wNSt+NsNcq
5SkM26KUWfBg81JmYW9WyizsTUuZhT1zus+eY89SmSl9fibVz6aydqk/WPJM
+ML3UzEef5uUxoivp+MZ/bYuZRzM2zJigXPrlTILRu5Wqk+0smupTrB3KdUJ
9s5xvrC3LeUpOdq7lFmcrb1KmYW9ZymzsPcoZRb2+qVzkq91S+824lindH3Y
a5aeQfK4TcTOfLtHjPjaKtbB2v5XmSdyt0jp3rL3S5Uyi7vuyNI7hrvriNJ7
C/vwUhZjH1bKYuwDSnkKw44rZRY8OLaUWdjHlDIL++hSZmE/EHvGmu4rXQ/n
4sDwB0suLdU2Wr+4VM/o+6iIEV+XxDP63R8+8Ht8xALnDillFoy8qFTP+Lqg
lDtw6Mn03rVJKpumcnapftDxmaWMQEMXRl/Gn1/KKcafE33R33mlzKLt0JiT
fB1cyn3iOCjWh31CxAibTyrlNfw+N/zh68Rop22JUi3y7nBvKY/I3T2l2sa+
IZWlS7lyfekeY1+XypJhXxu+sC8v5Re6v7WUBXDlllJ+Yd9cyi/sm0r5tVz4
5ezAL3wRF+fpivDHWdu3lKncsfuX3rucmxsjRnztF+203ZnKKqX8uy1igXlX
l/IRJj1SqhO48nCpVrEfKtUM9oOl5wv77lKmk6MnS1kAF54o5Rf246X8wn6s
lF/Y18Sc5OuqUm4Sx5WxPuzLSs8pebwrYme+RyNGfN0e64DlfE/gu+N//Pyt
kkdwa4ZKZmG/XnpvwZXXSu8b7FdL7zDsV0q5jI224Re6f6eUBXDl7VJ+Yb9V
yi/sN0v5hd2tPAfsW1mpPdb0fPiDkaNX7hn7/0OpntH3GxEjvn4q1T88qCp9
4PfdiAXmvVTKR+6Qr0p1Ale+LNUq9helmsH+vFQz2B+W3tOcqe9LWUAc35Xy
C/vbUn5hf1PKL+yXY07y9WIpN4njhVgf9o+xJtbwQSm7me/riBFf78U6YPlH
EQvnt6jkEbnrVDIL+99UzihlyT+pnB7236mcFvZfqZwa9i+l/IINWSUL4Arf
92ANNt/r4BQ23/POKrU3jXcrfv7F91LOF+9bv4Y/WDJj6XdOvoP+r/R7Ke9V
/0WM+JqptJ22ZiUr4V+jMhb490cqJ6dySirDSn2ilUGlTrD7lTrB7lWeL+x2
JYvJ0WiVzOJsjVrJLOxRKpmFPXIls7D/jDnJ1++l3CSO32J92D+XnkHy2KqM
nflGqowRX3nlOljbtJX6hwfvx96y95+W3nPcS5NW3jHcXZNU3lvYE1eyGHui
ShZjj13JUxg2VSWz4MGUlczCnqKSWdiTVzILe83Kc8C+rV6pK9Y0TqU/WDJm
JZfh9LyVOkTTk1XGiK/5KzUPA9ao9IHfqStjgXMTVDILRs5eqU+0MlulTrBn
rdQJ9iyVXMCevpKnMGueSmYRx9yVzMKeq5JZ2HNWMgt7wso5ydf4ldwnjvHS
5ztK7fkq18QapqvcH+abozJGfE1TuQ727+NSLXLPrFapZ3K3aiWzsJeq3NfP
Ulkyff4k9nmJyvHYi1dqG3vBSp7CsOUrmQUPlqtkFvaylczCXqaSWV/EHJyd
g8Lv/nGeFqr0B0t4L+NdFXaPVbmfnJulK8fja4xK7rLfK1UyDuatUBkLnFu0
klkwct1KfaKVdSp1gr12pU6w16o8X9irVPKUHG1UySx4sGEls7A3qGQW9vqV
zMJerHJO8rVIpX6IY+HK9WEvUHkGyePKlbEz33qVMeJrxcp1sDb0zHsQvwv6
J32HPD1+FvZ3KqeFvUPlHcPdtX3lvYW9XSWLsbetZDH25pU8hWG7VjILHuxS
ySzsnSuZhb1TJbOwL6s8B+zbJZW6Yk1bhD9YckPlnrH/R1XqEE3vGDHi65hK
zcOAS8MHfneLWODc1pXMgpGHVOoTrRxcqRPsgyp1gn1gKuOGvVclT7mrj6xk
FnEcUcks7MMrmYV9WCWzsLeJOcnXVpXcJ44tY33YR8eaWMOelbxmvkMjRnzt
HuuA33tHLJzfiyv1TO4uqmQW9umV30/4bnda5fc67FMr342wT6l8N8I+rpKn
MOycSmbBg7MrmYV9ViWzsM+sZBb2Zunc1FPJUtkklRGp1FI5PvzBEs7XTKn8
j5/BJvuM8HFGxIgvxp0Vc55fyTiYd27EAudOqmQWjLyqUp9o5cpKnWBfUakT
7Msrzxf2hZU8JUfXVzKLs3VdJbOwr61kFvY1lczCPjnmJF8nVt5txHFCrA/7
2MozSB4viNiZ7+qIEV/nxTpY26aRJ3K3R+wte79fJbO46+6tvGO4u+6pvLew
765kMfZdlSzGvqWSpzDsoUpmwYMHK5mF/UAls7Dvr2QW9s9xDti3Hyt1xZpu
DX+w5KZKLsPp1yp1iKbvixjx9Ual5mHAT+EDvw9HLHDujkpmwcgXKvWJVp6v
1An2c5U6wX62kgvYj1fylJ/Tv1rJLOJ4pZJZ2C9XMgv7pUpmYd8Zc5Kv2yu5
Txy3xfqwX481sYbHKnnNfC9GjPh6JNYBv/ep1CLvDj9U6pncfV/JLOyPY1/3
T+WjVPYN+8MYj/1Bpbax36rkKQz7spJZ8OCLSmZhf17JLOzPKpl1UMzB2Rkn
/BIX5+nt8AdL/qvUH3q7OfaTc/NpKgeErxsruct+f1PJOJj3VcQC596rZBaM
/L1Sn2jlt0qdYP9aqRPsXyrPF/Z3lTwlR/9UMgse/F3JLOy/KpmF/Wcls7Df
jznJ17uV+iGOd2J92G9WnkHy+G3Eznx/RIz4+jrWwdqeqDxT/J5n4645gkkb
BbOwy653DHdX0fXewu50ZTF2uyuLsdE2PIVhg67Mggf9rszC7nVlFna3K7Ow
5+96Dti3ebvqijXBWfzBkqW67hn7P0lXHaLpqmuM+Jqsq+ZhwHxdfeB32DUW
ONfsyiwYOV5XfaKVcbvqBHucrjrBHrsrF7BH7cpT7uqJuzKLOCbqyizsCbsy
C3uCrszCbnWdk3zlXblPHI2u68OetOuaWMMoXXnNfON3jRFfI3VdB/werWss
nN95uuqZ3M3dlVnYM6bPT6f6mVRmSJ+fqrSnT5+frLSn63omsKfoylMYNmtX
ZsGDWboyC3vmrszC5p6DWdj5WIlbqWyRSpbK5qlslsqUXf3BkhGTJ36Nmp6l
esfJEnfSo41GeGcSI77qacw5Y6a9T2WOroyDebN1jQXOTdOVWTBy4a76RCsL
ddUJ9oJddYK9QNfzhT1XV56SoyXT508qz9biXZkFwxbryizsRbsyC3varnOS
r6nT50cr45iq6/qwJ+96BsnjnF1jZ75FusaIr9m7roO1rd9V//Bg5K57y96P
2ZVZ3HWrd71juLtW63pvYa/alcXYq3RlMfZyXXkKw9bpyix4sHZXZmGv1ZVZ
2Gt2ZRb2MV3PAft2VFddsablu/qDJct05TKc3qGrDtH0Gl1jxNdOXTUPA44O
H/hdt2sscG6lrsyCkVt11Sda2bKrTrC36KoT7M3j/Qt7w648hVnbd2UWcWzX
lVnY23ZlFvY2XZmFvXLXOcnXil25TxwrdF0f9o6xJtawQdf9Yb6tI0Z8rdd1
Hezf6F21yLvDkV31TO6O6Mos7H277utYqeyTyhhh7911PPZeXbWNvUtXnsKw
g7oyCx4c2JVZ2Ad0ZRb2/l2ZNU7MwdmBX/glLs7TruEPlvBexnso7F62635y
bvaL8fhauit32e9DuzIO5h0cscC5PboyC0ae0FWfaOX4rjrBPq6rTrCPjfOF
fXhXnpKjU7syCx6c0pVZ2Cd3ZRb2SV2Zhb1nzEm+du+qH+LYLdaHvXPXM0ge
D4vYme/EiBFfh8Q6WNsfMR/zo2fefTYMbm5W+V3w4q53DHfXRV3vLewLu7IY
+4KuLMbmd5nwFIZd0ZVZ8ODyrszCvqwrs7Av7cos7DfjHLBvr3fVFWs6O/zB
ko+77hn7f29XHaLpSyJGfN3fVfMw4I3wgd8rIxY4d15XZsHI27vqE63c1lUn
2Ld21Qn2LV25gH1dV55yV9/TlVnEcXdXZmHf1ZVZ2Hd2ZRb2+TEn+Tq3K/eJ
45xYH/Z9sSbWcG0qS8R8d0SM+Loq1gG/r49YOL+vddUzuXu1K7Own+r6/YTv
dk92/V6H/UTXdyPsx7u+G2E/2JWnMOz5rsyCB891ZRb2s12Zhf1MV2Zhn9lL
92gqs6Zyeir/S2XmVB4Kf7CEn1Nwv3Lfzpjang4fT0eM+GLcszHnS10ZB/Ne
iFjg3KNdmQUj3+2qT7TyTledYL/dVSfYb3U9X9ivdOUpOfqoK7M4Wx92ZRb2
B12Zhf1+V2ZhPxZzkq9Hut5txPFwrA/7ga5nkDy+HLEz33sRI75ejHWwtjMi
T+Tu6thb7uqbujKLu+6HrncMd9f3Xe8t7O+6shj7264sxv68K09h2K9dmQUP
funKLOyfuzIL+6euzMKevOc5YN8m7akr1vRF+IMln3blMpwueuoQTf8YMeKr
6ql5GDBZTx/4/S1igXNfd2UWjGz01CdayXrqBLveUyfYtZ5cwP6rK0/5mUSn
J7OIo92TWditnszCbvZkFvY3MSf5+qor94njy1gfdtlzTazhz668ZL68Z4z4
+j3WAU9v6KpF3h0m6alncjdxT2Zhj9FzX29OZfT0+cbY59F6jscetae2sXs9
eQrDxu3JLHgwTk9mYY/dk1nYY/Vk1q0xB2dn+fC7TJynfk9/sGSmnvpDb5/F
fnJuxuw5Hl+fdOUu+z1BT8bBvPF6xgLnRu7JLBg5dU99opWpeuoEe8qeOsGe
IriAPVFPnpKjGXoyCx5M35NZ2NP1ZBb2tD2ZhT1KzznJ10jp8zVd4xj0XB96
6vY8g+Rxwp6xM980PWPE1/g918Ha+J7Ad0f+lvC0njmCSaf2ZBb2vD3vGO6u
eXreW9hz92Qx9lw9WYyNtuEpDFuoJ7PgwYI9mYW9QE9mYc/fk1nYO/U8B+zb
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
qEOfwarRh7KGmEYa6oPxow1tp+2zWB/nsj10fcQ09lA2wa1xh/IX7o41lGu0
jTf0GbmYYGg+YMyEQ2tYNc5QH4yfaOgzWDXx0BqWTDK0hluTDWUWfJp8aA2f
xhyaV+aeYugzWDXVUNbAqkmH+mD8lEPbaZt2KL9g1XRDa5h010iJe6lsksps
Q/kCa2cdyiDsGYZyDdbOOLSGDfMNZQfMmH3oOJg0x9AaJs07lBH0m2cod7B3
GnpWWNPKQ7WHtmYa6hvmrThUt+h1rqEsg2FzD63xNefQeWjbbOg54KzNPJSn
sPB/Q/1hLzmUL+h+iaEMwl5oKNdg88JDa87+AkPZB9uWGjoOJi09tIZJKwxl
BLEuP5Q72CsNjZ21zT80T/iaZWhc5HfBob6Ze9mhLINhyw2t8bXM0HloW2Ro
XJzZLYZqCd1sOlRvrH+9odqGT2sO1TZsWGMoL7BXH8oR7FWH8g4GrztU/4xf
ZygvsNceyhTstYb6w540nZun+dlEKpONZP1sKqsN9Qd7JknPnxra776Ilb26
J5WNU9mE/qnPv8Sayuaxh6xt/VgHfH1+Mjn4cqq3GsoI2PB/TJ1jtC1Lk7Wv
rbVWrbIvzrVt27Zt27Zt27Zt27bNrqfn7PF9P2rEjojMyMjKnE/tffqOt7f0
O5jI9WDKOK47jt/Lhj3xC31v7XnwYBtbuLJjT7zgXu7QEyPwV+npbvKONnAv
1Bp7hFj/ZNfPRq7N2tv1xCY4tL0ttbb1OuQm7vb7ZE/vZbGevot80xbt6Wzx
9+mJF3Bit544Aod2t4U9h/X0b0Poew/HYPO+ngdX9rOFDfvbwphDu2cqzz+7
p7vOfTyzJ21zZ/fqiWvw7ADPg0kH9cQgGHOwLRw60Hlyu/TESji6t2uwn7Nc
m/VO6Ik1sOeonlgDY462hQdH9MSs6brnGMfQ9ImeB3tOsoU9J9vChjN6YhD7
OdzviVpHuh7r7el3xj5P8Tx4c1pPrIFbp9tS61TnyS3e07nBkRt60hU6u9EW
/V3SE3fgx8U9cQf/3J64A2/Os0Xf1/TEPvhxqefBm8ts4cHVPXGHcVf1xB38
e3u692hs5574yhmc79rcr119JtynK3riDry50pZal3sdcjd5H+j+wp7uK/u+
wPXwb+mJETDjZo/FH2+EWPBip5HremI9enp1Mr2rNzp7q+fBnttsYdjdPekK
Td/Vk4bxz+npnvLurvV7ou5F7ov3e73XgW139MQRtHunLbVu9zrkjuvpmwGb
q06bj3b2se5pup8f7+wT3fOc3x1aRLswYkfntrfP2O3sM39b+zBxF89/xmeD
DxN3sv+U6+H/57PnzEfqy3ImD/TER9gPLy/xuE970sax3fNxT1pCQ+P0dS+5
j//0dP+Y86BrwM6HbGHqRz1pg/nvds8hPXHi7Z40j9bf6knn+G/2xAX8D3vS
KvM/6Elv+O/3xCn891wP/5GeWAyDH7XlfT3vdwznHnZfjHvBMTj3Uk+6hU+f
eK/s/2XH4M0fPd177ulfPd1d7sivPd0h9PdDT9qGE9/3pHn873rSOf63PXEB
/5eeWMn8n3tiGf5PPXET/0fXw+d/i4f/TRz+twbPsOV//+vznu7c8T39b/TM
6HH8Nxeb+t+2nvG/b/HfdfG/ucO/pfG/d/+398FZfuEacPRLW7g4/ghp4PVO
X6P1xQiYMWpfOscfpS/944/c1/3CH6svrTJ/zL40hj9GX2zCH72vevhf98Rf
uPuNLe/rN79j2PaV+2Lc745xNn/6fDibz3q6v7yXti9dobNXfJ58D1+15fuW
93V3uSNRX+zj94uwr98t8Id9cQQ/6Isj+FlfGmB+2peu8JPu5/t78uO+6uEv
3dcZc+bL9GW5CxP0xT4YtlRfZ8+4Gbuf3+hJH9N3P7/GWXTPeH3xFEYu2df9
Y86EfdWAfxP1ZeHTdH3tmflT9qWBF7tnir50gj95X2zCH9EXa/Cn7evdMX+a
vrSBP3Vf+sGfqq96+P2+WAkjB31Z3lfR1ztGr72++mJc2VcM7dZ98Q7+zdDX
Xt9wr+gVrS7a1/1AT4v3pTE0t1Bfd5c7Mm9feoZn8/TFMvy5+2IT/lx9sQZ/
wb40wPwF+tIV/vx93Sf8+fqq95nPgN+H9nd/WPg1c19ce9vvel+PG7cvdnJm
4/d1brf4TvA7LCxeoq99cJazdj+/0xM7Z+vLwrxV++IvzF6hLw3Ap+X70gn+
cn2xCX/Zvu4X/ip9aZ75K/fFMvyV+tIP/op91cOfoy/mwuA5+7K8r4X7esfo
dfa++mLcIn3FOJvF+jofzmamvu4v7wXG8G3kdzU0yu9ffC/5HYq/I/n7cK2+
mAJj1raFPZv1dae5O+s4Bj/W64spMGaiEeLOWx2v3u6esemvs+v39TPfsQ1s
OZM9+/odmr8tNnQMba3r2tTdyLHx/fctWkVnm9rS08bOk9u7r79n+DtmL9fG
37IvPcCPrftiCozZoi/NkNvGMTi0XV/sgCXb28KYrVyD+Ts4Bod2tIVnO9mi
uV360hi/j+xqi84297tk7d0c4/eUPfriJu9lZ9dg/u7Ok9vWPdLfBX0xCG6d
1pdm0NC+fXEEruxnC2+O7etOc3f2dwwmHdgXR+DKwX2xBvYcYgvDDrWFhYfZ
wolvvfbp3XO4Y7DzINej1hGOcR+P7p5Z+tLZMbb0dKTz6PiUvjiC7g9wj/R3
nHtHHyf2xRG4cpItvDneeXRzsmPUOtX15nevvCfYc4YtDDvTFp2dZYu2TnA9
1jvbMVi4T193jXd9jmPo77y++AhXzrflnM51ntz3Xps1v3NP+Bf39X2CH5f2
xRQYc3Nf2kMflzkGh67oix2w5EpbGHOJazD/Ksfg0NW28OwaW/52v657Vu+e
Nbrnets1u+dyr8MaNzgGJ27qixH0dK1rMP9G58k91pd+0Mrjtmjltr64AA/u
6Ev/aL03Qkx5t+PGnY6h77v70j+6v8cWJt3uGsy/1zG0dZ8t+r7fFgY82JeG
YcBDtuj+Fr9X1n7YMXT2aF8sYA8PuAbzH3Ge3IV96Y/fL57w/mDAzpPprn/Y
PU/3xQIY8GZf2kBnzzgGA57rS+cw4HlbGPlUXyxg/guOwbYXbWHeS7bcx1f6
0j+6f9UWrT/rdVjjNcfQ1ht96Z+eXnYN5r/uPLmLvD/u5ZP/t7/ueacvLsCD
9/rSP1p/uy92kHvfMfT98GTS/Efd83FfP8Okd12D+Z84htY/tUXTn9mixS/6
0j+6/9IWrb/l98raXzkGS77pS/9w6nPXYP7XzpPjvvN3Gr9HrzLovvOd/a97
Vut+Hql7Ru6e3/tiLmf+Y1+MgAc/2cIAxqFDNPezY+j+D8/jXf5pi9b/skWv
rIOemR8OdI+5v8FA9547/mtffIErf3senKBfuHC5+8ZS6x/nyc010HvnHf/m
GuxnOFBt1ht3INagidEH0jZsGGMgCxtGHYgj8GPMgWKwYTBC8z7oznn8Ln5r
X1qfYCCLXgcD6Zn9jDLQe6LWaAPVY71f/M7Y54QDzYMTvYG4wL959wey1Jpo
oDy5sQdiEHyadqC7zl2ebiDLfS8HYhNMigfSNmxIBrKwYcRAOkRz6UAx2FAN
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
8zuuAZM+KcUFOPGpLSz5uBTvyL1fioOw84dSzIIfH5ViDeO+L8UOch+W4i+5
DzwP/9tSdwf+fWfLnJ9KMQhOfFmKfdy5z0uxDy5+5r7wv3CMcQ/7zNnbv6V0
i45HqqRb9P17KS7AiT9sYclvpVhD7r1S3Gef7/rd4P9aSp+M+9H7ptdfSn1v
yP3s3vFH6dY9p7PnckaV7Hnd85/7oqd/SrGPXv8qxT64+Kf7wv/bMcbNUek+
veJa/D6EPker5KPX8SpxAU6MX8nCknEr8Y7cVJXuPXqKKzELfoxTiTWMiyqx
g9zYlfhLbqxKzMUfVmIK/AsrWeaklRgE23qV2AdjJqzEPrg4QaW+8CeqFGNc
UIlB1J20km7R8YhKukXfVSUuwIm6koUlZaVvD7kxK7GeXleopAG4VVT6XjIu
qbRves0rfVPJZZV6x5+80prcrykqWTQ0WaW+6GmSSuyj17YS++BiU6kv/Ikr
xRi3UiUNcPcHlVjMnqesVJuzmbESI2DGTJUsHJqhEu/ITVOJg7Bz3krsQPfT
V+Is4+apxA5y01ViMblpK83Dn6sS7+Df3JUsc+avxCB4M1sl3sGqWSrxDhbO
XKkv/FkrxRjXr3Tm7G2pSkxBu8tU0jPaXaQSU2DDopUszFi4kg7JLV/p28P5
TV3pzrLnhSrpk3HzVdo3vS5YiWvkFqjUO/6yldaEK8tVstRdulJf9LRkJQ7S
6+KVuAb/FqvUF/4SlWKMQ9NzlNLhIZXuImd+WKV7wJmvXolrsGGNShZmrFaJ
I+R2r3QPuPsbV2IE3Fq1EmcZt1ElrpFbpRJnya1c6R7hb1CJF3Blw0qWOZtV
4hEcWqcSB+HfWpW4Bv/WrNQX/tqVYoxbvxKbqLtjJaag3Z0r6Rntbl1Jb7Bh
G1uYsVX3jOEclt/D0OTolViFv2Uln/ym3TOye92iEtfIbe7e8XfxmnBlV1vu
2k7ui552qMRBet2uEtfg37buC397xxh3qM+NM1uvEn/Z826uzdnsV4lrsGF/
W5ixbyWOkNuzEhNh4VGVGAG39qnEWcYdWYlr5PauxFlye3ke/uG+O3DlCFvm
HFOJR3Do4Eoc5M4dWIlr8O8A94V/kGOMW7fSmbO30ysxBe2eWUnPaPfESkyB
DSfZwowTKmmP3IqVOAq/9qh0Z9nz8ZW+K4w72vum1+MqcY3cse4d/yyvCVfO
tuVvvjPcFz2dVomD9HpKJa7Bv5PdF/6pjjFutFa/B53f6N8p+Pd0/p48x7X5
fl5SiWuw4VJbmHFxJY6Qe9j3gLt/QyVGwK2LKnGWcddX4hq5CytxltwFlRiK
f20lXsCV62yZc1MlHsGhKytxEP5dXolr8O8y94V/hWOMu6YSm6h7byWmoN37
K+kZ7d5e6RsDG+6whRm3+fzIzV53LO/sy93zVSUNwK1bK30vGXej902vt1Ri
Mbmb3Tv+A14Trjxoy127z33R0z2VOEivd1XiGvy7033h3+0Y476ppAHu/tWV
+MueH3JtzubpSlyDDc/YwoynKnGE3KOVmAgLX6/ECLj1ZPds4nGvVeIauccr
cRYGP+Z5+K9U4gVcedWWOW9W4hEceqESB+Hfc5W4Bv+edV/4zzvGuKt85uzt
k0pMQbufVdIz2n2vElNgw/u2MOPdStoj92Wlbw/n90ilO8ue36n0XWHcG943
vb5diWvk3nLv+J97TbjyhS11P3Vf9PRxJQ7S64eVuAb/PnBf+B85xjju1nZ+
d2Wtu8iZ17XuAWf+YyWuwYafbGHGD5U4Qq5X6x5w9/+txAi49X0lzjLun0pc
I/ddJc6S+7bSPcL/qxIv4MrftswZqRaP4NBvlTgI/36pxDX497P7wv/VMcb9
WYlN1B23FlPQ7vi19Ix2R+9+Pr8SG8aoZWHGaN3P51XK8fB7GOx4oYtv3T3b
dM+o3XNupXH/ed/0OkotrpEbuVbv+BPUWhOuTFjLctfGq9UXPY1Ti4P0OlYt
rsG/MWv1hT92rRjjqlrnxpn9UYm/7HmiWrU5m7gW12BDUsvCjKgWR8gNajER
Fk5SixFwK6zFWcZNXItr5Ia1OEsuqDUPv6l1d+BKW8syZ7JaPIJDRS0Ocuey
WlyDf2mtvvDzWjHG/e4zZ28z1mIK2p25lp7R7lS1mAIbpq5lYcaUtbRH7utK
HIVf/Vp3lj1PUeu7wrhJa+2bXievxTVyI2r1jj9LrTXhyqy17IvdM1Otvuhp
hlocpNfpanEN/k3b/fxEJX/6WjHGvdT9vG33bGf28/sQ+pytVm1i89XiGmyY
v5aFGfPW4gi5dWvdA+7+UrUYAbfmqcVZxi1Zi2vk5q7FWXJz1WIo/uK1eAFX
lqhlmbNMLR7BoYVrcRD+LViLa/BvgVp94S9UK8a4xWqxibqr12IK2l2zlp7R
7oq1vjGwYaVaFmasUOv8yM1Zi/v0enAtDcCt5Wt9Lxm3dK190+tytVhMbtla
veOvVWtNuLJ2LctdW6NWX/S0Wi0O0usqtbgG/1au1Rf+qrVijDu0lga4+4vW
4i97XqdWbc5mk1pcgw2b2sKMjWtxhNz6tZgIC3eoxQi4tVEtzjJu+1pcI7dh
Lc6S26DWPHzuFLwYx3drHM/ZqRaP4NCWtTgI/zavxTX4t5n7wt/CMcYtUuvM
2du+tZiCdvevpWe0u3stpsCGPWxhxm61tEfuoFrfHs5vvVp3lj3vWuu7wrgd
vW963aUW18jt7N7xD/CacOVAW+ru577oaZ9aHKTXvWpxDf7t6b7w93aMcWhu
G+vw9lp3kTO/s9Y94MyPqsU12HC0Lcw4shZHyF3le8DdP70WI+DWEbU4y7jT
anGN3OG1OEvusFr3CP+UWryAK6faMufMWjyCQ8fX4iD8O7YW1+DfMe4L/zjH
GHdyLTZR95JaTFmgey6rpWe0e14tvcGG821hxrndM4dzz3fPVrW+i8T43QJ9
nlPrd1liZ3jf9Hp2La6RO8u941/uNeHKFbbctUvdFz1dXIuD9HphLa7Bvwvc
F/5FjjHuDp8bZ3ZSLf6y5ytdm7O5sRbXYMNNtjDjhlocIXdNLSbCwntrMQJu
XV+Ls4y7pxbXyF1Xi7PkrvU8/Ltq3R24crctc+6vxSM4dFstDnLnbqnFNfh3
s/vCv9Uxxp3YPdN4b0/VYgrafaaWntHuI7WYskH3PGoLMx6upT1yh9TiaNM9
V9e6s+z5oVrfFcbd533T64O1uEbuAfeO/6zXhCvP2XI/nnZf9PRkLQ7S6+O1
uAb/HnNf+E84xjj+75f89xH83ci/qc/RPXP678m5umfu7nm9Ftdgwxu2MOO1
Whwh97vvAXf/41qMgFuv1uIs4z6qxTVyr9TiLLmXazEU/4NavIArH9oy59Na
PIJD79TiIPx7qxbX4N+b7gv/bccY934tNlH3h1pMQbs/1dIz2v2q1jcGNnxt
CzO+9PmR26p7F2N0z5jdUzbSANz6otb3knGfeN/0+nktFpP7zL3j/+w14cqv
3XNCrbv2o/uip+9rcZBev63FNfj3jfvC/84xxtWNNMDdf68Wf9nzb67N2fxX
i2uwYaRGFmb8W4sj5P6sxURYOG4jRsCtf2pxlnHjNOIaub9rcZbcX56HP1Yj
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
dYx1f2biEXWbbTGF2Z2vrXlmdkttsQk2wCQszCjGn8/LlON3R/45CX5v5PfD
sv1CWz/3s+4/75te8219j5LLtdU7/vxtvROuLNCW5a612uqLnhrmIL3CRLgG
/2AlfeEf6jX1sEu3dW6c2R+ZOM6eO7VVm7NZtC2uwYbF2rIwY5G2OEKuS1tM
hIVZW4yAW13b4izr0ra4Rm7htjhLbqG2nsPv3tbdgStJW5Znlm2LR3BoybY4
yJ1boi2uwb/F2+oLv1tbMdb97jNnb6u1xRRmd/W25pnZXbEtpsCGldqyMKNH
W7NH7utMHIVfC7Z1Z9nzCm19r7Cu3da+6XX5trhGbrm2esdfo613wpU127Iv
hnq11Rc99WyLg/S6Sltcg38rt9UX/qptxVgH7/lZan/XGmu/d1s++T5tsRJm
9G2LcXBig7Ys/Fi/rTy53du6E8zBwLZYBjOmus563KnQlLZYu2FbNeDTpm1x
BGZs1paFMZu3VQMWDmgrRt2N22IfXNyorRr4/dqKwchN2uIRdbdsi2vwbKe2
ZpiZHtTWdx5ntU1b3zdwYtu2LPwY3Fae3LXx58ltsX+Ltvqi7tZt8ZdaW7X1
Hvzt2qoBn3Zu650wY5e2LIzZsS3e0dOubcW4g0PaYh9c3L6tGvg7tBXjmUUC
WVNCk0P929o3ex7a1jnAub3bYiXM2LctxsGJYbbwY5+28uT2aOs5uFiM0MjQ
iNBebbGVWnu2lccf7hrwab/Q2NC+sT4fGh4aFiqFRrlWwfXIjWyLfXBxhGvg
j3IMRu7W1ufB3arEM2NCo0MLhiaGDgnVQ/uH9gs1QweExoVaoQPtNxxjXVd/
ZoeFyq5HfzXXGBuq2vK++UIHuVaX0CS/e6HQofY7u5cJoYVdm9wCoYND40Pz
21Krk9eSWyx0eGhqaPPQ9aHrQluEbrDPv+ro6NC0jv/9K486pttf0rGjQuuH
LgpdGOoRmhM6seN//0mz/+WPDK3g2OyO//3niv8XOyK0uC19LBeaFTohtLzX
4q8UOjl0kv6nnI4ZoeM6/vd/peg4NnRMx//+L9j/s/SXOE9uWdc7PrRW6JzQ
2aF1QueFzg2dGWc9LnRa/PnSsAeETufMwp4atmeHvv/4ewp+vl+7rZ8t+Lls
1Q6tOSW0ontk/6s4Nje0si17WDd0vt+9XugC+2u7F/rr7R7PCq1Bf6F5odVt
zwit6Ty5tvc3s+N/v2b/z/IZ9fGZ8I6NQ5eHLgv1D10ZuiK0Segq+/0cY90G
oUtCF4cGhW4J3RzayDUuDW1oy7pNQ1e71pahGzt0h7YK3WR/cOhW19ra9cgN
CF0buia0mS21BnboPpLbNnR76LbQ7qGHQg+GhoYetj8kdFfoztCOoXtCd4e2
8XO8e6fQvc4t2qG7D8v6eq/c4x38HLX4b5Lx32bkv7+4vWvfEdo5dJ9r7RF6
xH3sGXrU/nZeS997hR5zbtfQA6H7Q7vYUms374lcPoZzeGjYYmLZU6EnQznH
9l1MjHgh9HyHmPGi/dGOPdehe/F96LsOseOd0Nsd4g75ZzvED2JvdYiVxJ7p
EC+xT3eIF2+G3ugQP96yD2veC73bId69GnqlQ7x7OfRSh9j2kvsb5zy58a73
eofm9svQFx2a269DX3WICx+HPuoQJz6xP9WxD0P/hvbOxWec051bOOxCOZ0r
+Q86xMp3vf/Jjr3fIV6+7z3AjG/8bubnW/vHuBf6O9o9ft4htn0W+rRDPPvU
/U1znhz3e5HopWtO/GWvr3VoRr/zO+DCb6FfO8SJ3+2f5NgvHeLgj6EfOsSJ
QtTL58Qa8j93iB3EcjmxlthPHeLoT34eZnRE/r8OMYa1+OeHKYUthh7k50O+
jzvEtj9Df3SIZ3+4v9vaisPMA70nzp75XyBqzJ/THHcO2yknRtTD1nJiRiMn
n5kjVs3p+4Zz65ITs9krd5eZJF/JiZv0yP5hG7FyTozDsgd4sWBO74Yf1MOH
KfRCf/COHufLiXetsM2c2IalP1hInhyc/c93jTMeGLEBOZ3xFmE3z2nOu4Vd
Iqe5XzInH/YQWzyn8+8Tdr2ceLF82OVyYhP5xXJiGbFlc2IlsUVz4iWW+wQj
2mGznJjBWnz40iPsCjkxrnvYZXJi2dJhl8qJYVj6g3Pkyd3foXppTrPaO+ya
Oc3q2mHXyokFPcOumhMbVsvJh0/EVgmdEfon9HdoXuhf+/CL/Mo58ZEe2f8T
HYqtlBMjV8xpD3BinZzezd1aNycfltAL/cE7elwjJ56tHrZXTgzD0h8sJE+O
GeWsOD+Yy16TnO4vZ8I7YEG/sBvnxIb+Ofnwg9hGObGvb9j1c2LDoLBb58QX
8hvmxAtiW+XEV2Ib5MROLM/DiS1zukNwhbX4cGebsINz4h13bbOceLZp2E1y
YhiW/mAheXJ8J7Enzp5Z3S3srjnN69Cwu+fEgh3CDsmJDTvm5DNzxLbP6Tsb
bsFTOM1eubvMJPntcmIlPbJ/eEZs25y4hmUPcGSPnN79d/x5z5x8WEIv9Afv
6HGXnHi2c9idcmIYlv5gIXlyZ4b+892a57n8x+J7gHfAglGhkTmxYbT9omMj
cjr/GaHjcmLDhNDBOfGF/PCceEFsfE58JTYsJ3Zi982JEweFDsyJK+Ptw52J
oUNy4t3+of1y4tnY0JicGDbG/dWcJ9dyvQNymtVpoaNymtXpoaNzYsGU0OSc
2DDVflfHDsuJ7/S4T053//rQdT5X8ofmxMpDvP+FHJuUEzsneQ9w4hi/m7t1
rP2l3Av9dXOPR+bEsyNCh+fEsMPd3xLOk+Ou3xi6ISfustdxOd3f4/wOWDAn
dGJOjDg5dFJO/CA2Oyf2HR+amRMbzgmdnRNfyM/KiRfEzsqJr8ROyImdJ/h5
OMHdgltrei0+3DkvdG5OvDstdGpOPDslNDcnhs11f6s6T67hPXH2zOqVoSty
mtWrQ1flxIKLQxflxIZL7K/v2IU5MYtzuzYnTrNX7m4f5y/IiZXnev/rOXZ+
Tlw733uAE9f43QNcD38T90J//dzj5Tnx7LLQpTkx7FL3t7Hz5M7w7DHfnPFH
oQ99xp+EPs6JBbeFbs2JDbfbH+zYLT7/V0Ov5MSGh0IP5sQX8jfnxAtiD+TE
V2I35cROLPcJTtwfui8nrjxgH+48Eno4J97dHborJ57dGbojJ4bd4f6GOE9u
Z9e7N6dZfT70XE6z+mLohZzm7MnQEzmx4Sn7+zj2eOj0nL4b/8rpZwpye1vk
H8uJlQ97/3s59mhOXHvUe4ATL/nd3K2X7Y9xL/Q3yj0+mxPPngk9nRPDnnZ/
I50nd7jPivPbyXu9J6f7+4rfAQveCb2dExvetX+IY2/lxL7XQ6/lxIYvQp/n
xBfyb+bEC2Kf5cRXYm/kxM43/Dyc+DSnO3SU1+LDna9CX+bEO+7aBznx7P3Q
ezkx7D33N9l5cjt6T5w9s/pb6NecZvWP0O85seD70Hc5seEH+zMd+zan72y4
BU8P9F65uzOc/yYnVn7p/R/n2Nc5ce1r7wFO/Ol3w5W/7M91L/R3knv8JSee
/RT6MSeG/ej+YOHPzvGzDgzjZ7Fh+Tjn0JOhEaFnQk/nxYJi2EJebCjl5cMP
Yvm8zj8J2z0vNiwQdv68+EI+lxcviM2XF1+J8RdxsBPL9zScaMWfm3lxhbX4
cKdz2E558a4WtpoXzyphy3kxDEt/sJA8ObhDvUZes9ot7BJ5zepSYZfMiwVd
wy6cFxsWycvn3IgtlNd9HxB2s7zu2cC8fM6VfJe8WEmP7B8GE1swL3Zi2QOc
WDqvd3O3lsnLhyX0Qn/wjh4Xz4tni4VdNC+GYekPFpInx13fPK+e4C57red1
fzkT3gELVgi7fF5s6JGXDz+ILZcX+7KwaV5sWDPsGnnxhfyyefGC2Op58ZVY
Oy92YnkeTvQKu1peXGEtPtxZK2zvvHi3StiV8+LZSmFXzIthWPqDheTJ8V3C
njh7ZnXjsBvlNav9w/bLiwV9wq6XFxvWz8tn5oitmxezOMNN8+I0e+XuMpPk
18mLlfTI/uEZsbXz4hqWPcCJTfJ6N1yhHj4soRf6g3f0uGFePNsgbN+8GIal
P1hInhxs5TPr6fOeGprie3BE6PC8WDAo7NZ5sWFwXj78ILZVXjzYLeyuefFi
97x8+EJ+y7x4QX6XvPhKbIu82InlPsGRncPulBdXWIsPd4bmVRfebR92u7x4
tm3YbfJiGJb+YCF5cnBnx7A75DWro0Ij82IKFvbwe+BeYffMiwv7hN07L07s
m5fPz/TEWPdfLWL18OvizfC8eMb3JzX2yIuXWPrOOU8tGDEmNNp3a7/Q2LxY
Mtr9ce/2d65nKfgbOrUk/o3w+6p+jlqL+aw4P7jLXofkNZfjXAseTAwdkhcn
Jtnv7NiEvPh3UOjAvHhxdGhaXowhf3BezCB2VF7cITY+L9aO9/Ow5EjfoW5e
iw8XjglNz4sp3LXJeTHvsNChebHtUPfX1XlyfJewJ86eeT0pNCeveZ0bOjkv
HhwfmpkXJ06wnzk2Iy++s78D8uL0Af6MUuePy4uP073/xLFj82Lbsd4DLDnF
7141dKr9ldwL/fVwjyfmxbzZoVl5sW2W+1vB+dk+V74D+V7k56Cero09ze+A
B+eGzsmLE+fZX8uxs/Oan3tD9+TFiytDV+TFGPJn5cUMYpfnxR1iZ+bFWuy8
vFhyWejSvPhyuX3Yc3XoqryYclHowryYd0Ho/LzYdr776+M8uQ1d75K85vW2
0K15zesdodvz4sENoevz4sSN9jd37Lq8GE+PZ+R19z8OfZTXdxL5a/Pi41Xe
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
KB+uEGMdd79P2PWK4sTyYZcrionUWKwoLmJ5HxxauqhaMKMdNiuKF8sW5cOg
FYqqBUuoRw7OdQ+7TFG8w1ILDiZF5WAQ9dKiOLVi2B5Fze1aYXsXxZ1Vwq5c
1Jz1DLtqUcxYrSif2SPGun8LYtheRTGRevTHZ0mNlYr6TLG8Dw71KqoWzFi7
qHfDi3WK8uERvaxZ1CytW1QOzq0RdvWieIelFhxkLTnmnLMaUBS72Sv7h2Xr
F3Ue8GKjsBsWxYh+YTcuihn9i/LhCjHWwbu+RT0PJwaF3booJlJjg6K4iGUd
HNqkqFowY4ui7hC82CrslkUxaHBRtWAJ9cjBuc3CbloU77DUgoPsiRyM4U7x
ucCpbcNuU9TcDg27e1HcGRJ2+6IYsWPYHYpixk5F+fCFGOv4zua+wzKYSD36
Y+6psV1R84/lfXBo56JqwYw9ino3vNizKB8e0ctuRbGEO0IOzu0adpeieIel
FhxkLTnYNCy0L/ewqL9bXzX0DHenJB8ujA6NKooTY+yXHBtZ1H2fGZpRFC8O
CU0oijXkRxTFDGIHF8VHYsOLYuRw9wEjxocOKooZB9uHL5NCE4ti3LjQ/kUx
br/Q2KJ4Ntb91Z0nN5/rHVjUzB8dmlbU7B4Tml4UF6aGphTFicPtL+LY5NAZ
fL589r5n14eu81mSP6woPk70/hd27NCiGHmo9wAjjvW7mZnj7C/tXuhvSfd4
VFGMOzJ0RFE8O8L9dXOeHHf6ptCNRTGXvR5Q1FzO8DvgwkmhOUVx4mT7PRw7
sSjGnRA6vihenBM6uyjWkJ9dFDOInVUUH4nNKoqRs/w8jDgzNK8oZpxlH76c
Fzq3KMadFjq1KMadEppbFM/mur9VnSfX9J44e2b+ytAVRc3u1aGriuLCxaGL
iuLEJfbXd+zCorjFuV1bFOvZK3e3j/MXFMXHc73/9Rw7vygWnO89wIhr/O4B
roe/iXuhv37u8fKiGHdZ6NKieHap+9vYeXKr+zM7w2f8cegjn/GnoU+K4sLt
oduK4sQd9rdx7Faf/2uhV4vixcOhh4piDflbimIGsQeL4iOxm4tiJJb7BCMe
CN1fFDMetA9fHg09UhTj7gndXRTj7grdWRTP7nR/OzhPbhfXu6+oWX0h9HxR
s/pS6MWiWPBU6Mmi2PC0/X0de6Kov7vn90V+1+R/I8Ly++I+zj9eFB8f8f73
duyxohj5mPcAJ172u7lbr9gf617ob7R7fK4onj1bFCNH2NLfKOfJHeGz4vx2
9l7vLer+vup3wIJ3Q+8UxYb37E907O2i2PdG6PWi2PBl6Iui+EL+raJ4Qezz
ovhK7M2i2Pmmn4cTnxV1h6Z5LT7c+Tr0VVG84659WBTPPgi9XxTD3nd/U5wn
t5P3xNkzq7+Ffi1qVv8I/V4UC34IfV8UG360f7xj3xX1PQ23biiK0+yVuzvT
+W+LYuVX3v8Mx74pimvfeA9w4k+/G678ZX+ue6G/k9zjL0Xx7OfQT0Ux7Cf3
N8d5cvzcwyyeXtTPUqe7NvZvvwNG5ON7MlcSF4r879IlcaJUkg9LiLGOu5CG
TUpixPxh5yuJqdTg/xAHL7H/FcWeckm1YEQzbKMkZrRK8uHNAiXVgjfUIwfz
qmErJbENSy2YWCspB4eoVy+JX53DdippdpcKu2RJZ7Nw2IVK4sIiYbuWxIlF
S/I5Q2Ksg/X0/m9RfKQe/cHdLmEXLImXWN4HexYrqRaMWLqkd8OMZUry4Qi9
dCvpznUvKQfzlgi7eElsw1ILJrKWHLM4MOyAkpjLXtk/HMpKOg8YsXzY5Uri
Qo+wK5TEiRVL8mEJMdbBwXZJz8OINcOuURJTqbFsSbzEsg72rFRSLRjRq6Sf
sWDG6iX58KZ3SbXgDfXIwbxVwq5cEtuw1IKJ/LxGjlnkTvG5wK+1w65V0uz2
D9uvpLlaL+y6JXFh/bB9SuJE35J85o8Y6+AXn9lmJfGRevQHw6ixTkksw/I+
2LNBSbVgxCYlvRtmbFqSD0foZeOSeENtcjBvo7AblsQ2LLVgImvJwawtwm7u
uzI1NMXnfbh9WDA47KCS2LBNST78ILZ1Sfd9XGj/ktiwW9hdS+IL+a1K4gWx
XUriK7EtS2Inlj7gxM5hdyqJK6zFhztDw+5eEu+GhN2+JJ5tF3bbkhiGpT9Y
SJ4c3KHejiXN/KjQyJJmd0xodEmztU/YvUvixL4l+cwbsb1K+vsIvi/5Ppzn
WfzHIr9nSaykR/YPz4jtURLXsOwBRoz1u5mZ/eyX3Qv9Fd3jiJIYNzw0rCSe
DXN/BefJwVr2t0NJzMXyGdV9JrwDXhwcGl8SIw4JTSiJGRPtd3KMdfDuwNAB
JXFiWuiokphIjYNK4uJBXgfLDg1NKokZR/gOwYsj7cOgo12rm+uRg3OTQ4eV
xLvDXAsOTnEONh0Tml7SzJ8UmlPS3J5sH+7MCB1XEiOOD80siXfT/W74cYJz
fH9z92FZ03vlHmd+jlow5fSS/hmpxLWPLYlJs1wLfsx1H7DjFPvdvZa+4cqp
zsG8E0OzS2LfbNfq4T2Rg1PzQmdw5tVgU+jJ0PDQ0/ZhxLmhc0pixnn213Ls
7JLuxT2hu0tix5WhK0riDvmzSuIHsctLYiWxM0vi5ZnuA15cFrq0JH5cbh/W
XB26qiTeXRS6sCTeXRA6vyS2ne/++jhPbkPXu6Skub0tdGtJc3tH6PaSuHBD
6PqSOHGj/c0duy70FJ9vOT77su7cx6GPfK7kry2JlVd5/wMcu6YkXl7jPcCM
O/1u5ucu+9u6F/ob7B5vKYltN4duKolnN7m/Qc6T435/GvqkJP6y14tLmtG7
/Q648HDooZI48Yj93R17sCQO3he6tyROPB96riTWkH+gJHYQe7Yk1hK7vySO
3u/nYcYzoadLYsyz9mHQi6EXSmLfE6HHS2LbY6FHS+LZo+5vb+fJ9fWeOHvm
/93QOyXN8fuh90pixGuhV0tixuv2D3DslZK+bzi3D0tiNnvl7o5z/uWSuPmC
97+/Yy+VxLiXvAd48YHfPcX18A91L/QH794OvVUS794MvVES295wfxOcJzfc
n9lTPuOucdcWLuuMFw27SFlz/lXoy5Lm/mv70x37wudfj7W1snjxW+jXkthE
/vOSWEbsl5JYSeyzkniJ5T7BiJ9DP5XEjF/sw5c/Qr+XxLjvQ9+VxLJvQ9+U
xLBv3N9M58nNdr0fS5rVYvRYKGtWy2FLZbHg39A/JbHhP/tnOPZ3aN9Y92To
idCw0FP2T3f+r5L4+Lv3f5pjf5bEyD+9BzhRKevd3K1qWT4soRf6g3f0mC+L
Zzn+JRNlMQxLf7CQPDlmlLPi/GZ5rz+UdH85E94BCzqFXaAsNnQuy4cfxOYv
i33NsI2y2NAt7BJl8YX8fGXxgtjiZfGVWKssdmJ5Hk4sVtYdgiusxYc7S4Vd
sizecdcWKotnXcIuWBbDsPQHC8mTO8F74uyZ1RUitnxZs7pi2B5lsSANm5TF
hqwsn5kj1r2s72y4BU/hNHvl7jKT5Jcpi5X0yP7hGbGly+Ialj3AiZXKejdc
WbksH5bQC/3BO3pcriyeLRu2XRbDsPQHC8mTGx562ndrmOfySYvvAd4BC3qH
XbMsNqxVlg8/iK1R1vnvEHZIWWzoF3bjsvhCfvWyeEFso7L4SqxXWezErlYW
JzYI27cs9rF2w7K4s0nY/mXxbr2w65bFs3XCrl0Ww7D0BwvJk4M71Fu/rFkd
HHZQWbO6bdhtymLB5mEHlsWGLcryOTdiA8riOz32LOvuTwlNLutcyW9WFivp
kf3DYGKblsVOLHuAE9uV9W7u1vZl+bCEXugP3tHj1mXxbKuwW5bFMCz9wULy
W/muHx6aWhZ32Wufsu4vZ8I7YMHuYXcriw1Dy/LhB7Fdy2LfTmF3LIsNo0Ij
y+IL+V3K4gWxEWXxldjOZbETy/N53y24VfBafLgzJjS6LN7tHXavsni2Z9g9
ymIYlv5gIXlyfJewJ86eWT0kNKGsWZ0UmlgWCw4IjSuLDQfabzi2f1nM4twO
K4vT7JW7W3d+v7JYOdr7rzk2tiyujfUe4MShfvfCroe/oHuhv07u8eCyeDY+
dFBZDDvI/S3gPLl9PXtP+A7eELreZ3xT6MayWHB0aFpZbJhuf0nHjirr/C8K
XVgWG+aETiyLL+SPLIsXxGaXxVdiR5TFTiz3CU7MCp1QFldm24c7J4dOKot3
M0LHlcWzY0PHlMWwY9xf4jy5ZV3v+LJm9ZzQ2WXN6nmhc8uas9NDp5XFhjPs
93Ts1NA+ZX03Pl7WzxTkVrXIn1IWK0/y/ldxbG5ZXJvrPcCJ8/1u7tYF9td2
L/TX2z2eVRbPzgzNK4th89zfms6T29Jnxfm1vdeZZd3fC/0OWHBV6Mqy2HC1
/f6OXVEW+y4NXVIWG24L3VoWX8hfXhYviN1SFl+JXVYWOy/z83Di5rLu0CCv
xYc7d4RuL4t33LXryuLZtaFrymLYNe5voPPkMu+Js2dWHw49VNasPhp6pCwW
3Bu6pyw23Gd/R8fuLus7G27BUzh9cVl3dwfn7yqLlbd7/0Mcu7Msrt3pPcCJ
x/xuuPK4/T3cC/3t7h4fLItnD4TuL4th97u/3Zwn16sSZxs6PbR6aJ79NUJn
2ocHL4ZeKIsZz4ee85l/H/quLB68E3q7LEa8F3q3LI684GdG+blny2IHa98q
i7XEnimLJcTeLItrr4ZeKWvGvgx9URbniL1cFrdecn8jXIPv+/2dJ3ew671R
1rx+5VrM6zehr8viwSehj31WH4U+LOuOd43PYOGK7tYiFfncrUUr8g/3cx/5
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
XVYTOy/z83Di5pru0CCvxYc7d4Rur4l33LXrauLZtaFramLYNe5voPPk2t4T
Z8+sPhx6qKZZfSz0aE0suDd0T01suM/+jo7dXdP3NNyCpxt4r9zdHZy/qyZW
3u79D3Hszpq4dqf3ACce97vhyhP293Qvj9TEO3p8sCaePRC6vyaG3e/+dnOe
HD/3MIv71vSz1L6ujX3S74ARz4eeq4kLL4ZeqIkTL9kf4xjruAs/hL6viRHv
hN6uianUeLYmXmKfqYk9L7sWjHgz9EZNzHjLPrx517UOcT1yMO/V0Cs1se0V
14KJrzk33vVer4lf74feq2l2vw595bP5KPRhTVz4JPRxTZz41P7hjrFuhHt/
uiY+vuf+prjGBzXx8gO/D/Z85low4hu/G2Z8a/8Y9/JlTXfuO+dg3hehz2ti
2+euNd1ryTGLXevB7LqY+7r3D4d+9HnAiF9Dv9TEhd9Dv9XEiT/sn+wY6+Dg
T34eRhT4d0LXxVRq/FwTL3/2Otjzp2vBCP6DjfyMBTNydfnwplhXLXhDPXIw
7+/QXzWx7S/Xgon/OMcsfu/PBX6V47lSXbPbOWynuuaqFrZaFxcaYet1caJZ
l8/8EWMd/OIzW6guPlKP/mAYNSp1sQzL+2BPq65aMGLBut4NM7rU5cMRelmg
Lt5QmxzMmz/sfHWxDUstmMhacjBr0bCL1HVXNg87sK7z3qIuHxYsGbZbXWxY
qi4ffhBboq77vn7YPnWxoUfYFeriC/nF6+IFseXr4iuxxepiJ5Y+4MSyYdt1
cWW5uny4s1LYFeviXRK2e108Wybs0nUxDEt/sJA8ObhDvayumV8rbO+6Zned
sGvXNVurhe1ZFyd61eUzb8RWrevvI/i+5PuQnynIPWWRX6UuVtIj+4dnxFau
i2tY9gAj1q3r3czMenX5cIRe6A/G0eOadTFujbCr18UzLP3BP/LkYC37S+ti
LpbPiLnkTHgHvNg47EZ1MaJ/2H51MWOTuny4Qox18G6DsH3r4sSgsFvXxURq
bFgXF7Gsg0Ob1lULZmxZ1x2CF1vV5cOgwXXVgiXUIwfnBoTdrC7eYakFB7mP
5GDTtmG3qWvmdw+7W11zO7QuH+4MCbt9XYzYMewOdfGO53g3/Niprhzf39x9
WAb32Sv3GAbxHLX4/9XwvwHyz6vCA2pvVxeTdq6rFvzYo64+YMeedfmwg7X0
DVf2qisH83YNu0td7MNSCyayJ3Lz/L9D8u/m4fdG/h35PA/X9q3r35vP3E8I
HVwXR0aGRtTFjtGhUXWxZIz9kmOsK3jt8Lq4iB1WF4fG+hmYtZ992HFg6IC6
WHKQfe7dzNCMupgy3jnYNy60f13829+1FnC/rGu6Huvg2iHeDzN8dGhaXYyb
6BznNDl0WF28mBqaUhc/Dre/iGOsW9hrD62Li9hJdbHnCD8Dn460Dz+m+92w
4xj7XfwcfcCVY51b0j0eVRcLj3ItZu84r5sX+pfzr2suZzgHW68PXVfXzJ8T
OrsudswJnVgXL04OnVQXP+baX9Ex1q3gtbPrYit2Vl3sOcXPwKdT7a/uns6o
ix1n2oezJ4SOr4srZzkHB08PnVYXC09zrd7ul3VtP8c9gGHnej+w4KrQlXXx
7jznmLGLQhfWxY5LQhfXxZJL7fd1jHV9vPaCuliGPb8uDl3mZ2DW5fZhx9V+
Nyy5xv66fo4+YMq1zvV3j1fUxb8rXGugz4d1vfyZ8VnAtRt8ftyhj0Mf1cWg
h0IP1sWaW0O31DX/t4duq4sHd9jfxjHWDfLam+viIvamunhzp5+BR3fZhxf3
he6tix/322cmXwu9WhdHHnAO3t0Tursutt3tWru5X9bt5Hqsg2UPez+w4IXQ
83Vx7RHnYNATocfrYsdToSfrYsnT9vd1jHV7e+1jdbEM+2hdHHrGz8CmZ+3D
nRf9btjxkv09/Rx9wJWXnRvtHp+ri3PPuRZ8ecXrtvLnemNd7HnVuS0d41yZ
/y9Cn9fFnbdDb9XFgHdD79TFkvfsT3SMdRO89s26OId9oy4Ove9nYNMH9uHO
J3XdIdjxqf3xfu71urjymXMwjrv2YV2c+9C1prlf1h3k57gH8OtL7wcW/B76
rS5+feUcc/td6Nu62PFj6Ie6WPKTfeb7e6+b4bXf1MUy7Nd1cehnPwObfrEP
d/7wu2HHn/aP9XP0AVf+cu5k9/hrXZz71bWYvb+9brVG+KHTGprLf5zr6dip
Dc3/AmHnb4g7hbD5hhhQCltsiCXlhny4QIx18Iu1uYY4h+U/+A6HKg09A5uq
Dflwpxm20RA7Wg35zGQaNmmIK/M1lINx9bC1hjiHpRYcol/WwTXqsQ5+dWpo
P7BgybDdGuJX54Zy3N2Fwy7U0B1fJGzXhliyaEM+d5wY6+AXa7s0xDnsgg1x
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
xEmhOU0xkRpHNcVZ7JFNceg414IZs0OzmuLFifZh0Mmu1cP1yMG5maEZTfFu
hmvBweOdW871TmiKU6eE5jY1/+eHzmuKPaeHTmvqXs8LndEUP86038sx1vEz
Vi8/t7Lr0V9P1zi1Ka6d6vfBpLNcC15c4HfDjwvtr+Nezm2KHRc5B9vOCZ3d
FOPOdq21vZbcst4fe+7rz57nYdalPg/m/7bQrU1x58rQFU0x4OrQVU2x5Br7
mzjGun5ee3lTnMNe1hSHrvUzsOk6+3DnpqbuEOy42f5Gfo6e4MotzsE47tr1
TXHuetca7H5ZB7Nu9x5g0J2hO5piwSOhh5vi1x1ex9zeE7q7KT5h72qKB/eF
7m1qvu/1Or6/ufvMA7y53+ue9t9vrmr+3eV3w6kHQw80xaBH3Qccecz+rs5T
C8Y87txQ9/tQU8x7yLVg0hNexz8zwd/v83f5cO1J5+DX06GnmuLRc6Fnm+LC
O6G3m+LR887BhhdDLzTFmJfsj/RzzzTFoZedg02v2IdVr9qHR6+HXmuKR2/Y
H+PavA++vOncIe7lrabY95prTXCMddzZH0LfNzWjP9qHTe+H3muKTR+GPmiK
a8Te9Tl95Bwc+TT0SVNc+cz+ZD9HLdjzuXNw6gv7cOtL+zDo69BXTXHkG/uT
/E4+XxjzrXPHu/fvmuLgV6410zHWcac+dq+w7CfvkxlotOJ7oCWu/Rr6pSkG
FCNWaIkpvzkHR/4I/d4UV/60P8fP/dwUe/5yDk79bR9u/WMfBv0X+rcpjnS0
5M91bd4HY3It5WAMveRb4uC/rgV3iLGOOe8aduGWuPyz9wm/KhErt8SkWthq
S7wjVmqJTXwG5GBDs6XPBca0WvJhGc9RCw7N11IONs3fkg+rFmjJh0edw3Zq
iUcLtuTDXN7J5wtfurSUgz30vlBL7OM5asEhYl38Ge0Tdm9/Lvu25MOmxcIu
2hKblgi7eEssWCHs8i3xqFtLOdixVNglW2LJ0i35cI7nqAWrlmkpB5u6t+TD
qqQlH6ZkYdOWGNNuyYd/1OZ9MGXZlnLwhl6Wa4lrPEct2EOMdcxzn7DrtTTD
67fkw6OVwq7YEodWCbtySywj1qMlHq3aUg6mrBa2Z0uM6dWSD794jlqwafWW
crBjjZZ8WLJmSz48Wits75Z4tHZLPmzlnXy+sGmdlnIwht7XbYlxPEctuEOM
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
Nyw5KK0cTjGXXmlx5OC02uBcz4j7pcU7IrXgIH17+nxPCk1Mi++slfXDrz5p
PQ+4c3jEw9JiQL+IR6TFkiPTyuEC1+gH1w5NazwcGRg6IS2uUaNvWvwj0g8+
HZVWLdhxnPcJlhzvHAYNcq1VXI82OHdMxKPT4h2RWnDw2LTa4Ctnin2BR0NC
g9PiwvjQuLR4NDw0LC0fnxgakRZXRjpv5Wv0K3vPTk6Lg4M9v7VcY2havBvq
+8GvUa4Fgyb43nDkJOc5z2VsWow52W0waUxodFpsGu1aWfelbUXvWf+0mDQl
NNnP+47Q7WmxZlrolLRYMyM0PS32zHTe2tfox9m/KnRlWrw4M3RGWlyjxtS0
uDjV94NZp7oWXJkXmpsWO053Dl/Ocq2OrkcbLJsdmpUW42a5Fpw7zW0dXG9O
Whw6OzQ/Ld9eEro4LQ6dG1qQFiPOCy1MixmLnG/ua/T7L3RsEuckEdfme36b
usY5abHwHN8PDp3vWjDjUt8bXlweuiwtHjGXi9Ly0hVug3MXhi5Ii3cXuFZn
96VtHz+r29Li+ByvH5Zd7ecBL64PXZcWI24M3ZAWM25y3t3X6AfvrvF4OLE4
dHdaTKTGtWlx8Vr3g0M3uxbMuDOtMwQv7nIOg+5xrV6uRxucuzV0S1q8u8W1
enhNtMGYK70vcGpJ6N60fPtk6Im0uPNA6P60GPFQ6MG0mPGw8z6+Rj/ewZx3
WHag6zG/3q5xX1r+v8/3g0OPuBbMeMr3hhdPOz/Sc3k8LZY84zY491jo0bR4
96hr9XNf2laI89Q/0dniM1Z/14Blz6f1DoAXL4VeTIsRr4ReTosZrzof7Gv0
4+z/GPohLU68H3ovLSZS44W0uEhcmhaHXnMtmPFO6O20ePGucxj0gWuNdT3a
4NwbodfT4t3rrgUH33TbKNd7Ky1OfRT6MC3ffhf61s/j09AnaTHi89BnaTHj
C+eTfY1+x3vu7NEE12N+E13j47S4+LHvB4e+dC2Y8b3vDS+WOZ/puXyTlpeW
uw3OfR36Ki3efeVaM9yXNs59OZ5hKRG73/L6YdlPfh7w4rfQr2kx4o/Q72kx
40/n832NfvDuZ4+HEytH7ZUSMZEav6TFxV/cDw795Vowg7MFt+DFiolyGLRK
olqwhHq0wbl/Qn+nxbu/XQsO/us2GPOD9wVOrR7jVkvk21zEbCLurBVxzUSM
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
5xr9YAB922XFAmLbrFiwYVZjYEOnrHI8t2lW98a7m2WVwyPGMQ/8vXlWbTCC
OW6UFUeI1IIFW2TVbxefV841nNgyq7ZxzJU1ZeWtPSLunpW/t4u4bVYs2CHi
9ln5f8escnjBNfrBAPp2yYoFxM5ZsaBrVmNgw05Z5ZypbhF3zcq7u2WV44HD
Qn2z8nf3rNo4Z7tE3DkrjhCpBQuYL/04j9SjH7zYM6v1cO4PjnhQVlzYK6s2
fLtvxH2yYkHPiPtl5f9eWeX4m2v0gwH07ZEVC4h7Z8WC/bMaAxsOyCrHc72z
ujfePSSrHB4xjnng7z5ZtcEI5nhgVhwhUgsWHOp+8Jp93SYrTvR1G+fmlNDU
rHwyLDQ0K58fHToqK98eGzomKx/3d97K1+i3lvsemRUL+oWOyMobAzwGrxzn
HA8PyurvvfD0YOeretzhWXl+iNvwN38XdnxWfj3etUqeL/1W8TjOAV4d7vXg
oYmhk7Py8Qi34fPRoVFZeXpsaExWHh7nvLWv0a/hviOz4gjxxKy8Pd5j8NgE
53h4ku+Npyc7r3kc88DzU9zWznM8KSu/nuRaHf186Mc7mGfIZx28Os3Pj31f
HLo7K5+cG1qQlc9nhU7NyrenhWZn9TlpbmhOVj6f7X6buu/MrDhCnOH7zfMY
7n+6czw8P3RWVp4+2znn7/rQdVl5/hy34e8zQ2dkdR7PcK0dPV/6bet69MOr
C70ePHRl6IqsfHye2/D5haELsvL0xaGLsvLwJc67+xr9urnv+Vn5nrgoK29f
6jF47DLnePgq3xtPX+18F49jHnj+Grf18Bwvz8qvl7sWPr/W/Tb2vk7PyvPX
uW0jX+O54pn7Q/dl5fNbQjdn5dvbQrdm5ePbnffxNfr1dt+bsuII8casvHGH
x+CVO53j3XuyOkP4+V7nB3ncDVl5fYnbsh101j5pL7/e5VrHer70O9DjOAd4
/gGvB988G3omKw8/6Db8/2jokaz8/Hjosaz8/YTzwb5Gv4Hu+3BWbCA+lJXn
n/QYfP6Uc7z7nO+Nn593frzHMQ+8vtRtJ3qOT2fl1addCy684H74/KWs3oX4
9ZXQy6Hdc3HuQhfl5PnXQ69l5eE3Q29k5em3nE/2Nfpx5n4P/caaY38/ycp3
E13j1aw48arvh//fdi08/GHog6w8/ZFzvPpZ6NPQzKg5KvRxVmft3dA7WZ25
d1yLs/me2051vfez8usXoc+z8tBPoR+z8vzXoa+y8vC3oW+y8vR3zs/2Nfrl
Yl8Ghk7Iyf+fe35nucaXWfn/S98P/3/vWnj4Z98bT//i/HzP5YesPP+r2/Dn
8tCyrHixzLUWue9yn49GzKWeE/Pe9/rx7R9+Hnj+n9DfWXn4f6F/s/Ltf86v
9jX64fs/PR6/rRm118iJI9T4KytO/OV+MGCFnGrh4dXi51Vz8vTqOeV4da2c
auF56tGGz1aKuGJOfiNSC++unFPbJT5T7Es+/Nsqrn3WXh4qx8+lnDyfjpjK
ycOZiElOns7mlON/rtEPj7FntZz8v3ZO84Mj1GjJiRNE7ne/nz218HAlp3vj
6WpOOT5mLsWcPE9t2vBnIWI+J14QqYV36UsbzGPPVsnJr60jNnPa7/0j9srJ
8+tFXDcnD7eN2CYnT7fLKcf/XKMfZ6VbxF1z8tgmETfOiSPUWCcnThC5Hyxo
n1Mt/Nwp4oY5+XujnHI8tmlOtfA/9WiDHetH7JATV4jUwucb5NQGA6jXMSd/
bh5xs5x80zXijjn5dauIW4Zuj2d8cWhWaEno3lDnuD66vfrAh539GZ/vrDCA
eswPH1Bji5z8QOR+cGTbiF1y8vNOOd0bf++cU453mcsOOfl/l5za8Pr2EbfL
yfNEauFz+tKGJ3hWPXPiHGtl/Xh3t5yeB/7fM+IeOfl874h75XS+e+SUwwWu
0Q+fd89pPB47OOJBOTGDGjAbHhDph1f2yakWfj4gpzOEvw/MKcdjvXOqhf+p
Rxue3y/ivjmxg0gtfM6aaINlnCn2BX/2CR2Sk2/6h47N6SwfFuqbk8+PCB2e
k+/7OV/N1+jH+4nzDstWdD3mt4prHJoTDw71/eDIka6Fnwf43vj7OOctnssx
Ofn/eLcVgyFH89zay/NHuVYr96WNzx2r+J54/gSPx7uDcnoH4JOTQyflxIJh
oaE5eX5EaHhODDjRecXX6Fdy3yE5MYA4OCcmjfQY9mKUc/w6LjQ2J2+Pd875
Oyt0Zk6+n+A2/DwmNDqnfR3tWm09X/qt43r0w6sTvR68clpodk4+nuQ2vHtK
aGpOnp8empYTA2Y47+Rr9OvovlNy8gBxck7smOkxePVU5/e3133x7QPx89jQ
nJzYMdnzOC2ujQvNy8nPzHFWTr6f5Vow4ozQ6TmxdbCfWRfvE22cm7tDd+Xk
kytCl+fEgnNDC3Ly/HmhhTmd9UXOd/I1+u3ovufkxADi2Tn543yPwfMXOMev
l+T0GQtvX+p8e4+bn5PvL3Mbfuaz2IU5+f9C19rb86Xfdh7HOcCrV3o9eOW2
0K05+fgqt8GC60LX5uT5G0LX58SAG50f4Gv06+W+1+TEAOLVObHjJo/Bqzc7
x6+3+954+w7n+3kc88D3d7qtj+fI/77qEEdqHeHnQz/8udjPDH/eG7rH+/1t
6Juc/H9/6L6cfP5g6IGcfPuQ8wG+Rj/O3Puh93Ly2zOhp3NiBjWW5MSDJb4f
DHjYtfDwk6EncvL0U87x6rOuNcL1aOP8PRp6JCd2POJanM3H3DbU9R7Pya/P
h57LyUNvhd7MyfMvhl7IycMvh17KydOvOB/va/TjezjvZt7Jo1yP+Y11jaU5
+X+p74f/X3UtPPy2742n33E+xXN5IyfPv+s2/Pl66LWcePGaa012X9qGeH2s
eYb3nvH49gM/DzzzQ2g5a+Hzfk4cwM+fhz7LycNfOJ/na5/mxA/6f5QTG4gf
5uT7Lz0Gn3zlHO9+l9MZws/fO5/lccwJry9zGx7lrH2dk+e+dq3zPF/64fMf
vQb8+nPop5x887/Qvzl5+Cf3w/+/hX7NiQvEX3Ly9h+h33Niwe/uV+6gs/9V
ezHgT/fjbwj4bwD8N4GLXIN74/m/Q3/l5OP/PA+8vUJe+RVupxa+XzGvtqs9
339y8u0/rgUj+Psv+g1eJ85Y6KXQkNArzoeGXnWO33LRN5uX//J55XiykFeO
x5KI6bzWR0zl5UXGZULVDrr2TXv5kmuM4axtGLFjXs9v14i75PU8dovYLa/n
0z2vnGfJNfqx5p4R98vr3G8Qcf28WNMSsVVefFo9r//9J1xbI68cj7WP2C4v
z3XIK8eH1CDHV20irpeX/4jr5uU/xrXNy39E+sGCSsRyXowoRSzmxR0i+wVP
18xrHpy/rhF3zIuVa0dcKy+2EumHD9kb1gZTWRP9OPfs0855nWviTnmd3d3z
2i+8tV3EbfPy2/Z55fhj64hb5eUT4pZ5eZi4RV6eZFyXvHzZOeI2efmSuLWf
wYWhC0LX8XeFhThXoRvi51UirlwQJ6i3eehG/je4BbW9zT0jblHQc704dFHo
+rzGUQvesd/r5MWhjSJ2yosFO+S1Hry1b8R98vISZ4Ec/+wVcc+8/ErcIy/f
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
nHP3YkEegCnXegxcuD50XUGevC+0pCCW3By6qSBe3Bq6pSBe3Oa8p6/Rb1/3
vbEg9hBvKIgLt3sMnLjDORxZXNAZghf3OO/hccwJXtzrNtjEWbuzIPbc6Vp9
PV/67eV1sDbO+v1eD159JvR0QT54wG349ZHQwwUx4LHQowVx5HHnx/ga/Y5y
34cK4hHxwYJY84THwJonncOJZ31v2PGc834exzzgyvNuO8FzfKogNj3lWnBk
qfvBg5f8LIlbxef0LUOvxM/bRNy6KB9/GPqgIP9/5Bx2vBt6pyDWEN8uiEHE
twryP+PeL4gpxPcKYs17Ho/ffgn97P1OxT1binpuScR0aKTrvemzkCmqjedd
i1gtynu/hX7182YctTiva0VcsyhOfew1nOm+3Bt2fBv6piBefh76rCBOfeEc
hn0a+qQgZn3pNtjzncfDo++dw5plzk/3+n4qiIOfeB6TfR/qnuj1vVEQm5Z7
PIz5MfRDQUz5yfkcX6MfnPs69FVB55X9a1WUh7JF7RfcWa2o72SwYPWictix
YsQViuIL8b+CuEP8X0G8WMXfC+ELke+LsIfIeL67wxSYx+/R+b7N929+X853
XX5PsMj1/i3o9+uD3MZ3epgL+/n+Tw3yxOOoBV9Y09pFcfmP0O8FMWuNotaD
jysRy0X5m3NBDl8KEfNFMYaYK4o1RPYI/zOuVBRTiMWiWENkPPzj/pwnuPlX
6M+CePxP6O+CWP+n53ee10rbfM+XMwpPOY/M+1yPo1bKe8bvMGb4PPJcYVm9
qLMOn1pHbBbFo3WKyuHCxhE3KopH6xbVBhvaRFyvKN60i9i2KAa1LyqHSR2K
yuHU+kXleHTniDsVxaMNimqDVdSgLmzqWFQbjOkUccOi2MNcyOEO1+gHD3aN
uEtRzGJezBWWbVLUGuDT5hE3K+ods0VROVzbtKh+MAtW0fZyQayCX6/Gz52L
4tdr8XOXovLX4+dti8rx2HZF5XCQ+1AX/21fVBusYo6sH/bsUFQbnOsaccei
+MXekMM8rtFvmr0II3jfNIp6fpyJwyMeVhSDdovYrSgWdC8qx88HRjygKE7s
XlQbnNgz4h5FcWfviHsVdY8eReXcc5+ics7NvkXlvM84L8yDM7VfUW1wjRrU
hV89i2qDWftH7FUUg5gLOVzjGv04x30jHloUv5gXc4VJBxW1Bph3SMTeRXG2
T1E5/Dq4qH4wmBq04Q/2hrp46Iii9gtv9CsqxytHFpXjq6OKyuEi96Eunju6
qDbeVewxZw72HFNUG5zrHzq2KH4NcA7zuEa/7cxBuHV+Sd8d/xe6LLQav98q
iyXjQ+OKYsQE57yfRodGFfUuIo4s6p1EPLEo9jBubFHM5tqIonjEtTFF+er0
0DyfletC1/qsXO98V1+7xs/vztAdRXnuzNAZRb0DxnhOsHJwaFBRDBriHM6d
5DXg/7mhOUV5fp5zPD8rdGpR3iXOLMrDxBlFcYRxpxXFF+Lsopgx2+Ph8qTQ
xKJYONTzgK/DQ8OK8h9ruroo9o9wW0eviX2B0yd73mt5HLXw4hWhy4vyMDWu
KsqvxCuL8vmloUuK4scFofOL4ghxUVGMIZ5XFGuIC4tiB+MuLoopxIuKYg3x
wqIYdKHrrhJn5oTQ8aFVQwOdw8j5obNCK7v9uJLqka9UUo0V+f1FaOuSfpfB
eVzH+z29KG6e7Vrw8Rzn+/os3F6Uz28O3VSUX4k3FuVb4g1FsYbI2drH424r
iinEW4tiDfGWovhxi+vC0XNDC4ri9ULncPMy7/Wmbmd+O/j50NbVz4Rn1sn7
wdnlHT7ZZ4X33xTnZZ8dnj3+fyL0eFGef9I5LHkk9HBRTCE+VBRviA8WxRHG
PVYUX4iPFsWdRz0e37wbeqeoc/dL6GfP8bfQr0Xxi3oP+Bn87jZ4eXforqK8
/n7oPa/tV9fCKz+ElhfF2ntCi4vi1FNeD/x4O/RWUR5+xzl+eD30WlFnn/hq
UR4gvlIUbxj3ZlGMIb5RlJ/e8HjY92zomaK4vCR0b1FMvT90X1FMv9fzO8Rr
pW2s18Qewc2nPe+DPY5aK/lcDyjJt+zfT0Wd0T+8X7Dku9C3RTHie+fTQl+F
vgyd4vhFaKrj50Wxh3HfFOUJ4tdFeeNrj9/f+8rzqHs856npe5zinHqfFfW5
arrbLvIa8GFPP0842/A4as3zmn4siqEfhj4oinnLvB648l/of0VxAU+T45O/
Q38V5Q/in0X55E/v0SKP+7coDhH/Kcpn/3j8XN+f84Q3Pg59VJR/Pg19UhQr
P/L8JnuttI33fDmjMHu55z3R4z72/Y+JOR/tveB59jebiMeWxIJcxGxJ76dU
xJaS3lHEViVxnbh2SWwmrlUSkxiXKYlJxKQkJhHTJbGJSF3mu2vEXUpaT7eS
clgDZ+Eu66F955K8vkHE9Uvyd4eI7Us6I/tG3Keks0zfnUpi02pmNqxavaQc
LjCuXUkeWBcel3Teia1LOvfEZkm+ITZK4hDj2pbEIWKbkvhBXK8kbxGpCxfX
jLhGSe8u9okc7uZL2mu4STvzg82FktrgdylisSS2sW7WzDuhXFIbbNgh4vYl
caVrxB1L4sK2EbuEXoqft4q4ZejFouIWoReKipuHlhYVN2Me1fhMERpUFYc6
x7VtSuLRNn6PvVxUpO4lbeJZtY13XujS+HnVtsph34bR3pF3Yhu1rxTq3AhP
hi4MbeN4QahL6GK3wSOeIeuBR51KqgWfNiophws88x4leWCPiLuXdN6J3Us6
98TdSvINkXMGhxi3d0kcIu5VEj+Ie5bkLSJ14esmETcOPRc/b1pSDoO3K2mv
4S/tzA9O80xog/U8E54T7zb2g3PMZyb2lL2ER5WSnit8qpaUw4UjI/Yr6Z3U
N+KhJb1/iH1Keg8RDymJzcTeJXGIcUeUxCHi4SXxiHhYSewm9vVzOiN0uvf6
TOewb/+IvTxv2ueV5O8xodEleXpUaGRJLO8Zcb+Szix955bEowNKqgWfDiwp
T3ncifbGUPamJE8QB9sbxEEleZjI57AWjxtREpOIw0tiEnFYSZ4b5rrw9eCI
B5XEe/aJHAYfVdJew1/amR+chpe0wXoYCUMTr5s189kKj+JbeDA7NKskxswJ
nVYSC2aGZoTqoamhKaGa4+SSnjlxkp89cWJJTGLc9JKYRJxWEpOIp5TEplNc
l/dk3bV53zd8T1gzLjS2pPdozffkfcuzgqG8s3nOPD8+I8NgPst28DNkPbBp
vGux5gnOYQGfbReV5I1zQmeX5Ani/JK8QTyrJA8TOWdbehx/s7CF48KSmEQ8
tyQ2EReUxL6TQyeV5JmJzuHuqd7rotuZXxs/E9ra+ZnwnLLeD87xpSV9L+Rv
HfhOic/xPd8p8fbTZskNoetLYsyNzmHETc55h10buqakdxfx6pLYw7jrSnpH
ce2qknh0ncfg0cdCj5Z0vt4Jve05vhd61/v+vvMxvvaOn/+XoS9K8vQjoYdL
4ij3ubIkTvH3HPzdx3ZeMzn8eDD0QElcech5X9cgxyf3hZaU5A/ivSXxhnH3
l+Sn+90Pvt4WurUkpt4Surkkpt7s/YKRl3keePeN0Osl8fKK0OUlcfNy9zvc
e8PaunpN9BvlfXqrJJYQ3yzpXH7g/YIlr4ReLokFrzrnu9wLoaUlfYcjPl/S
Z17icyWxh3EvlcQe4oslMehFjyduGWdni9BWofNDi0LbhC4MXVDWZy7qPRvq
zN/cuI13LH9/c6Hvs7VrbO1x1DrQ+31PSZx6IvR4SWx7zeuBJZ+HPiuJBV84
xxsfhz4qyRPED0vyxofeo8ke92lJ7CF+UpK3PvH4E72vPCe4+FToyZK4+Ezo
6ZJY+aTn199rpa2f58v5Hu7nzLyP8ThqHeD1LS7p3X57SWcINt3hHH78Hvqt
JK784Rwu/BX6s6T31i+hn0t6XxF/Kok3jPu1JO786n74LxV73FKWn5OI6bI8
0CbiemWduw4R25f1TqPej17TBnFt/bLWRqQfnP469JX3omNZ/Ti71GhXFlOp
8UNJbPou9G1JbFg72tcqix+tysphBHMk59yvEXH1svxB5HdbeJ1xa5blDyL9
4Cu/A+NvwmAqfxf2d0lM/dt7ByO/9zxmei7flMTL5aFlJXFzmfvBM/aJvZvj
ddBvs8jPDS0oix+stW1Zz7hTxA3LOsvNiI2yWNK6rBx2rFNWfnf8XItYDd1V
UqyUdUYYVy/rrBDpN8PzZd+nee9hIp/v4BAM4l13p88TkXrlst573I/79HSk
Ha/jRby9v8/m3T7jrIPnSi1qlMpiWy5itix+sBeblsWVzcvK4QWcIMcbG0fc
qCwfENkjOMG4TcryEJF+sJi95FzCXc7mumVxl8jesc58WfOAs8wlU5aXihEL
Ze0HkX68t2jn3OMx1lH0mmHYeeYacWGoS+hi8wuW7MZ/ry6LEd3Lynk/7Rxx
p7LeUcSuZb2riDuWxR7G7VoWg4i7lMVrIuPx6KER+9iTo0IjvZ4xodFlsZ96
O3jfx7qNczE1NKUsRhwWsa/XOdq18NXw0LCyGAqXYTbM272s9cCPQyL2LosX
zIWcs35gxAPK8gRx/7K8QexVFicYd3BZXiceVJZXiIyH0XtF3LMsLm7rPYa1
20fcrixWco358X5jrbTBM9bEHsHsPcqaN4xmHLXwM3PpWZZX2b8TfT7Geb/g
x+DQoLJ4McQ5f/d5fOi4sv4+lDigrL8TJfYvizuMG1jWZygif8uwiiPj+S7K
5w7ec/xdKd8/+d7J77L5jsp30xVc79iyfq/9sttWc7+B/g7Ke5LfpQ70OGq1
eE0jymJZv4hHlMW/oV4P/JgcmlQWL6Y456yfFJpQlieI48vyxnjvUcXjJpbl
deLJZXnlZI9v5ftznuDrURGPLIu7x0Q8uizWco358d8lWCttvLeY7+Fl8XuY
5w2vGUct/q73eX825d2+d1nnhvc2Z4dnDz/mh84qixdnO+fdc3poXlnvKOLc
st5VxDllcYdxZ5bFNuIZZTHuDI/Hl9eEri7r3D0cesh7/Vjo0bLeb9Q7zet8
3G3wfVrolLJ8f13oWq+ZcY+U5ZX7Q/eVxbIZoell8e8crweWXBW6sixGXO0c
P1wWurSss0+8pCwPEGFWV4+7oixmEC8vy0+XezxchnO8w+DrqaGZZXF3dmhW
Wayd6fm181pp29VrYo/g9wLPu43HUYt3Uo+ynt+h3r8HfVae8H7BkntCi8ti
xL3O9wvdGbojtK/j7aF9HG8riz2Mu7ss3xPvKsv/d3l8a+8rz4P3JOOZE+/P
/Vy7h+vdWtZngZ6+P5+bYSSfTxt+nnCW9+6+nksfr+mBshh6Q+j6spi3xOuB
Jc+HniuLEUud44enQ0+VdfaJT5blgSe9RwM87tmymEF8piw/PePxh/j+nCe8
cVPoxrI8c0vo5rJYeaPnt7fXSttuni9nFGbf53nv6XHUgnMvlvU3W/DvJedw
82XnvGPeDr1VFneJb5bFo1fcD5+/6hyWfBz6qKx31DseDw9ecz/ebe+6DVZ9
GPqgLO/+Fvq1LL/+Evq5LL6/5zGw7H3n4z2O/CTfk1ow7I3Q62Ux9U3nw32N
eXCOvwt9W5YPiN+UxdTPQ5+VdSa+cA47Pw19UpYPvvd4PLPM+eme709l8Yn4
Y1kc+tXrmega7BFnuVoJNlfE8c98D9jzQ2h5WWz70flpvrbMzzUV41oqevZJ
xHRFz5xIG599/hf6tyzu/BH6vSw//+kcZqwefVeryOt/uY3vbP95PN/hVqgo
5/veihXlsIZxq4ZWCZ0QOj60Uui40ICKOPRP6O+yPm/Rxnh4xpiVK+Lc/68B
41Z2DXz5pZ/BeV4HteZ7HZwVzn6movXD0bUjrlURv1pVlMPLNSOuURHb2DPa
8EC2ovF4IldRjn/yFeWwhudTroi11GC/4DX3oe65Xh97h/8KFY2HZ6WIxYo4
Rw1ymMQ1+sGwr0NflcXib5xP8zXWz3ulffRtVxFr20ZsUxGDmhEbFXm7dUU5
/Ng44kYVvZc6VDSed9j6FeXwhfZOFfGJuGFF3K1HrFXkrV0j7lLx+6yie+C9
nSPuVBHLOkbcoCK2UYOcdwDXuB/PqW/EQyvi2XoR162Ia0Tq4skuETtXxAji
NhUxdfOIm1XEqS0qymHnphE3qcjT21Y0Hp9vV1EOL5hj14pYQ9yxIl6wJtYA
d6nBfsF79pX5wXHuyT1g3g4Rt6+IZdQghytc434Xcq6r4YuqfHV45IdV5HvW
3aeiZ9kj4t4VnWniXhVxa7eI3SriQveKcrx+YMQDKjoL+1Q0nvOxb0U5LKB9
/4oYROxlX+FFfMj7k+cJa2DP7hXdg/cxZ4fnDf96RtyvIq5Rg5zzyDXuh+dY
E88SVu0ZcY+KmEWkLh7oF/GIijhCZC/g4iERe1fEQfaDHLYdHPGgijx0ZEXj
8flRFeXwApb0r4g7xGMrYj17xhmFj9Rgv+A1+8r8YDD35B6w7JiIR1fEMmqQ
wxWucT8Y9gLnLjQo9FLoxdBAR9pgx4jQ8Ir4N8jtcGGwc7w9ITS+ImYMcRvs
OdHjYfRI5zB7lPO8x42ryE9nhs6oyE+nh+ZVxJ5hoaEVsW+0x8OvsaExFfFr
nPOMr432M74zdEdFfBzuWh19H+6Bz6eHplXEv0mhiT5Dk53DspNDJ1V0vqa4
DT/P8Hj8PdM5vjrV+fpex9yKWHiS96vs+1B3Ta+PvcOXszwels0JnVYRy+Y6
b+drsys616eEplZ0Pq4NXVPRebnOOSw5L7SwIhbOD51VEQvOdo6/LwtdWhEn
znHblqFFHr9V6HznW4cucL6dx10SeiW4sE0t2kMvxc9bRdyyJsacG1pQEe8u
9HhYdnHooopYdonzzr5GPxhxvdezuddBrU5eB+cGn9/gfrDwqtCVFbHvaufw
7IrQ5RVx8Rq34ecbPR5/3+QcX93sHC5wjm6viImXe7+6+j7U3dTrY+/w5S0e
D8tuC91aEctud763r9GPz6Nb+lnxbpvm58rnBTyHX2HJg6EHKmLhPaHFFbHg
Xuf4+6nQkxVxYonbYPNDHg/XHnYO5x5xfpTHPVGRl94LvVuRl94JvV0RY+4P
3VcR7x71eFj2eOixilj2hPMjfI1+sPbu0F0VMfEB1xrj+3AP2PFyRTyChc+F
nq2I7887h2fPhJ6uiP1L3YZ/XvF4/PSqczz/mvNRXsdbFTHxae9Xf9+Hugd7
fewdzHjd4+HXm6E3KuLXW85H+Br9eMfgRRjBufw19EtF5/Q357Djs9CnFfHv
g9D7FXHhQ+d4e1no+4qY8ZHbqPu5x3OfL5xzVr50Dju+C31b0buN/YaDvDMX
+xnAnk9CH1d01r7yePj1Tejrivj1rfPpvkY/ePG71zPJ66DWOK+DcwM7/nA/
+PdT6MeKmPuzc1j2Q2h5RTz+xW3450+Px09/OcfzfzuHHXwG+a8iFi73fs31
fah7stfH3sGMfzwefv0v9G9F/PrP+Xm+Rr/jovzzoedW0Hc/eAf/+K5IxKuw
tSXm0KoqlhDXroopxLWq4uKqEVepiherVZXDslRV4/F/PmKuKl4Qs1UxKBMx
qWrf94nYoypfbRBx/ap81SFi+6rYl66qLixjHDn8oh614BZ/O8I84NaaEdeo
io/Ml5yzv07E1lV5gNisiiPERlUsLEcsVXW2KlXl+HndqsbDBebVriq+ENtW
xR1im6q4yf2ZE5xgTayHM7RzxJ2qYmShqj2CGetVdQ9YRg1ymMpcilX5Z9eI
u1R1HonUgjHU61oVMzaPuFlV7CBuWhX/NozYsSoudKoqx9vbRuxS1WejLaoa
z2elLavKYQTtnatiDXEb5xeFLnROvKAq9mxU1T229rXzq+IX+VZV8Wsbt8NE
rnE/3h+slX2BW5tE3LgqfhGpy7nfLWK3qthBZF/g344Rd6iKuewHOSzbPuJ2
Vfmme1Xj8fbuVeUwgjO4d1WsIe5VFe/ZM84lLKQG+wWv2VfmBy+5J/eAX3tG
3KMqflGDHJZwjfvBrWpVZwtu1SPWqnrPcQbJ4emhEftUxQ/iIVVxhNi7Kobu
H7FXVYw4oKocfvWtajxcODJiv6r4QjyiKu4QD/eZOCN0elV+GhsaUxUvjqpq
fMbXRlfFvsOqugcsowZ54vZRfvZnhc6simEHVjU/+MjcD66KESeGRnA2qvps
xecqfDOkqr8Dw8/8LdjAqrjYP3RsVf7nPiOr4sJI12rlesOr8vxQ14KbB1U1
D1h4dFVrg6nMhTZYeUxVbTBjmMev7XrkMJX704+zv1LMd8WavHSm9xEenBaa
7Wc5NTTFz5g4uarnT5xUlf/Hh8ZVde4nOOcsnOLxsODU0MyqGEGcURWPiNOr
ev/VXJt32r5VsRWWzPJ43nn7VdUG86b5Hq1dg/z/vV+r6reBz8W8qnx5kudX
8dwnVuWBc0JnV+VR4vyqvDrf5wD2zQ3NqYqF85zjoQUeDwPgxKKqWEA8ryoG
ERdWxcKTPY+c94zzWvZcaGvrvWfN8O9c32Nz1yBv77nwnC4JrRLPcOXQxVVF
nis849muUBNnrw5dVRVriVdWxQLGMw42XOocz98cuqkqTl/j8XDqWud7uP3G
qrhAvMHP4KvQl1X59fHQY1Xx5TLfA889GnqkKpZdH7quKpbd4Lybr13rPXov
9G5VTLwidHlV3LrcdfHAktC9VfmEeE9VZ+j20G1VnZs7nMPIW0O3VOWh+zwe
f9/v/DDP8eGqeEF8qCr2POY17OUa7FdX7yvz6+F7cg/492Dogaq49pDzQ3yN
+3Fe7/T88M8Hofer4hbrfid0fGhp6PnQcY7PVcWCJ0NPVOX/p5zj+9dDr4VO
CL3g8fDoRefD3P5qVbwg8n2R73krVfV7Jb77rVxVDjue9j34XshnKNrgHRzk
++UQ1yAf5Gvcb5zXxLOEhc+GnqmKSc+4Lt74KPRhVV790HsBL98OvVUVp99x
DjffDL1RlX8+9nj89IlzGMF5/KIqHhE/r+rdwJ5xRke4Bvs1wPvK/Eb6ntwD
5n0W+rQqFn7ufJKvcT/+OwTfpbf2+21x6O6q3nPEu6pi0s+hn6piCfHHqhj3
Xejbqvz/vXM8/3for6oY/YvHw+xfnS9w+59V8Yj4R1V8/Sb0dVXeSoIH6ZoY
s8z3wGepuNZSE/N+D/1WFQv/cH6Wr/3q/dog+q5fE4d+CC2vikfLXRdPrhbt
q9bkeSKcgpH/hf5X1Wcr+EQOI/8N/VOVp1evaTxeWqOmHBYwx1Y1MYi4dk28
YE2sYaFrsF9zva/Mb5HvyT3g31rRd82auEYNcrzLNe7H+/4ePz+8tGFc61iT
71l3h5qeZTVipSbfliOWauJiNmKmJi7kasrx+noR163pLNRqGs896jXlsID2
dWpiELF1TZ9h4TTv7el+nnAW9uRrusdMnx2eN/xrxrVGTVyjBjlr4hr34+yz
Jp4lrCpGLNTELCJ18eRGETvV5HkiewEX20dsVxMH2Q9y2NY2YpuaPL1xTePx
0iY15bCA3z9tURODiJvX9A5hzzij8JEa7Be8Zl+ZHwzmntwD/m0WcdOauEYN
crzLNe43sB73C70QGhx6OfRSaJAjbfCvS/TtXJP/t60px9N7RNy9JjZsV1Mb
PNgh4vY1cahrxB1r4hGRNpi9U01tMG8X3sM1sWzXmnLY1q2mHGbtVlMOs7rX
lMMU7k8ON6lBXXjE/ZkT/jwsYt+aeLRnTfOGeT0i7l3TWdmnphxu7VVTP87R
vjW1cXZ6RtyvJi7sH7FXTX4+oKYcfx9YU46vDqoph6nch7p47uCa2mAG8zq0
Js71rqkNZvWJeEhNTKGdHK5xjX6w5/Ca1saZPSU01edjdGhUTT4/MmK/mrw7
NDSkJgYcVVMbvj8m4tE1sebYmnJ4ybgjauJQ/5ra+Nw0wDmfpY5zDr9OCB1f
E88GOocp1OZ+MGuQ29bwXAbX9LnseNda3dfoB9/ZY/YdZjMX1gzbRoSG18S1
kaETa2IV14bVxLxRbsM3Y7wvsGas8xaPoxaMGOc2vD3eOV6f4ByfnRw6qSau
TQpNrImPw7y/MGuy2+p+JlNq8udJrlXzNfrBI87Uvt6XF0Mv1MSjaX6uMG9m
aEZNnj/VOT5eEDqnJh7MchsMOC00uyb2zA3NqYnN85zDtdOdw7kznOO3a0PX
1MSyM93W3jWoC+fOchvMOjs0vyamnON8I1+jH169PnRdTWya7bnCo3O9Bpi3
KHReTd8Vz3cOtxa6H98jL3AbPLoodGFN3LkkdHFNnr/UOQy4zDncudz5Fr4P
dWHSFW7r5jmyfth0pdvgytWhq2pi0zXOd/I1+p3g57a0pvfJdD8/PPR46LGa
WHVj6IaaGHSTczx/X2hJTdy52W0w49bQLTUx6PbQbTWdlTucc3budI5P7nLO
u3GG54GH7nZbD9egLsxa7DY4dW/onprYtMT5Ab5GP7z3aOiRmlh2i+cKj+73
GmDVQ6EHa2Lbw87h1gPud5hr0HaE94a68OgJ7xe8eNI5/HjKOWx62nkf34e6
sOkZt3X3HnPm4NSzboMvz4eeq4k3S50P8DX6wZ2XavLhyvH+Oz50XF3Xtoq4
ZV0+fzX0Sk3+/yT0cU0MeM1tMOWN0Os1MeZN50M87uWa2PSW22DV287h1DvO
4dF7oXdr4tH7zoe7NveDTR+4DcZ8FPqwJsa961oTfI1++PbX0C81+fM35zDp
89BnNXHny9AXNXGKa5/WdKa/chvn65vQ1zXx6FvnUz2OWvDoO7fh+e+dw4Bl
zuHKD6HlNbHpR+eTfE/2F0795LYzPPefa+LRctc63dfoN93zYq5w6HevkzOR
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
hRyWcY1++HJcaGxDLGNezBUeHdPQGmDVgFD/hj4rHOccbh3bUL+VvU+0waaB
3jsYNLghfuHzIc7x/VDncGSY8xV8H+rCmOFuy3qOrB9mnRga0RCnRoVGNsSm
0c5TvkY/Pt+t6ufJ+6RXQ88Pv80PndUQqyaExjfEoJOc4/nZoVkNcedkt8GM
SaGJDTFoSmiyz8dU55yXU5zDgmnOebdxXpgHnJjutqprUBdmzXAbnDo1NLMh
Ns1yvq6v0Y/zfWbojIZYNtFzhUeneQ2wal5obkNcO9053Jrjfh1dg7ZO3hvq
wqCzvV/4/Bzn+H6BczhyrvMOvg91YcxCt+W9x5w5mHWe2+DU+aFFDbHpAudb
+hr9Lo/34+rxblytrf5tQv732/w7JRfE9RXi2n9t5OHbQ7c15IkHQvc35KsH
neOrh5zjq4ed4/lbQ7c05I3HQo82xJQruH9D/LoqdGVDzLraOYy8NHRJQ558
xHXh4GVu28E1yLu6BnX38j1vboiF17hub8/9voY8uSR0r5/9d6FvQ/eEGs04
d021NZvK6du6qZzx6zSVc1a+CX0depm9jmtbNXUW7w7d1RC/qLu4IWbd6xxG
3uH9Pdjz4j5w8E639XQN8v1dg7o9/Exu9ZrWbWpOsP5ar3lP78FNDXn47dBb
DXnis9CnDfnqc+f46gvn+OpL53j+zdAbDfHuidDjDTHlmdDTDfHrudCzDTHr
eecw8kmPwZNfuS4cfMptx7gGeX/XoO4I3/P1ht5j13ltkzz3Txry5Mehjxpi
9KM+K7znrvcY3nM3OOc9d6PzPbw35P28Js7odD9P5oqv3g+91xC/Pgx90BCz
PnIOI9/x/k70vJgTbH3XbWNdg3y8a1B3pJ8J+wvvl3rveM6cwVpTz78asdKU
h/8L/a8hn6wV19Zs6nyv3VTOs2/VVM5+tTSV4/l/Q/94/UlcSzfFlB9Cyxvi
10+hHxti1s/OYeT3DfmEPU01VRcOLnPbaa5BPtc1qLvQ9/y7IRb+4rr4lbmv
0ZSPV4+4WmhI6JXQy6EureN7deii0LahS5xvF7rU+fahy5wP9riXQoMcX2zq
3x1cOeJKTbFj1YirNMUO7kkOI1doan/hCPNiTvz7hSs21ca/XUgNcthEDeou
8jNhf/Enz41nBut/9ZrP9R781RDL2kV726Z8smnETZp69ps1lXMWNm8qfyF+
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
V9ZN1TYcYUx5qlyiL/QP1nAtS8WXNFX/YDcxmF/YQ/l/ZcPChqZiNGNtmYrj
q6SaR/K/fehmqfK+XeimqfbihqEbpOJs59BtU7F1+9DtUnGEetSBF9TbJBWj
uXebVLzk2sapOMq1rVNxpGPoFqlydffQbqlYw7UOqfiyear+wVxibJSKPZRT
xrnEmBgPed89VSzOkz1D90iV511Cd0mVizuH7pTqWYd12ytVzjFW9i75yf5l
PWAH9ahDDlNvx1TnDXPAvJD3XNsh1ZlGPNqGJYxpt1RnGn2hf/CFa11TcWfX
VP2DHcRgfmES5bt6LYd7LVnbC+2zF0bYJ3d7hh7gNR4Q1j8VT3uHHp2KfceE
9UmVG33DTkvFhYNCD0zFDpRYsIB4+6diNDGOSsWMXqGHpmIHekiqvOrnuDCG
awenYuh+qXIDphIPHwZRTtvwldhHpsrR0x2LPXpm2BlhS4edEHZ8qu/amvna
grCOWeybsFfj85ahncKuyvSO2jQXA04KOzFVvRMdaynHOy6sieeG+Vrec3Nq
Kk6hp6RizBnu37K+dnKqs+VYz29Tx8Nv7nLa5txgfEekOjfQw1PxGz0sVR4P
CRucihPnhp2TilVnh52VigWjwi5KxYuLw0anyv/BrrO66w1KxTXuHZmKr1wb
mIoxI72HYBWcuCBVvk0Jm5yKX1w7PxWrznP/WjsGfVrb5ZSRk1NdnxydZp+c
nm6fPJ4YNiFVzo0LuyRVbnNtfOr3jVRsJbf7ex9wzjFP7L9Wng/2Os9WcGWr
VDlMvLGp8hgdk4o3l7sfm3l8k1LxdbTntJ2vXZaKW5e6r+s6BnO9qcspuzrT
9xTsM56haJ/zgWelTm6TfL4+7LpU+X2D/e187VrvgyfCHk/FiJlhd6biC+XX
pOIa1+5IxVeu/S8VU9GrU3Hl9rDbUrHnDvvwaHbYrFQ8uzlsRiqe3RR2YyqG
3ej+7exyyro63q2pcvXhsIdS5fcjYXNT5fZ9Yfemyu377ffwtXtSrQ99vCoV
v74K+9JrTPndqRg5y+Pf29fuSsXUuzwGePOo22YfPGb/YPeF/h3oPj6YimEP
hM1JxZ457l9Pl1NGDnwT9nUq5jLWW1LttcfdBrn9XNizqXJ7vv0+vvZMqvx+
MmxeKn69EfZ6KqZQ/nQqPnLttVRM5dpTqfj3lOvDG1j2SioOvWYf9rwV9mYq
hr0U9mIqhr0Q9nwq9jzv/p3gcsq6eEysPTn8SdjHqXL3s7BPU+Xz+2Hvpcrv
D+yf5WvvpjqHWLcvUjGMsbJ3B7j8nVR8fNPj7+9rb6fK4bc9Brjyudse6nj4
57kv9G+w+/hRKp4tDPswFcM+dP/OdflCr2sjcnKdTOucZPJZ4zSTTx7/FPZj
qrz/Iex7r/kqUd4iE7P+Cfs7FS+axLV/U+X/j64zyvW+S8U77v0rFWu59m0q
xnBtcSq2/R72W6ocWz5iLpeJd1z7NRWrfnb/RjoG+xKe/eKySY63KFW+rpAp
Fvm6UuiKmXjQDDZlyrelQpuGvZzqnOyQiVWU8SwLq3iehY/kKPWoQxn1lszE
7n89L9zLtSUy7aeVM7UN1xjTspnYQV/oH5zjWvNM3FomU/9ojxjML5yjnLLL
PL4/U3EW/SMVi//wPMKCNnHv6pnYsEYmH35wbbVM7GsV2jITG8rQIhNfKG+d
iRdcyzPxlWurZmInSn04kWXaQ3CFe/Efjc91aJWJd+y7tTPxbK3QNTMxDKV/
sJByysjPdqGbZsrXzTL55Gr7TD4s2CB0/Uxs2DCTT76tF7pupvyjHB9OM1b2
MbnOXmZteEaEbTCX9/wtveYwlL4zLzCubabxwIzNM/UDxrBf8GEhbXIf7KPv
m2Ri28ahG2XiGUpf4SLllHXyvwlcznf9rL+/47+WfZHru3/W+bDwe2ViQLfQ
3TJxoXvo7plyo2foAZny4cBMPrzZNnSbTIzZLrRzJtaglMEjyrfOxLMdQ3fI
xC10+0x5eHDoQZm4xTViwWzqbZWJTfSrayY2c43nTli5U6a45PQhmWLBDPq7
f9hJYS8zr5l4NCxsqPfThWHDw3qwV9hHYfuyt+yzhnuH7pWJDdy3TyZGoJSx
xpTvmYlTtLlfJlbt53jkz6GZ+ger9nWbcJ16e2TiMvPNGsBmrnV3rPvdJ9jM
HOyaib9dQnfJxKcjQg/PlP99w07LxIjTw/plyofBYedmyo8h9mFM79CjM7Hh
mLA+mRiBUgaDKD8qE6eODzsuE6vQYzPl2HmOu6SvEQtOU+/ITNykX6dm4jTX
6DfnCWNiPOTr+Y7Vxv09J9O5wrpdkIlVjJW9C5/Yv8wv59POmfbEh6nmBp8c
HRDWPxNjzg47KxNrznLZKi4/MxPPaHNQJm6hAzPx5gL3r7WvEauF652RicH9
vAYr+xprwL6Y47Vkbz5gn33Evrs7E4Mmh03KlP9Tw6ZkyofrMuUu+XG9fXLo
BvuM9eawGZkYMyrsokzsuDhsdCbWjHYZ/BobNiYTY8b4PnLpRseFuyMy5Uk7
9+uyTPwi9shMLB/p++DiJY7LGtzkWLDgmkwc4u9ZeQ/kvY2/c0V5n+PvU0/w
d2H8veqJ9pfxd2D4/P0r76DU553zirDLM/GA988rM3HhSpdt4zZ5b9jayn2d
PZf0CdZO81y393yzBh0de3qmM3y67+M8GOdxbur5uDQTd9GJmfbyrWG3ZOLa
w2EPZcr/R8LmZsqN58KezZQr8+3DgDvD7sjEgFlhMzOxYKbLurn89kwMYu/c
lYlD6OxMefm84+7pa8TazfVuy8TxBzPtxa6+Rr/J7xdc/4SwF+33cX+fyXQ2
w0542sVjZf+Rl0+EPZ4p92Z4H3BGTQgbn+l8mmh/Q19jTpd2e7QPG54Mm5cp
z4n3WCYe0f7TmZiEPpWJI/Pc9lG+Rv1ervdoprNhrtfjUF9jPdgHnIeckTxP
wadTMj0fnZzpDCGn3wh73f3+Pey3TLz7JOzjTFz4LOzTTLn0Y9gPmRjwVtib
mVjwpmP1dbzXMrGYGB9lYtJ7Ye9mYhP6TqYc/clx+/va2+7vq2GvZOLra/bP
dDltn+vYCzPl58+Oxbz/GvaL1/OrsC89fuItyHT2rBNzs3YuZiWhjbBv4vM+
oXvnyn/8rzPx4mvHGuZ4X2Ri+qeer9Gem+8z8Qj9LlNe/eL+XeRr32bi7uee
36GOhz/S5d9Ye+Tq0zke64eZOP1B2PuZ8vvvsL8y5eufYX9kYuhyUW/ZXMxa
IXT5XDmzeuhqufL/37B/MvHiH8ea7HiLM3GZGDxjwSG+D1syF4/QJXLlYptc
cWEM15rkYski92mS4+HDHsppe5DHxHjI9TVyxeIMWSt0zVy52CJ05VzPMawb
ZRM9VvYuOfeb1/5szw17Dga0jHtXycUClFjkNvFWynU2MDfMF0xiblrnYhO6
ai4m0Rf6B6u41ioXC1bMNb+wgXj4MIly2mbN9821luyL/XL57Jf9c/mMf+fQ
nXIxrl3oprk41T50s1z7vnPotrnyYLtcPgwoQ4tcDKhDq1wsQCmDEZTnuZiy
Xui6uTiEts2Vf9vnigtjuEYsWE+9LBfT6dcmuTib5sofWLV+rrjk9w65YsEG
+rtNru8jOOc4i052LvIse2Km51m43Mw+3ORd7iT73NsxYmyRiwVbhnbKldMo
ZcSivEMuHtHm1rmYhG6Va0/smKt/cIVrxKJ96m2e65xgvlkD+sQ11oCzgnFv
nIvZ6Ea5mI1umIsH3UJ3y5WvXUJ3ycWmnqEH5OLBQaEHOgd6hx6dK/+7h+6e
iwsoseAL8brmYiUx2DcwCVbtlYtN6J7OvT654sIqru2Ri5e75uoTbCYePuyh
nLbJ3WNcn/w+1j55f5x9cq5X6KG5nv9gJzwltw8PPSxXTjNu9jTn1ga59gfn
GPOET46y31kP3u9P8b6AF8SgDbjJPDF38Il5OioXp9Ajc+U/fTkkF7e4dkQu
Fhyca65hA+X4cIhy+trR75TTw7awTgvrYJ1aiQeDwgbm4kf/sDNzcQQ9IxdL
0NNzMQDtl4sf1Ds7FzPQs3KxAR2QixEDHJe1uSXsZq/Nrfbh78m5/r5tF5fP
8P6bEDbeczou7JJcZ8Y9YXd7Dbj3plwsP8Wx4N2p9td3vbG5mDEq7KJc7EBH
5uIHOiIXD9ALc+U89cbkYgl6cS5+oKNzcWS048LKvmGn5WJlP/ucH+d4rpd3
Of3jPDjXZTB4SNjgXPtovMfMeXCey+DO9WHX5dpbN4bdkItD14T9Lxczrgi7
PBc70Om5+IFOy8UDdGoullDv6lwsQa/KxQ/0ylwcudJxmxXBrbAT+D+7YSfZ
hx+Xhk0MW9rlxxeKh79UoRhN+S2MsI5hlxf6P747eQ0ZDwy+zLHg1CT7e3vN
78rFjzvD7sjFEfT2XCxBb8vFAJR9tpfrzc7FDHRWLjagM3MxYqbjwsQpYZNz
MXKqfc6kaz3Xm7mc/m3nNaFsB68J67Sx54N9vJTn47hC5/z5Xlf4coF9GPB0
2FO5OPF42GO5eIE+mosH6CO58h6dm4sZ1HsyFyfQebl4gD6RiwtPOC79+iPs
d8/1n/bh75yw+91vyn/Lld/vh72XK6ffDXsn13l/X9i9ufYs9/6ai+UPOBaM
e9B+f9d7O1duvB72Wq6cQF/NlRvoK7lyGF2Qi0nUeysXk9A3czEJfSNXzr3h
uPDx4bCHcvFxrn3Oj2c81we6nP5xNjzrMs6D+WHP5eLZex4zz0nkKHkLD34K
+zEXY34J+zkXC74P+y5seNhXYV+GDQ37Iuxzrzn6mdce/TQXk6j3bS4mod/k
YhL6dS42fe24PKMMc+zMZbQJaz4M+yDXOTbUbfbwWsHQ/bzOrB+5zh4lP8d5
DRkPbFroWIz5I/uwgDxeolBu/B32V66cQBfnyg10Ua4cRtlnMIl6TQoxCf03
F5PQf3Ll3D+OC/s+Cfs4V858ah/u/uC5Huxy+nex14SysV4T1mmg54N9zJn/
vNeY9vuE9Tabjg07phALWoeuWuisahG6cqEzCl2p0PmDrliIYegKhZhEvVaF
mIS2LMQkdJVCbEKJS792hoWF5nqXQj6sgbNwl35TvmOh/N4gdP1COb1e6LqF
9sXeoXsV2rPcu0MhNjU3s2HVsoV8WEC9toVyowjNC+UEmhXKDTQtlMNoUohJ
1KsLMQmtCjEJLQvlHEpcuLh86HKFWM884cPd1QrNNdyknP7B5tULlcHvNULb
FOIZ42bMnAlrFiqDB51Dty3EmO1DtyvEgq1Dtwp7OT5vEdoh7KVcunnYi7m0
fdgLuXSzQkyi3paFmIR2KsSkTj7HYBNK3GZ1nIdhJ9Q63/jNJ37DAtZsFP6G
YUu7/Piwk6Ls5bCXwk60vhh2ctgCl8Ed1pDxwKaNC8WCVZsU8mEBa75nodzY
LbRroZxAdy2UG2iXQjmMss9gE/X2KMSk7qG7F2IS2q1QzqHEJWfahW5aKIeY
J3y4u02huYablNM/2MyaUAa/WRPWifOK+WAfwx3ORnIPNq1VaF1h1dqFfFhw
VOiRhc6qXqGHFjqj0EMKnT/owYUYhh5UiEnUO6IQk9DDCzEJPawQm9BeXqfx
YeM81xPsw5r9Qvd1vym/pFB+nxU2oFBO9w87sxC/e4TuU2jPcu/YQmzav1As
WHVAIb+F651RKDdOCzu1UE6gpxTKDfTkQjmM8hy2suudXohJaL9CTEL7Fsq5
vo4LFw8M7VmI9cwTPtw9utBcw03K6R9shpGUwW8YCTdbetyMmWcrcpS8hQej
w0YVYsyYsIsLsWBk2IiwRtjQsAvC1rGeX2jN0fO89uiQQkyi3oWFmIQOL8Qk
dFghNg1zXM63hmPzLJK4TVgzMOzsQuffOm6TM5a1gqGcw6wz68czMgzmWXY9
ryHjgU2DHIsxn2MfFvBsO61QbkwKu6xQTqCXFsoNdGKhHEbZZx1cb2ohJqFT
CjEJnVwo5yY7LuwbHHZuoZwZYh/uXuS5buNy+ld5TShr6zVhnVb1fLCP+f9F
L/iM5D2ZfIY3/N+jF13G+TQj7KZC5xJ6Y6EzB72hELfQ6wtx4eqwqwpx5Paw
2wrxCb21EJ/QWwrxCb3Z8/tB2Pvu33th7xZiyv8clzX/MuyLQnn8eNhjhRh3
s/tK3s8Le8Jjfd+xYNsd7hN8ui7s2kL58FDYg4XyAH2gUD6gcwrlLXp/IQbf
FTa7EEdo/9FCfEIfKcQndG4hPqEPF+L79W67s9vnt5G2tTLOw913xran25lV
KHcfdl9h9p0eD/v4bvdpgOfsnUK5ir5d6P3tpbAXC723oS8Uel9Bny/EZnR+
IS48FfZkIY68FvZqIT6hrxTiE7qgEJ/Ql8O2jvPsan4HMWzLsCvDrijFlKcd
lxiUdSpVr2PoFqUY97L7SmzKKYNzb4a9UYhtr7tP8Om5sGcL5cPHYR8VygN0
YaF8QD8slLco++xMz81bhTjCnvq8EJ/QzwrxCf20EJ/QTwqdYfPddh+3/0wh
dj7jcR7p+WMvnuF2GMMQx6Cv/TwmxrOV54z52sNrPrMQn+4Lu7fQ+fRb2K+F
ziX0l0JnDvpzIW6hPxXiwrdh3xTiyOKwRYX4hP5ZiE/oH4X4hP7uMWwUfdmw
1Dg2CF2/FFO+c1xyumVcW6VUHrcIXbkU4353X8l1yilj7YlHLNj2l/sEn34M
+6FQHhNjpVK8WTF0hVL/JnSi+UTeNC/1m2LkDL8rtnSp/KcedeAT9ZYvlW/L
lqoDq7i2XCm+/+S2R7v97wux83uPEx7/7b7CbH6r7J9CeUwM4k71Ne7jbLmn
UE6y9szZeqVyGl23FEcaoeuUWlt07VJrjK5VKga6Zqk8XzW0VSkGFKF5KRag
WSluoWkpbqFJqeeP+72Hengf3eO9tVqUty51rn5ViK0jvF++LsQ8YtDXC32N
++BcHdeqUmwrS/UJBq0R2qZUfrQL3bRUnqCblMoVdONSuYKyz+Adc9O2FAPg
QYdSLEA3L8UttH0pbqGblZpr5om24SXtr14qh1DGCfeZP/YrzKYdxgDziEFf
YTZjKs0muHW5254aNsU84tr0Unm8W2jXUkzZOXSnUmcOumOpswfdoRSb0e1L
5T/1di3FKrRLKVahu5RiFbqz1/6ssAFes4FhZ5diB8zdymOjvH+p/D489LBS
Od0r9FDviWFhQ0vlJfeeWYpD25SKBae2LeWTx9Q7pFSu9Aw9oFTOoPuXyht0
v1J5g+5bKv+pd3ApVqEHlWIVemApVqHEhcfbhXYudXYxT/hwt1upuYajlNM/
2Lx7qTL4vUdo91I8Y9yMmT29Z6kyuNAvrG8pxpwRdnqpPD417JRSHDkh7Piw
pazHhTW1Hlvqt37RY0rlP/V4n2tu5Z1vGSvvfM2sxOV7cN5ReTflu+wF9uHL
kVF+RCnOveTnMN5Hryz0G8O8p15lv5Ov8Q7awmvIeGDQUaViwaSjS/kNr/kF
pfJkcNi5pXIFPadUrqCDSuXMIO+zdVzv/FJ8Qs8rxSd0SKn8G+K4vA/3Cetd
6v34GPtw9zTPNRylnP6t4DWhbCWvCevE2cB8sI/hzl6l1pLzmXVm7WHS3qXK
OFvGh40rdcagl5RiMDq2FIPRMaWYNTJsRKn8nxR2WSlWoZeWYhU6sRSr0Ame
3yfD5rl/T4Q9XoodFzkuPL4wbHipPL45bEYp3k1wX8n7W8Nu8drPcyyYNNl9
glUXh40ulQ/XhV1bKg/Qa0rlA/q/UnmL8hwGR2HVtFIcof2bSvEJvbEUn9Ab
SvEJvb4Uj8e47drtjyrFyFEeZxf3nbF1cDuwcnvHoK9weorHc5jn6bFSPJgb
9nCpXOXao6VY8GDYA2E9wu4NuydsH+vdpdYcvctrj84uxSTqzSnFJPT+UkxC
7yvFpvscl+eYHo7Neb+v24Q1t4fdVuo83Mdtpl5PGMrZO8JrzPMoDOa5Fh7d
4fqw7SGPh/16p8tgAd8DvVAqN54Ne6YUb7j2fKn84NrTpXL4qVJ77lDP0yOl
8udply3l75yOq8UqYswvlX/PuQ04OCtsZqlcmm3/WN/Lfd1dTl8P8vowhkPc
JmvW1XPD3m0S7fUJ6x02xN+PLRO2ZNixYcfUYtNbYW+Wyu03wl4vlU9/hP1e
iiWfhn1Sijefh31Wigdvug778aewH0sxgxivlWIH+mqpc/H9sPdKnYfvhr1T
6qxD3y7Fy7fdp1Nd75VSDKP9j0tx4me3Bz9+sQ9XfrVPnn/LHvE++Drsq7Bm
VcxD2AmV9l0jdJ1KezMNTSrtnW9cZ7jrfVmKr595Lob52helePGb277Yc/BD
KebS349K5SjXvi+Vn9+5f0Mdgzkd5fL/ynpEX/apdA4QY2Ep9n8Y9kGpfP4n
7O9SXFwU9mcpTiwf9ZarxJIVQ1eotKfahK5eiT1NQv8tlaNrVCqDE/86Lpwg
xrKV3n+ahi5Z6fkLXaLSMxdKLJi42P2AKX/Zn+I+4sOGNSu1BzPWquST82tX
8tm7q4S2qMQD1oeySz0+9iWc/t3zPtDzwd4it1vFvS0r5QFKLFhIvJUrMZX5
YI7IMeZjtUq5hbaudN4u9FyTb1xbtRKnV6o0p7CVePiwg3La5n1xqUrzxVru
W2ktWf/9Q/erlLtFaF4pd6vQshI/6ko++cw17qMfu4TuXIkFm4ZuUokN7Sr5
sIB4WSVmt60UC1ZtHLpRJdZQD58zbf3Q9Sqdbei6lc4BlPrwkXjkBvxrH7pZ
pfzsXOn3csjX7Sr5fG++hf/egbzl7+z5mwjymN/iwef79Y7++wie0biPa3CR
2IynqXkJp+Dx5pXahiX8jg+xYMb2ldqGKTuG7lCJu4x1w0p7YqdKZXCK3/rh
t3/gE0osGMY4KCP/WB/WDHYTY4NK+4u5Jxa52j1090q5u0clHzZwrVulfN01
tEslNh0Y2rMSOyjfrRIvDg49qBLLKD+gEjO6VqoPS7jGvoFJ8GDvSmxC96rE
J3TPSkxC6RO8pB1ikZ99wnpXytdj7JPHx9onbw8PPaxS3h5RySfnuNar0rkN
I+Em+cH42JfkJOWHVuIvY2LM5CjXDqmUqyhjJjeOc9vkyvH2OUeZb/YlHKK/
R1fix1GhR1biCEr/4BTllPFMA6uaV3r+Qpep9PyFwn64Mzjs3EqsOS9sSKU8
GR02qtK+v9g+eTDGPnthfNi4Srky1mWwpG/YaZW40M8+bDgj7PRK/Tol7ORK
TD3Vfhv35ZxKPDrNZSu5Xj/PxSVur3IfL6rEBnRkpf16X9i93itzwu4Pu5C9
wh4JG8Eesk+db+03d79OqrS2w8KGVsp76g+vlP/DXVa4PvFyK/fB1zM9Znh9
vud3Tc8x895w7Asqcf0C38c4vnOf4HV/x1rdczOoUg7fGHZDpf09K2xmpf0+
2z55cJd98uNu+zDiurBrK+XQPS6DgxPDJlRiDH+fNaUSIy91GWy9zH5nx+A3
wuDUJJe1d73JlRg22WXd3cc7K7EBvaMSA9DbK+33cV5jzo+zwgZUOk/Ots/5
M9D+ap4P/I3cd/ZlD68/YyMvbwm7uVL+3xZ2ayUe3G4flt3kOW3pNpl3ODfD
Zbs4Bv6ujkHcHbwO11faj997/dgj7LUvK+0V9Av3+/2w9yqx5rmwZyvl/PNh
8yvt9zfD3qi0h96yD0seDnuo0p5422Ww5JGwuZVYQ/mDlTj0WNijldjzqO+D
ow9Uyo2evhe/j/vyTCU2zXV7zMU7bo+5edd+P/fx9Uq/JdfUz9Qwhhzi+XLp
Ss+YcI33PXw4x/tfM5dz78thL1ViwSthCyrl4gKXnejyFysxhTZfq8QJ9NVK
bH7cYz7V115x+9R7oRJn53vej/c15h2+P+H6vT0HT1diKvpUJfb9GPZDJQb9
HPZTpVz5J+zvSn/b+K99/uaRdw989umHYR9UYsAnYR9XyvnPwj6txIhPXQYb
2C+fV2LD576Pv6lcolZceLDQcUe7X+y/wY79USWmfuT7+I0/3sFYJ/7PH2tF
LHL0r7DFlXKJPrJHybf3vN6cMfM8R5w5T9o/ynODz/MCrIW/5OLvYb9V4sWf
YX9U4sgfLpvkNhdVYsci3zfFc0mfYMEvnusxnm/WYLxj/1qJGb/6Pn6vkL+B
4G8c+FsGnr/g2bnh315r38CbVeNzq1ocal3Lh0+r1fLJ71VCW9TKc3TlWsyg
Xsta7EC5j7lYP3S9WvOxYegGtXJmu9DOteZ0p9Ada7GEeCvVWr9dQneuNfco
93E+7R26V63161LrPtaEGDvU4hExVqzF4+Z+tyUH2obWtfb0urV81o8+4pPf
ZWhRK8/RvBYnqFfV4gXKfZwTa4auUetcaRO6eq3zBmXuJoYNChtY62ygL6wH
bF0hdPlavESXq7VvmCfmDs4yDu5jzzG+7Wvt311rjZ993bWWT35vGdqJXKj1
GRbc4bVmza8JGxy2dS2WdAzdohYXqIc/2f2+mP1Qq/7YWr+DyT5ayvGJuVVY
X9aYek3EJuJ1CLuffUAfW8b8hz7NXPrep33/f/6UJuIZ9TavxSe0fS32bBy6
Ua287x66ey0e7FHLhwVc61brbNmzVhn84NputTiCMl+cRewj7uN8YJ2zWhxn
jtmjcI422bucA5vU6gdnz7ah29Q6b9jL+DB001r3wVH6vlktvrarVQZbuYbP
OUObaa2zea1a+4mzeu1aPjl/ZOgRtRhwVC0fZvQKPbQWO9BDajEAPbgWS6h3
eC2WoIfVYgpK/eFh/cKOjvm/NPS8Wt8JnRx2ftiSTcQS4h0UdmrYBYyriZ7J
esTnfRzjdOasieoTh++V4O9+ofvW4vH+tXzOg6NrjWeY91D7JtoLfb0f5obe
F3aa26TtdnG9TxP175jQ8e4n/mW1/FPCrvWeZc/PDJseNrQW3/l+i++/4OYB
tfoETw8M7UmcJmprUhMxlHFT9lQTjZMxcobx/RljgMHUI9Yz9L1FzFtbsYe5
IOdvCrvRfSCv4MFyVvjA8xIsJq/I2VtDzw4b3So4H3YW42klVgz0/Qtb6Z6P
WukZizlmPXh2Z01gJc+48Ak2cQ6tU2tvXVErZsdWeu5J4nOj1nmFch99GVOL
IzwPsU+577Za/RsQNiPsDPoQOf5h2Jnx+YPQu3zfRW5nlNu6JfTmsJH/jc/9
nxQ6wfuxr/fE5k0U+0Lui5iX1GIXeUc7I8K2aKVnLtaZ+RvjfsOlq3wf95Cz
1OXeBzz+/u7LDH++uKXao62HXZ8xPhc2Nda0aazpnPj8ZC22EYNYnVppr95Q
i2k3eK3Zz3N8T3+Pj3H2bqJx302brcRamLus9+/UWnuaz+zpJeL+UXHfg94P
7M1p3p/k7JSwkzw3zNHWnvt7vE58vsttvRHac5U4U9oqr+5znG9D+6wazInr
78Xn5jEHLdqq/t1eq0Vx372hi5vo2j2OeWXoLI+RtmZ73a/25wFu5163xfzN
8Z5hDq903TM95x1a6Zwih1nX6/x5ayv+WI/3Gq/pVM8Xc8U8X16LR329LqzF
dM8b7PpfrXlf1vdO8LqQn9N9z9XuD/uHOWaux9XKX+qSh2d5H7AHprku8zrS
4+ro+bnCn4lxfS0+/jdHW3gP0KdBboP7hni813js1/v6Se7X1Z7b4e5/P++1
Oe7P36ELWsezS1v1a6b79kStc5n5R5/054dq7fv/1os9/d9+nuu6lD/kNZrn
WJzvV7mM6y8wp5Evzdoqn8ivhS2VEzd5LWiDvcV+ns+6xP1LtdW63lH/v+dT
Pm9lvdOfH3QfqHuP9xz7cLY/E5vrd7uNl8MWRfzmEf+V+Lw4Pi8bn59nveLz
0vH5L+6Luaqc4494TnhO4UziOeVxzwtzAjdmeZ1v9Nyyd35jz0WcrK2u3eh5
+4P1iet5W803c3e/1wndMvSf0FfinrZxz7/x+dX4vG58XhSfT4/PRVvNJX3r
73m92XM7y5/7u4/0lXwb01JrBNsW+3nrryZ6Hnv8/xvLLY7DeB/z9Q5mzuah
P4euFn1I2iou9xCPs5a84/x9ldgxn8u1VR9neA7/D3seTDE=
            "]], 
           PolygonBox[CompressedData["
1:eJwlkklOlUEUhUsERBB4wPtBjBpewFvKmJUwUGcqUYc0yl7s9yAD0IEuwI5e
7GID9hppNQKC+p2cwUnOV3Wr6jZVGRjqH6xKKfWhanQ4p3SxnNIF9CNYg6+X
UrqBnsABzxYpzaAdeA0V+HvEr+BX0X18B2tdxP6ChwvHrOMrrI0UXtPed3Se
+Eb0Ff8NNZWdg3JZDueiO4/C3egyZy+hTfZ+onb8KOph7zl8uyWlk6gBfgrv
kvtpeAFfx9o2/AfNwVXwVfw19Ajem+1V82O4Jrv2m2gS3gNfKfnMA7ge3in5
Db31MHy3YhQ7Bd8qOWYaP4tOkcsWvC9b8sppJlyDalGN27oLTRfu2W/8F3S3
zT06ROwiPN6a0hnUAr+Ex7h/P9wEv4PP4idQK7wU9ge4o5w9M81OMzgC12bX
qpyV+wn1kLfn0T84w3OF/8AufDx7T2t/4V54ofCZhP8QfmsAtWfPRLNRD56F
Z67Z32G/k73PYX8OdWT/If0lzXiDvWb1jPzr0Gv4bbhW1aha34R7oRjFfgq/
rZ4dhF+Fz+qPNMIfw281oAJ+H/bqaRv8Ivx31FP19lj239dMNJut8F9Uzar9
P26Lh4g=
            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
GzfaONPmxZTMozOZR/X3wnmkzTutTuaTutIldeVC6opWh7S6pdU5rS9ofZRB
+q6S9N1B0ne0PqX19WPCgcOEA18IB2jcoHFmkoOQS/8Il/4RLg0TjkUTjvkT
jrUR7jkR7lkT7u0gnHxCOLmRcDKTcNWacPU64eoiwuE2wuEZhMMz7gm5LU+4
nUe4nUA430I4v5xwPo944TXxQg/xwnoNoUeyiUfKiUdaiHdiiHeWEO/QPCX5
Vug1lcdCr6l+EnotmHjQlnhwmHgwlXizjXizhHiT5tkY4uWLxMsStUIv0zy+
lXh/6Xuh91OJ92+RnHCT5IRVbcKcEEdyhZGbMFccI7kim+SQsySHJJEcMm2W
MLf8JLmFQ3ILLefQctH/ej2Ktv/VyNLifo7Aw6/jynw9/XHqZsj0ZUdjYTJc
1pBlGI1XP9WjfeYEQGfUztcHWhLA0j08+VrIa8yqPCDOFn+IuWq93jfOJIN9
TnZl55lEOL4bvPW7OwhupS/idsunYeu1R+saZifjYxDXeXJNKHa2B19FeiZY
wT2l2lUp8PgSgVXWTxFu8c5hm2oupkTau4WfSMfYwTMHVm0Ix9kSo+TO/jzI
+rz4qSmXheeh2l9nL3mO2qiwhxcKCyDRuV9RNiMHetteV0+fEYUsO1kjE/8i
AQ9Nv29blIfSqRfC7cVfgu+gqe1rVYJrGZvavDzy0VIRt7vlczRmGrQt0FQo
w+XYLw8HigrgHFiQ21ITi/WHdq+8zRWsZ8Y+OmU4qQj/MoItZiXEYUXcSM1t
oZU49cRNe8iqGKt+9219tCEe483tdq6wqUZ/R6XJkaASRIkfXaWrlQDGpcxd
DIlaDBuvZH9ml+L7EqutpxQTcfLKftfVHbUY9fC33U65cnz21D2XMTIJym6L
etvS66AZ97uwwKwCE7JNwq0+JGF06IMcxVv1GJkyqzTKpxLJn0Lr7ErfoEJx
ZMfPvQ24sXxDjkFKFcrmrj9tEpmMgrmSx9oXMzBHm6uyoL0ajwM6b0pdeIvx
vQ8cvw4wYN5kfvnzyFpEsxRmSFql4H567QW3/EYkjLFlyt2rBfcda/SM+anI
u1qubOXThDl5s98ozaxDR91y26C+VEwvu/bq23ompgdubuyJrkOyTtOxg9lp
6E97O1ZNtBkOMrVMXc16XHYdWSJ7MR0v1pW0PU9phtjl/jLvpHpUJTIMu5GB
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
ZddW4+cGg9LjY9/i2TkjDy1/BtY80Tc6zamB+fPc5KM6KZjCfP9iIKIRM19M
bNiZIcjdorbfzexSsVjZOSc2owlPTxhfmuBbh5sXP+x+cD0N3msO55XXMaE4
d4uRiGU9bCyWvcl7k47WGSej2983Y531jIxApQZMTtpi6sTNwOmJd65fHGQJ
1jufoP2pAZv7332NGJWFAd++o2UT2Hguf97YLYkBu4P1na0LspGidnLeUmUO
DnqbG7qfbYQ6O+elqXEORp257t23mItBfXFpvzVNCPl1e+iXTi52NGjsmLy6
VZC/M7799x1FzX2ujP++o3jILemdqWC99k+2fUZUCRNqrmH5iy3yIKLn981/
Hh/Hj4+M+BrUjBYr3739DXmI19FRnznMQ7PKn4p1ziy8ah8MuWqWj8DCnOZK
Hx6ePn+z57/3oRxtmYf/ex8qxkPt+H/vQ6WNeTvdWIKN8+PODb/bUICRxzVW
Bj9uRa/DFuUzNWz8fTE7vCKrAHM2u7OD1VrxKe37ZIu7HMF69/2I6VqF8M17
MTwxmwvz6Zu+XjDlYphvaBsRXgiZ0qupC8252HhF/sas/54XlrP34kgVCeaR
/8zxIwde3cfOSmcKcmKAqsGrc0UwjlGLe3+JA4/es4EzD/Ngrihn+rejCPci
Vr5LmcnB0i1mSoXifNxv+841MyxG78T8GaYFbHDGeaYeteZj/oVZa10ii/G+
2Pzjp0NsfFzsdfp6OB9zM2/amoiWYJ6P9VR/aTYkvq5JqO0W+C7+nO5D6xJc
qp6x+mZuC86tmXmsfXEb+sPFJnNelMApSfON6fEWMCwy77x0aUN5//01on0l
mLFEKufHwhbIKEwNF48R5IRFS1zbBX6/uFDhw32B39emyl4IbmuDbI1V+FjP
Usj5PDj44iUL52Q+DylObkfp6dCEuamlkKl1VT53jAWX+Vr599COSMMvPat7
SsHmda0TBwuTKtgPxBzawarf0rpNsQwnSpyvrpdm4YGyZddiv3ZcU1ogprS+
DP0x79wudjdD7aBXX+7zdvT/0Fu00qEMys8n+chWNGPAcGP208x27GobF3vt
Yhl2t538q5Ig+P8tSv/wqtrhsdSnXflhGe7mzdxw93Ez3DMqWWdY7ZBPZgr6
qgyFoj4uh243Y9v6Xy8teO2I07Do/hVTBrbRgq5CP/p22n5ovztqo/A4D5Hj
NP//x0k5L9o4zCbj9p2Mmy0ZN9o40+aFNo+0eafVyW1SV5MihHVlReqKVoc/
Sd1qkbpVJHX7ldS5PqnzGlLntL54SvrIkfTRedJHtL5zJX36gvTpDdKnHqSv
ZdqEfS1C+lo6XciBST5CDrgRDigeEnJjykshNyYSbrQTzjwgnOlxE3KmjHDJ
m3DpPuESjWNBhHs/CPcCCfdU5ISc3EA4KUc4KaUk5KoR4Wog4er4NUIOvyQc
PkY4fI1wex/htjbhNo3zNC9YEY8sIh65TTyiT7zjT7wzQUnonULiqTziqUTi
qfXEa3eI1/YQr9E8eIV4c56h0JsNxJubiWd9iGfHtgk9S8tdNI8fI963JN5/
TLzvQ3KCGE+YE8pJTqA9V097n3GyhjC31JHcsobkFtr3u2i56H/9uzC075nX
ke+JBZDvib0m3xOjfQeD9t0D2vt6tOflaM9H0a5P0q5H0XIUNytm14KuGthv
SzD/qZcChctDvd2xjSgzjBh1v7gWTyrSvGKPpaJr/5fTn8ubEDRynvy5wDrB
+ujA/sGINGxdtf7B6Y9MTLzY+VfGqR4/6u6AzUzH9QmWao/FBetuT9OqqXoN
UFjam8CUzER88+PkntmCdVdzt8WjiQwcmGI2Rkk3C9u0fu+9v4YN31B+gAaf
AfP+KaOljmTj1vUL2cO7OEjsO/st53Ujxp6zEPcOzMEOiwwdkVNc7HvzeHWz
ZxMC/Tau+7AvF6NCr8qNutWKKasvpatsZqLCSvF21u9cHP7n5XsvgofNn82G
nyo047CETcGfq3kYefLL6kWz+GANJeWlDjYjcd1i5IzPR3+Oj87yEh7Uz/me
iGlmwevW1KyIO/k493LajNZNPDDZr1Z1JrYgOOpV0H/Pwf7lN/yZWN2Ku2Kb
HTWvsaFwt0Dd9V4BVharDny0aMUYDY8v2rs5+Hv7m9wh6ULs/Zk4T4vDRd+K
3nqGKhdrKjWlc28Wov9kzbf+g1zkdvpEuv7iIuuibk+iWBH+rp19RKyXg5tX
9VKWCritUlGSmCfgtvSauWsbBNxmDZ8YtjvHwyP+JBuPr0W4Ki3fVCEjGLcF
vHseCnzknnf60GJbDFnXM5I/YgXrdLdoXv5JwXbZ0r8R5cXIm6qs4r2BDV2L
jSeSKvlgzKtwOqZVAsbranV2RwsubM0tlVduw7g6Q+nRD0qwaK+j/fIrLUgy
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
0P/6d4ppf1+P9ndhaN8zp32Hk/b9KNp3D2jv69Gex6PdR6bd16PldlqOyl9m
uv6pVQPWByYfCF6UibiG2fwNG1owWuNoQudSBho87MadPpaFKu2/7mtPsGE9
bUTtvsmN2PBptW50cjbW7GdW3XzGQb3jXvuD3xth+iqHu+BPDtiS615o1XKx
1ezpkv7qJlwwcGWLhuZiJtvn86qhVjxZuePFV8E6u+3pasthvTzodbhlpU/h
Qza60lohuBnz/eafkmbkQWlb/z6JYR6+n12tbOrPwuNx5afW2OdjpvPoW+NP
8NC0bdnOHq8WiJgyF3n25SPm94affz614qbX8huqLmz8lg29ZHK5ALHc4ky9
/a2Y6/frm4lgnbR2dql2q1QhWsRMlyYL1oPuAdKDMw0F3HJrNBoXWgj7P4aZ
Z625+PZb5sFV9VZMmf7gofr8IlxQWyT133OzIWZD9Tukecga+HNcPb4InfZH
Un+ac+Bx5HKLyw8eNAajvX5qF8Nc9CW3roENU3Of87yDfJhPdLvamlqMt4Hv
quyt2ZA3tTD5WcfHhCvLWpOXl2DYOnDHe24LNA+apfz3fMvPZwHZ/z3f8sht
76r/nm95/WqFxmBYGw6Yp15KUC/Fs9Nx65R6WcgK8hmzRrDel7k7q360YL2/
+MU688eC9X7a9CD9ZXbtqJ1bOv3g1DI0qb9R5QrmXcW1Us0vsx1Of39YOV8s
w3j3fo5eQjP+StQkFE7uwEDnaQR8KsOI+0/bDEyacWaabUrWwQ5s+6SiFW5c
jvCJ6mtnfGPiUPDlO6uSOxDvuy3FJqYc+mJfF4x/yETPvWyn2uEO3L4bLr9k
ZAUWjdIPvW3AROjW0d+0DTohEpf7k21ZgQtLJo3p6xNwrFzc2P5iJ+wesL8Z
PamA4raajQZxTShTGvFjfmYn5ue/VzR4V4Ffl1VmpTo1QWyb5+Kp3zqhbJn8
Xn9WJfIfKpRVaTbBfU2cT8f0d4iI/DXr+45KcJV/LGMMNYIvffvPxfXvUPV4
xv/Rdd1xNf1vXKISERKRRElfWygV3rbsJKUkhCSypWU1SVaIEmWnjJQWae95
q3vbe3fbKTP53d/rPv9+/nRfXud0Ps97nXM+53mu41oWVNsuRVRyeBjm1OdS
Yt4ArTV1I6U+ZmGjmn+GZBAPI512aX260gDJNZxy+bwshMctgKcHDxKHXCZ3
3G+As9JqzqqWLJzboTDM7xwPalYPp9k9b8Cm35f0T/zKgoSDxg+Y89D9++P9
DYENiFmeXnZbJBurXq+MdDFl/76OjmNGx+mxFx6HdV7W38m6LtY6uNO6RdO6
pdC6sdb5E9VFmuoi5SKsiy/V0ZbqKEZ1ZNWdhRMHwlUa4Wom4eoG4dCKcOhB
OJQeJsTtmAYhblvvCXHLwjmLFyweJRLvHIh3HsQ7Fk/nEq+nE6+biNcHSQcs
SQf8SAdYuhFMOpNOOlNMOjPhp1CXZpMuWZIuPSEd8yMd20Y6xtK9T6STo+SE
OnmPdHKAdHUC6eo90tUJDkIdDiMdliQdXkG6vYJ0W4J0O4l0/g/pvAHpPMsX
6slHLMlHeslHWL7zH/mUhL3QpwbIpxrJ12zJ16rI11g+yPJN1nvGYvLl++TL
68iXWT7O+p6R1UcikXLFLsoV6tS/i9U3ldWvnjUnaA7NZzSg+YwmNJ+RlaNC
aI72FZqjfZLmaLPmP7Lm67HmwrD6mfc7CvubhVN/s043YX8zVv8oVt8D1vd6
GbR/L2encP/eFtq/x9ofxXqvx8r5rBy1utzaZvBEHt7dP/RXNzYGeT4LXt4I
KkfP5hnbh/3jQUPDcJWzWBy2zL8WFFVbgVOfRoia1BXi1baO5PK3cSgOftze
NaEKaj5dNzipAn51nuzZsiMe95U2yAbNqMayy/uMbROLYfjh0rFZbfFwW/jD
ZWpTFa6+duovjy2BrIVhGs8xAfN1Yn52GVbBOH2qyK4vpSjfE7y+b0IiDm9V
ObgmvRK196OGHQkrw1XOkuCl7xPxYqPbnEPalXDau3vysnflMF3VKT13VRKe
86aKZb6vwBHjyDcDzypwuiP96/+/JxLXjyr7//dE4ZKcoiVelejIXvRDxjwZ
D7Jafuz1LsdEsUk3trpWoTzwXK95XzL8Oqc7zBxdjhG8e0HXNavhHnDodpxj
CibvrzHmupdh/Y61q7vfVePhhqztkVKp+LbnTl68WBmabZVyxinWwCbxsuK/
+6nIWvVh+HKXUtgdOdTTeasGtd+u5l+blIaTSuYvd4iVwsDg0cmRf2sQbvNE
Le9xGkpHuyo4uZdg0JL7Hv3mtZjP9a3ZIJ+OZ2qlrbpjSrDrWN/VxOxaLNIq
aR/wSkeg1oXrIY+L8STq/Dz1BXVw9H9l8lkqAzkHT28sm12MiS59BV9u1+G1
Ir8x+ZLgvqrf5qBNXBGMDo46M6KtDr2DD3lmtmUg7OXHW2W7ivDva2HyVIE/
DrlwozpR4I/PF55tHf69EJHp2qGP79cLdFrRdnlEJmLtfi49+7AQ/UnJKf21
9XD+8ePIk7FZmL849+2bFYVQVTxeLDpL4ON5lmMeHxH4vtlF484OHlY2m0ne
sGqA/Oq6pVJRWRjfY7js5HMeKmLSczYKcsgi9wfbPQU5ZN3df/rOghziPWXr
7b7qBjTcDCwpXJUNH+WoUgdFHgZnecSbjW6E5sFd4gEO2eh52Svr3sJFyofi
VwbajYjO/HAt5n02hknHczqjuLh5YdoNR9NGLIgutIwuzoZIxBl9cU8uuq+M
DIq1a0SCnIjJmd/ZcM3yf9F/iouD4R4ucrcbMSetb3L32BzE+yz8kGDExdDQ
pzo3nzTiZPGvKwun52Bn1Ry33Ru4mN4UebbpZSMGXRh9/tecHEgcGCE6dCX7
d9ZxWOdl/Z2s62KtA2vdWOvMqgurjkup7lyq+0KqOwsnWYSrLMJVAOFqbIwQ
h/KEQw/CoRXhVlJUiNsnhNu5hPMYwrkV4TyEeOFDvIggXhwlHm0iHt0lHskQ
79YT7zyId5bE0xziaQLx1Jl43UG8PkS8ZunAbtKNYNKNCtINls6sIl3qJV26
SrqUQTr2m3TMg3TMk3TPnXSva4dQ9x6QTlqSTj4knfxOunqPdNWbdJWlw8Gk
23NItyeSbpuTzp8gnT9JOs/yhfvkI3HkI8M+Cn1EdIvQd9aQ7xwi32H5FCt3
SdoLfXBwoNAH08gHWe8ZWfu7WPvqWd8zsvpIsPp3sfp7s/rVs+YEPaKcc5jm
Mz6inKNKuaiKclEo5SJWjjooPip1YmUCVkzaN+zvhSD4rRie4vIsHeE0d/s8
zd0Wpbnb+jQvcirNiyzfLpwXyZpzxOrPz+ory+rDyeofxep7wPpej7XPnPWe
mvVebyHdF4yh+wJpui9g5ag1z0pnTOIX4q/GkfGpH+PQp6XvMWlaFdZ1JA3T
4hXhRO96q7F74jF8xOC7qfOrwVnzq3JhWTHCl898tfN3POS6WjWDSqrg7auW
IlpTAruvh8X9vRIw/r+fE6etrcID3+ya6oZS3Ow8amOklgjRk3O/TPtYiSld
bsqa/DIEZvk8SsxORDi3Our45ErMnTS8Lb2tHKN2hBRNtkhC93/lU7+6V+D1
kkIbzfYKNIroequJJCNz1q+KFb/Kkb6pI6SwtRKqSwd+z/dORpy5yMxsi3KE
W9z/PLK5CgeNdbfFz0uBpH+QUVhJGY6ozVwTfbIabaOf1L1ISkFhnbro4s2C
+6P6gVUFrdWYKZG82ccwFcWHs/Xc40rxZNMhjd6DAv08qbl9SXMq7K/t2yCn
UYpch8X/iZfXYFZel56ZdRqWxtjI/f1QgterL2VG69ZimrnRiyiRdMifGBpz
a1YJXryeb3QpoRYZFc7nrl9Lx2W3JzPsA4sx4mv9Yw2BL3RETh0TLfAFZ4O3
gSUCX1i3605pg28dAjxiUjfdzIDiCdu/gSFF2O59Ve7bkHoEx8Yau0pmwsQa
lj5Li1D67+rWWot6vP2x9lLhlUw8Uz3DXZxZiK4Pl7w+p9VDx39X6JreTOgd
bvvvnGkhzCZo39uo3IDb3hD32p+F/YHxVre/8xAy/EXlL7sGGFh2OcmkZ0Es
z+fWons82HXrKZhlNeBGpNevtTOzEemy9ANPgwfFZY/zjSY04va01WU/nbOx
1H1O/bMaLnYcGbXjriAPPDWxPMUR5IEFEdjce4cr0Lpk3ltB3sg4G/PHUJA3
Fn6PLl8iyBuyNkVzjxQ34rx+4Kl1ljlI8ncbCBPnQkVEY//d4U2ws313y+R1
DlbIu+W9zhbcJ0YeHl2p0QR7ccXfy8pzMGKoprz5owJMtHTrE9vTJLgfPO7x
SCIXJwfVj1t6qgBeP/iDe+2a0OY1c57B7FyI1wzdtH5bAc728488uNOE8Rqj
D+1Zn4sHr44ffrC4AFrH3prm+TfBo7tY47pRLnRXqV3SVS6AhYi1qV1AE0TU
zO2DzXIhs0jzsN8k9u+s4+yj8/5TF573PZ2X9Xeyrou1Dqx1Y60zqy6sOrLq
zsJJCuHKinDVxRHiyppwGEA43Eg4ZOG2nXCeRDi/Tjhn8YLFIxbvIomntcTT
I8RTFq/rSQdWkw6okA6Ekm7cJt04RLrB0pkLpEtDxgh1KZZ0qZJ0zIF0rNdP
qGNdpHsg3Qsk3cshnRwgnfxEOsnSVZYOs3T7Pem8K+n8cNL5X+QLOeQLg8kX
LMlHrpGPKJGPGJDvSC4R+o6UttB3WLnrCPnaPvI1I/I11nvGOPJNdfLNNPJN
ls+yvmdk9ZFg9e9i9U1l5QpWDmHllvOUc5ZSzpGiudillIuCKBctpFzEylH/
pfzsPyydBMWYeL8tS99BycHA5cOqTPyd9357fUEyDAqq42bmfIDF4ckzJgVk
M+d0s+ZLsuYisebCsPrQsvpwsvpHsb5XZX2vx9pnztofxXqvx3oexcpRJWmH
r9fWFqPOZFJQ60A8Fv/KPLeNJ7i/qojJuNZdglyJtJkX/BOw2DR3VYJ2FcKa
K/6Z/SsFv25p0N2ViXC8E9z75lklDgSM/zxCqhzqrTEFN2oTodDq4PV2WCUi
zQN8e+QqMFvTauxYpyQs0ZLVVzhVgWi9kG8q0yuxbLqh8/1pyVD99kfCtaQc
r4PrBkvNqwJ36kwL3fhkFO1eeDBoVTncfTSn+08S3CfOcYkT35sC1XQpy9S3
ZbjUE/roypNqBJ5zNNv4R3CfuLLn9doJZbjatL7z//tjCyborPj//tjvliGa
/98fu2iF4b4x/jWYM7pDLXtuGizFpvYN6S1B7XrfOfIKtbh64Fba+uQ0XOpY
mytyqATtJX/+zfSphfUl7thDRulI4aq2LisuRlvVj8s5Y+tQ4XSv7wk/HQ8H
b4hbsrUYfInqJn/3OriP2ttsb5OBxa72WYf+v+/ayIDzdKAOzV/2nv0zOBM2
r59dSV5dBF8F+W1nT9SjaUfQm/fXMrHK69LW+MRCLN+71dO6vB61W/R2codn
od6nLVdapxAz6ka/tlnbAL6I+pKF17KwPKbCis/hofmc5znDwAYkhx899lQk
G29XDvt9zpQHp3Dn066SjQhNTZl+/mw2nHvntut1cyFaZhR+61AjHF6F+82o
ycbfrvRR4u5ccPzkZm/50ojB9tlmLutzsI8b++CrQNdUtEXFrQU+XrPW1FlT
4OOWlz9OSRf4+NRBYwtv7GxCRH/NqQ//cjAttL003LYA53r80jW9m7BN5WWs
nW4u3L/3FrTPLkCjk3IwCpsEvNz8bad3LkwjvMcEN+VD/5Cshf6IZpxYEmDU
VJILpRMvC/UC83H74XGHOdrNeGQXK9Yq4PnxV9N8Z57Lh7ybfeMTs2aMmrcx
1lqRg3nlfoZHdPIx+7vXnwuOzbA9P9H0wkIOcmvjTkM5H3/ND4y66tMMFVN5
2aKVHOj2ut/7KZGPYwanJrsFCn4ftzPgwCYOQhfHied/z8MO1+r3tiHNuBD2
Z9E0XQ62r/l6Lrud/TvrOKzzsv7O+XRdk+i6JtB1sdbBgtbNjdZtBK1bF63z
ED/hOu+gdWbVhVVHLar7L6q7PtW9jnAykXCykXAiRbi6SrjqIVyxcPiXcFtB
uPUi3LJwzuIFi0fjiXf/iHdmxDsWTwdVC3ndS7x2JF6LlAp14CbpQDDpAEs3
WDrzmHSJT7pURbp0l3QsgXRMjHSMpXs5pJNtpJNxpJP1pKs7SVfHkK5mkQ4v
IR2eQzrsQbq9lXRbnHQ7nXS+j3T+POm8fKXQF5rIFxTIF0TShT7yh3xEgXyE
lbtYz7tY7xlZ+7tYvsn6nvE9+XI2+XIn+TKrfxerb2oV5YTZ54U54RDlBNac
IHk/YQ5xpxyyhXLITcotmyi3/Ee5Rb5emHPiKee0Uc6ZOl+Yi9wpF3lTLmLl
qEOKX/pPLU+G7kN3NYve9zCUCQsaWZGFx4N+rVAYnor79upzuOnBiH7/X27f
1lyUbtEqaytLQ9FCg23n5UOwx+XAyWV1HPw7JJzrPZPmet+iud5+NI8ynOZR
LqZ5lKw5Sqz+/6y+tax+a6z+UazvW1nfZbD2mbPeg7Oe37KeR7FylK1rsWar
eBn89xbcDFqXiIlKnon5/5+3q595YL9COVKMuXqNbQLecW9dKfpXAe3Gp6G9
iyqQa7/qgtrdJCyfpBKeub8Cc6sK0wM3VuJKeOmD30uS4fFtjNWypHKkmQ+/
f31vFQZl5pqurkxG6cENKqozynFWvb0/WLMaVSfXKLQ7puDn2N7Bge5leBp3
4Y5bQjU2T5vku1klFbLJC2MOdZZCxVLPfOfGGtTsvS16Mi0VX46nVG/ZWYqz
jd0tUnk1KNVZuUPnSBp61px9dzJaoHuis2ZONKhF3fDoHVMl0vFZzNHSdnoJ
xpjYr99bUotCdevO0hfpGJzRcd/1tkA/h9UvzDGug6yS3JwDyIDfrvg1b/4W
oT/8g1lOSR3sR8i0ihZlQDl0+K2bVkVQmy0WL2VQD0npNbN3H81E6PoV9+9W
F2Ji31T/M7n1OJ72wGZTfybmD55sxDUoROy626FuAh/pvBc/b63AR16suG5c
IvCRs+5xZZURDTA/a3YsbXQ2VLbsVJHfxkPVQ87ENSqN6Iz503L/fjZcZfUr
ivO4WJz7IWvN7UbkOl9MV5bJwffUf3fvGHGRqfRa+UBfI1qKVpdUeuRg+7c5
ErzGAizd6HrooMBPd1ye//OCwE9Vf8+sbhD4acGvp03fPzTBuVP2jf/RXPju
zE5QHFuA1yFyEzyHNMNy89aK55xcqLu7vVYMzcdvzZJarl4zyiKyCoeN5+Br
n2HYDuN83Hjwa42rIFfMW3RuSKEgV+gs+uj7W5ArxuuN1F5d1oyaX1tN7C04
cL7vF+4Sm4f9k+vrbsu04KBNglOwOwe+29NPXr6YB16lxdvDaMH9mF8/977l
YFlRxof56/Ow+t7DN0/1WvDwclhJVz4HDdVLQv5OzEN6eMCr+WYtONeWoK7S
w4F1hoWh5g8OtL6uut1t1YKj1V8+RQ3Lg33+i5WLyjloudY2KONcCw5kD+yz
lsvDjZSzU2ZlcPDM2HXKJ9sWdOVduaw7NQ/G56+azYpn/846Duu8rL+TdV2s
dWCt2yxa53Za5+O0zqy6sOr4mep+heo+hepeQTi5TTi5Qzhh4YqFQxZuWwjn
fwjndoRzT+KFO/FiCPGCxaO5xDtX4t1E4h2Lpyxes3RAhXSjg3SjLV2oGyyd
YekSS8dYusfSyS7S1Qmkq0mkqwakww9Jh8+RDm8l3S4l3VYj3a4gna8knd9P
On+DfOEt+cIo8gVW7mL5DsunWL7G8kGWb7J8ltW/6xb5+DxZoY8/JR9n+T5z
ThAjV7DmYq8zF+aWvZRb4ii3DFDO6aacc45yTjzlog+Ui9opF7FylLv3s8e5
R1KQlBeftlU/GL3xF/ozz+TgSMes/9KRhleVOXFhgR8hcUugGbYcDHnwY/9u
uQy0XdB2+CIaCsXTc3prPudB93C709W+TIzcpSL32vQTNom0hO8ZyIcazQE3
ojngV2gOOGtOMWu+HmsuDKvP7Ufqz7aJ+rPtp/5srL4irO9hWd/rsfaZs/ZH
sd7rsZ5HsXKU48LZr/8sq4C44yhxr4dJ2Jf41e+tieDv3D5FxXFPJXzHnejQ
XJOMC6jr9YgqR/SKuRxPhyoEiARdfNCZjPmLPigFy5bjibmb/Lst1UhJHqWf
7pMCrSMlNf1nBLxV3iluWl4Ns1PnPk3//3d2y30uyOSX4nnjCecZljVwKvNO
sepIxZ6N1R/VFpTC64viadMfAr3yzqoQe5CGyHPH1X7cLkF/bwPX1qkWHH/b
41uWp6M39ITV3+5iPPx7qrxNqg7T9kobe9cJ7kMXdv/XoF+M89nRajVedcj8
nmsq75aBdfk3p16KKsJEvfUrfk2uR1vb9Fhz1UyERTu4LlYswuT5caquz+oR
v8gg/HVKJmSCfeNzrhVCZ09I21HlBtywkir6uj8LgbmvH1h+58FIMdzu0vMG
HLzfEnbuVxZ+jylt1DTnofFn3V9MacTmuFuOi29kwyMyviKnhIu5rVuH6j9o
xFGv4Wc95XMwWrvp583tXJyaufnn/uFNUBn//c7U1zmIlmytqcouwMtZt4w7
7JrQcOGb1bbZudhdfiJ8y7YCPJXMCXzS0ITJbTW/PgTl4sHMYaooFPhml4mS
1KZmjH/eV3JwDAcqV6Z8nHEgH/0iVy74Bzaj6ODCnNObOLgQX7Q07HsedifM
WNIu2gLejeS38Zc52JLrl7L/jkB3Hvt0D1/fgqinNf9Cv3CgyRd38Fuch20v
PUaIWbbgjEtTWrlIHoZKOS/UaOBA7Lin54NrLXB+Za8zb2Ue6sYEV7zw5SDg
TLrZ9ZctODLrb9sK2zxIf1B5bGbCwexU0y8ZX1uwdt0d6fo3eRjVF5zwQpmD
rbJZP5flt2D81Oc6Lfl5cBzSuGl1ay4sRZeeiK9twZCoFvFhvYK/e+HtWwZ+
uRgX6eSg0SnIJ1bOFeJS+ZCxvHpruHku5OXeuN7+0QK+1/CLKZPzcaJxmHgg
cqG7uNYn/k8LpM2sv81Vyce9YI/NB2ezf2cdh3Ve1t/Jui7WOrDWjbXOu6gu
LlSXrhHCupyhOiZQHedSHY9T3Wuo7hpUdxZOWLhi4TCScPuXcLuGcMvCOYsX
LB5ZEe8ciHf1xDsT4ukL4uk94imL18qkAz9JBwJJB66TbtSSbswn3XhLOqNF
OuNDOiPdJ9SlZtKlStIlf9KxBtKxd6RjEaR7j0j31pHusXQyhHS1knRVmXSV
pcP6pNufSLfNSbcDSecVSOc3ks6zchfreRfrPSNrfxdrXz3re0aWb7J8ltU3
leXjrDlBrPmMrLnYdpRDblAOCaEc8pByyyrKLQ6UW1Qp54hdFOacJZRzPlIu
KqVctIRyEStHaWgqv5p6JxVqP4/9sZ71EYVrDkxzGczBn7ub8vefSMcgNQ+H
BrcQBBjMf3VEcL+24P2PpMTtghwVs/W5QVMohj7xipW/lY+xzpfqajWyUW0v
oXxlQxiOml6VNS4pgNda7U0GSrn4MumV940P4Thwd91S9Rk8LKC54eo0N7yM
5oaz5hSz5uux5guw+pmz+nAupz4kl6gPCfexsA8Jq+8B63s91j7zk/Se/Ty9
Z59I79lZ7/VYz6NYOWpd7jD7aa5ViNt+4+XmvmScHlnjsHp0OZS3LVxpa1iN
kZGpPPtXKTB9dKKv0qIMlstm6ha2VsNiytHux4apkFY9Xu4aVwqFxiGch5dq
sJxv4CIukQbDfbOVKieUCs4yp6V2TC245n5GNRFp6Hj8SDzmVAk2WAU7vHxZ
i56yd/vkDqdDz0kkRCOzGLzwGZumadQJ7vfLrLNkMlCuyhmkpFKMkNKznetT
67DxiXNRQ1wG+sdVBt91FNyHhpeaTxPcz6rvGV9wRnA/a25ya4aD4H72d0GW
6tC6etj2Kh0LGCvQ55Kk//xXFMK/9vXXW1YNyJy7yFo6KgsdDr9nWz3n4and
5ZKPfYLfr5s6PNydjQar3vd9EjwU+vMVOu0a4brtsujb39kYujwlK+UUF+1O
M9dl9jei6/ruwPD7OZD1aXK3qizAgNS1PX8FvlMvO814v8B3GkX475YKfOfb
64+uY/qaEP18Uce0mFzo7THzCE/KxwON6wUPLZsRfMEsWHM6B/dith0zQT6a
kuZsml/WDMXonSNPWnCQYbN/4aPYPMwLGL39DFqw90nmjvNvOZiwK6B1nIBf
LXIa4xutWrC17NDHZ8MEPqrs/HRrOQfHvh+utvRuwe03ie/a9+Xhr/R169U2
HKzs87lXHN8COw+psqEheYjpr63Vm8TBm/XjypsaW6CKOwom/XnwSsnhrPTI
RcU199N7JPjIUfT3shX8fR0xOz2O9uTgCiLV5VX4iJFo4yrZ52OMHLcx4EgO
pJ+16ous4ENaNPyvzId8JM1fO8inJxvzvJW0eTv5uHf0rHdFaT7e/vhnuPxm
Nr6Jykw+cpiPW4oa6VMEOmVmtXCC1bJspHtO+PXmLB/lxUpWYRMK8FY0/fmF
QdlI6fWNu3WBD89nfbtvziwAd2TX0PtFWTAbvSFb0pEPrTXWC64vLMCPmXFq
fxKyYE6/r6bfa+l31nFY52X9nazrYq0Da91Y6xxCddGiuhylurDqyKp7D+Fk
H+GkiXCiSbg6TbgSJVyxcBhEuI0m3F4g3EoECHHOJZxrE87HjBTy4g/xgkO8
EHEW8kjCQ8ijf95CHlUT7zyJd7+XCXkXRjytI57mEE9Didd1xOsi4jVLB7RI
N7aSbmwj3UghnTEjnWkknakiXXpKusQhXWLpWDvpXjXpXi3pnirp5EbSyU2k
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
6lnfM7L6SFwlX+gmXygjX2D1TWX1q2fNCWLNZ2TNxX5FvjmDfHMu+WY6+ewV
8tn75LNXyZcNyJezyZenk4+PXir08R7y8Z3k+5vI9/vJ930pJxygnCDWKswJ
9yhXFFCucKNcEU45xJ5ySAblkEOUWxQMhLmlmXILK+dIHxbmon+Ui/5RLmLl
KJWy/67tFeQxJWPTqNuCPCaip38lUZDHbu/WDw/z5iBHfdXyjfMj0WgrLdJ3
oxCTvTfy2gPzEKZeeMo8Jgo/o8KHzxYpRp7351/2sfkobDIdsXf7F1y7VHm0
1aYE592u1PgUCe7z7QJfXmuJhmfZsG7HvlIc+E/OJPubwIdl/YpfuMXguub7
nS/OC/JJyfsn5WMKESqdXN8nEwfLcxMN3vytwOsSidufFgvuA5zmTCxrjkO5
38Vz+VerkFw6uPL40WJUnD7X6hsRD9saZw33EdVokHqr7BkhyKcHLa/VXkjA
qqzXBi9NqhAlGT55i0QZLo5wGGhYlwjRM/O1Hj2uhOR8u47Fe8rRf7tLzmJM
EvZ9C5mhVl6BBprDfpjmsGvQHHbWnGLW3CvWvAZWn2FWfzxW/6gn9D2yGn2P
LCMr/B6Z9b0ea/8na38U670e63kUK0dJXtWe9eZPM+yrm+zz7TkYnWmYneCT
hwVqK68ln2vBcsluSyu5PESM9z64OIODbxuvTVXOacHwf2NOfsjIg/iIN3MV
BnJxqKk1RFmFj20nZEoX2efj/LindVeO5MC3T23T4wt8pBs5uLyZWYCMaY6J
BkVZMJ/4XHkRlw/bZ3V7jYoLsLRi8k3NDZkwdva2f/9fKzzUgq/lOHExYDb8
9JK4dHiZDeWmXmiF9LXc55dmC/LSZNFtN5elwcJN5pYKpxW1+5taIvN4MG3s
XFCUkILlOvIa9optyDZW+1V6uhAFC/VPXt6eDIthto57jrfBxfT1U5lRRRB3
jXU90poI01K3k8ZRbVB7rLT40ssiBERsX/zcMwEBzvf8ZEXa4Tq0zvzA4mIU
2f57mqcTD4eY238V17bj06UCi8qvxbgV1xfYPyoONndch/MF/h7bYniII/D3
nFGGSid5XxG09Fhif2w7fk209t/6qQQhzisStMO/YFpW6Zrffe04+SExw0ex
FJISX54mJUehJPWTvZVKB843DRuRcaUUY/Q0jCARCY1wr2/Fuh1YW98RU11Y
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
+jrl2Z6nQqk5Q5rlE8AhvouHj0vvqSWpDxseeSWGkuEUp/zuQA6xxVYmRB+t
JW+1mZOPtjOPM/2OMI4bieNKcXjH9cd5PsB5BuI8ma6LaR6Y5u0+5lkN86yL
eY5BXDiISwvioow4FiKOQ6fx4miMuA/T5cW9DXH/J08eIE/eIk8uI68akFdz
Wnl5NfgULw9dkYeOT3l5OB15+wB5K4G8TUCeP0eeayDPNVEXCqiL+aiLXtRR
PupoPurIB3X3DXVngLpj8l1Mz7uY3jMyre9iWlfP9D1jDHRMETpWFs3TsUzo
3kPo3hPoHlPfVHXoqg101Qi6yrRPENP+jEz7Yq8CFzzAhaHgwnhw5Bc4YgSO
yII7wz7wuGMK7siDU3vAqdPgVAm4dh9cOwWurQMHF4GDYuBgMrhZCm7ygZtM
nJ0LLh8Dl4+By6HguC04/gQc7wT3j4L7q8H9Z/AJB+AT1OATRHp4vmK4N89X
LIKvSIEPuQIfMleU50MC4Vt+wLdMVuL5Fkf4nP3wOabwORHwRZnwRQfgi5h8
1Pk1d1jFq/LJ0u5mX4xrOE08VWrmlFNK038MGcY2KaCJVey5C7QiKaurqFZ0
D9dXzHsYvOJeIb1xfeT5qSeKfk0Zecb8awWl39Ff2hFfRL6TJYzNg2NoWGDd
5pFOlVR87NnH+r+LaZSRekR+RCy98ePfXaJUTXHdfI/FVEpJ+nDqsWiXOFq7
0nbiKkk2Tbx3ek6YRxmxpEJDR5jF0zIh8dDow9XUvXGMWbZABWnPyjBw0Uig
aHvNCXXc+7yavOnXY06z6O71K/EvJifSsy9ScsFZleS/Vm7GhI5KMuhV15YZ
nERCkZ8Ut35n0bmv5x9PPlRNOlITNvfWJdF972UNoZNZVGPuUx1/ik3vJVJ7
vdOTKXOc7BQrjQpquPMw4TjXz489+fnQaa6fvy9w8OR2rp+PcrERXslXS+J3
p+YP806lea/W6Lhbl9EO066bCVm1pLSsrKPPOY18ll20C3IvJY0dTuUNbnX0
yj46Zb1jOsmanf3pw82Dm9JSmyzM6ilnq+/rt7cyaIfzZe24hGKK0bjz7oZ6
A3Hux81Tv5XJ5YidflluEeM+9Uz7FDPtC8a0LwxTP3Om/oFM/aOY+h4wfa/H
tM6caX0U03s9pudRTD5q7PNJVfrNHRQwdt01zWHllH8qvkFwdTgpV0jYKO7p
pO7CtWd8v5TTlfVjpszvCybF9V/WuRR1Ut7K0u+zairoNt8q92NRgfSXYNv4
ses5ZNdpJp+TySLve4kr9wr7ksN76wANIw4NdWfLm7IrKT9/QbxruR/9lTmp
3v4Yh+6Yz3/+8ksVxWvI3TyV4k9r9E+FXTvHoZVat3Q4v6ppsWzXwaDNgTRp
rD5LzIZDm4IKv96xYlNOn+LgTYFBJLyGrSztxCHxCWe8jX+ySb9k/rbFfO+J
HWp41s6VQ8uWqjWuN6+h7aGNqmvVgkl70e7hqlz/cKHpcu+w6hqasS9OTMok
hE4YaPKN4/qQ+VP8GiZzfcjPhBMFCVwfcsHJKuZjMIdmW1ySXuFSSxnLbD6f
3x9Gcm4/O99HckhbSF9YsrGWOg17NOsVPxBHMnSpRjyHzMe8mGwjx71vcPyQ
H175gXymjR5nl8yhvIIY/n26dTTo5ZZjX/eE0/cT6qPN0jjkxxF4lGFRR7uk
j/lPDgunBUc5F+vTOXR5EEd/+vU6Wpp7fZBXPfN4D34nFL9zDr/DdFym85yG
69qB6xphxLsupnlgmrfNmOe7mGdjzHMN4qKBuFggLsMRR1nE0RJxlEbcdRH3
KsRdHXmyA3myDXmyC3n1AnnVh7y6jTxcgDxcV8DLQ2PkrTvy9sddXt4uR57X
Ic+XIc81UReTinh1UbqOVxdTUEeZqCNd1BGT72J63sX0npFpfRfTunpT6Ewg
dOY1dIapjwRT/6630L2X0L0r0L2v0EkH6OQI6CTTPkFfoMMiPTwddoAOD8e+
2GOxL/ZX7Iv9ETq/AzpvBZ0vABcEHvC44AAuuIEjTeDIKnBkM7jzHtwZC+4c
AafWg1P3wKlccG0uuDYBXOOAg7Lg4E1w8Be4WQpu+oCbXuDsYXD2EjjbBy47
gsusCB6XhfJ5HPcBx+3B8RHaPO7rg/vvwP3V8Alf4ROmwie0wFcsgq9Qha9o
hg+Rgg9Jgg/phG+phm9ZBN8SB5+TAp8zfirP5zD5IiYftUDHVPPey3x6ZNZg
c3NuBAklRpmY7SgjGb6RS3blFVDYqp9LjrMj6ZJdWS1/Rzm5+qoMS/pVSLM4
XZ1jH0fTZvM9JY03WKR5yIM/VpEbT/E3dW0KsdTjn35rx6wqult7cQHf0RI6
H8UfPG10HBmYjBr2raCahP4+LpYWX0rvl45eEN8WR4M139283lRNCro3n9fN
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
jsedR8Yn0ZWzLwon17Nog4iwo5h3NQW/jkicLZBMhd12ezUHcf1ZgY3PEw82
OV6aeMbsRzK5ef51eIpEBRVujXR6bVZD6d0PVg7uSiFpxdExn2eV04hDCys3
q9dSpo9VmPjXVPo8uN38+pIyMrDli7ORqSOfUVm/3LrTKDXoqHm7Wil13I82
ze2rozt3n0kqDsmgOUPVPO6sLqHexKTk3tp6sv7770MeYzJpvnKO32u1Yjr3
SUfaKLOBHMKcv6vPyqKw68v9ixYXUa7nBIWNEY3Edz7L6LpmNu0tjHkYJV9I
Bd+9mr75N5E1R/z1kyM55LYtK152TAE1D7a6+MSnmTKMFbPN1+fS/biS5cHf
8qhlwuLxjVyuaFfsD3wqlEe9ctZe2qxcmue13ru5sYUq6mYF7O7No+2j1y5R
tc8hvukCIp+MWumZtvkn+a58yrBnzfu+JYs+5gfsmVbbSpvW96Vv/lpAU3X3
LZARyiBP1/RDEcZtNHhEkPzKnkJ64vujMiwgld601q92494PinWoTcjk3g/O
8p1mPY97P8i0/yzT/npM+8Iw9TNn6sPJ1D+Kqe8B0/d6TOvMmdZHMb3XY3oe
xeSjtvkeDfjcxqG5S52K4/+up/31rgd7C6Np3RZHdv/6oiOPxvZNyW+gOQ5P
R9791zolP4U27xiHRkpKOL/46r/ec0menvUldE0TPV/XeyO8Jf33+Aa3vKkm
XU2Uf3aG7cl/Pc8Z5O/i/c6tmebpfWxy0sn/PS6zzjdenOtPVnSPveT7L3/S
XRI+631sC7EXhSUJWBT/eU9XKUlmyq0U+O5MWrxk6e/xXrfNvRpOrTTqjPOt
XQfLfo9H8TXcicxtpTkBU6wVNpb/Hn8m9HPP3E+ttGxUIfcM/oy7YHz8gPEU
/M6mAb8zzJ133AUDjquM8ywYcJ4jSnnXNW3xf69LHvOwZ8A8CGPedAbMmwHm
efe5/87zHMRl/vr/xiUWcdycyIvjBsTdCnFfj7jrIU/UkSdeyBMm38X0vIvp
PSPT+q7bqItvqIsy1AXT94yWqDtf1F0r6o6pf9cP1PUoM15dpyrx6pqpXz3T
PkEh0Bkv6Mwj6Mwq6FItdCkbuhQBHZsLHWv14emYN3RPGLpnB93jK+DppAV0
MmcrTydFoasx0FV76OoK6PA36LA4dPgbdPswdJsF3R7Gx9P5Sui8OXT+E7jw
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
/UXVhnfUcuPFGKHVHPKI/iT4JpLrp1t9z6738GXcp5hpfz2mfWGY+pmvQH/I
IPSHVEd/yEfoa9QdyutrNBN9jZj6HvzDO6bv9ZjWmTOtj2J6rxeP5ySdA55H
Mfkoj513tSzXtpP5gReGMf96jxb0KjNs/Jd2suef1WOYV/t7PFD5klLiI64P
aZW33ure8HucfeCLjrZyJ+20FhbKXPnHz0i/OyrTEddJPocOnTjr1fp7XOLu
zOXXFnFo9eLmR+set/8et2rVSLxty6HaEOeVV4Z2/vmOT3fW8+gQDqnxSU83
S/jf4zb4nZ4BvzMJx/1rwHHlcZ7lA86zHddlO+C64jEPhQPmIQHzVjRg3vwx
z8MO/neemXwX0/OuXMRdb8B7RnPkSfOA9V1XkVfpA/JKBnmog+8Z/+kjIdjI
y9uF6CPB1L9LDXVRgLp4grpg6lf/AHW3HnV3EnX3CXV6B3X6BXV6HHWdjbru
Rl3/gA7EQwe0Wng6IAHdkHzM042PJjzdmA+dsYfO2AnwdKYcurQVuvQSuvQa
OpYNHYuCjl2C7qVA9/ZC9yKhk6bQydQbPJ0Uh652Q1etoKuJ0GE76LAAdJgD
3f4C3X4M3RaFzjtD57Og8wQufAcX9MCFj+DIUE8eR7aCI0zceQNO/QSnroFT
cuDaGnDtCbhmDQ6OPM/joA846A5uzr7B4+YkcPMaOBsNziaCs3PA5R3gsgq4
LLSIx/EUcHwROP4M3E8F9+eB+yvhEybCJ/jBJzjDV8yHrzgHX2EEH9IGH6IJ
HyKpwPMtotI83yIO3/IIPmf8oMf/73OK4XPGF/N8UTN8kRV8EZOPWrZufWet
RRHZnnIqiVgdQzZTPu/jn1FJJo41uQ/Di2nXt+dmM2/H0iRtu7sONVUk6Dx8
NGd4KUnojX/mcimOwqxTtLxmsGnfoL+Gbrcpoyi56MOX9sbTPEFVmfuW1fT9
xj3vfIEKcqodUuumkUALVn8PZrtXkd/jwv3yd1lkvfX8zSELE6mr6ISyfHQl
SZWH3ZSfVkWyN2VOO09JIuvkhVOvl7HolZ6OU1dsNb3UClQ/LJFMNZOUW+s4
FTTNVcRG6B2b8qc9upQ1JoU+9zk1fx9UQcZHo1ectq2h3CvXtQeNS6Xd7Tky
tiPKSTSjwpn/YC2V5W+o2iaVRhYpR2+oi5XRkEFl6a1adeS1ZlucwKx0kvHc
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
tRHXwZ3nOhThur3kuW4ZuM7rbzPXeRvWJQHr0m8dsy5fsY7mWMc0rOMLrPt7
rLs+1n0g4iQbcbKhnYmTFsTVVMRV/0lMXAUgDncgDl0Qh5cRt+6IW2PE7VvE
eSLi3A9xfgJ54YS86I+8mIw8ykEefZjA5NF75J0x8o4feWeOPF2NPO2FPJ2A
vJZDXvsjr13BAQ1wYA040ARuJIIbSuBGNjjTBs7YgjMTwKVX4FLEboZL88Ex
M3DsIDg2dBfDvZngngq4dw6cnDab4aQNOHkMXNUEVz3BVUlw2AUcNgSH14Pb
UlEMt0eC28NyGM7rgPNXwXk1eMEJXrCAF/iHMB5RgUfy4ZFQeCcT3qmAd0Th
KQt4aiw8tRRe2wKvtUszXtsADzrAgzLwYCC8+Q3e/JzPeLMKnnWFZzXh2enw
shm8LAQvs3mczfsPlcZtmvE5jwZ1t3DO8kXS4Kdq6/YVldJj6fEhGxcWUPxe
99Np7yNJzZdPZfPdclLsvbVE0KuQRjlGO10vjSJVs2nCPR/LSfXOkw2tk4uJ
c+2r0vqYaPp8fWvnA4lyul5s3NwrqISkI8PPfX8eQxcEbej+3DKKqJlTrK5V
SmFjrVePcY2lobN0nuzWK6Un8WMtV1SVUcsixwqba3Fks8qq76z9HPr4he/q
1YUVJGTqrfzKMZ7e5nZHH7YuoYbnu/fnSlTSou7c0pDLCTRw0eC7ihe5dYlJ
fd3GT5XEt0Qnt8+tRPrkulG0y6mIzF+nFh0vqiKJoIKnXR5JFMtnb2rsxK0D
zV7bakVVk8rDkBOvXyVTrzddAtvOF1DEdB0DHZ8aWnn0FKcuL4UeVz1etOpE
Ps3cd3ucxcNa0umy1jX9kkqCJ2d/op151C/ggbajax0dKPxySkE2ndaWTzm7
cXEuqZh4G2bdryeHd4WzL27IoJULZlqvlMkhk3UHR5/15NYDomufbtPJpIBZ
kQLZP/oPn2/plXykkbalfd9iPjKLLsWbjZmcnEmSI5/ZO31qpKabA6ziR2eT
aZ2QgCdlUPxHl8jLlk101b1jo+OkHMod/LbfjYJU6n97r2NfwWayHWAnqq2W
S8fPz9Xv0U+mNQ8P3Zlyq5nCVd03HtycR1Ya/ZsSExNIXFo0ynwy1/secy9X
ncsnH9H5b/jGxFHc+duTx8a1kG5YoqHUmwIqinRfbLUpmir2qK8K2t5K++U+
nlX6Vkg1Catn3/wWTktvpba49G+jNbNkxvQsLqZNX09O7iv4iuq/nxDZFNxG
PRm7RpzyKKHpUwfln83xp0/90iI1NrSTl2dF5AGxUmo+9PD84CBPmnpl3rEb
+9rJ9nCR09fSMvKeMmWDlYMPhV7YZ/5jf1rLd9HtDgYVdCCk882KFf705Mgo
wx/9vnLVQ+Pz9SpJZsC2z0s/B1JDihTH07edelvuOSC1uYokXy29/SA2mL4c
1BxqmsS9H2wXuJ1iVk2bpPb7jA0JpSvGPs1u1e3kWDFW9KBzDUUJeS4RLXjz
y/nmbHM52eZAsc1BYOvfy9Z3jq1fCts5X7bzKffw+qZgnnMreJ8GnvcZ7Mt8
rqHtz59bgu95h6evXQ1+VwjP7xKew1wHme8/X4cluG6veK7bYlznCswtlcC6
hGJd2rEuV7GOd7CO5VjHbqx7GtY9GOvehDgZiThZjzjxRFx1Iq6sEFdvEIeD
epg4TEYcTkfc+iJuZacycfsZcZ6KOF90mInz78gL+UwmLwynMHmhjzwyRR6V
dTF59B55dxV5p4q8K0SeHkOenkGeyiGvtyOvDyCvd4ADVeDAb+CAJLjxBNyQ
BTcywBkPcMYTnJEDl76BS5rgUhs4ZgKO2YJj1uDeTHDPBdwzAifDwMlx4KQ4
uHoOXJ0Pri4Ch43A4fcnGA7ngNvG4LYTuK0Dzq8G5xvDGM7bwAty8EIIvOAM
j4yERyrhEeEXjHfM4Z1yTcY7kl2Mp+bAU9HwVCa81leL8dpueC0bHkyEB/nh
wafw5mR40xrePArP9rrOeDYfnt0EL8+El2Xh5WR4vAIePwiPs3lf7cOCOPGe
PLr64rrdZf5IcvS54ZleVUo7jNq0+ZcUUHJf0YKnnyIpYoJK9T6Pclq/Iifq
nn8htah+mzmqKoquflnX7Pe2nA5Y9h6srVhM64Q5rbqJ0XTGKvl2jWg5zQkV
G5T5poTWWY6OVAuIoUkG6rn3lcpIYkur8p6VpXRg0KaMmw9jKfGlyt3Zq0up
ODL1SVRzGfEHjNorcyeOJt5dLVFkzCHBd7XCxtrcuuvRHB+r6/Ek6RZ499Px
Ejr4Te+ZuDS3Hgi0Pt/7ZgIl7+NLVzlTTC92zvMd+q2SonbYDc+7l0jbdGr2
W18oorWanc/WlFfRi+lrmju9kqhE57eG2POFtHds/q31CdWUX58V+iUymQ7o
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
NDG6TnJhbQp12o0bH2KST6XhSelLPGtJ8cKtVVf50mjRtR5dO8M8KimIy/N2
raNks/CverLppNAZxlFenEtH3rslzblTTyvkHkVYrMygC50fc1rlc+jSrS8a
9s4NNE3xSN989UzSVvRz6RLMpvWPHAby72mkM2fqEzl8WfR2oJ3C7NpMLh9E
OfV1jaRCV6Q2dWfR3vj0THWHDEoNUThlvKuJ5OY5OEl9zyaXBxU1pvPSSFU1
b93N5iayq13UpMbNN4mrTe4vS5OpoJrT8fpwM0npP01bL55HEbevCUfsTaQ2
h095/L1aaKaS0f4obr4ZmMeMDamLo6aUPvN/PB/3kVNzzVtTQBVaCZ5Zy2Lo
q722ZqNsK+16+3KAmnUhCYd+OWjnFkmBqiYx3RGtNHCU+f3lgUVkaKcWPffl
a5LVvHVCcXMbZXgGb3v+oZjeWT1aOeF7EM07q90/vU87OR8SbS6Yx6Eah8g+
N0R8qX2U9dMf/89nm61OWhdcSpfvdMvm7vGmIU27X5kfbid/eb/U3K3ldKbt
UpfLcV+K6NTNkjvbTu1GRm2PL1VQY9qHYTOy/akyeOvxi3e5991z1Op0DlVy
vVw3f7FaELk5i6338m2nBrHVZeM3V5F35jsD39hgKvb1sroQ304Vo84f2KRb
TfVbLWyrNodS9M5KoWnc+/2mjusyKtz7ff3EhWOduff7m6Zu7Hv7YztZ+p+e
67++lu4ed/j2ivNf+2HmdN/u7q1bR+c1mw7qSsT+5+tTzCd9CNaop+k63WdD
G5P/8/WqkdrC1nMbqPPwtHMOf9Ff4oYpv6bI7EY6/bzhmPtfPJdx8S1U/bG/
tKJmcdRf7i9lq7vY5oyzzQNlm/PFNr+DrY832/lctj4ebK+zvY8SPncMz+ey
7eNl25/D9hyN7f8otjrKB+siV/vzuvhjHZt51vE71t3Q7Od1V0KcmPPEyVLE
lcgiJq4MEYfXEIcFiMNYxO3ATiZugxC3JYjzZsR5PyMmzt2RF0IjmLzgz2Ly
ohp5tAl55Ic8ikLe8W9j8k4uncm7ocjTcuRpFPL0HfL6I/K6EXmtAw68BAd2
ggNTwY0qcOMeuBENzkwEZypOM5zpdZbhkim41PWK4dIHcCwKHHsJjn0G9zTA
PQVwrwKcnA5O3gAnF4Grt8HVt1cYrpaBw0vAYW1wOA7c3gxujwC3DcD5y+B8
HTgfBC8sghck4IVr8MhheGQ3PFIL7+TDOxPhnXfw1FJ4aho8lQOvKcJrzfCa
BzwoAw9Ww4Px8KYZvHkT3nSCZyvg2V7w7GJ4OR1eFoGXX8DjWfD4XnhcrJ3x
/k14v8WT8X6/SqZOWIk6QRZ1gj3qinzUFeqoK7RRh/ihDglAHbIHdYsN6hZP
1C1+qHOCUedcQp3DQV0Ui7roGuoitjqq4IFvr6Yirl8rfYRbtoZTvTzf26O6
HFppMvLqnpH5tK9Ja3PYyEiaWndR6gp/GQlNjW8aurmAxor25//OH0UPNks2
9IsqJ5+J0brfowtphuek7srmKIq7d3jVrvpy0j82185dtZimGj+yXpUWTZ92
HzacMLScnPZJhNqFl9DgK5PvegfEUFW58hoVpTLKL7AYfkqrlLxldghrusYS
SaUnauqVkiTt6UouLKOB4zyNsi/Fkdbr+nV3D3No9eeC585zKujasNAT2bbx
NLVq0pqYCyWUYGNye/SASgowuvi+42QCfdzSNkvoXjEtCBG3uVtZSeIZ6x4O
sEykkfY3dz59VkTy4c+Xh4VVkeDw8ds8bZPIXX1uYV+/QtpYeNUt1qWarOyl
R8k4JtOOA+P8M/0LyCVZYNkO2xo6frPkrc79FOJfm6G98EU+qTcY9b+0r5Yk
F1arDnqVSiPe68078DCP1uwesuaaYR092LTnYGZhGs0IpqUfr+TS2F7D8y+t
rafg7sqDPj3pNC6gtfjl8RzqmlNUlbu6gUqCU/OFRmTSmw69oDX62XT4nvO7
AVqNFP2gsifgdSZNbRI46TYri9Q7nK8XRjWShcOgkn7+WRTeXVW1elQmHb28
Pn6IWhOZOGp2zvDJJscgm9t679NoCb+eoGdUEwmMX7b4t4AcKnrYVmPumkK+
j92auhc1U8aWHLNb4bmUpjdzkcWcJBJQb385I7OZlp7fuiQjK49G+J2sfxgd
T/HqN0cbcxWntEhFX7g1n3qVO4kZzYmlovS7R7vbWujb4rmVw4cWkuaEDaoD
XaLI9or9gCa7Vspq1NuROa+ILIbojT+Q94Yi5AY0mY5po+6y2J2xh4tJZUD/
hWe1Q6g7aIZ5dXgbKa1onnw3oIR0veu8ljr606zc5BVG69tpjHG41N3epVTy
wkhvhLUnDZ71LjxwTztFmlRfPnyvjK563chs4rygWWNXy92zbKfckNv7g8dV
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
ArPK/E/ptZPl6IiTbW0cUl3S6X95sScdnbzv5Y/+JDcuLj6TfKiMe58i0lBo
/II09Y+EnLZop/Xa51e395TTWumOXf4r/bhxUxPxwKGdml1OrhFPqaDQLn57
g+MBFPr1k/mP80frCg+q2DhX0mj3A47ez4OoYWU/rS9+7dTHoJETs6+Kksfc
5DvREkx11+qCJOPa6Vhj6Do9Da6/FD+oL1UMpf5BhXFHC9tpzg0nO/3RNaTe
b6JFuG0Y6Xnt833f3E6ac67kR3+qoQc1d3d15/667mL7v4vt+dEh7Ntp4Nnf
NRr7pW/x7JdWxbmwxzznwqRwPn0vz/l0tr43bPN52fruss3rYevbz/Y+bH38
2L4n27l7tvNxbPvM2fZHsa0LB+soHcesI1sdtQFxoo84KUWcDERcaSCutiCu
GhCHpxGHZxGHTYjbkYhbAWkmbsMQ5yaI8w2IcyfkBd89Ji8+Iy+0kEfHkUe2
yKPjyLso5N0EVybvBJGn15Gnx5CnfW8xeT3WlMlrM0Umr8XAgQXgwGhwYCy4
cR7ceDub4UYkOBMAzuwHZ5aCSx3gkge49BocmwqONXkyHPMG9yTBva3gXu8c
hpNm4GQGOCkMrkaAqw7g6iJwWLCG4XCLMMPhTnB7D7jNAbf79WY4XwrOHwLn
38ELT+EFC3ihFR6RhUcIHnGEdx7BO+7wzpA4xlMu8JQEPMV3g/HaU3hNDF6z
hAfT4cHH8OBv8OZbeDMT3iyDZ/Ph2eHw7GR4ORxe3g8vn4XHi+Bxf3i8Dd4/
A+8bwvsaqBNMUScEo04IQl3hj7pCHHUFWx2yAHVLIOqWDNQt42WYOkdsG1Pn
bNJn6hy2uoitjqobPmXZYqFc8n63Na51xhsKDa4X6zOnhCbeXtEcq5ZHcz26
h6d8CifTdcndShUcSmof1PCcW98/vnbWJNEokryeFF1Pdiyj4dPMI3siC2io
6a6Ydcuj6NDgigQh7vds1JDfbC1fRP7f/GaXToqmd1/7j3TwKiddi+SM2AfF
lO1sXO0rFEPh9+8XxxeUkYWSeuY9KW59tC5ve//WGPKwDpsT1FNKyksXH+9w
L6XGsJPqpbmx9ODa+mHbxpdS1QgDe5Np5WRR99DkfFQcjdf5qnBkAYfOZOSX
vdnKva8d8VE+3D+eviTdXqdsUEJO6mMPVk2rJGEP/uGcpwm0LmBG4MrDxfR0
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
aVjtMbrWlETN1x9ULlxeSPu2Dzk8sKWa+vfZcTWlJZlcH/ldLllfQG99rG+G
JtaQ9v31ARofU2j1rpbfjhjm07cjV4/oedZS6cu9Jg/40uimulDXEcM8mpXh
k6rhVEcZdlZJMiLp1JnQc+3KhlwKmXxZv82inr5Zfti3Qj6DNDimL5etyCGv
2Rdzbu9poDBLI985splkGb7CZBNl0/2roxQ4SxrJ1Hn1fP2YTNpuL6VYIp9F
Z7SPbYh500j+Z73U855lUaPRqtdBMpmUVWg/cZhCE9k6ZymMv5FNC9d6Vg2d
mk6NKjrKodz7tV4LZKdN4N6vKXX7NDQLpNLjmIMz8mWa6enJoc/FLHJJ+JNv
p1V+EimWTfPe9aCZDgXvrPh4OI+elhUEx9xJIC1tydknpFuoQn/ml+JD+fRM
QfeAzao4shrh6NrzoIXSV2uZPzYvoH4R35T6fo+mbDG9782y3PvTnOZTmtaF
1HNYvPWoG/e+/nEoR8a7lewF9XtsHIpIsftNSoBJGPX9tsb7iGIbuaol27Xf
K6bVcWk2s88Gk9wLsaDi8Da6cdPB5XxACYnX1U2+5+hP2wWbR4jocOufNtOJ
Gakc+no1Vn1Lfy869Obef/QrFh73QOBHv+LACQvv/ehXzL/iw7Uf/QZPPbx4
/ke/QamwkCVfb/mSi6lKwo+5zPqDvDov766g5F5jw3tM2esutv+72J4zsu3v
Gor9ycHYn3wT+5N/P8/YgfOMx3EujO08PlsfpN/rBDf0ezz07ue+nVboOz19
6M/9wMMwz8KJZ84I75ys31/nnaf5++svMHc7lme+Ods8brb3Yftc3rkbv7/O
20/799d5+16yXTe268x2Xo9tnznb/ii253ps/0ex1VGuiNsDiFt+PiZuBRHn
7ohzHcT5YeTFTOTF4IlMXhxGHr1CHn2/wuSRIvLOF3nnXMvk3QjkaTTy1DOW
ydNjyGsv5PXFr0xe14IDTuCAJzhwAdxoBDfiwxlurARn3oMzVuDMPHDJDlyy
Apc8wTFfcKyrk+HYB3BvGLg3ENwrAyddwcm+4KQjuBoLruaCqy/A4YvgsCY4
HARuR4Pbh8DtVHBexIrh/FRw3gBe+A4vJMELAuaMRxrhkQvwSF9fxjtb4J25
8M5ReEoMnroGT0nAa1LwWgW8lgMPxsKDR+DBLHjTHt6cAW/yT2c8uwSe7QfP
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
nsuWTxvgrwfuq01bhBOx6Maa/bvrq7HP9ceIJ6pliNg4aFNYQyLqZdPmLbxY
g8faT93crMvxoW9FZlVMEnQ9LydcHVkL6cyVv5YUVGBR54CFr3syAv4sPPRC
vwZ9Vz1mzZ5fhatrsv3P703BpP+k3+hc5aFZautXjwdcbPcM7Hyy6CPKhUxU
C6OqYXV1krviCB5eSB+8yBVPhbtDbcDRFi46Bk4P7HOoQWCtmKldVyrsx00q
zZbkIjbeobHTrhZLE6wSCwvSMCn2c27AiirMM98c+a/O/9cAz/h/df7vW+9d
/q/O/1GjB1Zj/tQhz/aReuHDDCSLO8teca1A1HM1k4vJ9aivdjrjdj0TR1we
TbcPKkfr8NrP/q4NcB27p9neNgsLne1zDqaXQX22cJKoUSNGiq2ZveNYNsLW
rbjrWVuKnbtC248pfUKghWhZ3L4ceOU/v3f0ewnC7S5VhHz7hAa33Q73d+Qi
z6L37bfhJTBPuT65P7MJIysGLxM1yYPGrI8WElL89as/Pq3c/zOcFmWP8TLJ
x56Ea1I6SsXwFXqzytauGY4H1puFqRZgVKNfosmcIsg93vxQfF0L3iSW7EmI
KcCcshjrOwsLodaqUeL2pgVlYq3lG68X4rCNs+Of9QUoEG46ID+hFRsMbF9J
mBThN/f+4ejIPPh9U9d7eL4VmSYOV1/OLEaWgmOKUVkODPOrW+qaWhGh/+VP
wZ9i1Nh2rNr+NQuSwfI6HIM2vHiT/GtrEQe6EnItS0dnQrKpN3lBTBuEHi8s
DX9eAq/mZj1FxXS8dH6X3TStHQ/sRHWi+etJLDI80mtxKpPnrPtdrOeMtrRv
RJn2jQTTvpExtF83mPbrDtB+3QV0TqqPzjNm0Tmp/+h8uhOdT39H59NZ9btY
dVPHUh3sMqqDnU/16sWo/0gG9R95+r/+I9T37Tb1fftK/Rn/129Xlvrt2lO/
XXulWX+3XufngZDSqdL/1aLyStTW9xJhWOFvHlZ9swvbtcd3KjXWYo7GySan
uDDcO3PP9d8+6pQvCo8/SdZheVas8YN/+/kHHnlXeHdBdenXey806zBypku4
eMh7BJ2ZvPvf86/vK6PTSo3rcGHU/r4Nfe+x+EKpw07fLmzc1lojfLAOix5k
P1WVCWf+nfU6rPe9T58zjz6nKX3OlfS99tP30qXvxRoHVp9iVn89Vl8YVj3z
/9XhfEHzfoLmnVU/ilX3gHlej7HPnLU/ivVcj3U/SpfWXS+tuwBadxG0TiNo
nRZGCNapLK1rSVrXR2hdyxIHookDcsSBHcSNTOJGOHEjiDjziTjjRpzhEJeM
iEufiEuaxLGvxDEd4tgM4l4icW8ice8NcfImcbK3QcBJL+KqH3FVh7hqRRyW
JA7PIg5nErd/E7ejiNtWxPlY4vx54vxa8oICecGPvNBLHvEmj8wkjySTdzrJ
O7vJOxfIU03kqdfkqWXktb/kNXfyWj55cDN5cAh5UPKvwJsx5M2D5E0n8ux7
8uwl8uxv8vIB8nIOeVnOWeDxh+TxIeTxleT9TeR9V/J+OuWEQsoJoJxwlXJF
AeWKcVMFuYKVQ+ZQbvlFueUa5RZWzmHlIlaOuph+IX7tzwK0Gl454xoTBYfX
Rp05Y8uwPtZt8sjxRVD5MCJC2igam+4pRj6+WY7rJ2YdLZ9XDLOsBUOG9MXg
2+OAsxskKnH+vdXJrVs5EI+Qv7j2cRzyWvaH9z2qQuuA7OhOuxKYXcxQcd2Q
gEMRj48sn1uNXX8/XVr8Xylmbh2Zs/lSIpK6a9/UpPKwz3S86/WSMviZjTLZ
uCsJb6VE7/5Rq4UNh5s+eHYFTtclaN2ZmQzn3S9Nil/VYHNZj7HltUpsH/3F
2ONXMqzit21QbuLzSSigeFRrFe4f3n3zRW4KZPdesLw2hQe7Keu7LhlUQ7Ju
3e7Apx8xKMMlaqZhNZ64aEUu4Odt1ez00CR+3hZeqbyqmJ+3XbT2JhdK1kK7
vTtN1yQN59tULy0LrYKqwRb9r4W1mHZ1ES98cTo+G/uYNFVXwu7IwZ6uW3Wo
/3qt6PrkDFgpmj/bIlyJ56svZsca1EPB3CTww+BMyFgOi781qwKDan9cyhvf
gN4rXt8etWbCccj6xMX65eiPeGeWV9EA+9ESbUPLsqAUNurWTQt+7lVLVHEO
aETSAqOI52nZkAj2S8q7Xoqw+udxtyz4+Up1gY3YhxyUOfyabfG0BLayuTP3
LGuCyJ5d7zPe5iIwcNH0pg8cbPDatsJr1GfslBPz3fU8D6dVd3L+yy3Gj1fr
vnZXf8ZCu4MSVwPykXPyoO83XhFa1/uq+4U2ozrDJV/DgM+Zq+M3/NdRiIb6
62/W7W5BilDXfv3WApwUf3lSY1AheJfrdLhJLegZNnu9aGghnOI7duv+69fz
uS1USbkVpy0lKhfYF0FxwpOGy0fy0DvevmHAtRVtH5WKL2kXQ76jMafAJwcB
3WMUNna3wnNLsHe4GAerTM9PHZmRhUBPI7ukbW2wP9OcpsHlYEL+XG2vbxnM
3MW63/WTnjOuoucR/fQ8grW/q5D2386l/bdhtP/Wks49+dC5p1o698SqI/GS
6vw8ozo/V6jOz2+qmzqW6itmUH3FeKprvY3qWhtQvXpWP5Fu6uPWQn3csqmP
mxX1z82j/rl91Bd7c0G4/s0TXbhkV3Eo/SsPG+T+fslOf4cpD+fc/Lf/edwB
meH/9j/3Bzz1/XUvGGHHnCZfPNeFWsvFVpNbaiCRJ34ocF4Ijv+V03pwvgsx
hRNEAxRqUetXkz30XQjCzormxl3qwsHVE+ZkaNfCT2xm+bMxoYhztbD5l09E
/0444M7PJ1lR3+M28fPJkqNDTv0713Zhx/G17kdqobh7ePg3S/bfWa/znt7X
it43mt7Xgj5nEn3Orv99Tsb3Yo0Da9xYfYpZ/fVY88iqZ86qw8mqH8Wqe8A6
r8faZ87aH8V6rse6H8XKUa9pXd+kdd2WJ1jX74kDUcSBThMBBwaIG3+IGz/a
Bdy4RJxxJs78lBBw5jNxSUhYwCVL4tJ34lgLcWwdcWy8roB734h7rU4C7o18
LeDkRuJkOHFyL3H1NHF1F3HVkTg8jjjsQxyOI253EbdziNvqxPkK4vyfdwLO
i0UKvOBJXhAlL0iQR0Y7CTxynDwSQt5RJe+IkXecyFOd5KmD5KlV5DVN8loh
eY3lwQzy5lryZvcKgTcDyLNzyLMt6QLPLiAvB5OXRcjLtuRxK/K4KXnclbx/
ibxvT96/SjkhgnJCGuWEy5Qr1lCu6KFc0U85xIFyyEXKIamUW85RbpnbKsgt
byjneFPOUfYX5BwLykW7KBddolzEylHqdzNVD14pQHDZgrNpY6NQK3Lx5lPL
Ujw8oX5ylU8hjniP2/M88AM6j/3RmtlShplOfZmXw4owJIyzrg0xmNHsb//s
cAWUarO0NxYW4+G+8JOmtbG43LfIq6e9Eqpms/VLejgQCzM/tMw5Hqu9bTZt
seFicWxNnaJ0KUYKqddck05E9paY8fOEeai12KJxYXUZNu1rDmzqSUTA+y0T
bz6ogeIPi62TrpSjO3W7SnxqEk4tzDMqHlaLIVEbV78sr8DHNtETTz2SEfrk
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
0QoX9nXWfTLouVx6biU9V51+pwP9zmD6naz3Yo2DFo3bDxq3Eho31jiz4sKK
IyvuVwkntYSTCMIJC1dKhENfwuFLwiELt1qEcxPCeQbhnJUXrDzKp7zzprzz
prxj5SkrrxWIB7jEA37EAyzeYPHMUuIlGeKlQeKlSV0CHhunIuCxFOIxP+K9
O8R7NcR72sSTi10FPBlHPMniVVZ/PRZv6xHP7ySe/0M8z9IFlo6wdId1Xo+1
z5ylg6toXe8A6WYZ6SbrexRLly+RjnuSjieTjrN035Z8whnyCcHkE1rIV4B8
RQP5iq/kQ2rIh+SQD9HeK/At/5FvUVov8C3PyOecJZ/DJZ+zZpLAF3WTL3pK
vojlo3Rid82IbwrH4SX+zzXH+2JHnLfGE91YjJr3vdeZ70cL2ozzLI38sXvk
jWFLtydA9mF3jlphDEI/B2Ll7ico39lmuksxBZIjgkRXZMdBseJ5j+nlZxC5
ND7wn3IahC5w10xMS8T7hc23lUKf4+/pQJtl/PlK3eRN1RJGKfgQ2W5/ojYY
YwoCnX6szILOI9V+BW4qXivqOs0WCsGQNgkdsXU5mBWap7PdMB3mOuKdA0te
4yDP0HajLtt3DdD3LmnyvYbke0/T90Z9+t74iL43svZ3idP+OmfaXydF++tY
5xpY50lZ9btY9dNY9epZ/QJYfZpY/TH9qC95GfUl96W+5CX7PGfd8KrAgvcm
HUd+J2Kmy3Gh+l4O5IWzgq01K7GkQ2j03p9J+JsoHlzQyEWF9HTTwk+V2P0v
svTGl2RscxFt1Miux66iIbt67lRB99iPpOunU/BnRKf3jpAG5NeOuh2lVo35
VxZIcT6kYOxjh3Nlbo0ov5O372tlNdQuea29vz8V0puGntRazMPmnyf0pa7U
QDhrz7ykzFSYqRUZlI/kwbqCmz1UqRZnm5JXeyqkwdXo5d7yV42QzF0zsLyk
Fks/D57wvZGGp3/VTF/oNeKzwx3DSSfrcEKqsuNEZxq03DVOX+ttwFi9SSeL
hDkwVMg38l2fzverOpItjxrg9/bzjSBfDpxWz1mt5Z+OGU/+RHttasCclNsx
t+ZycffbVKND39Kx/sO6yU8H6sFdfK/P/Q0XKhM1ru1bm4E/k6Zz/UProWWx
OrlXsR4h/RGy5TczsKnEqKLdpB4HN2+07ePr19DEi2vq+frl7rVH7AhfvzJb
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
29f2tX1tX9vX9rV9bV/b1zLa/wHaD/wz
       "]], {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}, {
      RGBColor[1, 0, 0], 
      DiskBox[{2.3399999999999996`*^-6, 2.3399999999999996`*^-6}, 
       2.9250000000000004`*^-8]}}, {
    DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
     DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "ScalingFunctions" -> None}, 
     PlotRange -> {{-7.897499999999999*^-6, 
      7.897499999999999*^-6}, {-7.897499999999999*^-6, 
      7.897499999999999*^-6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.50000000000001`}, {7.5, 
                112.50000000000001`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -90.66027088036118}, 
                    Offset[{4., 0}, {7.5, -90.66027088036118}]}, {{
                    7.5, -39.87020316027088}, 
                    Offset[{4., 0}, {7.5, -39.87020316027088}]}, {{7.5, 
                    10.919864559819414`}, 
                    Offset[{4., 0}, {7.5, 10.919864559819414`}]}, {{7.5, 
                    61.709932279909715`}, 
                    Offset[{4., 0}, {7.5, 61.709932279909715`}]}, {{7.5, 
                    112.50000000000001`}, 
                    Offset[{4., 0}, {7.5, 112.50000000000001`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -110.9762979683973}, 
                    Offset[{2.5, 0.}, {7.5, -110.9762979683973}]}, {{
                    7.5, -100.81828442437924`}, 
                    Offset[{2.5, 0.}, {7.5, -100.81828442437924`}]}, {{
                    7.5, -80.50225733634312}, 
                    Offset[{2.5, 0.}, {7.5, -80.50225733634312}]}, {{
                    7.5, -70.34424379232517}, 
                    Offset[{2.5, 0.}, {7.5, -70.34424379232517}]}, {{
                    7.5, -60.186230248306906`}, 
                    Offset[{2.5, 0.}, {7.5, -60.186230248306906`}]}, {{
                    7.5, -50.028216704288944`}, 
                    Offset[{2.5, 0.}, {7.5, -50.028216704288944`}]}, {{
                    7.5, -29.712189616252825`}, 
                    Offset[{2.5, 0.}, {7.5, -29.712189616252825`}]}, {{
                    7.5, -19.554176072234867`}, 
                    Offset[{2.5, 0.}, {7.5, -19.554176072234867`}]}, {{
                    7.5, -9.396162528216603}, 
                    Offset[{2.5, 0.}, {7.5, -9.396162528216603}]}, {{7.5, 
                    0.7618510158013545}, 
                    Offset[{2.5, 0.}, {7.5, 0.7618510158013545}]}, {{7.5, 
                    21.077878103837474`}, 
                    Offset[{2.5, 0.}, {7.5, 21.077878103837474`}]}, {{7.5, 
                    31.235891647855535`}, 
                    Offset[{2.5, 0.}, {7.5, 31.235891647855535`}]}, {{7.5, 
                    41.39390519187359}, 
                    Offset[{2.5, 0.}, {7.5, 41.39390519187359}]}, {{7.5, 
                    51.551918735891654`}, 
                    Offset[{2.5, 0.}, {7.5, 51.551918735891654`}]}, {{7.5, 
                    71.86794582392777}, 
                    Offset[{2.5, 0.}, {7.5, 71.86794582392777}]}, {{7.5, 
                    82.02595936794583}, 
                    Offset[{2.5, 0.}, {7.5, 82.02595936794583}]}, {{7.5, 
                    92.18397291196389}, 
                    Offset[{2.5, 0.}, {7.5, 92.18397291196389}]}, {{7.5, 
                    102.34198645598195`}, 
                    Offset[{2.5, 0.}, {7.5, 102.34198645598195`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["16", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -90.66027088036118}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["17", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -39.87020316027088}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["18", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 10.919864559819414`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["19", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 61.709932279909715`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.50000000000001`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"SunsetColors\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"15.569548748929842`", ",", "20.078856813003874`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8102451768039017`*^9, 3.810245194020885*^9}, 
   3.8102453647106647`*^9, {3.8102454348372307`*^9, 3.8102454573769855`*^9}, 
   3.810292223909192*^9, {3.8102991153611665`*^9, 3.8102991442639246`*^9}, {
   3.8103122207421308`*^9, 3.8103122260569253`*^9}, {3.8103166465717535`*^9, 
   3.8103166664017525`*^9}, {3.8103167578523226`*^9, 3.8103167770021386`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.810245536042729*^9, 3.810245537946639*^9}}],

Cell[CellGroupData[{

Cell[BoxData["intplot"], "Input",
 CellChangeTimes->{{3.8102383518513355`*^9, 3.8102383527239995`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxk3WvItm1al/FJS8ioTKcap5GWSvhBBj+YyGRjSU1koVYiFiYuRtMxddK0
KJGKwoRGNMvSRG3hgkYwW6COt+aMOqWWo7lozAwEM7CcZPyQikTv/f9tN8/+
fLrY4OW+juM4z/e/Pdd5Hse+/86P/bQP/4R3eNGLXvRX3/NFL/r/n+/1YV/0
u972uv/+4PMbf+3P/blXfcATf87f/Acf8EH//ifjv/sLH/qv/897PPE/ffU7
v/yrX/vf4m/50Td+/Yd/z0/EP/Cqv/ae7/iyJ/7pb36/r/ymT/+v8S+/99te
+vHf9ePxu375133Ji1/6xL/313/cu3zXX3hr/IGf+7Iv+Kw3/pf4T/3cD/+a
93rJE3/yx7zu837kNT8Wf95bXvVLf+vf/Wj89//gO/yl3/dbnvhffNO3vu1/
fPKPxN/5ez7rU7702384/rEveZ+fftWLn/h/v9PPfMz//aT/HP/qz/mqH/+6
b/uh+KX/86M+4qPe9Ylf/lEvfss7f+IPxn/4e7//j33rt74l/rOv+Nvf/Snv
8sSvff0rP+hln/AD8bv8/rd/9j/8i/8pfsVv/8RP/cWX/cf4k37VWz/2z3z3
98V/76c+5CPf8GnfG3/Hd337H3+Pd/8P8c9+zfv+oc/9zjfHL/k7/+z9f/JT
vif+4Ne85H1e+Zu/O/70P/EFv/urHt4Uf/nLf+Ul7/BJb4zf/K6f8Rs+7jd9
Z/z2t//UO77pW74j/gPf8Pqf/6Nvfnha/9d+8U/8ut/2hvh/vd9ffvP3f+o3
P33/L330N73uO/5N/GXf/sFf8WHv9q/in/8b7/357/bqb4y/6At/x898/We8
Pn7lu//st73Pb/3ap+v1Vf/2i//lG746fv8//U4/9Jo3/aOn9Xr1P/7cz/yN
X/i0Xj/5lq9925//rKf7960v8Afij/yEF/77+Jf/5At/L/7Qx++Lv/olL4wn
fvvrXhhv/E8e5xN/yON841/4xRfWI/6Kx/WK/8jjesZve/0L6x1/3+P1iL/y
8XrFn/l4PeNXPV7v+GWP98PT3//8F+6X+E2P91P8pY/3W/yax/sxfuXj/Rq/
+PF+jn/mFS/c7/FHP/7/8DS+x/9f4vd9/P/pabyP/7/F7/T4/+PT+D/7hf9f
47c+/v/8NJ/H/9/jb3jMg6f5PeZF/Ncf8+Rpvo95E3/EYx49zf8xr+L3fsyz
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
/sD80f07f2D+wPzR+swfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7o788fmD8w
f2D+6PrMH5g/MH9g/mh88wfmj8Y7f2D+aPzzB+aP5jN/YP5ofvMH5o/mO39g
/mj+8wfmj9Zj/sD80frMH5g/MH9g/sD8gfkD8wfmD8wfh8sl/sD8gfkD8wfm
D8wft2/37cN6++rdPkm378WtY37r0t46g7du1K0Dcs9133N699zF3Ud790Xd
99z3vcV9DnV/V1xP4PvJH5g/MH9g/sD8gfkD8wfmD8wfmD8wf7T+8wfmj75/
/sD8gfkD8wfmj67X/IH5o/WaP1qv+aP7d/7A/NH9O39g/sD80frMH5g/MH9g
/sD8gfkD8wfmD8wfmD8wf2D+6O/PH5g/MH9g/uj6zB+YPzB/YP5ofPMH5o/G
O39g/mj88wfmj+Yzf2D+aH7zB+aP5jt/YP5o/vMH5o/WY/7A/NH6zB+YPzB/
YP7A/IH5A/MH5g/MH4fLIf7A/IH5A/MH5g/MH5g/bt/u24f19tW7fZJu34tb
x/zWpb11Bm/dqFsH5J7rvuf07rmLu4/27ou677nve4v7HOr+rriewPeTPzB/
YP7A/IH5A/MH5g/MH5g/MH+0/vMH5o++f/7A/IH5A/MH5o+u1/yB+aP1mj9a
r/mj+3f+wPzR/Tt/YP7A/NH6zB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/ujv
zx+YPzB/YP7o+swfmD8wf2D+aHzzB+aPxjt/YP5o/PMH5o/mM39g/mh+8wfm
j+Y7f2D+aP7zB+aP1mP+wPzR+swfmD8wf2D+wPyB+QPzB+YPzB+Hyx3+wPyB
+QPzB+YPzB+YPzB/3L7dtw/r7at3+yTdvhe3jvmtS3vrDN66UbcOyD3Xfc/p
3XMXdx/t3Rd133Pf9xb3OdT9XXE9ge8nf2D+wPyB+QPzB+YPzB+YPzB/tP7z
B+aPvn/+wPyB+QPzB+aPrtf8gfmjdZo/Wq/5o/t3/sD80f07f2D+wPzR+swf
mD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7o788fmD8wf2D+6PrMH5g/MH9g/mh8
8wfmj8Y7f2D+aPzzB+aP5jN/YP5ofvMH5o/mO39g/mj+8wfmj9Zj/sD80frM
H5g/MH9g/sD8gfkD8wfmD8wfh8sZ/sD8gfkD8wfmD8wfmD8wf2D+uH27bx/W
21fv9km6fS9uHfNbl/bWGbx1o24dkHuu+57Tu+cu7j7auy/qvue+7y3uc6j7
u+J6At9P/sD8gfkD8wfmD8wfmD8wf7T+8wfmj75//sD8gfkD8wfmj67X/IH5
o/WaP1qn+aP7d/7A/NH9O39g/sD80frMH5g/MH9g/sD8gfkD8wfmD8wfmD8w
f2D+6O/PH5g/MH9g/uj6zB+YPzB/YP5ofPMH5o/GO39g/mj88wfmj+Yzf2D+
aH7zB+aP5jt/YP5o/vMH5o/WY/7A/NH6zB+YPzB/YP7A/IH5A/MH5g/MH4fL
Ff7A/IH5A/MH5g/MH5g/MH9g/sD8cft23z6st6/e7ZN0+17cOua3Lu2tM3jr
Rt06IPdc9z2nd89d3H20d1/Ufc9931vc51D3d8X1BL6f/IH5A/MH5g/MH5g/
MH+0/vMH5o++f/7A/IH5A/MH5o+u1/yB+aP1mj9ar/mj+3f+wPzR/Tt/YP7A
/NH6zB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/ujvzx+YPzB/YP7o+swfmD8w
f2D+aHzzB+aPxjt/YP5o/PMH5o/mM39g/mh+8wfmj+Y7f2D+aP7zB+aP1mP+
wPzR+swfmD8wf2D+wPyB+QPzB+YPzB+HyxH+wPyB+QPzB+YPzB+YPzB/YP7A
/IH54/btvn1Yb1+92yfp9r24dcxvXdpbZ/DWjbp1QO657ntO7567uPto776o
+577vre4z6Hu74rrCXw/+QPzB+YPzB+YPzB/tP7zB+aPvn/+wPyB+QPzB+aP
rtf8gfmj9Zo/Wq/5o/t3/sD80f07f2D+wPzR+swfmD8wf2D+wPyB+QPzB+YP
zB+YPzB/YP7o788fmD8wf2D+6PrMH5g/MH9g/mh88wfmj8Y7f2D+aPzzB+aP
5jN/YP5ofvMH5o/mO39g/mj+8wfmj9Zj/sD80frMH5g/MH9g/sD8gfkD8wfm
D8wfh8sN/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzx+3bffuw3r56t0/S7Xtx
65jfurS3zuCtG3XrgNxz3fec3j13cffR3n1R9z33fW9xn0Pd3xXXE/h+8gfm
D8wfmD8wf7T+8wfmj753/sD8gfkD8wfmj67X/IH5o/WaP1qv+aP7d/7A/NH9
O39g/sD80frMH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+6O/PH5g/MH9g/uj6
zB+YPzB/YP5ofPMH5o/GO39g/mj88wfmj+Yzf2D+aH7zB+aP5jt/YP5o/vMH
5o/WY/7A/NH6zB+YPzB/YP7A/IH5A/MH5g/MH4fLCf7A/IH5A/MH5g/MH5g/
MH9g/sD8gfkD8wfmj9u3+/ZhvX31bp+k2/fi1jG/dWlvncFbN+rWAbnnuu85
vXvu4u6jvfui7nvu+97iPoe6vyuuJ/D95A/MH5g/MH+0/vMH5o++f/7A/IH5
A/MH5o+u1/yB5TuW741/+Y7lO5bvWL5j+Y7lO5bvWL5j+Y7lO5bvWL7395fv
WL5j+Y7le+u3fMfyHct3LN8b3/Idy/fGu3zH8r3xL9+xfG8+y3cs35vf8h3L
9+a7fMfyvfkv37F8bz2W71i+tz7LdyzfsXzH8h3LdyzfsXzH8h3L98P9fyvf
sXzH8h3LdyzfsXzH8h3LdyzfsXzH8h3LdyzfsXy/fbVvn9Tb9+72Mbp9KW6d
8Vs39tYBvHWdbp2Oe+76nqO75yLuPte7b+m+h77vFe5zovvv/pvj+H7Kdyzf
sXxv/ZfvWL73/ct3LN+xfMfyF8tfLH+x/MXyF8tfLH+x/MXyF8tfLH/7+8tf
LH+x/MXyF8tfLH+x/MXyt/Etf7H8bbzLXyx/G//yF8vf5rP8xfK3+S1/sfxt
vstfLH+b//IXy9/WY/mL5W/rs/zF8hfLXyx/sfzF8hfLXyx/sfw93P9H8hfL
Xyx/sfzF8hfLXyx/sfzF8hfLXyx/sfzF8hfLXyx/b1/q22f09o27fYBuX4db
p/vWXb119G5dpFvn4p5bvufQ7rmCu0/07vu573Hvc/n7nOX+u/nmLL6f8hfL
39Z/+Yvlb9+//MXyE8tPLD+x/MTyE8tPLD+x/MTys7+//MTyE8tPLD+x/MTy
E8tPLD8b3/ITy8/Gu/zE8rPxLz+x/Gw+y08sP5vf8hPLz+a7/MTys/kvP7H8
bD2Wn1h+tj7LTyw/sfzE8hPLTyw/sfzE8hPLz8Pd9/ITy08sP7H8xPITy08s
P7H8xPITy08sP7H8xPITy08sP3F9609f5ttn8/ZNu31wbl+DW6f61h29deRu
XaBb5+Ge273nsO6++rtP8u57ue8x73Pp+5zh/rv05iS+n/Kz9V9+YvmH5R+W
f1j+YfmH5R+Wf/395R+Wf1j+YfmH5R+Wf1j+YfnX+JZ/WP413uUfln+Nf/mH
5V/zWf5h+df8ln9Y/jXf5R+Wf81/+YflX+ux/MPyr/VZ/mH5h+Ufln9Y/mH5
h+Ufln9Y/h3uPpV/WP5h+YflH5Z/WP5h+YflH5Z/WP5h+YflH5Z/WP5h+Yfl
3+1Df/sK3z6Rt+/X7eNy6/LfOsu3buatg3br2tw6Bffc6T1HdPeF331+d9/G
fQ93n6ve3+H334U35/D9lG9YvmH5huUblm9YvvX3l29YvmH5huUblm9YvmH5
huVb41u+YfnWeJdvWL41/uUblm/NZ/mG5VvzW75h+dZ8l29YvjX/5RuWb63H
8g3Lt9Zn+YblG5ZvWL5h+YblG5ZvWL5h+XY478o3LN+wfMPyDcs3LN+wfMPy
Dcs3LN+wfMPyDcs3LN+wfMPyDcu32yf99r29fQxvX6rbZ+TWjb91gG9dx1un
69Zduefo77nIe87l7lu++9DuvoL7nug+V7y/c++/27D8wvILyy8sv7D8wvIL
yy8sv7D8wvILyy8sv7D8anzLLyy/Gu/yC8uvxr/8wvKr+Sy/sPxqfssvLL+a
7/ILy6/mv/zC8qv1WH5h+dX6LL+w/MLyC8svLL+w/MLyC8svLL8O95xFfmH5
heUXll9YfmH5heUXll9YfmH5heUXll9YfmH5heUXll9YfmH5dft0376rt4/e
7Yt0+1zcuuW3Du2tK3jrRN26H/cc9z2Xd89Z3H2zdx/Ufa9934Pc53JYPmH5
hOUTlk9YPmH5hOUTlk9YPmH5hOUTlk+Nb/mE5VPjXT5h+dT4l09YPjWf5ROW
T81v+YTlU/NdPmH51PyXT1g+tR7LJyyfWp/lE5ZPWD5h+YTlE5ZPWD5h+YTl
0+Ge+7Y/dNz+0HH7Q8ftDx23P3Tc/tBx+0PH7Q8dtz903P7QcftDx+0PHbc/
dNz+0HH7Q8ftDx23P3Tc/tBx+0NPH+jb1/P2abt9d24fhVsX+9Y5vXXrbh2i
W1finhO+577uPv67L/Pus7nvZe97Atz+w3H7D8ftPxy3/3Dc/sNx+w/H7T8c
t/9w3P7DcfsPx+0/HLf/0PjsPxy3/9B47T8ct//Q+O0/HLf/0HzsPxy3/9D8
7D8ct//QfO0/HLf/0PztPxy3/9B62H84bv+h9bH/cNz+w3H7D8ftPxy3/3Dc
/sNx+w/H7T8ct//wWW4fgHzC8gnLJyyfsHzC8gnLJyyfsHzC8gnLJyyfsHzC
8gnLJyyfsHzC8gnLp9uX/vYZvn0jbx+w29fl1um/dZdvHc1bF+3Wubl1C+45
1Huu6O4Tv/v+7j4RLH+w/MHyB8sfLH+w/MHyB8sfLH+w/MHyp/Etf7D8abzL
Hyx/Gv/yB8uf5rP8wfKn+S1/sPxpvssfLH+a//IHy5/WY/mD5U/rs/zB8gfL
Hyx/sPzB8gfLHyx/sPw53L4j+YPlD5Y/WP5g+YPlD5Y/WP5g+YPlD5Y/WP5g
+YPlD5Y/WP5g+YPlD5Y/WP7cvua3T+3tO3j7SN2+ILfO+63be+sw3rpat07K
Pfd+zzHecyl3n/Hdl4blD5Y/WP5g+YPlD5Y/WP5g+YPlD5Y/WP40vuUPlj+N
d/mD5U/jX/5g+dN8lj9Y/jS/5Q+WP813+YPlT/Nf/mD503osf7D8aX2WP1j+
YPmD5Q+WP1j+YPmD5Q+WP4fbxy5/sPzB8gfLHyx/sPzB8gfLHyx/sPzB8gfL
Hyx/sPzB8gfLHyx/sPzB8gfLHyx/bl/s2+f09q27fYhuX4lbJ/zWfb11/G5d
pltn456bvufg7rkGLF+wfMHyBcsXLF+wfMHyBcsXLF+wfGl8yxcsXxrv8gXL
l8a/fMHypfksX7B8aX7LFyxfmu/yBcuX5r98wfKl9Vi+YPnS+ixfsHzB8gXL
FyxfsHzB8gXLFyxfDncuRr5g+YLlC5YvWL5g+YLlC5YvWL5g+YLlC5YvWL5g
+YLlC5YvWL5g+YLlC5YvWL7g+pqfvsm3D+bta3b71Ny+A7eO9K0Leuu83bo9
tw7DPVd7z0lh+YLlC5YvWL5g+YLlC5YvWL5g+YLlS+NbvmD50niXL1i+NP7l
C5YvzWf5guVL81u+YPnSfJcvWL40/+ULli+tx/IFy5fWZ/mC5QuWL1i+YPmC
5QuWL1i+YPlyuHN28gXLFyxfsHzB8gXLFyxfsHzB8gXLFyxfsHzB8gXLFyxf
sHzB8gXLFyxfsHzB8gXLl9uH/fbVvX0Sb9+r28fk1qW/dYZv3chbB+zWdbnn
9O+5SyxfsHzB8gXLFyxfsHzB8gXLFyxfsHxpfMsXLF8a7/IFy5fGv3zB8qX5
LF+wfGl+yxcsX5rv8gXLl+a/fMHypfVYvmD50vosX7B8wfIFyxcsX7B8wfIF
yxcsXw5X90G+YPmC5QuWL1i+YPmC5QuWL1i+YPmC5QuWL1i+YPmC5QuWL1i+
YPmC5QuWL1i+YPmC5cvt0337rt4+ercv0u1zceuW3zq0t67grRN1635g+YHl
B5YfWH5g+YHlB5YfWH5g+YHlB5YfjXf5geVH419+YPnRfJYfWH40v+UHlh/N
d/mB5UfzX35g+dF6LD+w/Gh9lh9YfmD5geUHlh9YfmD5geUHlh+HqxNTf4hx
/SHG9YcY1x9iXH+Icf0hxvWHGNcfYlx/iHH9Icb1hxjXH2Jcf4hx/SHG9YcY
1x9iXH+Icf0hxvWHGNcfYlx/iHH9Icb1hxjXH+L0ab59N28ftdsX5/Y5uHWr
bx3SW1fu1gnC9QcY1x9gXH+Acf0BxvUHGNcfYFx/gHH9Acb1BxjXH2BcfwDj
1R9gXH8A49cfYFx/APPRH2BcfwDz0x9gXH8A89UfYFx/APPXH2BcfwDroT/A
uP4A1kd/gHH9Acb1BxjXH2Bcf4Bx/QHG9QcY1x9gXH+AZ7m6UvUHGNcfYFx/
gHH9Acb1BxjXH2Bcf4Bx/QHG9QcY1x9gXH+Acf0BxvUHGNcfYFx/gHH9Acb1
BxjXH2Bcf4Bx/QHG9QcY1x9gXH+Acf0BTl/326f39l28fbRuX5Rb5/7WLb51
KG9dMVx9+HH14cfVhx9XH35cffhx9eHH1YcfVx9+XH34cfXhx9WHN1714cfV
hzd+9eHH1Yc3H/Xhx9WHNz/14cfVhzdf9eHH1Yc3f/Xhx9WHtx7qw4+rD299
1IcfVx9+XH34cfXhx9WHH1cfflx9+HH14cfVh3+Wq0MnP7D8wPIDyw8sP7D8
wPIDyw8sP7D8wPIDyw8sP7D8wPIDyw8sP7D8wPIDyw8sP7D8wPIDyw8sP25f
79un9fbdu32Ubl+MW+f81q29dQix/MDyA8sPLD+w/MDyA8sPLD+w/MDyA8uP
xrv8wPKj8S8/sPxoPssPLD+a3/IDy4/mu/zA8qP5Lz+w/Gg9lh9YfrQ+yw8s
P7D8wPIDyw8sP7D8wPIDy4/D1a2UH1h+YPmB5QeWH1h+YPmB5QeWH1h+YPmB
5QeWH1h+YPmB5QeWH1h+YPmB5QeWH1h+YPmB5QeWH1h+3L7Ot0/n7bt2++jc
vgi3zvWtW4rlB5YfWH5g+YHlB5YfWH5g+YHlB5YfWH403uUHlh+Nf/mB5Ufz
WX5g+dH8lh9YfjTf5QeWH81/+YHlR+ux/MDyo/VZfmD5geUHlh9YfmD5geUH
lh9Yfhyuzq38wPIDyw8sP7D8wPIDyw8sP7D8wPIDyw8sP7D8wPIDyw8sP7D8
wPIDyw8sP7D8wPIDyw8sP7D8wPLj9oG/fX1vn8bbd+v2Ubl18W+dYyw/sPzA
8gPLDyw/sPzA8gPLDyw/sPzA8qPxLj+w/Gj8yw8sP5rP8gPLj+a3/MDyo/ku
P7D8aP7LDyw/Wo/lB5Yfrc/yA8sPLD+w/MDyA8sPLD+w/MDy43B1U+UHlh9Y
fmD5geUHlh9YfmD5geUHlh9YfmD5geUHlh9YfmD5geUHlh9YfmD5geUHlh9Y
fmD5geUHlh9Yftw+4Lev6+3Td/su3T4aty76raOLvd/F8gXLFyxfsHzB8gXL
FyxfsHzB8qXxLV+wfGm8yxcsXxr/8gXLl+azfMHypfktX7B8ab7LFyxfmv/y
BcuX1mP5guVL67N8wfIFyxcsX7B8wfIFyxcsX7B8OVwdZvmC5QuWL1i+YPmC
5QuWL1i+YPmC5QuWL1i+YPmC5QuWL1i+YPmC5QuWL1i+YPmC5QuWL1i+YPmC
5QuWL1i+3D7Rt+/n7eN2+/LcPgu3LjeWL1i+YPmC5QuWL1i+YPmC5QuWL1i+
NL7lC5YvjXf5guVL41++YPnSfJYvWL40v+ULli/Nd/mC5UvzX75g+dJ6LF+w
fGl9li9YvmD5guULli9YvmD5guULli+Hq+te/cBx9QPH1Q8cVz9wXP3AcfUD
x9UPHFc/cFz9wHH1A8fVDxxXP3Bc/cBx9QPH1Q8cVz9wXP3AcfUDx9UPHFc/
cFz9wHH1A8fVDxxXP3Bc/cBx9QPH1Q8cVz/w9J2/fYRvX8jb5+v2bbl1/nH1
+cbV5xtXn29cfb5x9fnG1ecbV59vXH2+cfX5xtXnMz71+cbV5zNe9fnG1ecz
fvX5xtXnMx/1+cbV5zM/9fnG1eczX/X5xtXnM3/1+cbV57Me6vONq89nfdTn
G1efb1x9vnH1+cbV5xtXn29cfb5x9fnG1ed7lqtTLl+wfMHyBcsXLF+wfMHy
BcsXLF+wfMHyBcsXLF+wfMHyBcsXLF+wfMHyBcsXLF+wfMHyBcsXLF+wfMHy
BcsXLF9uX/LbZ/b2Dbx9oG7fkFvHHjs/iOUPlj9Y/mD5g+UPlj9Y/mD5g+UP
lj+Nb/mD5U/jXf5g+dP4lz9Y/jSf5Q+WP81v+YPlT/Nd/mD50/yXP1j+tB7L
Hyx/Wp/lD5Y/WP5g+YPlD5Y/WP5g+YPlz+H6IsgfLH+w/MHyB8sfLH+w/MHy
B8sfLH+w/MHyB8sfLH+w/MHyB8sfLH+w/MHyB8sfLH+w/MHyB8sfLH+w/MHy
B8sfLH9uX+vbp/T2nbt9im7fDCx/sPzB8gfLHyx/sPzB8gfLHyx/sPzB8qfx
LX+w/Gm8yx8sfxr/8gfLn+az/MHyp/ktf7D8ab7LHyx/mv/yB8uf1mP5g+VP
67P8wfIHyx8sf7D8wfIHyx8sf7D8OVwfAfmD5Q+WP1j+YPmD5Q+WP1j+YPmD
5Q+WP1j+YPmD5Q+WP1j+YPmD5Q+WP1j+YPmD5Q+WP1j+YPmD5Q+WP1j+YPmD
5Q+WP7cv8u1zefui3T49t+8EVl8Kyycsn7B8wvIJyycsn7B8wvIJyycsn7B8
anzLJyyfGu/yCcunxr98wvKp+SyfsHxqfssnLJ+a7/IJy6fmv3zC8qn1WD5h
+dT6LJ+wfMLyCcsnLJ+wfMLyCcsnLJ8O19dEPmH5hOUTlk9YPmH5hOUTlk9Y
PmH5hOUTlk9YPmH5hOUTlk9YPmH5hOUTlk9YPmH5hOUTlk9YPmH5hOUTlk9Y
PmH5hOXT7dN+++7ePo23b9jtg4PlE5ZPWD5h+YTlE5ZPWD5h+YTlE5ZPWD5h
+dT4lk9YPjXe5ROWT41/+YTlU/NZPmH51PyWT1g+Nd/lE5ZPzX/5hOVT67F8
wvKp9Vk+YfmE5ROWT1g+YfmE5ROWT1g+Ha7PiHzC8gnLJyyfsHzC8gnLJyyf
sHzC8gnLJyyfsHzC8gnLJyyfsHzC8gnLJyyfsHzC8gnLJyyfsHzC8gnLJyyf
sHzC8gnLJyyfbh/w2zf29jG8fblunxqs/jmWX1h+YfmF5ReWX1h+YfmF5ReW
X1h+YfmF5VfjW35h+dV4l19YfjX+5ReWX81n+YXlV/NbfmH51XyXX1h+Nf/l
F5ZfrcfyC8uv1mf5heUXll9YfmH5heUXll9YfmH5dbi+IfILyy8sv7D8wvIL
yy8sv7D8wvILyy8sv7D8wvILyy8sv7D8wvILyy8sv7D8wvILyy8sv7D8wvIL
yy8sv7D8wvILyy8sv7D8wvLr9rm+fVdvH8HbV+v2ocH3U75h+YblG5ZvWL71
d5dvWL5h+YblG5ZvWL5h+YblW+NbvmH51niXb1i+Nf7lG5ZvzWf5huVb81u+
YfnWfJdvWL41/+Ublm+tx/INy7fWZ/mG5RuWb1i+YfmG5RuWb1i+Yfl2uD4i
8g3LNyzfsHzD8g3LNyzfsHzD8g3LNyzfsHzD8g3Lt/qkLN+wfMPyDcs3LN+w
fMPyDcs3LN+wfMPyDcs3LN+wfMPyDcs3LN+wfMPyDcu320f69kW9fQJvX63b
p+b+u+3mHL6f8g/LPyz/sPzr7y//sPzD8g/LPyz/sPzD8g/Lv8a3/MPyr/Eu
/7D8a/zLPyz/ms/yD8u/5rf8w/Kv+S7/sPxr/ss/LP9aj+Ufln+tz/IPyz8s
/7D8w/IPyz8s/7D8w/LvcHX/5R+Wf1j+YfmH5R+Wf1j+YfmH5R+Wf1j+YfmH
5R+Wf/WFWv5h+YflH5Z/WP5h+YflH5Z/WP5h+YflH5Z/WP5h+YflH5Z/WP5h
+Vffh+Ufln9Y/t0+0Lcv6u0jePty3T44t+/EfU9wn8vd37n334U3J/H9lJ9Y
fmL52d9ffmL5ieUnlp9YfmL5ieUnlp+Nb/mJ5WfjXX5i+dn4l59Yfjaf5SeW
n81v+YnlZ/NdfmL52fyXn1h+th7LTyw/W5/lJ5afWH5i+YnlJ5afWH5i+Ynl
5+HqhMtPLD+x/MTyE8tPLD+x/MTyE8tPLD+x/MTyE8tPLD/ro7f8xPITy08s
P7H8xPITy08sP7H8xPITy08sP7H8xPITy08sP7H8xPKzPjnLTyw/sfzE8vP2
kb59V28fw9s37PbpuX0zbh37uy/t7hO572Xve5D7XPH+Dr//Lr05i++n/MXy
t7+//MXyF8tfLH+x/MXyF8tfLH8b3/IXy9/Gu/zF8rfxL3+x/G0+y18sf5vf
8hfL3+a7/MXyt/kvf7H8bT2Wv1j+tj7LXyx/sfzF8hfLXyx/sfzF8hfL38PV
HZW/WP5i+YvlL5a/WP5i+YvlL5a/WP5i+YvlL5a/WP7Wt3T5i+Uvlr9Y/laX
dfmL5S+Wv1j+YvmL5S+Wv1j+YvmL5S+Wv1j+YvmL5W99yZa/WP5i+Yvlb+cC
lr+3z/XtG3v7NN6+aLdP0e0bcuv837rct47uPXd5z0ndcw13n/Hd93f32dz3
2vc90X2uep8z3H833xzH91O+9/eX71i+Y/mO5Xvrt3zH8h3LdyzfG9fyHcv3
xrt8x/K98S/fsXxvPst3LN+b3/Idy/fmu3zH8r35L9+xfG89lu9Yvrc+y3cs
37F8x/Idy3cs37F8x/Idy/fD1WGT71i+Y/mO5TuW79VlWr5j+V7dhOU7lu9Y
vmP5juU7lu9YvteHevmO5TuW71i+V2d7+Y7lO5bvWL5j+Y7lO5bvWL5j+Y7l
e3U4l+/V1Vu+Y/mO5Xt9JpfvWL5j+Y7le+e8lu9Yvt8+4Lfv7u1zefvO3T5Q
t2/L7bNw66LfOse3bumtQ3jrit06Qbfuxz2nf8/V3nNw91zK3Sd+92XefVB3
X8F9D3efS9/nLPff/dcT+H7yB+YPzB+YP7o+8wfmD8wfmD8a3/yB+aNxzh+Y
Pxr//IH5o/nMH5g/mt/8gfmj+c4fmD+a//yB+aP1mD8wf7Q+8wfmD8wfmD8w
f2D+wPyB+QPzx+HqdrZ/Ydz+hXH7F8btXxi3f0EdP/sXxu1fUGfH/oVx+xfG
7V8Yt39h3P6FcfsXxu1fGLd/Ydz+hXH7F8btX9CXwf6FcfsXxu1fGLd/Ydz+
hXH7F8btXxi3f2Hc/oVx+xfUbbZ/QR1W+xfG7V8Yt39BX2L7F8btXxi3f2Hc
/gXngu1fGLd/wfrPH7dP++2LfPuU3r6Bt8/X7ctz+2jcuvi3zvWtW3vrUN66
crdO1K3rcusw3HPT9xzjPVd09/HffbN3H9rdt3HfY97n8vc50f1dcT3R3z+f
7Q8Ztz9k3P4Q18f+kHH7Q8btDxm3P8T47A8Ztz/EeO0PGbc/xLjtDxm3P8R8
7A8Ztz/E/OwPGbc/xHztDxm3P8T87Q8Ztz/EetgfMm5/iPWxP2Tc/pBx+0PG
7Q8Ztz9k3P6QcftDxu0PGbc/5FmuzjN/YP7A/IH5A/NHdV/nD8wf1WWbPzB/
YP7A/IH5A/MH5g/MH5g/MH9g/qiPz/yB+QPzB+YPzB+YPzB/YP7A/IH5ozr/
80d1u+cPzB+YP+pjP39g/sD8gfmjOhLzB+aP1n/+wPzR9+tDf/pa3z6zty/k
7eN2+y7dPiq3L8Ktc37rFt86pLeu4K0Dduv23Dob99z7PYd6z33dcxZ33/Ld
53f3vdz3uPe9wn0OdX9XXE/g+8kfmD+6PvMH5g/MH5g/Gt/8gfmj8c4fmD8a
//yB+aN5zB+YP5rf/IH5o/nOH5g/mv/8gfmj9Zg/MH+0PvMH5g/MH5g/MH9g
/sD8gfkD88fh+gLwB+YPzB+YPzB/VCd8/sD8UR3P+QPzB+YPzB+YPzB/YP7A
/IH5A/MH5o/6vs0fmD8wf2D+wPyB+QPzB+YPzB+YP+oLM3/U52H+wPyB+QPz
B+YPzB+YP6o7NH9g/mj95w/MH33//IH54/Ylv32Eb9/P26fv9t26fXRuX4xb
5/7Wrb51aG/dyFvn7dZlunVSbt2Ce074nsu751zuvvC7T/Lu+7nvoe97i/sc
6v6uuJ7A95M/uj7zB+YPzB+YPxrf/IH5o/HOH5g/Gv/8gfmj+cwfmD+a1/yB
+aP5zh+YP5r//IH5o/WYPzB/tD7zB+YPzB+YPzB/YP7A/IH5A/PH4frI8Afm
D8wfmD8wf9RXYv7A/FHd5/kD8wfmD8wfmD8wf2D+wPyB+QPzB+aP+oTOH5g/
MH9g/sD8gfkD8wfmD8wfmD/qIzZ/1Bdo/sD8gfkD8wfmD8wfmD+qUzd/YP5o
/ecPzB99//yB+QPzx+07f/tE376ut0/j7bt2+yjdvii3z8GtW37rDN+6oLeO
362rdevc3LoS9xz3PRd5zxHdffV3n+jdt3Tfc9/3Fvc51P1dcT2B7yd/YP7A
/IH5o/HNH5g/Gu/8gfmj8c8fmD+az/yB+aP5zR+YP5rn/IH5o/nPH5g/Wo/5
A/NH6zN/YP7A/IH5A/MH5g/MH5g/MH8cru8Yf2D+wPyB+QPzR32I5g/MH/UJ
mD8wf2D+wPyB+QPzB+YPzB+YPzB/YP6or/T8gfkD8wfmD8wfmD8wf2D+wPyB
+aO+k/NHfeTmD8wfmD8wf2D+wPyB+aO6pvMH5o/Wf/7A/NH3zx+YPzB/YP7A
/HH7gN++vrdP5+27d/to3b44t8/FrUt/60jfuq+3DuOti3brEN26H/cc/T13
es9h3XMFd5/r3Rd133Pf9xb3OdT9XXE90fU5n/yB+QPzR+ObPzB/NN75A/NH
458/MH80n/kD80fzmz8wfzTf+QPzR/OePzB/tB7zB+aP1mf+wPyB+QPzB+YP
zB+YPzB/YP44XJ9K/sD8gfkD8wfmj/rWzR+YP+orM39g/sD8gfkD8wfmD8wf
mD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/NHfYrnj/qOzh+YPzB/YP7A
/IH5A/NHdbDnD8wfrf/8gfmj758/MH9g/sD8UQ7NH12v+eP2gb99nW+f1tt3
8fZRu32Rbh+T23fg1gm/dXtvHc1bt+7Wibp1V26dgntu955Du+ci7j7auy/q
vue+7y3uc6j7u+J6At9P/sD80fjmD8wfjXf+wPzR+OcPzB/NZ/7A/NH85g/M
H813/sD80fznD8wfrcP8gfmj9Zk/MH9g/sD8gfkD8wfmD8wfmD8O19eYPzB/
YP7A/IH5oz6n8wfmj/qQzR+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD
8wfmD8wfmD8wf2D+wPxRX/v5oz7V8wfmD8wfmD8wf2D+wPxR34T5A/NH6z9/
YP7o++cPzB+YPzB/9O/W+aPrNX9g/mi99L0/fb1vn97bd/P20bt9r26fmttX
4tZ5v3WXb53TW1fw1um6dW1unYd7bvmeo7vnLu4+2rsv6r7nvu8t7nOo+7vi
egLfT/5ofPMH5o/GO39g/mj88wfmj+Yzf2D+aH7zB+aP5jt/YP5o/vMH5o/W
Y/7A/NG6zB+YPzB/YP7A/IH5A/MH5g/MH4cfXCf+wPyB+QPzB+aP+mLPH5g/
6ls5f2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD
8wfmD8wfmD8wf2D+wPyB+QPzR3125g/MH63//IH5o++fPzB/YP7A/NFzjvmj
6zV/YP5oveaP1mv+uH3db5/m23f19km8fc1uH6LbF+TW6b91sW8d2lvX8dZB
u3WBbp2Le+76ntO75y7uPtq7L+q+577vLe5zqPu74noC30/+wPzReOcPzB+N
f/7A/NF85g/MH81v/sD80XznD8wfzX/+wPzReswfmD9an/kD8wfmD8wfmD8w
f2D+wPyB+ePwg+vS+fBx58PHnQ8fdz583PnwcefDx50P1+fY+fBx58PHnQ8f
dz583PnwcefDx50PH3c+fNz58HHnw8edDx93Pnzc+fBx58PHnQ8fdz583Pnw
cefDx50PH3c+fNz58HHnw8edDx93Pnzc+fBx58PHnQ8fdz583PlwfdmcDx93
Ptz6Ox8+7ny473c+fNz58HHnw8edD/dc3Plw18v58DF/tF7zR+s1f3T/zh+Y
P26f7ttX9/bBvH3rbh+p29fl9lG4dctvHeBbN/PWkbt1kW6djnuu+57Tu+cu
7j7auy/qvue+7y3uc6j7u+J6ovGdz86fG6/z5+POnxu/8+fjzp+bj/Pn486f
m5/z5+POn5uv8+fjzp+bv/Pn486fWw/nz8edP7c+zp+PO38+7vz5uPPn486f
jzt/Pu78+bjz5+POnz/LD64Df2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH
5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A
/IH5oz6e8wfmj9Z//sD80ffPH5g/MH9g/ug96vzR9Zo/MH+0XvNH6zV/dP/O
H5g/un/nj9uH/fZNvn1Ob9/B2wfs9t25fS5u3fhbZ/nWHb119G5dp1sH5J7r
vuf07rmLu4/27ou677nve4v7HOr+rriewPeTPzB/NP75A/NH85k/MH80v/kD
80fznT8wfzT/+QPzR+sxf2D+aH3mD8wfmD8wf2D+wPyB+QPzB+aPww/Wvfol
4+qXjKtfMq5+ybj6JePql4yrXzKufsm4+iXj6peMq18yrn7JuPol4+qXjKtf
Mq5+ybj6JePql4yrXzKufsm4+iXj6peMq18yrn7JuPol4+qXjKtfMq5+ybj6
JePql4yrXzKufsm4+iXj6peMq18yrn6Jvs/ql4yrX2L91S8ZV7/E96tfMq5+
ybj6JePql9h3o36J66V+ybj6JdZL/RLrpX6J+1f9knH1S9y/6peMq18yrn7J
6Yt9+9TevpG3T9vti3T7jNy6/LdO9a27eusA3rpRtw7IPdd9z+ndcxd3H+3d
F3Xfc9/3Fvc51P1dcT3ReM9n9UuMX/2ScfVLzEf9knH1S8xP/ZJx9UvMV/2S
cfVLzF/9knH1S6yH+iXj6pdYH/VLxtUvGVe/ZFz9knH1S8bVLxlXv2Rc/ZJx
9Uue5QfrzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8w
f2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfmj9Z8/
MH/0/fMH5g/MH5g/2qc5f3S95g/MH63X/NF6zR/dv/MH5o/u3/kD8wfmj9Zn
/rh9zW+f4dvX8/bRu32pbh+X29fg1um+dWNvncFbN+rWAbnnuu85vXvu4u6j
vfui7nvu+97iPoe6vyuuJ/D95A/MH81n/sD80fzmD8wfzXf+wPzR/OcPzB+t
x/yB+aP1mT8wf2D+wPyB+QPzB+YPzB+YPw4/WNfqX42rfzWu/tW4+lfj6l+N
q381rv7VuPpX4+pfjat/Na7+1bj6V+PqX42rfzWu/tW4+lfj6l+Nq381rv7V
uPpX4+pfjat/Na7+1bj6V+PqX42rfzWu/tW4+lfj6l+Nq381rv7VuPpX4+pf
jat/Na7+1bj6V+PqX42rf2X91b8aV//K96t/Na7+1bj6V+PqX9nXr/6V66X+
1bj6V9ZL/Svrpf6V+1f9q3H1r9y/6l+Nq381rv6V9VH/alz9q9OX/vaBvn1X
bx/D2/fr9sG5fR1unfFbl/bWGbx1o24dkHuu+57Tu+cu7j7auy/qvue+7y3u
c6j7u+J6ovGfz+pfmY/6V+PqX5mf+lfj6l+Zr/pX4+pfmb/6V+PqX1kP9a/G
1b+yPupfjat/Na7+1bj6V+PqX42rfzWu/tW4+lfj6l89yw/WkT8wf2D+wPyB
+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8w
f2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/NH6z9/YP7o++cPzB+YPzB/dA5s
/uh6zR+YP1qv+aP1mj+6f+cPzB/dv/MH5g/MH63P/IH5A/MH5o/bp/v2vb19
Im/ftNsH6PaluHXMb13aW2fw1o26dUDuue57Tu+eu7j7aO++qPue+763uM+h
7u+K6wl8P/kD80fzmz8wfzTf+QPzR/OfPzB/tB7zB+aP1mf+wPyB+QPzB+YP
zB+YPzB/YP44/GDdqp84rn7iuPqJ4+onjqufOK5+4rj6iePqJ46rnziufuK4
+onj6ieOq584rn7iuPqJ4+onjqufOK5+4rj6iePqJ46rnziufuK4+onj6ieO
q584rn7iuPqJ4+onjqufOK5+4rj6iePqJ46rnziufuK4+onj6ieOq584rn6i
9Vc/cVz9RN+vfuK4+onj6ieOq5/o3LD6ia6X+onj6idaL/UTrZf6ie5f9RPH
1U90/6qfOK5+4rj6idZH/cRx9RPH1U8cVz9xXP3E0yf99hW+fTZv37jbx+j2
vbh1zG9d2ltn8NaNunVA7rnue07vnru4+2jvvqj7nvu+t7jPoe7viuuJ5nM+
q59ofuonjqufaL7qJ46rn2j+6ieOq59oPdRPHFc/0fqonziufuK4+onj6ieO
q584rn7iuPqJ4+onjquf+Cw/WCf+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH
5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A
/IH5A/MH5g/MH63//IH5o++fPzB/YP7A/FGdifmj6zV/YP5oveaP1mv+6P6d
PzB/dP/OH5g/MH+0PvMH5g/MH5g/MH9g/rh96G9f5ttn9Pa9u32Sbt+LW8f8
1qW9dQZv3ahbB+Se677n9O65i7uP9u6Luu+573uL+xzq/q64nsD3kz8wfzTf
+QPzR/OfPzB/tB7zB+aP1mf+wPyB+QPzB+YPzB+YPzB/YP44/GBdqr87rv7u
uPq74+rvjqu/O67+7rj6u+Pq746rvzuu/u64+rvj6u+Oq787rv7uuPq74+rv
jqu/O67+7rj6u+Pq746rvzuu/u64+rvj6u+Oq787rv7uuPq74+rvjqu/O67+
7rj6u+Pq746rvzuu/u64+rvj6u+Oq787rv6u9Vd/d1z9Xd+v/u64+rvj6u+O
q7+rLpH6u66X+rvj6u9aL/V3rZf6u+5f9XfH1d91/6q/O67+7rj6u9ZH/d1x
9XfH1d8dV393XP3dcfV3PZdXf3dc/d3Tl/r2Sb199W6fpNv34tYxv3Vpb53B
Wzfq1gG557rvOb177uLuo737ou577vve4j6Hur8rriea3/ms/q75qr87rv6u
+au/O67+rvVQf3dc/V3ro/7uuPq74+rvjqu/O67+7rj6u+Pq746rvzuu/u6z
/GAd+APzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wf
mD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH+0/vMH5o++
f/7A/IH5A/NHdezmj67X/IH5o/WaP1qv+aP7d/7A/NH9O39g/sD80frMH5g/
MH9g/sD8gfmj97jzB+YPzB+3r/btw3r76t0+Sbfvxa1jfuvS3jqDt27UrQNy
z3Xfc3r33MXdR3v3Rd333Pe9xX0OdX9XXE/g+8kfmD+a//yB+aP1mD8wf7Q+
8wfmD8wfmD8wf2D+wPyB+QPzx+EH865++7j67ePqt4+r3z6ufvu4+u3j6reP
q98+rn77uPrt4+q3j6vfPq5++7j67ePqt4+r3z6ufvu4+u3j6rePq98+rn77
uPrt4+q3j6vfPq5++7j67ePqt4+r3z6ufvu4+u3j6rePq98+rn77uPrt4+q3
j6vfPq5++7j67dZf/fZx9dt9v/rt4+q3j6vfPq5+u7qn6re7Xuq3j6vfbr3U
b7de6re7f9VvH1e/3f2rfvu4+u3j6rdbH/Xbx9VvH1e/fVz99nH128fVb7fv
R/32cfXbx9VvH1e//fTtvn1Yb1+92yfp9r24dcxvXdpbZ/DWjbp1QO657ntO
7567uPto776o+577vre4z6Hu74rrieZ7Pqvfbv7qt4+r32491G8fV7/d+qjf
Pq5++7j67ePqt4+r3z6ufvu4+u3j6rePq9/+LD+YJ39g/sD8gfkD8wfmD8wf
mD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD
8wfmD8wfmD8wf2D+wPyB+QPzB+aP1n/+wPzR988fmD8wf2D+qE72/NH1mj8w
f7Re80frNX90/84fmD+6f+cPzB+YP1qf+QPzB+YPzB+YPzB/tE90/sD8gfkD
80d1NuaP27f79mG9ffVun6Tb9+LWMb91aW+dwVs36tYBuee67zm9e+7i7qO9
+6Lue+773uI+h7q/K64n8P3kD8wfrcf8gfmj9Zk/MH9g/sD8gfkD8wfmD8wf
mD8OP5hX/T/G9f8Y1/9jXP+Pcf0/xvX/GNf/Y1z/j3H9P8b1/xjX/2Nc/49x
/T/G9f8Y1/9jXP+Pcf0/xvX/GNf/Y1z/j3H9P8b1/xjX/2Nc/49x/T/G9f8Y
1/9jXP+Pcf0/xvX/GNf/Y1z/j3H9P8b1/xjX/2Nc/49x/T/G9f+w/vp/jOv/
4fv1/xjX/2Nc/49x/T/0VdD/w/XS/2Nc/w/rpf+H9dL/w/2r/8e4/h/uX/0/
xvX/GNf/w/ro/zGu/8e4/h/j+n+M6/8xrv+HcwX6f4zr/zGu/8e4/h/qMun/
4Zy0/h+nb/ftw3r76t0+Sbfvxa1jfuvS3jqDt27UrQNyz3Xfc3r33MXdR3v3
Rd333Pe9xX0OdX9XXE80//NZ/w/rof/HuP4f1kf/j3H9P8b1/xjX/2Nc/49x
/T/G9f8Y1/9jXP+PZ/nBPPgD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/
YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YP
zB+YPzB/tP7zB+aPvn/+wPyB+QPzR/8fzh9dr/kD80frNX+0XvNH9+/8gfmj
+3f+wPyB+aP1mT8wf2D+wPyB+QPzR+fQ5g/MH5g/MH9Ux2/+qK7G/NHfnz9u
3+7bh/X21bt9km7fi1vH/NalvXUGb92oWwfknuu+5/TuuYu7j/bui7rvue97
i/sc6v6uuJ7A95M/MH+0PvMH5g/MH5g/MH9g/sD8gfkD88fhB+Ouf9S4/lHj
+keN6x81rn/UuP5R4/pHjesfNa5/1Lj+UeP6R43rHzWuf9S4/lHj+keN6x81
rn/UuP5R4/pHjesfNa5/1Lj+UeP6R43rHzWuf9S4/lHj+keN6x81rn/UuP5R
4/pHjesfNa5/1Lj+UeP6R43rHzWuf9S4/lHWX/+ocf2jfL/+UeP6R43rHzWu
f5R/t+kf5XrpHzWuf5T10j/Keukf5f7VP2pc/yj3r/5R4/pHjesfZX30jxrX
P2pc/6hx/aPG9Y8a1z/KuWX9o8b1jxrXP2pc/yh1X/WPUodJ/yh/X/8o5xT0
jzp9u28f1ttX7/ZJun0vbh3zW5f21hm8daNuHZB7rvue07vnLu4+2rsv6r7n
vu8t7nOo+7vieqL1OJ/1j7I++keN6x81rn/UuP5R4/pHjesfNa5/1Lj+UeP6
Rz3LD8bJH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/
YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+aP1nz8w
f/T98wfmD8wfmD/6nT9/dL3mD8wfrdf80XrNH92/8wfmj+7f+QPzB+aP1mf+
wPyB+QPzB+YPzB/VuZg/MH9g/sD8UZ3w+aO6ffNHf3/+6Fzb/NE+0/nj9u2+
fVhvX73bJ+n2vbh1zG9d2ltn8NaNunVA7rnue07vnru4+2jvvqj7nvu+t7jP
oe7viusJfD/5A/MH5g/MH5g/MH9g/sD8gfnj8INx1X9wXP/Bcf0Hx/UfHNd/
cFz/wXH9B8f1HxzXf3Bc/8Fx/QfH9R8c139wXP/Bcf0Hx/UfHNd/cFz/wXH9
B8f1HxzXf3Bc/8Fx/QfH9R8c139wXP/Bcf0Hx/UfHNd/cFz/wXH9B8f1HxzX
f3Bc/8Fx/QfH9R8c139wXP9B66//4Lj+g75f/8Fx/QfH9R8c13/Qc2H9B10v
/QfH9R+0XvoPWi/9B92/+g+O6z/o/tV/cFz/wXH9B62P/oPj+g+O6z84rv/g
uP6D4/oPqouk/+C4/oPj+g+O6z+or4T+g+q86j/o7+s/6By0/oPOJeg/aJ+Q
/oOnb/ftw3r76t0+Sbfvxa1jfuvS3jqDt27UrQNyz3Xfc3r33MXdR3v3Rd33
3Pe9xX0OdX9XXE+0Puez/oPj+g+O6z84rv/guP6D4/oPjus/OK7/4LP8YBz8
gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/
MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YP1r/+QPzR98/f2D+
wPyB+aP3iPNH12v+wPzRes0frdf80f07f2D+6P6dPzB/YP5ofeYPzB+YPzB/
YP7A/FEdvfkD8wfmD8wf9SGaP6oLPn/09+eP6mbMH51jmz/aVzp/dH3mj9u3
+/ZhvX31bp+k2/fi1jG/dWlvncFbN+rWAbnnuu85vXvu4u6jvfui7nvu+97i
Poe6vyuuJ/D95A/MH5g/MH9g/sD8gfnj8IPv5Q/MH5g/MH9g/sD8gfkD8wfm
D8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8
gfkD8wfmD8wfmD8wf2D+wPzR+s8fmD/6/vkD8wfmD8wf7TuZP7pe8wfmj9Zr
/mi95o/u3/kD80f37/yB+QPzR+szf2D+wPyB+QPzB+aP6q7OH5g/MH9g/qhv
3fxRH4n5o78/f1Rnaf7o3PP80TmE+aPrM3/0nH7+uH27bx/W21fv9km6fS9u
HfNbl/bWGbx1o24dkHuu+57Tu+cu7j7auy/qvue+7y3uc6j7u+J6At9P/sD8
gfkD8wfmD8wfhx98D39g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+Y
PzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPz
B+aP1n/+wPzR988fmD8wf2D+aJ/i/NH1mj8wf7Re80frNX90/84fmD+6f+cP
zB+YP1qf+QPzB+YPzB+YPzB/VKd7/sD8gfkD80d9TueP+g7NH/39+aO6fPNH
dTLmj86tzR9dn/mj97rzR89Z5o/bt/v2Yb199W6fpNv34tYxv3Vpb53BWzfq
1gG557rvOb177uLuo737ou577vve4j6Hur8rrifw/eQPzB+YPzB/YP44/ODv
8gfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g
/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP5o/ecPzB99//yB
+QPzB+aP9rXPH12v+QPzR+s1f7Re80f37/yB+aP7d/7A/IH5o/WZPzB/YP7A
/IH5A/NHfR3mD8wfmD8wf9QXe/6oT9380d+fP6rjOn9UV2n+6Jzz/NH1mT/a
BzR/9Fx+/sD8cft23z6st6/e7ZN0+17cOua3Lu2tM3jrRt06IPdc9z2nd89d
3H20d1/Ufc9931vc51D3d8X1BL6f/IH5A/MH5o/DD/4Of2D+wPyB+QPzB+YP
zB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB
+QPzB+YPzB+YP/D/K+3Mo6uozgAuYtQDBgwFUdlURIRC2AViGFDLFhHDorIE
KYiEHSqiVltkVQwqyiLIGh4kCCIYkS2Qm7yNLdoammLYKYJoSxBQ2YU+Ht/v
45zPk+M5bf6Z83szb+bOvd83v7mTN/fiDxh/wPgDxh8w/oDxh9a/+APGH3p8
8QeMP2D8AeMPfQ9K/KHtJf6A8YfWl/hD60v8ofEr/oDxh8av+APGHzD+0PoR
f8D4A8YfMP6A8QeMP3QeIPEHjD9g/AHjDxh/6Lym4g/dv/hDx/0Wf+g4fOIP
HRdD/KHtI/7Q342KP/T/uOIPGH9o+cQfdt5uOw+rnVfPzpNk572w45jbcWnt
OIN23Cg7Doh9r9u+p2ffu7C/o7W/i7L/57b/t7DPoWy/wnoCtkv8AeMPGH8Y
dnwPf8D4A8YfMP6A8QeMP2D8AeMPGH/A+APGHzD+gPEHjD9g/AHjDxh/wPgD
xh8w/oDxB4w/YPwB4w8Yf8D4A8YfMP6A8QeMP2D8AeMPGH/A+APGHzD+gPEH
jD+0/sUfMP7Q44s/YPwB4w8Yf+h7s+IPbS/xB4w/tL7EH1pf4g+NX/EHjD80
fsUfMP6A8YfWj/gDxh8w/oDxB4w/YPyh88aJP2D8AeMPGH/A+EPnwRZ/6P7F
HzpPhPhDx20Vf+g4SuIPbR/xh75nIP7Q3/2IP2D8oeUTf8D4w87bbedhtfPq
2XmS7LwXdhxzOy6tHWfQjhtlxwGx73Xb9/Tsexf2d7T2d1H2/9z2/xb2OZTt
V1hPwHaJP2D8YdixHf6A8QeMP2D8AeMPGH/A+APGHzD+gPEHjD9g/AHjDxh/
wPgDxh8w/oDxB4w/YPwB4w8Yf8D4A8YfMP6A8QeMP2D8AeMPGH/A+APGHzD+
gPEHjD9g/AHjDxh/aP2LP2D8occXf8D4A8YfMP7QcRbEH9pe4g8Yf2h9iT+0
vsQfGr/iDxh/aPyKP2D8AeMPrR/xB4w/YPwB4w8Yf8D4Q+cZFX/A+APGHzD+
gPEHjD90/+IPnVdI/KHjfIs/dNw98Ye2j/hD30sTf+jvRMUfMP7Q8ok/YPyh
5RV/2Hm77Tysdl49O0+SnffCjmNux6W14wzacaPsOCD2vW77np5978L+jtb+
Lsr+n9v+38I+h7L9CusJ2C7xh2HH5/gDxh8w/oDxB4w/YPwB4w8Yf8D4A8Yf
MP6A8QeMP2D8AeMPGH/A+APGHzD+gPEHjD9g/AHjDxh/wPgDxh8w/oDxB4w/
YPwB4w8Yf8D4A8YfMP6A8QeMP2D8ofUv/oDxhx5f/AHjDxh/wPhDx+URf2h7
iT9g/KH1Jf7Q+hJ/aPyKP2D8ofEr/oDxB4w/tH7EHzD+gPEHjD9g/AHjD52X
WvwB4w8Yf8D4A8YfMP7Q/Ys/dB468YfOCyH+0HFaxR/aPuIPfY9Z/KHvFYg/
YPyh5RN/wPhDyyv+gPFHCfN2/2peVjvPnp03yc6DYcc1t+PU2nEH7ThSdlwQ
+563fW/Pvodhf1drfydl/+9t/49hn0vZfob1hl0uirb3Hu9sNC6+9tZG43O3
969o3Bd5+dH4uL7kc7ZrH42Hfcrsh/32icb3PuXR0Xja673V/Wre7dEln/8Q
jZ+DynY/MdHr0QFlW44q0Xg8oNwoen3Zr0u7HfuDOT58PHq9OKRsy2H3Y5fs
Dx4YzYdDyva8bTnsfihPSeW023E82JbDbmeXw64tHUvuN+Bv91+9vs5SnnTg
Kk9WtvvRPDP7ZT9sX9J+WW/5hqt/ecFN8G37ouv1PFZEeZZny8X52OP+v8cx
+/9Vvdp6oBwcH+b4tpzmvs9+z/uN/XiWOS+Y84Jt/ZVwnP95v3p/9fr3jd54
9frSft7x2tKx/K3P7X6oD7ud/ZztDTsd71/qYVf0fiStxO/RXtyXcLwWh6/y
87qe+xLWl4reh0zXcvE5x+d7rXzR7XQ9bO+H2L5x6tXvj9PtYXt/xPbPRu+P
0rRcsI1rymXLQT2xnnqh3jg/uKRy2XLbcsDUq61ntqNeS6hnPZ+20fKma71x
38n3pkXvU+fo+RHnMPVe0ucw52Xjh/orqRww5aBc5J+Nb+qX73FfzPoeRdF6
svnqqD+7P9qT45255hFl+qElfQ6/u3d28mdPXq8HtqccbA+zvW1Xyo/P2J77
H/iNa9//Vf4ti34vXduffgH74zrF/mD2RxxxHpSTpY3v7AHR7bT+u0Xvq+Z4
nD9xUti83cgD918/X7a3/RrKz/qMaD9lgZ633S9MeTkOn3Ndh2lvtuN8bDtR
Ti038/1Wyr+7d+mwu9jvzRGtZ/sc/VKdP37dvIz4RmEt34I7TjR7oEPYcZ4N
3sqfeSHCXJ+6HxkztG6TsKOdmvYvzkuKCbvvTqV8+3SmT/u99C/nDx4+LeV8
0L2WM7rGuL5ZTseBlv7mojHVq2QNDjn6m7l/2LH01OaQoz/YcUpB5Xk5IUd/
sHT9Wpm9ItvTH9zXdfiXt0X2X69t3cy/P5el/Wz6v5VKVdywKBRwVxan3tVi
yDpHv5v+8FMjv2ufNTDo6E9uWdmt2rTUoKM/uSKt9fHXtwTcyXcf3pg1fJ32
2+l/B7dn5MaX87sfhjWccOSRbEc/nv74QznehONn/U7H05zUomHhOb+jP/pz
1SfGz4/1O9/RnQubPpKtzwHo7xflPZm29FSu+6pUQdyVlBzHcwH6r0deGjF2
7ulclzDX1/XHvjn63IDll/K9QtkP+6W/O3l59+xb++e4r6r0L7/jp1x9zkA5
OC/Ok/Omfzx83r35wUeznXdPfpnHy/n1uUQTOW/qofJbBWWLz/r1OQX1eEba
hXai3ehvb1/Ts/KfIusv/tKw8aZwQJ9rdJd2ox3/Oun86zdE+uMwcTBa4m6e
xCFxSf89XGHmlLKR7Qd/WjE+43xQn4sQl8TpymNzEhYPDulzEuKUuO0cW9Qk
PSekz03Ig5v7X8s78pC85HnBrIVVHyrI9LlvktJGdIgJq2fCkpfk6ZOlxyQV
Nw7r9Z88JW+31np5Z3qHsN53NJK8JY/rFBR6MZH1cDfJY/J6dUqV3X9uFNb7
EPKaPD8QX6fTjTeF9fqs42NJ3idJnpK3nN+CbaX6HV7h8xbuiM/9Z6R+WH+T
5DF53bzattbLh4T0uQ95TZ6vKS4XdzzSPjDtS96Tt+Qx7Ts3rlN6m2ezvEML
vi4eNTCoz41WSl6T5xXipg4aEQrocyTik7wnb8lj4nPg97G39Upd5x1MKBpW
JRLfrCevyXP/4iqxnWP9+hyK/FoieX9M8pi8Jr8OVeh6qUabbK/ryS5bvziZ
q8+tyG9P8n6K5DF5zXLQL2Uvtk7J0SWfk+f/kLwfKXnMcTkOxz0q5WA9eU7e
2zwnb6kn6oV6ot5YT70EpZ7Ic/KevP6L5Hme5C3tTLvSzrQ76207k+eDJO9t
ntu8Jk+Ja+J4kcT15xLnrLdxTdx+JnFMnh+RvCevO0uek8fbJK91PGjJY/L0
U8lb8vKg5Kmr3vaVoQvmu8W1m5zLOx9y6bNbVIjrOMO9//nltYW1wq5xs/Qd
23dNcOHAiQTXJnIdWfBLz76Lk72yh6v9+5PIdWNspbb96g+Z4gWXJ+0/3jLs
bj18u395uzneqkvbJ/csF3ZxH1QpHlVztbt0KnHu6MKgqzjglp9bJ3zsupQO
D9zSMOQ+yo3fdWfFZa7MuXnL9/415AIrZt+VsN7nMpJLxzwWuU5kPrH2zXEB
n9f7m6mZ9SP8c/szu6bWW+HNC3TY37FlyPU6WntS+Zi1bllG/1KPpgXc2z8k
vvhYuzVuZocLpV8rFXTB78s0eGpAlpv83In/3BfJ+/GJ0+adT83y6hfmly8f
4ZfDq5Ov7NzoWiZe2ZpSnOeya1cN7uiywTWYGpjab6Lf5ZfLuKPVknXu7aoV
8zbeGHAufesnT49c732Tm/j+lY1+N/O94k1nAptdqy9uKWg6KpKXndtMP9Bj
k/uyf8Kzn/TMcwny+XTZbv2qRV9Xqul0yXEpB99jP/FSjg1Srt33DunWdYPf
27lvWJ2sF9a7j+S8qYc0Kec2KTf1QL3c88Wm1ZdTg96HnVb3vjuSFxelXW6X
dpoo9eSXekuWdvqdtFtcsM8LDyaEvOrtfBPi6qzQdqMdL9yz5NhDkTh/4Jke
E3sHfBpXxBntGpR2ni5xlilxd2LupN2nY8Ne2ZMP1zzYcY7bInGXKHFYd/+s
4YNbhr3LB95PGfDCFEccDpK4vGXGlAEZkbifVCPjfl9GsiMux0mc1ugw4Z2O
j4S9PWlFP449OEHjlLhduruS99IDYS8h71TXap1neH1f+W7Upcj5rOpYb3uN
bJ/XdMr4Vq0vhLw+NTf4+iye76VIXKZLnMZ2bVrw4dhIntd+78W4ysu8BRKn
JyVuP9jRslnDRiGv3vg98cce/tgresX76mzkOjS04sdnL0f81Pl0zXf2Fwa9
3rPXb7iz1mqNU+J2S5nfzy4oFfROjl4492S7NV7iymcud74x4NWPrzcj1bfO
a9Denzg+LeANefDohXdi1mqcErcXdqcm15/k97qEB3bq322D97fYuGdm9crz
kpYWT1zVa5O3N39J87nH87zNR841eLVgozeieXqn3fc7Xf706emkCiNzvcfH
FDUr9G/W77EfPmc74pS4pZyUO1nKcV7KlSvH3S/lWChxWl3ilnqi3k5IPYSl
XobKeVMP90mc3i5xS1wSp1nSrn+UdqbdaMe60k60Ww9plyeknW6WOCVuYw5e
i0vitKHEIXG5T+KOOEySOMuUuHte4qqZxNl/AQaUAs8=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
5L+83yiTj+Ar/TNpA+5vkwnh/raZEO4PyIRwf4NMudH0wEzX2M+KmTwLHfTL
xF00vVomROsrh9cvp+L+KpkQ7q+aCeF+30zI+NUzjYNn82Q6q//120x6YN1b
ZfJi3i+XiTvwZt5M99JP5suE9JP5MyH9ZIFMSF1WyMQ19rBhpv1Ro1Ymj8Rn
N8/UG+gDW2RCNL1xplrSWzbJhPSWTTMhvWWzTMj4LTONY90L1KWt+0PMHV5P
zvRs1L2uaw+EOCCTntHlgZk8BY8ZnakHoINDjOhgjBEdHJ5JM3D/UF9DE7tn
+r6HX+6a6d8449822yPTNTxmt0z/9gf37ZTp2Y1/I23nTMi/kbZLJmT8oEw5
GLN/Jj9i3WM9Jzoe7H2wh8sz8YNzvjKTp+AxL3mfQ+CLcSh8MQ6j9iGODXFc
iFGZzolajMzkifS34Zn6BP3hYF/jvoMy9YbSuall5txg3XPUPX6EczDmVX9G
7j0z1Yl+tW8mP8VHT8ukZ3R5RiZPwWMuDrFSJh1MNKKDS4zo4IhM3gTfL/W1
vt4nesYvj87EY/h7vK/1cD26+77xzoEOjjSig6OMjD/GORizn9f+vx7iOdHx
6d4HexhnHrG+w3yecGuvTDWgz+ydCekz+2RC6nKZ83HeF2bSG55xfibd4vfn
ZOoT9IcLfI37zsvUG7jvTNeSPnOWkT5ztpHx5zoHY07N5LOcx2s+N85zhhEu
3JlJz+gS7eEpeMwjmb63wP1HjXB/ihHuP55JJ+hpqq+hpxsyeTF+eW2m5zCe
v270NTzm+kzPQ9x3VSbu8xx3tZHnuGuMjL/OORhzRyY/Yt3TPCf6m+x9sAe+
C/EbNN+j+C7Eb0j8lny7f9fh7wDeYeTvAN5p5Leew4L/zBFizhAPh1w7uBYP
ZuphfLfDt+gT9IeHfI378KyBvu9u15I+c4+RPnOvkfH3OwdjXszkEej/JteJ
fnVbJj/FR1/3uaH1NzNpGw/4KJN+4P7HRrj/iRHuP5nJ49Dup76Gnp7P5Fl4
7TOZuIumX/A11vRcJp1w31POAfefNsL96UbGP+scjLnda+fMPvOc6O8N74M9
PGEesb7HfJ5w62bXgD5zi5E+c6uRulyRyUfx0A8zaZVazMykVfrAu5l6A33g
A1/jvvczeTT3veVa0lveNtJb3jEy/j3nYMxd/l2QP/c6IZMP8Tx4cqbnFZ5T
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
tbOfRduaE90v3BanWesnPie8L26Lj+yz2tbZwtHvfOb46/dG6rJQW7xHT4u1
lRv/6N6WNtDW/G15ELqZq62aUa8ebY1jHQu2dS+55g2vX25Ji/O1hYxfoK0c
5OW3Xf78nj/fWqItbeMTN3WCd4bYL8RybWkA/q7Qljbg+1Jt+T77XqYt34f7
S7d1jff92jp76rdiW+PQXN+29s9nm7dVI3S8Ulufo62V20K0skpbSP1WbQsZ
v2xbc6KzPm0ha12+rfWy1i2cmzPZoC2uo4n12uI6mlizLa7D8bXaQji+dluI
VlZvi9N4wJbOB5c3bCsffrNpWz6Cpldra9+MWaeXxr0QdL1RW/fiSRu3hXjS
Jm0h4zdzDupyUFvPGfx5wgFtcYUz368tfnDmA9viNPrYui1Ow+X+RjSxjRFe
b2tEN9u3pQ08dYCvkWtQW/pBo7u2pW3e3xtihNe1Y1s9nt6+k5Eeu7MRz97F
yPgdPA9j1mmrrvjHdl4769jNc8Lx/b0/9rxXW5yGy3sb0cQ+Rni9r5G6DHad
0OhWPivqsrtzz+19LOb67hliHs8xpC0PwnuGGvGbYUY8YLiR8Qd6Hsas29ae
4Nb6bfELzt3nmo0MMa4tLaGJw9rSGJwd3Zau0NAhRrQ1xgjfj21LV/DrUF+D
+0c4Hxo6ui2doLNz29IAnD27LW6hufG+F50daURnRxkZf4xzMN/BbXnEkiHG
ek7WfY7zMcdJ3j/aOi7EGm1p63gj2jrBiLZONMKFU9qqFxo93PWgRuv3kvZe
Dto5qy2NsYdXeir/jICntaVDtHW6EW2dYURbZxoZf6rnYcz9PhP2d1tbnENn
N7fFLTh1aVscRSsT29IJmju/LW6huQuMaO5CI5q7ui39oKeLfA39TXI+NHFl
W5rZxWtZ3LUe5XrDict8L5q73IjmrjAy/irnYL5bvHZ84mLPybrPMxdY9+3e
K1q51fey/xva0gOau9GI5m4yUpdr29IqerrE9aBGdzgfmri7Lc2glWtcA8Zc
H2IPz3Gn70Vzk41o7i4j4+9xDvS6SehJUYhqiPlDzAjXXg8xb3j9asDXQkxp
i6No60HXEW09ZERbDxvR1iNG9DStLf6h0Ud9jVzT29ID+nu6LY3x/p22NEZd
H29Lh2jrCSPaetKItp4yMv4xz8OY99riEzya6rWzjg16ac7XAs9faUsn8Pf5
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
5mlJ6fcFWqoZPljS+yXf7C3FxouLh5/H8PPM0dI1cizUkvdgydHhHR81JI+u
xt8Y+e/Fw1gs3PPfcK1fsKU8f/n98V0Bxg1aej/wbKOW3iu9sGJLvU6PL9OS
T/Dcslb6dzkrflreSr+v3JIf8MEKvkastVrqaXp5zZb6j89DLeWnJ1ZtyXt4
cTUr/ljdSi+vYWX9Ks7Dmk1a6l16diXvnX2s7Zz4ZmM/H/et1xJT8Nz6Vjy6
gRU/bWilLps6Nj5Y2n1BXdZxbLy4tZ+HHl/X18ix8gh576PwXrYIWrfkjy2t
vIetrKzfzHlYc1c/PHMYa4Yx2v9/vfh8Wxgrh7FKGDu35BP6dyf3K5938TV8
cILfH+9tt5b8gA92bMmfrNmhJY/xeVev4759WupLenBfK/2+R0v+wX/7+Rq9
v7tjMzfS1/DBAS15gLP3qJb6G78ebcUHB7fEFPwxykr/HmKl908JdVwgjGnC
GKMdzqVwbXQYB7XkSdbv3ZJX2feBzsncEWEs2pI/jnFOvH6slXd7nJXeP9L3
stf9/Rw8w6Hey8Jh7NUSj8i3p+vB5+Mdg7qf1pI36NnTrfT7mS31Oj1+Ukte
wjcXtdSX9OOpLfU06y9pqS/x6ykteZW5MxyPWOe31Jf04AVW+v3slvyD/y70
NXKc5fzMnez8xL2lpf6gp65rqb/5779uCGPbMLYL44qWvEHPrjpC+kl4L1e3
1Ov0+M0t9RaxTmypB3nOy1vyLeuvd2ziXtaSV5m7KozNHetG59w+jJusxL22
Jf+wv4tdM2p0jfMzd6lrRtzbWvIM/vjENaIen1qpPT2FT+jl0Vb6/S4r7/ke
v3t67Q2/D97VHS35h/WPttSX9PXtzsncvV6Htx5sySf010NWvPKwlf69z/fi
v0d8jbh3ey/s44GWfEisx1vyD755uaVehAFPh3F4Sz54xkqPP2vFl8+35En8
cXcn1CqMXcJYI7zXBcOYlv/bwZZ88r+44fPxQ/LEC16Hn15xTt75q1Z6/DUr
vfai7yXWY64T+37Oe2Ef57XEcXr6fteA53zT9cZb77bkJXr5PSv9/r71nDA+
DONcx3vL6/DiOy35h/VftdR/9ObbnmfuI6/DW5+11CP02udWfPmFlV772PfS
W1/6GnE/8F7Yx+uuAX3zfRhXttTvf7XkvVvD+KmlPqbHf7bixV+s+Oa3ljx5
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
hiJ543W/b76H4f9vw/UzwzgrjCqSl1g/VaTYxC0j+YG5QaR4xJomUk58Nm0k
xWdTRPIS+8sj1YwajYiUn7l+pJoR96eOzgl6Oo7kK55zukjxeAdzhJ8/C/p5
GHNGUvwxdyT/4L8ZI/UinlskUly8Mkukvv80jMUi+QQvzhzJV8zNFSkesRaM
1CM/hLFQJP0xjHkjeYneWjjSNXLMEyk/czNFyk/cKNK75XlWiOQf+nelSP2N
15eK5AH6d+lIij+WjeQf/DdBJP7h1Rki9SPPuWQkjrB+xUixibtEJM8wt0yk
eMRa2Tnx+ipWfLl8JC+xv0Uj1YwaLRcpP3OLR6rZb67FpX5n1OYSf6ZmF/vz
euH+SSJ5ZYNIfsNne0fqG/ply0jewBNbR/IAPlsnUt/jp10j9S69s3YkZjG3
ps8GarN5pL7BHxtF8h4+3sLXyLGh8zO3vvfFntZyDOJuFumdEWs356SX94jk
NzyxQyQ/4JWdIvkNn60RiYns6YJI74P3fFGkulPv7SP1Pet3d2zibheJI8xt
4xrgmz2dE3/vEsl71GIr14x67ez8zO3ofbGnbR2DuC+EcWAYB4WxaSTu8Jwb
u05tz+MHvHJoGLOFMXsY+0byISw8LhJP4egJkXyCPw6I1PeshyP0MX23fyRP
MrefY9C/x0TyEpw+PJK38fSxvkaOw5x/Du+bfc0axkjHIO4m3jvPc7Zz4ptz
I/UufX1qJM/Tv6dH8ga+OT+SJ3lP+0TqR55zL9ebHj0lkh9Yf45jE/fkSHxh
7kTXAB6c55zEhalLuRbHu2bU6wznZ+4074s9neQYxP3ez0POF/38B4fxRhiH
+P1cHqnn8MGVkfoYfzwSqXfpr5tdI975rZH6G69cFsbqXn9fpJ6mdy6N9N2L
uYsj9eyqYdwYyVf0yzVhrBvJ3zf5Gjmucn68e4X3xZ4ucQzi3hDJh8S63znx
0IOR+pgeHx2JBfjg7kh9jD++ce3O9P74rjCeY8MwvrPcGckbrH/AsYl7RyTW
MHebawAbHnJOGHNvJH9Si1tcM+p1j/Mzd5f3xZ5udwzivh7GKL+b6yPxjue8
1nWCN09H8hI+eDZSH+OPxyLxBa+/HckPR4TxbhhHhnFUGE9F6lHWfx6p/+jN
JyPxlLnHHYP+fTNSj+Ch5yP5E3+/5WvkeM75mXvG+2JPTzgGca/z3nmeL5wT
P30VqXfx00eRuECPfxKJC3jiwkj8g32PRupHnvNh15se/TCS51n/pWMT94NI
jGDuPdfg6DC+dk764LNInqEW77hm1OtT52fuY++LPb3vGMS9J/yutUEYG4Zx
r3WjMO6zbhzGz5EYAct/sfJMv0ViOv5ox+obPDRmLG/wzn+KxALWjx2rjvTF
j5HYxNyvjkesfyJ5Bh//a8VPf0TyD74cI8S5OlKO352fuR8icYK4f0fiArEm
idX3eGKyWL6if8eL5VvYMH4spd8njMUI/HFM+Hn6MGYIY75Y75haDovFAtZP
Gis2cceN5W3mJogVj1iTx8qJj4fHUvw0cSz/sL+xYtWMGk0UKz9z48SqGXEX
iNVbvNu/IvGL52zFisc7SGL1FvxLYyl9l8fyGP6IYnEHNoyI5Q3Oxl4sFrB+
yljMfSmMbiw2MZfFikesJpZn8PEgluKnfiz/4MuhWNfIUcTKz1wcKz9x//S7
5XnmiNXH+H6uWH1Pz84Ufn4tEmNmjqWcA7PG8jmenjeWl3hPnVj9yHPOGH5+
NdL6OWPFJi7v9ZVIc7PEikesuWPlxH/zxFLizh6LTexvilg1o0azxcrP3FSx
avZyGHUs3lGj7WPtidrvGOv5qesisZiC7xeNpXBl8Vg+h/f4kB6lp1aI5UN8
s3AsDrJ+pViexBMLxeICc4vFikesZWN5D18uF0vx95Kxfv/5Lozl7XlyLBEr
P3MLxuo74i4Ty2/EWjdW7+Lv9WP1Kz5YLVaP4sXVYyn+Xiv8/F8kHw91xRr+
7sN3+l38+9iqsXqC9es5NnFXicUC5taIFQ9ObOCcw8wwFH+vE4tH7G/FWDWj
RmvHys/cyrFqRtwd/H54N0vH+v7Bc27keLyDLWN5HpZsZcXf28TyNl7cNBZH
8PGusXyIb7aIxSPW7x7Lk3hi81gsYG5rxyPWTu4RfLmzFX9vF4u59NMuvkaO
bZ2fuc2cn7hLxXq3PM8BsXoXfx8Uq1+nDmPvMKpYPbuPFX/vF8vb+Hj+WPyD
QZu4H3nOvcIovf5AxybunrFYwNy+jkesg51zmjCOCmPaMKYLY/9YPGJ/u7lm
1Gik8zO3h2tGXP77FP67MP5WSG6+H+C3ox0Pdp8UixF49GQrPj41FmvgwQ3u
A/rrvFi9jodOjMUF1l8Qy2/49YRYDGLuFMcj1tmxzgnqdI4VZp8ei2Vw5Vxf
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
UlhV9aSwqu5JYVXeE+/Ya9ZTTj6P2dNZQk2bnu6lpmP09N6Ym7InvsCqqXpS
WDV1TwqrpulJYdV0PTEODk3RE7NYP6InZvF52p7u5b7ZeuIOLJmppx6BVTP3
pLBqlp4UVs3ak7Jmhp64Q29N31NOPg/11Bfkm72n2PBs4Z58ju/n7omPsGqe
nhRWzduTwqr5elJYtUBPDILrc/XELNbP2ROz+Dx/T/dy3xw95WRukZ5ywqpF
e1JYtVhPCquWCD9/0BWrFuqJEex1wZ5y8nmb8DvVuGEMC2OpnjgFz5bpiS/w
Ztme9LMwlutJ4dbyPSncWqEnhVsr9qRwa6WeFOat3JPCp1V6Upixak8KV1br
SeHN6j0p3FqjJ4Vba/akcGutnhRurd2TwqRte/I8Pt7Oiu/X64kv8Gb9nhRG
btCTwq0Ne1K4tVFPCrc27knh1iY9KefGOj3lhJeb9cQp+n3znhRPbGGFN1ta
4dZWVri1tRVubWPlGdbtKTb73rSnnOTY3s8EVw7vyW8wbMeeuANjdrLCrZ2t
cGsXK9za1Qq3drPCvN2t8GkPK8zY0wpX9rLCm72tcGsfK9za1wq39rPCrZFW
mHR8T57Hxzv4mXiGA3viC7w5yAojD7bCrVFWuHWIFW4daoVbh1mp0f7OCS+P
cM3w95FWuHKUFd4cbYVbx1jh1rFWuHWclWc4wLHZ9+uuL3V9w0pdT+qJL/Dm
ZCtn2ilWuHWqFW6dZoVbp1vh1hlWmHemFT6dZYUZZ1vhyjlWeHOuFW6dZ4Vb
51vh1gVWuHWhFSbd0pPP8fetVvx9SU98gTeXWmHkZVa4dbkVbl1hhVtXhbF4
T9y62sr36IucE15e2xOnlg7jOiusut4Kq26wwqobrbDqJiusutnKM1zs2Oz7
hJ56kDPnNj8TrHq+J6bAkjt6YhasutMKq0ZbYdVdVlh1txVW3WOFVfda4cd9
Vrx+vxVWPWCFVQ9aYdVDVlj1sBVWPWKFVY9aYdWJfiZ67nY/E8/wRE/MglVP
WmHVU1ZY9bQVVj1jhVXPWmHVc1Zq9JhzwqoXXDNY9aIVf79khVUvW2HVK1ZY
9aoVVr1mxUuPOzb75iziuzDfod/syVuwav5E3sNzb/fELFj1jhVWvWuFVe9Z
YdX7Vlj1gRVWfWiFHx9Z8frHVlj1iRVWfWqFVZ9ZYdXnVlj1hRVWfWmFVX/3
5HP8/Y8Vf3/TE7Ng1bdWWPWdFVZ9b4VVP1hh1Y9WWPWTFe5+5ZycIb/05AH6
5VcrrPrNCqt+t8KqP6yw6k8rrPrLyjN87djs+2fnJMe/fiZYlSRiCiwZIxGz
YNWYiRRWjZVIYdXYiRRWjZNIYRXfZVBYxXcaFH6Ml0jx+viJFFZNkEhh1YSJ
FFZNlEhh1cSJFFZNGn6+sidWTZZIYVWdyOf4+z8/E8/QSsQsWNVOpLCqk0hh
VZRIYVWcSGFVN5HCql4ipUaTJ8p5TRhpoprBqiyR4u88kcKqIpHCqn4ihVVl
IoVVVSLlGYYnis2+4SvfB/ku+FZP3sJLQ4mYBatGJFJYNUUihVVTJlJYNVUi
hVVTJ1JYNU0ihVXTJlL4MV0ixevTJ1JYNUMihVUzJlJYNVMihVUzJ1JYNUsi
hVWzJlJYtXgin+PvJRIp/p4jEbNg1ZyJFFbNlUhh1dyJFFbNk0hh1byJFFbN
l0hh0GyJcnKGLJCISbBqwURKXRdKpLBq4UQKqxZJpLBq0UQKqxZLpDzD7Ili
s+8mUQ9ytiyZ6Jlg1caJmAJLlk7ELFi1TCKFVcsmUli1XCKFVcsnUli1QiKF
VSsmUvixUiLF6ysnUli1SiKFVasmUli1WiKFVasnUli1RiKFVWsmUlg1SPRM
9NxSiZ6JZ1gnEbNg1bqJFFatl0hh1fqJFFZtkEhh1YaJFFZtlEip0VqJcsKq
TRLVDFZtmkjx92aJFFZtnkhh1RZWWLWlFVZtZYVVayeKzb6nS0OfJ/r3ra09
D8P4uzL/Bs+/ge2YiE0waYdEzOLzTr4Gn3ZLxCPYsEsYkyRi1faJeMeaXX2N
+3b3vXh970Q8gkP7WOHQvlY4tIfvhWf7+RpMOj6Rh/HuSF+D5QckYhNMOjIR
L+DEQYnYBJMOtsKkUVaYdIgVJh2WiK309YGOx/q9EvGUfR/qe7lvf+cn91HO
CZOOtsKkY6ww6VgrTDoiUZ+x18Odk897+rnJd5zv5ZlP8HPDqlMS8QgOnWqF
Q6dZ4dAZiRgED070Oth2ciKusf7CROzg+8tJnmfuTK/D6+cm4hEcOs8Kh863
wqGzfC88u8DXiHu698I+/vZn9nVxIjbBpOsSMQI2XJaIR3DociscusIKh65K
xFM4elMiXsCJSxNxjfXXJvItcS9xHuau9jpYdb1zwqEbrHDoRitxr/G9xLrI
dWLfV3ov7ONm54dPtyZiE0z6OFFf0ke3J2ITTLrDCpPutMKk0VaYdHciHsGG
2xyP9a8n8hX+u8v3ct/DifgCV+5PxCaY9IAVJj1ohUkPWVlzbyJGwLZ7nJPP
9/kasR5xbLj+QhjbJfI6/0YOm2DSk1aY9JQVJj1thUnPJuIOfweCQZt6PUza
xJ+f8b3c96hzMveic8Kkl6yw6mUrfHo1jJ0TMen5MLb1Xp9zTj6fk+ispadf
873U9Ba/Q97f24l8iO/fscKtd61w6z0r3PogEadg0luJ+MX6NxOxj8/v+17u
+yIRd2DJJ4l6BFZ9aoVVn1lh1edW1nyUiDv01ofOyec3EvUF+b50bHj2ayL/
4+9vE/ERVn1nhVXfW2HVD1ZY9VMiBsHdbxIxi/VfJ2IWn3/0vdz3lXMy95tz
wpvfrXDrDyvc+tMKt35JxDj2+rNz8vnsRFzhnf3le+HIP4lYAqvGTPVeYdVY
qRRWjZ1KYdW4qdgE86pU/sFnY6TKwfpJU3kbxvyXiGvMDUu1DgZMmIo1sGqi
VAqrJk6lsGq8VPfCuUlSXSPuOKn2wj4mSMUmYk2eik3wJkvleZjRTsVHWNVJ
pbAqSqWwqpuKg3DoX9eDfbdScZD1aSo2EXd4qjzM9VKto/fzVDnhU5FK4VM/
lcKnJNW9xJosVZ3Yd5xqL+xj8VS9jifGT1UDnrNOVW8YMyIVp+DTFKkUPk2Z
SuHT1Km4BnuaVOtg1VAqNrF+llS8gCuDVPPMTZNqHfyYIRWn4NOMqRQ+zZRK
4dO0qe6FQzOnukbcqVLthX2UqWpA38yWiikwZqFUnocZc6biFHyaK5XCp3nC
z68k4tN8qbgDyxdLxRHqNUcqtrJ+wVTsIO7sqfIwN3+qdXh94VQ54dMiqRQ+
LZpKibtAqnuJNWuqOrHveVPthX3AR35f5XvbkqmYAmP2SNUr9NEyqTgFn5ZN
pfBpuVQKn1ZIxTXYs3WqXsdzS6c6C1m/ZipewJWlUuVhbsVU6+DHqqk4BZ9W
S6XwafVUCp9WSnUvHFoj1TXiLp9qL+xjlVTMItbaqZgCYzZL5W18v14qTsGn
9VMpfNoglcKnjVJxh+8vx6TqUfpi3VRsZf2mqbxH3HVS5WFu41TrYNXmqXLC
qi2ssGpLK6zaJNW9xForVZ3Y94ap9sI+dk/FC97NyqlqwHNu43rDqh1S8QVW
7WiFVTtZYdUuqdgE87b1Ori1fSrfsn7fVN6GMdt5nrldvQ4G7OkegVV7WWHV
3lZYtZvvZd/7+Bpxd/Ze2MdWrgF9MzIVm+DNEam8je8PTMVHWHWQFVYdbIVV
h6TyKoxfIhWH6OkDUnGQ9YenYgpx93ce5g71Olh1pHPCqqOssOpoK31wmO8l
1n6uE/se5b2wj2PdL/Ds+FRsgjcrZqHng34Vxompfjfjvz08yQq3TrbCrVOs
cOu0VJyCfyc4HutvSuUBvHiq7+W+81MxCN+flYop8OZsK9w6xwq3zgtjbq85
IxU7YN7pzsnnM32NWBc4Nmy7JhVH8PclqVgGIy+1wq3LrHDrcivcujIVEzlD
Lk7FL9ZflIp9fL7C93Lfhc7J3LXOCW+us8Kt661w6wYr3Lo6VX+w16uck89l
eC+jg94Vxo2+l5q+kso/9OxtqbwHY263wq07rHDrTuvqjgWn4N+tqfjF+ltS
sY/Po30v9z2UikH4/r5UTIE391vh1gNWuPWglTX3pGIHzLvbOfl8c6q+IN/D
jg3bnk/lf/z9eCqWwcgnrHDrSSvcesoKt55J5Vt4/1gqfrH+0VTs4/PTvpf7
HnFO5l5wTnjzohVuvWSFWy9bqftzqRjHXp91Tj7f62elRq/6/cC28TL1DX30
Zipucqa9ZYVbb1vh1jtWuPVeKk7BvzdS8Yv1f6byFf571/dy32epGITvP0rF
FHjzsRVufWKFW59aWfNBKnbAvPedk88f+hqxPnds2PZzKo7g+69TsQxGfmOF
W99a4dZ3Vrj1Q6ozDCbBncO8Hg4d6s/f+17u+8I5mfvFOWHVr1ZY9ZsVVv1u
hVU/hXGc9/qjc/L59VTnBzX9w/dS09f83pj7NxVfYNV/Vlg1RiaFVWOFn89N
xapxMjEODv2Tilms/zsVs/g8dqZ7uW/iTNyBJeNn6hFYNUEmhVUTZlJYNVEm
Zc2wTNyht8bNlJPPf7kvyDdJptjwLMnkc3w/PBMfYVUrk8KqdiaFVZ1MCqvi
TAyC65NnYhbrJ8vELD5Hme7lvkkz5WQuzZQTVmWZFFblmRRWFZkUVvUyMYK9
djPl5DO/Mw/zd8R+pntH+11ypnGeDTL5EFYNZVJYNSKTwqopMimsmioT4+BQ
k4lZrF80k6/w35SZ7uW+mTJxB5ZMl4k1sGr6TAqrZsiksGrGTMqaaTJxByZN
nSknn6fNdI1YM2eKDc/mz9Sj+H72THyEVXNkUlg1ZyaFVXNlUlg1T6ZzAg7N
lolZrJ81E7P4PHeme7lvlkw5mVsgU05YtWAmhVULZVJYtXAmhVXzZfIMe503
U04+15m4T00XyXQvNd0yk2fwwZKZ+AKrlsqksGrpTAqrlsmksGq5TIyDQ0tk
YhbrF8/ELD4vm+le7lstE3dgyUqZWAOrVs6ksGqVTAqrVs2krFkhE3dg0vKZ
cvJ5sUx9Qb7VM8WGZxtn8jm+XzsTH2HVOpkUVq2bSWHVepkUVm2QiUFwfa1M
zGL9mpmYxef1M93LfWtkysncJplywqpNMyms2iyTwqotwhjTdd8oEyPY64aZ
cvK5yvT9gHe2ld8PPDsjU9/QR9tlOs9g1fZWWLWDFVbtaIVVO2diHBzaNhOz
WH9MJl/hv518L/ftnYk7sGT3TKyBVXtYYdWeVli1l5U1u2biDkzaxTn5vJuv
EWsfx4Znh2XqUXy/fyY+wqoDrLDqQCusOsgKq0ZlYhDf0UZmYhbr98vELD4f
7Hu5b1/nZO5w54RVR1hh1ZFWWHWUFVYdmundsNdDnJPP22TiPjU92vdS0639
3pg7IRNfYNWJVlh1khVWnWyFVadmYhwcOj4Ts1h/XCZm8fkU38t952biDiw5
M1OPwKqzrLDqbCusOsfKmtMzcYfeOs05+Xxspr4g33mODc+uyuRzfH9RJj7C
qoutsOoSK6y61AqrLs/EILh+YSZmsf6CTMzi82W+l/vOd07mrnZOWHWNFVZd
a4VV11lh1ZWZGMFer3BOPvO/2zG3/2+9+N/mmMuf+d/qmNOfX8nkB3xzZyZ+
wZgHM/kfTjznd4+fHs7kYTx9eyaWwbDbMjGOz7dmYh+fH8jEHWKNdmxYcofX
ke/mTOzj98JbrKx/3jlhwAtWGPCiFQa8ZIUBT2diPSxZJA/8D/puGH9k6iF6
7S+/e3ph6lzP80gYT4axeSZu3eU9wsLHMzEOtj2aibnw79lMfU9dHnKdqMsz
zs/cU463pXNs5PWPOQZx78/EaGp0XyZ28/neTEzn82uZ+AJvPsvkc3jwRSZ/
4tefMnkGD/1sPcHPD+Pg0C++hi/fzsQ1ePZmJvbBvE8zcYcc73kdLHnH9xLr
de8Fzr1hZf1bjkHcaXI9MzX71TlhwI+Z/MZef8/EAt7Nq5l6kOd82e+Tvrzb
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
v9v9Xeh3Pz6P0dc8nPjX86z5oxAf+bv4n1b+HvOXlfVxXznxVrcvxbu9vhR/
t/t6H+ypG77n3cRcGAv29e7px4X76gn6Zce+nm2iMHayThzG8L64yfk2Xl9M
pC6T9cVEWDtJX9yHwRP0VTNq1OprHfuYvK97iUVs6scZQg6U9ZP2FYO4Y/ZV
G86cYX0xl9zj9sVKPk/flz9hxox9+RZPz92Xx+jrefpS/DFvX0qP533xC7bN
19c1/DTUF+PgaNWXB/D0iL6uwYlBXyzjvqKvGPR1vy/F92Vfyvom/HxPoTU7
u67UbP6+cuLvGfp6Dp4h66vX2F/S1/uk/8bqqx6cG2P3pZw/4/Sl1GWBvuLx
jufqy4fUYo6+fMhZMWtf/IWRc/Z1jftm74vF3DdTX7Xk3Ji5L+WsmKUvZf1s
fcVgzS5+Jt7hrlZ6ZIe+eoLe2rSvXscfK/flVfixal8ext/rh59/tw826Evx
wVJ9sQxebtjXNTyxRF/85WxcrK/vOpyZK/XFF3Is3dc6mLFkX/cSa5G+ep/v
aIv2paxfvK8YxF2mr3WweaO+cuLj9cLPvxXaa6+Ut24JIymlt4aRltLb8Fz4
efcw9gjjLeueYawT5n4JMX4NY+O+YsOMtfpiIqxdoy/uw+BV+qoZ9Vq3r3Xs
Y+2+7iXWan3VkjNk9b6U9Wv2FYO40/V1XuKfFftiLvVavi/mwsvN++IUXty9
Lw/Dgz378jaMOagvL+GDg634YLu+eAFHR/kantimLw/j6a366mP6dzf3Czm2
9zr6ZlvfS6wtvBd8sKWV9Vs7BnFX6GvvPM8hzomPD+zLV+x1ob74B/s266sf
ec5N+qo9PbpsX++cM2S5vpS67N+XJzkTDguj7svf+/XFYhj8z0CM3ieMPVwz
6nWA17GPkb6XWHu5lpwhe1s5W/btKw5xp+iLPXynm7av7zS8v2n6+i7C57P6
8jBeP6cvb8OAy/piPf1+uZV+v8KKb551HXk/V/oaPjixr16BtceFMXVfOU/y
Nbh1Ql974r6jvdcpwzjGOlUYx1pZf7xjsObMvjjCvq9yTjx9tp+DZ3jefUBP
vWClR8YodR/POmYpPZe+KKXnhfGcn4n1l/rdU4uL+2Il5+EFfZ0NnAOX+Br3
XdQXoxdwXGo5t+OinC3nW1l/oWOwZuxS9zF/suvEGXV6XwyFwff25VsYcJ8V
Tz/RV1/ivyet9P5TVnr/nr4YwfqnfQ0/3d2Xz5njzMfPeAIOwUS4C59W9Ofr
+2Ic/X6DlX6/0cr6mx2DNWd477yzZ5yTvrmuL84S65q+OAuzr/b75PMprgFn
y6lWzpbTrNTlWq8j1uN9nRnU4tG++IhHH+rrbOAceMzXuO+RvhjNffe7lnD6
AStny4NW1j/sGKx52zzeK4xxSr03+mLcUsq7/aAvn+Pdj/piAZ7+Nowjwzgq
jO+s+OB7Kz74ua++xys/+BqeeL2v8xL+vdLXdy++I7zha3D3tb7OV+57sa/e
51x9ycp3t5etrH/VMVjzfl8cYd8/Oic+/tDPwTMc0dd3Gr77HN4Xz/iMd+EN
v/fgXZTfn/AwCneO9Dq+H33jWFz7qi8+Eu+zvs4GzoGvfY37vgzjUN/3sWsJ
pz+xcrZ8amX9544B1//ri3f4/03XCda+2xdDYe+wUu8NH49fyvP4u1Wqz+jZ
dinFB51Sig9+7Yt9cC4qdQ1P/NOXB+DWn331Mf37r6+xp7/78jn3/eYYMOB3
Kz74w8r6vxyDNe957/9jf6mc+Hi8Us/BM/zSVx+xv5/8Pumtt1wDzue3rZwt
/w5Uk3f66k3eFYweXsqr1GKyUvzFrxOXOic4HyYvdY37Ji11NnDfBKVqCVMn
LKWcMxOVUtZPUioGa96xt/YO413rPv4b9G7+bjRfqV7HE9OU8jO+n66Uz+HB
HKXOAHwwZynFB3Up9sHFuUpdwxNl+Hl00LvCKMLPdwS9M4ypS/mfHE2pdfC4
KnUvsbJS391uDyMvpazvl4pB3EGpdfB77lI58fHspc4t9npl+HmxMBYPY+NS
/UEfbVqqb+jlE0s95/RhnGSdIYxZS53NnGPzlIqNv2cuxX0YPGOpc4LzYdpS
NaNes5Vaxz5mKXUvsYhNLTlnyIGyfqZSMYh7svMTe6pSzKVeU5TiKRxdoBSn
8N+KpfyM71cu5XN4sG4pL+GD9UopPqAWsAmmrl/qGp5YtJSH8cHCpfqYvl0h
/PxFXzmWKLUOhlFX7iXWgqX2gg/+G2jtQuHaIqViEHfKUnv/3xlSKic+XqeU
r9jrRqU8yXuav1Q/8pzzlqo9PTpU6p1zzowopdRlrVKehPcblopNrDVKcR8G
r1bqnOB8WKlUzajX2qXWsY81S91LrFVK1ZJzZtVSyvrVS8Ug7pKl6sG5dIrf
G+/zhFI9QW8dWqq/8cqupfw8mb2Hz+HBAaV+b6H3D7TS+9uUOgth6kG+hp+2
KvVdhzNzi1Lfw/j+tUsp/5NjW6+DYVv7XmJtVqr3+R63eSll/ZaOQdztvA5+
H+yc+G//Ur9rsVd+/+Hv1yf796gT/ZnfhU7w51387xX8N4C7Wvlbz36l/j7C
73CjHBtmwCa4D4PhFucE58Nurhn1Gul17GNf30usPVxLzpk9razf2zGIe6rf
Dz7euRRzqdeOpXgKRw8vxSYYc3opD8ODM0t5G8aMMaS+vziMS0r9TM8fV4px
cPRSX8NPx5TyAJ4+qlTv4unTvBdyHO919M2xvpdYR3gv9P6RVtYf7RjE3cl7
53kuc078d1EpL8GMTUrxD/YdVqofec5DXHt6dHu/c86ZHazU5YJSPuSsuNyx
YcZ5pfgLI88pdTZwDpzhmlGvC72OfZzve4l1lmvJ2XK2lfXnOgZxd/ffBflb
4XKlvtPwfWSZUt9X+J7ybKn+xit3l/IwPLi3lLdhzOOluE/vP2Gl928uxTg4
+qSv4acbwli2VM7rwli6VM67SjGFHLd4HSy5KYzlHeuaUlxYKoxrray/3jGI
e6vXweynnBP/Peb3xF6vLsVcYv3onqC/fi7VKzBmUOk576MvKun9YTxSiqec
e087Nsx4qBR/YeQDpc4GzoF7XDPq9ajXsY+Hfe9GzkEt13WOdb3+Qccg7ohK
c8QeXYqV1OuOUgyFwc+XYhOMeb+Uh+HBh6W8DWO+LuVDev8bK73Pv6XDODj6
ra/hJ/57ZzyAp18q1bt4+r1STCHH614HS171vcR6wXuh91+0sv5lxyDund47
z/Odc+K/r0p5ib3+UMrnvKfnSvUjz/mMa0+P3uZ3ztlyu5W6fFHKh5wV3zs2
sT4rxV8Y+Umps4Fz4APXjHp96XXs43PfS6yPXEvOlo+trP/UMYhLL+IhfDVF
pffG+2wq9QS91a3U33hlnEoehgdjDYkvw8K1ySv1K70/vJLS+3+VYhwcbVW6
hp/+KHVewuPfSn334rvP2JWYQo6/vQ6W/Ol7ifVLqd7nu9uvVtb/7hjE/cfr
YHa7Uk78N1n4+apSe/3dZxd/9x9zSF5j7opSbOM7Dt7lbOf3JDyMwp2xh/T9
cpIQr1MpNsyYqBJ/YeQElc4GzoFxK9UMFk5aaS25Jq50LznHq1RPzpTxq/8/
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
rwcI+xfNg1NybcKs7Vf0zO4r7FO0TowSDi5aF8h9RNHacXDqmDi1kHe8xFHT
BMlHLrSe++Ae4Nup2RtOny6cVjRvxggnFs3VM3JtnNwfc4nm7pEz5llCP5gn
9O8E4fiiOX1a9pgxa6OL1v3jhGOL5iv9OKlo7Ts6vZs1a9Qxc2oh73SJo6cz
JB+5pk4/Ds/5PZPzY0aeE54tWpMuEi4seq7vE+4tmrtXC1cVzWm+n1xT9Kzf
LtxWtNZeIJxfNA/uyLUFs3Ze0e865wrnFK0TlwgXF60L5L6yaO24OHUsnFrI
OzRxcGBY8pFr6cRdUTTf7szecPpu4a6in1e3CDdTm7533ZHvYGsLd8ZfR7gr
/kZ1PYeE++vWv5uK1qF1ko89Vs7aDUXrPprFO/ga6cetRWvfNend6lmjjlVT
C3lXSBw9XSn5yDUyZ8I5LZX7u7xo7bxMuLRoTXpceKxoTXpAuL9o7r4gPF80
p18SXix61t8R3i6ar48KjxTNg3dzbdOsPVz0zD4kPFi0TqA3TxStC+RmbrbM
GnVsnlrIu3HiqGmT5CPXkrkP7gG+vZe94fQHwvtF8+ZN4Y2in4toHjq4Ye6P
uURzmc17in6W0A/mCf17XXitaE6/nz12zdqrRev+K8LLRfOVfrxVtPa9mN7t
mTXq2D21kHenxNHTXZLvlZwbzyieW7yDwLPDin43OVQ4pGhN+lr4qui5rumz
1ZK5+4vwc9Gc/k34tehZL/CHqCXn+1L4omgeFEu+dljWPs8enwmfFq0T3wrf
FK0L5P6paO34JnUckVrIOypxn6Tez5Pr+MT9WDTfSiXvDacrsuWS9e8f4e+i
tZYcH2cWZuFnGCXPyGyys5Z8fxvJbliy/v1P+KtoTpOPPU7N2p9F6/4fwu+Z
Bfrxb9Ha92t6x3z8mzpOTy3kHZs49jwl+f7LtXHJdYzO/f1QtHZ+L3xXtCb1
db1XsiY1ZOslc3di2YlK5vSkspOUPOvTyU5bMl+7sp2SeTB9ydeYfdbaJc9s
S7ZZsk7w857BJesCuXnvQTtYow50jlrIy6wTR01wiXzkOi73wT3AtxlK3htO
zyQ7Y8m8GZCdpmSucj5cQ3O5P+YSzWU2OeNj0g/mCf2bSmtTlsxp8rEHmsja
FCXr/uSyk5XMV/oxpGTto0/0Dg6zRh1wmFqmLlk7iaOn6Dj5yMU7/WGZTc5v
eMnnx4xsKrtJyZo0r+w8Jc/1arKrlszdRWQXLpnTi8kuWvKcriC7fMlaO7fs
XCXzYMWSr6G/rM1Z8rvOHLKzl6wT88vOV7IukHuhkrWDNepAH6mFvGgncXCA
5y75yIUmEbdgyXxbqeS94fQqsiuX/C64rOwyJX8P5xnD8+Sg8Iz3Rd5p+Bwa
ynehQ8Jp9G9pxS1VMqfJxx5oImtLlqz7S8guXnI++rFcydpHn+gde7BGHexB
LeRFO4mjp+g4+cgFzzgTzgmN5P6GlaydC8gOLVmT1pddr2RNWkN29ZK5u7ns
ZiVzekvZLTLrOwo7lMzXdWXXCX92yjVmn7W1S57ZtWTXLFkn0JsNStYFcjM3
aAdr1IHOUQt5mXXiqAkukY9caD33wT3At52zN5zeVdilZN5sJ2xb8nMRzUMH
0Vzuj7lEc5lNzphnCf1gntC/kcI2JXN6l+xRytqIknV/a2GrkvlKP7YvWfvo
E72rZY06KqmFvIMSR0+LyUeujfWu82Dee47P9zC+G/GzYb7P8N0ITTpA2L/k
uT5DOL1k7h4pHFEyp48Wjip51scKJ5X8bNxP2LdkHpyca+NnbZ+Sf3a5t7BX
yTpxkHBgybpA7sNL1o4DU8eEqYW84yRuz5K/N+6TXGjSYcKhJfPtlOwNp08T
Ti1Z/04UTuAzZX1GOLnsWbhHuDtzc59wb+7vW+GbkvXveGF0yZw+NXvMkLXj
Stb9Y4VjSp4F+jGmZO07Kr2bJWvUMVNqIe+0iWPP6ZPvv1zfpY4pcn+HlKyd
o4SDS9akC4ULStaks4QzS+buVcKVJXP6GuHqkmf9NuHWkvl6vnBeyTy4PdeG
Ze3ckmf2HOHsknXiYuGiknWB3FeUrB0XpY6FUgt5508cNS2QfOSaPPfBPcC3
O7I3nL5LuLNk3tws3FQyV+/OtXlzf8wlmnt6znjS9IN5Qv9uFG4omdN3Zo+V
snZ9ybp/nXBtyXylH7eUrH1Xp3erZY06Vkkt5F0+cfR0xeQj11Lpx+U5v+9z
fszIj8IPJWvSo8IjJc/1B8L7JXP3OeHZkjn9gvB8ybP+lvBmyVr7sPBQyTx4
O9eGZ+3Bkt91HhDuL1knHhceK1kXyP1MydrxWOrYNLWQd8PEwYGNk49c2yTu
6ZL59k72htPvCe8KuwmvC68Jc4pXp4ZjcwmnxZ9bOD3+T3BP38PWrVj/XhVe
KZnT72aPnbP2csm6/5LworBH+vFGydr3fHq3e9aoY9fUQt4dEkdPd0o+ch2X
M+GcRuT+nipZO58UnihZk74SvixZkz4SPiyZuz8LP5XM6V+FX0qedf4C6b8l
8/Vz4bOSeVAo+9ohWfu05Jn9RPi4ZJ1Ab74uWRd+ytwcmTXqODy1fFHyrH+c
mkYlH7m2zn1wD/CtWPbecLosWyqbN38L/yv5uYjmoYMH5P6YSzT3/ZzxlukH
84T+/SX8WTKnyccep2Ttj5J1/3fht5L5Sj/+KVn7fknvzsgadZyWWsh7UuLo
6cnJR66ftcf6Fc8N7yDw7LKS300uFS4pWZN6+ly37B6vJLti2dydSHbCsjk9
iezEZc/6ENmBsvN1ZNtl82Dasq+xB2utsvdoyjbK1onBsv2ydYHcE5StHaxR
B3pALeRFO4mrl10v+ciFJhE3ftl8m67sveH0DLLTl61/U8tOVfbZryK7ctmz
sGrZPvOxWtk+93agcEDZ+jel7BRlc5p87IEmsjZ52bo/meykZc8C/ZimbO0j
F71jPlijDrSYWsiLdhJHT9Fx8k0W/6DUgUZyf+OVrZ3jyo5TNr+HyS5QNlcX
LNuHuwuV7cPnhcv2mc1lZZcpm69oDc9zOLBc2deYfdZmL3tmZ5OdtWzOD5Wd
v2y9mCeahC7OHa1C57DkZdaJm6VsLpGPXGg998E9wL/ly94b/jFrK5TNmaVk
lyxbZ2eWnalsrcXOWLbmYjljniX0g3lC+5aQXbxsPpOPPdBc1hYrW/8WlV2k
bK7Sj6XL1nXqZT+4yxp1oKnUQl40kjh6yvODfORaIny6NOd5cM6P8zxEGFW2
Hq0ru05meldhl7J5u6nsJmXzeXPZzYSasL2wXdk6u7bsWmVzYIdc4xnJ2ppl
698asquXrRHry65Xtq6Qe3jZusgadaDf1EJeNJI4OMA7E/nIhX4Qt3HZ/Nsx
e8O/nYWdytbFkcI2Zb/HUHe17HcZbKXsd5pKPrtY9AZOo30jhK3L5vNO2aOQ
ta3K1r8tZbdIXvqxbdmaR582zR7bpo5SaiEvGkkcPR2UfOSaLGfCOaGP3N9G
ZevmhrIblK0r+wn7lq1Huwu7lc3bw4RDy+bzEcLhmZsThRPKnvF9hL3Lnqkx
uTZu1vYqe173FPYoWyPQm/3L1pVDMzcTZo06xk8t5O0njprGST5yof3cB/cA
/07K3vCPd/axZXNmtHBc2e+ezBNn1s39MZdo9i45Y5459IN5QvuOFY4pm89j
s8e0WTu6bP07SjiybL7Sj+PL1rzD07sZs0Yd06cW8k6TOHo6JPnINTrft/iu
9QvnU/Hz7DfOTXbDirXvPOHcsuf6LuHOsrl7uXBZ2Zy+Urii7Fm/Rbi5bG07
Rzi7bB7cmmvzZ+0sYV7hTOGMsvX0AuH8snWB3JeWrbnnp44FUgt550kc73Dz
JR+5Fk/cJWXz7bbsDafvEG4v+1l1o3CD8BDnp3udvuJZeE94NzPygfB+7q+n
692K9e864dqyOX179lg+a9eUrftXC1eV/fyjHzeVrX1XpHerZI060Onrk3eZ
xLHncsn3X65+xXUslvu7uGztvEi4sGxNejj3hCbdI9xdNnefEZ4um9PPCc+W
PetvCK+XzdcHhQfK5sGbubZR1u4ve2bvE+4tWyceFR4pWxfI/VTZ2vFI6hie
Wsi7fuKoacPkI9eiuQ/uAb69lb3h9DvC22Xz5lXhlbK5+m6urZv7Yy7R3Dtz
xgunH8wT+vey8FLZnH47e+yYtRfL1v0XhOfL5iv9eK1s7Xs2vds1a9Sxc2oh
73aJo6c7JB+5tk4/nsz5Da74/JiRcWXHqViTPhc+K3uuS1orVszdH4Tvy+Y0
309+LHvW/xb+V7bWfip8UjYP/sm1g7P2cdnvOh8JH5atE18KX5StC+T+rmzt
+CJ1HJJayHtA4uDAQclHrmMS923ZfPs3e8PpAv/nqoq/a/0p/FH2z5H5jsT3
oV4s38+6sXw3OjY/7+HPtNG/38vWIThNPvY4KWu/lq37aBbv4KelH3+VrX0/
pnenZo06Tk4t5D0hcfR0TPKRC55xJpzT0bm/b8rWzq+Fr8rWpLautyrWpIps
uWIdmUB2/Io5PZHshBXP+jSyU1fM16Zso2IeDFR8jdlnrV7xzNZkqxXrBHrT
qVgXxqt4btAO1qgDnaMW8jLrxFETXCIfuY7KfXAP8G1IxXvD6elkp62YN1PK
TlHxcxHNQwfRXO6PuURzmU3O+Ij0g3lC/ybX2mQVc5p87IEmsjZpxbo/iezE
FfOVfkxVsfbRJ3oHh1mjDjhMLeRFO4mjp+g4+cjFufGM4rnFOwg8e6Lsd5PH
hcfK1qQ5dX2Oiud6JdkVK+buMNkFKub0QrILVjzry8guXXG+2WVnq5gHy1Z8
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
76bL/sQPSQ5i0OnD0tOpEoc/TfKR66jw6evMwmM5P2aBmXqw6rm+Xbitav5f
KlxSNacvFy6rek5vFG6oetZvio+2nS2cVTUPbs419PdM4Yyq33VOF06rWhcu
Fi6qWjvOSfx8yUEMz9VTq+bAXInDnyf5yIX2nJt4+HZL9l4pNV6fs+d59WbV
7zRc432RdxreGdE4vv98mWf8EdGbL3P9OuHaqjl9a/ZAE68Rrq5a968Srqxa
+y5L71bM/tdlj2sTg05fkZ4unTj8ZZOPXPDs8ZzTIunThVVr5wXC+VVryp3C
HVVz90nhiao5/bTwVNWz/qrwStWz/lp8tO0B4f6qefB6rjH79wn3Vj2z9wh3
V60LT6QmtOPBxG+YHMQw63elpnUTh79+8pFr4dwH9wDf3sjeO6fGl6t+LqJ5
6OBauT/mEs29LWfAs+S8nP2C6Qc+/HtJeLFqTr+ZPdDEF4Tnq9b954Rnq9a+
p9K7nbI/8TskBzHo9DPp6cjE4W+XfOTinWXfqnVnIT3DLsjzbGjeic6uea75
JWH/Vs3db4Vvqub098J3Vc/6n8IfVc/6X/HRtk+Ej6vmwf9y7UDhI+FDYX/h
A+H9qnWB3F9XrR2fJv6g5Pgo9b5X9TvcfonDPyD5yIX2fJZ4+PZ39j45Nf4u
NHRPOwo71DwL08oOqXlGppedrub7W1t2LeEHZqVmHx39Tfi1ak7/kz3QxF+E
n6vW/Z+EH6vWvu/Su7HZn/gxyUEMOv1Dejo6cfgnJN9/udatuY4j06evqtbO
L4UvqtaUoq4XaubuuLLj1Mzp8WXHq3nWp5SdouZZn6pmH91s1twbeDB1zdeY
/ZpsteaZrciWa9YFcg+uWTtaNcfD+3rNMcx6qeaamHXi8OES+ch1RO6De4Bv
09S8Nxyixslr5irnM1Cz5nJ/zCWa+2/OgGfJ5zn7w9IPfPg3mT47ac2cJgd7
oImTyE5cs+5PJDthzdpHn+gdHGZ/4uEwOYhBpyeouac8S4jDR8fJRy40tV1z
Xzi/9Wo+P2aBmVqz5rleXna5mrk7v+x8NXN6gXCRWV9SdomaZ32pmn20bTbZ
WWvmwdI1X0N/Z5GdueZ3nZlkZ6xZF8g9b83aMXvN8egjOYjhuTpDzRzgXY04
fJ675CMX2jNHzfHwbZma9+Y7FTUuXvPvD+N3hfC7MQbGlX4JI4Vphe2F7YTJ
pxRXhVHCZLEHT+nn3mLKsWjNnF625j3QxEVkF65Z99Es3sHRPvpE7/iex/7E
o6PkIAad5jsePeVZQhw+Ok4+csGz9Ws+JzSSPs1Ts3bOLTtXzZqyouwKNXN3
Q9kNaub0xrIbZdZHCFtn1reJj7atIbt6+DMy15j91WRXrXlmV5FduWZdIDc1
oR3MC/HwnhzEMOsr1VwTs04cPlwiH7nQeu6De4Bv22bvQmrcqubnIpqHDqK5
3B9zieYym5wBz5I5az57niX0Ax/+bSm7Rc2c3i57oImby25Ws+5vKrtJzdpH
n+jdoOxPPBwmBzHo9PCae8qzhDh8dJx8m2YOLqz5ucU7CDrUr/ndpCfbrXmu
TxLG1Mzdg4WDaub0IcKozPpxwrGZ9dHx0ba9hD1r5sHxucYeewi7Z4/dhF1r
1gVyH1izduyd+MHJQQx6sIuws9BJHH4v+ciF9uyTePh2QvaeLjUeU7OmkGOn
zNOtwi01z8jtwm25v8+ET4VDmY/46OjRwlE1c/rE7IEmHikcUbPuHy4cVrP2
jUrvps3+xA8kBzFTZA/2nDJx+FMn33+5vkgdE6dPB9SsnfsL+9WsKScLY2vm
7sXCRTVz+lLhkppn/Xrhuppn/Yb4aNtZNf/sBx7cmGvM/hnC6TXP7GnCqTXr
ArmZIbTj7MTPmxzEMOunpKY5E4c/d/KRa6LcB/cA327K3iukxmtr5irnc3PN
msv9MZdo7picAc+SfXP2E6Qf+PDvGuHqmjl9c/ZAE68SrqxZ968QLq9Z+y5J
75bP/sQvmxzEoNOXpadLJg5/6eQjF+/0zHov5/dlzo9ZYKY+qXmu3xLerJm7
jwuP1czpJ4Unap7TV4SXa571V+OjbfcJ99bMg9dyDf29R7i75nedu4Q7a9YF
cj9as3bcn/j1k4MYnqt31MyBtROHv27ykQvteSDx8O317L1Tanyp5u/hPM/e
zjsR13hf5J1m+5o1ju9CcBhO810ILcDnnfJF4YWaOf1G9kATnxOerVn3nxGe
rln7nkjvdsz+L2aP5xODTj+Vno5IHP7I5CMXPPsq57RZ+vRIzdr5sPBQzZry
jvB2zdz9Rvi6Zk5/J3xb86z/Ifxe86z/GR9t+1j4qGYe/JVrzP6Hwgc1z+z7
wns168LXqQnt+CTxByYHMcz6u6lp38Th75985No098E9wLf/Ze+xqfG3mp+L
aB46uFfuj7lEc9/MGfAseTBnPzz9wId/vwq/1Mzpv7MHmviz8FPNuv+j8EPN
2vdtendS9if+xOQgBp3+Pj09LnH4xycfufi5L99t+D40cSzfYyaK5bsR+lSv
a+7qnvEB2Wnq5vFg2X7d/B5Xdpy6535y2cnqfi5WZSt1c2CKuq/xHY+1ct0/
7y7JFuvWjKZso26NIHevbh1hjTrQSmohL98RiSvU/TNQ8pEL/SCuWzf/pqx7
b/g3texUdWvhJLITCzMLJwon1D0Xy8kuW/e8rCC7fN33t7ewV93aN5HshHXz
mXzsgeayNkHdz4PxZcerey7ox6R16yB9onfMCmvUgaZSC3nR7PGyJ88P8v2X
a5/UgT5yf526dbMt26pbn2bJPaEv08oOqVsL5pOdt25+D5Wdv+65X0J28bpn
fCbZGevmwJJ1X2PuWZuh7nmdXna6ujVjNtlZ69aIeWTnrltHWKMONIBayMvc
E0dNzD75yIX2cx/cA/xbqu694d8yskvXzaFFZRepm7ecD9fQX+6PuUR/mU3O
mOcK/WCe0L6FZReqm8/kYw80l7UF634eDJNdoG7u0o/F6tZB+kTv4DNr1AGf
qYW8aDZx9JTnB/nIhS7Sj7lyfvvm/JiR/YX96tan1WVXq3uutxe2q5vHG8iu
Xze/+f0UG9Y961sLW9Wts6vKrlI3D0bkGs9I1lau+31rJdkV69aMNWXXqFsj
yL1e3TrCGnWgldRCXp6xxMEB3pnIRy70g7h16+bbNtkbTm8rjKz7z722kN28
7vca6uYXyN8jTNPQGQn3MZuyA8JBwsfCRw1r32Z1/zl8OfnYA81ljT+r53nA
n99vnLz0Y8u6dZA+0Tv+/I016kBTqYW8aDZx9JTnB/nINUHOhHNCH7m/derW
zbVl16pbk/YQdq9bk3YUdqibuwcKB9TN6YOFg+qe9WOEo+vm627CrnXz4Nhc
62Rtl7pndmdhp7p1Ar3Zs25dOCBzMzhr1NFLLeRtJo6a2slHLrSf++Ae4Ntx
2RtOHy+Mrps3RwpH1P2MRPPQwXruj7lEc7fLGfNcoR/ME/p3uHBY3ZwenT2m
zNqhdev+IcKouvlKP46qW/sOSu8GskYdU6cW8k6WOHo6RfKR62DNyieZG94/
4Nmcdb+XzCE7e916d6ZwRt1zfYtwc93cvUi4sG5OXyJcXPesXydcW3e+04RT
6+bB9bk2Z9ZOyR4nC2Pr1omzhbPq1gVyX1C3dpyVOtCD05N3tsSdVHe9pyTX
Qok7v26+3ZC94fRNwo1169/VwlV1ay05xmQW3hBer3tG3hLezP011adGw/p3
pXBF3Zy+MXsslbXL69b9y4RL654F+nFN3dp3cXq3XNaoY5nUQt7FE8eeSybf
f7laDdexYO7vvLq181zhnLo16d66dQJNuk24tW7uPiY8WjennxAer3vWXxJe
rJuvdwt31c2Dl3NtnazdWffM3iHcXrdO8Pt+0KHNkpu/97NB1qhjvdRC3jUT
R01rJx+5huU+uAf49kr2htOvCa/WzZvnhefq5urrubZ67o+5RHNvzhkPTT+Y
J/TvWeGZujn9avbYJmtP1637TwlP1s1X+vFC3dr3eHq3fdaoY9vUQt6tEkdP
RyQfuXjHZ9bnyPm1Gz4/ZqQr22lYkz4UPqibY/8If9fN3a+EL+vm9DfC13XP
6W/Cr3Vr7fvCe3Xz4Pdc2zdr79b9rvOO8HbdOvGx8FHdukDuL+rWjo9Sx/6p
hbx7JQ4O7JN85DoscZ/Xzbc/sjec/kv4s+53wZ+Fn3L2PK+mavidBp7xvjhT
PoeG8r0ILYDT6N+Pwg91c/rP7HFc1r6vW/e/E75NPvrxS93a93V6d2LWfs4e
PyXv0Ymjp8cmH7ngGWfCOR2a+/usbu38VPikbk2q6Xq1YU3iH3v5t27u9vXf
vYY5PY7s4IZnfTLZSRvma0W23DAPJm/4GrPPWqnhmS3KFhrWCfSm3rAukJu5
QTtYow50jlrIy6wTR01wiXzkOiT3wT3Atyka3htOcyZTNsybiWUnavi5iOah
g2juv5lLNPd/OeOD0w/mCf2bUHETNMxp8rEHmsja+A3r/niy4zbMV/oxScPa
R5/oHRxmjTrgMLWQF+0kjp6i4+Qj1yjh0zzDDhE+i3+o8Hl8ZnkZNLthvs4j
O3fDPJ5Pdt6G53sx2UUbnvfFG/bRs5llZ2p47pdo+Bp/r3FG2Rka/ruP08tO
17AWkHuuhvVilobj0URyEINeTtvwexu/N4Q4fP7eJPnIhd7M2nA8nFuy4b05
E2pcRFiFHgk3Zha3E7bNrOwgbN/w/Z0lnCnMz3zERzsXll2oYZ1YquE90MUF
ZYc1rL8LyA5tWO/oE71jJtifePSXHMSgl/NnT54ZQ7MnOku+/3KdkzrQXfo0
Z8NaOYfs7A3r0HKyyzbM1/Vk122YxxvIrp/53krYsuF53zo+erZqesPcj8g1
eLyy7EoNc2BF2RUa1gJyr9OwXqzWcDzaRg5imO/lG66JeScOHz6Rj1zoPffB
PcC5bbI3vKHGLRrmJ+czsmGd5f6YS3SW2eQMeH7M1vDZ8zyhH/g8DzaX3axh
nRiZPdDFTWSHN6y/G8tu1LDe0Sd6B2/Zn3h4u2nDMejlhg33lGcGcfjoLPnI
hY6u3nBfOL9zc37zZqbOaHiuTxCOb5ivBwj7N8xjvpMc2PCsHy0c1fCsHxMf
Pdtd2K1hHhyba2jwrsIuDT8vdxZ2algLyL1fw3qxR+K7yUEMerljwxxoJg6/
nXzkQm/2TDx8Oy57D6TGIzkXYemmzqXpnynzHYnvQ/xMme9mfB/i7wLyZ9j8
mfaE+XkPPs+6I4TDG+b06OyBLh7WsD6hv2gWGjZx+kTvpsn+xE+VHMSglwen
p5MlDn+K5CMXPDsv5zRB+rRvw1q5j7B3w5oyRjixYe5eIJzfMKcvEi5seNav
Ea5ueNavjY+2nS6c1jAPrss1Zv9U4ZSGZ/ZkYWzDunB+apon80L8XMlBDLN+
UmqaLXH4cyQfucbPfXAP8O367L1saryq4WchmocOzpz7Yy7R3ONzBjw/9srZ
j5t+4MO/K4UrGub0DdkDTbxcuKxh3b9UuKRh7bswvVsm+xO/VHIQg05fnJ4u
ljj8JZKPXLzLoD1rN/wOgl2r4XcR7JoN69Pdwl0Nz/jrwmsNa8GjwiMN8/tx
4bGG5/5F4YXkvVO4o2EOvJRra2XtdmEN4Tbh1oY1417hnoY14mHhoYZ15J7U
sU5qIe/qibsltd6eXMMT92DD/Hs5e8O/V4VXGtbC54RnG9YXctzc8Fz8T/ir
4Xn5R/g79zeruDhL09r3jPB0w3x+JXuMyNpTDT8PnhSeaHgu6MfzDevgY+nd
dlmjjpGphbxbJo49t06+/3LN1nQdG+f+HmhYN+8X7mtYnz5oWD/QlzeFNxrm
8ZfCFw3z+2vhq4bn/lfhl4Zn/D3h3YY58Fuu7ZO1dxqe17eFtxrWDH7e82HD
GkFu3nsOyBp17JdayLtn4qhp7+Qj10a5D+4B/v2eveHfn8IfDXPoJ+HHhnn7
V67tnvtjLtHf13LGG6QfzBPa94PwfcN8/iN7HJu17xp+HnwrfNMwd+nHzw3r
4Ffp3QlZo47RqYW8RyWOnh6TfN/mzGZv+sw4wzma9pmROZv2meWpZKdsmrtd
2U7TnO7L9pqezUlkJ2563idt2kfbKrLlpud+sqavob8l2WLT7zoF/vHGpnWB
3O2mtaPadDz6SA5ieK7+2/Dc865GHD7PXfKRC+2pNR0P5yZvem/4Q40TNf3d
m+cZzxPeabjG+yLvNLwzonF8/4H/8JjvQ3B4jVyfUDkmaFonpmh6DzRxfNnx
mtb9cWXHaVr76BO9Yw/2J549yEEMOj246Z7yLCEOHx0nH7nQRXrTalofsc2m
tRPbaFrvZpKdsWlNmkZ26qa5O7fsXE1zel7ZeZqe9UVlF2mar9PLTtc0DxZr
+hqzz9q0Tc/sENmBpnUCvZm5aV0gN3ODdrBGHejcDE3nZdaJoya4RD5ywbHF
m94Pzi3RtA+nl2za57mIzqF96Cz3xFyis8wmZ8CzpN702fMsoR/4cG4h2QWb
1sJhsgs0rYnYoU3rL3b+pvlKPxZuWvvoE73j93jx+yn4vRfwmevkRTvna7qn
PD/IgQ/P2ZP9+H1g/F4Mfo8Fvz+M34vB77fgd4Sxhs/3tBX02eWb/p62YtM+
39NWatpHw1aRXTm8Gils0/TPKIlbrmneryu7TtP6x9qyTWvEqk3Hw/81Zddo
Wg/WatpHb9Zu2kdXVms6Bh0hH9fQUPanJnSFHKs3rT3ry67XNCe3lN2iaa3c
SHbDpnVt46Z9dG540z56uansJsIu9I6zalrfidugac6Tb/Om9Y819mMmNms6
Hj3Yqum90YKt46MNI+IzR+QgBq2kXvqFXrM/NcGf44XRTesm90cv0KNt03fm
a0dhh6b5t1N8eLlzfPRs19wTerRd4uuJ275pDdhP2Dezu30+h17slnj0YC9h
z6a1YO/4aMM+8dGY3RMzfvJxrZ39qamUeaEX6NABwv5N8/Io4cimNfpg4aCm
dXNUfDTukPhw7jDh0Ka5fZxwbNO6T9yBTfOcfEc0rbsHZj94e3ji4f/R2Rs9
OCb+dMmHP3VyEDNh6qVfU2R/ahqc3uzRtPacKJzQ9IzcJ9zb9HNurHBS08+5
k+PznDslPhp2mnBq0zN+o3BD0+80xI1pmtPnC+c1rX9jsh8acXri0YCzhbOa
1pVz4qM358ZHV85IzLDk49qc2Z+a5kuOM5vWmwuFC5rm9DXC1U3r5iXCxU3r
5qXx0c3L4vM97QrhcvrYlZYJL3Wt78Rd1LRGkO+qpvXvouzH97wrE4/GXJu9
0abr4qNN18dfJjmIWSj10q8lsz81rZ8zuadp3TwzvUCbbkrf0ZXbhFub1qbb
46NNd8RHk+4S7mxap25O/OqJu6VpTj8sPNQ0h2/J5+D83YlHY+5velbQpgfi
o00Pxl8v9RIzPPm4tnb2pyY08Yb0An15VHikaU6/IDzftDY9ITzetDY9GR9t
eio+HH1GeLrp5yizjB5tkbjHmtYI8j3XtJ49lv3QpmcTj8a8mL3Rppfio00v
x982OYjZNPXSrxHZn5pKLdUkjGj5HQWeoTVo02tN6zX8e0t4s2ltejs+2vRO
fDTpPeHdpmf8L+HP5CPujaY5/bnwWfZg7fWmOf9+4tGYj4WPmtamT+KjTZ/G
Ryc+SMwhyce1fbI/NR2YHB82rS9fCl80zelfhV+a1qZvhK+b1qZv46NN38Xn
OfGj8EPT+vt6+nJk4r5qWiPI93PTevZV9uNcf0o8GvNb9kabfo+PNv0R/4Tk
IOaw1Eu/0MvvUxPzOKXOaoqWNffD9AJt+l/6jq7wD7n/27Q2FVr20aZiyz6a
VG75/NGpvxMPX4n7p2lOd3S93TKH/8nn4Hyl5Xg0piFbb1mbmi37aFOrZR+d
qLYcg0aQj2toIvtT0ymZF3qBvvS01m2Z05PITtyyNo0jO7hlbRq3ZR9tGq9l
H45OIDt+y7ylT5O3rH/E9VvWCPJN1LKescZ+aNOELcejMZO2vDfaNFnLPtpE
Pnz0iBzEoKHUS7/QCPanJp7NvO/ASfRlaq1N1fKMrCa7asvaNER2oGVtmrZl
H22armUfTZpBdvqWZ3xJ2SVa1lripmmZ03PKztGynrHGfnB+xpbj0ZhZZWdp
WZtma9lHm2Zv2UcnZmo5Bo0gH9fQRPanJjSJHDO3rC9zy87VMqcXkV24ZW2a
T3belrVp/pZ9tGloyz69GSa7QOYAHdq6Zf0jbp6WOUe+hVrWM9bYD21asOV4
NGbRlvdGmxZr2UebFm/Zh7fkIAYNpV76xdmwPzXBW85klZY1l/ujF2jTUi33
HV1ZTnbZlrVp+ZZ9tGmFln00aSXZFVvWqaVbjoevxC3TsqasI7t2yxxmjc/B
+ZVbjkdjVm95VtCmNVr20aY1W/bRCeolBo1Yq+VraCL7UxOayLzQC/RlPdl1
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
QrILdj2j88jO3fXMztu1D5/n69qHt0Nl5+/62cYso0fwm7i5uuYB+YZ1zXnW
2A/eL9B1PJxbuOu94eUiXfvwedGufbhEDmLQCeqlX2gK+1PTEeHWu+E/2kw8
/Fuia72Go0vLLtU175fp2ofby3btw+3luvbh9wqyy3fNbeKWzHxsLWzVNf+5
Tgz8XEN29a75torsyl3zb9WufTi6Wtc+3Oaz+PRuJdkVu9YqLHvTV3JwDb6t
Jbtm1zO7qbBJ5nI9Yd2u53T9+PByg/hwe8P4cHhjYaOuuU3cOl3rAnbtrvm/
UWIGZY294dtm2Rv+bR4fjm4RH25vGb+ZGod3rR/DszfaSi85m356uWXO+Bjh
6K45uq0wsmvebxcfbm8fH27vEJ+Z3knYsWtuE7dN17qAHdE1/3dMDPzcS9iz
a77t1vW7DvzbPT4c3SP+1PksPvznnWjnrvm0c/YeJ/swH/Bt7+wBf/h71Yd1
zdUDhP275ueB8eHrQfGZ74Pjw5lDhFFdc564/brWhX2FfbrmxKjEDMkae8PV
I7I3PDkyPrw5Kv7Q9Bt/7tR4aNd8PTR7w79jczZwdbRwXM7gbuGurvl2onBC
1/wbEx/unRSfMz9ZGNv1XFwvXNc1z4k7vutZP0c4u2stOD77wb9TEg/fzhBO
75p/Z8aHM2fFh9unJmbF5OPaEtmfmpZNjtO65ud5wrld8+Qq4cquOXqhcEHX
3LtYuKhrPlwSH95cJlza9Z+Pjs4zbLXEnd81D8l3Rdf8Pz/7wb/LEw/frs7e
8O+a+HDm2vjrJQcxK6de+rV29qemZXJP3P/w9Jh4eHtD+g4/bxZu6pp7t8SH
i7fGZ45viw+H7hBu75rnxN3YNf9vTN4RuU4MnHhAuL9rft7T9azAvXvjw8X7
4u+Uz+LDc2bqzq55fGf2hnMPJi/8fFh4qOu5f054tmuOPiY82jX3Ho8PH56I
D9+eFp7q+hnFLDPfeyTuka45/0j22D+ffbJrfj6TeDj3fPaGJy/Eh1evdv33
eODQi7l2UGokftfUzv3AuZfyuSmmVEx+NzScfC25LhisZ6rwyWDz4W3hra55
867wTtdz86fwR9dz/Znwadd8+EL4PPdK3Jtdz8rPwk+5f9be6FoPXs/ezNAn
wsddc/h94b2u5+vTXDsxa9RxfGqhvmOSj1ynJMdHXc/pL9mbOf5N+LVrPnwr
fNM1b74XvqMnPc2BsE3PPZqy5zX+jtTUslP1zAPivu6aS79mj3Oy9lXX/P8y
vYBDv2fvi9ODH7vWkc/Tu4uy9kPXfP0u9Z2dfOQqae/VhFV71ibu78Ou9eWD
9At+FHR9UM8cI6bYM5//J/zVNR/aWmv1zIGubKdnXhH3b9czN7H+e6KeOcza
P11z++/kgjdNXW/0zNuKbLln7pGba3CbNeqAx9RCfdclH7nG5j64B+Z1kp73
ZtYnk520Z26MKztOz7wZX3a8nmed85m8Z/36K3N5ZWaTvjP7xA3umRPkYw/4
wFq/Zz3o9dwLeEU+9oaL9GDCnrWDPtE7eD5Bz3XAXWqhPvSCfORCS+hNPX1Z
PedXFdYU1uh5ZqeTnbZnrswgO33Ps7KU7JI9z/KcsnP0zIO5ZefqedaJG9Lz
3Cwiu3DPXGJtoGddmKbn2aXHs8vO1jNvZpKdsec5IjfX4BJr1AFHqYX60AXy
kYtzIsesPc/soj3vDccWl12s55kdKjt/z1wZJrsAOfuqRboylXCT/P8JfzEn
wj/C3z3POnHz9cwV8rEHXGJt3p45M0/PvYB7S/S8N7xZSHbBnvWCPtE7uMQa
dcBRaqE++Ec+clVyJpwTXOL+ZulZa2buuV/M7IqyK/TMlZWFlXqetWVklw4f
1hHW7pkH6wnr9jzrxC3f80xtIWzeM5dYW67n2V2251w1Ya3MCryB96tkntbO
tULWqAOOUgv1wQPykQu95D64B3i1ZfaGB1sLW/U8sxsLG/XMlU2E4T0/K9A8
dBAucX/MJZrHbNL3XuI27JlXW2WPbtY26Jkz66cX8GpE9oY3mwmb9qwX66Z3
42aNOganFurrJB+59tEs3S/c1/czu56e8U5QzXnCj52FnXqe5V2FXXqu/Xhh
dM+zv5+wb8/zcoCwf88cIm7Hnnl1lHBkzzxgbYeeebW9sF3PnNhH2LtnDu0u
7NYzr/bNtRmyRh3TpRbqmyb5yDVrcuzVM6+Ozt7w4FjhmJ75cYgwqudZPkw4
tOezopZt0+MbhRt6fqbd3DPn5kvcwT3z6pjsMW/WDuqZVwemF/DquOwNh44Q
Du+ZV/und8OyRh1DUwv1zZN85Dpd+Ej4sOd55P727JlXe6Rf8OMU4eSeZ/k0
4dSe5+5E4YSeZ/984bye5+VC4YKeOUTcWPo2rZ4Hsk8PMQ9YO6lnXo1JLnh1
rnBOzxw6IzWuldxcWzlr1LFiaqG+ZZOPXDPnPrgH+HxNz3vDgeuEa3vmx2XC
pT3P8hXC5T1zgPO5vmdecX/MJbwanb5vmLhLeubttdljg6xd3DOvLkovtko+
9oZDVwlX9syrC9K7TbJGHRunFupbP/nIxfs1fKqmNx/n/M4SPhU+6ZkHd/DZ
nuf4LuHO1P2a8GrPc/+w8FDPs/Ko8EjP807cbT3PzvPCcz1zgLVbe55jng3M
LvPyoPBAz/y5R7i7Z648lGu7ZI06dkot1Ldd8t2SsyLH/T3z+UXhhZ458LLw
Us88eEp4suc5fkZ4umc+8bz6s2dNpD64xfsC74xw7qDEPdEzb1/KHgdm7fGe
efNYegH/Xsneh6UHz/asGY+kd4dmjTpGpRbqOyD5yHVmzoRz2iP3d1/PenNv
+gUP3hXe6XmO3xfe63nm3hBe73nuvxA+73lWvhK+7HneiXu75/n7VfilZw6w
9lbP8/tmcp0tfNbzrMAfeP9Bz3z7PNdOzRp1nJxaqO/E5CPX7rkP7oHZ/y17
M+N/CL/3zIPvhe96nuMfhR9yJjfl3Ebn/phLtOzV9P3ixH3bM2d+zx4XZe2b
nnnzdXpxQ86fveHPz8JPPWvGl+nd5VmjjktTC/VdmHzkWiO9oE/76hn2QJ5n
+wsPCQ/2Pb8l2WLfc12RLfd9H1PLTtX3jHRlO33PQV+21/fcE1foe/4mlZ2k
b86xNqhvTvzb87sXHGprrdV3r2uy1b7nj9xcY4ZYow44Ri3UB1/JRy54SI5m
37M/Wd970+spZCfve37Hlx2v77meUHYCYTnhBOH4vt8Nl5Zdqu/6lpVdpu+5
J27cvjlDPvaAc6yN0zcnBvfdC855yr73huf0YOK+uUef6B2cm6jvOuAYtVAf
fCUfuWYV9hT26Fs/uL9G37NZ77tfzO8MstP3Pdczyc7Y9xwPyE7T94zMLTtX
33Mwr+w8fc89cdP1Pd+Lyi7SN+dYm7ZvTgzpOxccmlN2jr51eRbZmfueP3Jz
Dc6xRh1wjFqoD76Sj1zoBPfBPTD3i/W9N/O9hOzifc/vMNkF+p7rhWQX7FsL
OZ8l++Y898dcwjFmk74z98QN7Ztb5GMPOMfa/H1zYr6+ewG3yMfe6As9WLhv
7tEnerfEtF57cYg5Ri3UB1/JRy70hd7MLswm7JXzY413x70zuysJK2amVxFW
zj1sK4zMfKwrrJN5Wl9Yr29uEbdC3/O9pbBF39xibfm++cBMM7vwZ21hrczK
asKqfXNrnVyrZo06yqmF+gYlH7laybFm33O/VfZmvkcIW/c9u8OFjfue6U2F
TZi//Ptg24zr3zvG78jg92rwe8f43Rz8bozxErdR39zaOnuMm7UN++bDBukF
Z7xN9p4kPdi8b26tl95NnLXN+ubWJqlvnOTbIOe0d86pmftbo++5XD39YnZ3
EXbue6Z3E3btmw/bC9tlPtDQ/fqepwOFA/rmFnE79T1bRwtH9c0t1nbsmw87
JBf8QZeZFbgF73fvm1v75drMWaOOGVML9U2bfORq5D64B+b6mOyNth0nHNv3
7B4qHNI3944QDu/7+/Ay+ew0uT/mEm6NTN8XSNyovrl4bPYYmrWD++bDQekF
+UZn78XTgyP75tYB6d1iWaOORVLLYX1z6+Dkogc8o3hu8Yz/j2e8f8yanjHL
pwqn5P5PF05LX24WbsrZXyCc3/d8XSRc2DcHiDu579m6Vrimb06wNrZv/p0k
jOl71s4Tzu17ds4Uzuh7Rs/PtTWyRh2rpRbqWyn5yLVucpyT/l6Xven7DcL1
fc/yFcLlfXPvKuHKvnlPLSfGvi68ltz87OONvjlA3GU5w+uzB5y4VLikb/5d
nF5w5jdm763Tg6v75s2F6d1WWaOOLVIL9Q1PvotzVo3B4tNg6w33d3bfWnJW
+sUs3yXc2bdW3iPc3Tc/bhVuydk/KjzS93w9LjzWNweIu6PvGXxReKFvTrB2
e9/8uy25mLWH+37Xgfd8j7+37xl9JNf2ytr/MfXW4VZVbdQ32ILBzrU74ICi
iN2CokhYWCiCkiqICAqiooigAlIiIgoGdndgd3d3dz52B/rev2+M73rfP8Y1
z1hrz1j3HGPMtc/h8WEdE70W1neUx2Os/n4OngFNv+K5eYd4LfBqO+n4ucCz
7aT3FwLPe5/Yn9fbya88H7rE/7e67tPd75l28s2rnuNUX3u6nfz3lGsx3+Mx
92zX4MV28s0Trt0sX2MdM70W1tero8Z7s0Xv8vhpA9eoTUr7R23WiLZtSjr+
IPC+9++jwIeu7/LAP+2koa8DX1kL/wt8007ap9977aTB3wO/tZMfuPZuO/ns
nXbSLjr7MvCF6/1J4ON20uBXvneer7GOJV4L61vk8RjrIo/xeTtp+g/PTb3/
CvzZTjr+KfBjO+n9l8DP7fQ9kEzk3bCv94969/Z+sz/XuN8P3r8/PcfVvvZ9
O3nvu8C33u+/PfeNrsGv7eSZb1y7G3yNdVzntbC+qzweY6FX9oR9utDP91k7
+exT1wsdrxT3V0xJ76tEu3JKWv4v8G87aWjtuLZWSlpIRdsuJe3Tb4WUNFiO
tpSSH7jWOiWftUppLHS2ZkpaIaPx/aopaZCxucf3Da6xDnzGWlgfPmY8xlrq
5+AZ0HQlpbnxTS3aako6zkebS0nvhWiTlPKUzCMH7/Dzoctl1iZ1R/v0y6bk
G8ZjDvzAtUxKPkunVAvGqqc0Nz6kBsVAn46q09st8j/XWAc+Yy2sDx8zHmPt
5e9e/D5jT7d8h+7nlt95oN1O8dmOKWl5nZQ4+l43Jc6+rhdtZ9e9V7Q7p+Qt
+rWkpLPNot00JW9xrUNKNV0/pf74Z8Nou6bkp41S4uhv45Q4+9AlpT5oc5OU
7uE55mdNeIsxNkhJm1tEu3lK+u4R7Q4paXfraLdKScvbpMTR97YpcXzQLdrt
AuMCt/E7+5S8Rb8tU/IW422fkre4xnz4uXtK/dnjHVOamz3fKSWODnqmxPEn
Y9AHL7Fe6oXnmH9b1/3wwOiUvMXzdbFGe6dUd7S7a2CXlLS8mzn63t0cH/QL
7GHP9HH/Fd2vr7V4QGBASt7q68+Rv3u6P/7ZN7CPdblfoL+1tb85WbCX+2Q8
HvdW9fysCU+gl57W6KDAwJT+TnJo4JCUtDw4cFBKeh9ijg+HmuOb4YFhKemO
Oh2Wkgfod2BKf3dhvINT8sSBng8vjXD/9oGRnhuNjjJv8XjwusegT87rpV4V
z8+a1nBt9k5Jl0cExrgGFwTOT0nHR6akL/byKHP2drw5Hjg6MMF7eUZgfkqe
od/YlLQ7JXBiSj4Y6/nwzET3R1PHByalpNETzNHsZPOxLfo8ntrK43Gvq+dn
TUvjM8elpE90OTVwUkr6mxOYnZKOTwmcnJKuTzXHK9PN8cDMwIyUzsYOrn03
95uWki4Yb1ZKPpjm+fDMae6Pdud6bjQ6zxzNnm7e02PQZxuvl3r18PysaX/v
yXnUM56xY+DYlDyzwHVHx4sCZ6Wk67PN2eNzzHeLHF4S7Yct0veZ7t/P/Ram
pMdLUvq3Bnv4Gp/DP+em1B89LU1JK+jrQnP0epH5fl4vfQ70eNxDd4u9Jjw9
37XAJ5cFLk3JHzcGbkhJ91cGrkhJ01eZo/GrzfHDtYFrUsp9tEweDXO/y1Py
B+Ndn5IHLvd8+Oc696fPTZ6bMW42R6+3mI/yGPQZ7PVSr0M8P2taIR17H+iV
1nvH3t4T/LMspbxG93cF7gx0atHP6Hvb+HmdwD0p+eH+wH3en7cCb6akd/rd
kZIenwg8npIHuHZ7Sv55wP3R0yOBh1PS16Pm6PUxczz2oPtM83jcOzXWckrg
3pQ8xxgPpeSTpwJPeg9fDbySku6fDTyTkqafM0fjz5vjhxcDL6SUI7e7LjPc
72lrgvFeTskDT3s+/POS+6P71zw3On7dHL2+YT7PY9DnFK+Xes32/M+7lssD
/6SUKQ+5Fvjnbdcd3b8feC8lTX9gjsY/NMcPHwc+Sslv77j/Hh3V7+MW6fGb
wNcpeeBdfw7/fOL+6OmLlP6tD/r60hy9fmWOxz51n8s9HvfO9/ysCe++6Vrg
k28D/0vpXeGPwO8p6f6HwPcpafpHczT+kzl++CXwc0r6ok5/p6R3+n2Xkj8Y
77eUPPCd58M/v7o/uv/Tc7Pff5nf7vHgN3sM+lzp9VKvGzw/axrrZ2DOo6Km
/6XkF2qwYXiua1q6XzEtL6LpldLi7OvKaXG0vGq0q6S1P+2jbablN/q1TkuP
7aJdOzAz5poRaJWWf1ZLqz96WgOvp6WvNdPi6HWttDgeWz2tPmiZ8biH1pif
NeE5xmiTlk/S0abS2sNqtJW0dJ+LNpuWpvNpcTSepMXxQzHagp+BHNo5Lb3T
L5OWJhivnJYHuMZ8+KeUVn90X0trbnRcT4uj10ZaHI8xBn3wOeulXniX+VkT
umRPNkgrU3g+aoF/OqRVd3S/TrSd0tL0umlxNN45LY4f1o92vbT81pJWf/RO
v45p6XGzaDdNywNc43P4p0ta/dHTRmlpBX1tnBZHr5ukxfEY66UPWmY87vFv
75ifNe3ZUXr5tEU+2SJ+3jwwO/gOafkE3W8dP2+Vlqa3SYuj8W3T4vihW7Tb
8ZwtyqK7rHf6bZmWPxhz+7Q8wDXmwz/d0+o/J/p2DvRIyxM9o90pLb2y/3A8
xhj0weesl3rhXeZnTXijb6AP+kSzmdB54GH2LSPO/u0R2N263zPQz/t3eGC0
NXpAYIB1OSgwMC0P0G+3wN5Rw0PY2xZ5iWu7puWHXbwOdLl/YL+0vLR3YC/r
eIDvreFrrKON18L6VvF4jJXyGP3T2rdD05obDY0KjExLy0MDQ9LS/fDAsMBZ
gbcCb3q8MwLz/RxnBhak5QH6DU5L0yM9R9HXDkrLDwe6FujyMM+Nlw4OjEjL
zwNdu5qvsY6K18L6Ch6PsU4IPBh4IC3v8Xz7ppUv+7heaHl84Ki0dH90YEJa
vjoiMCYtrZ0YmJyWLk8KTEnLA/Q7Mi0dzQ7MSstLXBuXlh/GeqwtvKbj0/LS
MYGJaWl2su9t5Guso6vXwvrW83iMtbafg2cgw+Z4bnQ5LzA3LS2fGjiFvqGh
6Wnpfxfvz+lp5QjPhy7Jg9Gue3f3Ozmt97W5nqObr01Lyw9TXYu+Ho+5e7oG
p6Xl5ymu3U6+NjMtv073+rbzeIy1uWszyfV4yPvHGI+k5TP27JzA2a7BksBi
1+a2wK3e/0sCF6elu8sCl6blA/ot8nPeELg+LW9wDS3jjYVpaRctXhS4MC1/
nBc4Ny1tXex7/X1tifdjsdfXz+Mx1kCPsdQ1vtFzU/ubAzfxLOH3q6P9skXe
uDZwTVr/fzv89+X5uxe/i+T7Ft+z+R0V3435XosPrgpc6b28yXMM97Ur0vLG
5a4FWrzFc49yDa5Ly4uXunYjfY11HOK1sL5hHu9y7+vD3qcD/HwXpJU757te
aPyewN2B4wL3Be5Nyze3B5Z5/x8PPJaW7p4MPJGWD+h3V1r6eiXwclre4Nqd
aXnjDo+FFh+1VtARvr8/LW095nuTfI11HOu1sL4JHo+xBvg5eAa88qrnJste
D7yWlsafDzyXljdeDLyQVk7zOXLwSD8fusS3t7rup7nfs/7ca55jpq89w7wt
qgMeQYtveO55rsFLaXnxCddurq+xjtleC+s7I8ZZP/BUWufZJO/Dpm6pwSZu
2St0/H7gvbR0/YE5e/mhObX5OPCRn++fwN9paZ9+76alkW8CX6flB669k5ZG
PnF/dPZF4PO0dPelORr9yhzffOo+l3u8r7w3H3lNF3uMz9LywbeB/6Xlg98D
v6Wl3R8C36el5R/N0fjPgZ/SygbW+LbRjPO8Eegf3vyOMVvkK8b7lbW0aK6v
WuShXzwWvvrDc7Pff5qz/3+Z3+Ax6HOl10u9rvVafnTNOmT0N/CL/HzUAq0v
d93xR+u43yojHa+QEUfXK2bE0fvK0a6Ukb7/dX88RL//rKO14uc1M/LBf/4c
Hlolo/74qk1G7zp4qW1GHG+tkREnr3knog+6ZDzu4TfmZ023WS/UYl7Ubu2M
9IkPKvFzOSN/ZKPNZKTjXEYcXecz4ui9EG2S0TsIe1XPyEP0S2fkK8YrZeQr
rqUy8lAxo/74qprR3PislhHnnYbx4PifMeiDL1kz9cJvzJ93LfYK7Ola7G3O
8+9jjmbXjXadjDS9XrSdM6r1ztH2zEgLm0a7SUa62zzazTLSOv06ZaSn7aPt
npEnudYxI/+1ZKQbvLJxtBtlpJ0u0a6fkc4Ym3voiWusA0+yFtaH5xmPsfAb
Y2yYkXZ3yGhu9nDHaHtkpPttot06I11vF+22GX235L2E94hF9hV7xblIfd+w
3um3VUaaYDzmwANc2zIj326RUS3Q/U4ZzY3HqEG3wICOqtN3LfIo11gHHmMt
rA/PMx5jkS88U9eMcod2g4yyhLaLPbNrYBd7YDdzNL5HYPeMPNQ70MvaGhDY
31qnX1/reGDggIw8ybU+Gflkd4+LV/a1VtBWf/PVral+GeluP99bzddYR2uP
19vaPTgwIiPtHmKOlg81R/dDAoMz0vWwwNCM8o+8IfvIAJ4JXZIXaJO6J+53
UEa6pz0wI0/SDsrIq4P8zPhypOdm3FHm/N6T7418l614vcMz8utwr6nodbHW
tOtHfQvFeP8ITA406vE+GTg1UA5MDZxUlyeOCIzJSOPjA0dl5KGxvofejwyM
y0j343yP/T86MCEjTZ0QON5ameh7aOcYc/xxrDm+Os4cn00yH9hRY/zQIr8d
5bm7eJ7x3r/TA/My0vpkz42WTw2ckpEnTgpMycg3U83R9zRz9H6yOV6dEZie
0X4y9tyMPHCi59jZ1+Zk5I8pvocXTwvMzMhvs8zRwWzznu4H38GfZT70ON/P
c3jglsDN3udrAldn5I8FgTMy8tWZ5vhhoTn+OMscrS8yR/tnm+OPc8zJ3MXm
ZO4Sc3x1rjm+Os8cL51vjm+XBi7ISGcXmqO7i8y38z5Q375eO8+J9i8NXJKR
Jy4zxyuXm6PjK8zR9ZXmaP0q8+GuDRz/XOy58fC1rh0evs4cX11vjq9uMMdn
N5rzb+huMh/tfYAP8nov9rW/An9mlKnoBc3hn1u9f/jj9sCyjDxwT+DujHR8
h++h47sCd2ak8Tt9D2/cF7g3Ix88Eng4I5/c73to8LXAqxl55gHfw0MPmv/U
op9/jHZQeOqh+PmXFnnobs890fOwPvT+usfFS496bvbw2cAzGen9icDjGXnp
SXO89JQ5XnranNo8H3guI32/4Tnw0mOeY46f45WMvPS47+GPFwMvZOSll8zx
0svms90PPsOfZT4y6zbvBxr5iTpkpJsfAt9n5If3A+9lpM23Am9m5Ku3zfHV
O+b46l1zPPNh4IOMPPae76H7LwNfZOQH2s8zysplXhO++jjwUUa++sQcX31q
foH7fZaRJz/yfGjr74z0d7bn5xnQ/Vee+yo/K8+Jr/4X+CYjX31rjq++M7/C
9YDjmZ9dr/muB3uG7r/2HPgB7f+RkSe+8T189Wvgl4x89Zs5vvrd/Eb3g1/r
z/7sffrHz7ZDNjQRmB3IBAYHDsqqfv8Glmek3xXj2gpZeek/38NDreNaq6y8
RMs9NL5y/LxSVppeI9q2WXlplazu4Z9Vs+L4Z7Ws+ODwzurR/tYiD7XJiuNJ
xoDjJdbC3HiJeVgfWq9HW8tK62tmNTd+ykWbzco/7aJdOyv/pLLi+CedFcdP
1AKOvpNo81l5lbGrWXlmrazmwE9cq2TlJ8bmHv4pRlvIyj+lrDj+KWfF8RP9
4PiJzzIfOmhk9Tzob6dod8xKK9tGu01WnmkfbTMrz3TIiuOZlqw4PumYFcc3
nbLi6HidrDi6Xjcrju47Z8XxwXpZcTyzflYcz3TJiuOZrtFukJWHNsyK48WN
suL4ZOOsOLmWtdbQO2vnOdH1ZtFumpVnNs+K45ktsuJ4ZsusOB7aKiuO97bO
iuNFagPHP5tkNTe63y6r2uGDbllxPNM9K45nts+K/25vwPFQj6w4XmQf4PiQ
9TIHmYtG0Nlt9s3/77GeWe0fnukdba+sfNInK45v+mbF0fQu5mh8V3P0vZs5
et/dHC/tYY6X+pmjp0MDh2Tlqz19D5/tZf5Hi37+Pdoh4bu90VqL/LZvYJ+s
dD0qMDIrnY70uPhq/8B+WXlggDm6P8AcHww0x2ODzPHYgeZ47CBzvN3fc6OR
IVnlETUdak6Nh5njk+Hm+GaEOR472LzkGsDber3MwXsSWnza+7RzVvuEtqYF
pmblmXGBsVn5cHTgsKz0erg5+h1jjveOMMdXRwWOzMqHY30Pb0wKHJeVZ2iP
zUov6IJ14L0JgfFZee9oc7w30RzvHWO+jj/LfHjgFJ4vK58f6WfAh8d77i19
n+dEuycGJmel5SnmeO8k881dDzi+OtVz1FwP9IG3T/AceIbzZFZW3pvse3hv
RmB6Vt6baY73TjPv7n7wbfxZ5huUizMvcG1O73/47Vn7cm5WZxj7Nz9welb+
OSuw0DU9w/fw25mBBVnVe4Hv4auzA4uy8sEFgfOz8tg5vofHFpvjsSXm+Opc
c3x1nvnwjhrjnxZ5e6Hn3sXzsD60eVPgxqz8ttRz440rApdnpdmLAxdl5bFL
zPHYpeZ47DJz/HRV4MqsdM/YN2Tlqws9xwhfuz4rP1zke3jsmsDVWXnsWnM8
dp35cPeDD/ZnmY9cuNnPwx6+GnglK509G3gmK63cGrglK+3cZo6XlpnjpdvN
8dId5vjnTnP8dJc5+r7bHL3fY44f7jXHH/eZ46X7zfHSA+Z46UFzPPlw4KGs
Muty13ek185zovXHAo9mpe/HzdH7E+Z46UlzvPSUOV562nyqawMnDx7x3Hj0
OdcOvz1vjh9eMMcfL5rjpZfM8dLL5qd5H+CTvN5H3KcSfirnlL/oBc3h3de8
f+j1vcC7Wen1g8D7gXmBNwNvZOWrtwNvZeW9t3wPH3we+CwrvX/o/uf62qdZ
aev3wG9Zeewjfw6PfWyOxz4xX+J+cHz7jude4DXCF3qNrBu9/uE58Mx3gW+z
8uVXgS+z8tvX5njjG3P88D9zfPVD4PusdP+nxx0RHv8i2lYd5QOe49fAvy16
9uUt0s5PgR9d35/Nqfcv5le5H/wyf5b5yLXXvR9oKBt7lclJZ+loUzn5p1W0
/2Xl6b8Df2Xl+3/M8eRyc7T7rzkeWyH6ts5J1//5Hj5ZPa6tlpN/aFfNKWvf
8Jrw4UpxbcWcfLhyThwfrpITx4f0g+NhPst8aLSak/7wPPPzDHiyTU5z4x+e
lefEh2tFu2ZO3lg7J46O2+XE0TX1gOOxXE71ut71YM/weduc5sA/aL+Uk+fX
yOkePkyizefky0JOHB8Wc+L4kH5wPMxnmQ+/1XJ6Nt4T8Qk12zj41MBJOXmj
Y7QtOWl3nWg75eTRRrT1nPa7fbTNnHxIyz380DXaDXLS+ro59cczXOuSk262
j7Z7Tp7onNPn8MN6OXH8sX5OHE/SD86+dshpbvaZNcLxNGtk3Whzh5zmwDNb
RbtlTj7YItrNc/L3Jjk9Nz7YNCe+Qkf93LqjPLxR/LxhTn7okdO4eG/rnMbF
r92i3S4n//NZnv9T15T++HObnPrg121z4vicfnB8Sz26eZ8ODoywng7M6f0C
TRwQGJCTVvpE2zsnT+7Efubk0Z45cby+c06cfOmVE8dvu0TbN6eMYIxe1v1e
gT1z0jttv5y+G5xureDJ3eLarjn5cPecOL7cIyfeyv3g+JnPMt8h/K0h2pU6
Su/MzzPgub09N/oe6OfEk/0D++bk0f3M8fr+5qu7HnD8dpDrRWZRD/YMz+/j
ObKu6/Cc/L+v7+HJIYHBOXl0qDneHmaecT/42v4s85HR6AttcYbhDzyG5w7x
XsKPCIzJyZOjAiNz8uhh5nh9tDm5c7g5vhoXGJuTb8f4Hr46JjAxJ+3THu11
zAzMyMknRwWOzMkn483xzQTzju4Hb/qzzIe+ZwVOy+mZxvoZ8OqxnhtPHh+Y
lJNHTzDH65PN8cOJ5vhjijneOMl8S8/DuvHhtJzyCC+ebL6e5zkusEpHXV85
2pGBU9CF9TU9cGpOPp9h3tn9WPesJHwb+DZRbh7qfULvFwcuyik7zgjMz8mr
cwKzc/LqXHO8O88c355ujubODCzIydPzfQ+tLwkszslztOfklNcjvQ58e1Zg
YU6+XWSOb8827+V+8B39WeZD35cGLskppxb4GfDZuZ57L9/nOfHtBYHzc/Lt
UnN8e6F5P9cDjk8u8xxbux7oA2+f5znw7TWBq3Py/fm+h2+vCFyek2+vNMe3
V5kPcD/4vv4s8+Hn63P6foXfbjB/Jh8aij3cMJEn7gvcm5M3aO9xXe8M3OH6
0t6ek47vd5/R/uzdOXmP9q6cPHmX+7MHXwW+dN2/CXztGv0c+Cknjb4ceCkn
Xb8YeCEn/y8L3JZTptwUuDGnTLnZnEy5xRxvPB94LidvvGCO9p8OPJWTPx8M
PJCTrrn2ZE4eo9+zOemC9X6Rkw+59kxO/n7I/cmzWz33CK8RfojrxLqn+pl4
nrGek9od7/FY05me5/OcdEf7WU76o/00J3+/F3g3J928b46OPjDHVx+a4913
Am/nlAvvmuO3j/y5jwPbhg62yWuObtFuZ74ksDiv++eac+88cz57vvn2gaWB
CwKf5PQ5+pFxTwQezylHWMtbgbaRNa9G26ajPMP+/5iTp78N/C8nz3/iNZ7j
a+hmkbWDns53vx9yyrA3A2/k5BmufZ+Tb7/zuKNjvteiXbOjMu4t9yELX8lJ
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
m+/nfvADrK/7rMUNStozNMh6SyVpkbZYkh7RAs+MfruW1Afdb1gSR/cblcTR
PfWAMwd1apa0VlqejaxNl6RRcjmJNl9SFhdK4uR0pqTPcX5kS+KcGbmSOGcI
/eBkLuulf9f24ZnAmYG9fHYtC/T373j4vQ/+3j4+272kjO4V7c4l5Uu3aLcr
KR+34j2lpMyj3aKkvNihpP6cMfTrWdLZQ7tTSdoZGO0BJelvQLT7l5Q3PUrq
zxm2Y0mcM4x+cLJ4m2i3LimLty2Jk8WsC042sXbWSu73ibZ3STraK9o9S8q5
ftHuUVI+7hJt35LycdeSOHrdu6Q+1H1y4ISSfMB69yvJG/2j3bckP/BMPA/n
G3NSO84YxmYd+GCfksbFY/SD4yvG62+vHh2YUJK/xweOss9pjyzJ6yOiHV6S
z4dFO7SkXDkw2kEl5eBBJXFycHBJnO9LowOHlZSJQ0q6R+4cXNK4fEcaFRjp
OZ4IPO45Hgs8WlJWHVJSH75rHWq+gvvBV/I8jMV5s1tJ9SVzGYu5yT/WiybI
qol+/rVcA56fjBkbOKKkHBxn3tb1gPPePCZweEn5x7qpC146xuPih+MDk0r6
7ne4a7Gax6Y/vjrWffDVceZZ94PnrQXG+rGk35PiIc7R3Ut6TjILraEzzo/T
A/NKyovTAjNLygDaGSVlzNTASSVlwfTAqSWdJ/SbW9K5QjunpPOGdnZJ/p4S
OLEk7V8auKQkT1wcuKikrJrluTu6H5z8nea5yd+TzcnfU8zrXguc3/ueG1hS
0nl2RmB+Se8mXFtcUvafEzi7pEw8M7CgJH+ylgtL8sl9gXtL8jDXlpaUJecH
zispF2e4Ft38TDzPep6Tmnbx2KxjC/djfVt7vAtK8tY9gbtL8hjtXSX5j/bO
krLg1sAtJXn3usC1JWXYNYGrS8qmywOXlZRNV5jj7evdh5y60vd293g3l6T7
mwI3lqRL/ISXCt438qXk/WcvyYwbPO4u7gffzeMxFu9qe3geMvIqz93La2fd
aHBZ4LaS8ul+131/1566kEd3BG4vKY/uNMeTD7hPT9eAOfAtGfBISZnycOCh
knKf2qC/fp6Tmu7lsVkHXn/Q4x7ofvDBHu9h12W98FPnsq6tG+06Zd2j7VRW
rjwfeK4kH78YeKGkPHoq8GRJGfRM4OmSsulp3yNT3gi8XpLnX3L/o3zttZL0
/lXgy5Ky4WV/jtx5xZzcedX8SPeDk3/Peu5RXiN8tNfIutH0156D/f848FFJ
ufJh4IOSMuidwNslZdC75mTQe+Zk5VuBN0vyyjceFw194nHx8BeBz0vK1Df9
/BM9Nv3R3afuQxZ8Zj7N/eCnuB5fWAtrxT6sWZYnV4l25bJ8vFK0K5aVWz+V
lJHkzreB/5WUO9+Zk0Pfm5NnP5jj718CP5eUeT/6Hpnyd+CvwCK3f5b07w35
+zq/+ycPfgv8WlL2/G6+MPCH+VnuBz/Dn2U+Mv591/d0z88zkGf/eG4yjGfl
Ocma/wL/lpQ9rcri5M4K8XPrsnKIesDJsFXLqtdM14M9IzeXew48Rl3XKCtT
//U9vLV6XFutrNxpUxYna9qWxfE//eD4kM8y3/HWFM822VpDZ5z3eIUzHr8W
47OFsnIriTZfVgalo02VlUGZsjiZlC2LkyONaOtlZVOurHt4vlTWuGRtLdpq
WT7YLNpNy/LHJtFuXFZOlMvqQwZVyuJkEv3g5DfzMBY51y7atcvKRdbL3HiM
sRmXrF2/rEwht8gVMoUMaom2Q1kZ1LEsTiaRMXCysn20zbKyjNpQF+rVpaxx
8flG0W5YVqbyWWpBbjI2/anxBmX1IYO6lsXJJPrByQhqwFhdrVf0S0bsEdd2
L8uLu0a7S1k+7hbtdmXl1rbRblNWTm0R7eZl5dSWZXFyaquyOFroGe1OZWXW
1mXdIwu6lzUuHtgx2h5lnSXUGM9zzqEF6k5+bF9WH7Jph7I42UQ/OJpjHsYi
O3Yr6xnIS9bL3OQv60UT5Fe/sp6ZvOG56UM29Ym2d1nZ1LcsTjZRDzi67hXt
zmVlHLWhLnhsz7LGJV/4Ozd/98YDfJZakJWMTX98yXck+pBT/L4PTk7RD04e
8d7HWBs6U9gzvuMtMuc739nmZMCowMiysoD20LK8PTzaYWX5n3ZoWflymPu0
9mcPKStfDo52RFnZQDvculkUOMu6PydwtjVxYWBpWfo9MTC5LK+cEDi+rBwd
Eu3gsrJwYLQHlJWbg8ri5OaBZXG8PSlwXFl+O94cTUwMHF1Wxh0eGF2Wdrg2
oay8oN+xZWmf9S4sK1O4dkxZmTXG/cnog8qam8xmjXCymDqx7sTPxPOs7Dmp
XcrjsaaunufMsrxHu6AsT9KeUdb7xdzAnLJ8OzMwo6y8mOd7TV+bXlYOnRo4
pazMoN/ssvLrpMCUsnKEa7PKyoPTPO7ngV0rod3Al/Hz7tHuVtGZMyD4/p7j
68BXnoPPfVFWTs3yWJwV4wNHlZWVUz03eXlyYFpZHmP/LyjLY0sCi8vKxPmB
08vKS66hG3II7aCnrdzv/LLyd5rn2NLXzivLu+d63JrXytwNPwM1Kroe6K+z
56Sm67v2rGMLj8dYnF1HWAecc2PNOefGmeP7GwM3lJUpN5nj4WsD15SVHTf7
3s6+dnVZeUG/68vKp6sCV5aVKVy7riytPRJ4uCzNvhd4tyytv2+O5j4MfFBW
3lwcuKgsbT4WeLSsXLnOazrWY7xTVm5eGrikrKy8PHBZWVp/KPBgWVp/2Bxd
3Be4t6x8vDVwS1la4Rr/XmeQ+z1QVhZf5jkG+tr9ZeXgbe5PTl/huXd0DeA9
XSfqMsTPQS1295zU9ACPx5o+K0vLfSvyHM/3dlnZ8IHrxb69GnglcGTgNXN8
/mLghbJ0/Lrvjfa1573f9Hu5rEx8LvBsWZrg2ktlnVuXeA/aeg7mXMPjwjnD
yCE8gy7xFr7a1vtGVo7xeKxpop/jrbJy9onA42Vl8dOBp8ryxOeuAbr/whyt
fxz4yHO+GXijrKziGrqZ6n6flpXlT3qOk3ztk7Ky8y335xx4xnOPdA3gh7lO
1GWY1/iYn/MN13SKx2NNnG3LrAPmYd/6VHSvd7S9KvLkL4Gfy8rpPwN/lJUL
f5mTiT8GfijL03z2p7Kyls/+XlbW0v5WVtbS/lqWntaNedap6Dk2jnajinS3
VrRrVqTHNaJtW1FO/Oo1kaH/C3xTVg5+a04ufmdO7n5vjqYZo01F+lgl2pUr
yrt/An97/7m2UkV5uWK0K1TkDfqtXpEPO0XbsSJvcW21inS3akXjznE9mHue
60GN8BLPxPOc7TmpI7m73OvAq4zHWPiYeVoq8i5th4o8R9u+Ig8Xok0q+h1u
LdpqRR7lGv/dC7Iv5//uBRnULtq1K/p3fny2UlE+pSq6x982uVauSCOlaIsV
/f2J7yp8H+LvQvzOhd8J8R2JDOJ3YXyPIhcGWFv0Y338vpnxGItz4l8/M1mb
rmhusps1ZirS7nrRdq4o1xrR1ivKIa6hG3IR7bAfZBD1aFbkB3S0YUUZz3jM
gWe41rUij3WJdv2Ksow6USPOB2qD/vi9OHNSU/KVsVkH3qIf68P/jLdBRefW
f342zrFWFXHOydYVcc6MHaPtUZGfu0W7XUX5uFNF9/Ar17atKAe3iXbris4N
+u1QUTZtHu1mFWUt17avKCe6VzQumh0XGGvNHRU4sqKc2DTaTSrS5v7R7leR
ZvtHu29Fmcd43a17xjiiolzcoqK5yeOtot2yIq3Tb5+K3ln6RbtHRRm3c7Q9
K8parvGuQ0byvsM7EP6k394VZTnjMQce5tpeFfl8z4rG5cygHsxNrlEnaoTH
eA6egTOHOakpWUuesQ4ygvEYiywk88i71fx8Yyry8OGB0RXt26GBQyry57Bo
h1aUCyN9Dx9zbUhFmTg42oO83/Q7uKLMOiDaAdYE10ZU5IHhFY3Le9YKnpNz
iBwig2Y456gr+c6+kZWcjew/e4nmGI+xVvVz8Azk5cCK5iaDD4x2UEWe4L9/
c2xFWp8QGF/RnIcFRlWUVeOtm7bWDnpKu98xFWU54zFHytcmVuShoz0u5wD1
YG7yjjpRI84K6rG/n3OUa7qya8862nk8xtrAf79a0F7/e1D+Gxz8NznWD35G
YH57aef8wHnWxwXm1Ghx4JyKsmNeYG5FteTa2dYc/c6tKD8WBc6qSOtcW1JR
9pzu/uTZ1MBJFeXlNHPy4pTAyRXp8sLA0oqyijnnVLRvS7ymkseYUlGmzPcc
ZMqZgQVuf6fegYXU1Jx1/BT40Wv90/fm+toP7k+/XyvKrTM8B/iFfahIv48F
Hq0ozxZ6zg09Lnxj14m6XBlYoxq6qGovHwk87HX/7DXNDnwf+K6ic4DnO7Gi
M+dk1wvtPBh4wPp4yBxN3Bu4p6K8uCVwc0X+5trdFWmOfvdXlD13Be6sSOtc
u6+ivLnV/cnIywOXVZSjV5iTEVf5mcjdiwMXVZRPzHlTRTq9z2sq+DkmV5RH
t3kOcuX2wLKKzupZgdMqOsNnm3N+TA+cWtG5Ncf36r6Gbjq438yKcmqZ52jv
azMqyj80hb7JyDs89z6uAby/60RdDvL+UN9t/XzosunxWNP2rs2l5l8HvvKc
/wt8U5FOPw18UpHWPzPnv631YeCDivLi9cBrFf3vBrj2vveffh9XlD3vBd51
Lbn2UUV584b7k5FPBZ6sKEefNicjng08U5GOvgh8XlE+Meer3puPvKYRHuOJ
ivLoTc9BrrwdeCuwPHQ8vBY5HPg3fh5RE/8TfUd7UOC/+Pngmu79UdW1AwP/
VNVvaE059Zbn+Luqa0MC28TPFwaWVpWR73juY10D+CTXibpc2IgsbkYuBraK
PhcEzg/8VdV4rGmG94R9Gu7ne7yiM+kZ14v9XD36rFaV1ttUxdn/laNdqSpP
/x34y5rg2opV6YB+q1alsxWibR24pKJrq1SVnf+4P5r91lpB69+Zo3FyiCw4
1Zr6sqIcYU4yC88xHmsa5ucgj8jH5Z6DDP4v8G9FZ/XLgZcqejd5xZwz4/nA
cxWdVa/63ihfQzdj3O/FijL4X89xuK+9UFE2oSn0zZnQqqq5OUuoARz/USfq
wplGdpKDp/j50OVoj8eaeJeiptSvm1uem3c+sucK72GXGG/9qjS7QVUc3Xet
ijNP52jXrcrf9WhrVdWMfutVtQ7ur1NVHblGH7KAz1YD18XPqWjbBa6Pn9NV
8Rvi50xVnOzLRZutSlMbRbthVRncqGruaysaY+2q8qVTtB2rysv20TaramcG
ZgQ6BE4zbwnMMmesUwOnuP9s32u63/Sq8hfeMKa7D9raN9p9qsr+Dp6T86HF
c3KudPScZCG1Ya1Xx89rRbtmVWfmftH2d01Zy8mBayp6Pj7HmZCvqi74b89o
+1Wl+72q4uh+76o4Wtg92t2q8vdO0e5YlW/pt0dVWuH+rlX5g2v0IQv4bI+q
tLl5tJtVpd8tquLofsuqOHrfuqrMQO+bRLtxVRncs6q5b6xoP9lj9L1LtH2r
yste0e5c1ZlTirZY1blSropzrlSq4pypSVW14MxBU9zjrKJfoar8ZTzm5ozk
Gn3wIetCT2R/76rm5nzoUxXnXGFdcLxIbVgrucI+U18yDj129dzTAlM9x+TA
CV7Hiebo+5jAxKr0faw5ez8+cFRVnh4VGFnVOw7XjqxK4/Q7uqocHRcYW5Uu
uDahquw8zP155xoU7cCq3tUOrIqTd4OjPaiqfZgUOK6qHGHOQ62zCV4T722M
cUBV+Tjac5DBYwKHV/X7G3yLj/k93I3mfOdBu2ic71o3+V5PX+O9p4/7kQer
eDzm6O1r1zqb2vq5OROO8Nyruwbwtq4TdUGPnFfnVTXHmq5lL4/HmnhPHBDX
9q/qfZEW7/H+Sm2oF1pfElhcldbPNd/CY8PR0dmBRVV5em5gTmBT9zvHOuP+
WVV54hz36eTPkjVodoq1gtZPMi9bU3A0frJ1lre+jq8qa+d5brS4MHBmVZl7
uu+RwfPNOUsOjnZEVWfJIVVxztGh0Q6p6pw51Pc4J7mGbjiv6De8qnOLdlhV
ZyQt/TPWFPrmTDjDc3OWLDD/DT3Ge8TAms6VM32Ps5r8I09zfj40uqHrx7P9
yF5Fv/6Bn9jDmvjP8fOAmjhafzDwQFXj3R24qyof3xS40XNw7c6q/HxH4Paq
9E6/+6vKwVsCN1flAa7dZ63c43G3D1wWuLSqrLwicHlVOno48FBV2cGcN1SV
tTd7HejuXo/V3WNcUlUG3+q5yfRlgdvcluL5ijX1z0WbrWnd5ZruMQ/XMoHr
4+d0tKma+tOvUFP23+Y5ANeSmtaVr2ncvVwP5tzHdaJGT7Mfcb9rTVr8PPBZ
VefVl4EvvG7GY6yr4uc1o10j0M3Pd3Fg28BFVb2bou9PA594zz8IvF+Vp18L
vGodcO09a+vdwDtV+YR+H1eVWW8EXq/KS1z7qCqvfOhx0fpTgSer0vgzfiY0
/mjgkapyhDlfqSqDX/c6Jns8xtrOz8EzkJdvem5y+u3AW1WdH+zBdVWdf9Ti
yqrOlht8b0dfQzc7WDvoqbf7XVtVxr/lOXr52jVVnW1Xe9xjXA/mPs51okZT
vT/Ud7CfD12ScWgTn+zs8a421qppz7i2dk2cOdvVxPkusWK0K9TkS76r8L2E
7wpca11TRrbydxfyju8kfIdA46vF9VVrysJ/fA9dcG2Vmmq6crQr1ZSP3we+
c23axLXVa8oC5vy9qnz9y+tAT/RjfewP4zEW73nfBv5XVTYv99zkOGvku9ca
fPdpifMk2i7+fQ+/3+H6inF9zWhXDqwQP68S7fb1eMb4uXu0bwVfJX5+u6Fz
4l/PcYyvT4x2HP3j57ENnVHUiRpdxPWmvnddzOeb4pfEz6s2xcd5bUdG+7LH
eaWhd1me6Zuq3lVpv67q/ZT2K2t9g5inS037v26069Tk6Wq0lZo0wbVONWmi
Y7QtgSeq6rd+TXlXj7YWeLyqa+vV5JvONY2LZskbtILGySEyCI2TAW1ryhHm
JLPIYMZjHY9VNR5jkYmNmuYjc9tH26wpgzvUxDnzOA9+qOoMQQucLXN8Dd3M
snbY+1NdD3JqgT/7a1VnEu0vVZ1VtJwnp7vlnOFMoB7MjW+oEzUa4fpSJ85n
8o9MxMPoFK3P8xisFZ9TA3TM9zPeM3hfGO4xqCvnKLV41Pu5J5ld0z7vVRNn
nt2i3bUmr+8YbY+a5ubaLjXtP/32qMn/faPtU1MNuLZ7TZm6U039X4yfN492
s8BL8fMWNXFycKtot6yplvtEu3dN+cKcO9RUU8ZjTS9UNcamNWVuz5rmIDt7
RbtzTe21ZEygN7oxZx1XBq7wWq/3vR6+drn70+/qmrIY3tPg2lU1nYGTAsfV
dA709pycFX08J7lInajLs/HzxtFuZL0eGzjG677Ka9o+cFng0sDzVT3fJoGX
q6oN9SIfjw5MsAcmmrPnRwbG1eT7QwOHWAdcG1tTztJvvHVzRGBMTVnMtaNq
yteR7o9OD6jpvQf98j4Fxwf8foh3LHzAu9K+NWUNc/K7pDU8Hmt6rqrn4PnJ
zVGeg9wcHTispvOne7TdajpjqAWcc3GbaLeu6fzZwXXi/OQauuHcot92NWXz
YZ6D85Jr29bkTzSFvsnswz33qq4BfHXXibqkvD/UF5/zfOiSs5rxtjEuDCz1
HBeZM+fF5uj73MAS7/2iwFk1+XtOYHZN7ztcW1hTjp4ZWFCTxum3uKbsmxeY
W5MuuHaOa3q2x+X9a0rgxJqyb2rgpJq0c37gvJoyhTln1ZTHc72OTTweYxU8
xuSasvJ0z00enxGYX9P3InSJj/lOyB6jcb4zveJ7I32NdyDe9XkP4t1ojPu9
6Dye7zkO9zX8zffA5z1uF9eDubu6TtSI3wfwrnCB59jItWSOrq7laI/HWImf
6YSa3h1pjw8s7yAv816K1u8L3FuT1u83Z//vCtxZk6dvDNxgTXDtjpq+G9Dv
Huvs9sCymr4/cO3umrLzJvdHs5dYK2j9UnM0Tg6RBVtbXxfUlCPMSWb193is
iUy82eOSkbeYk8G3mnOunBaYWdNZeHJgWk1nzizfq/gauilZO+ipvfvNqOmM
pJ1e09l5auCUms7YUzwuZ8JtnntP1wA+zOfPY/biHa7RVn4+NErGoVM8w9lO
vpKV/J6Rc4zvuPzek98D8V2c34vzO2i0QM69Gnilpv18P/Ce9/gDc/b8Q3O0
8JE5nn858FJN2v/Y96jBp4FPavq9+ROBx2v6XfmT5vzO+pHAwzX9DvtRc35H
/pj5MPeDk49PuT95+bT5v6HDd/+fZ+bnd2o6l9rGO2Cbup5v62i3CrwWP29T
F389ft62Lv5G/LxdXRwNrR7tanVl2yt+zsnBPwp8WNf58VbgzZry7m1zsvs1
15Qsf92cs+IN8wnuBz/G633b17rVtY4xruuLNeUs7Qs1Zd6fgT9q0viK8dkV
6srQleriZOjKdXF8skpdHP//HvitJs+sWtc99Pt54LOaNPu/wDc16ftbczT6
hT+HZr80R9NfB76qSePfmOOP79yfc/EZ7xmaZb2t69Iubau6PPOJNcQ596z7
cCY9Z84Z9bz5aNcDPtVrR3MLXRuek2xgD3lOzoR/A8tr8sl/5pwBf7mm5Pjf
5uT6P+aL3Q+Oz1jvf9YFmtqyrr3nOwf7h1a4tkVd+l4n2k516Xvdujj67lwX
R9/r1cXR+/p1cTKyGm0l8FBNY3Ssy//laEt15Vo62lRd70Nr1KV73o/WrIvz
/rVWXZx3tLXr4rzbtauL46sNou1S17sd43GPvGF+5iPXO0TbPrB9fM+5LHBp
YIfA5eY9AleY7xi40nynwFXmJ0X/TwOfBB6s6Zla0ICvfRx4oKZrzEde1+qq
BfnN//cMnPOhURfnDGnWxTl7WCP8RI+HbzkHMnXVi3ylfsW6zpVsXffIjx7R
7lCX1neNdpe6tL5bXRyt7xHt7nVpvV9dHA/z/RMd4IM967qH7jeMtmtdmt0s
2k3r8vTmdXG0vlFdn0PrG9fF0fomdXG0Tj842YC+6I/2WWNfdNlBa3jHfuBa
n7rOuVxdz8k5l6+Lc84ldXHOnkJdnLOH2sDJa3SBLslcngOtcN6Sr2Ql3mWe
3nV5mLZXXWfJjnXVlHeo750LnCs71XWPs2TnaHvWdX7QD855wzU+191a4/s3
7zVk2K81vd/Q/mJPHxyfHVFXrhwaOMR+ODIwzn44yhw/jDenrosD59gbE3yP
eQZFOzDwc/w8INr968qXA+u6x/zcPyDwQ/zcP9p9Az/Gz/vVxX+qqR+ctfJZ
xiKDWO/wunx4tOdu5bUf7D0+N7Ckrj0/z5z7T7MnftZnzEeiIfPN3I9na+Ma
jK0rF48IjKnrbBgdOMx7Odb3VvX9w+vK7JGehzNmlPlK7gdfxZ8dbf6c10Ee
H1RXvcjQYdEOrcvbpwVm1uX1Weboa2HgzLr8cJY5flhk3t79ZtTljbN9r+lr
0+vSMWf2CXV5ndwhY4puyQb8MClwXF1+ON48737wgj/LWJwD7BXPsIn1wtwZ
j3FsXdl5TGBiXRk60fvKGTO4rlpwxgypi3PGUA942mPQfwPXYEFd3jsjML+u
M2NeYG5dvlzge+v5/ul1Zeps15RzY475Ou4H7+zPzvMePu89Q3No6knv5Qu+
h7+vD1wX2CdwZ+COurR+lzlav9scrd9jjqevDVxTlw/u9T18cH/gvrrevS4K
XFjXO9DF5pyl59ele87bC8x5h1tqvo37wTmDL3F/fhfIz2Ty3l7v7YG93C6r
6/0GTl7z3Q7f4mO+v/1kznetn83nO2/gvN/s7fF6uzY8Jxm3j+fkbLg1cEtd
58Ft5mTzDa4p+X2jOWfMTea7u9/NXt8y928dz3V1XTlJ3l8WuLSuvOT6VXV5
8UXvH35+OfBSXfp6N/BOXZp9zxzdv29Orj0YeKAuD3zge2j/icDjden10cAj
dWXYk743zPcfq8vzD3ksdP+w+WD3gw/1ZxkLz33o+Y7xGt+uK4de8vMMsF7Q
EOf05X5+zpgrzDlXrjTfyfWAD/QzoTnOIrTLPuHPtwJv1pX7bwRer8u7b/ve
BN/n3hxrhDHIy1dcX86V1wKv1nWuvG4+ztf4HHpEl//ffsV5drXfjbZt6PfO
Fzak79bRtmpI3ys0xNH3ig1x9L5SQ5zz4L/Av3X5hH5wcuHXwC915cRv5vy+
nN+b45Fpgc8DnwVODnxhzv+335fm/H/9fWVOvn4T+LquvGHsnwNTPQbvdku8
luV1Zdjvnpv2wJh3UOAPNNEQ/xNNNMT/QlsNcdY6MNoDGupPPzi5+0/gb+tu
A/4+EFgrMCEwvqEz4w/PyZnxpznnxF/mZ3sM+GKvl3HR7/oxxnoN3R/a0Jqm
+7mpxel+7p/q0nSnuN+xIU2v0xBH4+s2xNF354Y4GmyJtkND3qAfHH+Xoi02
lE/lhjhaWY2/PTSk7zbRrt6QvvnbCBx983eRtv7bCD+jezJ3bdeG7GDsQkPn
5/+8l/iBtbRvKCMrDc3NmfF94Lu6zowfzDlDfjSf5xrAOb+/9biz3A+OV5sx
XqOhTEd7aBffU2PqwvlRbWhuzo9aQ5zzo94Q58xgDDgZwHoZF09RG/4GhB7R
y4CG1rV/tPs1tI69o92rIX3vGu0uDel7t4Y4+t69Ic53kT7R9m7I/92j7daQ
xunXt6HvFtzv1ZDuuUYfcoLPbtfQe9hG0W7Y0PvQxg1xztpNGuJk9GbRbtqQ
vvpFu0dD2cN3Lebm3Y4xujaUkTs3lB9kd4+Gvofx7w35uzV/1+XfFPK3cDj/
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
vHMcN3w32euQl+Dy+14bXP7AMrj8oeXTrQN5uu1F79mOA77bwHtl/5VF5Abn
LvrkK6KXU+BBbdm8ZY6Yl3PUG32iTo7P6DmV4nVz9BA4n5FfO4g3zVHzG4iv
nyNX9hPfN4df24vvnSO/98khk98dcsjkd8ccMvndKYdM36vKsTaYhY21cvS2
ejk+A9u4tkWOvsI5BRwh17fPgSPkeimHTK6nHDK5Dq4g0zPBHvRSZ9iOHdQP
+8Mv4OBm4pvmwLvNc8jg7kbiG+boDRvnkOkHm+SQwWjmIYOX2Mt8amv/HP5a
o3E78b1y5MEBOT5brXEr8Zact4oYP6drz4vaaNxa9KLGe4jvLnpJ4z1zyOAx
dhGbhpq7Ww7sAJuJFdhHz1vjnKhXxHqcvYZ6DdaqX8SYcxdnUNZgzRHOI2TO
Vvgd/B7lelrjz9vmsAlM3EW8RY58PzDHPsn1g3LI5PrBOWRy/ZAcMrnOexFk
dJNT+Ktatu2aI7/ZA/5jPXCQ66wHNjcT3zFH32ieQ6Zn7JRDblDEmH5B38DG
nXPgN/PIdZ6dJor653jfzTshnudWSp5A78mBib353PUwSDTQPWZAjrlgwUni
J+bAhj45ZOI02HPAl745PiN3houGOZ9OFg11Do0UjciBzazZKwfuoLu383KI
9W7keUOci8OsC7zoLn5UDizrl2Pt9Ww7dtd47/iAdR6jPkQ9RY+IVoiOES0X
PSA6VvSgZex43HPAR3zQzz5b6TH7fJL4cF30tugtx2++6IIc+btAdKF994T1
nuR5T9juldbVQ/SQ7aDfdBPvmqMnHSneJcdZarpoWo5aP1t0Vg4cnCM6MweO
nCGakQNHZlomJ+Z6Dpgyy5+RN+eLznNunSualwOrRolOyfGMxZqn5zjrzLAd
5No51tvM85B3sj500UfZB3sAv2Z77bJtx276dC/Hh55wdI4Y01OJM76g1x4h
fniO3os/kOlJxJI52T5gDc496Ds+x9noOPu4hePDnrfw/shL8JHcJHfpdcc6
Rziz9HCOcK5CH7rA34mOP/LDjh/7INfIM7DyetF1Oc4Ct4tuy4ENt4puyYEp
N4puyIEpN1nmPesdngO+LPVn+PIe0TLnxN2iu3L46T7RvTl6AmtemwOXb7Ad
+O5O6z3C8+50bJZZF3h0qWhJDiy72Wt3tu3Yfb1qoeGWyqmydGu8lcY7aryU
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
58k020BN/+W+S8/9D9AfV20=
           "]], 
          PolygonBox[CompressedData["
1:eJwllfuTzlUcxw9RjJ59HvvssyhkdY6sS4ylpsllaFSGkqVcBpMdNYxrRrLp
p1a3/yDDb4R1aVwnMuQeGoVd1EiUy0YumdAQ8XrP+4fXzPv9PdfPOZ/P+ZZV
zaqc2TiEMBuawOQUwp8lITTAgxjCB/gLpSGch3boOfAJeiGUoufDxVL3aY/+
UOPRDdAB/RFcRl+CjujnobqIfvAd81cn99UcT6HfS567BgroBcljNWcZ+kUo
ZFkbvmf8ePzufAi74B/8EHxRyxCycArfBN+7wJwwBd0c6tAfw6PoGdCFucsh
i24GNbSdhOnoo8zRNxfCTdYbiJ8N3enbDUrQs5J1VyhGvwXXi0O4Bn8x9jl8
ObF2ge34pslrV0Bj9F2+VXLWS6AKfx9/Eb0Y/kPnk+f+AuahM3C84D1oLzoj
nZViaJl8R7or3VHr5JgUWz1jWqBvM2dz5h4Jb+PvRa+tO9fdN0rem/bwP20h
ORf68O1dnSU8QyydYVv0N7XpjB9RG7TKsDaspD3iS9AF+Aq/Bo6h50I5bbX4
Nuj5sAq9N/puDzD/C8lnprNbADvQ++AQuhV99qO/jc6lTlBB/wP4SVnniHLl
YHTfKjiE/jH6LlfBANp34g8WOSeVm9/g6zO+sy3oXdFra83d6E70Kc04xhX4
l5STOedIHf5pfD7jmJfiOyefhWJUrNqj9qoz3IpfphrLeIzG/qQzYm+34Ah6
U/RZH6G9B+3rFS+6DjagU/LZak/L8c+qvjLuo771UJPzHrXXm9G1ohyYqNrF
v0Ou1sIo/M86X/rmqJ9X8b/h30QvgmH4s9H6NLyOn5qcW6op1dY0OFFwjj6e
HINi6cecg/Q2RK+lGlGtqMZUaxpThP4jeu4y2t/A90qOVXeiuzkf3aY9V9L2
PnxOfn8GT6LnJutPoU1yjivXVWN3omtItaQxbZPfBL0NqvnH0D/QZ3XWOdRP
bw/+KmuthAZ0T70JGefw5ug70d3o28bonFJuaY7D+L91X3m/UXqrbuB3oqvh
Ovoa9M67z7jkmlftj4BJ+N/xv3IeX8Jr+NPRd6M70d2cgw7F7jOc9lv4ZiVe
Y0LyGlqrAsbqLcdPLvaYEckxKTZ9G4m/Gt1XMY/WWxN9dwvhRHRNqjZVM3vw
J1U/OefYYL2luhPOYh6sja451Z5yun/yHJpLOfYy/kr0W6kzGIP/Nzp2xaBY
zkTHPgqGJr8Zeju0xmrauiavpRr6WmcV3Vf/AP0Luie/LaqJdbT9Ev1v0J5f
oe2J5FzRP0r/qoe88A2Y
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJx0nHk4lO/3xy2VLaJNJG3aKMlSUnknWSoKISmiVJZCiOzKkjW77Pu+jn1n
zJgx9iVrZQklJUmUSvzmd3379/PXXNdzzTPPfd9z7nNe73PO/ey+baFxl4mB
gcFpHwMDM/3T/Zam3+eIPQgI3tQuv5UD60Ve3u2QO4QHmlTday53wV9bl/VM
/Qpc5HZ/H5F4iFPxksazex6j3Vbgq1qbPkJcTMi55U7gK+Dx6611xU55JQGB
Xffxa4f4TuEgT/hwPbhXpeAJufqooTWr5lBfr9H6/YM/htffb2Rp9IWL1JnG
TW7WYAlXrX0lGoKDqmtmcw4HwfCjQ49xsB2MTGRudv4Kx9iNUp3TzKGQEQos
4C1xBP+fjLKl3igkX4pgO/ohHLxKX/50f3RFuT7nw0ViHALbnl0x74tEy9N1
XDW8z8C2VZ65dyQRqa6cVbxdMRhQ6eQykPdAq/zzh7OTyTggdHBNR288NG+z
+WrbesF/crjg7bdUGFgejzv2LRGR5ePPyAXe+HyDK7t7TQZkyKWs0k7J8JQZ
Lb/x1RcBSbvFnu/IQsuIrnI9RyqYyO8q3KUCMLC1bd2N0zkY68lxvpaYhsaD
iT6c7oG4I5bGyHM7D0ET/d5uMhl4d1mo/vpMENbuvDWiHVgATspomeLrTDRw
ZzbIbw9BVUZlluA4AaFvOJ/+csnGtVwbsUbVUJyRpp3/tFqIYmbvdK4DudhU
ZdBZ/SwMrhOdZky7ijHG7rJdqisPw8tmAQ4V4dj65ZRs79kS5L3rYQy3K0DF
AfZdszMREFrMO//IoBRvq7RO7gigP0eYrevrjkjUyOstDziVYcJ0c98r3ULU
Yuxn/oUoFAwm770WVo4EhWX6zUXgXm//+7BFNOS7htQY0yuQrNQ29mK6CLrv
hB/mvYjBIT9P7y1FldBkOcI8l1MMli/O3R+zYlEt0u4jWlWFS1WRPrcflmBd
VP9zGjkOxZu26jI3VOObrcS4oFgp+DSXX3mPxkM5PUU5srkGv+4/eJW2WAqn
C6X6uqsJWPNlaMdSXy3sFz7tbqwtw+erpLP2wYnY4a4sO/y+Dnct2ajrvMox
5TjVcmtvEnZMBtZ8X6wHz9FYrW0XKzCn9MlbuigJ6s3Cew67EWHTtt5BeG0l
Nj5yFHCXScae773RcqtEOC/9mZkvrsRdpZ9jQ5XJYE3R3bbyuAHJvrd/i2pX
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
pvy7HY0flOY/RjeCLoPtXFZaDhjUrA8WWJFxxi1j97hmEw6lWmy4J0xAbVvp
8v1eMlKYTNRqPjVB57vFt8QQAlgZ5drKjnbA9YBRALNLM47EcDMpbyBi3dSI
aVBWB/rjtzbX8ZGQlpGmb+BA5Xf3PcOneDuhpOv4KzCahE0V3dZ/B4i4n9Jy
WvVeJ4b87gh38LXAYAPXrhGZXLD8V/IMNZ04efKnqo1TCxQFxnZKOOaCbl/Q
wFsWCkykdp+q6miBZs4pu/NFufCeaPjjR2V+McWv0jd2tMJyLveK3WwuuCRd
P84+oGD8syZ9nGkrnhoS9caF82DN9eLcShwFZ910WC2jWhHoeLdQ7HQejAN1
+DRbKXi0cdRpurUVxXTaw5vu5oHkwfhrZIqClTOhWaHfWyF2TGLPnFsezFl3
c12k68Lu3Lpvvb9aQYqv6g7xz4PbTba+C2xdiO5iFG3804om3/7RksA8pC0O
DxuydyHh3gB55wJ1PQ/hndvnS/39Lu6HwsxdEMpv9VvsawXT04kovsd5YHxQ
W2/0k4Iu8+B78omtaKyXldh5Lg8h1s/rxzoosLrxNcfepBXu9jeaWKjPZUgo
jDtIfa7tr3reOvG3wu0py7bQH7kQpRtvP3GPgkLnmt7Izhb8TKPrW6K+N+W2
DY57NSh4EL9ZM9y5hZozWVhUOeViT/zlSB42Cgy7DCIrNrVA2RX1Gvtz4XFX
4iZvWScmRbTPcniTQKZP737TTMQ2vT0vZkw7IfHw7dqZ9SQsxy3Vjd4komPC
r7OWtROU7pKNeW7N4N1cn/aVg4h80p6kzYQONJwf9Tj/pwltJoKy15IImP3b
eMLcoANeB4Ind11sQqvzsyMyMgTcmVrcKzdBRse6NxkJaY14dH66yoOYA7+2
0z9Y7MiQUCVe1l7fiOzrCmZnlXPQOH6nnWEdGa+PKd9hNW1AEUHL1qwmG00p
LVWCAe0o5BcjCeXWI9FIsSDraDZYHfP0fvO3o8OkY6DuVx3YFy+efViSBWkC
3Wk2+TbI2ycy3JavA8+J3hsfDmTBIODH1KpkK/jPjqeecqjFKP4bz9fOxLGF
TuU0iRak2cxdlaiqgavlge4zyEDXkTYeuUMkrI3KREWx16BB/xI3ST4dePpW
2le1GSELyfR6OtXg9PqjJyCYBimNha2f5JtgEu9iee1ZFYYmQyWsfqZAYUf2
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
blMIkygblZ7cHkRnvwhX/tOOZtYFLbOyAsQvDNg94O7BwVT7ar3H7dju9o7H
i74A4v5VPLqm3Xj3YjiGnTovXuivDPTq52P/9j8ZXmVd+Mt0QMqGtw1nmoMT
9iTkYR1b9c87O7pAZ8eWwcLTCpe9xRfFv+biyGam9f/ZUiBPiiJrrZGgpLb0
4YhQLuYNHAU+5XTCbN5hB+lXM2aPeX9kNibiTWPc1TfrOsGpdDSQZV0zIiMn
5ppSCbjR1PUh2LADp8Vmzu2nb0Jj3e/HPXM5UJ76xLk7lQyn7Wk6YssN6LCU
jnsqkwNBHbnm+qV2pHoPf8qarsfLz0vHLt/JRkk503LlkXYMLgx/pJ+uQ0rm
l4WLuVkoaOlLqRVtg1qge9PT1Vp8mjHsNGPKwkme+NjoDy2oTBoIPc5Wi5bt
bPqWSRmQMObeLx1MgpSqxpIYNa5WVQUJVEin42pztUuvYjM6ikbiDnNXw4zn
u8FiYyrM7rzfZfS1kToutdNfy1eBQVR18KNnCnKSrfS/lDWgdFVsR6ZhJZ6e
M7LiP5oMiQUWEpd/PSwLj8vXm1bAuOq/VOLHRPBURLtkaNZhuXTDrssM5Th0
l7VVLSQBZbkOFo5cteCPNPUMfV6KpcsPbss5x4P3VkCwzYYasJBbbh4do+YP
bz+wXNSPQ52zZOXP2SrYRrDYfxEoAu9uU5L++liMl4666pRWwqAwiXdHaAFy
nHYzNH+Phtdficn+3Ar43Ao4dEo9Hzk+mxJOzUbh2cIHpTch5Xhw7sGRkdxc
KPw32WAdEwkGSmKmvnMp2AQWU7SkiDizdD+39GYElC3UnqzYFGMs5++DLV9y
UPuW3cndJwzbY43KN2cV4oSOKCkiNBtFpbcc98eHglF4/9WEr/mwlLj6YZXK
CfE3/NyKE99iL3/Z38iNeXDa4lauNpsOTaUXg77tb+BvrCt5zJAIwZWbqkS/
VCRzp87Ybw4Cn7hZuFRhDk5OsempaSZj0Sxd5JFlII5a8VUJiGdj9FD2mMnX
BCTum+xRy/bHM+Ko1K5dmXhzgGPnhoA4mFpxj5Qu+SI+smOr/WwqqlndQ8SD
YzB02yFRfIs3ztrrHW5QS0bb8CXt8g1xYK3+WOAi54shXtL6yyqp0KP1Kc6l
9Sn2pfUp/ld/vSFaX5jLtL4wTLS+MH+d/t/PnEDzMxek+Zn/y4dTiOYfVUTz
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
lHswdblyQUajBZLuYbqtr3Lh/bS9GYe78ShXwdCyrAmM/8Smle7mgHuSm8dQ
vAtJM2oLIycbcXjpWsdnN7Ph+8pHcGZ3JwYmeMOzP9RjNkvI2eZWFhLnVF25
FDrgonbYSziiDudfK2+5dycT3BqsaQ55bZj9b3Pjb9VatJ+dWKuzNAPvu5b/
Zp9qwY27Mm8Cltbgt6DjAQGxNLR+85ce3tsME7sgLeu3Vbg2Knoi3TcFS4/H
rnVLbcTTA3G/y6oqwV7dJbNpJAnr/UoL7gs1QE9WfFcZUd9qc7HOpAonYszp
Z5Cgdx22+u1UeSxSgehlcbETWfEwG7iTem1XLe59PP1mUbkMW6JiT9fpxSFm
JPnNp1GifhWNSK8TLQHNK8WgouENXh8S8Q61qYJu9WXKs5NFcGPXcjG6GYNL
14//Kd5diQtnL3/7klIAD9rWpUsQjexgNa3SdRS8t6Y3p47kIfoYj5DC6Gug
5YBUb3EZrDX5Bx+I5sLCZK/n3wuvMCT6IGmzaQmSXdXn5rOzoWwqv1oAL7Dk
wF6hCbMi1HUbLhQcyAL3LdoLUd7nEPySLxh0sQDt1BLWWM0M7F4lE/tfWyjW
3IrHnGIeeor1D28NyISvOGfH563hyFa88KvfJR++lN+GzJXZuKm7v1xAMwJK
bTyrFO4XQmr+WPS1Fzl48jBOp+PJSwx/KK/Of1MMHwnnHkm5PFxOEju3dzoS
wk7LLY/3l+K7za1fC1P5SNzk+NMsOwrSra4hqgT3HFRU9g7NKMTZ7bcXdv2K
xsmzgRUCtRQc7rj+8fTDYqjL/4CG/htscj62doa9CjIHVfxjHEux/vLmYfHy
WOzw3RZ2y4DIe0IL8xmu5XhwU12FLhuP3+I+/On5NdhC+hRbkj7FkqRP8b/8
9f7lC/MvPfMlpA7nzKH/1+FUI3U4N5D6UZWkflQjqR/1L92Df93XUyT7zMvJ
PvMJss/cgeyPiiH7owrI/qjH5LmeDXmud5081/vXfpQLyVHuJEelkRxla/7N
/ZV1J1ileo6PWRRBgPu6pCZRf34aeiTne7EL8ddDWZfVF0N5mYPU5MIA/ryR
CxY37IZCg5fLwN5SeCXdV7igRsVO/0Sms2EPFFk0g3XjymDXwivzMnYIlnqq
3dKXemH9YimNS7QC70Jz/FVWDkO3iv9Rv3Uf7CJuxooZUWB9h083z40OqWMu
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
7qxgbIBzZ2WNxJ0mtGv9+r2TYRzsFYLJa131qCj22agZ2QS52W8XuIvGEC69
/SiXfT22pjF6hq83QfDb3rRHWmO4v7/nrAt1Pe4aGcryWzTj02ZSztOuUVS8
GsqbflCHc8tsDNKbyUi9tSu1QGUUl2Je1+wpr0WYgjtreTAZZ9gkHlgWEPit
JjK+jaMWcqe4luzkW+AZqSxVenAEsx1CHFr6NVA2OVU5uNCCJuP9sus2wwQ+
EZaN/FyNWM2w2VdprUgNqddRKB9CsGIQ/0hhFdoC92l4v2zDcmKyzzfCrvzs
BgLrRytB076S0EbYVdP2JesVwg6FdNUqdOkq4fyN1/jagQ4iXrdKKvkOQDic
IZqNvwKrH7cvmy93ILO4IO1Ubz+0ZlyP6SmU41T4iuav+k5s11NVu8dN+CXf
Kd7vhmW4nn2MJBHehX4p8QPMhB9pNASGbCP86JD7z89VhB/VsS157lLpgXek
qXRtcAns7KsEF6/0YHCJe8h8vAs3929pS6kpRu5L7U3me3tBdcYg6KNDJ54x
hP5n85uExCapONrJXhzJlSzZwdmByXD6HZHcJLCzaCteTO3D3U+zRu8a2nB0
7K9mLJHPQ6lKNHwP98PHg6OtPqYV+2q8vho4FWJLDqOhVS2B6y7aC8g4tGCr
yPG5gqsFePlIdqzpeA9GTjiduPGADK+XVP15RBxzCH9jvEzEMU7aJ159D5ux
5L0vWv9KLlpTmjd9uNsJ2+o1Bh/CjqzPTDST67NBktvxhntDBzSFt53yNGgE
z1bLmF7NLJg43HjhFUTg5O3xOdSODbi98un2ye2ZUP5Pqo/7YSssOxX4Gc7W
o4gxUCeqLB3LNw2vk061QPndgZEhy1o8GLG3jXuSBilntqPPqIg4+56Jvaq9
Gvv/8LGlK6bC5ZDlQOtkE/Y/a1fgUK+COekoj+uRFGx2prtXNdgIxnOGaTbV
Fdg59TDjOWMybp+j2byjvQHs32UbYtTL0UI689p4PRGDzeOrw8mEXdM0XrhE
5LUOh9LUgQ2JGN1x5NlxIq894QvfYpVYgiKjscOuB+OxvjTxjI+ow0yf6hep
3C3G79pny7oKsVBOGu+/qFuFm15iO4x4SKB5U+lw52E0HvKe/CURXoGPDv7c
EoxF0D4SlfarOxIiZ0skfh8pR+e8rmfAagEGWQb2cV+KAG3n7jc82aWo/bSt
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
V+lv3aiK1ioPkiTwUo3tlt6MHvT76jrnn+1F/4HWwHbxUnS7m40IVHSjpGue
FL/Yh66ug3wsJ8og8Y77T1tDF4bf9oitdPXDzeDhq3i5cmTLppNeEbjNa/n8
qnfRAAwqVC7Xa1RAQbWSbr22A56unfeKYgbB8Ir3vYFpJZ7zXDikWNKObMP/
fG58GcLvvQKlTG5VhH0sqSSkt2HLf3SLf12H8c5sq+zhyGqEmp9jKgtvReYX
uTe0z0YQoK9TSCLy4I73y913iTxYYTjJ/dVoFBfXjl//NFQL6t3bFdNdyNh/
qzHM78oY8g6OiQn9qcNelnvW22ybIQX/ONLxcYC1tLafpgGPOYVO0j9rIuof
3WQP5gmwPrxVm+DWAPIGi2qHF42wKzXpYX89gYodp7jFZBoxldjQUfqtAfFc
dC+0hyYgLfCZQeZXIx72uoS99avHVIGCtojEJFpPBl6849uE6SFz3QyuOsSz
vJSysp/EKF9VvL5wM/Jb5bkkqmrg6FYpwl40CQH75ySa5GaYtxxoYgyqhplg
yaXfvyfhv0/4B9NeMkQDfogbR1XBs4/ToWvfFEqeiarufkSGvWCXf9V4JTaz
cmU+Oz2F9Hbj4pcxZLhsmIuQMKyEQEePovOFKTTZrm9OKicjLJPjiz9PJc67
BUzyKU1h2kf7xEIJGSmJcZPDApVgqpLem39iCtZ8Cj+pQ8kw2BYjc+tJJQ7Z
fWJX2zOFfK3JJKp7ZBRObOwIWqsEw+LSWujCJHzty1vus5NR+vfgrh2pRBxw
Kv/yongSG7faCbWkN0M3/cKb/z4S+Fel9aGm8yQiOxemBU41w1/1RplEQg0O
hH1aT5eahEb3lZtWoU24I/i0e5qOwIHDYdv9iffs9FbXu5h4z+19jYdv+dZD
5xKft5DrBFQttghoSjeCey+V5lhAA9L9l0zus0/gPtsJ2Y9vG1Bi7eH116oR
Wr/0qjhlxhHlvEzqoW+ApOWrrZ4Pm0DV/c4/RH0MA2oG9Z/+1oFnwvBboXUz
tE5khfkYjMInVY9pra8WkZJFtfvfkHG4Nl6KnbBDuWbG2FbCDg1uXZ69Stjh
wK1wyYg3w7h5vv/+9ZhqmPzoEyWFtOLFjEO/4dchbKvcmKrypgpOk4G8Dmlt
KN0f8DQ2dhDTL83FbR9WYkdbhpl0cTvOObhXBJAGcF+Mu3PbtQrwqvKpNNR0
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
vaaH69B+1FePc6waZ9wDhnYSeWzBx0BmqoiK5/ExQz27y5H3yS/XLXkEt172
e1M/NYK1YeBKZTgJdtc7OVkJfIlwvB8lSeDL7eM9+vXPU+GkG0o3IvJqe/D+
bolmBnp8+JTuPYqDUO9Ndn8iDxesW/4ydKYTweTXbh7xqUgotf3KMjwOg4OU
6xjtwYW6iDCT9L/4wnRDzp3BNgCegbYWHbG/+BJTtz64wXkYmeVSrIUNf3Fh
ftHXWPQ/vsZWc/Zx5QS+OO8LXrv10t/2/O6YSD6XYeS67kg/Qv/bz2VJoxcL
LANIj/JyHhOmwFbtu+UFAl9UBFRejhD4Qk0qvW0fnAvmN9oWUcS81jpo+MrP
dkLkyR+SSGIqSh9jGzsRB52nyg7Xahnw28Rlfc4qDiabTq17QuDLniPHF3aS
6bAuj/qikZQKxqdL7IYEjuv9djN5SOC4QmWr2RyB44+sd+SbEDzN109J2rSA
ivr1X0N4D5Tj9lOHR2QCXx6Wl507J18HtaOfmANmqmH4ZO8aCd8BGDw6dU8J
FPSdKOXq4a6D1U6ROjvLPkzU+iVW9lZh6T25ic8uVNy6WW61zL4Hlw/++rrL
sxKBfWcnX+TSUDZiriGY24X1HZ2yZ56WQ1fiBIddXBP038gFOO7qxLEqRbrM
l1KcupP74zVxHqZ+zYW4XmuH08qfzn59xYjkGl0mI9iK4pjOoNddrTj505SD
9VIRijwf2j33asN835jFt4d07JiaNu6fImHEXO2M2zAD+Zoj139rNqH8dkRr
fVgBxFfbOHIR+OKmJl5Ee0YDP7dUmb1lPnxNbe/Kf2KA//dL7l46gbu+Vu16
prkYgjxH1blWcAR1N+8wqIfwLY134ZLZkCrcVl92muBZwttVO3/Xwp+DQVYm
8OVzQyl7x40m+Lxn9TlH8JdX3846ORP85R1LhPYLgr+MiMsazv4/TJ13PJff
+8clZY+IVFZJlLREg7xooNAUEtmRUCHJrCQZKbKSEiFZ2Xvvvb3f9t7rXZRQ
+N3ff34+f70fj/N4vK/7vq9zXtd1Pc997nNW6lG1lFR0wy8d+nSP+NqY22BA
s2k0msgvCu82qeoT+aWjW0ztOZFftMNoQiYIfiFt5ORKIvjFKo5TyF6gGWYe
RZaqNZUoz13j0WVLxva6cxp/yI3Ie6ZzyWZjBRL1nCBbmojw2ehB73MNiMXE
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
uDTGT+kKyfAk7j8yLlwJPXfWNZLVyVAneJUTbeuwLFlE67CxGvxnJl7/OpAK
NzmZHV8I9Zhee0Dk5qZaKFW+D9sTloaf6wt/WG9vRN4PS12uTyRwPNrqTjyc
gbQeYdVDXk2w0Fwof5xLxoa47inb1kyQLuLeDQpua5z7niM/U4cQPuFXoz7Z
mCGsuvyaUp9dHR3KCyUboP5Q6rCXXS4usAy39di3o3lmeb2JTyMCaPM+Ttvl
Y3VwKX3Q+U6ckcp/upO9GYt7tu/6WkPAUkPxn4fnu1G+TXH965wWtCwv+TOM
FCBh7H0/83g3Th7XGbzwuQ1ZxYWlzOsKMaJTY6vc1oU3XuWmRgEd2JAuRz8m
WQR+2oOsYWmd6JES4+Mo7oIO6Usws3Mx+F9+/1jh2IGK7kvv7jzrQRsrT+rP
nhLcpHMfVz3UDnmnl2UBxF6YHd7Zxny+DIKaguqkqlbIuW39Lcrej7JB17Dk
kXLomHjGMWq04Gv0QssduwEE58hyWr6rRETc7RvumU3YwKX2puvnIE7Rv3H7
c7kaur6XbL+sa8TD5BbyqtfD4FF/paEoXwvjzEvSTyXqkdtc4egvM4qCzy+m
KiJIuLv9aayaGpmy3zQFKtjH4C37Nvqadh2qUoRfORBr4HO53UT6xxj4xgOf
+/A0QIWP2UMvsQLGYpmRdBTeRdPJ8PjjUiNeFqnd6rhWAv5H4kprKX36RlMl
WnZKn+78VGMhorkAq8IW+IrGJ7FOI/QgL1MbtJ3/5EfxZYF1c8JWk9XTePJm
4+01kh24WsJCTNmXAEPyYvawxTQSbhIrCmu6oLqQmr/JMB6Rx8V5h19OY1e3
+bZdNT1gesuTFeiUjF2Ch7UdY6dRuiXz8TPpPtT1k7VrDdNR8eeisELNNBiS
Vq1fG90P7QMB0lFq2bgU9p45c+o/PqFyp7o3DSLGtp8laO+K7436RAHruWtD
8BktlWR2XuFjvsdkh866DGNAqFRSNH7Fp7Q7IeTZn5cjsLdOskjmXvHTZkph
lFhjN4qBz45xVRYr+QvLFZuODshQnre+wHpDyZWcIOiVTdi3juGYr597k8XK
uc1I6ZetqYrjCPnEL2483/7f9cWI2j/2TuP4TNPmc6x6JV/1b7nee6h5rIs1
//881hPUHL1z/8rRE6bmGU3+K8/ob7kS//b3/mf9376p/+WfVD+6y1Q/un98
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
LupcCxCwMI3P56wt2L0GUX550mmD9Mr9YIAjndWBy0NglVm0enxuhaf5FxaF
aK0ahqxtUsCFxZVcSDvnodgGCg95blv45WLICg8xyabfPNRG4cviOXp39674
HH4ocG16TTeCG1siJ1tFV/Q8N8T1XvymGUFRtKfL1J6VdXlqrn01Ndf+v+dX
/8oj/mc9hJoLqUrNhfxn/d/5XK+oOSkl1JyULGpOyi+q/3wl1X9ei+o/P0X1
9d1K9fW1o/r6/uN/eJnqf7iG/P/5H/7jExVK9YnSp/pE/c0f429zvn+bP3pP
1S3XUXXLZVTd8t/0SH+71/vbeVQclUeZU3kUkcqjJGQfHT17ahSv7KvsVUtI
0BqY2eSwlwzaco09+wqHcf9RMb2Hcy3YbLS8dJfrUGF6Y+MpgSEMmfixk99X
41XTT91YUgOSCIGWOzMHQAp6fTS0txIfjU25BK2bIJ/mEFlhTHm+W7xpnE5V
oM49gVF0phkj/OwREax9MH7w20UitQyd39ZxKlC+9+DbrcWJLT3Y27G8rVC2
FMW/PPTR1AZphcJFc4duOJof28X9tRj3TzRNiW3qQI35RccHZzux+6uct3lo
EaJZ27nsNTohm0MWqqLUyUWN5zvfUerka8tuKUZKnSRFjuzdercVT39kTojr
EHHqlNHvC87deKlW2hKS1Ayxq1zGvScLcCbGV0WFUoebOJKX71LqNgsxlYaT
Urczq/d08VDq9oe4hfbiugYUP2894aqbh6Dr/lxFqh14epE1ttipHonRVmp2
Fjl462TxfuBxG8YqOAXfadRhUtVxY3F8FrYSXZSP9bXgaVNk5GFeMlyC9ptW
f8uA+J1fAtonm8EsZJPnv4aEqt+6JCbddBz1Sgk3KmxE0hR7Yea2Gnj5EW1n
v6Zif2OQucPdBlzNm3O346mCiqCCtuf9FKRfsXt6l6sekva7j3yQqkCQSPfQ
zJZkMPEHBNwlk7FNU/GqXwilvscVD+6dTURz/i2GyFwSZraz/+b+WYJD8b8v
u2YloLaRpua6aC3W9dNGWxoUo3zw2QZDgXg8f3qg7QNTNTq8dsUo0hUhkmDe
6y4ci7irgxsmxCpxWLIl/uNnIm40yYn/5o1GX5jA6x7VctzledYbcaoA8y/G
eBjEI9F9WusMl1MpXm1dN23OS0DCfTcNHsdwiITQFNQMFyMr5axWd1su4r46
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
WDQ9ISj0/+g682gqw66NE1IUUUmhuRQaUCnTZQgpU0VFKFKhklBKJEOlCJVk
nqfM8zzPs+M45nmeKUmI+s673uf951urv1rrWTrnWc99nr2vve99/640GLjL
Fq3kNWGGRrXwHlcN3twMXsovSIGkpiRZ0JgMveia283PqlAqt73a3i0ZIWYq
sg4qjdiyoe+4f0sF9s/UCnDoJqFE36M1U5CEK/Fl7Xp85dCu50vkPJiIwx+2
nwyg6rlTtlY5upWl2MXiVnP9XDxezj+tCBavhYIoyyGVuyWQCv0eOCoXi3tW
owMz2lQ9b33u5kcaqr66fWLouFg0rjUWnnN6XImrj/U8rzQUYptISJrJiyhc
sKZhJLeU4+Ch+tYWiQI4sNo6dBVHwOWgzmmRM2Ww+Jks7knVLWnhYatyLOEI
lBtV2xVSgvPsIZ+y27JBYeoXP+QWChoLb8NB8WIopG9jr6nLRG3SNVd+9hBw
heYUhLYXQoJ978HEhnQY733Y+yYgCGINDO2n/uRj1KRgXm5jOpQSCj4NbgrC
F/8lJ7aFPNh8uRgaN5qB855eTY7GwbgVFfVcTaIQ3/P5yqN6snCaU7fyV1sI
4s1c22g/FeG4Dr9t1VwOHLcKjUdohyHlyPo9L1eK4RJnPGC5Lx+RIyfe7PsZ
juzyR7sNnpXCKa17xeR0Ie68XZJxCYnEgFvM7er15ThbfZFJ26QIl1PaSfvv
fIWOZWZ5Xzx1nVbeXm5OLcaHQIa1HdIxyFr7sM7MuApxGRtMdm0shfr6+hZH
kThoaLlbnZGk6iH1oRiVp2U4KyM6lHEuAbYLTWKx/HXQVuGMsvxVjp7vzdwO
OYm4cpl7QOZEA/wvdijVOlfi1dasGo6BJKgZqTnVx5KwEsbLYX+qGrKb458u
cqZAwow9JKG+EfI/nu6sXaxBp4JzP6NeKuyqwnQ/01D11aPcej5KHQ4aenDo
5KRBQzR1wFGWgqb7sT2t1Q34erP28JfDGZjtqDxJ692Mdw117EOzJIg1etp1
x2VCk5nxxQa6VuTKM11lZCYj7uq844Pz2XirFn07z6EN8/c+nlx3ugkeHCxl
DLS5KPweeSmVuwOTKeYufpYUrIgwyySQ8zC2m113jKpnUrU/q52pboZR3+a7
WwoLsFk7/+GiTzfs5FeYnx5vhaRC5BOm4UIYawbsS7PrxeSI+Su2kjYYX242
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
NfTHY4rv7XBvtzc43j2Wvpeejp35ov+pScfBSohBQtv6Lfb5DfBF2KbC3s+8
bNPTBKxviWvdqOWDBNmrU2ovMlB0d4z/XnkS7H1+G5/Y7Ad6wV8Kjm1ZeEu8
bcb5Xyq0H2uVOlX6I0vU+92KUQ50LbOkN3in405yhcaKWwAOO+S5u+/4n//e
Dc+6bVkYOvBpVf9eEObquLl72/ORnMhFIt7Nxo2+BzevqYdATCPtz/2wQtiY
uutvJOTgrSM6D6q/x+k1ruo462J88U5/TTych0shzix5euG4UWA5YH+/FJ/5
jRKNovKx91nrOgGnSJwy58oU1CtHiME0f/veQhRcjauJHozC5Bahu6YmlVgp
bX7DkFYE7t2j6/yXo9EanOGXRyTgg3fLOuHzJThbpBZqtS8WjBrahLC+KjB0
thrLT5RCNWiU4daVONQ5Clf9+EJEX2XHgJk3lbu43I6puMfjyfWL63t21MDN
Ma2GTrESBf8Z9no0JqC7M/mTOWoRun6G47wLASwXZfXt2ZJg8+Sgm5B5HSh7
3lmJPKrCUd+XBo/uJSNaemmLYno9wvWlLS78r44wutqhX5mCN67aYy2LDTDI
ENhzT60aDzvZubcfSEPqvpaNT0434erCDGGHcg0iAtKsx73S8WPYViDLuxkb
73I2rirWYk5jmv3Khkys66Zf3TzXguz8Xv4x1TqsCtfJvjibhUO8zif3qbZB
aFGmI/VaPcaJ592N17Kw0j3zezKnHR/ZX8bd1WtAEoOIxWx1Nnx9PXan+nSA
0/X+5a8WjYgM9L/0zSMHL0udtcRVqdz1YMGV27MJ0pofWG7cyIXcF3m/foYu
PB/hyFJLbEZdeOPH5IN5mLVMOyDd2IXrBoonw2pboC575jWW8qBhbaxV5NGN
zxdsFMqmWlH8fGO5YEM+vEOqjlioUfPtA823dmxuxzB9e83p0AK02Els02Dv
xWmh3TF32TqQ5cIYtOchdT2pXq/Y2deLia2a9YORHTDdfnnu9MkiSBT0zV8I
7IOu7IHwx4c7sekj1xNhumJI6Oj/CVbvh8DWx6EK2Z2I9tSbja8vhuWRAb9m
xgHIMhdrNh7rglpJBV0nNY8KurjYyF06gMMFo6X11Dw4Su2VwIMzpeCtOjR6
4f4gzr3t6b4j1I3br06KvFsoRTk/Of8lEwkPLsUaFkV14xnXmXc+IWXYrnV9
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
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
     DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "ScalingFunctions" -> None}, 
     PlotRange -> {{-7.8975*^-6, 7.8975*^-6}, {-7.8975*^-6, 7.8975*^-6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -77.37341772151899}, 
                    Offset[{4., 0}, {7.5, -77.37341772151899}]}, {{
                    7.5, -29.905063291139243`}, 
                    Offset[{4., 0}, {7.5, -29.905063291139243`}]}, {{7.5, 
                    17.563291139240505`}, 
                    Offset[{4., 0}, {7.5, 17.563291139240505`}]}, {{7.5, 
                    65.03164556962025}, 
                    Offset[{4., 0}, {7.5, 65.03164556962025}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -105.85443037974684`}, 
                    Offset[{2.5, 0.}, {7.5, -105.85443037974684`}]}, {{
                    7.5, -96.36075949367088}, 
                    Offset[{2.5, 0.}, {7.5, -96.36075949367088}]}, {{
                    7.5, -86.86708860759494}, 
                    Offset[{2.5, 0.}, {7.5, -86.86708860759494}]}, {{
                    7.5, -67.87974683544304}, 
                    Offset[{2.5, 0.}, {7.5, -67.87974683544304}]}, {{
                    7.5, -58.38607594936709}, 
                    Offset[{2.5, 0.}, {7.5, -58.38607594936709}]}, {{
                    7.5, -48.89240506329114}, 
                    Offset[{2.5, 0.}, {7.5, -48.89240506329114}]}, {{
                    7.5, -39.39873417721519}, 
                    Offset[{2.5, 0.}, {7.5, -39.39873417721519}]}, {{
                    7.5, -20.411392405063292`}, 
                    Offset[{2.5, 0.}, {7.5, -20.411392405063292`}]}, {{
                    7.5, -10.917721518987342`}, 
                    Offset[{2.5, 0.}, {7.5, -10.917721518987342`}]}, {{
                    7.5, -1.4240506329113924`}, 
                    Offset[{2.5, 0.}, {7.5, -1.4240506329113924`}]}, {{7.5, 
                    8.069620253164556}, 
                    Offset[{2.5, 0.}, {7.5, 8.069620253164556}]}, {{7.5, 
                    27.056962025316455`}, 
                    Offset[{2.5, 0.}, {7.5, 27.056962025316455`}]}, {{7.5, 
                    36.550632911392405`}, 
                    Offset[{2.5, 0.}, {7.5, 36.550632911392405`}]}, {{7.5, 
                    46.04430379746835}, 
                    Offset[{2.5, 0.}, {7.5, 46.04430379746835}]}, {{7.5, 
                    55.537974683544306`}, 
                    Offset[{2.5, 0.}, {7.5, 55.537974683544306`}]}, {{7.5, 
                    74.5253164556962}, 
                    Offset[{2.5, 0.}, {7.5, 74.5253164556962}]}, {{7.5, 
                    84.01898734177216}, 
                    Offset[{2.5, 0.}, {7.5, 84.01898734177216}]}, {{7.5, 
                    93.5126582278481}, 
                    Offset[{2.5, 0.}, {7.5, 93.5126582278481}]}, {{7.5, 
                    103.00632911392405`}, 
                    Offset[{2.5, 0.}, {7.5, 103.00632911392405`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["500", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -77.37341772151899}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -29.905063291139243`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1500", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 17.563291139240505`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 65.03164556962025}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2500", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"SunsetColors\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"129.4578187488417`", ",", "2512.274735214228`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8102383530810475`*^9, 3.810245133348052*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["decay and mode overlap", "Subsubsection",
 CellChangeTimes->{{3.8102295311998863`*^9, 3.810229539368066*^9}, {
  3.8102451623694835`*^9, 3.810245163367815*^9}}],

Cell["\<\
Get explicit lists of solution pts for plotting high-res time-domain results \
(specifically for the animations and field plot)\
\>", "Text",
 CellChangeTimes->{{3.8095600333873806`*^9, 3.809560038145509*^9}, {
  3.809687643871478*^9, 3.809687679927371*^9}, {3.809728352075573*^9, 
  3.8097283593431635`*^9}, {3.8102292403545527`*^9, 3.810229243003876*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "explicit", " ", "points", " ", "for", " ", "the", " ", 
    "solution", " ", "and", " ", "transpose", " ", "to", " ", "get", " ", "a",
     " ", "state", " ", "vector", " ", "at", " ", "each", " ", "timestep"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"savesoln", " ", "=", " ", "True"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ti", "=", "0"}], ";", 
    RowBox[{"numsteps", "=", "100"}], ";", 
    RowBox[{"tf", "=", 
     FractionBox[
      RowBox[{"numsteps", "-", "1"}], "\[Gamma]"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsteps", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"ti", ",", "tf", ",", 
       FractionBox[
        RowBox[{"tf", "-", "ti"}], 
        RowBox[{"numsteps", "-", "1"}]]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"soln", " ", "with", " ", "rows", " ", "i", " ", "having", " ", 
     SubscriptBox["P", "i"], " ", "evaluated", " ", "at", " ", "each", " ", 
     "timestep", " ", "t"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tsteps"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fname", " ", "=", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<soln_time_evol_``_``_````x``.txt\>\"", ",", 
         RowBox[{"Floor", "[", "ti", "]"}], ",", 
         RowBox[{"Floor", "[", "tf", "]"}], ",", "gridname", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"savesoln", ",", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"ToString", "[", "solnPts", "]"}]}], "]"}]}], "]"}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "transpose", " ", "soln", " ", "to", " ", "get", " ", "a", " ", "vector", 
     " ", "state", " ", "at", " ", "each", " ", "tstep"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"vecSoln", " ", "=", " ", 
     RowBox[{"Transpose", "@", "solnPts"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normL", " ", "=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modePts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "t", "]"}], "]"}], ".", "targetMode"}], "]"}], "2"], 
        "/", "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "can", " ", "make", " ", "the", " ", "lines", " ", "below", " ", "more", 
     " ", "efficient", " ", "by", " ", "only", " ", "computing", " ", "the", 
     " ", "sums", " ", "once"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalPts", " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"vecSoln", "[", 
              RowBox[{"[", "t", "]"}], "]"}], ".", 
             RowBox[{"evecs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"totalPts", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "-", 
        RowBox[{"modePts", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeTuples", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "modePts"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "fmode", " ", "occupation", " ", "at", " ", "each", " ", "time", " ", 
     "step"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "otherPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "totalPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"occupation", " ", "in", " ", "all", " ", "other", " ", "modes"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.809537731589987*^9, 3.8095377317493005`*^9}, {
   3.809538818979971*^9, 3.8095388204221125`*^9}, {3.809538877168335*^9, 
   3.8095388806360598`*^9}, 3.809539283946311*^9, {3.8095393466665525`*^9, 
   3.809539372119471*^9}, {3.809539467892342*^9, 3.809539468073819*^9}, {
   3.8095395222788367`*^9, 3.809539522892194*^9}, 3.8095450971210623`*^9, {
   3.8095458315611763`*^9, 3.8095458355654626`*^9}, {3.80955773496976*^9, 
   3.809557757853461*^9}, {3.8095583906833534`*^9, 3.80955839126085*^9}, {
   3.8095597358014803`*^9, 3.809559807414382*^9}, {3.809559964155444*^9, 
   3.809559968153966*^9}, {3.809599552339513*^9, 3.8095995531761265`*^9}, {
   3.809599617330911*^9, 3.8095996220619907`*^9}, {3.8096000584546027`*^9, 
   3.809600116786805*^9}, {3.8096003298751945`*^9, 3.8096003393550863`*^9}, {
   3.8096006351305075`*^9, 3.8096008071453*^9}, {3.8096010934339542`*^9, 
   3.809601093899026*^9}, {3.8096011379469185`*^9, 3.8096011387812004`*^9}, {
   3.8096011727637854`*^9, 3.8096011739468527`*^9}, {3.80960124310413*^9, 
   3.8096012867778454`*^9}, 3.809605305087755*^9, {3.8096054607247677`*^9, 
   3.8096054665152907`*^9}, {3.8096484370062017`*^9, 3.809648442380129*^9}, 
   3.8096486033603587`*^9, {3.8096872387610865`*^9, 3.8096872447717113`*^9}, {
   3.8096873155956926`*^9, 3.809687355940363*^9}, {3.809687553929351*^9, 
   3.8096875833017836`*^9}, {3.809687620226015*^9, 3.8096876209750614`*^9}, {
   3.809694119981163*^9, 3.8096941727791758`*^9}, {3.8097244836682706`*^9, 
   3.8097245504190836`*^9}, {3.8097246239728518`*^9, 3.809724641454688*^9}, 
   3.8097294103660364`*^9, {3.8097295651431766`*^9, 3.8097296089304705`*^9}, {
   3.809729641149293*^9, 3.809729684871345*^9}, {3.8097739518698406`*^9, 
   3.8097739644336743`*^9}, {3.8097742206213493`*^9, 
   3.8097742290729055`*^9}, {3.810598198542734*^9, 3.810598208979142*^9}, {
   3.810598409861555*^9, 3.8105984184033837`*^9}, {3.8105990171906347`*^9, 
   3.8105990177409706`*^9}, {3.8105994634339437`*^9, 3.8105994635486364`*^9}, 
   3.810653042770314*^9, {3.8106607654514236`*^9, 3.810660765798829*^9}, {
   3.810661951765606*^9, 3.8106619657724743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fmodeTuples", ",", "otherTuples", ",", "totalTuples"}], "}"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Blue", ",", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<\\\"Ferromagnetic\\\" excitation, ``x`` ``, d=``\[Lambda]\>\"", 
         ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", "Black",
        ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A.F. mode\>\"", ",", "\"\<All other modes\>\"", ",", 
       "\"\<Total excitation\>\""}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Gamma] t\>\"", ",", 
       "\"\<\[LeftBracketingBar]\!\(\*TemplateBox[{RowBox[{\"\[Psi]\", 
RowBox[{\"(\", \"t\", \")\"}]}],SubscriptBox[\"\[Psi]\", \"i\"]},
\"BraKet\"]\)\!\(\*SuperscriptBox[\(\[LeftBracketingBar]\), \(2\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8095460518368845`*^9, 3.809546069715067*^9}, {
   3.809558541997348*^9, 3.809558545173108*^9}, {3.8095585766687527`*^9, 
   3.809558695379739*^9}, {3.809558795379532*^9, 3.8095588215814395`*^9}, {
   3.8095589269086657`*^9, 3.8095589306195116`*^9}, {3.80955896284052*^9, 
   3.8095590401338406`*^9}, {3.809559130558073*^9, 3.8095591902299385`*^9}, {
   3.809559254932829*^9, 3.8095593215120664`*^9}, {3.8095593953582487`*^9, 
   3.809559588922476*^9}, 3.8095989899906483`*^9, {3.809599331272752*^9, 
   3.809599354457077*^9}, {3.8096011106737213`*^9, 3.8096011172557926`*^9}, {
   3.809605490443336*^9, 3.809605560013387*^9}, {3.809605655235878*^9, 
   3.809605655938001*^9}, {3.809694181749177*^9, 3.8096941960339346`*^9}, {
   3.809694228606848*^9, 3.8096942852120905`*^9}, {3.8096943156043634`*^9, 
   3.809694338623783*^9}, {3.809728264480889*^9, 3.809728302987866*^9}, {
   3.8097291272711134`*^9, 3.8097291416646447`*^9}, {3.8097293553870907`*^9, 
   3.80972936700701*^9}, {3.8097294641172667`*^9, 3.809729470596936*^9}, {
   3.8097299015264482`*^9, 3.809729908719213*^9}, 3.8105991081546164`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw1yw00FWYcx3FLi7tdpbFiVxIyb8VwEYufe71fL/eVS7G8H01e1jDt5OXM
nCkUTecOEyvSFGIx89otL4eZecuRo1LTqWnqbmxMsu347znnOc/5nN/z3ROe
IIzapKSkFPnv/e/9/4ycHtdfipty3tAL53C23gm7r8fJSuhbLfZc6vmZrAqz
CR2XjuRBsjr8PivSKCvrJWvilLQ2+K0WOVkLyiUel6NZXWQd5JzHa/MLrWQ9
jG834TbV3iDrgzWa4HnToJFsiAtHVZQLYurIRrjZkdgWk3mFbIzHLXtTw6Or
yKY4oqYbmfJnJdkc6VWGL9ONy8n7IdTe1/WG4CuyJRS+ofZuKCa/h9qEgtSw
O4VkKwxbbvEoVeSTrbEScDg1VT+XbIM3g+pDerQ/J7NRM2e4NNKSRbZFXpVW
RPOtk2Q73FXPZJVtSiPboy75L5n3lmTyATydjxTJ65LIDnBJZIp48mNkR/Cy
V399oBZLfh/B2xsGzr8TRT4IH9lHKwv9YWQnfLy1i++4FkJ2xtUZpxNHeEFk
oHc5cvTbQMmGM4E544vibGUh7S7QP1AT2nXUj3YXfDr1jbyz3ot2DgY/WP+e
0+hGOwcPi7snhWIO7Vw8/7EdxStOtHMhrcwb0trnQLsr3l7q2FG/25Z2V+hV
TxalNlnR7oZHxtm3C8staHdD51iJx0ybKe3ueNIbwdtWakS7O46Jx/PXdhnQ
7gFlf6s+azM92j3ASLqkHBfMot0TBot3K+QGO2n3xDULtmzwnAbtXohMa46u
PatOuxdaFSJNbQaTdm+M6Jsq1lpVaPdGzzZd71nNzbTzUN1Y5pKyrkQ7D/Gv
BmyYfS+dNnYfPOq4/2HJ4eUNZ/og/cah6YcXFmn3BaPAaJqVoqDdF2cc+s66
Fv5Gux+aF8yMa1Sf0u4H/5jvOAyrOdr9UXVO8Ezt91na/bEo2yM2ibhHOx8S
2XCG9g9TGwYf09UWh0b6Jug/H7qF0Ym+iaMb7ubjD/FIVoPdMPUCiBKa1brj
BqgX4PRMu8pPIb3UC+CXzOBoLsipF0AjmN1o83o39UJo94w5au1qo16Irucp
js6KZuqFGDW/J3GJbaJeiFyZWaVqXAP1Iohv73h2pb+WehHksRkVvMzL1Isw
4px9POXBRepF2FnqcFA8XEG9GLsHvNs2x5dRL8b1RPtTCwwZ9WLYWHL3rgu/
pF4MLjM+rnx/IfUSWKuPj+cz86mX4KrgjuFQ/hfUSzDTHpFR351NvQTvzt6v
mMnNoj4AOi3B1yIvnaQ+AAGrv3DNmWnUB6CY7771iUky9QG4nq23mjObRH0g
wqw0Zwtt46kPhH9NRqdpTiz1gRh6MeE+eSaK+kAwetTZY7bh1Evhe3z5k6Ke
UOqlUMyHGXm9CqJeCncW69bfixLqpegXPWbb5Qmd/gFuF7+7
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJw1yw0sHGYcx/GrWVxq9FRjVM1VaVaM46qllJ876p17cdxaWbw23UZ7W9Ej
q5zSOtRKVi9F7damtF3XnXkXxipG6vZm6JZrG9XOS6scU2dp6Sz+e5InTz75
Pd+diSdEKQYMBiN5/f73/n8sOsuPnw157LchnV/1vnvDGUWjZAaWlbu18tEh
MhNTooW/OqbukFmYfRGZ/DGnk7wNSLF5TxbxHdkSode/Lm5svEHegeD8KEGn
2RUyGwHJR0fsUi+R7SAzuj2XMl5GtsdS3supjJ2F5N0QdF12OXMzl/wuxh0j
uRe1crIjqkzTHAX5n5CdobCUzq72HCO7QDFU2pF6PoHMQXzXkY46g/fJblBb
BYRYLwjJ7tDxK5yal0PIXOj2XjCvecUj74VqxKw9ne1D9oDiutZI6+BB3gf2
fJdhpTOHvB8KgePPsx57yJ5Q8HXz3xvbk72g0E+7WASyyQfQ6+t1tXhxO9kb
7Ln88bZuC7IPcMvJ8KN8c/JBxLuL7RZWWWRfMNa2TIvnTMh+wELsUFLVZjKg
8v4pbHHAaMMKACVFWT6H36TdH+yHTQ1x+9+g3R+shNWxt6I20c4DQ9MTWuf8
2ndjXzejuDjb+NWGGXywNjfFXeP8QzsfavO/r+wqX6Y9AOyGsNo/uUu0B4Bj
yVzrYS7SHog/jj24lMDS0R4IWaNTmdWFWdoPQfaB29vCmBna1+2lN+XLJmkP
gu6kIGdo7DHtQYg/u6nit7xHtAdDNurGVU88pD0YpTzmoC1XS3sIGC3e2cPP
79EeAt2X0z/ymaO0h0Jg8tqlTj5MeyhWsvZkDnj8SnsY2GOSl3ePa2gPg7yn
pq7z2SDt4Vgp+yWveqSf9nC087abMm36aI9AlVZ/62lHL+0RkB6e/6GF1017
JORS61xWeQftkVAf4jL9jrTSHoXBF/WeSQVNtEdhPP3MDk+TRtoF4Jg0lGj6
vtkwBFCteh5o09+g/wIo3QOtI6/Vb7hXAJ/lyfxvu69SL0Rt3aSyh/sV9UKo
pGYeU/rL1Avh+aSzNciymnoh8MD1VF9rBfUi3H90MKe+7wvqRSjtvztk71ZG
vQiDM+pi/8kS6kXg3MxO1K0WUi9G8HCx6+2Kc9SL0Tsx2WeryqNeDMuiQHud
cS71YoxP5J6wrzlNfTSesBOU5s1Z1EdDPbG1KiMqk/porOzkJ52OO0l9NAyX
VG2faWTUSxDdOJDJd0ijXgJ1e2uEPOhD6iXY9jxcv3U2hXoJ7I3jZkwNkqiP
gZyb86wyO576GCgHNa4FZXHUx6D0FHY13JFSHwPn5lDxWrqE+lgcbbEqKKgU
UR+Lp/NFyLQWUB8LdWmXg3YqjPpY1G7RNCicgqmXIrH/fsSncwHUS/F5clLa
77Y86qVI1b6Tykj0o14KpU3hxXOO3r7/ApQmxPQ=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJw1iws0FQYYx+9iHnVmRNKo5Spxd9dxI+4Y/q73VR73utdj4bhdO6zGoumg
pBt5nPKcTjLGsmZJyKvFWhFHzPWY15pHK62dYm6zDmPc2Xz7zvnOd37n9/2M
JTGCiA0MBkO6tv/e/0f538w5rpPCcbUx6eqI7lNiBngwb6qrnSTWgKZeekHL
3lFibTCV448jHw4Q64G1yfZY90QPsQH0mrOb3l7qIDaCiN2gN510j3gnnl7j
LbaotRIzsSA0vP+wuIl4F+S7z955FXCT2BTDbAN3jRfVxGbgncpZGTpTScyC
Zc2RKMaeCmI23IdGDzmWlRHvRdu+MPElWTGxBZo1/zSJ6b9IzIFbHZMd9yqf
eB+0Cr/PVMvLIbaEB7/QzEmQRWyF2mcxKg+W0oj3Y6btcC8jXEZsjeTj0h9P
dyYT2yD08MszXj8kEHPRvRCfW3n1U+L38JXluOoLi1hiW9jYmtZOFUUT26G1
SvmNvD2K+H20Rg+8dbspgtgeU5w02aSvhNgB0mzlXPVMKLEjrEuKLpnsDCYG
rkjapc+3iNc5BfA5FcMV3xCQd4LqCRPz/aU+5J1wvmZzbs19Pnke3gkVVX1d
5Uaeh8ezRtdvWDmTd0bXqnOPjxvIO6NgsEX9yEU78i5Ir5HVzkhsyLvgyp5b
+SpDluRdoXw+tezdb0HeFcPZ1Y/kqWzybugbHzl03MKMvBtUu9rvvJa2i7w7
eOKtp8sijcm7o7Fcav1r1nbyHkjU0aqY1dlG3gMj9Y2frbhtIe+JBqvg7Iw3
N5P3RPPrnAvG17TI85GkurFZR3MjeT5UHZ9wLxuqkfeChrbgpaRzA3kvhMSX
ZpydVjqs+wNg1ga1vrt1eZ1TDmB4ZcfEWZUF8gdxMrPDIujCPPmDmM2XVfR+
riDvjY4gHy7fboa8N3b33zY5tvKMvA9CYz8ULkmmyftA37C82k74C3lfLCek
6hTETqwzfJHTGc/rUvuJ/n0RY9NnueAyvM53feGUmcbJ1h2k3g9L+oq5mm/l
1PvhC42w37uNuqn3w/DAI+52Tif1fmgRGRq/Md5GvQBdpXWzDPW71AtgUh4V
nWHfQr0Am/j+6ZqmzdQL0DebWN1ZVU+9EHHjf7ewmmupFyKWmZAnjLxOvRAB
XxaejDWppH7tf5TVc0tWQb0/2Jl18tSPy6n3R4i5vaKnpIR6f9xc1E3ewSqi
3h8unuLL34UXUi+CyyovaI6VT70IY0pnbtVUNvUiMBet7RvssqgXQfHE+oNw
/jnqxTj623m/MYWMejFa9WfU3Q1SqBcjIVp/NC84ifo1z5nP6XQ4QX0Ass75
DrLuxVEfAGauZO6PB59QH4C/9Fy15ZlHqQ+AokslrN4pkvpAKD+a74solVIf
CKO+zOht6eHUB8J4kDmZ2BtCfSBYxRo/j4mDHP4B4BjK4w==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 99.}, {0, 0.9999999999999999}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\[LeftBracketingBar]\\!\\(\\*TemplateBox[{RowBox[{\\\"\[Psi]\\\", \
RowBox[{\\\"(\\\", \\\"t\\\", \\\")\\\"}]}],SubscriptBox[\\\"\[Psi]\\\", \
\\\"i\\\"]},\\n\\\"BraKet\\\"]\\)\\!\\(\\*SuperscriptBox[\\(\
\[LeftBracketingBar]\\), \\(2\\)]\\)\"", TraditionalForm], None}, {
        FormBox["\"\[Gamma] t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\\"Ferromagnetic\\\" excitation, \\!\\(\\*FormBox[\\\"9\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) square, \
d=\\!\\(\\*FormBox[\\\"0.75`\\\", TraditionalForm]\\)\[Lambda]\"", 
         StringForm[
         "\"Ferromagnetic\" excitation, ``x`` ``, d=``\[Lambda]", 9, 9, 
          "square", 0.75], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 99.}, {0, 0.9999999999999999}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"A.F. mode\"", "\"All other modes\"", "\"Total excitation\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8095460621223803`*^9, 3.809546070440121*^9}, 
   3.8095577264004574`*^9, 3.809557965549145*^9, 3.8095583265746727`*^9, {
   3.8095585383354445`*^9, 3.809558545717123*^9}, {3.8095595072837915`*^9, 
   3.809559515697239*^9}, {3.809559548031593*^9, 3.809559589545771*^9}, 
   3.80959899117149*^9, 3.8095995367441998`*^9, 3.809599567630124*^9, 
   3.8095996409250784`*^9, 3.809601118404739*^9, {3.8096011545845704`*^9, 
   3.8096011801785655`*^9}, {3.8096012517100906`*^9, 3.8096012906745753`*^9}, 
   3.809605478657835*^9, 3.8096055658926744`*^9, 3.809605657038061*^9, 
   3.8096411995653505`*^9, 3.809648470616344*^9, {3.809694210395522*^9, 
   3.809694237105081*^9}, {3.80969427119757*^9, 3.8096942858463874`*^9}, 
   3.8096943403950295`*^9, {3.8097282936927276`*^9, 3.8097283038356175`*^9}, 
   3.8097291423447914`*^9, 3.809729390870182*^9, {3.809729454381341*^9, 
   3.80972947120431*^9}, {3.809729882205124*^9, 3.8097299096656747`*^9}, 
   3.8097306491115704`*^9, 3.8097307108783565`*^9, 3.80977132485797*^9, 
   3.810599109713636*^9, 3.8105994684179173`*^9, 3.81066078927768*^9, 
   3.8106619776920757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_afmode_decay_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809605603384469*^9, 3.8096056057680955`*^9}, 
   3.8097290897035933`*^9}],

Cell[BoxData["\<\"plot_afmode_decay_11x11_square.png\"\>"], "Output",
 CellChangeTimes->{{3.8096056329993114`*^9, 3.809605659778735*^9}, 
   3.8096484864876037`*^9, 3.8096943517037687`*^9, 3.809728329295531*^9, 
   3.809730715831089*^9, 3.8097713346098337`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Re", "[", 
   RowBox[{"evecs", "[", 
    RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8097299296013517`*^9, 3.8097299546004906`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVlE1IFHEYxsfyEJ0kDCLNSmQrkc2PbTUr9+d+qeuu7syugZUEfUBZKN2k
ogZEooLq0CVioQ5tUWSXukSHTayWzbpY0kEMYSmiQxsEHUKs8H9434FheObh
eZ73Y/6z9cioc3yVZVn2v/v/c+UqBapmPg7tWDwXMC9YPfR2KV+8afAadsbT
ZWNTdwyuoOzntbmidc/gSiazmZM3zmYN3kBC8dWMK/0WDir/Wn6o/Dp+H5K8
h4dVGxeqbz0yeDvRN388S4PPDK6nwS5/d/HYc4MbSD2YuHu47oXBXuoV34hP
6Zu4rfyb+aXyW2hT9fsIKf0u1lpXLo0N5wz2E5vsGFnfOm1wK0e3NTlT468M
biOo+N2UK307lcp/DydU/l42q/nuI6T66yCh/AO8zFyf9S3mDYaaULSYuVBY
wS48UXwnLVLvdrKclP5BSiWR7wb5pPYfYlTO3w0xofoP06zyw5z/5v26zj9j
+Ai1io8QVvooX+5L/yhpld/FGTkft4sRNZ9uTqv+uplV/ffgV/k9ZBUfY5PS
xyio+fTyWM2nl6dqf3FOyf26cbxq/wkOKP8Ew6r/PjyK7+PD8mWh76fwWvr3
E1H5ST7L80eSgvz+3SSDsr5ckgE1P5tGuV9sLMm7NgsyP2dToc6Xw3d5vnDw
vhfn33WYl/XlHPKq/hQ1cr+kuCr376aYlvPPpdiv9GnaVf9p5s3/5y9g9Xdc

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 81.}, {0, 0.2204002026390518}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.810662267276232*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[Psi]0", "]"}]], "Input",
 CellChangeTimes->{{3.809771346512965*^9, 3.8097713765559163`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0zlKBFEUhtGLkaGBgYGBioiIiPOsXc7t2HZrO2sgGBub3aW9TbgPl+AI
UudBURx+PuolNfz82nnpiYi3r+f7/Xs+GlE/VZ29uA/34wE8iIfwCB7FY3gc
T+BJPIWn8QyexXN4Hi/gRbyEl/EKXsVreB1v4E3cwFXdiWOLHcc2O44ddhy7
7Dj22HHss+M4YMfRZG9W3Z/z/vcfHNadOI7ocRyz4zhhx3HKjuOM++Fosbfo
z+uucOKCo02PE5c29+vUXeHs0OO44Ps4ccFxSY8TFxxdepy44Liix4kLjmt6
nLjguKHHiQuOW3qcuOC4o8eJC457epy44Higx4kLjkd6nLjgeKL/9yef9Hvg

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 121.}, {0, 0.3333333333333333}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.809771377540568*^9, 3.8097742758700104`*^9}]
}, Open  ]],

Cell["Scatter plot the eigenvalues vs mode occupation", "Text",
 CellChangeTimes->{{3.809691190788318*^9, 3.8096912038157063`*^9}, {
  3.8096912947707624`*^9, 3.809691299476632*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"modeEvalTuple", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log10", "[", 
       RowBox[{"Im", "[", 
        RowBox[{"evals", "[", 
         RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], "]"}], ",", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ".", "targetMode"}], "]"}], "2"], 
       "/", "normL"}]}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"otherEvalTuples", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Log10", "[", 
        RowBox[{"Im", "[", 
         RowBox[{"evals", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ".", 
           RowBox[{"evecs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], "/", "normL"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Range", "[", "atomnum", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "\[NotEqual]", "modeIdx"}], ")"}], "&"}]}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8096913633326225`*^9, 3.8096913947786117`*^9}, {
   3.809691425632874*^9, 3.8096915071742573`*^9}, {3.8096915416427755`*^9, 
   3.809691611107605*^9}, 3.809691777363924*^9, {3.8096919138452992`*^9, 
   3.80969195452117*^9}, {3.809692146215351*^9, 3.80969214909266*^9}, {
   3.809692190275172*^9, 3.8096922081644588`*^9}, {3.809693398228677*^9, 
   3.8096934265828915`*^9}, {3.809774181458193*^9, 3.8097741834002056`*^9}, {
   3.810599585812853*^9, 3.8105995995972075`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"modeEvalTuple", ",", "otherEvalTuples"}], "}"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "7"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Ferro. mode\>\"", ",", "\"\<Other modes\>\""}], "}"}]}], 
    ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", " ", "\"\<Mode overlap vs linewidth, t=0\>\""}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \
\(i\)]\)/\[Gamma])\>\"", ",", "\"\<Mode overlap\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809691958689979*^9, 3.809691971685286*^9}, {
   3.809692112615225*^9, 3.809692178646309*^9}, {3.809692220848303*^9, 
   3.8096923418434916`*^9}, {3.809692375115229*^9, 3.809692470015396*^9}, {
   3.809692506597993*^9, 3.8096925194076967`*^9}, {3.8096925807902546`*^9, 
   3.8096927195305843`*^9}, 3.809692861580454*^9, {3.809693440549517*^9, 
   3.8096935473419003`*^9}, {3.8096935817997713`*^9, 3.809693696077877*^9}, {
   3.809730061495578*^9, 3.8097300653612366`*^9}, {3.809774032259774*^9, 
   3.8097740406808577`*^9}, 3.8105995887118225`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             FontSize -> 7, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{-2.0516556617545376`, 
         0.39727524186508584`}}, {{-2.0516556617545376`, 
         0.39727524186508584`}}}]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             FontSize -> 7, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], CompressedData["
1:eJw1yX84E3gcwHE/Uod0PRonavTDlRU57ugzV9/SkEuFmuQcOnGoISy75kc/
rubXVh6cn3dd2J4YFYpR7YvJ9pBQqiGSuZpqaqtOqbXzPNYf7z9ez3vFr3H+
Efo6Ojq+s+nOpjdbkPCuz1j1BHJwEFXYNB5E6yMHBY1Bo+h5EF9tQt0LXpFJ
mvKeEXTlp2huCDEG7LW+WGQx+pHuCdLgnplkyRDiBxetuWG9GPlaCKziXKRo
S+JUFMOWCDu1jtDnmY/MhMHYZdl0yNW7KOelPbXY2A7WR5itMjO+jQTpJUNl
leVg88XSa+YJT+nwrcLtkSbuNkqrpjH/9fVF+0uSDa3dxUigqmM5JpwHVfGc
rXtUA44ZdbDcXPVPQXQB8mFbvo3voiFjFmXKI0SEJgs3sNK9wsDXmvlelt+O
Fh31bqu+Hg5OapbMNbwNddTOd7JqT4Ukg7FYfmUVjnFbmrZ2dwG0a83Ozlom
izsHpyxCgzLYzahEVfnpVokNmBTxyI2WjWgrxzntiMYbBh4+3tA6fhVFCd5T
uq7pogPIJme7sgG9zl1VRKmIAnut2Vn9eujSCdAMamoyOZdRfW36y6bcNxsl
Voc/UPv4aMGOGxcfxtSB47iaeOcYFx2c77fVL/cQ1D2Zc6u3mwe75QS8KCG9
m15UjHn+5um1rRiWnL42ZkrmI45DAeXrQ5kwE1apu8+yEJ2R9eaY0WKAr/Vx
U/mBznXxcKjP1RPtv4BXRnFoTeo8NKMoXHrPLwkzkZQ7pVcBgW/nTM8qraGt
GYSaXVX6vNnrs3nk0Z4uV3LvYat8g9/pSOVKz/aWVqPulZRNqqcXcNC77lL1
VBCal/k5ghTMw8ThSwzXkzR4Jx+/Y3K1Abc79jyjOl0ByuSc411GGiK9WbA0
zPsBNbUZi+2PhOgwolAGxdm/tL4Z0+yy5dWMHti1UDhI8DyPA70saR0hedCp
9WV5p3MHiQUMUqXGfCEL/+WvXC2s4oCtw5z7iGUcY8YfMPqbR+LdNAGWFhjY
upRVwR7dlAyztBZsdK5hGxbFQqv7VqbxYREOGGjMQZkCEGod90p8asInEYZE
m52rH4jxj9ahBqFcE7Jw94JOjb4E1/C/S3nQlge+Mdlrp7ldmKuMjF3JKAYP
rVXLusX1/VWwLlnulp/fjEsNozdGuyegPuN+qVPwdXz0HEESu6wBqqJNdqRv
7MccT/lnf2o9qm/8ZNRJ7sfbNUt0pvXOkAOFDH3ZvV5c25cfrPpZCSFaM+4r
ybYELpTP2BH1wrqx1/0JL4uBciRSv+n1ow5hweRNgulpKnRsq1tyIfwW/qUo
SUjYlAfPtR5OXvN9AOk0rGv6+BUjrxsLDWvokpMbyIWhk5dSh8ewroxwXiLg
gUDr5WQ7sWg0FxIWcXTzXz3Gw4QUkpciALp3NC5OVDzGTYpjFtznxUBNnQpQ
nx3BFRUgJrA74ITWDjezCp+1bIOz8T9QbbYo8AHi+L4VjDp0MrX5m2eS19hI
TXfRm2dIZmqtdmbKraJXk4cqA1e571Ti/S82uxpdLCOnkCw92jyVeKKA3Mr8
+z4yfbKX/Sf6D7902OVUwlXAKauFLU2+H7AhL3QTl9oJx7U++OqeLFw1CP8D
k5uAnQ==
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-2.0516556617545376`, 0.6458589077428301}, {
       0, 0.39727524186508584`}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Mode overlap\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(i\\)]\\)/\[Gamma])\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Mode overlap vs linewidth, t=0\"", TraditionalForm], 
     PlotRange -> {{-2.0516556617545376`, 0.6458589077428301}, {
       0, 0.39727524186508584`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ferro. mode\"", "\"Other modes\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 7, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 7, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", "7"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", "7"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8096919731533256`*^9, {3.809692117144107*^9, 3.809692168948248*^9}, {
   3.8096922130872874`*^9, 3.809692246846362*^9}, {3.809692296383086*^9, 
   3.809692342561574*^9}, {3.809692389134718*^9, 3.809692421744496*^9}, {
   3.809692471084536*^9, 3.8096925203352137`*^9}, 3.809692605496172*^9, {
   3.8096934326166983`*^9, 3.809693446479619*^9}, 3.809693548262438*^9, {
   3.8096936707266045`*^9, 3.8096936814968767`*^9}, 3.8096940964071894`*^9, 
   3.8097300751391125`*^9, 3.80977143454315*^9, {3.809774046329821*^9, 
   3.809774059532552*^9}, {3.8097741606882553`*^9, 3.80977416426289*^9}, 
   3.8097742802114973`*^9, 3.8105995783815007`*^9, 3.810599611448326*^9, 
   3.8106622876618476`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<plot_overlap_v_linewidth_t0_fmode_``x``_``_9excited.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809693854721695*^9, 3.809693904449662*^9}, {
   3.8097300912161093`*^9, 3.809730092852703*^9}, 3.8097742850817165`*^9}],

Cell[BoxData["\<\"plot_overlap_v_linewidth_t0_fmode_11x11_square_9excited.png\
\"\>"], "Output",
 CellChangeTimes->{{3.809693884032281*^9, 3.809693905842928*^9}, 
   3.8097300946289835`*^9, 3.8097714580079093`*^9, 3.8097742878437557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", "atomnum", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "\[NotEqual]", "modeIdx"}], ")"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096916135217147`*^9, 3.8096916348225775`*^9}, {
  3.8096916749274163`*^9, 3.809691768770897*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8096916355193167`*^9, {3.809691702113702*^9, 3.8096917497084007`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["animation of polarization spreading", "Subsubsection",
 CellChangeTimes->{{3.8102295576144896`*^9, 3.810229573700259*^9}}],

Cell["\<\
Make a movie of the excitation spreading. First redefine tsteps to get the \
desired resolution\
\>", "Text",
 CellChangeTimes->{{3.809605573765632*^9, 3.8096055804148593`*^9}, {
  3.809645311349017*^9, 3.8096453187702*^9}, {3.809730160837861*^9, 
  3.8097301746559057`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "explicit", " ", "points", " ", "for", " ", "the", " ", 
    "solution", " ", "and", " ", "transpose", " ", "to", " ", "get", " ", "a",
     " ", "state", " ", "vector", " ", "at", " ", "each", " ", "timestep"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"savesoln", " ", "=", " ", "True"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ti", "=", "0"}], ";", 
    RowBox[{"numsteps", "=", "100"}], ";", 
    RowBox[{"tf", "=", 
     FractionBox[
      RowBox[{"numsteps", "-", "1"}], "\[Gamma]"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsteps", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"ti", ",", "tf", ",", 
       FractionBox[
        RowBox[{"tf", "-", "ti"}], 
        RowBox[{"numsteps", "-", "1"}]]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"soln", " ", "with", " ", "rows", " ", "i", " ", "having", " ", 
     SubscriptBox["\[Psi]", "i"], " ", "evaluated", " ", "at", " ", "each", 
     " ", "timestep", " ", "t"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tsteps"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fname", " ", "=", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<soln_time_evol_``_``_````x``.txt\>\"", ",", 
         RowBox[{"Floor", "[", "ti", "]"}], ",", 
         RowBox[{"Floor", "[", "tf", "]"}], ",", "gridname", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"savesoln", ",", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"ToString", "[", "solnPts", "]"}]}], "]"}]}], "]"}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "transpose", " ", "soln", " ", "to", " ", "get", " ", "a", " ", "vector", 
     " ", "state", " ", "at", " ", "each", " ", "tstep"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"vecSoln", " ", "=", " ", 
     RowBox[{"Transpose", "@", "solnPts"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
     RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normL", " ", "=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "the", " ", "approximate", " ", "ferromagnetic", " ", 
     "mode"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overlap", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"afmode", ".", 
            RowBox[{"evecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeIdx", "=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mode", " ", "=", " ", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodePts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "t", "]"}], "]"}], ".", "mode"}], "]"}], "2"], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "can", " ", "make", " ", "the", " ", "lines", " ", "below", " ", "more", 
     " ", "efficient", " ", "by", " ", "only", " ", "computing", " ", "the", 
     " ", "sums", " ", "once"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalPts", " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"vecSoln", "[", 
              RowBox[{"[", "t", "]"}], "]"}], ".", 
             RowBox[{"evecs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"totalPts", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "-", 
        RowBox[{"fmodePts", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodeTuples", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "fmodePts"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "fmode", " ", "occupation", " ", "at", " ", "each", " ", "time", " ", 
     "step"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "otherPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "totalPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"occupation", " ", "in", " ", "all", " ", "other", " ", "modes"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.809537731589987*^9, 3.8095377317493005`*^9}, {
   3.809538818979971*^9, 3.8095388204221125`*^9}, {3.809538877168335*^9, 
   3.8095388806360598`*^9}, 3.809539283946311*^9, {3.8095393466665525`*^9, 
   3.809539372119471*^9}, {3.809539467892342*^9, 3.809539468073819*^9}, {
   3.8095395222788367`*^9, 3.809539522892194*^9}, 3.8095450971210623`*^9, {
   3.8095458315611763`*^9, 3.8095458355654626`*^9}, {3.80955773496976*^9, 
   3.809557757853461*^9}, {3.8095583906833534`*^9, 3.80955839126085*^9}, {
   3.8095597358014803`*^9, 3.809559807414382*^9}, {3.809559964155444*^9, 
   3.809559968153966*^9}, {3.809599552339513*^9, 3.8095995531761265`*^9}, {
   3.809599617330911*^9, 3.8095996220619907`*^9}, {3.8096000584546027`*^9, 
   3.809600116786805*^9}, {3.8096003298751945`*^9, 3.8096003393550863`*^9}, {
   3.8096006351305075`*^9, 3.8096008071453*^9}, {3.8096010934339542`*^9, 
   3.809601093899026*^9}, {3.8096011379469185`*^9, 3.8096011387812004`*^9}, {
   3.8096011727637854`*^9, 3.8096011739468527`*^9}, {3.80960124310413*^9, 
   3.8096012867778454`*^9}, 3.809605305087755*^9, {3.8096054607247677`*^9, 
   3.8096054665152907`*^9}, {3.8096484370062017`*^9, 3.809648442380129*^9}, 
   3.8096486033603587`*^9, {3.8096872387610865`*^9, 3.8096872447717113`*^9}, {
   3.8096873155956926`*^9, 3.809687355940363*^9}, {3.809687553929351*^9, 
   3.8096875833017836`*^9}, {3.809687620226015*^9, 3.8096876209750614`*^9}, {
   3.809694119981163*^9, 3.8096941727791758`*^9}, {3.8097244836682706`*^9, 
   3.8097245504190836`*^9}, {3.8097246239728518`*^9, 3.809724641454688*^9}, 
   3.8097294103660364`*^9, {3.8097295651431766`*^9, 3.8097296089304705`*^9}, {
   3.809729641149293*^9, 3.809729684871345*^9}, 3.809730180781518*^9, 
   3.809730246959879*^9, {3.8106608054155664`*^9, 3.8106608057236543`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gifSteps", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normVecSoln", " ", "=", " ", 
   RowBox[{"vecSoln", "*", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cf", " ", "[", "z_", "]"}], ":=", " ", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Purple", ",", "Black", ",", "Green"}], "}"}], ",", "z"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colors", "=", "\"\<AvocadoColors\>\""}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809723578017413*^9, 3.8097237124476476`*^9}, {
   3.809723787728565*^9, 3.809724169141937*^9}, {3.809724201228233*^9, 
   3.8097242725032277`*^9}, {3.8097243341735168`*^9, 
   3.8097243397114596`*^9}, {3.8097243704071174`*^9, 
   3.8097244436651106`*^9}, {3.8097247701208606`*^9, 3.809724770293457*^9}, {
   3.809724838574437*^9, 3.8097248609312625`*^9}, {3.809724919511783*^9, 
   3.8097249198884673`*^9}, {3.809724997509455*^9, 3.8097250176025133`*^9}, {
   3.809725320759549*^9, 3.8097253226388206`*^9}, {3.8097254793479247`*^9, 
   3.80972552522919*^9}, {3.8097260071736283`*^9, 3.809726007884187*^9}, {
   3.809726556144826*^9, 3.809726560318365*^9}, 3.8097266686627755`*^9, {
   3.809726715357799*^9, 3.8097267252488627`*^9}, {3.8097269530930076`*^9, 
   3.80972699097888*^9}, {3.809727072379707*^9, 3.809727084995942*^9}, {
   3.8097275036949587`*^9, 3.8097275093308525`*^9}, {3.8097303504251375`*^9, 
   3.809730385153163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cfData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"cf", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.80972728232745*^9, 3.80972730795916*^9}, {
  3.8097274667194357`*^9, 3.809727491287115*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0., 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.5, 0., 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0., 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0., 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 0., 0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2666666666666667, 0., 0.2666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.4, 0., 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 0., 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 0., 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3, 0., 0.3], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2, 0., 0.2],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.3, 0., 0.3]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.3, 0., 0.3]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3, 0., 0.3],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.1333333333333333, 0., 0.1333333333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.19999999999999996, 0., 0.19999999999999996]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.19999999999999996`, 0., 0.19999999999999996`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666665, 0., 0.06666666666666665],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.09999999999999998, 0., 0.09999999999999998]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.09999999999999998, 0., 0.09999999999999998]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.09999999999999998, 0., 0.09999999999999998],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0., 0., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.20000000000000018`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.13333333333333347`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0., 0.20000000000000018, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.20000000000000018`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.20000000000000018`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.40000000000000013`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.2666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0., 0.40000000000000013, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.40000000000000013`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.40000000000000013`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.6000000000000001, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0., 0.6000000000000001, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.6000000000000001, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.6000000000000001, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.8, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0., 0.8, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0.8, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.8, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0., 1., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 1., 0.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8097272964649034`*^9, 3.809727308573516*^9}, {
   3.8097274770099106`*^9, 3.809727510972458*^9}, 3.8097303540406947`*^9}]
}, Open  ]],

Cell["Make single frame plot of f,af eigenmodes:", "Text",
 CellChangeTimes->{{3.8097307307881117`*^9, 3.8097307525820665`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"overlap", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{
      RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"overlap", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"fmode", ".", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modeIdx", "=", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"overlap", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"#2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", " ", "=", " ", 
   RowBox[{"evecs", "[", 
    RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8097310909858055`*^9, 3.8097310996062193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Legended", "[", 
    RowBox[{
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SqrtBox["atomnum"], ",", 
           SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<Ferro. Eigenmode, ``x`` ``\>\"", ",", 
            SqrtBox["atomnum"], ",", 
            SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"Mesh", "->", "True"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            SqrtBox["atomnum"]}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"BarLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cfData", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809730797213892*^9, 3.8097308159322433`*^9}, {
  3.809730902211009*^9, 3.8097309215935144`*^9}, {3.8097311107544336`*^9, 
  3.8097311138321967`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{RasterBox[CompressedData["
1:eJx1lnlM03cYxhsgBS2MirB0tXJMQWCFAWImlgBCx1DKBKvoKoaEVYbApAoK
A6IsIHbDCZpuCs5xzVoFpGOsHENhTloFgUIIVoprCVAKFKiTo5xblh1/7IFf
0qT55M2b933e6+sQk3TwhDGBQCD98/vr/79fC2/LKdvaIn/C/74A6fxFf5uf
gO/OrNzleeMX4GQfFdk3XwZcFPYddZXdAbypvDBWckEOXM3ILdQxngFXOMny
XVOlwD3Ehlia/CHy89c/X6gVA8/a/vNJBfsbtFdYmka4SYCbuPYKP/6yBzh3
xEB95fYcuNlE+mW/UiVwrVAqy0tTAbdK3lZUWqEGXn9rj2m27jfgaYNT7bts
0L/9c6fFoWN9WC/7EA1ntRu4OL/aiNTxA3DKxd1zPtsfAX8y5pcxm4z5ikNa
5eykQeDfT6Tuk68MYb55XL7JAQ32m9+d2aqsUeCcXFtnwga0l2g8x9rr0L8g
6ALvgAvGU6BM5GhLUR/yI7LWTduM9dqb0M3c8gR45nSLLnAU9bfVP7jbGzQM
vOSj9D67Z1qsI/V0pLXxBPbnPe8KVxcd8B6bd+YsH4zjXEQeEW69u4b/4Tca
ngpQH7OXogTPrn7g+q2MLoeJ1jX8uyqJapxfcYW5c8FD7Gf+V5fqiWewXlZ2
dRLKPsyXPH7/ZuzCJPBlb7tMFWka9RzNS+D2ob1gs5nUogj1oeUsza+MjAAP
L5wRnhfifBm8FhVD1e3AU0QqaWMr7quys8Ft5Z04v3MBbY7icuxnetURJZ2F
9Y15L7By0B3z/fvTA3/stRz6UjsFnCXalOFMRP/mvjmtFccxHgWPEF/Mx/hD
itnEGh/MtyRactMysRM4k8NKYTmiHw+BPsRCif1wyqFfQ03EfmiamlmK98e8
hD4nBoYiUJ8AXXd7HA3tmZQPnazU2A8D/L1HjegYT1xZ1ieXvLCfRUwrzqwM
71EBO/tg5M6nwHkGVlVo8gDwc7+rX/TF4n4gRt0ivj2N87uePtzqdNK7SVhf
NU2Q+6YT2q+3f1LGDr3V2Y/74YbGm77nGO43sgc7fKcx3nfy9fDUUN9fgX87
laNcaMB7YRuqJURew/0smjHe+OIL1GfmageFVI/1ogdNHq6RYj835d/Tmn2N
9uOTRZ/12KP/c8FlJREsjEevrmnUjeK9KIkX1NpltaD+S/4bUo7XA+91p5rG
yfH9QHjdxlj9A/XRL1+zCG/A/rE+6sLcb4Tz1Zt6cvH2K+Tr2Q+/JoZ94Ib+
17vvlx2vBEczMX5xrcrEfeVH4C2rnzION5biHhjfwY95vw75lceSQDG+N9Ki
LDdHN68xX3GBURQD7p/hSscdzSR85wSc7qQ55HRhvvvnr4bdwfvOS7Y/62yO
71uPclk2baQG/ddlnOFaF//H/wQNmeYo
         "], {{0, 0}, {11, 11}}, {0, 1}], {
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 11}, {11, 11}}, {{0, 10}, {11, 10}}, {{0, 9}, {11, 
            9}}, {{0, 8}, {11, 8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0,
             5}, {11, 5}}, {{0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11,
             2}}, {{0, 1}, {11, 1}}, {{0, 0}, {11, 0}}}],
           Antialiasing->False]}, 
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 0}, {0, 11}}, {{1, 0}, {1, 11}}, {{2, 0}, {2, 
            11}}, {{3, 0}, {3, 11}}, {{4, 0}, {4, 11}}, {{5, 0}, {5, 11}}, {{
            6, 0}, {6, 11}}, {{7, 0}, {7, 11}}, {{8, 0}, {8, 11}}, {{9, 0}, {
            9, 11}}, {{10, 0}, {10, 11}}, {{11, 0}, {11, 11}}}],
           Antialiasing->False]}}}, {}},
      Axes->False,
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{None, None},
      FrameStyle->Opacity[0],
      FrameTicks->{{{{10.5, 
           FormBox["1", TraditionalForm]}, {9.5, 
           FormBox["2", TraditionalForm]}, {8.5, 
           FormBox["3", TraditionalForm]}, {7.5, 
           FormBox["4", TraditionalForm]}, {6.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {4.5, 
           FormBox["7", TraditionalForm]}, {3.5, 
           FormBox["8", TraditionalForm]}, {2.5, 
           FormBox["9", TraditionalForm]}, {1.5, 
           FormBox["10", TraditionalForm]}, {0.5, 
           FormBox["11", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {1.5, 
           FormBox["2", TraditionalForm]}, {2.5, 
           FormBox["3", TraditionalForm]}, {3.5, 
           FormBox["4", TraditionalForm]}, {4.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {6.5, 
           FormBox["7", TraditionalForm]}, {7.5, 
           FormBox["8", TraditionalForm]}, {8.5, 
           FormBox["9", TraditionalForm]}, {9.5, 
           FormBox["10", TraditionalForm]}, {10.5, 
           FormBox["11", TraditionalForm]}}, None}},
      FrameTicksStyle->Opacity[1],
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->None], Scaled[{0.5, 0.5}], Center, Scaled[{1, 1}]], InsetBox[
     TemplateBox[{FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1l01slGUUhaeBhWGDMRVXoiTGVNlocKEJ7birCxeCGxKJCyO6IYLRBSIx
DQHZ0S66sC4MhJJKUiclVPsThGlRgcrPaGc6RSu2tWqlRVlQ2Jhov3vfc2++
czMnmabn6XTeee893/uz6Y0923etKRQKl1dfTauv7HfVbLGQ02yx1D63v7n0
q3H4nZ3jKy07ncOvq5/Y27rOOfzwxsNL24ZvGod/S+Qc/mEZyDn8hdVROsd/
MQ7/bms2knP4x7JhNjqHv3ol04xx+A+bs4Gcwz8lE3QOL9Or/2wcXoY57Bz+
uS2ZnMPP788G+sk4fFdW1k7n8G1SWOfwy9kwSzeMw3/ak8k5/EtZO9udw9/L
yroybRy+N5veCefw26WhzvN+mnI1nXJVp1zVU67qlKt6ylWdclUvjkiOpozD
vy05cg6vOZqiXE2lXNUoV7WUqxrlqpZyVaNc1VKuqpSraspVlXJVTbmqUq6q
KVeTlKvJlKtJytVkUWK0xTm8tHPuR+PwUtZO5/AyvVbn8DLM0g/G4SVGPc7h
pZ3tzuGlrCsV4/CaowrlqpJyVaFcVYr/ia4bh39NJuIc/ivJxTXj8A9J/53D
vyMTv2ocfkL6ecU4/JPSN+fwB6VQ3xuHn5U+TBiH3yr1dg7/idT1snH4u1K/
S8bhX5E6OYfvl0ZcNA7/gATMOfyb8tx8Zxx+TBr3rXH4RyWQzuE/kLx/Yxy+
Jrm+YBz+Wcmvc3jN6Tjldjzlc4zyOZbWN+fwmq8y5a2ccnWecnW+OCR5OWcc
fo/k4mvj8NKGlrPG4bXPo9T30dTfEervSOrjMPVxOPVriPo1VCxLOb40Dn9A
6j1oHF73nzO0H51J+8hp2kdOp7oNUN0G0v5eov29lOrQT3XoT/M9RfM9lebV
R/PqK+6T79trHH5Rvtdx4/ADMv5nxuG7dIHy/TT5Dvm8buPwZfm/o17P5PXv
h+j9hxJ/n7j7RvqYPi/PuwOfoPnl398b+OdU7/znlAK/R/3Pf/5g4I9QHvPj
jgT+Aj0f+e9zLvAv6HnNf8+xwNto/YA+onUIukjrGbSe1kVoB62v0DFap6FF
Wu+hZ2jfgPbR/gOVaR+D1srPSqw/7avQy7Q/Q3don4e66bwAPU/nDmiGzi9Q
B52DoCfoPAVdonMZtJvOd9CDdE6EBum8Ce2gcyv0L51/oWN0joZepPM4tEDn
eugI3Q+gzXTPgK7TfQV6j+490Aa6P0GjdA+DXqf7HNQkP/leWCi8KnWL/KTk
LfL7Us/IdT+eC1zvJ5HrPhS53n/mA9f7UuR6v4pc97/f4ron/Yp8WuIW+dPS
x4XAdd+N/Jr0N/LH5bn4PXAp897I9TgUuQzb/Efget+OXPfvyPXe9Wfgek+L
XO91kasWA9fzfeR6zohc76WRa67+apCryDVXkWuubjXIVeSaq8g1V0sNchW5
5ipyzdVyg1xFrrmKXHN1u0GuItdcRa65+rtBriLXXEWuufqnQa4i11xFrrpj
/H8tDLSm
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                    Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                    Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                    Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                    Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                    Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]},
      "BarLegend",
      DisplayFunction->(#& ),
      InterpretationFunction:>(RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0., 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4, 0., 0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2666666666666667, 0., 0.2666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4, 0., 0.4]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4, 0., 0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4, 0., 0.4], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3, 0., 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.2, 0., 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3, 0., 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3, 0., 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3, 0., 0.3], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1333333333333333, 0., 0.1333333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19999999999999996, 0., 0.19999999999999996]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
                    Editable -> False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06666666666666665, 0., 0.06666666666666665], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.09999999999999998, 0., 0.09999999999999998]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
                    Editable -> False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.20000000000000018`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.13333333333333347`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.20000000000000018, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.20000000000000018`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.20000000000000018`, 0.], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.40000000000000013`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.2666666666666668, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.40000000000000013, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.40000000000000013`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.40000000000000013`, 0.], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6000000000000001, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4000000000000001, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.6000000000000001, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6000000000000001, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6000000000000001, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.5333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.8, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8, 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 1., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 1., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 1., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 1., 0.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1.01, 0.5}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   Axes->False,
   Frame->False,
   FrameLabel->{None, None},
   FrameStyle->Opacity[0],
   FrameTicks->{{{{10.5, 
        FormBox["1", TraditionalForm]}, {9.5, 
        FormBox["2", TraditionalForm]}, {8.5, 
        FormBox["3", TraditionalForm]}, {7.5, 
        FormBox["4", TraditionalForm]}, {6.5, 
        FormBox["5", TraditionalForm]}, {5.5, 
        FormBox["6", TraditionalForm]}, {4.5, 
        FormBox["7", TraditionalForm]}, {3.5, 
        FormBox["8", TraditionalForm]}, {2.5, 
        FormBox["9", TraditionalForm]}, {1.5, 
        FormBox["10", TraditionalForm]}, {0.5, 
        FormBox["11", TraditionalForm]}}, None}, {{{0.5, 
        FormBox["1", TraditionalForm]}, {1.5, 
        FormBox["2", TraditionalForm]}, {2.5, 
        FormBox["3", TraditionalForm]}, {3.5, 
        FormBox["4", TraditionalForm]}, {4.5, 
        FormBox["5", TraditionalForm]}, {5.5, 
        FormBox["6", TraditionalForm]}, {6.5, 
        FormBox["7", TraditionalForm]}, {7.5, 
        FormBox["8", TraditionalForm]}, {8.5, 
        FormBox["9", TraditionalForm]}, {9.5, 
        FormBox["10", TraditionalForm]}, {10.5, 
        FormBox["11", TraditionalForm]}}, None}},
   FrameTicksStyle->Opacity[1],
   ImagePadding->All,
   Method->{
    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
     "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
     "RangePadding" -> Scaled[0.05]},
   PlotLabel->FormBox[
     StyleBox[
      InterpretationBox[
      "\"Ferro. Eigenmode, \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) \
square\"", 
       StringForm["Ferro. Eigenmode, ``x`` ``", 11, 11, "square"], Editable -> 
       False], 
      GrayLevel[0], FontSize -> 14, StripOnInput -> False], TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False],
  InterpretTemplate[Legended[
    Graphics[{
      Raster[CompressedData["
1:eJx1lnlM03cYxhsgBS2MirB0tXJMQWCFAWImlgBCx1DKBKvoKoaEVYbApAoK
A6IsIHbDCZpuCs5xzVoFpGOsHENhTloFgUIIVoprCVAKFKiTo5xblh1/7IFf
0qT55M2b933e6+sQk3TwhDGBQCD98/vr/79fC2/LKdvaIn/C/74A6fxFf5uf
gO/OrNzleeMX4GQfFdk3XwZcFPYddZXdAbypvDBWckEOXM3ILdQxngFXOMny
XVOlwD3Ehlia/CHy89c/X6gVA8/a/vNJBfsbtFdYmka4SYCbuPYKP/6yBzh3
xEB95fYcuNlE+mW/UiVwrVAqy0tTAbdK3lZUWqEGXn9rj2m27jfgaYNT7bts
0L/9c6fFoWN9WC/7EA1ntRu4OL/aiNTxA3DKxd1zPtsfAX8y5pcxm4z5ikNa
5eykQeDfT6Tuk68MYb55XL7JAQ32m9+d2aqsUeCcXFtnwga0l2g8x9rr0L8g
6ALvgAvGU6BM5GhLUR/yI7LWTduM9dqb0M3c8gR45nSLLnAU9bfVP7jbGzQM
vOSj9D67Z1qsI/V0pLXxBPbnPe8KVxcd8B6bd+YsH4zjXEQeEW69u4b/4Tca
ngpQH7OXogTPrn7g+q2MLoeJ1jX8uyqJapxfcYW5c8FD7Gf+V5fqiWewXlZ2
dRLKPsyXPH7/ZuzCJPBlb7tMFWka9RzNS+D2ob1gs5nUogj1oeUsza+MjAAP
L5wRnhfifBm8FhVD1e3AU0QqaWMr7quys8Ft5Z04v3MBbY7icuxnetURJZ2F
9Y15L7By0B3z/fvTA3/stRz6UjsFnCXalOFMRP/mvjmtFccxHgWPEF/Mx/hD
itnEGh/MtyRactMysRM4k8NKYTmiHw+BPsRCif1wyqFfQ03EfmiamlmK98e8
hD4nBoYiUJ8AXXd7HA3tmZQPnazU2A8D/L1HjegYT1xZ1ieXvLCfRUwrzqwM
71EBO/tg5M6nwHkGVlVo8gDwc7+rX/TF4n4gRt0ivj2N87uePtzqdNK7SVhf
NU2Q+6YT2q+3f1LGDr3V2Y/74YbGm77nGO43sgc7fKcx3nfy9fDUUN9fgX87
laNcaMB7YRuqJURew/0smjHe+OIL1GfmageFVI/1ogdNHq6RYj835d/Tmn2N
9uOTRZ/12KP/c8FlJREsjEevrmnUjeK9KIkX1NpltaD+S/4bUo7XA+91p5rG
yfH9QHjdxlj9A/XRL1+zCG/A/rE+6sLcb4Tz1Zt6cvH2K+Tr2Q+/JoZ94Ib+
17vvlx2vBEczMX5xrcrEfeVH4C2rnzION5biHhjfwY95vw75lceSQDG+N9Ki
LDdHN68xX3GBURQD7p/hSscdzSR85wSc7qQ55HRhvvvnr4bdwfvOS7Y/62yO
71uPclk2baQG/ddlnOFaF//H/wQNmeYo
       "], {{0, 0}, {11, 11}}, {0, 1}], {{Antialiasing -> False, 
        GrayLevel[-1 + GoldenRatio], 
        Line[{{{0, 11}, {11, 11}}, {{0, 10}, {11, 10}}, {{0, 9}, {11, 9}}, {{
         0, 8}, {11, 8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0, 5}, {11, 
         5}}, {{0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11, 2}}, {{0, 
         1}, {11, 1}}, {{0, 0}, {11, 0}}}]}, {Antialiasing -> False, 
        GrayLevel[-1 + GoldenRatio], 
        Line[{{{0, 0}, {0, 11}}, {{1, 0}, {1, 11}}, {{2, 0}, {2, 11}}, {{3, 
         0}, {3, 11}}, {{4, 0}, {4, 11}}, {{5, 0}, {5, 11}}, {{6, 0}, {6, 
         11}}, {{7, 0}, {7, 11}}, {{8, 0}, {8, 11}}, {{9, 0}, {9, 11}}, {{10, 
         0}, {10, 11}}, {{11, 0}, {11, 11}}}]}}}, {
     Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
      Opacity[0], 
      FrameTicks -> {{{{10.5, 1}, {9.5, 2}, {8.5, 3}, {7.5, 4}, {6.5, 5}, {
          5.5, 6}, {4.5, 7}, {3.5, 8}, {2.5, 9}, {1.5, 10}, {0.5, 11}}, 
         None}, {{{0.5, 1}, {1.5, 2}, {2.5, 3}, {3.5, 4}, {4.5, 5}, {
          5.5, 6}, {6.5, 7}, {7.5, 8}, {8.5, 9}, {9.5, 10}, {10.5, 11}}, 
         None}}, FrameTicksStyle -> Opacity[1], GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]}, PlotLabel -> Style[
        StringForm["Ferro. Eigenmode, ``x`` ``", 11, 11, "square"], 
        GrayLevel[0], FontSize -> 14]}], 
    Placed[
     Unevaluated[
      BarLegend[{{
         RGBColor[0.5, 0., 0.5], 
         RGBColor[0.4, 0., 0.4], 
         RGBColor[0.3, 0., 0.3], 
         RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
         RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
         RGBColor[0., 0., 0.], 
         RGBColor[0., 0.20000000000000018`, 0.], 
         RGBColor[0., 0.40000000000000013`, 0.], 
         RGBColor[0., 0.6000000000000001, 0.], 
         RGBColor[0., 0.8, 0.], 
         RGBColor[0., 1., 0.]}, {-1, 1}}, LegendLayout -> "Column"]], {
     After, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.8097308877257247`*^9, 3.8097309259059772`*^9}, 
   3.809731130324153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_ferro_eigmode_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8097309437352915`*^9, 3.8097309883430033`*^9}, {
  3.8097311388343973`*^9, 3.809731140923805*^9}}],

Cell[BoxData["\<\"plot_ferro_eigmode_11x11_square.png\"\>"], "Output",
 CellChangeTimes->{{3.8097309828805857`*^9, 3.809730989209656*^9}, 
   3.8097311421016645`*^9}]
}, Open  ]],

Cell["Make gifs", "Text",
 CellChangeTimes->{{3.8097307824464235`*^9, 3.8097307856089373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"MatrixPlot", "[", 
        RowBox[{
         RowBox[{"ArrayReshape", "[", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"normVecSoln", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SqrtBox["atomnum"], ",", 
             SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{
             "\"\<Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) spreading, \
``x`` ``\>\"", ",", 
              SqrtBox["atomnum"], ",", 
              SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", ",", 
            RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
         RowBox[{"Mesh", "->", "True"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              SqrtBox["atomnum"]}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cfData", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<t=``/\[Gamma]\>\"", ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"tsteps", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
          "White", ",", "Bold", ",", 
          RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "gifSteps"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809723578017413*^9, 3.8097237124476476`*^9}, {
   3.809723787728565*^9, 3.809724169141937*^9}, {3.809724201228233*^9, 
   3.8097242725032277`*^9}, {3.8097243341735168`*^9, 
   3.8097243397114596`*^9}, {3.8097243704071174`*^9, 3.8097244294187202`*^9}, 
   3.8097270617434883`*^9, {3.8097270918393097`*^9, 3.809727092040349*^9}, {
   3.8097271415353003`*^9, 3.8097271800790462`*^9}, {3.8097272519297533`*^9, 
   3.8097272755216503`*^9}, {3.809727520198784*^9, 3.8097275223510237`*^9}, {
   3.8097302771411552`*^9, 3.809730289097172*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 68, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
      33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
      51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
      69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
      87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}}}, 
    Typeset`size$$ = {606., {267.5, 25.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$1351386$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$1351386$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Legended[
         MatrixPlot[
          ArrayReshape[
           Re[
            Part[$CellContext`normVecSoln, $CellContext`i$$]], {
            Sqrt[$CellContext`atomnum], 
            Sqrt[$CellContext`atomnum]}], PlotLabel -> Style[
            StringForm[
            "Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) spreading, ``x`` \
``", 
             Sqrt[$CellContext`atomnum], 
             Sqrt[$CellContext`atomnum], $CellContext`gridname], Black, 
            FontSize -> 14], Axes -> False, Mesh -> True, Frame -> True, 
          FrameStyle -> Opacity[0], FrameTicksStyle -> Opacity[1], FrameTicks -> {
            Range[1, 
             Sqrt[$CellContext`atomnum]], 
            Range[1, 
             Sqrt[$CellContext`atomnum]]}, ColorFunction -> $CellContext`cf, 
          ColorFunctionScaling -> True], 
         Placed[
          
          BarLegend[{$CellContext`cfData, {-1, 1}}, LegendLayout -> 
           "Column"], {After, Center}]], 
        Graphics[
         Text[
          Style[
           ToString[
            StringForm["t=``/\[Gamma]", 
             Floor[
              Part[$CellContext`tsteps, $CellContext`i$$]]]], White, Bold, 
           FontSize -> 13], {10, 0.5}]]], 
      "Specifications" :> {{$CellContext`i$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
         28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
         45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 
         62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
         79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 
         96, 97, 98, 99, 100}, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{667., {191., 198.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8097235110675144`*^9, {3.80972364655206*^9, 3.8097236820060062`*^9}, 
   3.8097237135643225`*^9, 3.80972379352612*^9, {3.8097238455077243`*^9, 
   3.8097238613515215`*^9}, {3.809723922747713*^9, 3.809723927303635*^9}, {
   3.8097239799573483`*^9, 3.8097240193874283`*^9}, 3.809724061456005*^9, {
   3.8097241076478243`*^9, 3.8097241699030933`*^9}, {3.8097242555368395`*^9, 
   3.809724274071827*^9}, 3.80972434166551*^9, 3.809724456464079*^9, 
   3.809724660782507*^9, {3.8097248424270363`*^9, 3.809724865230003*^9}, 
   3.80972492272374*^9, {3.8097250030958214`*^9, 3.809725019481451*^9}, 
   3.809727006222603*^9, 3.809727095482311*^9, {3.8097271291183424`*^9, 
   3.809727159140645*^9}, 3.809727239663418*^9, 3.8097275229015536`*^9, 
   3.8097302897953386`*^9, 3.8097303565280666`*^9, 3.8097715035135775`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", 
    SqrtBox["atomnum"]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4",
    ",", "3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8097240342430215`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<t=\!\(\*FractionBox[\(``\), \(\[Gamma]\)]\)\>\"", ",", "100"}], 
     "]"}], "]"}], ",", "White"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"MatrixPlot", "[", 
         RowBox[{
          RowBox[{"ArrayReshape", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"Re", "[", 
              RowBox[{"normVecSoln", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SqrtBox["atomnum"], ",", 
              SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<Excitation (|\!\(\*SubscriptBox[\(P\), \(x\)]\)|) \
spreading, ``x`` ``\>\"", ",", 
               SqrtBox["atomnum"], ",", 
               SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
          RowBox[{"Mesh", "->", "True"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               SqrtBox["atomnum"]}], "]"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"ColorData", "[", "cf", "]"}]}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cf", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", "100", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.809687806940313*^9, 3.809687838075184*^9}, {
   3.8096882066645327`*^9, 3.809688208094444*^9}, 3.8096885281488504`*^9, {
   3.8097250769512467`*^9, 3.809725082178584*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gif", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{"normVecSoln", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["atomnum"], ",", 
               SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) \
spreading, ``x`` ``\>\"", ",", 
                SqrtBox["atomnum"], ",", 
                SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", 
              ",", 
              RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
           RowBox[{"Mesh", "->", "True"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
           RowBox[{"FrameTicksStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                SqrtBox["atomnum"]}], "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"BarLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"cfData", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"StringForm", "[", 
              RowBox[{"\"\<t=``/\[Gamma]\>\"", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"tsteps", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
            "White", ",", "Bold", ",", 
            RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "gifSteps"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.809725090252293*^9, 3.8097251220828*^9}, 
   3.809725310034401*^9, {3.8097276148536043`*^9, 3.809727629451586*^9}, {
   3.8097277426662025`*^9, 3.8097277445112658`*^9}, {3.8097304015532956`*^9, 
   3.8097304209962997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<excitation_spreading_af_``x``_``.gif\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "gif", ",", 
   RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", "0.3"}]}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.809688180309969*^9, 3.8096882227679663`*^9}, {
   3.809688302760231*^9, 3.80968832832456*^9}, {3.8096883585526776`*^9, 
   3.8096883862690573`*^9}, {3.809725065430794*^9, 3.809725070094314*^9}, {
   3.809725735291532*^9, 3.8097258223769217`*^9}, {3.809727612165797*^9, 
   3.809727612260545*^9}, {3.809730424555784*^9, 3.8097304297190204`*^9}, 
   3.8097305667899957`*^9}],

Cell[BoxData["\<\"excitation_spreading_af_11x11_square.gif\"\>"], "Output",
 CellChangeTimes->{{3.809688354195727*^9, 3.809688363875207*^9}, 
   3.809688451140368*^9, 3.8096885888905993`*^9, 3.809725215541307*^9, 
   3.8097252507641115`*^9, 3.809725398833313*^9, 3.809725876930114*^9, 
   3.809727670252263*^9, 3.8097278193787513`*^9, 3.809730434263815*^9, 
   3.8097304793931026`*^9, 3.8097716225840006`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc physics analysis", "Section",
 CellChangeTimes->{{3.8090163619501247`*^9, 3.8090163665089817`*^9}, {
   3.809209471963997*^9, 3.8092094760770473`*^9}, 3.809209607406805*^9}],

Cell[CellGroupData[{

Cell["Hamiltonian algebra", "Subsubsection",
 CellChangeTimes->{{3.809209576436367*^9, 3.8092096042035294`*^9}}],

Cell["\<\
Try to get approximate analytical expressions for eigenvalues of square grid\
\>", "Text",
 CellChangeTimes->{{3.8092096198550777`*^9, 3.809209655266404*^9}, {
  3.8092098717740297`*^9, 3.809209875227496*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", "\[Lambda]", ",", "\[Gamma]", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.809209852918344*^9, 3.809209862901392*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "k"]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", "4"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"square", " ", "grid"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"n", "\[Rule]", 
     SqrtBox["atomnum"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"e", "[", "i_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"x", "-", "polarized"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Hfull", " ", "=", " ", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["H", "##"], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"atomnum", "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{"atomnum", "+", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{"d", " ", "\[Lambda]", " ", 
          SubscriptBox["r", 
           RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[CapitalOmega]ij", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
              RowBox[{"ComplexExpand", "[", 
               RowBox[{"Re", "[", 
                RowBox[{
                 RowBox[{"e", "[", "i", "]"}], ".", 
                 RowBox[{"GdotP", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], 
             ",", 
             RowBox[{"Assumptions", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"d", "\[Element]", "Reals"}], "&&", 
               RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", 
            "]"}]}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"\[Gamma]ij", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
              RowBox[{"ComplexExpand", "[", 
               RowBox[{"Im", "[", 
                RowBox[{
                 RowBox[{"e", "[", "i", "]"}], ".", 
                 RowBox[{"GdotP", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], 
             ",", 
             RowBox[{"Assumptions", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"d", "\[Element]", "Reals"}], "&&", 
               RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Hfull", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", " ", 
         RowBox[{"\[CapitalOmega]ij", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.809209697932802*^9, 3.809209786734555*^9}, 
   3.809209868898496*^9, {3.8092099347496405`*^9, 3.8092099681704016`*^9}, {
   3.809210277886074*^9, 3.809210301304186*^9}, {3.809210465428677*^9, 
   3.809210474762639*^9}, {3.8092108165400534`*^9, 3.8092108184094815`*^9}, {
   3.809211094207759*^9, 3.80921125260073*^9}, {3.8092116815864315`*^9, 
   3.8092117012239575`*^9}, {3.8092118113112974`*^9, 3.8092118192785807`*^9}, 
   3.809211869435025*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hfull", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8092634453105717`*^9, 3.8092634569095693`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8092634476183767`*^9, 3.809263457288557*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";", 
  RowBox[{"j", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"d", " ", "\[Lambda]", " ", 
    SubscriptBox["r", 
     RowBox[{"i", ",", "j"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "k"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"e", "[", "i", "]"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{"u", ",", 
         RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"d", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.809211618884531*^9, 3.809211639909103*^9}, {
  3.8092117107498627`*^9, 3.809211711471368*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.809211643414005*^9, 3.8092117137178254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"e", "[", "i", "]"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{"u", ",", 
         RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"d", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.809211761139476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hfull", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8092102082236176`*^9, 3.8092102669801235`*^9}, {
  3.8092107810396194`*^9, 3.8092107906814437`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", "\[Pi]", " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["d", "2"]], " ", "k", " ", 
          SqrtBox[
           SuperscriptBox["\[Lambda]", "2"]]}], "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "4"]}]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "2"], " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]]}], ")"}]}], "k"], "+", 
  FractionBox[
   RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "2"], " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", "\[Pi]", " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["d", "2"]], " ", "k", " ", 
          SqrtBox[
           SuperscriptBox["\[Lambda]", "2"]]}], "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "4"]}]]}], ")"}]}], "k"]}]], "Output",
 CellChangeTimes->{{3.809210212527547*^9, 3.809210268359639*^9}, 
   3.809210326636525*^9, 3.809210791337959*^9, 3.8092108391044807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.809210808924116*^9, 3.8092108100342226`*^9}}],

Cell[BoxData[
 RowBox[{"e", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.8092108101126695`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nearest neighbor terms", "Subsubsection",
 CellChangeTimes->{{3.8092101799460707`*^9, 3.809210187857538*^9}}],

Cell["\<\
Why do the out-of-plane modes become very subradiant near \[Lambda] = 0.7? \
\>", "Text",
 CellChangeTimes->{{3.8090163717964873`*^9, 3.809016405509801*^9}, {
  3.809210174024474*^9, 3.8092101763590636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.809111096728337*^9, 3.8091111044177866`*^9}}],

Cell["Nearest- and next-to-nearest coupling terms:", "Text",
 CellChangeTimes->{{3.809112029430625*^9, 3.8091120427181067`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"nn", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
     RowBox[{"GdotP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "r", ",", "r"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8091084493923798`*^9, 3.8091084596836033`*^9}, {
  3.809111913701956*^9, 3.809111953093664*^9}, {3.8091120055235224`*^9, 
  3.8091120230815935`*^9}, {3.809112080125112*^9, 3.8091121685730877`*^9}, {
  3.8091240359275904`*^9, 3.809124039288148*^9}, {3.8091240986721497`*^9, 
  3.8091240998471107`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", "\[Pi]", " ", "r"}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", 
      RowBox[{
       SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
     RowBox[{" ", 
      SqrtBox["2"], " "}]], "-", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", 
        SqrtBox[
         SuperscriptBox["r", "2"]]}], "]"}]}], 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["r", "2"]}]], "-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
     RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.809112172389885*^9, 3.809112182624524*^9}, {
  3.8091122215859585`*^9, 3.809112256766919*^9}}],

Cell[BoxData[
 RowBox[{"nnn", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
     RowBox[{"GdotP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "r", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809112199488027*^9, 3.809112199978717*^9}, {
  3.8091240820834923`*^9, 3.8091240925447235`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "r"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["k", "2"], 
         SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"k", " ", "r"}], "]"}], 
     RowBox[{"k", " ", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8091122177472734`*^9, 3.809112217819027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", "r"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["k", "2"], 
            SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", "r"}], "]"}], 
        RowBox[{"k", " ", "r"}]]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
        RowBox[{" ", 
         SqrtBox["2"], " "}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["2"], " ", "k", " ", "r"}], "]"}]}], 
        RowBox[{"8", " ", 
         SqrtBox["2"], " ", 
         SuperscriptBox["k", "2"], " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
        RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]"}]], ",", 
     FractionBox["1", 
      SuperscriptBox["r", "2"]], ",", 
     FractionBox["1", "r"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091122906347466`*^9, 3.809112304948306*^9}, 
   3.809124077553565*^9, 3.8091241845745373`*^9, {3.8091242400000844`*^9, 
   3.809124257370179*^9}, {3.809124336900578*^9, 3.8091243706520433`*^9}, {
   3.8091245132357197`*^9, 3.8091245221096497`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "r"}], "]"}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      SqrtBox["2"]]}], "r"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", "r"}], "]"}], 
       SuperscriptBox["k", "2"]]}], "-", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      RowBox[{"8", " ", 
       SqrtBox["2"], " ", 
       SuperscriptBox["k", "2"]}]]}], 
    SuperscriptBox["r", "3"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", "r"}], "]"}], "k"]}], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      RowBox[{"2", " ", "k", " ", "\[Pi]"}]]}], 
    SuperscriptBox["r", "2"]]}], 
  RowBox[{"4", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8091247248776445`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], "+", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          SqrtBox["2"]]}], "r"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"+", 
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", "r"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          RowBox[{"2", " ", "\[Pi]"}]]}], 
        RowBox[{"k", " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], "-", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]]}], 
        RowBox[{
         SuperscriptBox["k", "2"], 
         SuperscriptBox["r", "3"]}]]}], ")"}]}], "/.", 
    RowBox[{"r", "\[Rule]", " ", 
     RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}]}], "*)"}], 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["10", "6"]}], ",", "200000"}], "}"}]}]}], "]"}]}], \
"Input",
 CellChangeTimes->{{3.8091245307580967`*^9, 3.8091245402471695`*^9}, {
  3.8091246326837187`*^9, 3.8091246554452*^9}, {3.8091247065265865`*^9, 
  3.80912474984779*^9}, {3.8091252494226317`*^9, 3.809125372617504*^9}, {
  3.8091254211009035`*^9, 3.8091254694513535`*^9}, {3.809125532403105*^9, 
  3.809125599088233*^9}, {3.809125796202443*^9, 3.8091258194962254`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.999999981632653}, {-1000000, 200000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8091257220486727`*^9, {3.8091257976605463`*^9, 3.8091258209403515`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Im", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
          RowBox[{"GdotP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
        "]"}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "+", 
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "-", 
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "0.3", ",", "1.1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thin"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "200000"}], "}"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "5000"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Lattice period [\[Lambda]]\>\"", ",", 
       "\"\<|Re[\!\(\*SubscriptBox[\(P\), \
\(i\)]\).G.\!\(\*SubscriptBox[\(P\), \(j\)]\)]|\>\""}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<N.N.\>\"", ",", "\"\<N.N.+N.N.N.\>\"", ",", " ", 
       "\"\<N.N.-N.N.N.\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Linblad Terms, Out-of-Plane Polarization\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.80912563767312*^9, 3.8091256386155987`*^9}, {
   3.8091256742883368`*^9, 3.8091257033477015`*^9}, {3.809125743972067*^9, 
   3.809125744924512*^9}, 3.8091257830246687`*^9, {3.8091258825104265`*^9, 
   3.809125949767537*^9}, {3.8091269875159197`*^9, 3.8091269908921394`*^9}, {
   3.809127203747385*^9, 3.809127301955798*^9}, {3.809127336476527*^9, 
   3.8091275306314206`*^9}, {3.8091276036351166`*^9, 3.809127634106783*^9}, {
   3.8091276943322644`*^9, 3.8091277096308575`*^9}, {3.8091277434098577`*^9, 
   3.809127806779765*^9}, {3.80912796682623*^9, 3.809127990772332*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1:eJwVl3lcTV8XxlNJkzTP8733nCIyC2UtJWlCGZKpiaiUokyF/EpkCEVIplRC
UZIMRUqKRt353iZNmiWUTL37/et+vp97zj57r/WsZ61t4rvbfbukhITEOykJ
if//7p3pNWfOHDbs2G61fNjcDH/dL3C0IfxukU7zF8L/sRS9HQj3SoxGDBBO
1H1+ZtP/n/e6l9FNOFdarSuG8IVtPdIthPsF765wCNuc4pVWEfY/NuNfxFw2
NGptt84gvLHhb+WzeWxY1+5GbSD88tLs7HArNlh1zhTkmplhpazsDMnFbJhp
NWuXOuFQN1bzfzZs0LcpaD1Em+GFlwLxQmRDAtzX5VBmuJVrcaDUlg03zhra
WhHOUNbyPWbPhs6xFuY5lhmeMHE8NGcFGzw0etu7mWao3qY3q9CJDdrlU1Nd
Ceu9jZ0X5sqGqKBfkhkMM6xdlyD4s4oN1krfd04irF/cci/SnQ3jPfqFu0zN
sN2+onLmOjb8tF57962JGa4/siqu0IMNS7UWp9GE7QTBF8I3ku/bdM89bGyG
VZM4H5hb2ODefvAB18gMx7tEaZle5Plj16wWEs7+vL9yqy8bjJ0vrz5naIYT
rxSc6d7GhmnO044PGZihICD+RtYOcv54s0XLCC9XyWjeFMiGMx4z+Cn6Zui9
06e4dRcbqqyFqX/0zPBba37Ptd1s6Hpcw11NeLbc3Sdme8h60nE2ubpmqDip
LScrnA26rNirqoS9qPzvW/ez4Yh236YdOiSeP5iiroNsuLhtaEOFthnyOy0m
Z0Sx4a5VRZ4O4b4HUSHrj7IhrD/iV4iWGT4wCQ4RHmPDTYff8XWaZtjx7NvL
xFhyvo4JO00Jvx/XzTI4QfLdrZYUrWGGjvqnSq/Fs6FGYseLT+okXhvPTV19
hg3U6FTGPMI9DvNm8RLY4JMy3pGkZoayHmHHEy+wofRwXFOHqhmyNVYeML7I
BsefAfOWEl54f8/V28ls6HPuOHtLxQx1vKfLel4l+nhUNWVY2QzTy09qtF1j
w6UM278rCd9zORR6+wYbmmus5W5MIfu5lz+25jYbLGUXqwwpmeGlgrMmgjts
OPVo8wVXwhvb/yYnZrIhu2CF6fXJJJ8lSg8M77GhdfnLWT8VSXz27hi4/oAN
BvxRx/WEt6xYf3jNQzZsm3Fie6aCGZ6r7nwgymXD/oV/FSQJL9qjYHYln+jh
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
7zCNYYMeDfFXuFAv5ZKkRtjERf6d/TXyve44b/MoGg97btnAvs4Fq4v3162M
pDHc+qf22ltcyDLxgf2HSH7QnFa4w4XzLdfPnD1I44Qfv9hJGVzoTSjRyD9A
4+UPvrXuWUTPM02GyvfTWBmhOir9gAv/rpoXNu4j/ane99XJHC4MPHxTK0n4
t4sj2zaX6Pvyf8aaEaQ/HKiPq33MhURZ1xqrcNJfDt3c6VrAhesujyO99hK/
vi59RfIZFyr3nXLdu4fsL1TeP/4FF75/5SYkhxG/25Z5bHkxWX9CZ2tmKI0n
ZpyqGnlN1hsIt3i5m0b5LKUnB0q5kGaa9Kc5hPi7nXnvzHJSHzGN5V+CSfzO
drx6UcGFatsdhsqEP47N+3ToAxdKEuS3GOwi8+TiulkzariwkW+SOiOIzM8W
cib5dVzQkPl3dFUgmbdAuCWkgQsG5eJZWwKIXiWdFv7mcGHvUv+kQztpPJ8i
aRfJ54LZwzkKqTtonLPWLWWWiPjZGteF9/1p/K8Yzz9v5MKab+stKrfT6LTi
HXt/C9GP27TShm005mQl2Zu3ceHN3nfbP/mRee7ZhPXZHVzYc2Jlx7gvmad6
Jz7Z/pkLE7X/9ssTPlR1P3eohwuhlcVilg9Z77/L4pB+LvD4CYPLvEl/36i7
lvGFnKfYfu9qL+LPbTZB975yIeLmh29BW8n5To/Wbf9O9NyNDXu30KjS6cb+
NsKF8uhPhac30/hO7bt0xBgXpryUf393E40//CxiLf5wYcjT2yh3I431fhPT
Cv5xQVdBPqnSk/Sv4+GTIybw4K/+0QU1G8j9IWraXVqaB/tfXP7H9SD+YBrT
8kCGB7cnfR0bXE9jWW/odn85HjhtW6v4fR3xM9/x+GEFHqhdTN4qR7j1Ebcx
TIn8X1nYa7qWxgJD28O0Cg+w50S42RrSD21WFT1U48Gp6W1rl7jTOOvw8Ipd
mjzIOqhkiG7EjxObpAx0eDC/5rfW8tU0ym0I2HJTjweNcp+Pbl5F/H3JaekN
hjwQji97unUljdO4rk5txjyosY3xD3OlUeFsZlMagwdLwtvqdrsQvek63FxP
8UCJkRa2x5mcx+PkuNiMBy3KMzOOO5F+9NQr5/I0Hvh49+6LdaQx9S1/jDmD
B0+7E7uSVpDzZV0Oz5hJ9i8jzrzrQOotZ8B68xwerK0v681cTvqRb8edjnk8
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
AYyzeBw=
         "]], 
        LineBox[CompressedData["
1:eJwU13c8lW8bAHCjkOxk73POc0JGQprXXWSHbA1ERotS/IoyUioqitISJZUV
SqSorPZEFGcfpcgsTfRe718+3885znOPaz36IdGeYWIiIiKb5ERE/v/3xN6B
8ANjPdBeG/BW+f0I3FKLVj6FfjnX46LpDBHSlCavkI8Wf2xrTU8XI23fK2YW
o++WfPHL3TGNCEI8JG+h6Yt2MWb8nU5G34yINaDfi/nWDttJEhE4MfUIXdBJ
dKaCpYhC+bw/b9CPg1+WR6yZQfQ028a70Rr56eE1NtLE7EjMaC96dRH32mLR
mWTZT6XBIXSMikVdT+1M4hZ26/MvdOhUd+XBIBkS2O7VK/atB6KEHe/3/ZEh
25Z/58qg23eKdB1LlyVHta269NCZ0w3SojLlyIWMd21GaAvK8OQGCXlS+jv2
lSXarubSfy/i5MmzdzWtjuhWzgtLb5oC+WDr1+iJfqnanHzaS4F8rvpZvw69
Z7rc2bIUBSJ53KZ6O1rH0OS77HsFojLxviIe/e1K7rzrIoqE2ryn9ABatlPv
422mIrGzv3v5DNon3MUwb4ci2T+1+MRD9PV3Yl3aPxXJya2so8/QrIEzISOz
lcil7r2HO9D9/rddWPOVyMOahqTP6NmdBmnztymRqSiIUvjeA4tT/WkKXUpE
js3dpIE+LuX899OwEtF2SQ6jo+0X7DJlSs0iS5iN62zQ5dd2KPyznkXiuStc
gtE706U2Vh+fRcbd7edUotNfK7SvNVIm6Srak3fRqxvzPzcuVSZ67G9vW9Fr
S8byn3soE+fNlxJ60CZzaLZdscqk4MDEK4nxHhjkz5al1ePndTdj16P1nduK
axfPJrykI86RaPYBY4tzzrNJrH2w7k70S3qIhn3AbFLQLvv0MBriT1MicbPJ
+GCkVjVazCTzEL0cPzfQbZb+0QOvFi/rWzpLhVh/Gc+djV7aLzNrta4KeV7x
Yqse+lvPEgtirEJ+LIlXsUZ7pTmfvr1Chbj4vdu0AT1K8pKVtuPnGRkKd9Bd
qovCTFrx8/Gf68N+9kDIg2l11etUScEypz3RaKtWRwnhRlXy/dC5nD3ogJdR
NSLbVMkFjaXPj6FNtfc6zdynSr7Cfpsa9Iif3dyNF1TJ0XSZWZK/ML7/Ozrg
916VvNDVf3IdfcXo8MhlezWitylGeBNtFv8kiVqlRnbdbJ6qR2c2XEzJ91Ij
WivDrd6ix4RLNsYEq5Gtm0sv/0aHirywzN+jRmRuW+1z/o3rMQvLMytRI6uc
nS2+ouvDdzh9mqZOqK9vqZ/o6qIPCc3S6kTkeICm2J8e+LJcRfeMgjqpfhs5
TQ391G1UY46WOtEKONRpi3ZUiT340UKdfI1oiT+P/q5069WXQHWSfnBZs/Pf
HmioG+cUVqmTjcxHtT7oUM9qpzM16mTZ01VlweiveutPp91TJ2My60/FoW+0
uCqublUna3ISIi6j62YO0fPfqxPDwjsz/6DP/jneaTylTp48tPAunuiBCyMS
JYErNcivlJ2zq9Gie4/czXHSIIa21Z330VW+VwIfrdIg6a1WAR3ol5v2p2n5
ahCXZzaB/9DbZ7d6nArXIK/al0X6TPbAbs5fn4dpGqT9k/Ne0akeONLzw2N+
iwbhyIReCfjXA4LdM7eLW2mSlx46ZaFoVfc/Wro2mqQ+58OtbWipbarBNos1
yTktj+YU9NzjjbWhyzWJ79ylgmL0EdfFsy6u0iSvXFT1/qBn3hTPvhKmSR6k
Pz9/ToQFrkd4n+RzNEmBlGV2jygLgmQf5ogPaBIW4/zr7GksaFoofybhhBZp
Hrtcoi3Jgm+h1nMKVbUJnU/a2TNY8PXwVZ3EXG2iV0QZnZBhwTnfS0r6kjrk
iVq5roo8C+QgqNspTId8KX8a8laRBTvdfHU3NemQmrE0u0BlFsTe/7PaUUmX
6Mge9eaosGDj3t6C4TW6RMSJeTNHnQUN/znGuFzRJcctQ29oabFgnsc8Oade
XXJqudWvbh0WeJCcXRVKemQB3X37UX0WXEr3e1JnrkcO1sw4JE9nQW5j9JZF
Lnpk1eY1A08oFtis9yN7w/XIw5cuQ16GLKA0Dk4rS9QjryUO6rYZs2CVFKff
/ZQe8dvgfTHNlAWn/dfrPy3TIxlbWu7JzGNB/9H/HB406hGb3GfU0/kscDZe
332oS4+ciNlh7mfNAnOfMr7cAD6fFhz53oYFP9TN1iRN6pFv472DmYtZkP3N
W6ZFQZ/I7pZWUl/GgimJxVOaBvqkQPNR6nvCAoVOF+ZyS33yKucpLcOWBR93
tN3etVKfXG/YFiJvz4JHl5aGTnrrkwnJ60NPHfFzEq3rHoYWTVX3dWGBrer2
v8q79Enu26KYd6tY0Hbaoo25X5+UNgWqZ3iwwD9n2Z/JLH2yJfROoJIXC75M
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
0A9jNR4LIN/T78t5N8iGykEJ+5AHTPLDn926dgj9fV3/rI/3mWTuN9v/jr9D
va7K3uuO/PLc8XcDw6i/WWrjjfeY5EjU7w7lETYs0zTX1Uf+tD3H2fsDG3a0
EMHyu0wiYbNQ4MFHNuhSHsPSyNIXnobP/ox+aFwad6YB6+Wr83LvL+gn4y+0
x+uZxEt1ltvdrxjPLINd25CbHs/s/MtiQ69G/96uOib5uL81ZSsH9XJFf88a
5IHA4eSrXDzf9gPry2qxfjwUmMM87PdXFKsVkBW2Uh8MR9FP0u7Mj61hkuBb
JwIjxthQEfDdeuoO9gvpPNrbcaz3/Nv+nsi+vl/36X3DfpipLd1azSTyolGx
R7+jfk6crV+LnNw20vJiEuPfJ6N29Tbm5/XFV0t+Yn4rdbLEkN/+llwUMoXz
94mx9sNV6BciNQPPf2E/axJNfVOJfre/9JjUb5yX0pV32yA/HNltdOgPG750
27MrKpjk963gzrq/bBD+ZxytiDzHv2hqagb7qzrjXsotJnmqlb/JRYADPstZ
mZM38byOo3suz+LAor60DB/kh9HClT9nc+DCNj/t1huYjxzzZIc5HPgr5+K7
Cvm9RLfxBSEOnJtf05ZVjv5wSUV8dC4HYtTj7sxcZ5KVh7uqdUU4sNy14tVe
5BijrNHgeRx4rFif/+Yak+RI6jh2zufA+u2P2CbI58yXRYsv5ICN7pHD5WVM
svb0s9eBiziwQ2DTgUXId+U7BWoXc0Cn9XFFSCnq/+r3Bz9FOfBl07f8zyVM
IqP7ucBZHPefzPxhgTyluMLtsgQHAq/uv3q7mEksm3sesyU58GfHsealyJfk
9VZPIbcsuJ4rgSw4x7fIUZoDx7PSNx0uwvnK/MvnVBkOxP/JdB0uxPpNXW0/
voQD7X8+XgfkZUbdsWuWcUD359a9ZQV4vo6UzcdkOdArXfRBGlk2SN76hRzG
a8Qt9Ug+k9jvmxKVUeBAqTjn7rs8JjENyf19eDkHVoTfFF2HLBAYENGhyIHf
EauWXLnKJBfvx3QvVuaA2rySImHkL/L7Nu2lccBpwU/73blMItqTf76CzoFL
6oHxHTmY36N/D44yOJD+ZCraALlmBf3YJibmz3FjQvoVJjFZnWGTqMKB8cU5
6v+ycd62G7Bkr+BAmuDm51uRcx7tldJW5UDOv21LH2WhnhWVjwWpceDf7xCm
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
hgiW6Us5CR28z8LiEh9Z9RL/B+4vOTA=
         "]], 
        LineBox[CompressedData["
1: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
l5GwBTToWBo3GWcxpNQ+TT51IQ2bsi8PDaP7heUSqxbR8OHz+fYL2QzRtuWN
HxCiwXbrCtXVF/H8JKjWOClMg8pmE8Hv6FcqEsGqojT0HPy+9WQOPn/Hl7DV
YjTMPqcZvPQSvp+Pu8ysxGmIM26V60KLLD1pvk+CBu4iee2oXOzv94Q+xErS
UOnb0qGVxxDHb+KHi6RoYB6Irn+Pvvqt4UOTNA2LdGdUDl3G+XmnduadDA0n
DOxTNa5gPtxV4J2Wxe/z2ejdhJZLsRoQlKeh+kQnr/9VrN8ym3JxBRq+GzYY
yVxjyN3GFWt1FfH+RLzay9Gvh/e9NVai4cA+zzl++QyRedM546JMQ+cM/4WF
13Hel1+x8VOhISdm3dQt9P0Y7uVgFg1PUj5xtxdgPMtLXZLZNLx+qmH7D30l
NSowg6JhbdwbcrsQzxszubV3aRqkV0hMOd9gSOilxyINqjS8k5lSmkInZI73
N6nRMBGzvvNGEfaPU01t/ep4f9LG49Y3GXJU7+WO7xo0hFx+0juMPvSQT/S7
Jn7//WLXrFs4L3Lvl80spmFqdJ2p8W3cn8Jc6FlaNIj/Z1z5A62/86qH1FLM
hwMNs84XY38x/Valpk3DtNv0rRV38H2Pe4rROjQ8e3lmeAAt/GvDAsNlNIQH
vM04cZchFgtSxQyW05A+U8SneY8hygfV/LR1aRCU7V/Yie7VDjc21qMhyL3u
UHgJ7lu/Vlka6dOwTHvhYbVSPH8KipdYGGB+aEz1v0CLCVD+poY0/JQ5LLvn
Pp63NIUTVxnR4J3u9Um6jCHJjbPema+g4bHBT5H/0OzyhKtkJQ2RXl/b/R4w
ZFfP7zirVfg+jvl7ST1kSF5pdNXm1TQUvb6w7SHawNnn4npjGqRuLP288xE+
j4uMn70JDQE3/dr5yxky/V7spwWhQfOqUVohunf6zz8joMGc8u9z/I8hEg4T
r43X0GD90uL8BNpWbV6Kzloa7vEe/3K9AvftHUs4ButoiFq6Y3JzJeZHbHWT
oSkN+nGdEWPojbbnHqia0WDp+TDpchXOh4LHtIY52n/NXLNq7N/cDWUyFjQU
/NMW/YWe459XpLAe7y/+zlBeDZ5X4jW15TfQoLDynea6xwwx78uenm9Jw5Kw
Xf+46DVz7gjyb6SB7rm4IrMWf08/MOI3+tiqnaD/hCEnBb/k9FrRYKqS8f4T
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
o2NmBMLH0f8D/RYr8w==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
1Ns=
         "]], 
        LineBox[CompressedData["
1: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
8TaYotV00rpGlzEhSLFSoU0a66dCttd6BSZUUH7q+6FXyB5fen05E6Ksc/2n
pejk5bSP2/AKJrSycqLi0bC+LFhPkQmyvI/YquigqLqnyUpMMB3q3PufJNYn
TUr9l1VMeLFstaI12q2qxE9OhQnZMuyGfgnsv66zhsdVmZApEn72BNp3d3bb
IwoT7JVm4hahr3mIpknTmHCgaSAjXRzn112Zg350JjicmbxMR++9Hb6sdDUT
jm7/21+9BOcJPnXfRepMsDPu0N6GtnxKi7bTYELIeE1/vxideIf//XBfkwnb
J5QvHUPvWNNVLLyGCfX5rhLzi+lExlBup402E4I/PRBNQV/dvlKtWIcJ7++z
f61Cs+sC3w/qMuGGnpPJY1E6EVYcEtDRY0JuVm+sDZoTZ+AVr88Ei9//7n0V
oZNM+6aUj+uYUCWpYn8ULUbV/rXGkAkBkc6vJhfRiS3r0dfo9Uz44W5Nj0K7
z8WlNm5gwn+7AmSWo/Vommdom5hgO8LTWCCM/bpgpeYRIyYwRDmiG9H2UnpB
dzcz4ePO75YfhejkXKI0R5Aw4dfTr6Z70bEeZnQrY4zXVRKf/y6kk21bjRML
TZhwkvN6+Rk050LC67+mTNjMZPGIou3vzl7RNmPClOm3vmxBOglkGEbFmzPB
YKztqBr62MlXVp8s8HmRunnPBbCeyijo61gyoe3U+Ckz9N2clMexVhiPFhTz
j/x0svDCgYUfrDE+UsbeuKMVT4+Hq9ky4dvqQ90DC7Cfvvr2+tg23I/U47uh
6LdTrFtldkzw9e84uwRNTJ4XimxnQrOf/I90Puz3vb2hdg6Yr5H686vR15Nb
gkp3MOHzuca8B7xYDzTYwgudmODi/tZiI1pR0ebwVmcmuBUyn7znwfNQDh3J
38mER0fu5zii34XNWP3chfdr1bqbMU8jX1/mrF/twoSl9u0rT6Hz5cXtzu9h
gpn+6Pa5ORoxa2he+2YvE6qPnna9jL4V7QKq+5kg8uhQizT6S7a+/GFXJjww
FqLcmqWRjly9+JIDTHD23Bm1Fp3635zqQncmSO7z21I5QyNqissSrD2Y0PPT
dmArOiRjTqHkIBPeuOoyPkzTyHUeIRN+L4ynv7ZcR3RClZuBuTcTFo7e7Ouf
opHNCZd23PJhwrqYGWVf9OuH05u5vrifxs6945M0suz1tVr6YSZcCrl07yJa
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
iivIhjWSGwocCY2Y3GrnMRNiQ9IzvkPJQCNOvK8vxQizgTM4/qtzM41Qjp1d
y13EhgObSn5Io+sa9gWZiLLh4oKGVQ5GNKIfEh97YTEb0scb197chOdvdOlV
rxgbbsjE53/eiPPtzo8faOJs0DXQ+r0CDXs3H/WWYMNprbUpPhvwvAKC9Osk
2WDUbxV3az0+7wfPewFpNtz3fOQzYEgju/Y5xRyUYYPwjtBLKmjLNx++P5dl
wy77f7P7DTA+olJ55+TY0DN5369gHY1c3aVm47KMDfXb4xf16GO+Rop5Zcuz
YWViRQEFzff8xZ15BTYs01H22qNHI8yepPDdK9jQ0NJ5/tpazM99/1FurmRD
RAz/g05dnA8H8kYmFdnA5zv0Wxx94GNvElnFBrncCBNHHaxHOVteRyizwVqo
TvCGNo3YRx5X+qbCBj3j/IZPa2hkpmLQSonChnuZvP/JoD0XbLh5lsqGsGjO
ZUstzBeDggsdNDYcX1bYGqFJI0UvD26SX82GjY7r7F9r0MjxA7/lg9TYoHny
RsmkOs5XTm/ePldng+9JeYuN6HC9l4tnNNhwSFNoX4Qa5qNqXLCzFhsWKASQ
R6uxnvjd+u/6Gjbs8Jw/MUHH95nXl2T/aePn5nVeq9FjgZUWoMuGh7cly31o
eP8SkuIRa9nQdPFOWAkV++8LvfkuPTb8N/xx/DsFv19b8EJpHRtkL3zoWIGW
/MzMizBgw5mS/t22qthv2y0UOw3ZkFWn7xShQiN9GlOHlm/A9RquaKxRxvnt
WtD34I1s2Jnx893gKuyfjmaKNZvYoC//yU4LHTO/7t+8ERvWFU3t91eikcnK
kQkXwPMZ0eJmK2L8NPHUZxE28EyNC3SvxPo83PF81pgNXhbyiSJoCd52S2dT
Nly77p65aQXO096r7qRtwf1pbLALWY7vIz8MV4+asaFPa9KlSIFGtpfmhKy3
YMPPfLYkUx7nfR8Nz9Nb2XBSZaObKlp+7fnAFks2KHfumXBYhvOKk5qTjDUb
rMh+q8SlOM/F3Nxzwgbj74DV50o5Glkr7apTacuGKLcvtFFZfP+MNcua2saG
hf/aZHTQfeITOs72uN+HLmr7ZGjk6N9/1zK2Y/y0H5NJk8Z5vPv1yikHNmyg
DsnVSNHI+6ePYYcjG6rbk8t+SdLI058Ta1Kc2NCfZKBDQ7tp8lsMO7OhxdPi
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
n1r60f8B5yNkWA==
         "]], 
        LineBox[CompressedData["
1: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
ocevW3izGsgYpfbW6m6iIceBRav0RjL2X282F7aZhjrZdvPEfCJjp8ex1l1b
aIho3hR3vRn60R2BUAkNGrqpXT8Q3UrGORmeDaGa8D7XeiPT2iGfY0aL27Vo
6A97zdmMDugXdcXuwto0pKT+eE1EFxnPiO3YfnIbDW0IWrM3uoeMH9ao0Mt0
aGjcPTzGrY+MN9lt3TyrS0O79vxu3NYPz/NnzS1rfRoyNI4z0hgk4wvzWz6n
GNDQ1ZJ/ZjxDZOzASdb4aUhDl56fElo1AvXs4+6qgyEfEvXe941Cvrz6oBi2
nYbSQ7yGcsfhfDYsiHQZ0ZD+EUXttO/Qv7vC2iVMaOiUTKqYyw+IX1bd87Ad
NNQqHVVnTYX82r91c8dOGvrSNFGnSSfjCJfZUFFTGjpvWjw1wyDje2ejJgN3
QzzvTR7rmyLjrF+OypVmNNSdF3bw9k8y9t7ruGLBnIbCMuLQ3t/Qv9/J/9u3
h4ZmBidmN86SsWXC9k/plnD+UylVY3Nk7HlUoXrOioZWvDgyVfUfnJ/SFnNr
GxpqDIpkS/wD/XbH5dxrtjQk9drzud4SGcedfCLP2EtD/Y+cHdb8I+OuGcpp
jf1wPl77pyrYCPzL/Y1TgB0N+b8RXzq8ksBNY2TfTwdoyGHCMpa8isBnXvWY
8dlDv9hufLGBg8CT9w9a+TrQ0JOxovxELgKrjiuSSw/R0Mvg/Vc0eQhswL8h
8bcjDQWuf6HauprAqy36ZaydaGjM4FVIAi+BH32lnkt1pqFoQdo6pXUEXhtT
x/37CNRDUP/PcT4C6wq9V9jjSkN+HQ8j0gXgegtColfdaKj4vGO3ihCBl6ZV
VWjuNNRyM4v/qzCBU7an86kfo6F1b444B4oSeDZc/vJJD6jH+B0DS2IEFq2P
VP3kCfkr5N+St57AvN5Kd/m84fs15vs0JAn8ZkOm9onjNHTMhjkzIEVg9Gqr
R50PDfE2pT89K03gtGcyx7hOQH78ED6zQpbA+RWfL7v50ZBITfBijhyBr4n3
nMv3p6H80i8f5ckE1o7Pu80dQEOTYU4LDQSBC0duWbkG0tDlpadRLvIQ79TB
tvtBNKS5hq+9X4HA/x2gh60Mhny8/kUyWInAnQEWv0xPw/mUNvj8VCbw2ZCW
lRdDaGiLw9vkoxsJPJa4QWcslIY4Z3qtZ1UJLLv00lAxnIa+3c+54L2JwOsj
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
R8VhMyGer+D9OhdsRCXpqCHy9Tq71wQ+z1eS6yBFR1+mvvxQr4L6c9gqW7mB
jvyVkJXcGwI/SRrYIiRDR/PP5o6trobvS3cK7pelo3BN2sIIWOj1DYlncnTE
jEj4/qmGwKElhdNzJDpK+RHn8+At9OPUYWdtgo6or0T7w94R+Hbc6O9rFDqa
qrocdKSWwK6tWvad8nTE7XqtV+s9gceV945pKNKRi5MWlqqDePqnciYo0RE9
vjR2CXxorfz8J2WIn0rQp+Z6Ahu+jOZX2khHtfy8408aCDxXvWneV5WOyoq+
rj//gcC+3XmczWoQ39S5/442wvv0GBcpbKajrhSdNuOPBP6wZbOc9xY6QsV+
8wKfCHw34/urenU6suVbzJgCmx9mKqzTpKO+p/8VvGmCeuGRVLbUoqP89TJj
F5sJvFAnsLdgK1yv4oivewuBOfsPmtO16cirzSp5Uyv0kxXHvS106ChbXHV4
dRuBjwpmy+bq0tG1gkXrYXBbmMKDb3p0pBCilpjfDtf7FWJrbEBHr6/yNkR+
hn2sVqI53hDiPVw9sauDwO/PDQ3VIzqyyLI9vKYT+tuekxKk7XSkVzuVMwh+
dNKWfNSIjkbvvvqb0wXv9+Cv7TtjOqrf8YLrdDfsDxp/bFbvgPN58A3p9xA4
7KHkhNlOOgqJ8h5eBM9qcOU+2AXfD9LkaOolsKmw8RaqKeTH/Ku4xD4CH+Aw
GzMzo6M9rSYezl8IrDEcpHbfHPKN5PFApR/OT3hq1zcLOrqlbx7wA7zPfmu8
sSUdbZTdGlA2QOCbM59uXLSiozH9GdFTg5AfERcMP1jTkUF6sNmmr7APCq/l
JWzp6NutxPh5sOyq0XyPvXTU+MIsvWSIwNGrYnzq9tHRnPmVpDPDUN9M03pp
OzriP0ZaazxC4HJ1p2nnA3TEULkXvwAOjTM0enUQvr9G/l31KOxv6n6uKxzo
6CjtrVDoGIGPMbwLXA7R0RHGlxV4nMDxaZcuvHSEev88Fr/yG9RX6oLm38N0
VBOYbFsO1rqvxePoTEd1Dl+Twr4TuHpNTVHOETpyVb6ruHkC6tfJ//uICx1J
9tHjhsFqNZOmhm50VMnlr579g7UPPw+NdofrHxlx2TtJ4Jpd5m3DR+lI/7ls
lRAV9vW/q6p1PSA/flK7WsDRvHxnIzzpqDnpVuZZGuxDKmOuvV505E29elyP
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
seEFAwlz3g+QcoL99LnRMccKBiql/e3bDz7XQsSWVTJQyb+s1hRw5PYDgf+9
ZKDfS9iqCaxXuy/+wGsGGmhfZ7HGGX6PZeb4ZFYx0L+k9i8mYFV34YnBNwwk
v074bwR4t67NJd0aBjL0MUqoAOt5Dv45+xbu90Kteho8+WBr6uA7Bqq4wmWj
doSCj7U+e6f9noE6tfT8vMAvbCLfhtYx0HDBjp1Z4PpR0YmueuhvM3UeX8BF
TX/7pT4wUFP0sLmgCwU756z2cmxkIAPX/tZd4OYLw5LlHxloRaNnYhRY6D13
5sInBtr69KdsOVhE6M9O+2YGklhrPzAFHjcXuPC0hYGkz6VoKblS8OX+09d/
tsJ8aIg8dRhMP1PwybId5rujWlMamHJapT3lM7zfnQ2ijWCJqJC/vzqg3n5t
8VzpRsEDp37U7OmC/N2x2kkHfOpt4b6kbgYKZK844ANulNFex+iB+a6UZHoP
PNMhdEOzj4HEFV7v7AIzgoTLg74wUHzkoz9c7hR8jzK01NIPjth/3QCsprYo
JDwI++VdXWs/cPCuUevArww0ohA9fB+cYM4gPg3BvlSbSfSCQ/J2N6wdgfo7
oHaT5yj8fhD2T/YeZaBcpfDPBuDMnm8qT8YY6M36i6YnwJMXohyZ4wxE/cUd
fQf8a9f3kt3fIT68yv6t4HbnO30JE7CP5t8o/Af2jZdWpP5gIO6B65fVj0G9
cE+ZqFOh3upJb13AG4LG5wNoDGQ0nVR7Fbx+KvdzMx3qWTzRsQY8+a7sjBAT
6tnr4iEmOCQ/2TJwCub1mvUjsh7Qr04nl32aZqAusYpNNmDOuyP0db8YyPaF
yOwZ8O+uJXOf3zC/N7aqF4NfHPMKfTbDQFx7D073gc2G5w1+zsL17wpd5PSk
4Js+e5X2zMM+ciA8TgtcZfV3NOk/uL5to6gL+K5x0HvmAgMpvVz77yrYkrTO
0HSRgcZ76l6+Bn8+OB97cYmBOtY1SU2ARbIe/R7/y0ChTiO1Il4UvBGVqKuw
MdFtT0UJDBb40M/lvYKJjk083O8FLnFrY69dyUQVlV/q08AqdqItnKuYqPQH
23wV2Nlevsadg4ncFx1sqGCv0rjoh5xMZJ0ddVLYm4K3L6z+QuViIhrn0ll9
cJe1g8MuHib6sNMl14P1+b//8i+vZqIzd9G9q2DPKndp6hom4lbNKaoEH/b8
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
v0dmrOen5/RaFHfYUSQ7fsDtEny+mu8hmz3yRdm6nmPwUZ/fhdfh9rsMMzu4
aYmPv6ED+gXPf8v14FCmRQMFc8ecsZaCpVPfRSY4ol5dXoTMeaFfn6hp37QX
r3955QTreXCo1abJIbid3amjEm7Z4RFy0Yki77JknmbDwV3jSRudKfLQrW84
FF6StErkC5zm9Ep+H7zgbe3K//ZRJNNsOIXA7jwUz0YXigTY1h6XhgsPPLPo
guuXn/WaO4T1YzW7MmY/Reb1tCZ3wd9duz3XuVLk7JFFbRVwl7d10CtYJuhf
dCaszq4sdtKNItF7xXxC4KNVRXIy7liv/pf8WM/bl3JfqmiBFf8mpGrDUgYC
jOAD2C/czmmKwvz5quMSHhRZbR48M+HJYDqlPbJthOP4vb68hdMe/JA9fBD9
p8lsuATeWJ/7YJEnnDITksCyy6svj+HgKi9pH3jFykxf+0NYrzzSE+aw39HW
pIVeFJlNnfi4Cr5JFcoWwgbp/yZ4YKazVJDFYYrYNxdc7juIfrKbdpmGyxt3
bKyBZUIO38/0pkjTNh+FbNhlpWW6hQ9F7tr84g6GFzXWmE3B55IPeNrCVy99
dsvwpcgGvzYJdThpyElomx9FlK5tqVwM+/tEKQ7D170jSwc9GMyHfUbcF/3x
+674qTXAdn1ux3UDKDL/pVX6dbhfcJ11F1wwJud0Gn733LEmJhD7b48/hx28
0kd6WusI1otIwzp12N0o8ko7bCPj8VQA5rhm0xp5FOtry3algQPYr1a/9FY6
hnxBTGeew356uZmf4EXi4tmZcKXR0rTIIIqUbmxuOQZPHFszs/I48qXdZ9+d
cIxa7tgHeGR/RvtqmE/i5fbgE9iPBU+UccO/J8OCJYIpohJZrtLjjv7jeEWr
AeZPfupaBnsNOzseCkG+lfshlgxP80SLSJxEXmsMPucFjy41Tq2DI7I+nTWC
327PDfc4RRHL3ZGLZOAlIn4coqHoJx6XDCbcGEx9zp6fj+FF6jd5WH/f86r/
W/qe0+gPXF0e+XCVjflX7jCKLDMo8g6D04YdL+bCcwZ7F9nDb/nbWnadocho
ho+JKhyg2PmJ4yxFIpeJS86HZz1iLG7AFzzvxH91ZTB/qF2z2RGOeUHqYfpD
+ImS87NxOOGnybY4eDjv7Isb55Dn5qTPu8GR0tpJ2yOwXiLNXHRh3qqUhlE4
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
hVPN3hYbwP8DZpcFgg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
XnL9Z+/9sT8o45XFkeuY1322ETh2awr9D/EcfJc=
         "]], 
        LineBox[CompressedData["
1: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
ezcwLNTU2EBFy0dz9jPsZ7TmoPZGCmToLy8zPDB6yuYw+iP3JNNRtPb1Sk8j
9IjuD2aGud7cyLBBR00WsjGcspVtkzta1t5oI8MNw5zDcehnPjNCDAv6898a
Rd+psD3A8HXeK8+o6IMb5lUZ/pn7tWQcvaEmQZ3h/MGEyXmG/T9rrn6+rsDx
jZvw/VO8egy7bxJR2I9+skvanOGSDELnLTTnR2dXhptafnZGoXcy5box3P83
9es9NGvr+FmG/xkIdT9BSy1f8mBY8zd37yt0T6rtJYbL9y1872G8vpIfwHDb
yY9DA+ih9JarDA/d8v4xjD7TRvuP4TV9v4fp6PYCkev/X6+RUSZuCqi0utxg
uLquiSaN1uYNusNw58Rtujz6E79f5OrzCxweU0azPT0fxTCrR8Xvg+hlTfNo
hg9xf5g0Q9+rX7jHcL1t8l8/tPNU1yOGe4Lt566hy8wzHzNMzhGYD0HT9l1J
ZJjjX9xCJPrlPY6nDBum3vqXgp6O5k9huJlyiaUBHZr6NoNhMfjs2YIujT73
nGHvePHBL+gXcSKZq/sJXwoG0an917IYdolXuTCN/ntZIJfhQkpk3zy6ZWPh
qrlgVH8Ffazc+gXDbyn3d3LyUCD6dHgew0zwt0cU7fW6+iXDlvGmhyTRkwtG
rxh+Tsl8K4uWPNaxauN427t70fl2na8Zfkwp1DmCNjjx/i3DxPhzIjboE6fi
3zFM0tw+74g2LnF9z7BK/H/5PuhaH9oHhns15W8Ho826Ej8yHEwZcI5EF0cS
CxiWjr+r+QDN/vjbqls0QeAZ+sCyS+Hq+lDG/7xAGxWSV709PqXlI/pQo0MR
w5Wa5tmVaCmVhlW7UdaENqN//yEUM8wcX/17Dq1iq1DCcKLmTTsJXgoc3RWw
asXpPYNG6JPPtq26OnvI6Qr66lP+1fffXbs/4zYaq+Pq9W1PRpGeoslCF1bv
51NkAXsW2leAtnr/4kUjMm/QZr9PrHqMX82jFj0iJrn6/BbaZ6La0CmB/qvr
U3AxJr8XnfOuanX9Qj7/mvjNcLbq/9f3Lw/vPPqZ25nV9TeS1NjDwkcB+kr4
G4a3BMVd2Yr2/Zi7un/1W2TChdB3IxVWfTWvNGEHuqg7f3X/h3opH3ehLdoy
8xnO2UtcAHS44dXV+AEaPdANze+ctRqPKvnCS+fRTI+mV+NV9pKJvxc6/ovG
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
eH7RNjlDV5Emrl2JdSaNYL/i1DJsQ4tc6nwiM4r9v/Ul6T165s+PpfBf+Lpr
iPAj9LMWkGsmUUCc5Rd3IFo4vmKKi4L3J+rp7Iy2OrdxyJVKAYVBHd1D6FMP
c5/k0jC/U5zpsuhd3XxBnGM4j3JeF9yArmJKWXD6TYF/5TfTx/fg/BPyn276
OAVCdLpWvqCP80u8Z5rE+bqxtus9w8vbZ/SmKJDcwhP6CC3zZX9T6B8KLHh5
PbiGflcg8nlwmgKd++yFTqL5Z60f7JjF6zMdC9ZmXF/X9s71vzhfE2NMd6Il
qDkmtXP4fvE5Zjb0aMCObLYFCjSEaIhRlKWJTkLOsk6LFFivFv2kAf1+80zA
8yWch/P7171A14haTLEuYz2p/9ZwB53G/4Xp5Ar2l33eU+7oo6fSB1OYqCDV
xsdvgq4rJY78W0MF8tvZYHn0Bm/5jzosVPjkuDi2Eb2DX1P8xloqlMZ2fZ5Q
wv5fLfBugJUKrsF1lFb0o2a9zTvWUUEyKp37NXrp18Gn19mp4HFa9VI0Wp52
tKSbgwouF53hAlrlcFXOtvVUCI+9IWqKnns7X+bNRYVfWmMK8uhYv6D0wg1U
kOg9a70BTTLueCmwiQoKN6qeURWlies36lt4cVOh417IqXo0q9TG6vc8VHjf
e0ErC11skmzPx4f3W/lRIwx9uDWo2o6fCnkbLR1Po1PVwqsebabCow1Jyzro
gg82lOktVOAlrH0phs6I8B08sI0K22YfRK/sliaaXHReeCBAhR83e/z70DWa
XnkTglT403G9/yOa1+XLbmUhKhxx8fRPQAslLffcFabC5uyIzZfRi/IB5p0i
VPgwzjdpis7KEjjFJ0aFPcdNTRUY71cJfXB+B96vm+czDrTFVnj6SpwKAnwD
miQF/Pz1NQ0bJaigM1haV4EWO5pYYy1JheexgslJ6PKo+7YJUlQo2D2/dBUt
/PUY7xQBf15j9qAN2szbM3GfDBXinhz7qowGCfMjCbJUqHt74jAXeqnU+t74
LipkZ987+Ese8/V1TpaSPBVYNU7EV6K/v/s8eleBCjHO8sWJaFZu9anO3VQY
caw08EXPWbfe51eiQuMz0hlLdNYLBceLylR4EFhwSA6tcHxw/s0eKkwnaDxa
h74kaFfEs5cKfxtomd/lpInB1X95zu3DePHuJhagXWt/HcjdTwVv1izrODTn
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
jV7pxo/9/j+/R89U5jqMo/8Ad49iHA==
         "]], 
        LineBox[CompressedData["
1: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
y////czzly6hn1mOPGOi/wO42ZJo
         "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0.300000000160032, 0.}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{0.300000000160032, 1.099999999839968}, {
        0.4568884820647407, 12.313592446197097`}}, {{0.300000000160032, 
        1.099999999839968}, {0.4568884820647407, 12.206072645530174`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.300000000160032, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"|Re[\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\).G.\\!\\(\\*SubscriptBox[\\(P\\), \\(j\\)]\\)]|\"", 
         TraditionalForm], None}, {
        FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Linblad Terms, Out-of-Plane Polarization\"", FontSize -> 12, 
        StripOnInput -> False], TraditionalForm], PlotRange -> 
     NCache[{{0.300000000160032, 1.099999999839968}, {0, 
         Log[200000]}}, {{0.300000000160032, 1.099999999839968}, {
        0, 12.206072645530174`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"N.N.\"", "\"N.N.+N.N.N.\"", "\"N.N.-N.N.N.\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809125901001849*^9, 3.8091259162631435`*^9}, 
   3.8091259535374255`*^9, 3.80912699363379*^9, 3.8091272290126657`*^9, 
   3.8091273464210105`*^9, {3.8091273824496427`*^9, 3.8091273971366963`*^9}, 
   3.8091274673445*^9, 3.809127539114722*^9, 3.8091276432821884`*^9, 
   3.8091277170661225`*^9, {3.8091277501006975`*^9, 3.8091278138668156`*^9}, {
   3.80912797918826*^9, 3.809128003663431*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<plot_nn_nnn_sqgrid_coupling.png\>\"", ",", "plt"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8091276397565823`*^9, 3.809127686600933*^9}}],

Cell[BoxData["\<\"plot_nn_nnn_sqgrid_coupling.png\"\>"], "Output",
 CellChangeTimes->{3.809127672359028*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<Re[\!\(\*SubscriptBox[\(P\), \(i\)]\).G.\!\(\*SubscriptBox[\(P\), \
\(j\)]\)]\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091271572814693`*^9, 3.8091271589988317`*^9}, 
   3.809127194993588*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<Re[\!\(\*SubscriptBox[\(P\), \(i\)]\).G.\!\(\*SubscriptBox[\(P\), \
\(j\)]\)]\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.808919203650082*^9, 3.8089192366372766`*^9}, {
  3.8089192957696066`*^9, 3.80891933003343*^9}, {3.808919478028981*^9, 
  3.8089195807046213`*^9}, {3.808919627325328*^9, 3.8089196445152817`*^9}, {
  3.8089197441859903`*^9, 3.8089197679996195`*^9}, {3.8089199813401203`*^9, 
  3.808920315407258*^9}, {3.8089203790375905`*^9, 3.808920462318551*^9}, {
  3.8089205004960394`*^9, 3.8089205027151155`*^9}, {3.8089206609352984`*^9, 
  3.8089206764697356`*^9}, {3.809108750050517*^9, 3.8091087910983624`*^9}, {
  3.809127027911147*^9, 3.809127063347514*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
pX002hT+3HBfpxkWC3k3syyPSa3z+6jVd9TnhUNlEvCDVPEkLsx8tXVm0D3c
N+sscZvkkI9a2VLDuegHZ4M3/oZfqS9yMoA/fIiMCP2B+Vs2ZkdBDu5HXl5R
4ieH8HdZOAjB33+OL82Ej6ZF6R/OZlLb9kYX5Sn0m/OPn72+i/g5s2ZWNRz8
xtlbDfbYmDmp94tDNliubEi5w6Tvo3dvboZnlR39zAufKY5qs5hGfzjrvtrm
NpMKDL6sHoR3nrRgNGYhf9k3p4//5pDzK5QVGLDVmbxovj8cYna0dTo4E/V/
Rb1XJDxaFxUzfItJb95wy5b+yyHllmJMfVhXbsnGDDj1ctepnJtM+nbzbOkV
/7CPOlUXicPXVAJMSmHzwzHsoxmof4x/r7V5uMR3UfLbrhuYVz4J57XClgHJ
zWrwyyql/v0zuERrpVDkpes4P6XTNv2wfITGin/XUN+O2Kh7zOSSQJ7t2ebw
suId1pPwM/pVoCYd3/eyqTucl0tW17voL4LHowJvS/Jxyf3qOqtjV5FfhlrP
r8KNMSssu9KYNLc/YsvqWVxyYXpYcQ0c7sMWKoWXB8wdungFz8s9vkprNpcE
X80Km07F+ZTFpz2H5xg6jpvBuo1VdmZzuCQj5ZlR2WXMm/e8TwzBs76LO4jA
/6k5cL35uaS++9ch1xQm3VZukzkND4izDrYk4/cWjTyInsslZgYX5ynAln7B
sgsFuCR0eW5NxCXMv/dudmbCYituLn6bhPkt9B97/Twu+STz1kIDzrZ00q+C
7yrF3LuciH4pYDllKsglNjHbr3y+yKRfK61mdsISfN+u7YLnCF+ythTiEjux
9qTiBCbVWWclNAYfO8mSEYTtDq4WPS7MJQa6sx+5x+P3reIcZs/nkg9vmz89
vID5b1pBOAkW1ambKwXLXH0mKCPCJbV7NXeejGPSI+J/LXLhbPtLIq2xTHon
bvMMdVEuWWs+m3c1/O7u/V9lcKrS07H4GCbVvly81XAB7n84Tf/DecTr+Sec
VrhJck+vAfxpr+1rWzEuqeZz70iNxnkvE5QZgdvfCIj9imLSi+fHSjwX4vc2
tRtZwAIvLG7MEOcSNRO+vnuRmH8XdLLDYfHX9yqE4DGlt97SElxyWob94WAE
3pez1DIbFq9aJFwYzqRd19yS1yzikmlXiegFsJOaHvMRHNS/ztg+DPFdr8Rv
JMkluwzeuD48x6R7fm8nrfC7mD/R8vDYrO9PD0lxybLHwlyvs8hPsdyb7+Ee
8WeZL88w6aLJL23+i/H3fY9elIcrfI/snSvNJaxde4OPh2L++/NjVSzsY2jP
bgth0l/7hPfJyXCJrU6l/XI4sWRNRxb8d4u4TVAw9pfhd7c2LeESJdMzx56f
xv5V1djYBNs6yIcthUsTqnV3LeUSuv3IspNBTBpKqDAb1jb99aTxFJNqfHqh
4ibLJRUbGJPL4Q9aiRmf4Wrh/erBgUxabfPBOViOS47cVPFsDcD+FWFwhl+e
S5hPmbpKsM059c+X4RLLQ3P8TmKeXnYgX3EZ4olNOupPoB7WRT3Nh682ym1f
Dk+vN1y1ZTmXnBVef83Tn0lf5YkPN8K9DLPrjX5MmlUvOW3K4JLRcmYZE75e
dNvyLRynvP+2ly/e/5beQkcm8s13m8lzH/QLNw+Zn7Bqh0CNJBzT2uoXxsL3
c/h1nbyZ9ORGoiSkgPP/2Rn+8DjmLd9NKlfhXge1GCE4vGxLGHMFlwgYBlk4
eGH/bO1cXQrfdErtu3cM/fncTRWDlTg/flGf6aOYP+ipkBdwpnft4B54soXD
OqTIJfm25ZNpnog/u/3yH+AUr5Xcbx5MKp3I6+muhHyxcp40hndd0Zz/F14j
dff6pSOo/1mn+c4qc8lwx4m14+5MWhS223DRKi6JXGxrth7+PtuSkwlnBHon
BB/G/BV5rF1ZhUt0Tyc+6XJD/A6Ki1fD9loC/vJwpvbTbD1VLglzG2T6uKIe
bLyX1ATPmnHxz3MXzGcCy9sOrMb350lsXwT79N+0ewdnaRtfPuyM/SKsUM9r
DZesXKZuVujEpKvUWwKn4d9HtyyeDZ8IXiYQrMYl6nln51s6MunojZnvRddy
yfeRcusMB9S3hk9SKTDrXXLDpD3mrzqXNKV1XPI1SDJYE95qKe1dAafr/LEL
tWPSu1PdN3TUUS/ifQ532mI+OMyUfwWrjO4skYHvDAZ+P7Ae9+tpqnzEBvPE
T6GlA3Dy2PPuukOYDwYVL3lqcIlQdG45P6z60szxB2y1w739gDXi6+K8cxEb
UE9d+SWuHsR88GNqSnIjl/zL04rkWGH/tfr+6Cp8csh/qwacmxLYr7qJS+R2
CkuetMT7di/Y8QCeveS/Dc0WTDpjfJ2IoSbi8ZGmoyBccT2G2QMrSKxu3nkA
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
kCvFSLRUxXwJp+M5ArH/lBZp9aGlyi49sL5IwstRzxUOajR1vknhR6kfCQGz
L5yn0Rcl99IjPiTI8axm9V5DU94SkQr63iR8/iY5ulSdpipep7YdP09CVLeo
cjxaveH5aJknCdr2Ro8l12K/UqzQ4fEggb2GK+0uWnJXYIKWG8Zb/k3PWg3c
b1mHYv+z2C8tVzvWo3O3ekRlnCHh5OrqzXs1aaphLM7r1SkSVLlsvXrRoQab
TomfJGFZWcjCCS2asuSMqNM5TsKAU3X3NHpnvoXZBWfc/6rV3Be0aSpv9Zzm
02PY7/pXXl6yDv+/hqrkgCPGa6nGwavo7erlgUwHEs4vbQom1tNUzIeJxA2H
SXC/e33xPlq+lf+L9SESbMxc29br0NTWEQ7OxIMkODR0Tzah99LpJwtsSbA0
MHW22EBTxe68nQM2mM+xZupf0KUFr9QmrbBegkJN3XRpSsCLfs1hSUKgZ0vN
b7Q0m0eLzl4SMqnUwAg9mipw6TLZuhv7N9/Fm8s20tTX4jXmZyywHs4ncCeh
p6Q+Tqabk0BX6TYo62M9cevfyzclYWFx7F0xeiS33aBzB4n3t1X6WzbRlKj9
eEKnMYnzdOrPDnRE+stDH7eRcDWG4LChaIqUUbfjNCShi6nhMIpuGdfKY99C
Amel+fJzgPsbcc2KMCBh7bcM5ixao8mi05jC82E22OeyAebLkxWqhvokPOY8
pyKwmaZ+ee7aekQP63NkXCUN7Tkm2b13A8ar3T1o5RasJ/tGa+f1mI+WWqqF
aHhi+yxYG8+fkoCV1FaMZ0nvGndNEo4K915oRD8f7x0LWYv5bvhE2saQpoYC
eLafXEPCbsk+4RG0da3Ggf2qGK9JHrsz22hqklWIOK6C9ZTyZJ7FiKZecNxZ
Yq6M+28W8i0M7dLB6NqjRAJ3SqCWgDHmyyx79WFFPM+e8rbcRjuqHd22hSRh
6WhaleJ27M+vX0gaMUnIHqqbrUAv86haISeP9XhJ7orRDozX3/zlf2VIqFUI
PfcKXbEyp2ZRCr//pne+nQlNBepeFn+znISZZb66NPp93hWrF+JYX6vLZE+Y
0pQY95OhZlGMr5TPrj9oNg3HjGQRrMel5u8DzfD7JvXvXxUi4UpHQdkyc5oy
VKz2thIgQSNFik5GX80oaTPgw/mGq/Y4cyfm30uJGC1eEtINJ6kSdGazsM8c
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
       "]], LineBox[CompressedData["
1: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
KyXl3/ucVl4ogP8PgDShwA==
       "]]}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000666889, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"Re[\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\).G.\\!\\(\\*SubscriptBox[\\(P\\), \\(j\\)]\\)]\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, {{{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Coupling, Out-of-Plane Polarization\"", FontSize -> 
     12, StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{0.6000000000666889, 0.7999999999333112}, {0, 
      Log[100000]}}, {{0.6000000000666889, 0.7999999999333112}, {
     0, 11.512925464970229`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{
  3.808919237352329*^9, {3.8089193109358196`*^9, 3.808919330548684*^9}, {
   3.8089194917158737`*^9, 3.808919581306847*^9}, {3.8089196286138535`*^9, 
   3.808919645304185*^9}, 3.808919768875477*^9, {3.8089199918659987`*^9, 
   3.8089200376462717`*^9}, {3.8089200692750797`*^9, 3.8089200932250504`*^9}, 
   3.8089201691841216`*^9, 3.8089202008216887`*^9, 3.8089202338773336`*^9, {
   3.8089202757319865`*^9, 3.8089203167548923`*^9}, {3.8089204448168306`*^9, 
   3.808920463748728*^9}, 3.808920504677824*^9, {3.8089206625335703`*^9, 
   3.8089206779272723`*^9}, {3.8091087655526385`*^9, 3.8091087927988853`*^9}, 
   3.8091112860477877`*^9, 3.809127066867016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["k", "2"], 
             SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "r"}], "]"}], 
         RowBox[{"k", " ", "r"}]]}], ")"}]}], "/.", 
     RowBox[{"r", "\[Rule]", " ", 
      RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(i, i + 1\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091110649692273`*^9, 3.809111275475924*^9}, {
   3.809111349324535*^9, 3.809111350169325*^9}, 3.8091117238314176`*^9, {
   3.8091117552494106`*^9, 3.8091117757927375`*^9}, 3.809111812474568*^9, {
   3.809111843142795*^9, 3.8091118603924522`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
DPNtrSAZhtsCdR8sgQeTv2h4HuSSyzzPnjosxbxh6ODLY4N6I/XV5pIikxZN
ceeGwtwho5AOFhzy7beULep7rYD8DPjKHBGd6/CxIoXtukwmDV5/8CXLjkvm
O1wWC2Kgv60nZfdhpwu9pGAJ6ouO8ncdey4pVtsvOroY++T8zKAX8JUtzA3S
cEGMua2NA+KRV/SboQKT5s+el/wetnK8euCcPOqnpaW8vyOeJ7RSrEgO+VJY
9IfHCee5q+rM6CIm/Xhjo9o5ODVHME4ZlvI4UCjpzCWnOHYdexeiHm8IDU+F
7QIG38fLMqlb/4a7ai7I37LbCtUy2CfklNRqYPk3zz8PL8C+bc+Yru+K8/Z+
naoICwfmMDvgTzyBB3dIM6l2KkmzcuMSSU7YrEgpJo2LPejyGb6zWazs7nwm
5SwuCz19CP26MIK3XxL9smzRb353LjHw9NOfDwcy5j5Igitmvz5OJJi0IV60
V/4wl3yp21/gLY74Sd9snAXrnBSPyxdjUv+zs2ev8eASY8tz5l3zmPTZoV75
athwy2fFObDBsvWh2zwx7+jefLpqLpNWnmnRfQtvODQqeUAU9YBzZIfjEfRr
cikkYQ6TpkldL/oBd0lJ36kQwXy0vc818CiX8Gq+4v0szKTeS7f78Hlxydol
jaJLYb5X29suwuwMjwYzIcwzZ63PyBzjEunFoZUhs1GvZ/86lwcX58QaZwsi
Pi5ef6PpjfjbNVu+exaTLqo6HVUBc94WForAj8tHwk18uOTRutomDQHMj5UO
fS9h76mm9Q4zMb/EuwU5+mL/slRafI4f3yNwy38CPpBUXnN7BpPuCf5Wf9KP
SzyGXZ/08eH5L5ocRfy5JDd/sfo/XtSPJfkWibBMpoqQGuwo0Zwpcxz9UaC5
wHY6k67o9dLJhW97+2Semcak3KxlqitP4P6sbGTv8WDeNDh0+DEslvix7eU/
Br14dnD6rpOYNz3eGU38ZdCdDe6jPbDf+fR9ivCat0FLDwVg3hfWiTP4w6C8
v9PLvsELwwXcjv1m0KclU1f9TnHJgIewVNYUg1YYvGsXCER/MTvV8/gXg8b1
vDwYA8tWeG4dn2TQaL2d2gqnuWR9/r8GUdir4I3HLXiHUeZfrZ8MnFfGhGoQ
5utXL0TcfjCoZer4sxqYzqwRCZtgUJPgHVMGwdgfqjz7ir4zqM0Gbf9ueM+c
0ohn4/i9BGtjlxDky4DQ7OFvDHr4a7TXJ5hPyt99PhzNMB45fYZLnPObklZ8
ZdBL+8UrBM5ySdjo3/z9Xxg0VU2i/zz8J6wjL/QzgzZ0p29fdA77jPJ66/RP
DNobqi1zA35+K2XO0zEGlZjtoLkmFPHr8dOGPcqgxssfZTyBLULM4v+OMKjr
TnVnkzDc7wbHzqXwHbNlAX3w6AaDbDrMoD2mah/sw1FP1ozEOw0xqMriuowf
cEmQ868THxn0eEJUUWgE3t9lq8HFDwxaKGQvLRKJ+mXCeljxnkGF9zW0pMEt
EYyM1kEG3XFrXa9iFOp3jlH1OBf3mzSwIQ+uOmH0UhaespQa0z7PJUK/ZTQ1
OHhfpsX3R7DYwZmDu9kMWlunZLonGvu8lP0L5wEG1fi3YnIQNj0Uc+fUOwY9
TwymDsUgn277fsp4i+fvem/6F96ckbCz5A2D+hxOmDgbi3kglsvs6sd5sU58
E7yA/nNo9O+fPgZ1Kh6lKfCcm0YcUfi1vjtHIY5LmoU3mazsZdBjuf5dRbC2
QG3extcMOiEZv3hDPM5TIeSKTQ+Destzah/Ac8h40pluBpX+9yB/x0UuCRg6
63uxi0FvvMsd74ZzXFf9LOpk0D3JjIhDCag/Rk8213Yw6IzPL71+w+u946+0
vmLQK0axRcGJXNK9WvjW53YG3Xu8W0/8EpfUMyQO/XnJoH/y1JSuwGvVSr5I
w2mnq+wVkrBv1LnGrW9jUMelXZ8K4TTpkhebXzCoZPu/1rXJ6EdGXz7YtzLo
sHnx9GZ4pE0w8nALg1Yduxa2/zLmv6tR5ORzBvVLSrZ/C39PFh9IfobnX5C7
cCSFS95eCJvIeMqgCtF3xSbhSc2VfNXNDDrnYNtg5BXMO8+vejxqYtBfrctE
ZFO5xPVK9PjzRgZ9rh8dmQ5vE9YL/9jAoPUxgftWXcX+ULXS9nM9g97qCwio
hHW6d+2eCYc2FX3XTeOS1r7244ufMGhklE91G6zV59a07DGD+u4w6Nt3DefL
CjfWfcSg4aPpJiOwiJ0Ie9ND5I/iGtGT17nk8YHW6yZ1yC+HrmXT07Ff7Ftz
y/4Bg972478YD+/ndOY61zJofoyuuUwGl8QZveQLqEE86xc7X4PTDXxSEqoZ
tKu16Jl6Jua9WaHil6sY9IN1bdh9OCm88+edSgZd+GjfxS03MI9FW9zOr2DQ
rfVK412wzXLFC8XlyLfnArcPZGGfOvv+V2MZnn/bq+AT/C35t2RzKYO+jBgW
8s3GPLZYoK73Ps6Xfi6bdRPz6OCdWT0lDHrookpFMrz3o2r063sMzCPe8+Rv
If4v9ZeNFjPopLRJeSFcK3zTcbiIQbWM1UrX3eaSohDuk8m7DOovYyRYA4d9
DjkpBPfVfsndmsMl7vPkkwQLGXSZa9aNDtimRi1QuoBBL394P+acyyWW4mP3
xPIZVIDfJuonvJ2zbO28Owxqrfg+8FQelyz2L76qkId8Wfjr4Zw76H8meWtl
cxmUSi04cAk+8DfioWIOg6YXHjGRzeeSEPu5RWtu43nyuyNz4c9Gy8s1bjFo
ctxm+ZUFXNL+83mTzk0GVe15POMxrO8i06uZzaC5zO26poVckv+okVcni0EV
RcVftMHa7jZJRjcQTy12hXZ30Y/S5eZuzGTQbfG174fgc62HyowyGPSv8u3D
AUXoT3NcVHXSEW92zVuEizHPXeybsfo6g2qnTR6Ph8sNJ1jkGvI7v/g34x72
3ZvTf2ikMWjSo5PtufDihPcL115l0NV+J3k0StCP/XIf6KYi3nlmBdTBD9TE
f2heYdCs8+lbt9zH+7aopWqlIF4/NRx9DZ8fflapfJlB9T+zhlxLYeEoM/lk
Bv09fuH+ZzhmX6MbKwnx9jz8VVAZl7hxv7MlL6H+50ZvmVWOeG5d8V0qEflh
LS9yBfZkZxjOSEA/KfzIUqngEsHj1yUn4hlUZ2Ztwl1YX3B+8s84Bl2psWTX
pkrkJ9tNh3uBQefaxLs+hYmEVBY7lkFHVLXat1dhH3YQzhyMgV94RA/Ahek/
b7yMZtBXfoVXXaqRz3ddz7adZ1D2eOC/KXic13ZrRRSDjs05VxxZg/n+Oc28
GcmgA6rJNXNruTjK9q/ZEajvi9fJZMCJc3JmXwjH9y4YfKr0AM839VeJCsP5
FTa15cN7HYrGI0MZdNGiDctoHb7XzdrJ+xyDKkWXv3oC53+f+ON5lkEtXj5u
2/uQS0qFWxm7z6D+yvYz38G+s5RPmYYwaBSf6jPHR/iebLWwLcHolw8EH/+A
7z1on6YWxKCjwePzAh9zyYI7l5pYpzFPSLsVzn3CJbpO8h9mBjLoKTPpzOuw
ovjG26MB6I+h7SOK9ZiXjJS7uScxbyTKniuDjT43rK8/waC6N4946zbgvHTU
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
      "]], LineBox[CompressedData["
1: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
Jd4Gm0RNFrWBJz1/LYk4klGrco6NSTHk27n6hhzwwYgUu15wgevNDkknMup5
yP/M+QkVP8Obef8p2LLroQ0V3GjCM7P3JBmtv31lEfIUzsvE+WcdOK5zLo+u
BPI/8UEIfgrmgzNH9GPBR3576zaD30yoHhJ6BvN47Of2I87Qj22UY3LBayuN
XV1g0sOXBOVS6N/Ni1F2p2EeSrrE1Qq+TXkTMgWOjtCzMSqD87nxnNbNBfqX
Yfb8CHic7oH8EpiOm2Hk9HOox9t8S4GuZFQekidMBXu/4NxaAl+veffkYjns
S9biBSFuZKS3QZf8DxwWMze3AZbm6uhMqoB4OJLeHu0O8dTRYk14AfOsOh2F
3QPm1fB3qoVgwyOpFTfBTbucvVUrob/v/s3M70lGd/PpfzWBkftHjrvgOzuV
uyyrYP/uc06V9IL+wpWx8RVc94rXowjsK8px1auaii+ey1mROkNGwVsclpvg
7yn9a6Vg1y+ioZE1VNyPS+blPm8ysnA5vcFcS8UvJ2j0PwW71O1/mw5OoOid
2O9DRk4CvAuSL2E+euD1uBx81TDcpQLcFhjrdMiXjO4LYvI6dZBvDoXur8C5
PwZM3oJ3KDLpaPpBf0vlbrCrp+IOogkh7eBxbcfIr+ClqZh4HX8ymr/9Ocuj
Ac57c2y9EUwsW2D+Az47MlSrGwD9dXBn59VG2MemmB1fgSO7K0Y5m+A849mM
DQMh3jxTtHLBvvSNSe/BPxgjtsnNsB/8Sn5tcBb65cUtlmpwzkTmoS5w4EKk
j+Yr6H+eE/lGQVCP1dIkesEBere0e8BS2JSUcwsVd/GS1LIKhvmCWyOKAr4w
+P5QN7h7kKh0qRW+78pxN6tzZCSRxadC2wbzVzl9Yg/Yhx7djgE70ZSSjM+T
0YTmbxWBdojv8cWxLrDa1boD2WDe5yO5hhfIqPYOW7TCayp+NbUuogusop8q
3Qw+krreefQinO+2DFG/A+L5T8Lut2DyDVOfT+DEz7VpJpdgnhC+wnbyDXxf
4V5SB5jZeIpmCiz0floMDyGjLLMhveC3VPzDDD/2CixiM/xlAyzLQjFRvwz5
vN/j/c1OKv62rOpSA9iYn46D7x0Vv5HP+eFgKMyzdwcKMsAvjfPuloKv/VC+
IfueiqfHke0Ur8D+oJ/7uhwcWxZiVgweCE4/ptdFxS0PWanIX4X+pt25fxBc
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
nPzvfc4oLxbA/weNpKDf
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000666889, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, {{{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Coupling, Out-of-Plane Polarization\"", FontSize -> 
     12, StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{0.6000000000666889, 0.7999999999333112}, {0, 
      Log[100000]}}, {{0.6000000000666889, 0.7999999999333112}, {
     0, 11.512925464970229`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.809111210285564*^9, 3.8091112393119793`*^9}, 
   3.8091112812266083`*^9, {3.809111350940213*^9, 3.809111365360668*^9}, 
   3.8091117082699456`*^9, 3.809111744216976*^9, 3.8091117775020027`*^9, 
   3.809111813431001*^9, 3.8091118622864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "100000"}], "}"}]}], ","}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotPoints", "\[Rule]", "3000"}], ","}], "*)"}], 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(i, i + 1\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Next-to-Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", 
      ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809109399106987*^9, 3.80910942179234*^9}, {
  3.80910951873341*^9, 3.8091095194804177`*^9}, {3.809109549569007*^9, 
  3.8091095688333664`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Next-to-Nearest Neighbor Coupling, Out-of-Plane Polarization\"", 
     FontSize -> 12, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0.1, 1}, {-751378.5313430912, 104857.96945797242`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.80910942353376*^9, 3.809109521025301*^9, {3.809109551168702*^9, 
   3.809109569744877*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Im", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], 
   RowBox[{"(*", 
    RowBox[{"PlotPoints", "\[Rule]", "3000"}], "*)"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[Gamma]\), \(i, i + 1\)]\)|\>\""}], "}"}]}],
    ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Nearest Neighbor Decay, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091084862634473`*^9, 3.8091085770332623`*^9}, {
  3.8091086207602324`*^9, 3.8091086335169997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
sIV+OmPd1OIiF7//JnXnvWmh/z8kpEEZ
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.10000001836734694`, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Decay, Out-of-Plane Polarization\"", FontSize -> 12, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809108483913726*^9, 3.8091084897730637`*^9}, {
  3.809108539897114*^9, 3.809108577939898*^9}, {3.809108625197299*^9, 
  3.809108634511338*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "k", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
   RowBox[{"GdotP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rx", ",", "ry", ",", "rz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8091088252115297`*^9, 3.809108855647868*^9}, {
  3.809108894600909*^9, 3.809108990369721*^9}, {3.8091090225747766`*^9, 
  3.809109056453086*^9}, {3.8091096542948904`*^9, 3.8091097023074875`*^9}, {
  3.809109992155261*^9, 3.8091100197724724`*^9}, {3.8091100825556245`*^9, 
  3.8091101348670444`*^9}, {3.8091101771248493`*^9, 3.809110191996142*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["rx", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"k", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}]]}], "]"}], 
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["ry", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["rz", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["rx", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"k", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}]]}], "]"}], 
   RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["rx", "2"], "+", 
      SuperscriptBox["ry", "2"], "+", 
      SuperscriptBox["rz", "2"]}], ")"}]}]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["rx", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["rx", "2"], "+", 
            SuperscriptBox["ry", "2"], "+", 
            SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
       RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}], ")"}], "2"]}]]}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}]]}], "]"}], 
      RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rx", "2"], "+", 
         SuperscriptBox["ry", "2"], "+", 
         SuperscriptBox["rz", "2"]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["rx", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"5", "/", "2"}]]}]], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}]]}], "]"}], 
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["ry", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["rz", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.809110192434922*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Together", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8091097221196704`*^9, 3.809109725425786*^9}}],

Cell["\<\
Why does the ferromagnetic mode become increasingly subradiant as d becomes \
smaller, whereas the nearest neighbor coupling vanishes very sharply?\
\>", "Text",
 CellChangeTimes->{{3.809016409143978*^9, 3.8090164817003417`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["tests", "Section",
 CellChangeTimes->{{3.8067085522849584`*^9, 3.806708562119661*^9}}],

Cell["\<\
Check my grid mapping. 2D grid, but only one index to specify atoms. \
\>", "Text",
 CellChangeTimes->{{3.8055812128834515`*^9, 3.805581234435918*^9}, {
  3.8090198717970705`*^9, 3.8090198740475454`*^9}}],

Cell[CellGroupData[{

Cell["square grid", "Subsubsection",
 CellChangeTimes->{{3.8090198877837677`*^9, 3.8090198943241434`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"atomnum", " ", "=", " ", "25"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"num", " ", "=", " ", 
     SqrtBox["atomnum"]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"atom", "[", 
      RowBox[{"i_", ",", "excited_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{"excited", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"a", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
              "}"}]}], ",", "0.05"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"a", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
              "}"}]}], ",", "0.05"}], "]"}]}], "}"}], "]"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", " ", 
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
             "}"}]}], ",", 
           RowBox[{"a", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"j", "-", "1"}], ",", "num"}], "]"}], ",", 
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"j", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
             "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gridpts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"atom", "[", 
        RowBox[{"i", ",", "False"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          SuperscriptBox["num", "2"], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"excited", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"atom", "[", 
         RowBox[{"i", ",", "True"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"atomnum", "-", "1"}], "2"], "+", 
              RowBox[{
               SqrtBox["atomnum"], " ", "i"}], "+", "j", "-", "1"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
            "]"}]}]}], "}"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"positions", "[", "pts_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"1", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "pts"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.805581333965639*^9, 3.8055814341893806`*^9}, {
   3.805581552511201*^9, 3.8055815960303836`*^9}, {3.805581629511797*^9, 
   3.8055816883682003`*^9}, {3.8055817251288686`*^9, 
   3.8055817262478523`*^9}, {3.805581886212476*^9, 3.8055818997023997`*^9}, {
   3.805581939032192*^9, 3.8055820448102236`*^9}, {3.8056697625052896`*^9, 
   3.8056698196551075`*^9}, {3.8065230852646923`*^9, 
   3.8065230871668463`*^9}, {3.806523244000454*^9, 3.8065232904876947`*^9}, {
   3.806523351830069*^9, 3.806523378934533*^9}, {3.806523835979823*^9, 
   3.8065238841500297`*^9}, {3.806523947442684*^9, 3.8065240254449883`*^9}, {
   3.8065240606577477`*^9, 3.8065240730513306`*^9}, {3.806524114790417*^9, 
   3.806524148044992*^9}, {3.808175601187192*^9, 3.808175634705696*^9}, {
   3.8088539626628017`*^9, 3.8088540437169886`*^9}, {3.8088541642627516`*^9, 
   3.8088542064094296`*^9}, {3.8088542562133045`*^9, 3.808854281762638*^9}, {
   3.808854316666351*^9, 3.8088546183816257`*^9}, {3.808854679622679*^9, 
   3.8088547519374275`*^9}, {3.8088549928765655`*^9, 3.8088550254883757`*^9}, 
   3.808862892214314*^9, {3.8090197898333473`*^9, 3.809019885729237*^9}, {
   3.8090213636047497`*^9, 3.809021383906481*^9}, {3.8090217672219486`*^9, 
   3.8090217704323263`*^9}, 3.810759056798471*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"0.7", ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showpos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "13"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"positions", "[", "showpos", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"a", " ", "num"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"a", " ", "num"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3fJsH9OkqDeOGfxu/CD6ULSAHIh+/qNBGUQvSdig
DqJ9TnDrg+iN8kuMwerfHQfTs84ccwfR/FVlniB6B3uiH4iOejszGkSHagcY
7AWZ863EHETHVKy4GRvzxvFc2FMwvYO54S2INprt/xlEv+3/9QtEb3oe+w9E
b4uqN48D0txnW2xBdIVWniuIjrDV8wfRrjxTg0F0wxLFUBAt6R0ZBaInFzTG
geiqv6r7WuLfOApMDTsEoteYhv48n/DGcdLHMuYLQLoso0MIRPNInRUH0SmX
2eRAdEe6hSKI3h80VRVEV59XsAPRCoqSXiDa2ucqmJ7V5RwCohs2RILpa6+z
YkD03X+TwbRY3cFUEB3071Q22FzZ7vArQHqFm1IUiD5zqn2XYuIbx8z97ntA
NABn7shV
  "]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 10}, 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 0}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {7, 0}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {1, 1}}]}},
  Axes->False,
  Frame->{True, True, False, False},
  PlotRange->{{-1, 11}, {-1, 11}}]], "Output",
 CellChangeTimes->{{3.805581655114204*^9, 3.8055816888449235`*^9}, 
   3.8055819020959787`*^9, {3.805581941482599*^9, 3.805581976920786*^9}, {
   3.805582038182976*^9, 3.8055820450695515`*^9}, 3.805669582249579*^9, {
   3.805669805938079*^9, 3.805669820223586*^9}, 3.8059998840810094`*^9, 
   3.806523291233897*^9, 3.8065233798524733`*^9, {3.8065238580323625`*^9, 
   3.8065238847552323`*^9}, {3.806524006640272*^9, 3.8065240259317565`*^9}, {
   3.8065240672190237`*^9, 3.8065240738995457`*^9}, 3.806524148572755*^9, 
   3.8081755189332676`*^9, 3.808175636178617*^9, 3.8088536023104763`*^9, {
   3.808854019565382*^9, 3.8088540442714815`*^9}, {3.80885417950504*^9, 
   3.8088542068163023`*^9}, {3.8088542572328033`*^9, 3.808854282126666*^9}, {
   3.8088543483426723`*^9, 3.808854355524477*^9}, 3.8088545068807526`*^9, 
   3.8088546203094683`*^9, {3.8088546828779745`*^9, 3.808854698773489*^9}, 
   3.8088547596048913`*^9, {3.808854831449887*^9, 3.8088548788481965`*^9}, {
   3.8088550018096895`*^9, 3.808855029306165*^9}, {3.8088629004731874`*^9, 
   3.808862929573784*^9}, {3.8090213785567803`*^9, 3.80902141075273*^9}, 
   3.8090217716420937`*^9, 3.81075906129813*^9}]
}, Open  ]],

Cell["grid with defects", "Text",
 CellChangeTimes->{{3.810758986356931*^9, 3.810758989083992*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"filling", " ", "=", "0.7"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defects", "=", 
    RowBox[{"atomnum", "-", 
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"filling", " ", "atomnum"}], "+", "0.5"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "remove", " ", "some", " ", "atoms", " ", "from", " ", "the", " ", 
    "system"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomIcds", " ", "=", " ", 
   RowBox[{"Range", "[", "atomnum", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", "defects"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rand", " ", "=", " ", 
      RowBox[{"RandomChoice", "[", "atomIcds", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"atomIcds", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"atomIcds", ",", 
        RowBox[{
         RowBox[{"#", "\[NotEqual]", "rand"}], "&"}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.810758994739258*^9, 3.810759001276965*^9}, {
  3.810759075147395*^9, 3.8107590822412996`*^9}, {3.810759179015195*^9, 
  3.8107591797677517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridpts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"atom", "[", 
      RowBox[{"i", ",", "False"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "atomIcds"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"r", "[", 
    RowBox[{
     RowBox[{"atomIcds", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"atomIcds", "[", 
      RowBox[{"[", "8", "]"}], "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.810759047698155*^9, 3.8107590491010904`*^9}, {
  3.8107590895783787`*^9, 3.81075911156435*^9}, {3.8107592043528366`*^9, 
  3.810759273374239*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 5}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 6}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 7}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 8}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{8, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 9}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{5, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{6, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{7, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{9, 10}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{10, 10}, 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{4, 0}, {1, 1}}]}}]], "Output",
 CellChangeTimes->{{3.8107591016600204`*^9, 3.810759118255805*^9}, 
   3.810759181836395*^9, {3.810759214939242*^9, 3.810759240600553*^9}, 
   3.8107592740708065`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["hex grid", "Subsubsection",
 CellChangeTimes->{{3.8090199043830104`*^9, 3.8090199092154503`*^9}, {
  3.809019960759105*^9, 3.80901996974614*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnumx", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomnumy", " ", "=", 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox["3"]], "atomnumx"}], "+", "0.5"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
    RowBox[{
     FractionBox["a", "2"], 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
       "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "i_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     SqrtBox["3"], "2"], 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
      RowBox[{
       FractionBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
       ")"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atom", "[", 
    RowBox[{"i_", ",", "excited_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"excited", ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", "0.05"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", "0.05"}], "]"}]}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", 
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "j", "]"}], ",", 
            RowBox[{"y", "[", "j", "]"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridpts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"atom", "[", 
      RowBox[{"i", ",", "False"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"atomnumx", " ", "atomnumy"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"positions", "[", "pts_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"1", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "pts"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.809021470240757*^9, 3.809021536932454*^9}, 
   3.8090215998981524`*^9, {3.8090217224147024`*^9, 3.809021723896715*^9}, 
   3.8090217604680147`*^9, {3.8090218065617704`*^9, 3.8090218662552247`*^9}, {
   3.8090219217738*^9, 3.8090219218635607`*^9}, {3.8090219572918634`*^9, 
   3.809021971994565*^9}, {3.80902228825834*^9, 3.8090223320751686`*^9}, {
   3.80902239796904*^9, 3.8090224258844547`*^9}, 3.809022473094236*^9, {
   3.8090225162768106`*^9, 3.8090225213073654`*^9}, {3.809022634832921*^9, 
   3.8090226571702123`*^9}, {3.809022692643534*^9, 3.8090227098625097`*^9}, {
   3.809022828261039*^9, 3.8090229389960513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", "2"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"atomnumx", " ", "atomnumy"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8090224764253407`*^9, 3.8090224983517246`*^9}, {
  3.8090225322600927`*^9, 3.8090225476549387`*^9}, {3.8090226040152936`*^9, 
  3.8090226164460683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.809022524857874*^9, 3.8090225480070133`*^9}, {
  3.809022604650595*^9, 3.8090226169108405`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"showpos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "13", ",", "18"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"positions", "[", "showpos", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "atomnumx"}], " ", "}"}]}], ",", 
      RowBox[{"a", 
       FractionBox[
        SqrtBox["3"], "2"], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "atomnumy"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.809021552640469*^9, 3.8090215841482496`*^9}, 
   3.80902162020292*^9, {3.8090219343224115`*^9, 3.8090219509837265`*^9}, 
   3.8090224444348397`*^9, {3.8090227244565506`*^9, 3.8090227425072556`*^9}, {
   3.80902278874566*^9, 3.809022806709644*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[1, 2] 3^Rational[1, 2]}, {4.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{0, 3^Rational[1, 2]}, {0, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[3, 2] 3^Rational[1, 2]}, {0.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[3, 2] 3^Rational[1, 2]}, {1.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[3, 2] 3^Rational[1, 2]}, {2.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[3, 2] 3^Rational[1, 2]}, {3.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[3, 2] 3^Rational[1, 2]}, {4.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{0, 2 3^Rational[1, 2]}, {0, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{1, 2 3^Rational[1, 2]}, {1, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{2, 2 3^Rational[1, 2]}, {2, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{3, 2 3^Rational[1, 2]}, {3, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{4, 2 3^Rational[1, 2]}, {4, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[5, 2] 3^Rational[1, 2]}, {0.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[5, 2] 3^Rational[1, 2]}, {1.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[5, 2] 3^Rational[1, 2]}, {2.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[5, 2] 3^Rational[1, 2]}, {3.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[5, 2] 3^Rational[1, 2]}, {4.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 0}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {
       Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2.5, 
       0.8660254037844386}}]]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {2, 3^Rational[1, 2]}}, {{0, 0}, {
       2, 1.7320508075688772`}}]]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {
       Rational[5, 2], Rational[3, 2] 3^Rational[1, 2]}}, {{0, 0}, {2.5, 
       2.598076211353316}}]]}},
  Axes->False,
  Frame->{True, True, False, False},
  PlotRange->
   NCache[{{-1, 5}, {
     Rational[-1, 2] 3^Rational[1, 2], 3 3^Rational[1, 2]}}, {{-1, 
     5}, {-0.8660254037844386, 5.196152422706632}}]]], "Output",
 CellChangeTimes->{{3.809021584732686*^9, 3.8090216213797317`*^9}, 
   3.8090217296214094`*^9, {3.809021850723713*^9, 3.809021869413793*^9}, {
   3.809021923623888*^9, 3.8090219740211487`*^9}, {3.8090224321267376`*^9, 
   3.8090224501006937`*^9}, {3.809022638302681*^9, 3.809022660501314*^9}, {
   3.80902270057234*^9, 3.8090227428902593`*^9}, {3.80902279043915*^9, 
   3.8090228072521925`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
      RowBox[{
       FractionBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
       ")"}]}]}], "}"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{780, 805},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{
 "zunonian", "zunon", "linewidth", "waveplate", "lightbulbs", "unpolarized", 
  "collimated", "atomnums"}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 191, 2, 272, "Chapter"],
Cell[774, 26, 258, 6, 63, "Text"],
Cell[CellGroupData[{
Cell[1057, 36, 118, 2, 86, "Section"],
Cell[CellGroupData[{
Cell[1200, 42, 112, 1, 59, "Subsection"],
Cell[1315, 45, 1060, 27, 246, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[2412, 77, 99, 1, 48, "Subsection"],
Cell[2514, 80, 736, 14, 169, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[3287, 99, 99, 1, 48, "Subsection"],
Cell[3389, 102, 3370, 93, 370, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6808, 201, 191, 3, 86, "Section"],
Cell[7002, 206, 26955, 636, 2782, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33994, 847, 104, 1, 86, "Section"],
Cell[34101, 850, 306, 6, 113, "Text"],
Cell[34410, 858, 319, 7, 66, "Text"],
Cell[34732, 867, 318, 6, 38, "Text"],
Cell[35053, 875, 1869, 52, 216, "Input"],
Cell[36925, 929, 5085, 132, 658, "Input"],
Cell[CellGroupData[{
Cell[42035, 1065, 500, 12, 151, "Input"],
Cell[42538, 1079, 179, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42754, 1087, 102, 1, 37, "Input"],
Cell[42859, 1090, 11473, 276, 200, "Output"]
}, Open  ]],
Cell[54347, 1369, 104, 1, 38, "Text"],
Cell[CellGroupData[{
Cell[54476, 1374, 2845, 72, 302, "Input"],
Cell[57324, 1448, 82531, 1633, 393, "Output"]
}, Closed]],
Cell[139870, 3084, 94, 1, 29, "Input"],
Cell[139967, 3087, 320, 6, 88, "Text"],
Cell[CellGroupData[{
Cell[140312, 3097, 530, 14, 37, "Input"],
Cell[140845, 3113, 696, 15, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141578, 3133, 447, 8, 37, "Input"],
Cell[142028, 3143, 202, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142267, 3151, 194, 4, 37, "Input"],
Cell[142464, 3157, 72, 1, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142573, 3163, 3518, 90, 451, "Input"],
Cell[146094, 3255, 17123, 456, 37, "Output"],
Cell[163220, 3713, 42481, 817, 416, "Output"]
}, Open  ]],
Cell[205716, 4533, 853, 18, 134, "Input"],
Cell[206572, 4553, 144, 3, 37, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[206753, 4561, 316, 4, 68, "Section"],
Cell[207072, 4567, 268, 5, 97, "Text"],
Cell[CellGroupData[{
Cell[207365, 4576, 1634, 31, 266, "Input"],
Cell[209002, 4609, 613, 10, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209652, 4624, 314, 4, 76, "Subsubsection"],
Cell[209969, 4630, 4460, 132, 870, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214466, 4767, 272, 3, 76, "Subsubsection"],
Cell[214741, 4772, 5279, 155, 4651, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[220057, 4932, 98, 1, 62, "Subsubsection"],
Cell[220158, 4935, 171, 4, 58, "Text"],
Cell[CellGroupData[{
Cell[220354, 4943, 9871, 223, 1691, "Input"],
Cell[230228, 5168, 534, 9, 415, "Output"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230811, 5183, 108, 1, 76, "Subsubsection"],
Cell[CellGroupData[{
Cell[230944, 5188, 612, 12, 171, "Input"],
Cell[231559, 5202, 29106, 579, 522, "Output"]
}, Open  ]],
Cell[260680, 5784, 163, 2, 58, "Text"],
Cell[260846, 5788, 1068, 26, 246, "Input"],
Cell[CellGroupData[{
Cell[261939, 5818, 2098, 49, 358, "Input"],
Cell[264040, 5869, 39658, 803, 522, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303735, 6677, 365, 7, 57, "Input"],
Cell[304103, 6686, 193, 2, 57, "Output"]
}, Open  ]],
Cell[304311, 6691, 1131, 32, 246, "Input"],
Cell[CellGroupData[{
Cell[305467, 6727, 615, 19, 96, "Input"],
Cell[306085, 6748, 1834, 37, 245, "Output"],
Cell[307922, 6787, 340, 7, 45, "Message"],
Cell[308265, 6796, 388, 8, 45, "Message"],
Cell[308656, 6806, 388, 8, 45, "Message"],
Cell[309047, 6816, 341, 7, 45, "Message"],
Cell[309391, 6825, 341, 7, 45, "Message"],
Cell[309735, 6834, 384, 8, 45, "Message"],
Cell[310122, 6844, 386, 8, 45, "Message"],
Cell[310511, 6854, 386, 8, 45, "Message"],
Cell[310900, 6864, 341, 7, 45, "Message"],
Cell[311244, 6873, 339, 7, 45, "Message"],
Cell[311586, 6882, 339, 7, 45, "Message"],
Cell[311928, 6891, 384, 8, 45, "Message"],
Cell[312315, 6901, 384, 8, 45, "Message"],
Cell[312702, 6911, 386, 8, 45, "Message"],
Cell[313091, 6921, 341, 7, 45, "Message"],
Cell[313435, 6930, 341, 7, 45, "Message"],
Cell[313779, 6939, 341, 7, 45, "Message"],
Cell[314123, 6948, 384, 8, 45, "Message"],
Cell[314510, 6958, 386, 8, 45, "Message"],
Cell[314899, 6968, 386, 8, 45, "Message"],
Cell[315288, 6978, 339, 7, 45, "Message"],
Cell[315630, 6987, 341, 7, 45, "Message"],
Cell[315974, 6996, 388, 8, 45, "Message"],
Cell[316365, 7006, 386, 8, 45, "Message"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[316812, 7021, 168, 2, 68, "Section"],
Cell[CellGroupData[{
Cell[317005, 7027, 279, 6, 120, "Subsubsection"],
Cell[317287, 7035, 196, 4, 63, "Text"],
Cell[317486, 7041, 1617, 27, 110, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319140, 7073, 469, 6, 59, "Subsection"],
Cell[319612, 7081, 8109, 231, 946, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[327758, 7317, 376, 5, 48, "Subsection"],
Cell[CellGroupData[{
Cell[328159, 7326, 403, 10, 86, "Input"],
Cell[328565, 7338, 218, 4, 54, "Output"]
}, Open  ]],
Cell[328798, 7345, 8505, 210, 1038, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337340, 7560, 256, 3, 59, "Subsection"],
Cell[CellGroupData[{
Cell[337621, 7567, 2333, 58, 284, "Input"],
Cell[339957, 7627, 240, 5, 28, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340234, 7637, 408, 10, 37, "Input"],
Cell[340645, 7649, 21908, 372, 860, "Output"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362602, 8027, 115, 1, 59, "Subsection"],
Cell[CellGroupData[{
Cell[362742, 8032, 112, 1, 49, "Subsubsection"],
Cell[362857, 8035, 159, 3, 38, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363053, 8043, 163, 2, 49, "Subsubsection"],
Cell[363219, 8047, 4722, 68, 62, "Input"],
Cell[CellGroupData[{
Cell[367966, 8119, 16203, 338, 1348, "Input"],
Cell[384172, 8459, 120, 1, 35, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384329, 8465, 548, 13, 103, "Input"],
Cell[384880, 8480, 180, 3, 46, "Output"]
}, Open  ]],
Cell[385075, 8486, 293, 7, 46, "Input"],
Cell[CellGroupData[{
Cell[385393, 8497, 2252, 47, 281, "Input"],
Cell[387648, 8546, 27234, 534, 462, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414919, 9085, 768, 18, 195, "Input"],
Cell[415690, 9105, 266, 4, 46, "Output"]
}, Open  ]],
Cell[415971, 9112, 302, 8, 46, "Input"],
Cell[CellGroupData[{
Cell[416298, 9124, 1582, 37, 281, "Input"],
Cell[417883, 9163, 26879, 528, 443, "Output"]
}, Open  ]],
Cell[444777, 9694, 97, 1, 46, "Input"],
Cell[CellGroupData[{
Cell[444899, 9699, 1192, 34, 155, "Input"],
Cell[446094, 9735, 420, 13, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446551, 9753, 71, 1, 46, "Input"],
Cell[446625, 9756, 215, 7, 46, "Output"]
}, Open  ]],
Cell[446855, 9766, 1415, 39, 197, "Input"],
Cell[CellGroupData[{
Cell[448295, 9809, 1699, 39, 281, "Input"],
Cell[449997, 9850, 26882, 529, 451, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476916, 10384, 437, 10, 103, "Input"],
Cell[477356, 10396, 126, 2, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477519, 10403, 397, 10, 103, "Input"],
Cell[477919, 10415, 153, 2, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478121, 10423, 114, 1, 61, "Subsubsection"],
Cell[478238, 10426, 6981, 116, 307, "Input"],
Cell[CellGroupData[{
Cell[485244, 10546, 16495, 324, 2720, "Input"],
Cell[501742, 10872, 143, 2, 53, "Print"]
}, Closed]],
Cell[CellGroupData[{
Cell[501922, 10879, 558, 13, 325, "Input"],
Cell[502483, 10894, 210, 3, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502730, 10902, 2080, 44, 527, "Input"],
Cell[504813, 10948, 27318, 534, 691, "Output"]
}, Open  ]],
Cell[532146, 11485, 230, 5, 72, "Text"],
Cell[CellGroupData[{
Cell[532401, 11494, 548, 14, 340, "Input"],
Cell[532952, 11510, 192, 3, 71, "Output"]
}, Open  ]],
Cell[533159, 11516, 93, 1, 71, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[533289, 11522, 471, 6, 50, "Subsubsection"],
Cell[533763, 11530, 250, 5, 188, "Text"],
Cell[CellGroupData[{
Cell[534038, 11539, 2986, 60, 828, "Input"],
Cell[537027, 11601, 214, 2, 110, "Output"],
Cell[537244, 11605, 191, 2, 110, "Output"],
Cell[537438, 11609, 220, 2, 110, "Output"],
Cell[537661, 11613, 193, 2, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537891, 11620, 9044, 210, 2738, "Input"],
Cell[CellGroupData[{
Cell[546960, 11834, 143, 2, 82, "Print"],
Cell[547106, 11838, 145, 2, 82, "Print"],
Cell[547254, 11842, 145, 2, 82, "Print"],
Cell[547402, 11846, 143, 2, 82, "Print"],
Cell[547548, 11850, 143, 2, 82, "Print"],
Cell[547694, 11854, 145, 2, 82, "Print"],
Cell[547842, 11858, 142, 2, 82, "Print"],
Cell[547987, 11862, 143, 2, 82, "Print"],
Cell[548133, 11866, 145, 2, 82, "Print"],
Cell[548281, 11870, 145, 2, 82, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[548475, 11878, 446, 11, 87, "Input"],
Cell[548924, 11891, 23747, 403, 893, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572708, 12299, 395, 11, 187, "Input"],
Cell[573106, 12312, 273, 5, 110, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[573440, 12324, 166, 2, 73, "Subsection"],
Cell[CellGroupData[{
Cell[573631, 12330, 104, 1, 61, "Subsubsection"],
Cell[573738, 12333, 222, 5, 90, "Text"],
Cell[CellGroupData[{
Cell[573985, 12342, 1944, 41, 626, "Input"],
Cell[575932, 12385, 199286, 3294, 783, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775255, 15684, 564, 13, 321, "Input"],
Cell[775822, 15699, 197, 3, 88, "Output"]
}, Open  ]],
Cell[776034, 15705, 379, 5, 90, "Text"],
Cell[CellGroupData[{
Cell[776438, 15714, 167, 4, 88, "Input"],
Cell[776608, 15720, 185, 5, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776830, 15730, 3662, 90, 1182, "Input"],
Cell[780495, 15822, 129745, 2234, 772, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910277, 18061, 587, 14, 462, "Input"],
Cell[910867, 18077, 254, 4, 88, "Output"]
}, Open  ]],
Cell[911136, 18084, 126, 2, 88, "Input"],
Cell[CellGroupData[{
Cell[911287, 18090, 397, 11, 96, "Input"],
Cell[911687, 18103, 178, 4, 88, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[911914, 18113, 107, 1, 50, "Subsubsection"],
Cell[912024, 18116, 105, 1, 112, "Text"],
Cell[912132, 18119, 1660, 39, 340, "Input"],
Cell[913795, 18160, 186, 2, 112, "Text"],
Cell[CellGroupData[{
Cell[914006, 18166, 2555, 57, 746, "Input"],
Cell[916564, 18225, 262, 6, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[916863, 18236, 123, 3, 120, "Input"],
Cell[916989, 18241, 511, 17, 160, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[917537, 18263, 1813, 46, 918, "Input"],
Cell[919353, 18311, 352018, 5896, 1307, "Output"]
}, Open  ]],
Cell[1271386, 24210, 92, 1, 110, "Input"],
Cell[CellGroupData[{
Cell[1271503, 24215, 103, 1, 110, "Input"],
Cell[1271609, 24218, 445554, 7357, 1307, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1717212, 31581, 166, 2, 50, "Subsubsection"],
Cell[1717381, 31585, 367, 6, 78, "Text"],
Cell[1717751, 31593, 7903, 188, 833, "Input"],
Cell[CellGroupData[{
Cell[1725679, 31785, 2879, 59, 483, "Input"],
Cell[1728561, 31846, 23351, 455, 508, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1751949, 32306, 480, 12, 168, "Input"],
Cell[1752432, 32320, 261, 3, 57, "Output"]
}, Open  ]],
Cell[1752708, 32326, 224, 5, 57, "Input"],
Cell[1752935, 32333, 2113, 47, 466, "Input"],
Cell[CellGroupData[{
Cell[1755073, 32384, 135, 2, 57, "Input"],
Cell[1755211, 32388, 1772, 41, 476, "Output"]
}, Open  ]],
Cell[1756998, 32432, 182, 2, 58, "Text"],
Cell[1757183, 32436, 1936, 51, 316, "Input"],
Cell[CellGroupData[{
Cell[1759144, 32491, 1873, 42, 283, "Input"],
Cell[1761020, 32535, 28367, 554, 526, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1789424, 33094, 557, 13, 296, "Input"],
Cell[1789984, 33109, 238, 3, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1790259, 33117, 328, 8, 57, "Input"],
Cell[1790590, 33127, 246, 6, 171, "Output"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1790885, 33139, 128, 1, 76, "Subsubsection"],
Cell[1791016, 33142, 285, 6, 97, "Text"],
Cell[1791304, 33150, 9215, 230, 1575, "Input"],
Cell[1800522, 33382, 1609, 34, 171, "Input"],
Cell[CellGroupData[{
Cell[1802156, 33420, 397, 11, 57, "Input"],
Cell[1802556, 33433, 17077, 464, 57, "Output"]
}, Open  ]],
Cell[1819648, 33900, 128, 1, 58, "Text"],
Cell[1819779, 33903, 1291, 38, 246, "Input"],
Cell[CellGroupData[{
Cell[1821095, 33945, 2247, 57, 697, "Input"],
Cell[1823345, 34004, 41422, 802, 646, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1864804, 34811, 506, 12, 168, "Input"],
Cell[1865313, 34825, 166, 2, 57, "Output"]
}, Open  ]],
Cell[1865494, 34830, 95, 1, 58, "Text"],
Cell[CellGroupData[{
Cell[1865614, 34835, 3492, 83, 838, "Input"],
Cell[1869109, 34920, 4762, 92, 1245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1873908, 35017, 136, 4, 147, "Input"],
Cell[1874047, 35023, 216, 5, 110, "Output"]
}, Open  ]],
Cell[1874278, 35031, 250, 7, 64, "Input"],
Cell[1874531, 35040, 2678, 67, 411, "Input"],
Cell[1877212, 35109, 3388, 82, 527, "Input"],
Cell[CellGroupData[{
Cell[1880625, 35195, 853, 18, 108, "Input"],
Cell[1881481, 35215, 409, 5, 37, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1881963, 35228, 184, 2, 86, "Section"],
Cell[CellGroupData[{
Cell[1882172, 35234, 112, 1, 556, "Subsubsection"],
Cell[1882287, 35237, 219, 4, 425, "Text"],
Cell[1882509, 35243, 182, 3, 415, "Input"],
Cell[1882694, 35248, 5077, 132, 8046, "Input"],
Cell[CellGroupData[{
Cell[1887796, 35384, 133, 2, 415, "Input"],
Cell[1887932, 35388, 21799, 572, 4325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1909768, 35965, 1096, 30, 2316, "Input"],
Cell[1910867, 35997, 657, 18, 713, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1911561, 36020, 574, 16, 1126, "Input"],
Cell[1912138, 36038, 633, 18, 713, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1912808, 36061, 228, 5, 415, "Input"],
Cell[1913039, 36068, 2934, 87, 2288, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1916010, 36160, 122, 2, 415, "Input"],
Cell[1916135, 36164, 99, 2, 415, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1916283, 36172, 115, 1, 556, "Subsubsection"],
Cell[1916401, 36175, 218, 4, 425, "Text"],
Cell[1916622, 36181, 191, 5, 415, "Input"],
Cell[1916816, 36188, 128, 1, 425, "Text"],
Cell[1916947, 36191, 793, 19, 707, "Input"],
Cell[1917743, 36212, 885, 29, 1165, "Input"],
Cell[1918631, 36243, 528, 15, 415, "Input"],
Cell[1919162, 36260, 572, 19, 737, "Input"],
Cell[CellGroupData[{
Cell[1919759, 36283, 1862, 57, 2346, "Input"],
Cell[1921624, 36342, 1136, 40, 1053, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1922797, 36387, 2569, 76, 2981, "Input"],
Cell[1925369, 36465, 11314, 197, 3276, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1936720, 36667, 4694, 115, 4087, "Input"],
Cell[1941417, 36784, 332771, 5548, 3726, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2274225, 42337, 219, 5, 415, "Input"],
Cell[2274447, 42344, 108, 1, 415, "Output"]
}, Open  ]],
Cell[2274570, 42348, 1779, 46, 2977, "Input"],
Cell[CellGroupData[{
Cell[2276374, 42398, 2255, 52, 2977, "Input"],
Cell[2278632, 42452, 96934, 1900, 3765, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2375603, 44357, 2165, 56, 3127, "Input"],
Cell[2377771, 44415, 96464, 1893, 3765, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2474272, 46313, 1938, 52, 2977, "Input"],
Cell[2476213, 46367, 11747, 209, 3103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2487997, 46581, 1694, 43, 2410, "Input"],
Cell[2489694, 46626, 7398, 138, 3491, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2497129, 46769, 784, 17, 707, "Input"],
Cell[2497916, 46788, 6679, 212, 5585, "Output"]
}, Open  ]],
Cell[2504610, 47003, 124, 2, 415, "Input"],
Cell[2504737, 47007, 239, 4, 1010, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2505025, 47017, 92, 1, 68, "Section"],
Cell[2505120, 47020, 214, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[2505359, 47028, 106, 1, 49, "Subsubsection"],
Cell[2505468, 47031, 5653, 147, 466, "Input"],
Cell[CellGroupData[{
Cell[2511146, 47182, 1382, 37, 134, "Input"],
Cell[2512531, 47221, 7526, 144, 733, "Output"]
}, Open  ]],
Cell[2520072, 47368, 99, 1, 58, "Text"],
Cell[2520174, 47371, 1338, 37, 321, "Input"],
Cell[CellGroupData[{
Cell[2521537, 47412, 711, 20, 96, "Input"],
Cell[2522251, 47434, 4526, 90, 728, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2526826, 47530, 151, 2, 76, "Subsubsection"],
Cell[2526980, 47534, 5309, 163, 928, "Input"],
Cell[CellGroupData[{
Cell[2532314, 47701, 569, 16, 96, "Input"],
Cell[2532886, 47719, 490, 9, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2533413, 47733, 1110, 29, 260, "Input"],
Cell[2534526, 47764, 4652, 115, 747, "Output"]
}, Open  ]],
Cell[2539193, 47882, 1375, 45, 431, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

