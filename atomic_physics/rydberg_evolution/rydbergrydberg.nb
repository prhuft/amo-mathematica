(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    662802,      13200]
NotebookOptionsPosition[    646034,      12934]
NotebookOutlinePosition[    646441,      12950]
CellTagsIndexPosition[    646398,      12947]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["rydberg-rydberg interactions", "Title",
 CellChangeTimes->{{3.811971011166643*^9, 
  3.8119710227062626`*^9}},ExpressionUUID->"16184614-62ec-420e-b06c-\
b38581dc851d"],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.8119710266233625`*^9, 
  3.811971028517356*^9}},ExpressionUUID->"b75bc868-570d-4a1b-9638-\
281ef57daf99"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"constsdir", "=", "\"\<..\\\\constants\\\\\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", " ", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "constsdir"}], "}"}], 
     "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"<<", "\"\<physconsts.m\>\""}], "\[IndentingNewLine]", 
    RowBox[{"<<", "\"\<rbconsts.m\>\""}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", "15"}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.812036266427552*^9, 3.812036274565545*^9}, {
   3.812284206353174*^9, 3.812284215055832*^9}, 3.8381416991776195`*^9, {
   3.8382253648939457`*^9, 
   3.838225367999634*^9}},ExpressionUUID->"e2b905a0-49d8-4d81-b655-\
869221322242"],

Cell[CellGroupData[{

Cell["general setup", "Section",
 CellChangeTimes->{{3.8120428677841787`*^9, 
  3.8120428701943326`*^9}},ExpressionUUID->"4b463eb9-073a-431a-a072-\
bfad753f4be1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "CONSTANTS", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[HBar]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ee", "=", " ", "1.602*^-19"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", " ", "=", " ", 
     RowBox[{"3", "*", 
      SuperscriptBox["10", "8"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", " ", "=", 
     RowBox[{"4", "\[Pi]", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]0", " ", "=", " ", 
     RowBox[{"1", "/", 
      SqrtBox[
       RowBox[{"c", " ", "\[Mu]0"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qq", " ", "=", " ", 
     RowBox[{
      RowBox[{"ee", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", "\[Pi]", " ", "\[Epsilon]0"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "FUNCTIONS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OuterProd", "[", 
      RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
     RowBox[{"Outer", "[", 
      RowBox[{"Times", ",", "A", ",", "B"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "outer", " ", "product", " ", "of", " ", "vectors", " ", "or", " ", 
      "matrices", " ", "A"}], ",", "B"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HamiltonianProduct", "[", 
      RowBox[{"hsingle_", ",", "volume_"}], " ", "]"}], ":=", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"totalham", "=", "hsingle"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "Hamiltonian", " ", "describing", " ", "the", " ", 
         "combined", " ", "space", " ", "of", " ", "`volume`", " ", "number", 
         " ", "of", " ", "quantum", " ", "systems", " ", "with", " ", 
         "individual", " ", "Hamiltonian", " ", "hsingle"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", "volume"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"totalham", " ", "=", " ", 
            RowBox[{
             RowBox[{"KroneckerProduct", "[", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"Length", "[", "hsingle", "]"}], "]"}], ",", 
               "totalham"}], "]"}], " ", "+", " ", 
             RowBox[{"KroneckerProduct", "[", 
              RowBox[{"hsingle", ",", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"Length", "[", "totalham", "]"}], "]"}]}], "]"}]}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "totalham"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "the", " ", "total", " ", "blockade", " ", "to", " ", "an", " ", "n"}], 
     "-", 
     RowBox[{
     "Rydberg", " ", "excited", " ", "state", " ", "due", " ", "to", " ", 
      "the", " ", "atoms", " ", "participating"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BlockadeTerm", "[", 
     RowBox[{"atomIdcs_", ",", "blockadeTwoAtoms_"}], "]"}], ":=", 
    RowBox[{"Total", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"blockadeTwoAtoms", "[", 
         RowBox[{
          RowBox[{"atomIdcs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"atomIdcs", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "atomIdcs", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"1", "+", "i"}], ",", 
            RowBox[{"Length", "[", "atomIdcs", "]"}]}], "]"}]}], "}"}]}], 
       "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BlockadeHamiltonian", "[", 
      RowBox[{"atomNum_", ",", "blockade_"}], "]"}], ":=", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"excitedList", "=", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], ",", "n", ",", "HBlockade"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "blockade", " ", "is", " ", "a", " ", "function", " ", "that", " ", 
         "takes", " ", "a", " ", "list", " ", "of", " ", "atom", " ", 
         "indices", " ", 
         RowBox[{"(", 
          RowBox[{"1", ",", 
           RowBox[{"2", "..."}]}], ")"}], " ", "and", " ", "return", " ", 
         "the", " ", "corresponding", " ", "blockade", " ", "between", " ", 
         "atoms"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"generate", " ", "list", " ", "of", " ", "Rydberg"}], "-", 
          RowBox[{
          "excited", " ", "atoms", " ", "at", " ", "each", " ", "index", " ", 
           "of", " ", "the", " ", 
           RowBox[{"basis", ".", " ", "for"}], " ", "now"}]}], ",", " ", 
         RowBox[{
          RowBox[{
          "this", " ", "assumes", " ", "a", " ", "system", " ", "of", " ", 
           "two"}], "-", 
          RowBox[{"level", " ", "atoms"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", "atomNum"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"n", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Flatten", "@", "excitedList"}], ")"}], "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "+", "1"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"excitedList", ",", "n"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"oldLength", " ", "=", " ", 
            RowBox[{"Length", "[", "excitedList", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "2"}], ",", 
             RowBox[{"j", "<", "oldLength"}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"excitedList", ",", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"excitedList", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "n"}], "}"}]}]}], 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"dim", " ", "=", " ", 
         RowBox[{"2", "^", "atomNum"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"HBlockade", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "<", 
           RowBox[{"dim", "+", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"atoms", " ", "=", " ", 
            RowBox[{"excitedList", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"HBlockade", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "k"}], "]"}], "]"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "atoms", "]"}], ">", "0"}], ",", 
              RowBox[{"blockade", "[", "atoms", "]"}], ",", "0"}], "]"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "HBlockade"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]BString", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \
\((``, ``)\)]\)\>\"", ",", "i", ",", "j"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0_", ",", "H_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dim", ",", "rho", ",", "eqIdcs", ",", "comm", ",", "linblad", ",", 
         "rhoPruned", ",", "eqsPruned", ",", "rhoICPruned", ",", " ", 
         "popIdxList", ",", " ", "cohIdxList"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "The", " ", "junk", " ", "below", " ", "just", " ", "builds", " ", 
          "the", " ", "eqs", " ", "to", " ", "be", " ", "passed", " ", "to", 
          " ", "NDSolve"}], ",", " ", 
         RowBox[{
          RowBox[{
          "removing", " ", "the", " ", "redundant", " ", "matrix", " ", 
           RowBox[{"elements", ".", " ", "The"}], " ", "derivatives", " ", 
           "could", " ", "be", " ", "worked", " ", "out", " ", "explicitly", 
           " ", "and", " ", "typed", " ", "in", " ", 
           RowBox[{"(", 
            RowBox[{
            "just", " ", "the", " ", "optical", " ", "Bloch", " ", 
             "equations"}], ")"}], " ", "but", " ", "this", " ", "can", " ", 
           "the", " ", "heavy", " ", "lifting", " ", "for", " ", "higher", 
           " ", "than", " ", "2"}], "-", 
          RowBox[{"dimensional", " ", 
           RowBox[{
           "systems", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\"\<Pruned\>\""}], " ", "variables", " ", "refer", " ", "to", 
           " ", "the", " ", "eqs", " ", "which", " ", "have", " ", "had", " ",
            "the", " ", "redundant", " ", "element", " ", "removed", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Args", ":", " ", "\[Rho]0"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{"the", " ", "initial", " ", "density", " ", "matrix"}], ";",
           " ", "H"}], ",", " ", 
         RowBox[{"the", " ", "Hamiltonian", "\[IndentingNewLine]", 
          RowBox[{"Returns", ":", " ", "eqsPruned"}]}], ",", " ", 
         RowBox[{"rhoICPruned", " ", 
          RowBox[{"(", 
           RowBox[{"the", " ", "pruned", " ", "initial", " ", "state"}], 
           ")"}]}], ",", " ", 
         RowBox[{"rhoPruned", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "the", " ", "pruned", " ", "set", " ", "of", " ", "variables"}], 
            ",", " ", 
            RowBox[{
             RowBox[{"i", ".", "e", ".", " ", "elements"}], " ", "of", " ", 
             "\[Rho]"}], ",", " ", 
            RowBox[{"to", " ", "solve", " ", "for"}]}], ")"}]}], ",", " ", 
         RowBox[{"popIdxList", " ", 
          RowBox[{"(", 
           RowBox[{
           "the", " ", "indices", " ", "of", " ", "the", " ", "population", 
            " ", "terms"}], ")"}]}], ",", " ", 
         RowBox[{"cohIdxList", " ", 
          RowBox[{"(", 
           RowBox[{
           "inds", " ", "of", " ", "the", " ", "coherence", " ", "terms"}], 
           ")"}]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Clear", "[", 
         RowBox[{"\[Rho]", ",", "t"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"dim", " ", "=", " ", 
         RowBox[{"Length", "[", "H", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rho", "=", 
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Rho]", 
              RowBox[{"#1", ",", "#2"}]], "[", "t", "]"}], 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"[", 
               RowBox[{"#1", ",", "#2"}], "]"}], "[", "t", "]"}], "*)"}], 
            "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "enforce", " ", "conjugate", " ", "relationship", " ", "of", " ", 
           RowBox[{"\[Rho]", "'"}], "s", " ", "off"}], "-", "diagonals"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"eqIdcs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{"dim", "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "dim"}], ",", 
            RowBox[{"j", ">", "i"}], ",", 
            RowBox[{"j", "--"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"rho", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "i"}], "]"}], "]"}], " ", "=", " ", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"rho", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"eqIdcs", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"generate", " ", "non"}], "-", 
          RowBox[{
          "redundant", " ", "eqs", " ", "and", " ", "initial", " ", 
           "conditions"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"comm", " ", "=", " ", 
         RowBox[{
          RowBox[{"rho", ".", "H"}], " ", "-", " ", 
          RowBox[{"H", ".", "rho"}]}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"linblad", " ", "=", 
           RowBox[{"\[CapitalGamma]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Sigma]m", ".", "rho", ".", "\[Sigma]p"}], "-", 
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}], ".", 
                  "rho"}], " ", "+", " ", 
                 RowBox[{"rho", ".", 
                  RowBox[{"(", 
                   RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"rhoPruned", " ", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"eqsPruned", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rhoICPruned", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{"dim", "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "1"}], ",", 
             RowBox[{"j", "<", 
              RowBox[{"dim", "+", "1"}]}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "<=", "j"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"eqsPruned", ",", 
                   RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"rho", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "t"}], "]"}], 
                    "\[Equal]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"comm", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], "]"}], ";", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"+", 
                    RowBox[{"linblad", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ";"}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"rhoICPruned", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rho", "/.", 
                    RowBox[{"t", "\[Rule]", " ", "0"}]}], ")"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "==", 
                    RowBox[{"\[Rho]0", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"rhoPruned", ",", 
                   RowBox[{"rho", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "generate", " ", "indices", " ", "for", " ", "population", " ", 
          "and", " ", "coherence", " ", "terms", " ", "in", " ", "pruned", 
          " ", "eq", " ", "list"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"popIdxList", " ", "=", 
         RowBox[{"{", "1", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cohIdxList", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"last", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"elems", " ", "=", " ", 
         RowBox[{"dim", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dim", "+", "1"}], ")"}], "/", "2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", "elems"}], ",", 
          RowBox[{
           RowBox[{"i", "++"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", " ", "\[Equal]", 
              RowBox[{"last", "+", "dim", "-", "j"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"popIdxList", ",", "i"}], "]"}], ",", 
               RowBox[{"last", "=", "i"}], ",", 
               RowBox[{"j", "++"}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"cohIdxList", ",", "i"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "eqsPruned", ",", "rhoICPruned", ",", "rhoPruned", ",", " ", 
          "popIdxList", ",", " ", "cohIdxList"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.812042876027603*^9, 3.812042964583827*^9}, {
  3.8121491758728776`*^9, 3.8121491766349006`*^9}, {3.812326202154378*^9, 
  3.812326202309805*^9}, {3.8123745439342146`*^9, 3.8123746544708405`*^9}, {
  3.8123782524235086`*^9, 3.812378325500885*^9}, {3.812378403156784*^9, 
  3.812378500226215*^9}, {3.8123792243017817`*^9, 3.812379229306097*^9}, {
  3.8382246234133716`*^9, 3.838224624202671*^9}, {3.8382254928575935`*^9, 
  3.8382255179191303`*^9}},ExpressionUUID->"03e6dc6b-57ab-46f5-b5fc-\
afa13f48f5ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["single Rydberg state", "Section",
 CellChangeTimes->{{3.811971059534021*^9, 3.811971074218193*^9}, {
  3.8119761202895975`*^9, 3.81197612582969*^9}, {3.8120319817610683`*^9, 
  3.812032003095702*^9}},ExpressionUUID->"1d12eacb-02dd-4c4a-8759-\
718a234f0ac9"],

Cell[CellGroupData[{

Cell["algebra", "Subsection",
 CellChangeTimes->{{3.8120320134004145`*^9, 
  3.812032015589334*^9}},ExpressionUUID->"e04fae16-1958-40ec-8558-\
2dfaf8a08491"],

Cell["\<\
Single atom dipole matrix elements to be computed with PairInteraction module \
in python. \
\>", "Text",
 CellChangeTimes->{{3.81197110386451*^9, 3.8119711740232415`*^9}, {
  3.8119757764858866`*^9, 3.8119757867270527`*^9}, {3.811976066784577*^9, 
  3.811976068590216*^9}, {3.811978425140011*^9, 
  3.8119784301619263`*^9}},ExpressionUUID->"fa9c2b26-66c1-407c-ba17-\
cde25bbdeb35"],

Cell["\<\
Single atom structure: include two ground states, intermediate excited state, \
Rydberg state. Assume that large Zeeman shifts isolate an effective 4 level \
lambda system.\
\>", "Text",
 CellChangeTimes->{{3.8119760735956793`*^9, 3.8119761470999784`*^9}, {
  3.8119763400632763`*^9, 
  3.81197636915459*^9}},ExpressionUUID->"37b4f941-710c-4921-ae16-\
be49f1c65e2a"],

Cell[TextData[{
 "Matrix elems. reshape H into atoms*states x atoms*states. \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{
      RowBox[{
       RowBox[{"4", " ", "atomi"}], " ", "-", " ", "statei", "+", "1"}], ",", 
      RowBox[{
       RowBox[{"4", "atomj"}], "-", "statej", "+", "1"}]}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "g1"], 
      SubscriptBox["\[Delta]", "ij"], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statei", ",", "1"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statej", ",", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "g2"], 
      SubscriptBox["\[Delta]", "ij"], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statei", ",", "2"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statej", ",", "2"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "e"], 
      SubscriptBox["\[Delta]", "ij"], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statei", ",", "3"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statej", ",", "3"}]]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[HBar]\[CapitalOmega]", 
        RowBox[{"1", "A"}]], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "2"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "3"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "3"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "2"}]]}]}], ")"}], "/", "2"}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[HBar]\[CapitalOmega]", 
        RowBox[{"1", "B"}]], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "1"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "3"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "3"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "1"}]]}]}], ")"}], "/", "2"}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[HBar]\[CapitalOmega]", "2"], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "3"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "4"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "4"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "3"}]]}]}], ")"}], "/", "2"}], "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["\[Delta]", "ij"]}], ")"}], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statei", ",", "4"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statej", ",", "4"}]], "Vdd"}]}]}], TraditionalForm]],
  ExpressionUUID->"bfa9d5e7-e245-4cac-8e5b-26faac527978"],
 "\nComputationally more friendly to define a matrix Hij that describes the \
energy levels and coupling scheme of atom i, plus the interactions to atom j. \
Then just build Hfull by iterating over Hfull and plopping in Hij at each \
section atom x atom section.hmmm this is mixing a single atom basis with a \
two-atom basis... doesn\[CloseCurlyQuote]t really make sense as framed. "
}], "Text",
 CellChangeTimes->{{3.8119767666849937`*^9, 3.811976772461507*^9}, {
  3.8119770210380845`*^9, 3.811977361889329*^9}, {3.8119774099496436`*^9, 
  3.8119776907220573`*^9}, {3.812030058103647*^9, 
  3.8120300939914293`*^9}},ExpressionUUID->"9648cf9a-ba77-43db-b34e-\
3fc23994b2e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hi", " ", "=", 
    RowBox[{"(", GridBox[{
       {"0", "0", "\[CapitalOmega]1B", "0"},
       {"0", "\[CapitalDelta]g1", "\[CapitalOmega]1A", "0"},
       {
        RowBox[{"\[CapitalOmega]1B", "\[Conjugate]"}], 
        RowBox[{"\[CapitalOmega]1A", "\[Conjugate]"}], "\[CapitalDelta]e1", 
        "\[CapitalOmega]2"},
       {"0", "0", 
        RowBox[{"\[CapitalOmega]2", "\[Conjugate]"}], "\[CapitalDelta]r"}
      }], ")"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.811977694380393*^9, 3.811977794086028*^9}, {
  3.81197784455519*^9, 3.811977904817491*^9}, {3.8119779430649643`*^9, 
  3.811977953583963*^9}, {3.811978059781856*^9, 3.8119780938794847`*^9}, {
  3.8119783149808874`*^9, 3.811978322010812*^9}, {3.812030041208006*^9, 
  3.812030046496875*^9}, {3.812030101409261*^9, 
  3.812030151921111*^9}},ExpressionUUID->"780bd76c-8c23-4d1d-90c0-\
c6bee62a908f"],

Cell["\<\
test building the hamiltonian with kronecker products using only two-level \
systems\
\>", "Text",
 CellChangeTimes->{{3.812030160145507*^9, 
  3.8120301790847583`*^9}},ExpressionUUID->"12df9571-107f-4c74-ac79-\
954a47229fbe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]1", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]2", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]2", "/", "2"}], "\[CapitalDelta]2"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H12", " ", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "H1"}], "]"}], " ", "+",
     " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H2", ",", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8120301809072*^9, 3.812030242193406*^9}, {
   3.812030284454749*^9, 3.8120303132042327`*^9}, 3.8120303994139166`*^9, {
   3.812030630722088*^9, 3.8120306480422354`*^9}, {3.8120308617508698`*^9, 
   3.812030863104282*^9}, {3.8120315966550913`*^9, 
   3.8120316124931498`*^9}},ExpressionUUID->"fb181fe8-b061-4e9c-bfb8-\
766b217de51d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812030237354156*^9, 3.812030242521632*^9}, {
   3.8120302954932985`*^9, 3.8120303135118318`*^9}, 3.8120303998924*^9, 
   3.8120306504940243`*^9, 3.812030863797557*^9, 
   3.8120316131481867`*^9},ExpressionUUID->"45983e94-26d4-498e-94bc-\
aa75db152bb0"]
}, Open  ]],

Cell["Now three atoms:", "Text",
 CellChangeTimes->{{3.8120307225666714`*^9, 
  3.8120307558840237`*^9}},ExpressionUUID->"d2cdf636-fbc9-4f77-9673-\
8f236d955751"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H3", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]3", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]3", "/", "2"}], "\[CapitalDelta]3"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "H12"}], "]"}], " ", "+",
    " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H3", ",", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8120307473209925`*^9, 3.8120308353709655`*^9}, {
  3.8120308676428714`*^9, 3.8120308994836316`*^9}, {3.8120312352229805`*^9, 
  3.8120312439130335`*^9}, {3.81203167518322*^9, 
  3.812031706909399*^9}},ExpressionUUID->"88e59549-75a3-4d41-8a61-\
4878bf322245"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0"},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"]},
     {
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", "\[CapitalDelta]3", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]3"}], "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {"0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]3"}], 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812030886670458*^9, 3.8120309027320185`*^9}, 
   3.8120312445475373`*^9, 
   3.812031710251564*^9},ExpressionUUID->"4bc07582-627d-4603-b5e2-\
745a2976b063"]
}, Open  ]],

Cell[TextData[{
 "What is the basis of this Hamiltonian?\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"123", "g"}], ",", 
     RowBox[{"1", "e"}], ",", 
     RowBox[{"2", "e"}], ",", 
     RowBox[{"12", "e"}], ",", 
     RowBox[{"3", "e"}], ",", 
     RowBox[{"13", "e"}], ",", 
     RowBox[{"23", "e"}], ",", 
     RowBox[{"123", "e"}]}], "}"}], TraditionalForm]],ExpressionUUID->
  "11c70edc-15a5-4a6c-99fc-c281a47863ff"],
 "\nThe singly-excited state is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      SqrtBox["3"]}], ")"}], 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
      "0"}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "37d7cbbf-c231-4f3a-80b7-c7236258cfbd"]
}], "Text",
 CellChangeTimes->{{3.8120312779991755`*^9, 3.812031451649247*^9}, {
  3.8120315338940687`*^9, 3.8120315692131248`*^9}, {3.812031748887643*^9, 
  3.8120317823897038`*^9}},ExpressionUUID->"7ec2e46c-8577-409a-955f-\
91e1458a9b66"]
}, Closed]],

Cell[CellGroupData[{

Cell["rabi flopping - two level example", "Subsection",
 CellChangeTimes->{{3.8120320269110794`*^9, 3.812032045999884*^9}, {
  3.812149200707573*^9, 
  3.8121492050945826`*^9}},ExpressionUUID->"a080cd32-ffdd-4d9a-b455-\
aaeda80bb8fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "qubit", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[CapitalOmega]", ",", "\[CapitalDelta]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atomBasis", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsingle", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{"\[CapitalOmega]", "/", "2"}]},
        {
         RowBox[{"\[CapitalOmega]", "/", "2"}], "\[CapitalDelta]"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hint", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"numAtoms", " ", "numStates"}], ",", 
         RowBox[{"numAtoms", " ", "numStates"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hint", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"numAtoms", " ", "numStates"}], ",", 
        RowBox[{"numAtoms", " ", "numStates"}]}], "]"}], "]"}], "=", 
     "\[CapitalOmega]B"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"interaction", " ", "Hamiltonian"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
  3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
  3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
  3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
  3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
  3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
  3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
  3.8561993291406174`*^9, 
  3.8561993339942627`*^9}},ExpressionUUID->"1407a7dd-088a-444f-9a8a-\
fabf91e15d04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"two", "-", 
    RowBox[{"atom", " ", "hamiltonian"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Hmulti", " ", "=", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "numStates", "]"}], ",", "Hsingle"}], 
       "]"}], "+", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"Hsingle", ",", 
        RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"Hmulti", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8120322033613386`*^9, 3.8120322069105406`*^9}, {
  3.812032268489911*^9, 3.812032310948084*^9}, {3.8120323444763346`*^9, 
  3.812032357765974*^9}, {3.8120331602403135`*^9, 3.812033185926959*^9}, {
  3.8120419182485723`*^9, 3.8120419245665865`*^9}, {3.8120420333338375`*^9, 
  3.812042038006017*^9}, {3.812042260076003*^9, 3.812042289399713*^9}, {
  3.8120423724678497`*^9, 3.812042381137885*^9}, {3.812043132663271*^9, 
  3.812043149317305*^9}, {3.8120432532287703`*^9, 
  3.81204325423442*^9}},ExpressionUUID->"904ca759-2ff2-458e-a72c-\
cee32fb9dfea"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "\[Pi]", "\[Pi]", "0"},
     {"\[Pi]", "0", "0", "\[Pi]"},
     {"\[Pi]", "0", "0", "\[Pi]"},
     {"0", "\[Pi]", "\[Pi]", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.812032207259726*^9, 3.812032241695924*^9, {3.8120323417333837`*^9, 
   3.8120323580565414`*^9}, 3.812033081771367*^9, 3.812033156313499*^9, 
   3.8120331894534035`*^9, 3.81203335567986*^9, 3.812033407982769*^9, 
   3.8120419283079996`*^9, 3.812041981480033*^9, 3.8120420397464933`*^9, 
   3.812042346915263*^9, 3.8120424846827636`*^9, 3.812042517294767*^9, 
   3.8121492427610426`*^9, 
   3.8147932186052866`*^9},ExpressionUUID->"7e244bf8-951a-4a69-8268-\
cdce28b82a09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]B", "=", 
     RowBox[{"10", "\[CapitalOmega]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hamiltonian", " ", "=", " ", 
     RowBox[{"Hmulti", "+", "Hint"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqs", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ics", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"numAtoms", " ", "numStates"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"eqs", ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"ics", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
          RowBox[{"\[Psi]0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sys", " ", "=", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Join", "[", 
       RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "\[Psi]0", ",", "sys"}], "}"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 
   3.8147937805756316`*^9}},ExpressionUUID->"5790b34d-5b13-47bf-80d1-\
374b73cfb1b3"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8120363142204657`*^9, 3.812036360455145*^9}, 
   3.8120364788619933`*^9, 3.8120419439446926`*^9, {3.8120423368862314`*^9, 
   3.812042360445403*^9}, 3.8121492464971733`*^9, 3.814793151560233*^9, 
   3.8147932240436115`*^9, 3.814793567653468*^9, {3.8147935996063557`*^9, 
   3.8147936784214134`*^9}, {3.8147937233838573`*^9, 3.814793738964574*^9}, 
   3.814793781149295*^9},ExpressionUUID->"9b69a9c8-5f2d-4ed5-bff3-\
c15a0696614b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"g\", \"1\"], 
SubscriptBox[\"g\", \"2\"]}]},\"Ket\"]\)\>\"", ",", 
     "\"\<\!\(\*FractionBox[\(1\), SqrtBox[\(2\)]]\)(\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"r\", \"1\"], 
SubscriptBox[\"g\", \"2\"]}]},\"Ket\"]\)+\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"g\", \"1\"], 
SubscriptBox[\"r\", \"2\"]}]},\"Ket\"]\))\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"r\", \"1\"], 
SubscriptBox[\"r\", \"2\"]}]},\"Ket\"]\)\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"soln", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", 
            RowBox[{"soln", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], "2"], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<\!\(\*TemplateBox[{\"g\"},\"Ket\"]\)\[LongLeftRightArrow]\!\(\*\
TemplateBox[{\"r\"},\"Ket\"]\) Rabi Oscillations, `` atoms, \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)=``\[CapitalOmega]\>\"", ",", 
         "numAtoms", ",", 
         RowBox[{"\[CapitalOmega]B", "/", "\[CapitalOmega]"}]}], "]"}], ",", 
       "Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<plot_rabi_flop_``atoms_``states_blockaded``.png\>\"", ",", 
        "numAtoms", ",", "numStates", ",", 
        RowBox[{"\[CapitalOmega]B", "/", "\[CapitalOmega]"}]}], "]"}], "]"}], 
     ",", "plt"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.814793346127821*^9, 3.814793377208661*^9}, {
  3.8147934491781225`*^9, 3.8147934586452117`*^9}, {3.814793520037032*^9, 
  3.814793540080923*^9}},ExpressionUUID->"fe8983ab-8329-4be1-9dc4-\
bb7c2e921abb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
WFpO8EzqNmOGczJedJmK49Hf9K1uN2M2WtqMg5NAkUIW/WZwMx5Gl/tL7yHw
J5LgF49uhjRXQ1OPNAGWNfuODaQ0Y7Uxii3kCZxo/OBlXNwM2+98OlwqBEos
32+7Mt4MmcY6joRrBD6N3L5tyGhGyOQ59kZjAnEWR76asbRg9Int9p7rBDxv
tF29x9eC70XGHsFWBBwH45Pttrfgy/i7JmV7AjfM7ecfSLbgfON3+boHBFRN
ucM8jrUgTFxE0dudgMLf3hHv0y0gzF/8+exJYI9xuoK/Vguqxs0ii58T2GCo
/jvUvAXraA7PHr4iUHfFc0u6bwsycwRybSLJfNsvWnwKbkGXWtW/yBgCmXoi
ublRLRh41OudHk/gtW6hXulncj1X3vSdFAIezX4fKgta8LVRZUAwnYD9Rf2Z
msoWqKYFGaZlErh0YS64vYu8X19RxjqbwJn6Cko3pQURHlmpMV8I/Hc+WK6f
1gIOwzkiO4+AZK251/B8C17MCHIkfyUgcE6mdWJVKyZDXPlcvxNgr2YVn+Rs
habM6ObDhQTmz9Y7zG5pRc2pmN3VRQTGfkb8WBRpxbA2r75KCYEu1bubVu5r
hatue/H7UgI1FUevs8m3Iuba17vtZQQKTrNnc5xoRVpdtu3UDwLpP9pX8aq3
YoTbZIBeTiBS5YPOFl1y/6bQ1voKAgGlDnFCRq0ovSVm8KqSgJuyypTIrVZE
y7D4yvwkYFPMoyJp14r6CvX7X0hsevxv4L5HrdA9pScj9IvAxcKM/kPPWrHq
YlazOYlVlB7L/PeqFe0X/1j5k1j2u4aH4rtWiDz8vCWMxGLHtjUpx7diukmw
/xmJ+b+OiKhmtMImW7pfj8RrjuTanstrhZmp9D52Es/kepVol7ZCa9yzJYK8
f1hel+dyTSsK0gJom0j8O0fU1KCtFbc2y72yIuP/dfjfR9O/rTgrwvErhcwv
/3MRq8UYeZ5TU9ovMv8UmZcX7k63Qm/X3fPVZH3CswyibZdbYXJooDiTrJ/v
QSn6/XVtiNS+uuUBWd9HmfPHH/G2IVbFwlyErP+9Az8Dngi1IYJfISeD5Mco
PeTPM4k2mGDj9h0kf1r7bkj7HWwDb5Buqh3J76G9K+tDTrUhte3x4zJSD6LJ
DcLvz7dBec9sXzGpF77dUVYxV9rA4qGcGkPqaVpckSvtbhsMzLiiOT8SUOpT
rvB50AZTuR0BZqQevd6rulp4tEFh6vK2EFKv/Hw6hOjbNjz7kKsSRurZsO7K
B9a4NkRFSC/cIvWe4GNk1Jvehpv5hk+2kP0gx3q7LqysDdMP/Q/xhBJ4/M36
2YM6Mh5tLjuDIALl9x1xqaMNWRGbMp4FENCjumdw09owcGGDjJM3gQedoS+9
t7XDMenH9gZHsr+CI87cEG9HVjmjj8+WAJt23PLJg+3YJTNcIX+XwNvKDKvl
0+0Qt2yZ32pG8pFdft7Rth0Rkp6seucIrLCpXqvzqB3tj7/+CjxD4KxUY+FB
73YkS+xJyThBoDOm+8DE+3a8N5aOfnqYAPPlFJf5z3YE/NHLiNlG6k19vuJE
czvmpCPftPGR/K1hcRPubUddopTJGAcBoUfraR1T7bj3p9Mzg3wPlSxF6i/s
+I3g8+rCSX+pcFXRCsD936gNXMlyNZKKymVdVaEnv3F5cVjZKZiKjV+vsSz4
/oZvgs2Qox8VUQdvWufE/MbR0S9HOR5SUbT9sda+2t/wuXTVN16HihVzKRu3
iXWg5khI9hNWKrbVKE/iQAfaf3C5Ks9MQDb6d4u5Qgc4hWrpA+MTuK629l36
uQ6cFzYbaWibQOVbUzFlxw7cSpOc1kidwMsjAkduVXRg2dL3V8P5CQi6eJl9
udUJs/5NE+/dx3FYS+h0l10nfrX02jbYjUNz12dJ1sed+Dh2Smf0+jhcq/9O
nH3dCbj4F1erjaNPUPFBT34nRg5NfLi8cRxJ3yd9V2/owr6K6Y6s0DHILRvn
XEwn8fJ8ZknIKDTOFT05ldsFB82xLM1nozB7J3xevqQL3M6XKOWOowiQ7xna
2tqFtKVbyS66oxixuibQt9gFdZbmHSt5RhH+R9fF+lw3rj8Zbkl4NgLWkrPK
fuPd+Dp3iTXgxjCqn8rWlu/phairC5vZwiCEA8bmkqh/4Nt3Imz0vz8Ym+nt
aZHuQ+p90doGlxbk3HxZclauD2YinSuunm+BW5tSQuHRPihafzq6uLMF/F/e
30063YeIpyfkgyuayXnmGtNFvw/rWHisBPmaETbVKrDLuw9vTha4lWc1QpVe
o2Pb2wcm84nER7Z68Jo8+m9ooA/VvI832RfUoadeSlB/tA/Uo1676m7XwT7z
Rf+p6T6s1f8rYlZRi0grNVuB9f2A+K6WjU9qwJgoe1kk1493ueVbpldXIW70
6y9O/36Eun8Jfatejnsh50UtA/vhp7g+R2pVOeRV+h/+CO3H89LAC5u//8Cv
9+z7XGL7wW2yWn/6wA/Qta68HMnth/s5y45BgTIofWFcLOvvh/+Qmveu5WKw
mfukCo/0kzwPJTp9L0bjxu2rH1L7wXsp21japRjXLU/lHJzrR8Xod6Uf80Xw
FQraEsk5AJ+BU95Kc4X47XGw20lhALHP+s9ckviGGOkfh1uUBnAq+P5QU+ZX
3Om+7C+tMgBGk9rWPUe/gkXeDUOaA2jNs/e/rp0P8dHaaB3zAWw2+XBF8UUu
7LXu3DjwcgBP6HlH/CSySZ1/IAYGBtC2JlKwViwdxy95dPePDKBxW93WINc0
2L40quqjDmBhkDWYuzMVraxbPvyZHQCiN9/6LyQFERRvw64Ng4ijhjRe2ZWE
/ZmWNU2yg7DfdM/53+s4GI+c/tqoMIgrVhvlStji8FpENKlBaRD+48vO19xi
wQjqfFqnOojPD2TEqPYxKHDSOFalPwiFzl8WyXZROHdyf0rJ00EoBT4rPBrw
Fo9d2N8WPx9E+x7XP4XZocjMpngV+Q+Cpyfr13hPCPgkI00LQgdRnlP9Q+VY
MDn/bdyanzqI4zGn0taIBoLz9PjavI+DyO/gtB69/hrHXSunv+QMIqc2vPlR
6ivE0d0asosGUWC0dDNHJQB3WuneH5sH4SEXn7by5AtEcNU6Zv4ehK81M2Zs
pQ/qVZPNM3oGIZHdoaJY7Q3Zr6bH04YHsVt6dK+InReYkU0ziUwy/43WIRu3
PsH+3xmDH1gpSOh1dDfnd4cxj29TwhoKZuP2B+7Z6oaypyoZcRspsHmxT1zE
2gW+t7JvRO2iYP0GWZeyMAeMHk/zXr+HAi1Ho7jwETuc2RKf7HiAAlRPha8/
a4sVFUFUDdKnGF2f3WPleg/GEb4bc0FBi3hW+b+k2yhweHpI9BQF+SJJR77M
WMBpl73j3HkKym3r/m1aNEPrwu1Qc10K/Jdzx/M+m0C2ySy/7ioFMXIrNcyF
jfA6+VrXEWMKigfTl9cIXgPN/eJS/HUKVIXffblupAfNK+o7uG+T8YQJyvuM
XESK9EllF2sKhje/1XucrwU2tqPmQw4UFLw4PxcSp44bvYe8tB9S0NFTOj9n
chplOXsSv7tRwPJ6s6pc2gmI+Iv8kvQi87m9Irdow1G4Xd86HviCjKdXTHZz
pwy6j/FwLgdQoGGpkrPvxV4c4WOXtgymYCYuw6Y6dCdCx1i1W95R4Bn2dE9a
AS8YJXN2x6MpCAraPXnNhRU6YfQ3KQkUVPs+UXH0/KuUZTPyhT+VAtG4YZ6G
omAlLrW/v90/UiBg1n79zbN+pTs7fi+M51DwN/2lQoTrCvyaqRe6/I2Cqz+5
c7s8+CBZV4nSYgoUey5O1W4XgVdCkcn+CgoqnzfZV8pJkXNtrsfbagp0qKW9
60/J4oRuZvyqRgpWE867HvoeRYRUYoVVGwU8eqmPKbMnwFwZNdLRRYHui4fG
fvmncbUzZP3pPgqO+afxKq3XQG7Wy30fhyh4GHGl0X1aC/w+z84LTlDwLVZC
cEpKB3YmrjbP/lEwJph7ZD5FD/s3WmUbLFLgKnePu97NCL5DN9oqVwwh0y7x
i/aYCUYLDOdk2IaQyh/J2HDEHPF3NRXZeYcwHhqo8k/5FlacOm3ksGUIhird
YkKLt2EsqOT+R2gI7L9Yb23uvAfBqn0/ciSH8OAKa80Rd1s4x4gN7dw/hDfC
13aPidmjzUlonZ/MEEp5Hre5djngtSTHOTOlIQw+GPt73tUJtOVVVrUnh3Bf
8YD/s9sPodnGDFBQG0Ir516p8FuPsM5rvJlLZwjLceBIqnHDDYMBhvOVITxx
tchzHHJHmWzXForhEDnvhsxJsXvArb9K/9utIZgkitaqW3qCcTxlwMJ1CCLd
6y/wv/HBt7ixd/efDuHjWfFvu3pe4Amb1EWv50P4/PlJ8uB+P3DWpxbHBpL5
cG1Z5TD0EuJG6RE9H4Yg6CNUoNjxGuMlVN2J1CFsPbDJx+J9ILLED3AwPw7h
1d7vncbmQVCiZjwU+DYEz/1357MW3+DSo4+XdeqH4F8grZJo8BaCf+lcZi1D
UJOeL2RHGPpUDlXYdAyB88/tdXt3vcO9DZ8Ovxwg+bj8my18Lhxe7z7z/Jol
8++IqnhsEYXsvC/V2DmMvY4OiUUhcXAWmvXQFCexSPK+KrF4HHf/76jB3mHs
GTgbEpkdj2rVvCTnw8Po2G67MqojAQNt+V7ZasO4Kd91vFkhCXyM78f32g7j
XL61Upx6OuwPlX3mLyXngISg5Kj2z7ghuyPqVeUwNjzQn5xQzsZlOZcXG2qH
4bSfnWd3ejaOHpE1XfF7GNGGRmHmz3KwQjmOi0odRvt1jqPNKrl4eeGp5Y+t
Izhk3Sz4efQrkq1VdtjbjmDi3UaVoYlihNtGrSfuj+D8nPD2OekS+NkzGbce
jeBPiGGzrX0JrB98rjHyHkH1YMe2cGYJ5N12PVSPGIFmhwlHPncZyl6uahX5
NQINZ6fcYs1y9KaXvWjYOYqBeMOP3zdWoX5i1fghiVFsU5p76mhYhSKpUxpB
UqPwpv4wfZpahajkHxv05EexsYKDGq5WDdOEcr8ujVHsyyyWyHxWA8r7ypdD
90exXrXq8o119ZjwrQ5crBmFQGL79eaMRixYNr/b7TyGtEq+yQ9a7dh7Yu3S
ja/jUGnPHuyO/ovM5BSJ9qJx8FNy+L3y/kKWT+uCWvk45l5aeO5p+ItjQ6Fx
exvGsbqRJ/gmSx80/fao0yjjMK/dMJBu2Afb3+dCnXgmkNnsfkZnaz/ybIIO
+d6agOi78px/vgM4E7Pz5sfNVCx9kJltJ/tENpRTvFyQikPC/JtqLIaww39h
oGMnFS7T/FlZLkOYd2oxXSVFxfatA+4X4oaQduG5od5xKrIcxLjb/g2Bl5Wu
u2hBxeHu/R21vsPoNSpSUcun4rV8ewIli+RBN22lYSEVzx+phoWXjSBXPazE
toyK41EBCoqtI+Q6++PhtVR4OJhXKM6N4BSX5DGij4q3DIkn8kqjSCl4KfNm
PYF3f09mjJaO4r6QkchffQInXsdusPo+BlMt6UtdJgSsAuNyxqrGoOnB6tN2
g/SF96NOaHWMQXwkll5jTfryJ51l9YwxNH8eLsp/SsBCUVgpff84pDVsjYJS
SV87pufc+HYcgq4nA1+Svi3DI+V8ZcI41mbxVfjkEJCZ/vIg/tM4ejZ/2e9O
+sbbX4o+baoZh2//wuLdZhKvdtGvWRrHsLNn+BkmgVbNifRggwmMXtprEc1C
g1rnAjcLyYMxjXeF8Eoa9I5MBWnZT0BddPDwVjYanl/XpCX4TEDk+bP3G3lo
aKnuDpDMmUC9TvWdRTEaqDZRUQ/ZqDhN/bzmoSQNWWkfOHV5qPj27H3U7B4a
jEpEzm4iefyQf6958gAN7GKPVp09QMXjHdzHRhVoMDXkfupB+hupcd31bedo
GCvZKyMVRkWujkahjxYNpxhndIVjqTj5XdlO6SINbL9NOidTqLjqf6Az/jIN
g1uXvh7/TvIovS7F3ozc/0J94UYPFXxvlw0lb9Dwlz/Ax5RC+itWBk+XBQ0P
uTUylKjk+Y19zifv0XD+v5mjoYtUUOy/neVxomF03dBs9VYCtt1ZSz8e0sg6
lJT+3Elg8VRSltNjGlJGfXYmSJL+enPw1r8eNJxes8C+SPrHk3lWoxn+NCi/
N84VPk+gdueNCLNXNNDqRY9s0iVw1Udfe3MQDQ27BvaNXCXPv6aW//gtDZU/
61r3krqIWhTxORdHg8xw6YotDwlI3RBQYv1Arl82mGS6EvhSy/XvcxIZ/z5l
iUJSJ7WRzCuCGWR9MllLO/zI89kmOeo/0hCSEfpH5jUBivVIscdnGl7INKbe
CibjP9G6eyyPhvnoygLLCALeydXdEd9oGG4++P0w6ef5eEtfaRfSoHExs7OL
9PtSAxlzeWU0XNVqIApIHeZqJKTdraAhwP9u9FwGmW92uMnOXzRwTvWMcX0i
7/d6/tO7jtTPfo2G2lzyfqrro2ONNHwMOy59/ysBGz3Hg7RmGpxPFmbMfyf9
duGdwdg2GvKsDA5dIXXrLWn2Vq+DhqV50/DXJWQ8r66cW99Ng/ER0ZaEMgKR
c+dZC3tpUNBxKntTTmCP6els2z4a2vzdtY0qCeT8OnZLfJCGzWVvb678RUBZ
RkaoY4iGieYb4+5VBGre7W7wG6Xhkll7VUc1gcurdniemKBh5pDHFEctgYE7
/ArTBA1VR/10t9URsG7ZMJH4jwZJqnHPinoyXsWV0frTJF+eaY/LSOydMKez
cZaGl3U24sYNBHi5aGxl8zRscreubCFx43efZ2qLpD69nY7sbCTw+o7Ymrpl
GgRWVbmpk1h7W9FTnRV0DIu9DdIhMc+vqys7VtHxpuyc1TESNz6YdjdaS0eP
gzf7yv/vlwhgGVxHR3PrIZNE8nzt1j2ulhvoWGNxylaKxDyePxYJTjo0+ysV
X5LxNcoYuzhw05G0mllaT+bzum9+fp6XDt3XF1fTyXy1X71xcuOnY9cl5xW0
GgLcx6VnVwvQwff01bcasj711F+OL7bRYd0o858PWb+A99enN26ng1vXyUWM
rK+WBot98A46jj37GhBJ1n/jQti/baJ0iOG5yyzJT33SYZtoMTokgxLOSP8g
91+uJ8Ql6biRzTV/upQAV87qiYP76FDbsADuQlLP5lG3vxygo/XyPqLsGwF/
3qOjxw7RIcwdlqeXT4DTxnrojDwd7a/9OrZmk+uF19+oUaBD/JHKefUscn1t
/ID2MTKfVz+3XyP1ySHV+dfgBB1neuOFBZIIbBg61WWnToc0nxKx8R2B6jd/
rs6dI+/75uKpFELAV+Xh78dadFRuPyGpEUhgfUxm63NdOmSPzc2vfUGA3WBb
Q6QRHYWRlSWrnAj8Wp9zXsyUDpHpE+mH7Qn45GvVJpvT8VKVy+uMFYF1W7yq
sm/RkXrwuR3ndQJsTbQfVXZ0/H0xkS9Fvg+V7i9ULjjS8WGJ19FCjdSTtHhp
6wM6eNoHBb1OEljrf63o7yM6Lv6N/nRTnsAatfL8mWd0uKjVZlcIEVhV+C5D
NJwOpUzLT1sGqeg4pqLaG0HHwzEfRk8XFRn543/CoukwviRn+LSZfC9zFHl4
PtBxN/el0t1SKj6m9dqzZNFxJHtF5tdIKgzDRY90V5D5GN3cf0ebCtmt1Y2h
v0h9et8slFOlYl2o/W2dGjpCHVYW9ClS8TnwR3hVIx1O8n/seiWpWP/i5nJe
Nx1dHgdr7y1OINcppSx4kuQ/WObnfNQE/GcuGmgz6Mj1NBcZDpqAmQNzmmOO
jqrRa1dzvSdIfs9JeC7RoUKZTma1nsB1C+K53bp/OFN+W01BcYL0FTLntYT/
odabg3G6cRy3Zb/+Xqf+D4PGUh0CQ2Moqm9JzT33D3rHBjSK28aw6S7N9abW
Pzz6NtZ6rnIMhfFi4j90/2GsNuUaf9IYeDcH2LoZ/4P/0G3zG7fG8HXOfP2M
wz/sPtz0g3OQnJMKORUHov5h8wBXLu/PEaSomUYVMP6BPvTRV06DnE+kdiph
7h/OmzsKOP83hALOP52FC/9wjGXN9oxdQ6hvMthczDIJS2ele1QmBVMGV/xL
2Sehtn+leSXp05RstVwqt09C12HedRs7BfVhSpcbT0/iS76lZ8W3AUyPbd1I
CZ7E5yu9vw9z9CH74pmVQSpT4HyF4ctq7fBWz/UUPDOFTUfTY+hC7dA/uZst
Xm0KTz3reoP/tWGFzHqOHM0p2B3MvskW3gZNnjr+9stT8Oh8pv+aaMVw/aU9
gnenMKj+oCrsbQu2at64EPdmCtuZ1o7GzEZMnGprkgqdwmijq/yFpkYUKape
yg6bwstj60OvJTfixr4918ojp3DRIKm34HIjPm2gmg8nTWGbWwxLVU4DNKoc
HkgVTMHeZkr74oN6uKp6Rn6mTKFTTSfhhUQ1Gg0t9KVHpjAn1nLsZ08Vdjmo
C6SOTaEk67KHZnAVfkVzB8bSpvD67KLOoTVV4Ft47/V6fgoRnk0H7438RGJa
zl1rzmmwPtsaK1FQgXqe4aNSctO4rlXb+C22FCK7q2Y//DeNrvG3dp3mpXBA
erbo0WnMiR+PPy9eiq137A9sOz6NT7sm1x5JLoH5DxZR9rPTEFtk6xDOKcbs
fQH2YYNpSPq8Sxz9Void3WfbYz2noR03tbKIkgufkqMZut7TiL3Ybd3kmIt/
H6S81r4gzzed0K5Ym4sSW07Z2wHTsGVzSL4o9QXmbI0vD72bhvEGu52b3LKR
KHPlTHHmNKZ+WnNMaWdho8DZ7XafphGxI5bPhv4RTktHpnflTOPLuOB4Z8BH
nP0pGOv9dRrx3BrejxszMWb4Z+l8+TRuF+9W2FmSjv0+N3N6OqexsO31RfPL
SQi2uuwX0DMNReff6cSnRCzrqJkr/51G8/yvV3bciagX3suTQJlG/lSy5J3G
BNhkU+/epU/DV/Z8hvadOHSE9aoIT01j+/Y9L5rbYqHsVr+tgTENnWlHWYNT
seBRz/opy5xGdERrzXPxGHz+4yDGXMPAe6baGjfWKAiW32CmrWPgzfD4bN18
BDxT9JqMNjBwc4w4W8l4j0uOCu6l3Aw8njHoUFp4h5n1i10+ggxoDLjwvpUL
xRH5p0EChxhw9io78MjpFVpNBeTeyzJwJpvDWLYkAHb+6W075BnY81iUN5Mz
AKmD7VsljzHQqNo8NXPdD9uD9kXLnWYgj309RVzbG/mFJcr5qgykuxg4Kux4
Br0xvQFFdQas/l2lTUx7IkD5icQpLQa6HelVp3M9sILemnbxKgOH+nxmaQdd
ESF453ybPgOpD+nKX1Qf4agqK/2qEQOBCbur+u89hH3kXllTcwb8ziyJu4zc
x8aqopbBGwz4z63Om1B0RBpD9/6tWwysT05f3RBtD8o5t3zre2Q9YlnrpkNs
8MRpk/6UNRnfoOaOo3usIRyfvHjfjgH59/2/J0Pu4jKz+bjrAwb+jvqUND60
wLSEZd+Khwwc2ez26D/BG3h9cdnD6xED6yK/EW87zVCVvLvC7wkD0TcP+H64
ZwSL1gILbk8GTifIG1z9cA2rVuiwv3nGQDHn5k9s2y8jet9IyhYfBnoJ7taP
jTpQuvL4XLgvyYdR23mdHxfQ8ZSXEH7JANF1OqBz7BzuZyYGxL5i4En7WldG
pSr4uhQPSQQxMHL/p/K/nSrIXNvUlBzMwKNbgRv9JgANGQuH/W8ZOH/2U1yT
/38YMVzkz3rHAIdNIzVG4hC8fF7nHo5g4FWC0dwPq90QyZG4mhfFgFSinvjk
4x0o+Ptt4VgsA/aqd2/umePBNQ7t90XxDKwOtZ8qimbF7H9DSiqJDMTnrM09
u2tAKcjc5U9FMgOn7rwTuhMRqCQdwP1EPY0B09dpE0K/25RqviaI1mUwcIzf
lK64dkHJcujoD+0sUi9f+9kfFnJhDW/DjdbPDEQ85Sr41iqIGKUbbFe/MOC+
302er0kcsFxI6s5jYG5h5q1uoDS63gSom3xjYIf3bNVglhweFItNDBQwwJX6
h5WzUhF8E/n+FsUMhERk3NAaUcbHLVrS46UMKD0UHZW/dQaaKoMNVuUMXHp5
cDjeTAOjVs52k5UMaLvMi54Y14LXO65N96sYuPK6WrGj/yJEK+Jy5msYaFJm
dr/aogf97XVzrE0Mcj6N59urYAhOAdvsry0M1I3+3suhZIJi3k02Du0MsH4v
NNHyMIP4umvDw90MqJUWR25xskD7yqXYmD8MmJ8JV/TbfRs+S1FG+v0M8F/S
i0hdvAtiktJaN0z24zlxw+tstoihPn/9fIyBipizDl0f7KAzIqV5ksqAd5Sa
xZYrDsjtsf2RM8lA3OWooFraAzz5ufTp/RIDTu9XTho7u0G2LNpKj3UGMRLX
RxkB7hgqUNnLvWqGfO8c+Iwyn0Djs0/M03Uz8DOKYb5f54lNkfyvbvPNYN87
ftkIMR9Uvs3TENs8g4SDa0idv4BzkD5br8AMTDl7/DHsi57nMa7awjP4+Ym7
4G/NSyTa77+nsGcGBn71aZMsgbhq1bB7UmoG4T67q/QaA8FhaT+YemAGV7vF
y/kSg2BrlK+/4/AMOLqb+4KMg3H07Gn1tcdncH7jnmm/1WGgqoysKVaeQfzA
FoW3c2GIgm+J86kZFOt8mp+kv8Oqw40K1LMzmKxuKX5NvCfnVUPJFt0ZPP6y
L1yCKxpuW1kH/C/PwOm72KbLYdGQ2RQXqXptBgflIl4lS8QglH2U/5vxDDTs
KHpZqrEwnXZYHXt7BgLKb1fLxsVj+pdfn7X7DCQKIniEi5LRtb7FgukxA+HK
cxMPTFJQoiFIPPOagQ3L0uaoVakIqE1eiHgxg0cq/3Vc0ErDnsYKvpo3M4h+
ZDK4czEDhr9Zz+xOnoGLxGRFfEsWyoccUv42zsDshPldfYk8pEp+P3i3ZQa0
qPE/9oF5CLy1Kne2bQaznQZ5V1jyYTz2uoyrewa/r0cqP+3Kxzw1o1txaAaF
0txRihHfcIAxwhW2MAPPIhGOHaJFCF1laK+9axY7zsXorttYhiWzzYcbxGeR
YZIefk+rDOal9dPnd89ilaLkR9FXZZB+cvL+uf2zKF1xi+bM+wOVy5LOqv/N
QsPt7duabeWYmZ90VdKYRcWp4X7PI5W4RH/+Yo/9LDitIp54plaDtyc7ZkXZ
LA7bjEsc3dWE1Y/cdRRs5qDuxqYgmt8DliTDjD6eefyxce+/0DGA8vG2e5Gb
5mGy9cNJLvoAfKUv7NffMg+/0cW+wrWD2Jx7Mq1FaB5auvyG87KD2F8hmVIp
OY9f5fYt9f6D0B/8l5CuNA+XOy79I6Agb+ezCGfLeUT5yt/gCBnC4+sshvJ3
56HwwqxxPmUIKklOQlNW81hxlGuyrYicH6XvhN91mMfH1uRW49EhDONCmLHb
POabA78kHRsGv+G24NPB82C7vO3eXPcwbMMy/HhK5nFN6EGwLc8ovjDDnpWU
zWPT35tbcnaNgmno5W5bMQ/prD/fBuRG8UzUwKGxeh5jkYuhK66NIjyV3eB1
2zyEMtVdj8SM4kfBdSmeCTK+pskmC6kxsO+8IF5CzOPpPbP5k4pj0PI4tsP2
3zy0jxFxazTH0HGGl69xZh5LOWKBJ6zGQK0vWni1YgEbblTsfpY5hi3926q4
tyyglCdVRHD/OAxOrf1RvHUBkmeObr+oOI6YD/8KbIQWUFV2oOuuxjik7vzM
ahBZQJSLYeE5y3GcmHYMe7VvAXMOnzk/xo3Dcm3jLe6TC7gdrVjbxjuB73u9
2bjvLeAoQ/PMnY4JyDVvrnltvYAb36Q3LQ5MINPlwys+uwXYCXD+siYmEFNT
vnXLgwXIbIiLZ1lFhbfV6n3CTxYwPilmVbSXCu1PTy7sC16Ai33ajxwHKqqu
8fBnhC7AUl5X1PoxFSqrYjqk3y3A1LK3av0zKuR1i81koxawqK01PRJCheDM
ssPR5AX80tnz/UQuFUNHHoWpFSxgy6nN100mqTDu32BUVbSA7RQDpePzpH97
ES56rnQB/83fDGNlJf1p19dUrcoFvJ5+urCXk0DW4/kCvcYFyHlAd4cEgb0S
Ph6/mxcgn0nI8e0jEFcnoHqtbQG+Wqn9o4cIhOxQaDDsWgC/yu3y40oEXEru
91+nLGAqd77m5UUC05ZrE4eGF0D5yCXy7jKBe7whd26Nkfkmhb56bkDAxDxn
+g5tAa9OrRznukng9JrptfbzCxjZeNO79AGBovSn1dPMBficXV0w7EJAQY/v
1f3lBYTyCl6muxHkd1tm68NVTBi6TjelehPgPmsr9YSTCddQjsiaYAJRxVzr
j3Az8fWLzLuLYQSkFdJG6LxMdAZXSeW+J6ApOZxgIsDE3pz3O4TiCHRHenoK
CDLBKej+QugDgTubRc0btjMRKvovnEn6e581hjtP7GJCWul9ziXS/ws8Xlie
FWfC9Mu67w0fCSROh/Zk7mZi9xvCYu9nAv/dlftuIcVE70BXnlkOgYqBpnc7
DjCRFqWc4ZxL4JK+jXP7QSbK7wifss4nQGnivBIgy8T3+JMOKt9I/12qxs9y
hIn79la+3oUEAo8MTX05xkSz9uzN2SICIllPm6zABNFnXn66hMDH3SJZEspM
3HmlGmFXSuB4dGFArwoTL+2uDjwuI1C3xcAq5AwTfQmP/Cx+EDAMmD93/iwT
Xj/L/aXLCVDXhkqtPcdE/AGX7lYSP3I9vL7wPBN6feH3rlUQ2DDTOOKozYT2
oTKZAhKH37Ou3K/LROI1UaFlEu+lcHyg6DHxeo3Qtu2VBPINUjwjrjIxLXJm
+zYSq7Woml8yYIIftzczyPXtGhRlTmMmShZXzKST+GaZx85yUybW6oUnnyIx
4+hOlsfXmbDg/7s9n4zH81NBz2ELJpxefTy+gcR8e/W/T1gyIaeza/EomU9c
zNy7+LtM7Az0OqFG5iuzNcTZwJrc7/57XoasR8kr2Sub7Jh4WEjwMosJaK9r
lK9xYIImp3I/mqznXzcrfs8HTAhx+3HtIuttPbth+thDJo445Fd4fCewbJXc
NPWICSPOGZ+irwTp689kpboxseO+rEpHHgEho8EAcw8m2CP3dtd/IZDa+sRK
0IuJdc5liMsmcFRzh2azNxOBD8Uv6Xwi8OvHdynfF0wsaX5h/5tJYOTz7MhC
ABMJsX9nX6YQeCAVXPkpkIlch0drsxIJsMXJfLgdzMQwfa1RZjwB8cB75p3v
mPgcER58IpJANvuGk4ERpF51JTSb3xFQeZK0Uz2aiT+DjxaVQwmY2gz05Ccw
EbPUP/spgAB92P27bRJZP/HbO3N8CbgZC4fvSWVisyIxF0j2U+T5q1fCPpJ8
/1t27HMl0LWvvsnpGxOXrtSy/bxD/j/G/WhlIRM8C4XWy2T/miZdFPcrZqK1
X65xkxmZz662B1HlTGi0rbjZR/Y/Y1uPUEU9E0lnRU/MK5P6+C1codXExNkv
G9sOKJJ6CzGx7mhhoviH2MlT8qT+eQdLJjqYkE05EcW1l+xv9vGbfIMkP4nM
QBFuAs0V+7gjhsj+eHpnnR47gVBPq3yJUSbOe6lb315JYDvr5IajBKl3J8uD
stNUSM3OfTSZY0JF/3Do6TYqTlPWMtM5FmH3Mn67yxsq1sWpxf+3cRF7eTWb
sn2pqDZ5oVnCs4jQQ7ce1XtQcbGbM7pl8yKqLv8WTrIh39fmTaeZOxeRlxL6
bVSdioclogFqcotI8nlK/zVPfg8isGvAcBGVvQpcbCcnMOk8udbEZBH8YdbX
++TI74feh7Fus0XscvZzi90zga9cXJ/aLBaRyXPhcwf3BMrdek5U2S5iSZGj
fWfvODpNHxlleS0iJl1it4LDONZIfA1zS19ElPzrdR8DxqC20urxYuYiZL2C
adnuY/DtFTF1/rQIj1ur0hNsx8Ad6rPbPncRJyJ2S2vojEFw3dXcmyWLUL8q
lJ/MP4ZDY7Mtmq2LsHd/N1gXMgqDDDluoaVF/N6Zu8HSdwQ5V2c561mWEJAt
9jTeaQSca/I3eKxcwmZGd1P1jREU6SuyjbAtwUZzRrv3+AhE2FWWP/MuIbDr
2Dr+qWFQzC9MaOxegkOL346uS8O4t/XOTxedJXRpG9Qacg7BzTPavSt5Cc++
muqWqA8gbVjoHafGMnhFlMJ6X3TD+72ncY/mMg41hf41vdoNc+0JsfQLy7j+
/WQzIdkNwW/fMs/pLeM5V16oZHkXfF5eK/c1XYa22dUzIqxdsJB7S2d3WsaW
53Z7gpw6IPKUT3VtwjI+PbrzesP9Niz958LRlkiuv2Zv4HOmDb8n+hsTUpZx
4M7KEKEtbQjQ+2Rw+uMyjixUennmtWJ5j7ad57dlZCfe+Wq22IKuhpcRK5uW
waFkMB3+vBm5XjNmTS3LmBlTK39zrRlBR412x7Yvw9T/2EDivmaox+//rNyz
DCs5/nPCjU3If1Dz031kGQ+S1TkuCTYheN/hlxfGlyG0Yt/dPUQjbPrCdXYS
y/gsrFC6raQRkhp3eoumlrF48PHXSxaNWMXaHBcws4yzf814o4824k/2UUvj
+WVs2+RYt46rEd8sYw9ILy5DuKZI81VfA0KE108vLy8jqu8GTT6nAf8DsSXp
iQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUV3c8198XJg0rlK2ISJKkbOGxs8kmyd7zQ2jICC1KkviGJAlJKHtkE5K9
18feqdBCv8/vr/freb3PPc9zzj333nN4bL0MHHaRkZHdpSQj+/9X02G+s3rB
QX4qmVPdzOGKzG5lDu9xdhVshHT0KtTkyok+T0h6z24EZbfH4nNuq3LTh/lC
A/itYMKxMOomxiiv9bm/IJndHvXRil3H9ITl+aI4X/074oLy8n91udeU5Lc0
7Z7a8HuCT/zfRBCvofxieE+9TbwPPiQFpP77YCNvav+zMpbdD/0hl4fDBT3l
65U5iuuS/HEmIpJm4EigvAivXN76kau423H+1qBFmHzSLuusYy+vo1lx0PxY
9z15ysmwNBP+mzjApW1psRErXzbR9bnOKAQOPVFhD+n+k/fWt9e0jA/FybPr
m1XXX8jzV280rveH4eMx0b4HfzPkR0/fVo5mD0fPpbyjNjlv5eOes1UfuxiB
Xgdj0+mhAnlN+mzZqqRIdHIxln1ILZYnCz5XajJ2Gz63Tv3nJlcpX7TaJv71
yF2Yy7mMf5qqkXe3siq4bXMPzgLn+DTfNMgfbf8qzP3yPqa7itMvkrfID8iF
vimZjoJi9NU7tt/b5R+8PShwgf8BTFRvX7il2iWvypmevuD0EJ0iHIK87r3y
Nxv/Y6gxigGtbS5V+Y8BefObU7rRGzE4VrA6RDs1Ii8mIRRtHv8Iff8t7PNI
nZCnX/VrPSYZC+84ppUtqin5xVeVVN/7Y3H+1J+Ft/kz8g2X9qpXBT6GQNz+
hl3P5uVTmfUi77HHwfKSlJj/pyX565+f1puUxcEq6RDLVYWv8iYRE7t4Lz5B
QnD5r6rQb/Jn5E4ofv37BLNrpvFb937I0274BJcnxaNjNps5t3JDfi6nrPK2
3FOkxr6/fPPQL/lae4otw7GnMOWjPcOQ8Uc+sCcucPlIInh7LZ02eclgGDVa
VFKdCJ5OPyaRfHIIq/BvhNv8h0tDySJLphSYfl/sw/nyGWy/sKxVre/FRzey
vAXlJFiVBFhJLlPiP16N1cLpJOSbPbNc+keNC4+HXHX5U1BR+unGxZv0ENLi
zeJoSsHIOw1n1g0GUFK4z806PcccZU6JuMxBXC7dyf9olIqc8CrH5e9M0Gbm
7Tz2KhURDVKM044skPE5v3Z/IxVHE5ooOhZZwXwiRtgs/gXmIoqV9/Eewq6I
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
hIOXcJ2Zu/dcrzlyyGcjRcOXMMJT7dVIqv89nz1vSN1dgvLbSqGEP+awSvjp
I/dgCXyUyqdqGSxQbBfipPSYxO/ekWx8wgIMp6kunU9YwpVk5SI7FQs4/3lk
oJ28hJoAx7UtGwvUNHCoX0hbAmvn8sqpMAtwPHopZ/J6CVUKody7XlmAYCkk
ejFnCVkSK6vhLRZoPV4oYJ2/hEmGpx9qvluA74ccl0PREp65+9TUcV5EUFUj
o2v5Eoj9RIl4rYvou6tH5VW9hE07+iOKNy7iNrfNemDLEiqD6H+Izl7ExNLC
QtCXJYj0nReJOGIJqWLCeFjPEtxYNV7UXLTEok54S9TYEui8ir/SjFpCmX1/
9aOpJZyLjhA7dPQSkqafFMbPL8HO4dEKm+sl6Fx/nZr6fQm2b8rLe3ZZIUNN
JP7VzyX8ZImpiTK0ws6B0vvZW0uo5vTp539thbzMFv8Pe5fBYsc6RDS5DMa+
Fe1mjmW8j/1hkONmDfcX/kqfjyyjj7xCnua5Nerd/0l28S3jhugd1Xfd1vCn
OMA7IrwM80sdL9IVbDAoIvb7q9IyyLhMNDQFbPH8/rVXrG7LGHh11+QXnz1O
Ku7bcSxfxiVOqkgfX2fkZb85PlC9jGOHzaRuVzpDjEn/gkbjMsyUsrMZ97lA
di4h/WTnMm6rBWcoJLhAN1pQa212GSXegZ1v81zRtdnuZ7O8DI1HNhwq664w
tfZN6fq2DNtT4n7vJdxgLVrx7cPWMpwToxe6it1AGNRJuHpwBRMxA4dOZLlj
U+l7zSLrCnJKzyinEN1xPSd+6SLnCirMWgud2DwQHjwuLy+wgqAi0eSqEA9Q
LtxyfndqBTpDdM/FCzwQbSAQyy26AveCu1EdRA/EH/OZ2SW/AtOQ7XXVc57g
eMhM76e8gkLej5PUDp54/qtUakZ9BVevqNxpi/IEn62VrYkuyZ7qsGhEgScy
W3dFNRmuQGtLmv10nyeExF8XSpmvoPT6tFn9T0/kpWiNZ1mtYD6L4rc8qxdK
feLORrmsYOXf72c9el6QH5ay3PZcgUo03dVVZy/UqoxGePqR+BlFCXPBXlDL
DX03fpUUz+M59Y9xXmhh5R/UD15Bwg/uD1dee0E3tGVXbfgKQhTUi2lKvNC9
6Ckkem8FGhpNJyIbvWBmxGiS/nAFmUF9sYtdXhipLA5mfrKC2R6ra/KjXrA+
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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 4.320863216892699*^-27}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\
\[LongLeftRightArrow]\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\) Rabi \
Oscillations, \\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\) atoms, \
\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(B\\)]\\)=\\!\\(\\*FormBox[\\\"10\\\", \
TraditionalForm]\\)\[CapitalOmega]\"", 
         StringForm[
         "\!\(\*TemplateBox[{\"g\"},\n\
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},\n\"Ket\"]\) Rabi \
Oscillations, `` atoms, \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)=``\
\[CapitalOmega]", 2, 10], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"g\\\", \\\"1\\\"], \
SubscriptBox[\\\"g\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*FractionBox[\\(1\\), \
SqrtBox[\\(2\\)]]\\)(\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"r\\\", \\\
\"1\\\"], SubscriptBox[\\\"g\\\", \
\\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)+\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\
\"g\\\", \\\"1\\\"], SubscriptBox[\\\"r\\\", \
\\\"2\\\"]}]},\\n\\\"Ket\\\"]\\))\"", 
       "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"r\\\", \\\"1\\\"], \
SubscriptBox[\\\"r\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8147933833633404`*^9, {3.814793555232978*^9, 3.8147935722160234`*^9}, {
   3.814793606349529*^9, 3.8147936797663574`*^9}, {3.8147937259380283`*^9, 
   3.8147937405304213`*^9}, 
   3.8147937849738626`*^9},ExpressionUUID->"78df9bd9-8495-4067-92cb-\
c35fbfc1f802"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"g\", \"1\"], 
SubscriptBox[\"g\", \"2\"]}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"r\", \"1\"], 
SubscriptBox[\"g\", \"2\"]}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"g\", \"1\"], 
SubscriptBox[\"r\", \"2\"]}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"r\", \"1\"], 
SubscriptBox[\"r\", \"2\"]}]},\"Ket\"]\)\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "soln", "]"}], "2"], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Rabi Oscillations, `` atoms, \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)=``\[CapitalOmega]\>\"", ",", 
         "numAtoms", ",", 
         RowBox[{"\[CapitalOmega]B", "/", "\[CapitalOmega]"}]}], "]"}], ",", 
       "Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<plot_rabi_flop_``atoms_``states_blockaded``.png\>\"", ",", 
        "numAtoms", ",", "numStates", ",", 
        RowBox[{"\[CapitalOmega]B", "/", "\[CapitalOmega]"}]}], "]"}], "]"}], 
     ",", "plt"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8120339387180862`*^9, 3.8120340067756634`*^9}, {
   3.8120342152885523`*^9, 3.8120342441158876`*^9}, {3.812034383659404*^9, 
   3.812034462421711*^9}, {3.812034659984968*^9, 3.812034966108579*^9}, {
   3.812035014877201*^9, 3.812035190703578*^9}, {3.8120352433652563`*^9, 
   3.812035246081111*^9}, {3.8120353286570177`*^9, 3.8120353628028383`*^9}, {
   3.812035570358143*^9, 3.8120355710723085`*^9}, {3.812036322547566*^9, 
   3.812036326010353*^9}, 
   3.8120419514564247`*^9},ExpressionUUID->"3abcbabe-e23e-42a3-93ec-\
df397496ff26"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUW3k8VO8bHTMSKmuFkkqiRYvIFnNuC0qbyhYlRF/ZiiSVIklZsyc7WZJI
ooRkqSzJkuz7LsuMbDP23/zmnzvnM/e9z3nOc573vu/n/cxW0xvnzckkEonG
TiL9/8o8aRuldeMmNWx6mfWhw8NMake15BkEi5xrbGPhX7Q+S19JI6ApJ+sW
C6eua41tjryGwRSDh9+W6Bj/cNTHWtIWMo5vFKoX6diwsyFvudEeB46w9Qct
0KHq5CVTHumIbT0GfgLzdBiXUpMDTe7h1soxlZOzdLitnxS9JPkQvSO/51QZ
dPzOvFAeOO2KP+Jr6oan6DBr2ePOaHRDguWj2nMTdEyzceJSrjvoD+bIt+gs
vjt7ZgsjPbCc8f32mVE6hM7lZ213eYYhEXmVviE6XjuF3vAy8QJ/hIulXD8d
P0s1+y9I+uH2kbYL7O10pN8R0LrE7g/u1G+H3JvouOPtkuY37Q/20X39BXV0
cH64aDHZGIghG71us3I6an78+L69PAgBh+/Y1JTQ8bJFdpt+bjAWtxdLM77Q
sYvM05EfGYrnFwtLHd/TMbHu/iG67wtU3eQbrH5DR97OobCtLmGIX/GtsO8V
HafOFV/wMAnH6x5RxSMhdNyIdSw/KxmNtwZDlTUOdChm9Uq6CcWgZv3dg6ut
6SCZ7ThiwB4Lk88zaexX6Si/ExLjMx2LyeYPQXu06DCIuWHwrzEeT0/VrjCX
ooO6U9LTS+sVqmK7Ev1E6RD/0PZpW/krKPDost/hp2Pkx4l1urkJqEifGXCf
o8GZtq0mNzIJxV2j9pHlNBg7tSxdWJcMUcP3i8X5NBwjB+wZ803G1/xzOm/e
0bBm/ZLXZpfXYMz5uOcH0xCt2qTmbvIGPIfGv8wY0lDk45N3WjIdOvlfeVZ2
jqFguLlyVUo6nuQd+TxVOYb841Id5bvfQSy3kSM6dwyGZBPSK+EMxDTqa20P
GYNOwbz4ZrH3YL6sNxPUGIOmvIyF0M4PUKVxTrdGj0JWMnJiJT7hYLtSSPXW
ERyoPzJ/zfUTuuuLxPdwjmC/+1/Kj6JPOBSSdFePNoy9PfLr3I/l4NqRX2zr
coexI7pWgaT5GWJR18lqZ4chun7lA6Z2HsYT6h9x2P3FCg77lX8tv2KlnnJy
Wugghk648E4mf0VEhmbL+N1BVPj6CC32fUWyn0y7yOVBlHrVBT3bV4iOyYcv
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
0/KaQvyuWTly6J0cdNVJHYNvWPl8sXmuWXMAS7vlF8nvKESLV+cjkaG9+C1W
68P3nkJgY9Nn+8HdSOa3FhX7QCHYtYLiaJt3wpl95dvd2RTCJO6V7ns/SWgx
4g4pfWL5LSn96vh+CUgMq/xU/0whnF3M2ico4mC2NRpo57HyueTuwr9iCyqr
7YdNvlCI/AttQTZXRRFXvObeja8U4n6k26ECHhE4Zr/melBEIW7t5s+WWbke
mq+PvvQqoRBWQr0dnMcFIRbRsSPsO4WI23TdJKmSDxO+d3MSS1n69c5wbt66
Bj9c1x7/UE4hItRckzvFuBBx611j4U/W71KfSw54rcDNa5r/Vf2iEPw5q/K5
DMk4drF/prWaQpx/eT5JXXCZKnzK1eNvLYU452j/UWjTHHWUunE9o45CBHlv
Klb+Pk0tlPmYyN5AIcKlKtOXF/9RQyTOHRRoohBhtFjORIcxqqXQ6LfNLSzs
3uxxp3WQSuV+qr2njUKIuNKdioR7qQKLW/uUOyjEWTWVMF7pDuoAPf/W8S4K
ccT9SvVa50Zqbo8eRbeHQqh4yGd7ztZSn9dPBF7toxCXrjIk8hcrqGZlvuJ2
AxSiV/abNaO2hKqYtyPz4RCFeL5t6MTmy/nU1eklh32GKYTNBUXDgPQP1K5Y
o9qXo6z+3PzDzuvCG2pW0KxxMo3Vn/dDGu3+xFI9PYLHs8ZZ8wc56OAnnWCq
0d19rsUTFMLJNrP9RqMH9YB1BW/NFIXwFz/YK6p2h8pxxTymfYZCNOrRb6S8
NqO2nCP9r2IzD6ey68I4eZ7zCGV6E0kDUZEpShnOWkpKISQkKRLKWEmIkClR
hijzm4oyV6YyZlbKlClFZMh8UEJe+c73576uva+19n3f6/ffkh1fYEM9oWz2
5loderZGfNnCHybfiqycpERk6H5Ke3Vpy2zoeHSThwPLspqJZEsP/wobfmv5
45snGaK2S8TeYSsrgVcMKJPRqmQ1Fh5qWYaNwDG2zKDMy2z0tlWPQ1VJAoUE
+x3ujsnTn8+pbjxKEZhHjPHGdejRvUY6M4xXE5j5wMvLsdCabvDlisoFTgLV
V0vlB4q60yUa1zRcWUMgfbI67Zn5bfqft89NfbgJ9I0c45LwiaY35h4cu8tL
4JeOIUt6ZjL9llreUAQ/gdHpipectTLoe+u29UevI1Di4freB7J59DG96K+x
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
Oe3M80vj+vmVFQoTKwQ7WVim4X9t5Dgy
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qh4=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qh4=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
n8kdfZ3/AZoLfR0=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.1861992140247318`*^-26}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"Rabi Oscillations, \\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\) \
atoms, \\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(B\\)]\\)=\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\)\[CapitalOmega]\"", 
         StringForm[
         "Rabi Oscillations, `` atoms, \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)=``\[CapitalOmega]", 2, 0], 
         Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"g\\\", \\\"1\\\"], \
SubscriptBox[\\\"g\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"r\\\", \\\"1\\\"], \
SubscriptBox[\\\"g\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"g\\\", \\\"1\\\"], \
SubscriptBox[\\\"r\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"r\\\", \\\"1\\\"], \
SubscriptBox[\\\"r\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8120348460180254`*^9, 3.8120348614983006`*^9}, {
   3.8120350377553368`*^9, 3.8120350501641417`*^9}, {3.8120351651371155`*^9, 
   3.812035191176264*^9}, {3.812035238601058*^9, 3.8120352464778843`*^9}, 
   3.812035283499307*^9, {3.812035340352313*^9, 3.8120353637812185`*^9}, 
   3.8120355787968903`*^9, 3.8120360004339266`*^9, {3.8120360634148664`*^9, 
   3.8120361554432697`*^9}, {3.81203632902205*^9, 3.81203636293923*^9}, 
   3.812036481524906*^9, 3.8120419520965557`*^9, 3.8120423624314804`*^9, 
   3.8121492482364674`*^9, 
   3.814793227851906*^9},ExpressionUUID->"49364f02-16a1-43ed-8d5a-\
c17bc184a670"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["rabi flopping - 2 or more atoms in uniform blockade ", "Subsection",
 CellChangeTimes->{{3.8121492565737705`*^9, 
  3.812149312790799*^9}},ExpressionUUID->"4024eb36-da6b-4acc-9228-\
22bc489bdae3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[CapitalOmega]", ",", "\[CapitalDelta]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStates", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"single", " ", "atom", " ", "states"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numAtoms", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomBasis", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hsingle", "=", 
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{"\[CapitalOmega]", "/", "2"}]},
       {
        RowBox[{"\[CapitalOmega]", "/", "2"}], "\[CapitalDelta]"}
      }], ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
    RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"construct", " ", "interaction", " ", "Hamiltonian"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hint", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numAtoms", " ", "numStates"}], ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.812149361585094*^9, 3.8121494228966303`*^9}, {
  3.8123262879309053`*^9, 3.8123262891588817`*^9}, {3.8123785323179865`*^9, 
  3.812378565220337*^9}},ExpressionUUID->"045c0219-014e-411a-a0ae-\
53f4d568ac39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]", "=", "0"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]B", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"10", "\[CapitalOmega]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"uniform", " ", "blockade", " ", "between"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"hamiltonian", " ", "=", " ", 
    RowBox[{
     RowBox[{"HamiltonianProduct", "[", 
      RowBox[{"Hsingle", ",", "numAtoms"}], "]"}], "//", "MatrixForm", 
     RowBox[{"(*", 
      RowBox[{"+", " ", 
       RowBox[{"BlockadeHamiltonian", "[", 
        RowBox[{"numAtoms", ",", 
         RowBox[{"BlockadeTerm", "[", 
          RowBox[{
           RowBox[{"#", "&"}], ",", "\[CapitalOmega]B"}], "]"}]}], "]"}]}], 
      "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.812378567080959*^9, 3.8123786029589586`*^9}, {
  3.812378933597166*^9, 3.812378938356674*^9}, {3.812379000628388*^9, 
  3.812379040656468*^9}, {3.812379111966037*^9, 3.812379198849242*^9}, {
  3.812379239687259*^9, 
  3.8123792725119953`*^9}},ExpressionUUID->"c578d3d1-66fd-4831-b038-\
59cdf0980674"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", "0", "0", "0", "0", "0", 
      "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", "0", 
      "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"3", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"4", " ", "\[CapitalDelta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812379240332156*^9, 
  3.812379273298311*^9}},ExpressionUUID->"c3981ce4-cdf6-4cf9-8495-\
06a3d1868e49"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
     RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]0", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
    " ", "state"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"system", " ", "to", " ", "solve"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ics", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"initial", " ", "conditions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{
      RowBox[{"numAtoms", " ", "numStates"}], "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"eqs", ",", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"ics", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/.", 
          RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
        RowBox[{"\[Psi]0", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Psi]", ",", "\[Psi]0", ",", "sys"}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"First", "@", 
     RowBox[{"NDSolve", "[", 
      RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"soln", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.812378567080959*^9, 3.8123786029589586`*^9}, {
  3.812378933597166*^9, 3.812378938356674*^9}, {3.812379000628388*^9, 
  3.812379040656468*^9}, {3.812379111966037*^9, 
  3.812379112968446*^9}},ExpressionUUID->"7d80fc06-5ff4-4cba-b719-\
a2f8255f9688"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"g\", \"1\"], 
SubscriptBox[\"g\", \"2\"]}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"r\", \"1\"], 
SubscriptBox[\"g\", \"2\"]}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"g\", \"1\"], 
SubscriptBox[\"r\", \"2\"]}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{
SubscriptBox[\"r\", \"1\"], 
SubscriptBox[\"r\", \"2\"]}]},\"Ket\"]\)\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "soln", "]"}], "2"], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Rabi Oscillations, `` atoms, \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)=``\[CapitalOmega]\>\"", ",", 
         "numAtoms", ",", 
         RowBox[{"\[CapitalOmega]B", "/", "\[CapitalOmega]"}]}], "]"}], ",", 
       "Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",ExpressionUU\
ID->"d1c1d9c4-f4c7-43d4-be31-f54f22bd6719"],

Cell["", "Text",ExpressionUUID->"2d064a8d-7afb-4404-bdc9-78d751fd8c82"]
}, Closed]],

Cell[CellGroupData[{

Cell["three level atoms", "Subsection",
 CellChangeTimes->{{3.8381417642707167`*^9, 
  3.838141768869712*^9}},ExpressionUUID->"035457de-f90e-4f71-a86f-\
39312205675e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "atom", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"g", ",", "e"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalOmega]B", ",", "\[CapitalDelta]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atomBasis", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsingle", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{"\[CapitalOmega]", "/", "2"}]},
        {
         RowBox[{"\[CapitalOmega]", "/", "2"}], "\[CapitalDelta]"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hint", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"numAtoms", " ", "numStates"}], ",", 
         RowBox[{"numAtoms", " ", "numStates"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hint", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"numAtoms", " ", "numStates"}], ",", 
        RowBox[{"numAtoms", " ", "numStates"}]}], "]"}], "]"}], "=", 
     "\[CapitalOmega]B"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"interaction", " ", "Hamiltonian"}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"two", "-", 
     RowBox[{"atom", " ", "hamiltonian"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hmulti", " ", "=", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "numStates", "]"}], ",", "Hsingle"}], 
       "]"}], "+", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"Hsingle", ",", 
        RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"Hmulti", "+", "Hint"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"H", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.838224826600295*^9, 3.838224828348734*^9}, {
  3.838224904094651*^9, 3.8382249838513784`*^9}, {3.8382251378757305`*^9, 
  3.838225157438513*^9}, {3.8382252078971796`*^9, 3.8382252272701597`*^9}, {
  3.8382254179088793`*^9, 3.838225424725915*^9}, {3.838225559114383*^9, 
  3.8382255920616617`*^9}, {3.838225665153669*^9, 3.8382257137915063`*^9}, {
  3.8382257479229236`*^9, 3.8382257504856553`*^9}, {3.8382257905011425`*^9, 
  3.8382258171031485`*^9}, {3.8382259480144815`*^9, 3.83822601812901*^9}, {
  3.838226152474622*^9, 3.8382261525350933`*^9}, {3.838226184459464*^9, 
  3.8382262265022964`*^9}, {3.8383101051008096`*^9, 3.838310171639666*^9}, {
  3.838310314695448*^9, 3.838310442328844*^9}, {3.8383112327203484`*^9, 
  3.838311269619884*^9}, {3.838311333643859*^9, 
  3.838311377900327*^9}},ExpressionUUID->"72dc2eda-2dab-4e70-8fbe-\
790a8829ca3b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{
       RowBox[{"2", " ", "\[CapitalDelta]"}], "+", "\[CapitalOmega]B"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.838311371851968*^9, 
  3.8383113787261887`*^9}},ExpressionUUID->"a52cb387-01d8-4c02-8926-\
7ac7a38c543f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"2", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]B", "  ", "=", " ", 
   RowBox[{"10", " ", "\[CapitalOmega]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]0", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      }], ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eqs", ",", "IC", ",", " ", "rho", ",", "popIdcs", ",", "cohIdcs"}], 
     "}"}], "=", 
    RowBox[{"BuildMasterEq", "[", 
     RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"First", "@", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"Join", "[", 
         RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"curves", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", " ", 
     RowBox[{"i", "<", 
      RowBox[{
       RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"curves", ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"rho", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "rho", "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], 
     "]"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"plot", " ", "ground", " ", "state", " ", "and", " ", "singly"}], 
    "-", 
    RowBox[{"excited", " ", "Rydberg", " ", "state"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"curvesGroundRyd", "=", 
  RowBox[{"Join", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"curves", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"curves", "[", 
        RowBox[{"[", "]"}], "]"}], "+", 
       RowBox[{"curves", "[", 
        RowBox[{"[", "]"}], "]"}]}], ")"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
   RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.838224826600295*^9, 3.838224828348734*^9}, {
  3.838224904094651*^9, 3.8382249838513784`*^9}, {3.8382251378757305`*^9, 
  3.838225157438513*^9}, {3.8382252078971796`*^9, 3.8382252272701597`*^9}, {
  3.8382254179088793`*^9, 3.838225424725915*^9}, {3.838225559114383*^9, 
  3.8382255920616617`*^9}, {3.838225665153669*^9, 3.8382257137915063`*^9}, {
  3.8382257479229236`*^9, 3.8382257504856553`*^9}, {3.8382257905011425`*^9, 
  3.8382258171031485`*^9}, {3.8382259480144815`*^9, 3.83822601812901*^9}, {
  3.838226152474622*^9, 3.8382261525350933`*^9}, {3.838226184459464*^9, 
  3.8382262265022964`*^9}, {3.8383101051008096`*^9, 3.838310171639666*^9}, {
  3.838310314695448*^9, 3.838310442328844*^9}, {3.8383112327203484`*^9, 
  3.838311269619884*^9}, {3.838311333643859*^9, 
  3.838311368593706*^9}},ExpressionUUID->"9967bcf0-2a54-4ffa-8dee-\
23cc350e6479"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{
       RowBox[{"2", " ", "\[CapitalDelta]"}], "+", "\[CapitalOmega]B"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8382251786885138`*^9, {3.8382252282853813`*^9, 3.838225251601405*^9}, 
   3.838225425711816*^9, 3.83822552892019*^9, 3.838225592525135*^9, {
   3.8382256771414275`*^9, 3.8382257510526943`*^9}, 3.838225953621829*^9, {
   3.8382260019851975`*^9, 3.838226018719228*^9}, 3.8382261529702225`*^9, 
   3.8383101490299406`*^9},ExpressionUUID->"00acad60-3aaf-4674-883d-\
2ceba18c350b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Pi]", ",", "\[Pi]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "0", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "0", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Pi]", ",", "\[Pi]", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8382251786885138`*^9, {3.8382252282853813`*^9, 3.838225251601405*^9}, 
   3.838225425711816*^9, 3.83822552892019*^9, 3.838225592525135*^9, {
   3.8382256771414275`*^9, 3.8382257510526943`*^9}, 3.838225953621829*^9, {
   3.8382260019851975`*^9, 3.838226018719228*^9}, 3.8382261529702225`*^9, 
   3.8383101490412893`*^9},ExpressionUUID->"78f586c4-8157-49ef-95bb-\
8ecd04fbbfb2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.015625`"}],
  SequenceForm["Time to run sim: ", 0.015625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8382251788254795`*^9, {3.83822522860261*^9, 3.838225251784978*^9}, 
   3.8382254259084992`*^9, 3.8382255289319396`*^9, 3.838225592533581*^9, {
   3.83822567715112*^9, 3.8382257510629926`*^9}, 3.8382259536289*^9, {
   3.8382260019912963`*^9, 3.8382260187269993`*^9}, 3.838226152975975*^9, 
   3.8383101490627356`*^9},ExpressionUUID->"3d028236-db63-41d6-8bb5-\
6850e80aee94"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmXk4Ff8Xx+OrKEUkIVubJEmFQrxVlGwlFJGlpNJCllAKWVJZI8lWoWQL
ZQsJ2UJZ7712Zbn3Wu4dCqXEb37zzzyvZ2ae+cw57/M+5/PMhrNOJ85zLlmy
ZJJjyZL/n/XOM1srRs00OxcWyYMA1yEx5wFRJdADW7nmSd7zLDbhnag2gtT3
nZwkeVh8s5+HjBFSBDj6e0nW/0J7myhqivaFvQmVJG8OkXi5KGWBuSXsiCSS
5/XOPbGTscbbVXvLXEkeC+iotouxQyHvTskDJJ+y//Xhkag9Am/+KFxGcvUh
saJPCQ4YvpEWVL1AQHGTRu601CW8T3EKvUlyAqdt+paUy1Cr9GiUJZln8G7y
SZlrcHH8o9X8j0DJt7Yvn0yd0Zixm32VZOfj9npWMdeRG2rZzkVy3857h0JF
3VB/8fLh9fMEop+JVGyxdIe4Y2NH3F8CevwZ+8sTbuBRyOYEQZIL2U3KhJQX
vuqr0sbmCFyxtn57z+4mdnnl6uuTvPEroSCdcgu+I0/+pPwmEJYtKGsscwdO
e3ct1/xFQEciNXX0gg9yZd9f8pklcKc2bnWlqS/6L9guez9DQElFPtQixg8z
M3MzQtMEnq89FvRANABH3wiXOU0SuPXlSfXJkgCc9njE60oQOBn4jXOTZSDM
lzrFX2MTWDlz3ac0IQjed97dMZog4NkR7TkhdR9RVdvO5zEImIT0FRZX3Aef
RsDnG3QCCtoyMwF2D6D1IN5VaYTM57ui6xIpD1Go+y0+dpCAcVS3o5FMGO72
VJ3g6iMgr78pXawuDGueNP552EPG+78rDPqFcMBEiODtJmDzfiHvo2kEgonO
j9NUAmu3RSiYx0RC5QjfescWAn4877beF41GVN+3J8OVBOSORAa/dY6GnvG6
DXUfCbQFOo321EXjbNFwzvMPpH7+k89UuPEYio8ODe97T6D2X6pCR1sM3nCv
bPuXQ37vzxhlqZCn2Kq7dGNPPIGCXe4xukNPEZnv8lHhKQFrZ5Nf19XiEN6x
w9srhkAOi/99NTMOkRsmTk9HEDjBDN7vqJOADMO07z6BBGL7bh4qWEjCWkuB
UuIKgQPiFqn9Zs8Q6Dmws/ASqdfTe5fyZD/DIoM+6OpAQHLC61z2judwuV/O
S7Eh4HRJZcuS3ue4dVkpVeEEAUH7nNcv9yXjpI1Hr5YyAXOLFzmTU6nY4SXp
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
PxX/EGjM2FYXepcOU6/WD5p/CVykll8UCKRjqEOHv4RkLk7TFY/v0ZG49vzr
HfMEXuwYzRR5QD5f0xL8lGRNizuGCSF0tKw7mPuP5O6ANYRUOB3n1W9Knv5H
wCP3dURKJB3JNmrtb0gW6tXYvTWajlX5h77+JTmXu709I4aO7RdP8R9YIGCw
56K7wlM6AjJVYu6QPGr9T/htPB1J2cln80kOevCoWDmJjoVEK7dBkjcWbj39
/jkd8llbGnkWCZR/L/u7P4WON9wfHbaSbLnqRGLFSzpWfBs9rEny730MTe3X
pN4cL102JDna3vtbXQYd0bzrOkxJVowQuKufTeYnscv3//yl9NWm5hw6fGRj
rxuQ7MhQrznxlo7nBaqv9pO8bE2rAzWfjr2GLyW3kJys6cBzuoiOml+V3UtJ
huPf9L73dDR9uNHdT66393GEvl0ZHc1pGRK5JHtWbmENl9NxvFw71YtkIVZJ
2MVKOlqXy19TJzlP5LjixCc62h8duTVDxstIe6TVqZYOB1GfxjSSx5xuuv6s
p0N59xfrEyQHxfOv9WikY4eclvIMmY9NdamFf77QcU6JYRRBspVk8xxHOx29
+nwGOWR++URdCkopdARJlzvIkly5Zu1190464iUmLsWS+pBZbslk9tFht3S1
3BlSP53/LaQkf6NDK0Oekfeb9LeF5zZWQ3TQx4VC/5H6I37Sqc1MOvwtG6K8
SL0ms+8/uj9Oh3v2+pn0GQKmo/JGh9h0ZPpLarWS+i7ud6kp/EmH/hbbaC5S
/3c/L7xLXCDjL8LQWGATUKp+4XSKg4FjFzqnR1gEGOXa2wW4GFgW3PikeoLU
S/6D5IDlDJxY5ZbiMEZg7TPhyMtCDES82vVNY4RA/dP3BlvWMUAJ7+TqGyJw
M9qKZ0CUgcm3/qKugwT67yf7nJBioHZ4RihggPRbN4VrqnIMmHdL2at2ETjt
1LrtpzwD2+dWiUbQCKxydBvJ2snA8dktn/ooBFxsSqyklRkQPNY5d6aNrHe9
w/rcWgzsbruw7EcDAbb26LLKgwwwpdu8lnwm8BwhVTd1GODLestcWkfWl3Kb
KluPAVf7vrIZ0u++SlnLUswYUKMtt7xUQsBXjGM4zJwBTv+TtTuLCexZm/pM
15KBNu2tyizST2NXjAmX2TLQbm23wZD027Mz7ktTLpP3x/OZvUgj678hdNDZ
j4E3yxV1Eh6R+uOlXJz3ZyBoImqaM4LsPwbixL0gBgbmmwfsQkl/+5rxN+kh
A57ZHdd4ggnItdUJfXnMgN5d+Ue/vQlYd3Ec2ZbBgKzQ/VUO5wloix39kp/F
wGlRkbXGZwlst4ww0cphYOu7FdeUbMh665W0PZXPgNIjLrFhc9J/vql7BZaT
8bTo8GfoE6hluGd+b2NgwqJ3ua8i6c+yH3ZdpTBwVN9zeFKeQNQlruLfNAZ+
XfGTO72NgO34o2r+PgYO5DQtrt1I4A87p0+DwcDcZVOuPWsI7Jwd5Y/7y8B+
wd1buKbZiOWydjuxmUn20cWVArlsLJxbp9wqw0Sx5URDeibZzz+1zBzbxoTe
3wof9TQ2FO8e8jBUYOJp61La0SQ26hdlb+ruY8Ks8fhNwRA2fv356aNpwMR7
tn+SmQMbJ6fuP5RzY0JZpe5O/lo2yo4fMki/wURk9miR82pyvsidXynrxcQU
a0BFhpcN9jWnsC13mNBaMBa4vYSNwAnTSOlgJuqaogK7x1jIZ0g9EU5gQmXm
O+1kOQtr+guSOauZ8DWZOnrJloWwlbdvF9UyEV+WGdhswcIKdW3zK5+ZUFPI
1VYwYYEztm0V9SsT+hflrSg6LPwwJjzTu5jIFvhm0yDHQkuN7LHjBBPb9wbr
mPycQEh2/N9EsVHE/1Nw+HdnAktv+5mqXh9F57X1m1P9xpE/NTH30XUUr/aE
zXZ7jcPewfzZ4RujOFsYpLTSZRzVx3aOmdwahZ+fFqf12XEEbOzzuRY4CkkO
q2MfD46Dq35fZsrTUewTPrDCm3McnGsmOfiqyOv7XujO3R7DknTrnEHBMSQy
FOcHz4/CJS4nVLBqDBM3RK63NNDxYXswj8C1cZR1c5+qXxiCgJ6L/F2+CWwq
/9h54uB39O5oafcqm8DZ2xUto369yE3C5mFrFha7Qj50cNBwJkeFnARZeHn1
uePxwVb4Br7w681gk/OSAW9P3Ges8uDWs8tm4+9Jp4vw+Iy4i1cF6TlkHv1M
IgpNPuOdvmoKkc/GOsGsoL6Vn0EXaK3m/MhGyXTELL9vPfSTlvBsa2dD3dd2
m7BjHYSLbMLc/7KRuclbVNqwBtlMiXg+A7LPaprW15+oRHBioG2/Eekbt9bK
9ClWwv4Ea8sbYwJaVHtePv5KiJeV5RqeIqAh8q28prECD8Ita0PIuhKXe80T
frgCF1WeTq3wIuC8WDmm7F+OjQFCutyvyDqtEjE9lFCChX3eq2ivSd/19Vfp
sSlBF2uo7VUm2SdNmNx5m0oQcerdmcOkT3Dxspety3qPRbkTroFlpO++XmHX
8rEYva3hSf+1kz70Yih+3c9CFAf9OtdO+pwh00zwWUkhotVttqV0kr573fC1
w91C6L9UyD9IzlXtEqySQsFClHh++exHzklcCh0y1ioFiNmhHG5M+nTDxID2
2GI+rg8mmG4g56QUy4GHRZ/zIWtwZaCC7AOq4jRhYet8cHF0pEaQfYRyviou
TTYf3wrUHW3JPmRwaqHu5s93KHNM2alI9rltv43Kw8vf4YkU78z//3PzHvdM
pN9/h/8BfIzjlg==
          "]]}, Annotation[#, "Charting`Private`Tag$23290#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnc8le8bxykhSqGFFpUGaUkUPkKl0DCSrIykYY+mUKSvkJbsjEIqZCUj
e6/DOedRWecYxzpIS5L63b9/eL1fz3Pfz31f93Vf1+fzeh1pG2eDs3N4eHgy
yZ///z9ydqi1dNhYnWctb3Pfbld1Pi1Jlx4JRXxuLaiUfHQMu55FxGRLaMN+
wcbQxodW0G1qz4qVMEKLv1Du7YfOMLGbKn4oYYeUZqn6jw980LUtUCtEwgM3
xLQML9y/j/ilx+4ESfjj0ZHCyo8Bz+AnmL3xP4nHCI+Q2aF+JgOnTBMyvkw+
B7eyyElAoBTC//zMD63OAJXpkXBsXQ02nBgfqriXg2+L2efsXJsg6XNo77mE
HPhKTHsK3WvC4jfx94Te5eAR3T0z/nkTfgsaKpzozYF7wWqH2PYm0ErfuXcr
5yLx2nJRSrUZ17b7/f01kIsgN7+w3XwtaF60ZImCxju8frY/U1KLhgo1x7Ot
xu9wtm/VItZRGvIvVud5XHyHyyet3WJO05BUc8W0MPwd/ow4rvvtSsMVn644
nbF3uPWjUVUnngaZieTNtlH52Jky7/3GGRouN6sg4vt75HdpSuS/bIWIQu5A
nWABlg0lDUdkt+J5yPbgmZUF8IkxnHEpbkWr3sZPlgcKcHcVfx1/ayvkGpa4
bwgvQCxrs1ntVCt6aiaSs/YUggH52litNhwqeyHSdK0IfItytpxjtKF7rXTu
39AiiPO9lFvf1QYP3xiz7UlF+N1PS28faEMCHqU+aiiCmpG4rMxUG2aKfTVP
ryzGV5t1WtoSdGQUmHkNFhfj/CxzKN+MjuU5ot28vCWYNOj11PpEh3nwjFH/
shIYnaDNd2DTkWg30FAtX4Ls39LNvsN0yC99//7eqRJsfDLBDJ2mQ9PrzJOl
mSUodVCyWynBgFKMSfLjbaX4e/hnybQxA6Z3G9kBe0shJ9p30sqCgRse+1dd
PlCKNOGZznw7Bsr05B6bmpViRc7PlEPuDOjN/vVbHViK4rm/PtPvM2BtmWyR
2l2KwYTN659XM+B/RCoycrgU9W/rdx5qYiBZKYwR9L0UPft0eLvpDHBFruk6
CpVBfnIJk8NiwKtEX2WnUhl+rkuUPPubgeC1P5YUhZRBVLLxoJgcE3m9Wo0t
quVYIPK6Zd1tJigdv8mQQ+Xg3phKW3eXiZ/pH5bpGZRDotw8cHkIE3uuq1jX
nitHXxtHoyOciXzxbT9LH5ZjT8C6F20vmXivLbk2a6gctyISk32bmPicZnLA
5Vs5bjyhHS5tZeL34icXFP6WY5P9roFvTCb2di3KTROvgO8pkbl7upko8Jx3
JEm9AvfnWNDkx5koSv7i/vhxBcR3sy5SwhQ6FyhEGjyrgFdR8AXjRRT+uF38
sDitAqt/Z5jXilFQA0cwpKQC5uzzkkESFD60d8QGjFTgzxyLnzdkKXSrSVRo
/ahAe9OPoOjNFP4mnRzi5anEjMlZ0XR5CuourTtvLq1EkOT01/SdFEoEa2q8
NCrBu/v43LXqFFhOfGOKupWA1ezabg0KPMz9Yt+MKyGe9EkhTIuCRkKRufPF
SiR+3SBJ06FQqpI1eS68Et4KezaVGJDxzyaWySZUIksysHSlMRnPv1W1/1Ul
tmqLHnIyobC/LeXOmbJK8FQ3rxozo1B+IVbKlFsJLZ74IVM7CtnDFy9a/qyE
m7P50t32FJ477C205alCKMepZJ4DhQD79tNOS6owmeQZFHiRgo6NaNRt1Sos
mz/n+wI3CirsnuG7B6tQIbp77mN3ClvOpKuEHq9CcPqWkMWeFBZY6n6KsKtC
Drtp0chlCi2mASvSg6sQc4anarU32c9HQ4fscMJDRs9O3KSQaSKTnx9fhaiJ
w5NXfSg8NC4xqcipQkDBmd9pfhRuM0JSaj9UYagqIDP7FgUPQ/OpptoqpL62
63x7m8LJE9PhHzurYPv68KPQAAqHaDWcLg55/5jeKsc7FJSPhSv1falCdB+v
1P5AChL6u6gxvmp8KvR2rrtLQaiRV/abSDWyX6LK+z8Kv4/QPH+tqMbyz6+C
NwaRfNFxXDp3azXMgyydzO5RaKrZd1ZwTzW2GnoEDhD+cFAod+H+aog19C06
G0whveojn7huNaT6RQU+E36mnWK0wpjM52F7STuEQliF5/NVVtW4qqhGahsF
X03t7zLnq6FZPtdnmrBrmZj2JvdqdMdKyWmHUrDRYD/a6l0NUblhTX/ChiUZ
fTsDq8HIpFW9J6ytfnOX8oNqaJsqZfcTVizWu60WXY39Qt5C8+5T2KAqRdd8
UQ0+19/1koSXFQ7L6GRUY4vrnO8bCPPvzXfTf1+Nr4Ij/rKEp/LvlBtUVMNh
Jb/3SsJDe4zFTjVVQ8fzVYcA4U9562ws2qsxWa4QP0S+V7/761sbdjX0ovrr
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
DvM9Vhgxsf+HV9SDraMYubxGbpb4ywsCbedFtUbxq8c/9vYjJorl7gqKOo3i
qKHMG/suJpQYy5seuoxCS63ttyGbicwbKQ+WuI/CfcLgitIA+V5TteSKK6N4
0FPz6zOXibvO87auuTUK8eyIlgTi/wyyb53YGj4Kbutw+/rlFBrMxJZlRIwi
/4DOIjtJCtp8iZ+3R4/iuE6DYcQqCnuMy2wV40fx0jphtmcdhZVT/zz3pY3i
yNoDyf/3f4N7vaMOfxhFmaLj5NcDFM70LbBqKB3FkqL7mrd0iD66F7NOv2IU
TOvuIH5dov86C18frx3Fl8eDf8aOUci6+fuDSdsorp4qOaJM/J3cxqDbnxij
SD/puNfZjMLzFgkds3YSn1fdktEWFJ6uVWm17BzFK8Mzr1utKdwov9x3ljMK
gygV/gLi935cEEgdHBrFLVczlwji95zEn146PzqKhq9jNReJ37O2y/tx6cso
zo7uVZ90oXCQ/4eAx+9RyClvO3L5MoXSdP/GH39GIfpRY80s8X8qJkseXP43
ipXqmr2Xif+TT90leZ2PizNGb3fqeRO9fsRN/pYIF70GLF6XW8Q/li0S3ivK
RYbBve15tylsV3kzPCnORfNtRcsJooePbhpKtpbgIqij5/1eop+7ngUESKzk
YjDxwbAe0deXlq+za13NxbzueCkD4veC+C2l96/nQmBIOWg30ecSN2f+/ZLl
4neNW6040e+pPyK6MzdzsWD/pQUDhJUdlYod5Lk4KrHO5CXxezX99Oi127h4
cX/y5Rmi/0+au177uIMLIyM1fmHiFzh0EdMwRS4iNC45phL21H29R2cPF8tN
+lnKxF/wVRxexrOXC4NKYZsiwo/2Dn5/p8rFsh6drzuJH5HJ8qc7g4vvm+Y8
iiH8drNM1kZNLjKPxh2YfvD/3weUhPVoc1GwyV/4MPE3LSssnJ8e4uJ1oSTn
HmHLsN/6x45w4fWgnSojPC4QIS+gz4WYpU/PCGFvn93CJce4+PJolFeA+KcF
U23DXgZc1Bv8wDLCMU4utQrGXPzX7Rm9grAcZ2EKx4SLhGcHl4kQLrB4FRB3
mour6/Zn/STzHWbq2J204KJ6JVzbCH/U42iKnOHim62kcQLhc5W3pattuPCf
em1lS/jnPmmem2e5uP6H9nAF4YDsD927HbiIzLb7Ukr2t0TOvHjsAhc/e29c
Myf8PHE6+oUjF7/yj+waJfHaJfn0moULF1D4u9KRcPkDRdOl7lycP1Wj0kvi
bTC/bU+TJxdWF6h7Rwi7/FrwQ/U6ya8XgR+/k/P755xG/+7Nxfa6oHYlwqGD
h7Je+3IxVv9kySVy3q+pW84r73DxZnngiUzi1/YdXXuUcZcL/ZPjxiUkf+qr
iuWD73Fx4/qNhDKSX8M5v4ZnwrhQCMxfHk/82hX58NrsR1zs2qh66EYA8UvP
d6VcDOdCRvphjS7JV9lHTnYd0VxcvmJdWelHIVdogdajOC427357wMmX1Itb
L6V1E7goFPKVFib+zsa1v7sgmYvPLKOvq4mfmxzyK3Z7yYXFTVvuE3J/fM+s
idnymovUti9HeIi/e3bstGnUWy4m6nKR4UmhcyuNfrWIC+FzCse8nMjzUVHv
uSVcKCWxu18SP2fz0lA2pIyL+bSlt9sukP2sb78SX83F7GdL0bnnyHlJda+q
oXFx78xLX7YlOf9Pa2qO07kI8zKcKCZ+zvuptctnJsm3aOPb90+T/BYfKB/7
zIWpSuM6sZPkPgtxzy0ZIPdhoZvfEz0KjJqtonGDXPSlNhtLHaEQEeBcsHGE
5Pse4zPhhyis5v22YN8EF3eidq69pEnqw6/pt9bTXKwpcAwI30PqC0fgT/rC
MUxb5eYNrSF+7vnhF8qLx7Bd3ZNTvpLUQ+t7R8vFxsCnrO/4UIKCYZdIAnP5
GIY3mN4VFSf1lLH04B/pMdh72sqHET94vXxd2GGlMbye5RsMGyL1Pw7r+y3H
EBe68PmbZCa+XfsmYG09hkHft2L6iaRfmKSMdtmOwaYgxbs3lonCRYuy2x3G
ILLQ/tjEYyaqfbv3N7iNIbt2ndiDW0x02HhbZd0Zg7LEq0c/zZjg31gY5Zs+
hvlnl102Jv7t8Fznm7OZYxgVOVv6jpeJ4B4Zm2vZY/j9jFdt8R8GRCOCNnvk
j+Hh6g3tSV8YWDn/dP658jGEKzeVGn9iYOfoL+ZRagxTI9sFOakMWGQoia76
O4bbhsXtVRoM5J3+JULjGYelRbeuhQoDIvwFC27PHUdFykW/4R0MlJqrCQ4L
juP+sJcqS4YBGSHtfzni4/jDt1D7EB8DHLsTY3qbx2FW46H1t5IOJ8lLdTeM
xiGUsSxuozodvgEJfp1p41BqEerSWdyGhZcFjli/Gce25oVrO/jbEOXgKMbJ
GEe0ptotu9lWZOuqJE3kjKNpx+135iOt4Ii2Vs4pGcca8VUufRWt0I3jEdxM
H8ce0SyXo56tWPbOKtRzZhziXIGzJa00vBlaFS2iNwGHUw72Sf3NuBsbcKb7
6ATm3NOieBuaYWcwtiH9xAQYM9Mt+m+bsbKoKFPfZAJTGm/epHs3I+i+WXWw
zQQUrOTlw5c2w0EpclLo6gSU3J7uWKjZBBn/JToCyRMoLzpeJxvagL/KNxa2
p05gvkHmU3O3Bnwa62tLfkXmm2vlfOtkA8JMsi0Ovp0gxW80JG51A/5tMXAP
KJqAm9lVmmR6PTpb78fNpU/g+b09rbvr65B/Z8qWzpzAYeOS+V5v6vB4n9Xm
pI8TGHCfjEkJq4PuC4Ucze4J7Fi8dHPPyToUXGmq8xueAOdEzc7E3lqEb919
/wR3Ai+y30Y5V9XCtTfGSHpiAhlHy+ZvS63FJr1LPaXfJ8AaczDyd6wFHy/j
edjUBHbKR5lJHq8FK3ffhTO/J1BG31qWuLMWRReStm2fnQD1Tix61dJaPF0j
/OPfvwmU8uv8C5qqwf8Ak2zHqQ==
          "]]}, Annotation[#, "Charting`Private`Tag$23290#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nupPhPOzi3nshipQ5C51OoDwa4WHJ+3HSXxy9h7VJhydaRbvMluB8zE+z3kI
B/4n++PKgkqsMdYxekvO75kxpeYpVonCrO9Oxwk77KgOub26EqbLc4d6SDwt
0p6x/DZXgvZnqMKJ8InttvJB/1UiVauXZ4zkQ/2Novfj/ZW40v4ryo7wTpl5
tGcHyXpX7UMZJJ8bUpvWxuhWors8fnAX4aVb4xwTjCuhdKYnJpDkf1xaZfFb
+0o8U+1YKUHqQ7XrQGXA1Uo0T4zYgdTPvRgtL7s7lTh6b67iaVJfy5cajG6I
qMSG4Uwlm7sUzBuNk3leVELWOsLBiNRnUoCFRWdaJWC9abUqqd/dPJcaI8sq
ES4o2NFL6v1WgZPf1cZKVHjRRpLIfai44oFT3yrxSWKlmwm5L0YjPuki3ysx
137+19jrFK62hj/0l6yC+kaT38Fu5D6FxR62la7CPwPXp0PkfgrovZjV+K8K
mxbIJ+53phBRle44e6gKu5K2COTak/zkVOh6uFQhcGJxnxi5/3Od6/gNPKsg
zzw4KET6w1HZ5qL//KvwoVfNaMKSQmtC+47hmCqctEq9nGJG+uXDX4ttqquQ
Hid109WA1J/2VKU6owqjt0RL+Uh/CuSb4722swpuXv+cgnQprPYU+v7tVxV6
Km/McT9K4nlxPe3kumo4HfvGeQMSz01b/HfIVOPmFjGLVmUKDaztaot2V6Pj
xkGVmb0knkZ7M6q0qyFU3SIjqUjBS/NECK5U49AyL3rRZgpVs4Zaq29Xg3bM
xPP+RgpLPprMmQ6sxhX9dcGHpCjE/XfeKTeBsMlTTqQEideaWye2N1Qj1MX3
9puF5PyTr5dIbqpB4sZfg65kXkjWH/iJHTWIKtTIzhtkQjH+K9Nmbw2GbuwK
GuMwce4If1SaTg0YmxKdD3YyURVhtemARw26VfassWtk4uE+8X0XKmtwaEJB
OOEtEynCGauCm2rw7Hqi4R4y34q7Ds1mttZA/ot5cekLJsYC3Mr+jtZAMMdz
fn4UE6daG4+HrKyFygpt7433mVh18571+wu1CLax/zFmycSuE6sPtbnW4lq3
/NE2UyaOb8zewnOrFh6u73rzjZjwqmMPH31M3n8sMmqkw0TXKpWrHfm18Kc7
PxbZw8Srwp+B8xfW4WyvgYWvEBO7Z8/m6qfVYa6HpdjdVKIfdIpvH8yrw770
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
+2+xjjD6RuJ/VnHFJOGlj4x1hNrJ/o6XSqPJXH4+qctT1MlCaF2sl8IjCtus
DuW4dLHwt9lZu5Bwbo3yBeleFp4t9pfe95jCAQWF1d/6WLgtFLgklXB91Nam
oEEWmtY/XLDoCZnDvOt81YdZUDo/JmJNuOfy8r3joyxoy4pve0PYiblwOGWM
Be5PW71+wn9V5sWbjrPw3R4PVoSS702aNFjyhwXGFT7mXsJii78LlE2x4LFq
nbwu4ebCAL8jMyzkbxBwMyL8+PImvsZZFhp1rrsbENaTLL5rMJeN9yerFA8R
Fq05M+8bLxsLBTQzZf///tVxHwt+NhR3nhnh///7m0Pm9C5gwy2zbaCFfI8e
tc3r4kI2tq7PeRlNWNS3fGZUmI39e+rXnyLcrHD2prsIG4LVwla8hB93TU1N
ibFxuMLaJpnEQ+/R02vey9moV83dBsIiavJ/5ouzccf8e04tiSdtpMbjgSQb
exz+8ukQDok5N75kDRve9LI1pSQfS6YjxyQ3sKFeppgURPJFe7XLOX4TG8ur
S1Z0kfyGnKaNSm9hY3hayUCG8OLc+cP/bWdjUdZHhWhSHw02cZfe72Cj52jB
11JSP8Fi+weVd7JxU9X/BIvUl7CzU99hJTY+mZ3PnfAnz68Vsq3fy4aooX3K
mB95vuFlj54yG4bY6NxF6nWRbCvbTJ0Ns1sPAuNIfS/sO9jmqs1GKH2p+DMv
CnVPWWcmddioCQ4e2UPuS6Dmja+3TrCxWn0opfEmBaGEDOq+IYmvmyKj9RoF
QTPJpucWbDT/NVZ2dKVQI5Sru8mKja8/NZzyyH0NyD/RkGrDxptNMhG/HSks
WHmvNucCGyLmQfSTlykI0L+X17qyManO2X7XhvhvnweaJz3YiA2YPeZuRepH
XrqUuspGUf1xNxPSP/iDTYrZnmxcUpXt5SP9he9IRf6EHxt1dvVPv+lR4C2K
St8QzUb0QYEnV1QpfFPW1OqMZeNGuNR2r/0U0vO5rMh4Nu4PZ664vofcx1wV
UdFkNpzVbgwf2Unh3dtOtzmZbHDCtvHpbaJgHr1hX3sl2T95jQb/AgqKEnXN
4TVs8Po3pB+cT84T7nbJoJ4NvzZO6hUeCtlPyqNrm9mYw3/UNHeSCaEH52c/
tLNx8VGG5PMBJvKuvS4L+0niM7XjmVQlE8ET+mZ6v9ko//OsPrKECWv3v+OL
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
47Ozo/jMpzUbMFGJ/wHgLr9V
          "]]}, Annotation[#, "Charting`Private`Tag$23290#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Toaq65k7jTsm0XDqcfaV10lof6x6sfPkJKRuL0lW+VNw6e7ij3OnJuF3svdx
sSkFE2ZlpC6dSfQcadqWqUzB9z3Kbd1nJvFLVq4/5isZ/DnyJ/uMJ3FIaFne
IwsyLGqk5IYdJ2G258rCTY3H+PFRYBMrYRK3RloX5MUSEUdlN1AeTUJiWk/B
fGUiDukX+JynTCL4tHXDIOMhXPJ1P1fSJiFnmH6kmfIQn7x9W8lZkzCe2/7j
87aHCJfUDT6XMwmTg6/vfvydgH3D/Kpr8ydhvzPj1+mBBNjiZbZn8SSWqTNN
dcgJmFrNCj9bPYmilXzSN/ckILA4X52zbhJhjT5O7DUJ2G3r87eiYRL5C6Xl
rR/jcbV5m4NUyyT+ExOw3VQYj5FYHZ01/ZPYuJsjKEo3HnfUt62sGJyEVm/l
wi+5eGz/ySx1H5nEyV2bedmC8bh06Z7kxMQkNPjsD5jNxqFnZ97a8k+TWOru
vDD0MA7uHXer3L5MYnuhqgklIA5bArRvSn6bhNrTD4IzTnE4y5qcfvh7Egye
pRdK2nH48jA3RW9hEgX1/KcOH45D1Km7F1f/mwQ05Q82iMWhJYuv0XUlE5al
fyYSVsfBwXTSZy8HE/fOJ030/SBh3aZcRQYnE+UOpvues0g45Xbqqe4GJlaf
X9U5/5aE6T18Zqs2M4n5rfzEq4yEkN4JvtdbmDAqOpDrn0NCndKdYAl+Jg5z
jT87+pAEq49aqmPbmTjynx3p/QMSVlK3/ozfwUR8ZG7mTj8Sji/LubZyDxN7
v1vnitwggZF3W6hUjIlnIn2ZM5Yk+Fhq9TjvZcK3PrheyYSE8vpx9VFpJtQW
NY5f0CHhsveLv3EHmKD9WO29U52Ehb23C3TkmHhlZXLHSoWEx0OaDisUmTjb
nL9DRJEEpQjePa+UmHDnzhA1PEBCv+r4kNNRJtq96Hr/9pHg9SWbJAYmXqw1
09smTgJf6i2dkeNMeH7xaKOJkFB4XnNlnDoT3/9wHUzcQcJ9nZIgQU0mXgeJ
rzi0neBzYi9n+ikmCtevrRTfRoLMkcdh+08zkW77d7n7VhJWHFq3vkiPia5X
r0y2biGhR/JOlOpZJtZk9Zuu3Uwi8v60ueE8EzVeGmTdjSTcFjCN0zck9DYv
Sh5bT4IeTxtf/0UmOGJ2/SnjJmEX17FH5iZMaAoeOjy5joTvy/O2v79CxOeo
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
/gfzJNLd
          "]]}, Annotation[#, "Charting`Private`Tag$23290#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$23290#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$23290#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c81e8bxouGiDJDGkao0FYZ56qQhCIrshOpbEVkj2TvkM0x8zVSocgm
I9uRlXls0dAyfp/fX+f1fr0+9/Pc13Xfz/08h9fY6sYdmk2bNvlv2bTp/79X
70x3VM5okDZtGqEI8WlJbZHhtv7CdRoqzlTm4JTdpFNJMfGvuGQxciVqQ6uV
RJrgEfBwELwG46/uar0z2iTFVkpRApc6Ns68+W5YaUkSCNxH3jigjdCjbCcP
0bmSVq/efm4kqI957maq8PIz0qx3d61RtBEY2sN/PXseSdIy+VUezmWCA9tb
u6rLEkm1Mtxva+JNsTuWdWNomEw6zi9d8OOAOdL2zZ/ZuZ5HiqcxzD6Udh9H
PZIGOX68ItGNeaZqClri7nM5adJkKalspLO1Rt0aVzIdCp/bV5KsVUyu6kbb
QK4k2OZmQC1JsPJn/Q+KLX7vJgkoX/pIGjr2VCaIyx77elIbp9M/kSKTOCsP
3XoInjZfoxMGnaSru3KkKuIfYVDf+GpDSw9pk5tkqeawA/bX+JFLkj+T3iy2
nPl64DF8Mv7TDx0ZIj3Q1y96auSEOcefz5aujJL4Pn0VO5jmjE1tfy/yDY2T
+qQ9cksmnkD0uz5PXj6VFJzHIqwq6IqGFu7xCzUzJLl96ekzZm64w/2izoF7
geRaH7e7St0dJ7aF31m9tUTSdh2/FvTTHWsTS5vOXf9GOi0uEqQd7YHVSFce
+bs/SLsW7ZsPnfWEYV+nrnfWCmmWXL7jG8UTh+aOiiky/yEls1/39efyRkwj
tnoZrZOcW5/XapZ5Y+nzFecy8iZo+ozQ8N/yQaIXrYbrCRrs/Gnj9i7eF4qj
yt/+hGzF1Muy8qfSTxHOFVezens7qk1oV9WGn2LXlBKXquoOOHZHOs4feIah
11Xrck6MUAscelNS+Qxa32+E73m7C2Kygj+9jfzRLhhM/2k7MyZevbXZlxYA
BCjpcgWw4sP9TQUzMoE4lpSrXjbGhjh+hcXXE4GIstNe1VXggGpE/71rgsEY
Wu9cfiXLBRFF/mzuhmB0tIRwLX/mBh3tgymqWQju8Hk/v+jGA4PS9cIP6qFg
u0X5c+7fASix83ccIofCQnpV9NzMQUjYyC8F/AzF+t7rqRZDvGA/HCp2MzoM
ZvIFnHtH+EHjU6xcQQ2Dz759+k2LAlga6XsgcDYcHnM0B322CaI5hjd3iRKO
06HeHWGqwvCgeyX0jCsSOUN87ZraojgiH+ZXZB2J9qL3jec6xNDpYzUz0BCJ
cs+c3XeOHIcArUiu2KMoOH2yoyn5cAL1a+li3Z3RUEs/dZb91BlYSXmFrB1+
Ds7R++XWB8TB6Wy0JOjxHMtMr4t4WM7C/Pe+osfHYtAfpMEYQn8eO79HnzkQ
GItD7pvb2BWk8frEw+gr47EovHZx/bA5CfrWar9sJOLwQ/66yFwIkL+wq7R2
Og6DkZoXG39fwI1pP6l7cvEQbypq2uUlg5ghJ5nX64nYb+0teUpaARd5tNOH
NZLwozmqTmjLVczqnN1Kl5cET72TbImfrmL//OPbeaLJOKBz8BOnpRKszMUP
bRpMBu1Z5q0KlOtgMcnPIp9LhWm4ZNynLDWYeu3XljBJxXttL6Erwup4lxq0
oy0kFVnXf+1wylaHyej9e7+pqSjuzuHfKNDAa31hEcWoNATtq4rT69bCTe2U
/KXldCicGf2TcE8XXwfU6VO5yTDkOFFr8FcXvvp0d9RkyPBLX7NxC9DDq9tW
3G8iyVBYvMXXVqgPJktpH+ezGfh6a+7RsaeGqPP8rLPNJRNsip9p2Whu4+RL
5m08dDnwKmbSjb59FwwbHrry+/Ph19l+7/EhW8SYa+mLXM5H/mTj3moNWwh0
ixgyW+aDNqJIg8XXFqRsyu2B8nzcfGsWX0O1RWl29Ou3YgXg8Ljdjyw7LKjN
v1f8VABzum7zy0ceQiPrebMdYxH6ZT66CR10RLyep5IpbxGO/5P67HrNEWMs
Fq03zxThGunVxH9PHGHlcqlNWq8IozuY90b0OeLZjYXO7XlFOJl5++vl4Mco
X73U/0LpFcQl9ax1lpxwSHVxuiagGK3XMx44P3UBt5u8hFlKMb4mcj1ZL3TB
7rzkAPq3xah8mHxLdNAFf+nUxFTHimHo3jUVcMwV7ZVv7YbPvYaLO8fRc52u
cDrusf578jWihXR57WndYaXffz3+32v0VW3zWGF3h0ngqRQwv8Gn4LITSsLu
uD49KeMr9QZtLfraNkruEEi++ow14g3ukyrYs8Pd8WkXG5vYhbfIzOHewrvH
AzXSFnc6NN5Cxia45regB0ru17+xv/8W/bk3p7LFPZDW4Kj9Lvot5Le4h7/Q
8ICj21DilYW3kPCqPt8V5gG+rxmHb8eVoPlxygGDLZ5w+HQeMT9KUd7l5rzQ
7wkmsdeTH+nKUGy5bH1hyhPpQccD//GUYZiVKez5d090KAl91pcrg2Lku9Pa
O71wtJnN7lB0Gb6UN47rkLzwpeFrRtHZd3CK526dI3vhkdB95QnFdzChWA5q
vfLCzqfU7+yG76DwjcVnstIL5y8PXXjs9w6ihZkhFoNeiKht6sfndwjyW468
y+4N+SoyU6vTe4hbrjO2h3pj+CDv6/Xg91h8c6nycoo37N3jbx1Pe4+eB138
G4XeSEFEVkTze3z0bPou1e2Nf+Xul3R4ypH9H+M0P48PwvetTgccL8c2i09T
w2I+EHZxCCmXLceHLsOq2Ys+0JCyHDxoUQ41DebNq3d9kF9269FUeTkWjOZ3
nHnng8vcFB6uznKEub68kNnug8HHN2quUsuhtcVjkyPVBzvOK+z+j6kCv5p5
ZiRYfXH7rXiOvUEFmq63Dt2z8cWeYubhzZs/4NpFD0Wfi0+hG/hPfYLjA/g4
Nb51GjxFqslkc73IB2RbmOaluz6FCHtpacDNDyg6uduSUv4Ulx4ZRrEXfECz
2NSroEt+EI/Xyog8Vgmytgh9wp1n0PZrGfWRqIRUZfgR08BneGJ/cZ+DXCUU
L2RovH31DFVKRyO1b1Ui9Hr66yVafyitrXvsf1oJWUVn6YIcfxjpZ+hlDVdC
6SdP27PdgfC+ujc2dqYSwU8oSY4IRIZ4aLf/j0r0HnHYP2IZiHkmJ0UL+iqo
7p7UZ2kLxKMPyudPilehUGFbQHdkEAIP/mR7H1SFckp0xuXTIXgzJtPSJlWN
X3zfFrbphKH3isdykHw1+lz8PeIehWHlvwoOpRvV0DWyd5KPCMNZ5/NGjWbV
cCrwDp9uCUMJ67GVyvBquIZ8JAtcDEepLPfBoulqVN0xeGMvEoH3GUt2kZE1
OBe4qj2/NQqDO8VibyTVwEij5b9r/FFYtb1fsTunBv+YduSnXYiCNKh0QR9q
kEdXt53XOQoVlIEEn9kamNsaCCp8jcIHuoaGRxdqkZPxn492VzSq7yXs1Z6v
xRnnLyfFvWLwaub+ff2VWow/LfA+9CIG6Xcl3t3eVAeR2cMaC0Ux8DGl6Fiy
1YEvescr2rEYXDFmjvOSqsNDf86950ixaNP24fwvsA4pFYUTWIxFZZ/a3VfR
dVg76nfXgjYOBVp8JSXJdRi9vmPPPc44hGt80KoprgOdfO/Yp4tx0FT9E903
WIf99E4KUuHEvXXFgp1WtB5WT6480Tj8Aq0NknfoztajI/+vjbzkC1Rcpn/N
eLEeVSOWtLTKL5Akm6nOqVGPzizrm71WL2B8YTRC1KUe+72+L00XvYDah/zx
k0/rcY777h++mheQJbmeOhdWD1dWJqFDXS9wSGpv1yVyPe5f+3vK49sLTJ/V
YLnZWg+3DL/7MWLx+PyG31iPUo97B1o0WKTj0XTmW6HxaD3e7PDRV1eMR+6p
EFWLn/U4fStp/LhZPCyPfQz13NcAc6fLB5Ti4/FTUHpXnkUDksa1th5bjQdp
7FKDv2MDKovDnQXoEuCbcMXtrlcDlr3r3QZYE8DBpv6VP7YBBw/s9Ak5kgDx
zffb4mobMNNvHnNAIwGu762fOrY1ICAx+/UxgwTUOzyCZn8DFHjuLm01T4DW
okc+81IDYt0lL29/kgDHgZgQv72N2Clq5myVlIDK6ER5U8FGmNKUHK3JTADd
jfQNmRONODG1tjKWn4DYxnyrjcuNiHWzzvT/kICy1/XXH9k24uq7/vXIwQTQ
2LRsV3dpxFCcDLvJeAKuinR+OOHXCCl7z6ltswkYSB06tpDQCDrSLduWlQSs
hvzYZfKxER3rk1mPmRKJc/q34WJ3I9jf2GTSsSUicNsm9wNfiHwU+SUfciVi
nwvDUv+PRiQa7zwxz58I0j2+dtWDHyFeP5D+6Gwi3GRVQuHwEbwDD9au6CSi
cUPjyj7Pj5DmFGzV0U/E7ne3Nv0L/Air/I7PRsaJSD5hZv0m9SOiReX1Ne8l
onK/q4rop49wKs4KoHNKBM2f3N17DzUhR8pThCMuEXtbL33HsSYcGtqiQ5OY
iNMpn3tMzjdB6T+H+2spibijsP3Ff8pNsJGw5BPMIfaPNT506VETru7ZFnX/
XSJGLf5sN3NvwjtDo6e/PyTi78XQ2QD/JmRnbjqfXJtInKvy/J7EJkQPjATL
fUpEiASXhHlDEwqqR4V2jycii6mAJ7ijCRpxucdeTBP5jl3eKBpogvr5cw+V
FhPxzd++dvVrE+L29fsK/U2E5kDbtVDOZpxi6ayZZE0idJueeM3XjGrZEMGP
3Enw81pj7RdpxuCdWPMh3iSUHj36mf9iMwRLQtMTjieB54nv7bfmzfitpKaV
rJKEMyr7Lg/aNSPwRNEWMe0kXBMoFt7sSsSvvZZdMUqCW8vowtXwZuTF8NhL
2CdhjEfacbisGdZrz1dfvkjCv6UuHdq6ZuIc9hcfyUgCW909aeG2Znw801oz
W5CEyxYxNLbjzfhK75t2piEJ2eXfA7fubMHIJS8Dhl9JqA7ztzrC0YKe6bvd
fZuT0X+H98b1gy04db5m9jpdMnYyXd8Te7oFu2wWtueyJ8NaPydFRK+FeFcm
O/KcTIb4huEbtf9a4D5tb8psmwwl5UpPuZIWrHTp/gx2SsbtFweun61uwflX
/x084ZWM0LPDU9y9LXBdTdUdj0zGjNUtrrG1FtBFaR5YK01G/IjGE2vlVgRv
OnRymD4FRWKvrxhrteKLV8z7aPYUND5hY1c3agXNTjkhm4Mp+MnZlXf2YSuG
qfdZ/cVTcE1V5ct6fCuGuJf1LpqkYHP11UtB861o9GG6cL8uBZy7c5jcVlph
Z6TLwNyZAjH9HQPWmz7BvtgytmM4BTp/G+zU2T7h6KRKTfLvFBSflCPvlfqE
d3+ESsxEiXd3GuhyAj5ho7SkkOVFKlq8T3+qP9IGc7n62sOeaZDY1UwTdqYN
WjvubTsenoasWKOzty60IYiHN1kqNQ1e/wUnf9VoQ5PF158m1cT3fdO2nB5t
ULMWNaLQpCPraMKee5Q2xK4xalt7pePSjGfBtkvt0NneTk/rQsZjsU9N9+Xb
cX71lOL2QDIK7Lgm25XawVAg8+dHHBn71/O5Xmi1Y/O+S9eelZDxh2XI85hF
Owx0pxndvxHfS53VuBnTDg8pPk4aowxMeXhalSe0I/Nti+Qlywzsb2h9xpfW
Ds5P+UcNnTMQqGpSMZ/XDo5yOaZTURm4axom5FHTjvyaLDaBhgwcCJ37k73Y
joeBCZyF/JmoMHLLLvpOcCNzUrtoJvRPsWq/+90OQ0aJr01nMxHfK1HSQtOB
h2yWD64pZoJzn/+jrxwdxLsjz9XXOhNvF/cJ/t7bgea+O6q2jzOhWVnYs4m3
A7eEN0zFPTMRdfvzaZajHRDDquXliEyw5Ah/P40OnIxRveL2KhOFzu9TpWU7
0HRsS4jgu0yoKKvcuKzQgc56GaH06kyELDkUaql1wEKsNoi3IxM7zzZYOZl1
YNM8qY5vPhO5dLcOeD3oQOGHW+cff8vE1f7FTwE2HcgtuylA/p0JPxcOsQTn
Dqzclvv2ZEsWttbemf8Q0oHebxXOh7mzkB7150VjZAdSyxQ5Dx/IgqxZkGJH
bAcYnDha1/iz4En/OmcsrQPjqv6lgqJZ4B28ojOX1QE71RwG5xNZqMwb3PEj
j9D3609O+pksrKtsMd9a0gEln49/HaSzkMAXw8lU3oFYh8hy3otZkPpxtJGj
ugNc2ke+Jctmwfm5mpBwSwfuudttOqiYBW7zqd7jHR0YzVuWPHgtC2USzr7n
ezvA+DEucEUlC7+HUievjnTg8bk/JEHNLDzPF49Sm+yA8xnl7e43syDu0SSr
O9uBT492FxXoZKH3hv4Pk69EPjrO1iW6WXgo8C3N4kcHbMR+2T7XzwLbio/a
oz8dWFTlm1E2zEJxAxet23oHkjy6Nw8aZUEtNq/oKW0nmKJlFi/ezsK3exeN
Q+k6QdG2+udmkoUwqR7mWMZO7O3Q846+k4XjTOZVKSyduN4WPO5jmoW2L6vW
OXs6Ub44b3vNLAuWhaEHX/F0wp29M2CJYEYvgfZ3vJ0QFtr59MHdLLxUL3Gr
FezExPjo+2qClQSVjrUe7cTOlT0+3wme+/VluOd4J36IrYhvEPzGLKT6qngn
zv42uzNGsDuFlPFBshP3h0W74whWlF98dvpiJ6i8+34KE8zxNsEi+3In+oPE
bwUR+48KKqvuV+rE2IVfGY1Evi+jV09HqHbCktvJcYDQ47DtJSedVif4VqOs
6gm9lx7dWn2i2wmepsmj/oQfjFT6kWWjTpBftSsJGWehT6OsxtSsEyl14TaJ
hJ9pdeaZAw86Idood36J8NvyDFeAim0nWu/OXtqnl4Xz5EbLOodOhBXZiAre
ysIWdscbEi6doKnQj2XQzkLcj14uAb9OKK4vzFqqZ+GOie9aTBARn/jXeFGV
8Lv7zChjRCc89WptlK9nof5VZNavhE4orEk65ylkYdn2xtnmV51Ys640ZyD6
8f3Y5r0XSjvR9u1PVcL5LPjeKFwvruhE73N1Hg7xLPCc3F2f+LETf/f+fvpe
LAtXllvVbb90Yp0szfd3fxZYjVzOTU10wpfp6qNe4vwMt4vw6M52Qm9VWjqZ
Iwv2BQHjcj8Jf/b/nN9gzEKSlYItF0MXyLXqoQyrmVhZqA2pFO/CG7bGYIne
TFTp2dudkeoCo1nufjPifAe28mvlXOxCo+SZ1LCWTPDlee6PVOpC1KJk+wQx
D5QfXMgzM+7CrFDRwdT8TKTPvmtiCu7C852hIpb+mbB8fp3/XkQX8R7dtp/Z
NxNnZced62K6wND5o67aIxNNCfSiT9K6oLEsoqhJzKtlFe2QmZIuMHeS3+iY
Z6JsbX5KtqIL7tGbckLuZMI7x/1Cck0XtP7YnBwwIubflqxlzU9dCD+w62Wp
TiZIb1fUase7END0YDlPORN0Jv4vD8x04cPkQYnCq5no3L1/q/NiF46W7rXq
lM/EnXtyb078IeLva1JsLmVCbM9npqD1LuQYlj1bRiZ+1zwwm6btRv6mqPPh
0oQf+yI5k5i60cbY63/+PDFfm4Rs/rJ241CvV+ZFYj4fcHj3UYOrG9uO7iux
OJOJaf7rfIX7u6Hj+sGx4lQmitrHnHYKdKOhqSf99MlMPHF51GV2uBt5Hby/
2o9n4vIRepEasW6kKM9wRR7LxG5Kgvf+091Q2m0e6SqWic9eJ4Yen+/GGtPk
dChxP6QerzvTQ+qGZ7VvTLNIJh4M3Qw+LtuNV/Wq/McIFvefpwYodMN6iZPu
/dFMbDrrjqlr3SgbtKu1JbhpnDXmkno3lP8Vd6sRHBGauZSg3Q25PSOvDAjW
lZZU+KPfDTHDlIFoggVnP6Wom3Sj+6ds7R+Cl6KN/+abd2OF4/WwH7FfmczK
DQarbny3+GsrS+TnvfQs19S+G34vH5SIEPkrJ+zbUv24G0+kGiYuEvo4rhbq
7nPrxmCckIg3oX9kRfa1ozfhhzpd1fcTmchJ62PsftYNtSyp7lDCP3uVB6bH
Qoj8W+YjbxH+ktY2Kvwju/FnOPy4OuH/9pyIPdTYbrA7/O50IurTrilkfTGp
GxYTpzPaJDMRR/uuMT69G6XV2R03SJkwKbjG+zu7G3v4FfS3XCTqrzf2WC2/
GxrvSacmZIjz8GbHUfqybixtjZMRI/rH/3aC150PRD3vPboYQ/SX+u4Tg5W1
3WiRiN95XJWot/nNIIe2bnzeK+syfZOoN8f8ZGc34ceheQqdXiaca9xIYv3d
xH1w+p4m0b9M+zK/Tkx0483iTw/He5m4oOk1ND7Tjb549spflpmwDTFoHlvs
Rj8Tk2qCXSZ6N3Nmjvzuxs7dv7fruGQikeqnP7izB5UhnJ9Dwgm9B+4oDTD3
wLt9ufZsTCZotC9K9HP0gO2IPz9tYiZMm/+w9x3sQam5bBFNDqG34F5r1+ke
xKYeWY+uyYThzOV3ned7UHdP+6RyUybC+fizO0g9mKsue8NHzIOVyAHvtis9
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
W/WNJw==
          "]]}, Annotation[#, "Charting`Private`Tag$23290#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
w+JYR1VX3JFInH/83Y1Z3/Uo5e3rK0xiQS35j5zPPiHo77/oqZDCwsY7iYOc
r/gxafVPpPwBC7LJBj7iojwIj0qoPZDBQrglf0RSy1+SdPUO82cPWdjkuTdI
6+hXUsPH+j//5bDAFZgx0mrGJlmsNk5vzGOhQjT1+g6OQdKCCpuk+ZiFwz32
4p1fmkiJdjc/vC4k/Ld6y/G/IymkvfFCwXrFBIeICLYPZZA6nudv7SphQWq5
RXJX7yuSE1ut1bicBdcv0nuj7wyRlq/tcSBXshCx6cxG1WsTpGySA595DQsn
/zqlSv/+SoLTnwLaMxYs5RtMBfL/kaj34vVs61mI2xLr8iKDB95NMjPMBhZo
8otXj9isxLqZutiLTSz0O3qqdd8WQpnoyb3Tr1g42vl65troehhojve4tLGg
0l0dLlwpjimXG9e+trOgcIxX8SyHFDFPCa73esfCF4UxCzmmNLa+zq3+3UGc
XzOqH7ZsOyw3d/3i7GPh10fxyl4OeQiIuVc9HyDq49lQlHryXjStXe/mOcjC
fCbpCKlfEdtXWExM0Ih8lc4/f1d7EIPciznZH1iQi+tqsLBVRdTiQ2vLMRZM
PO1bNiuoY+4ri9w1wUJ+9ZOfW1KPIHs2MiHyEwu9ZWvX9isfhemknMHRWRZm
RfN/Zo1ropbu3lr9lQVN7w3kBB8dBL9ZrEhfJPKvbe7vpH4SSi1ZLmc42RAM
WKpTMTUCu0FztxAPG04ivkkiHsbQr4zKDl3BhvLrRG/OLlOszxS5c3kdG6Wt
F9oS5s+iPeWZvswGNijzPZ9oJy1wI9GSjyHGxtrHfsEqzyxBj8wOMJZk48xQ
PmVjnjUeeyg4H9rFRq/NEcn3387D3KVn51c5Nu6Nrmwrbr+A1U4e40/2sFHr
46cvkmUHd+s6S6kDbEgXNqr5WjtATVdLj/cwG6Pnq33jhJ0wqzm5vEmDjRuB
CvPZ/JfxENHNN44RHJOboUb0M54DvYdmddlwvtcn+We1MzolrWQHTrFxJTVj
Q7+sGwLFOZmxZmwEmhhfmal2w/71uZk6FmxYbjUY0dZ2RzL/lEi9DRvxXxKP
vXS+hvPfPZflXCbiTcraVTboie9vY0Zdgwi9HJX4rUV9QV05cPFvCBv26roB
MQ2+aNaXmLsVzobA60dLTx1uIr6z8E/GbTY8533evqn3w67e1+s67rGRqL7p
zq7DgbAa4tTeWchG7h0pJ1XFEGiKH++ofMJGSjrra39iCHZbxJscLmGjqkiE
y2EhBAvUzTZnKtlovqnV6dQcioQPaj5hDWxc7JsR/GUbjja2Z9HHXjZOBuxa
Od8ZiSeyL/ZdHWDDdPddf8rhKNy9xFO7QCHOs+UNLK2Igs2nhBZBGhvU5V0b
DqXdxu/ZEpo6mw3Hcpltad4x2PNjUjD1DxuabTBULIlHMo+Vh/G2CSzNOe0Y
mknE4oUNB3q2T0DmEOfAf0r3YPeq+7vhzgnUcdVOCfrew97go14nFCYQyTGU
xM2fhPYl2Rs6KhPw9a2a2ih/Hz9/fw0g6U/gRpFDGetWCk7PR97e5TGBnYUh
2rdjM1B/8qh+wXWCT7486j+aAenSv6tkfSYg8CnId1g5E7POLrEy/hNo0Rfs
7PiQibBp0ztSERM4MquysyPtISrZkvdF0iZwKbar0mApC2vpVdlcLRPQYn9R
cZ3KRewqP7+atgmECYV8Hd+cB341TbMrbyZg9nO87Z5JHriSe1eTOycQe5xb
OedFHr4YzXkXDE1AZNLnqVtiPrpbZQ1PzhG80GjRpP8Y0cUP/qSLT2KMb/qG
MbsIy/yCTA+5TeL+mqb+CXoZKuenf728Nom+U8IHnv8rg52DWabW9UlsvCBW
myNRjhbDPVMmvpO4mCr5p9q8HKHStADnsEmI0D5pjVPKwdOuUpSTMolamSth
Z8gV4Fr7mVOgeRKJ2UXGWmNV4CiwKhkVnsLjiy5xb1Tr4J5aEiPcPAVQu9In
DZvxYncEn5DzJwQzaupbJ15DSNddLlhgGtW/I8fcLTpAle/u86mfxt31Xh8i
8ntQmoFtTKsZZFhMbPln3Y9zJcpCmxZn8FpEXv3OHBmBYVlB1MJZFGXJ/8y6
OYTVXry6tsWzqFG6dvd22BBSL14VZpXMgjPgsbhr7BAq9A7lzFXOQqaD2rvz
4RBYQj0tXC9nYfZZysD61RD0Mjj4dvbNgn/n47gOvmGI1FjHev6Zxa3Nfr8S
4oZRPLHpgYD+HLREHVndt0cQkR5mQzeYQ3c9qAqJI7AznpF5ajSH+MfblMPS
RiBRX1964swc+IRy+TcWjyAqzqIt+vwc3I85s6Y6RnBROWWe32cOyafkN4gJ
UCEduk6HN38OfhPejlkRVCyq3FxNeTyHW185XHnjqRiaGevNL5pDbiVPpv19
KuLPVJzTKpvD/Dmhq/z5xH/XLuNrYfXEemf1su/NVFB74jK4++YgEVa9w/gP
FbXhPy/0DcyhIcVdRZWLhkQ16505g3MYOiNrJ76CBr08hUoN+hyWq6vyvxKh
oc67403Q5BxUvuwMrtpHQ5L8gTij6TlMpw9bWKnQ4DaaZrplbg7FKt76SyQa
ZPWvMBq/zUHWOM51pz4NPJz9ufE/59Ahtjqn3JiGD1VqTja/ifd1gVP7z9JQ
75SzZ++/OYRYXtIqtqbhvuTK70tLc9ixS6t6swMN/wNnaVCx
          "]]}, Annotation[#, "Charting`Private`Tag$23290#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c81u8XxouGFGUkpGGECqmUEs9VRhLKlkJIQiGjiKyMZJOdzWP7GlEI
2WTvR1b2JhpKod/n99fzer9e97nv61zn3OdzP5wGFir3qbZs2eK9bcuW//9e
vz/TUTGrTtqyZYTCx6Upvk2K/fEXNhEoOUwx+CfsI52Ni4h+yyaNiWuh/zRb
SKQJDh5XW94bMPrqoto7q0WSb6Hkx7CpYev5d9/1KsxJPL6HyP+OaCHoJPOZ
YzROpPXr98L1eXUxx940xb/yijTn3l2jH6YP2vbgX6/CQ0iahr/KgtkMcWhn
S1dVSSypRor9fXW0EfZGMv0bGiaThLklcn8cMUHcoYVzezazSdFUeunHkh7i
pGvcIMuPtySasReJGrzmMA6XkSBNFpNKRjpbqtUe41qqbV64TQXpsZLhde0w
S0gV+Vve8qkh8Vb8rPtBscLqPhKPouQn0tCpl1J+bDbg6ElsmEluJYXEsVYc
u/ME7G2e+qfvdpKu780QL49+is+6Btfrm3tIW5wvFWsM24Kj2otcFP+Z9G6p
+dzXI8/glvKfbuDIEOmRrm7+S317zNn9fLV8bZTE1fpV6GiSA/61/rnCNTRO
6pNwzSyaeI6T33U5snOmSP7ZjPzKvE6obWYfv1w9S5I5lJw8+8AZ99jf1Nqy
L5Kc6qL2Vaq54NSO4Pvrd5ZJWk7jN/x+uuDvxPKWCze/kUTOC/hphbnib4gT
h6zxD9LeJZumY6IvcLevU9s9bZU0Ry7b9Y3yAjzzJ4XkGdZI8ftvenqzuSOs
Advd9DdJDi3hNRol7vj6+ZpDCXkLNDxGqLjveCDGjVrd6TQV9vy0dP4Q7Ynr
o4rf1gK2YzqrpOylxEsEs0VVr9/biSpD6nXV4ZfYO63Apqy8C3bdIXYLR15h
qLByU8aeDqq+Q++KKl5B87tK8IH3eyEkzfvTXd8b7bz+tK07GTDx9r3loSQf
wEdBm82HCR8fbsmdlfKFUFymWskYM6K45ZYKJ3wRaq21ri3HAuXX/aY3eP0x
tNm58laaDQLy3Ons9f7oaA5gW/nMDhrqR9NTDwJgyOUefsWZA3eLN/M+qgWC
+Q5l7cLfI1DYz91xjBwIM4l1wQuzRyFmKbvs8zMQmwdvJpoNcWL/8UChW2FB
eCCby3pwhBtUHgWK5VNB8Dh0SLdxiQfLI32PeESD4TJPddRjBy+aIjgzlynB
EAl07whS5ocrzVu+V2whSB/iatfQEsQJ2SCv/MchaMsvbbjQIYROD4vZgfoQ
lL7I2Hf/hDB4qAUyhZ6G4lmrNVXRx9Oo20gW6u4Mg0ryWdH9Z8/BQtwtYON4
OFhHH5Y9PnIerA76y7yu4VimL8znYBSFye9D+c9OReCznzpdAO1F7Pkedu6I
byR4XLa27ZeTQOHpJ2HXxiORd+PK5nETEnQfq/6yFIvCD9mbAvMBQM7i3uKa
mSgMhGhcafh9GSozXuKmMtE415jfuNdNChFD9lKFm7E4/Nj90lkJOVzh0Eoe
Vo/Dt6bQWr5t1zF3W3Q7TXYcXHTOMMe2XsfhhWf3sgXjcfj20VZWcwVYmJw/
tmUwHtSiDNvlKDfBaJiTRr6QCKPgS1GtaaowcjusJWaYiFItN75r/Gr4kOi3
qy0gEWk3f+2yT1eD4ehD099TiSjozuD+l6uOQl1+AfnQJPgdqozS6dbELa2E
nOWVZMieG12LMdXG1wE12kR2MvRYTtfc/aMNT12a+6pSZLxM3rB09tHB23sW
7O9CyJBbusPVlqcLenMJDwfRFHy9M//01Es91L74fHuHYyqY5T9TM1Pdw5ks
hh0cNBl4UUCvHXbPGLv/uWrLHs6BV2e76bNjVogw0dQVuJqDnMmGg1XqVuDp
FtBjMM8B1et8dUZPK5DSKfcGynKg+f5BdPWUFYrTwwrfC+WCxfVeP9Kssai6
UCrfmgtjmm6TqyeeQD0tvMmaLh/9Up+c+Y7aIVrnhYIRZz6E/4p/drphhzFG
s5Zb5/Jxg/R24r/ndrBwlGyT0MnH6C6Gg6/77PBKZbFzZ3Y+zqbe+3rV/xnK
1iX73yi8heglnce3l+1xTHlpptqnAK03Ux45vHQEu7Os2IOEAizHsj3fzHPE
vux4H9r3Bah8En9HcNARf2hUhZTHCqDv0jXtc8oJ7RXvrYcvFMLJheXkhU4n
2Au7bv6eLEQYnzanDbULLHT7b0b/LURf5Q7X1f0uMPQ9mwCGd2j1LzmtwO+C
mzOTUp7i79DWrKtlqeACnvjrr5hev8NDUvn+9GAXtO5lZha6/B6pGezbOA+4
olrC7H6H+ntIWfpX/+Z1RdHDunc2D9+jP/PWdPp5VyTV22l9CHsP2W0uwW/U
XWHnPBR7bfE9xNyqLnYFuYLra8rxe1FFaHqWcOTuthewbb2IiB/FKOtydljs
fwF6ocLJTzQlKDBfeXx5+gWS/YR9/3KUYJiJPij8+wt0KPB91pUpgXzIBxGt
PW442cRsfSysBF/KGsZvk9zwpf5rSr7oBzhEs7fMk93wlO+h4oT8B9ynmA9q
vnXDnpdT3/frfcD1b4wekxVuuHh16PIzrw8QyksNMBt0w+uaxn58/gB/r5UQ
4/3ukK0k07fYl0LUfJOuPdAdw0c5Czf9S/H1nWTF1QR32LhE3xFOKkXvoy7u
f3nuSMDrtNdNpWh80fhdvNsdf8tcJG9zlCHjP7oZbg4PBB9an/ERLsNOs9bp
YSEP8DvaBpRJl6GiS69y7ooH1MXNB4+alUFNnWHrurEHckruPJ0uK8OS/sKu
cx88cJWdwsHWWYZgp6zLqe0eGHymUn19qgxa21y32E15YNdFuX3/0ZfjdxPH
rBiTJ+69P59hc7ccTTdbhkwtPXGggGF469aPuHnFVd7jykto+/5Vm2D5CC5W
9W+dd18i0XCyqU7gIzLMjLKTnV5CYH9xsc+tj3h7Zp85pewlJJ/qhe7P/Yhm
oem3fpJeOB+tmRJyqgIpWgK0MfdfQcuredRDrAISFcEnjHxf4bnNlUO2MhVQ
uJyi/v7tK1QqnAzRulOBwJvJhcvU3lDY2HQ9/LICMvIOErkZ3tDXTdFJGybW
/+Roe7XPF+7XD0ZGzlbA/zklzg6+SDkf2O39owKUE7aHR8x9sUBvL29GWwmV
fZO6jG2+ePpR8eKZ85XIl9vh0x3iB9+jP5lL/SpRRglLuSoSgHdjUs1t4lVY
5fq2uON2EHqvua74yVaB4ujtGvU0CKv/lbMoqFThjr6NvezrIIg6XNRveFCF
Z7nuwTPNQShiOrVaEVwFx4BPZJ4rwSiWZj+aP1OFyvt339kIvEZpyrJ1SEg1
RH3XtRa2h2Jwj1CkSlw19NWb/7vBHYp1q4fl+zKq8Yd+V07S5VBIYIrG72M1
smhqd3I6hKKcMhDjMVcNY6u7vHJfQ/GRpr7+6eUapKf856HVFYYq05iDWgs1
EHH4cua8WwTezj58qLtag7GXue7H3kQg2Vjsw70ttTg5d1x9MT8CHkaU2+bM
teAM2/WWeiwC1wwYotzEa2HjzXrwAikSbVoerP/51iKhPG8CS5Go6FM1fhtW
i/WTXsZm1FHI1eQqKoqvxcjNXQdMWaMQrP5Rs7qgFjtle8dar0RBQ3ktrG+w
Fodo7eXEg6MweM1sP7VgHcyfX3uufvwNWuov3acRrUN7zh9L2UtvUH6VtpDu
Sh0qRsypqRXfIE46VY1VvQ6daY9v9Vq8gcHl0deCjnU47PZ9eSb/DVQ/5oyf
eVmHC+zGa1zVbyBNcjp7IagOTkz0fMe63uCY+MEuSXIdHt74c9b12xvMiKoz
3mqpg3OK18MIoWh8fsdtoEOpg+mRZnVGiWg0nvuWZzBah3e7PHTV5KOReTZA
2exnHUTuxI0LP4iG+alPgS8O1cPE/uoRheho/OSV2JttVo+4cc3tp9ajQRqT
rPe2q0dFQbADD00MPGOuORu71WPFvc55gCkGLMxqX7kj63H0yB6PgBMxOL/1
YVtUTT1m+00ijqjHwKn08Uu7tnr4xKYXnrobgzrbp9Dor4cch/HydpMYaC65
5jAs1yPS5dLVnc9jYDcQEeB1sAF7BB84WMTFoCIsVtaItwH3qYpOVqfGgEYl
+Z/U6Qacnt5YHcuJQWRDjsW/qw2Icn6c6v0xBiWFdTefWjVA/kP/ZshgDKgs
m3eqOTZgOEpqv+F4DK4LdH487dUACZsX0zvmYjCQOHRqMaYBu0h3rJpXY7Ae
8GOv4acGdG1Opj2jj4W0/J/6K90NYHlnmUrDHAvfHVtcjnxpgLE896UnbLE4
5Lh7uf9HA+IN9pxe4I4FyZSrXfnoJ1yoG0h+KhoLZ2mlQNh+AvfAo41rt2PR
8E/92qEXnwBW3pbburHY9+HOlr++n2CZ0/FZ3yAW8acfPH6X+AkRgrK6Gqax
qDjspCTY+gnPC9J8aOxjQbWWue/gsUZkib8QYImKxcEWye841Qi+oW23qWJj
IZLwucfwYiNu/Gf7cCMhFvfldr75T7ERNmLmXLwZxPmRBscknzZC8cCO0Icf
YjFqtrbzgUsjyvX0X/7+GIs/VwLnfLyJ/VO3XIyviYXAXFlOT2wjIgdG/GVa
YxEgxiZmUt+It1WjfPvGY5FGn8vh39GIW1GZp97MEHrHrv7LH2iE5sULTxSW
YvHN26Zm/WsjYg71e/L9iYXGQNuNQNYmnGPsrJ5kioNFjtHpQq4m1EgH8H5i
j4OX2wZTv0AThu9HmgxxxqH45MnP3FeawF8UmBwjHAeO55733ps04Y+Cqma8
UhzOKR26OmjdBP/T+duEtOJwg6eAf6sTEb9RKL2qHwfn5tHF68FN+C+Cw0bM
Jg5jHBJ2wyVNsNwIX896E4e/y123qWubcO9yf8GJlDgw15pK8Lc1EfempXou
Nw5XzSKorMabsEzrmXSuPg7pZd99t+9pxqik293dv+JQFeRtcYKlGT0zxt19
W+PRf59T5ebRZpy9WD13kyYee+hvHogUacZey8Wdmfvj8Vg3I0FApxn3RuPt
OM7E4/w/vXeq/zXDZcbGiMEqHgqKFS9kipqx2qX9098+HvfeHLkpWtWMi2//
O3raLR6BosPT7L3NcFpP1B4PicesxR22sY1m7AzVOLJRHI/oEfXnjxVb4Lfl
2Jlh2gTkCxVeM9BswbBbRGnY/gQ0PGfer6bfgq17ZPgsjybgJ2tXtuiTFgxN
PWTyPp+AG8pKXzajWzDAvqJzxTABW6uuS/ottKDOg/7yw9oEsO7LoHdebYGl
vvZuhs4ECOnuGni8pRXWBeaRHcMJuP2n3lqNuRUnJpWq438noOCMDPmgeCtK
1viKHggS7+4k0GT4tGKzuCiP8U0imt1FWutOtMFYpq7m+IskiO1togo61wb1
XaY7hIOTkBapL3rncht8ODjjxROT4Paff/xX9TY0mH39aVhFrO+bsWJ1bYPK
Y0F9ClUy0k7GHDCltCFyg07rsVsyJGdf5O6QbMedne201I5kPBNqbXwo246L
62fld/qSkWvNNtmu0A66XKm1H1FkHN7MYXuj2Q7qQ5I3XhWRscY49OKUWTv0
tGfoXL4R68VF1W9FtMNNnIuVSj8F064vLMpi2pH+vvmSpHkKDte3vOJKasfB
1pyTeg4p8FU2LF/IbgdrmQz92dAUGBsF8blWtyOvOo2Zpz4FRwLn19KX2mHr
G8Oax52Kcn3n9PzvBDcwxLULpkL3LJPWh9/tMKAT+9oomoroXrGiZqoO2DKb
P7ohnwrWQ95Pv7J0wMkm28nzcSreLx3i/X2wA61995WtnqVCoyKvZwtnB3T4
/xmdf5GK0HufRRhPdkAY6+ZXX6eCMYP/uwg6IBKhfM35bSryHEoTJaQ70Hxq
WwDvh1QoKSqpXJXrQHedFF9yVSoClm3zNFU7YCFU48fZkYo9ovUW9g86QLVA
quVaSEUmzZ0jbo86kP/xzsVn31JxvX+p1ceyA1klt3jIv1Ph5cgiFOPQgV/3
ZL4935aG7TX3Fz4GdIDyrdzhOHsakkPX3jSEdCCpRJ71+JE0SD/wk++I7MAe
e5aWDe40vKAtzBhL6sCEsncxr2AaOAev3Z5P64CNcsZuh9NpqMge3PUjuwOn
fq1lJJ9Lw6bSNpPtRR1Q9Pj0x1YiDTFcEaz0ZR2Isg0p47ySBvEfJxtYqjrA
rnXiW7x0GhzCVfn4mzvw0MV6y1H5NLCbTPcKd3RgLHvl0tEbaSgRc/C82NsB
+k9RvqtKafg9lDh5faQD9hfWSLwaaQjPOR+qOtmB5+cUd7rcSsN510Zp7bkO
tD3dl597Ow29Kro/DL8Sem47PC7STsMTnm9JZj86YCX0yypcNw3Mqx6qT9c6
8FWZa1ZRLw0F9WzUzpsdiHft3jqonwbVyOz8l9Sd2BsmtXTlXhq+mV4xCKTp
RJ+WxV9nwzQEifcwRNJ1gqNDxz3sfhqE6U0qExg7cbPNf9zDKA1tX9YfZxzo
RPnSgtWNB2kwzws8+pajE677O32WCaZz42n/wNmJ43x7Xj4yTkOWWpFzDW8n
JsZHS6sIVuBVONVyshN7Vg94fCd4/teX4R7hTvwQWj3/j+B3DwKqrp/vhOjv
B/fHCHahkFI+XurEw2HB7iiC5WWXXolc6cQU56Gf/ASzvI8xS7/aiX6/83f8
iPNHeRWVDyt0Yuzyr5QGQm9W2LrIa+VOmLPb2w0Q+djuyGKl0ewE13qoRR2R
r+TTO+vPtYl8GydPehN+0E3Rjqzod4L8tl2BzyANfeol1UYPOpFQG2wZS/iZ
VGuSOvCoE4INMheXCb/Nz7H5KFl1osV4TvKQThoukhvMa207EZRvKch7Jw3b
9tupiDl2gqpcN3K3VhqifvSy8Xh1Qn5zcc5cLQ33DT03IvyI+Ng/BkvKhN/d
50bpXhN+6tRYKt5MQ93bkLRfMZ2Q27jkkC2XhhUrFdGmt51Yf1xhspvox9Kx
rQcvF3ei9dtaZczFNHiq5G0WlHeiJ1yNg+V8GjjO7KuL/dSJtYO/X5YKpeHa
Soua1RcinizB9edwGpj0HS9MT3TCg/76017i/gy3C3Boz3VCe11CIp4lDTa5
PuMyPztx8PDPhX90aYizkLNi292F5Bq1wN3rqVhdrAmoON+FQuYGf7HeVFTq
2FifE+/CngeZhx8Q99u3hVsz40oX6i+dSwxqTgVX9ovDIQpdCF261D5BzAPF
R5ezHxh0YZYv/2hiTiqS5z400vt3IXxPoIC5dyrMw29ym77uIt6jOw4zeKZC
VHrcoTaiC7s7f9RWuaaiMYZW8HlSF9RXBOQ1iHm1oqQVMFvUBYZO8rvbJqko
2ViYli7vgkvYloyA+6lwz3C5HF/dBc01yzMD+sT825a2otHahddH9mYV304F
6f2qas14F3wbH61kK6aCxtA768hsFyomj4rlXU9F577D2x2WuiBQfNCiUzYV
901l3p1eI+IfalAsJVMhdOAzvd9mF7L0Sl6tIBW/qx89mKHuRt6W0IvBEoQf
h0JY4+i70UHX633xIjFfG/ks/zB1g6/XLfUKMZ+P2H74pM7WDZqTh4rMzqVi
hvsmV97hbmg7fbQrP5uK/PYx+z083fjU2JMsciYVzx2fdj043o2cDs5f7cKp
uHqCVqBaqBtJirNsIadSsY8S435YpBs39pmEOAml4rPb6aFnF7vxj35yJpD4
PiQK157rIXXDvcozokkgFY+GbvkLS3fjXZ0y9ymCz3svTPnIdcN6mZWm9GQq
toi6YPpGN8oGrWusCG4cZ4qQVOuG0t+CblWCXwemLsdodePagZG3dwnWlrgk
t6bbjdN6CQNhBPPOtSaoGXaD8lO6Zo3g5TCDPzkm3VhjKRz2Is4rkVpV2W3R
jVWzP1bShD735VeZRjbd8Ml6VCRA6FeMObSt6lk3nMTrJ64Q+bFcz9M+5NyN
L1F8Au5E/iOr0oV27t3IVaOp/H46FRlJfXTdr7qhnibeHUj4Z6P0yOhUAKG/
eSHkDuEvaeNfuXdIN9aHg4XVCP93Zrw+MBXZjQO2vzvtifq0a/A9vhLXDYsJ
kZS2S6mIov7QEJ3cjQ9V6R0qpFQY5t7g/J3eDTZuOd1tV4j664w9U83phmYp
6eyEFHEf3u06SVvSjW/bo6SEiP7xvhfjdv8jUU/Tp1ciiP5S23d6sKKmG61i
0XuElYl6m9zys23rxsBBaceZW0S9WRYmO7sJP44tUGh0UuFQ7UwS6u9G+1MR
Uw2if+kPpX6dmOhG0dJPVzvTVFzWcBsan+1Gf/T+il/mqbAKuNs0ttSNQXp6
5RjrVPRuZU0d+d0Nun2/d952TEXslJfu4J4eVAawfg4IJvI9cl9hgKEHHu0r
NaIRqaDSuiLWz9KD/Se8ualjU2HUtLa/72gPSkyk86kyiHxzTVu6RHoQlXhi
M6w6FXqzVz90XuxBnanWGcXGVARzcad3kHqwUFXyjouYB6shA+5t13qgWJx8
//gX4r3yTEG8SZvYP/SVRCgxTxSlhDKr3Hvw2UeRrCaeBqfntJGVr3pg+iRG
ooD4vuYWTnlW+Pfg6u1FK35F4nvHH2dQHtEDzvljrfLEPB7cs4+9JKsHdzPl
5Ixd0/Cod8Urr7sH4v4qL9CYBl+TQqN4nl58OuvX56uXjrnL2V67T/TiyDkb
2QLTdMiykjOenuoFMxW1f7dNOqjqQ5YUxHrh+5Lf4K9XOp7x2Dxdu9mLU2+z
U2ty02H05YynikMvJp4PDutupKPm3Ym0Mpde8FR0uIbvyACXP1cjv2cvloMG
Kov2ZmBInJH+X2AvuuaviudxZkAtaiU0M6UX/kKn/fSkM3BFPZe8rbMXU05l
ib/dMhArkFZvQenFdFvSf0o+GVinjp/tH+yF+pfnlW7BGSjKDxDMm+7Fvcjv
p+3iMyC0z6JQZ6MXVSedcj1LMuA7bURpoKKAV6HYKKkiA3PlumtnaSiIDX3k
E1qXAbLZDQlaJgpSDHzDfnVkgKNJsPYdPwUu7h9ZkqcyYJ94bJpTiIIyq6xI
7fkMUJ4d2uV3lgK9youiU18zEMxPp3iPRCHmbWCi6e8MLP/bZtEqRcHw1Whd
w/UM3KCsB16Uo2DWlfmA4JZM7PJc6N6rRsHuutU9J3ZmwkhnYtVeiwIVCS+y
Dm0makQGWad0KWi5dXpMly4TXHu6xZQNKdC17zMT3JcJl/Em7VITCrR+yH5r
YMzEcEm1E58FBdsOHWc9vT8Tl4I/xAfbUFCU8c/z/oFMRJi8rdp4RoGo5rHJ
+2yZWL2cOWHsTMFIQy3l9MFMlCbPv7F1p2D7Ut2rHI5MvKARUPV8RcH6hStM
/w5l4tqjR7Sh/hQcdEu4ffRIJujbsyqTXlNASVmQYTqaie6zi3b5ERQ06hwt
oRAcFS4oXBlDwed/wm/MODOh99dsui2R0G+5s7mbYN67/8UOp1KwCmchOq5M
4l4sqS9mUXBv0TCJheB83lN063kUCBjb0K4Q6+28LWpo31MQnqcpGU0waSnH
ga2UAo9cMj8rwdtUls/wVxL+cnO+MSTObywUnjtfR4Ef5+9AV0JvIJtlgkwT
BaYxRmwWhzOh4Zh3S62diL/0SkqQyI9jdGXvvR4KNKX0D5USfoxJn6m37Kcg
Xaz77UH2TKSlWTm5fKHgcXYmowJrJsz3vD0XMEFBNVeotCJLJkQef1+ImaWA
EVyqR5gz8afrbHLWEgX1TJ+uVjFkwvNNAWPjbwqWTArX7PdkQuHfj099G4T/
0odrA3dlgvHeOddpqj4UWCuQbXdkIvbEu6/b6PrQ1SroXPwvA4b+qylMjH3E
dwFTzEQ/nfh2XpfrQB+CaqUuSRL9Vlj8vhmcfahTiHViWib69dBvtxu8RHzT
8c73RL9edr1wSedkH7QNDgwLTWeg+Vpxuv25PnD5hgyHDmVgglLiWSjXh7Tx
zxWKDRnIuPRXouYGcZ7qv1v+VRl4HHfpZ6dqH/H//u5sUilx/4xK7y3rEHpf
ZOnczM0g3ttll09a9cGteFI9LzQD/Vqbvy7a9oFqfYttkn8G4stIOdee92Hn
lIK+2csMCHh8PGTk2QdxLW5/b7sMSDNX/omP6gN3RpLs71sZsDlTU8BS3QdG
wY+v9zFlwEjkaHxQA8ENVH7faDJw6/xznz2tfXiwdEshZzMdl8REDKg+9xHv
pla50lliXkkm711a6gNfbb2dWHk6ApTdTWvZP+PGlLG2u346Mh5LH7Wx+oxf
lHt88+FpiLaK3/3V9jPoz7/pHfVOg5/N+qqJ42dYKOiVdzim4bFdQctdr8+4
oqflnUC8j0VdeBzkYz8jJOJczJFTaagJ2NbL1fgZcvNPt/vVpeLLfzU+HZz9
yOS2kv+0mYL2xW0LZ/j6YbO5+vrC9xRUCMgohAj0I7u2+nzVdAriM2r3aIr2
I+VaSTtfRwoMUur8BhX6IcSScEaVnAKVyR1LEir9kMtjEMqKSoEUj+yNOM1+
bDeY2MMbmAKexHp6A4N+fP94vMiZ+L88FdMQMG3bD6W606e+qKagd5Bm+Zoj
sf8DhVHV6ymoPyinlPGiH/cu/J5dupyCtMhP+8z8+iFP1W8QJZQC09DGoG+J
/WAu07Gj7E7B7W7ab6pp/QjNzroQQJ0CeSZ5lcLsfrA/LH5t+ZcMgaAmRrui
fsyz1li+nydj0bf59UZLP5ouDUwrtZIx3LTnh25XP5xv/4o3qiejlVZRraKv
H39Cxp3TK8j4z6uF2W28H/WcFwrevyUjtp7uycRMPyy9TCXcsskI2HGjR2ap
H6bW/JbPU8l47N4aSrPWj183HZd+vSFDr5p+1WSzHy5mIyT7MDKUqW5qNFEP
QCFKT/ZEEBlnXNpY/OkHcF6IzYHpJRk/HNrDmXgGUMurbrvrCRkTJft+2xwf
QGvkr+O/H5PRs6Z0q1doAN9cSBFMZmS8s+1gjbw4gGpPmqdt98lIecfw7A9p
AHUfo65ZGJAR/lP58x3pAWiMr0WL3SXDzroz8vDNAQT4/+esokWGcT7jH2e1
AZz6aWEYq0GG1orK7VGtAVD5H7JiViPjuvDrEsm7A+jrjz9WoEyGmEUXe7Lh
AEQ9Bhee3yTjxH9MDttNB/CK1UHEXJEM9kXVASOLAXQNf3/wUp4MWoGQSw02
A6DlC12plyPjr2n3m+P2A3ClChA7dY0MtfM6QULOA0hovqvVfZWMrK1Tnmfd
B/BBtkE4SoaM7S3mzy+8GsBU44yUizQZuhG/LCX8B5Dx/OR+Tyky3t9zeSD5
egB3FBV4MyXJ2Hdql45sxADOTIYsLl0h8vsTpKIQM4CczGf1SgRX1rJfU04c
wMlfpnTtlwm9QUkSGqlEvI4t6yOCrbQFzt7JGsBRb7UrPAQ38RXy6+UNoPSi
8cgvkMHzXeLw/XcDOKjeoThFsGN5HZPphwFMCFmOLhHc++rmLouKAdCP/Pi2
j4gXUu/btK4dwJeq4c/yBL88qv/DrnEAe3cHLsYSPDI/O+vYRrC9iscuQt+F
91ZfXnQP4Eco5Zs3wUEv/na//DwAya8GVlxEfnOK7o2+wwMwtf0l0UawFBtd
RdA40R/B8wGBhB/RE6GFYTMDkHnbnnif8EvRITU+/htx/neaX7KEvylXhcPI
vwbwgmn+P1VZMjYZin0y1gdA5zbP/JioR25a49OCHYO4tV13kHKdjF02qo+K
dw+iwczkPacCGQYY1C/fN4gd/GannxH1ZupdVGhgH8TVyiv5ikpkPEp4Ktly
ZBBW0sMMn4h+qXn0T7STZxBPb+2ovqFKxlNqBu5BoUF8odXpfkL022dhkbWv
koM48Mbkx0EdMuJ87MkHHg4iTnd7J+NDMn5rUL/heDyIaLGY3o5HZChx+QZy
PhnEhjPfBX9zMqiKYxxOOg/C/xjfzF9LMu5PVSjj9SCkRdV+h9iRUZ4nJysd
MYiAPptRfnsyWBw7xeViiP1/aa+8dSCjgWmCTzV1EGzbNvyynMjg/PLo0K2s
QbDcoE5gdSHDPuMno07eIFoDHkzbuZJx8srOTaMPg7ALLOdmcif8ysjk66sY
hE3luuJ9DzJEmJWU5eoGoeVx5nCKJxlFjj/sS5oGoarQl9pN3G/x6Yjkkx2D
EPx0d++yFxkVShKt0b2DUBv+7vrrFRkyJaO/6AYHwckeKTjnTUYjtyen8+gg
bK2PXan3IeOG3wn55alBNF24sODnS0bnaquN/sIgvp8+c1fCjwxNPevYzpVB
/Pwh2NRN8OCnAw1SvwYhbP5bX9WfmEdnS1cK1gfBGL1Lo4jgiWi9g7xUQ3ju
5NhPFUCGyY7tMuE7hzBhFMF1huAli3RzGrohjMY12MgQbPVZMeIZ4xAWYsL4
xAlelfxWOXdgCOrzjMH7CXbICpu/c2gIIjMxuzuI/bewXNrfwjWES5rD82YE
uzt/IZH4h6Bzqsh7ntBHM+tmnCM4hMd5UpflCPZT4Q8+enYIOyprDD2J/BhL
mz8EXRhCvXOiUiKRf9gxy0kq0hC0TtzVjib8YQ/Yv9dGagjvRTxHrAn/4n4X
X5i8NoTU5/9k+Ql/eQx0DTRuDMG/xYKlmKhHWhOVb73qEO4/iGk/RtRL4Fxq
4QWtIeSf2PvXzI2oZ6z8l3TdIbzWpWYPIupdbBlyxtdkCE4zTdJGjmSQBi5o
b5gPwXHQQPMA0T9V0kMe5jZDsKFbeZhA9FvjAd7PSs5D+N5RkkSyJurl2khV
5T6ELI2JPiVifnfNmQuc9R5C0U4RdTFifg+WvXfeH0rsvzL2PciIqA+fdrpn
FOHXXPzzf8T8ngzc0vUrbgj9+8+ySRHze+meHG9/xhDMJY2V5TUJf2kHmmMr
iPwzWJc0iHnpbu28urduCIvHN93/P892DXEfdW0agpykB4PGJcLP3EfW93qH
cOMMQpKFCX80Ntn4F4bQm/e05CQb4c/HRKnIFaIeNg4uQ4xkCB6XNaP9NYRT
/9oEDfaQcX49oGJh6zCofq33jW8mQzaR80HegWEImL2u+DSaDJEIet46jmHI
0VzkC+9PxlH/vxP9nMO4WHreWKIrGX+e9RhsExgGr2pMCHNNMrKVX+lqXh5G
I+8D86WkZDBtXVHfMB4G22l9AQvtZGz5NcTMaD6Mey58zT0qyVhYaOzitR6G
iOurawfkklHXl6ys5DgM2cXR4pPnkvEs95ZiUtAwPtOe3520Oxlf7lZIy5UM
YzlubzVdfhKa1bOpdT8Owy9yrVg6JQlF8lFVVjXDkFK95XMnKgnBojaXo1sJ
/SlmhideJEFmL7/417FhmOy217qllITM8oCzobu/YIJxxVl1OhG2h+5yjWp/
gXCJQ/x16kQYKAlrDOp/Ae+zBvncHwm44bbVm2L0BXrd+97vmEoA72zSSsvj
L5hfusjv1ZCA7oKZihL3Lxin35W95JsAYQWruyFZX6DpxZXWzZSAGXuPaNn1
L3hc1ubvejgecxonjRO2jECX81Se6N546C0zUR2hHsHH4T8yU//iIM89eY6d
ZgQ90xel16riwPXqZcw+xhEYKRf+/iwXh3a15kcbx0agUdZvmX0nFgIL6rsp
iiPgntv9xyQiGkVqCh+9lUZw0f/HgIFDNKTKJK1JqiPw5WOMCtONxm3/UwPk
WyP49eDLtbfHovFKeFemzb0RPI3Wqx999wZTNqXXGZ+NwHncuJ9uKgpWQ/mb
tQ4jYOVUOXWxJQobMun5z5xGEDVh8iynIArMB8LYR91GsEh273N2j4JUscVc
jv8ILNNv2lXzRSF+g8tbMXkEK4LWaeccIyFgxEbamjoCqt2dLTdMIvG+de+3
gvQRNCfoSRSrR6I1bl2LI2cEq5fkOlxPRWLjSu/x+eIRvOnjzOifioBXRvNQ
bOkI4ovXGu16IsDMVB2k8nEEN66kXzaqiYDARM5acc0IvkxU1AsmReC256tP
Xm0jsHh/kOOeYQSmlpwdxTtH0Nk0cdlCPQKWmk9PL3cT+TXS8dddJfbnvxep
2T8CRgO1f0onIvCuUdyEd3IEfMVy5tU/wsG0d5mm5s8ICmY8nyMsHJ1l3i/l
NkZQe9Op55JvOIIfHdvR9m8ExR7ihaYvwsHYeJu6f9soaB7d+HHHgmCP2o2v
9KM4tZ/tppk8EX9W7/kThlHMXxXZ+0WSiB/78+cP0ygYVI8csxcLB8Nl4d/b
2UaR/vXkE74T4dj3N+rbQe5RyHpdjxLfHY729HOWCcdG0c2wf7WXOhyBt9q/
8vKPorFCrSFwPQx7321fPC04Ct1+QV+dpTDQWz6elhUdRe4XtoXzXWHYMy0z
aC0/Cj/SclZdfBiaQ0durymOIvPSNGtpVBh8pR0+OymN4vuHV+dLQ8KwOzG3
95X6KFb+/LCheIWBVudgR9xdQh9/05iGZRhoupZrm6xHQZFMC30gGYYGVx9p
5aej+M9H08VGPAxewrzVvXaj+GD1ZcnufBh2+t+pGHUchXL+5/F7J8KwQ66u
5NfLUSQdryxPYgjDto9vcrijR7Hj996QpcFQ9ItLX/sSO4rpHZasBj2hyClZ
GIlKGMVhC6YdxS2huP1OgpExdRR2dItidOWhyMv+YrMlfxRSTttqRGJC4XnS
i660YBRlE092p4eEQjtdOMX2PaGvmVdizScUNGRXylLpKE7MZr87bh8K3Whu
saH6UQT7bRwrUAuFCHtzZ0TjKAJoUynL10OxK8LmoVrLKA6l1TpTXwlFweva
6KbOUezOtuFPEwjFbp8H/4qHRtFia0Q7tDUURc8ya8K+j6IwM4bmZVII/H+p
6qisjiLQWej8eFgI7j1Z/0m3Ngr9vRrf6LxDiHop8nlsjsJorLuxxSIE942/
vrLeNYZs1d6jPy6EgFHz7E2lI2OoiOHe+qnyNWa6B6Z3c41heb793r+81yhT
cXep5xnD5UHdh9SJr2F8oyePdGIM8ubSe5+4vka5jC2z4LkxfO0uSaUivcZD
kQ+fd8mPofzzjvxv2cGoaO/JKlIcw2bXcqT1m2DsN1t2fqA0BmVZqrF6r2B8
JB/jrVUfw0NBrbp5g2AwHQi0ctEbw9VozdST+4PxYc1w968nY3jaYTu4YRmE
3R/pJSbix6D2PsS1Y18gMuUM4stXxyCrdqD2DIs3RAQ4SVgbQ/PJ5MXN6Vco
px8Z+Ph3DNYn1Qybi1+hvUvnQOWWcdwjlTBZ6rzCDx0t/2racfh8aEykJXuB
ZKX0vOHwOFjMz7xsPP8S7VGkW51Xx0Flfyu9ytwdWo4bP1XkxhHZblsfKOWO
sbulr7vkxzFyWuSbP6s7fvCItXUrjSPU+C4fZ7Ub2HLOXaXcHkfBnZ1zFexu
MKgWEBk0H4eZGO9d5h5X/Jxn3zcVNo67dozkWxtOCImZro+OHAd560v/f3lO
OHuzwFk1ehzHwrl4LR44wTJf8WtFwjiuFMmdzut2xKKdS+ubrHG8O/7Bb6Po
OSa3T/kqV43jal/2N9oMe7i/z5emqSX2a6OY0z+yB7eJ83p5/TiEQyrUvwnZ
Q7+Z9ZFAyzgMvfoTtd8/w1CwvPzOvnF4yRodLem0Q8+RvF1li4Rf4oqn7521
hU2HY6X18jikJbqltahtweR2/dmJ7+NQ5PnuxNf9FMpT4zPhv8dxX+Jvq4zd
U7RksTRYUU/g3C7J7bcan+CR7rjz8R0TGOu+WzQU/wS79+WKjtBMoOhS9+eT
dk8gZy2Xqkg/AYk+CgvL8Seovfjck59tAoH2aettr21gOH+N9OXgBNx9DRhk
H9uAOmb/aujhCaj4T1uaK9rgypac+9Q8E6hp+zZVscsGZXWj0sNCE+hosQyh
87ZGoaosdYg0sd+f65f6yVbwki/y4JCdAJPBlp+KflbQljpOQ5Yj9OxiX+N5
YgWqs7vp3t2YwOV61lNfZaxwg7GNpe/WBHJUx1tC5i0x065xgsNsAqyvrB1O
S1uC/YaRcnLoBDR5acVKmB9jUYbSJRAxgeP3Pm/oUj1GhcQ1jcKoCTR/j82j
H7GAkeCJO3VxE8jdE2f+NswCb/csGc6kT2Cdc7I/mtoCCk1P7ATKJ7Bfomvo
e58ZnK95xBVMTYD5I6uo/92H6NQ11haencCc4+4tH84/BM8Tebas+QlUbfko
k0r3EI0JDK+TlifQU2BqWVpiCua/MZ7BfyawZb+NVjODKdKy35k9pp8Ei6yo
p89bY7QzzlwSOD+J1B7uu9SN98E5dL0vyWMSxxj82MSO3oV31aUcda9JMI75
ZIW/1cW3VAHPnT6T+GoXqsYjq4sqK3qRh4GTiO5LnBo214EhTWfAmTeT2HQv
CX5QeQdpZ7VkK3MncbLQlybK9hb2sV0/bP12EvH61lvv7ruFZ5tiP3neTcIk
9xxVSromrn/iSPL6MAnmtmMfW4c0MK87snmzbhJ8Z2hymRXVIeT94N3wwCRe
pJs9VpVXQZjFLb/A4UlkbdB73F9Sxj81OUPJ0UmcillZQbAy2o+cZEyZmoSv
Ty+99qASLAuXzMxWJmE458vH+vMGCkaeHFvfMYVjJqphCVVy4KgzWs/eNQWG
iXn6JB45eGRqdt3dMwV24e1pr7yuQePpRddqhilo3zFbY9CQxa/dG4PeHFOo
6BCNk6ORgZioewjbmSkonrj9YOXTZfQasJ2PEZnCidi2m9dVL8Pa/z/KUdEp
ZMQtWYeWAlmTfez84lP46Cy5/OibBA6HCCacvzqFKNOPVXnuYqBa6c1WvT2F
CYv+34qXRBDL8egmRXsKbHmTcyNOZ3Hp2taV23encCNHaJ6YiLCJOyliYDiF
Q4kG48JapzGl6FLy2HwKVtV7JRTFBdGUcbze78UUaI42yrEzccO4t9yYwWMK
IcqGpK+DnNhGpUYb+nIKP2+tCbinHwVJy0kx2ncKSpG5NU9COJC7s6srI2wK
mVbk9ttyTFA4a/xEKHIKBSvOcd8292FWd4Ml/80U/sWOrXub04HrHd/t4vgp
nFVjFcvS3Yby0dK/4klTOMXcFJZc+o90h04lpoI8BTXxXnODxlXS7wvTJOm0
Kei3Xz3DszJPCjF8PlKfMYVrCwd258tSSMKBDC/ks6dwa5/yF+73FFLLhxTu
tpwpfHIiXXl9YYFkOn2pViWfWB+o/lJ7eZW0g6nDqLdgCtJ8+xkGJv6REklG
NLffTyFO5Mk0rc02wPRv+lAx4QfXsfC5PzSwqzy2OFFO+Kt99Lj9bgYwL5b4
G1dOweiegcYpDSbksSoJL1RPgbZo7Ypf0n7MWdhbf2+YQiHdUPX3q+zQPty2
trVrCmHagVt2DnCCns2q8EPPFOjcsrZ58XGjkmm/5ZO+KTQWnU598pQHvLvu
zMwMEf3Fs/55+iAfvn6f6m2bmUJpckVHm6cAXnzafBuzOYVtMQtx/76dRZqN
kPnFE9NIkZax2SJ4GT8b/cYeu07DeL40UT1YEYO7e4zX3aZxkum8ivhPRVQp
cHx96TmNSuFu337NGwhszfgb6zMNVZ3NIBGOmzjRWc/cEjqND0Ue/3yVlKD7
eavs8YxpLOw1ah9rVkbd9JPM0c5pjB8wkV9NUUMWf9lps55pJNIeH/rUpYbX
JtuKflOmkXNpp2vkFnXozQfX7B2ahqan7U3SbXX8WcoZkpieRrxNwuwVeg2c
Wp3dG/V3Gp28O4x+OWmCRfR02LHNaTwMkz5t9p8m1m3tOPK2zCBxyLpIcVgT
jWs7jjdsn4HwkPXRJ7gFww1uydW9M2gIC5J4TKOFiG26Nio8MyiZ/FktWn4b
m/cOnOvgncHEnIvsxq/bMKxu/3nz+AxEAhhTWs/cgfALKVtFoRlEWjamVWbe
QcM/fvtrF2aQplrzgStLG0J3x8TqxWbwN+uqoetXbYSUv/krIzGDA0dt5mVE
dKDnSO8oJTmDyo6xAIEqHfz6892ZpDCDXjvqh7HLutC+nX257MYMrhbxtN++
fBdVxUZbxZWJ85jnRDuD7sLf7vOLixozyK99dYbukB54V8s9RPRm0POTcZ9v
ux40Vl75nLCZgdLVwT9bjA1QqiSlkP50BmLe7B7VcQbgyl3fw/9sBs0Pbwok
9RlgydzC/5jTDN5/8RWpVrwHjwW1oKNeM/A/uItUJWOIOXl6lTjvGdgUWPpk
eBpCKbOe8bDfDHym68QrGgzBYSoWcjB4Bs/CClXtle6jYPpIOEv0DMJP23bJ
mhuBXfazZmgsoe8sy4+SIiO4pASzMifMIIjUG6u/7QEU7m+PYkiZQdtUI931
uAeYGJuL3pM7g2lR0yCvcWMwDRcmUtXMwETMUUaJ/BD+exwd39fNYIG2KrmR
9hFoL0nfevRpBtwqB+4kWD4CVUQnXW/rDGwZppR1pMzwTfmrXfrnGWQbf7Dv
XDVHey3/TaWvM/AaYXbwVbSEb/abvzHssxB8FrizV+8JaAYNelUOzcJm1S3Z
JOUJ3GlP5O08Oou3F7ILrBeewOFBkZHlsVm462fojT17ClPOng5p4VkcoJNn
W4y0xbVQ+rR5mVnwUdXHBS88w3ZHV7WLlrM4+CJrUanRiZhzC2sfrWdB/3Xr
k3hmZxga3Yq7+nQWZ6JPXtx31xk1N0/NqTrM4iG3tIPsD2e4cw05m3sQ63/y
H5kPcMG2hguZSZHEeg6XjrJSV1AxLW+lr5pFo0ht/0smd+S/vJMaUjMLk9jy
OvcL7jBYr1M4WD+L/JTXTWY67qiajAnnb55FSWbf5r8Ud7wokheU6p1F5375
PJqLHtiqm3rLbm4WHfa2Dyo0PbElXTdnjHEOxrl5S1N2XqhboJjH7Z8Dy0qx
jHC0F3yFlYW0WefQd0CyiPTRCweKpLJ7Ds2h4Mv7gpRtryBUz5/ZwD+H/spt
Op6+r6A9+S3lP9Icnnn6N/cFeIPr+COjh1fmwBlyc2FXjjdmHk0e45eeg4VL
COP3Fm9Y/6AkJ8jNoexMx/YFWh94U5clhqjNwf/TcTMzVx8Uc76MtTedA/vg
bdqber5wur9FV9RsDjnn+KS67H0hnf7s0A+LOYQbTkzQhvqiXfhRtNmTORhS
neIJafDFDJSj9FzmcFfztu4eAT+w6B4Muxo2h6Lz/Fp1E34YTAhRp46cQ+q7
L+cC//ghcZJuf8WbOdTZXpZk2OcPQbMtIRcTiPPtfD0viflD+vlkkEDWHH7I
f+O+7uMPq6gcP8aqOfw57EF1mDMA79ejXlbVzEGG54a2zZkArOt6ulrVz8G+
nvFqiFQAXnLrPOlsnoPKVY3L5+8HIDqLVieYMocBayPb4ykBqC2/L8C4OAdp
99Dr+4n/M6zjB5sYWOcRYyqpu981EDoyO2sr2edBlmM9Su8ViMTUb+WWh+ZR
aH4tcHdAIAQefcrv4JpH5U+2OraYQFz5+TQqSHAejudmGNKLA2G6s9OEQWoe
3lRy7vU/A5FjUnavUmYeGqGj7//bCMSPpjQdy2vzaHZ68yF3exCcA52VOxTn
EZ78aomWJQghbIIXg27Nw+4cu9HlC0EoO+lFw2A+j+R68/MzbkE4332gJfjx
PFrknk9Y+wUh93lqELP1PPa86TpxIjwIiS117Kx285A7tJDInhkEL4vtgkde
zINrmuPTsZ4gbGUNXYl3n8eONyzOnCNBsK/gecf1ch7COV/Mbs4HwYxBGry+
89iXUxIrQxUMlbcvlAXD5vE2wU6y4Ewwmu4wsuREzIOv75TWbQRDeltiv/Cb
eSw6Mp28qBAMUfXKeyLx83iYwPomySgYHL/+PbmUMY/xG1T6ErHBmBZzjJIr
n8fZvqnDW9leQ298z92mCkIvC3320+Ov0e8Tza1YPY+qo4VOAmKv0Tz4IUup
YR5lShdHtLRfI9/pT7lm5zxCfXebVCa9xvMq2/H7U/PQe1k9XEkKwU/TnWnT
M/MIqi/ZIa0aAnOm8Ecm8/PITpln3WEcAn3Ddz8fLc9DyXOcWi44BFd3/Nxp
82ceLON0wmWzIWC4biXwgn4BW7g3AhaSQhFfuXe3GMMC9urtYpIpD4XwxezZ
FaYFyP45nDTcF4ob/DMp+mwL+Ldzd0U7fRi8d+hyXuFZwL67XR9eO4ZhW7Uc
yxaxBeTqOB+Ivx+O1UucW5zuL2AHVVBpnkYkPN6WD58zXsCA0R/27qeRYD6p
XbZougBHpW2ldOGROMsebq/zeAFbOUrvV1Ai8fj3np/iDguoeMFw55dWFGYL
fs/+DVwAizIjvYreGwwKtnc9K13A0mqfxA+TGMTNMzhSf1yAd+bByZGXMTBI
V+X1q1zAp4JRx/fkGMzyUOzi6xZQqrql9dBoDFYPDh+qb1/A8MdrGTkasWCg
XXjAPLkA5ul4udVLceiuF2SInV5A6Ffm5xuacYjwsCjhm1tA1FTSoyHrOBze
+n3Ppa8LiLHlaeXOjIPA77U8/bUFiO9tOdm3Ox5Xp3au/0e3iEthz9XXreOx
K1mOfGHfIno7B/r9XeLRrO9zo4pxESeCEqp3+MVDdYg+oefAIliYH54hk+Oh
173/6jonwaZ8L4N64uFQxR0od34R5UI/RoZOJYDkcv9i14VF2L59nxktlgAq
UuqY9qVFWNMtki/JJMCr+MS5x5cX8Zj9zCrr7QSE5Z7uD7u+iMxN6tvyLxKQ
GwueCd1FKHddf23cnIDv9t936usvwml1uXGqOwHnNVPnh+4tIltfpUhqKAEf
9u59SzFexPAxeu/IxQTUuQxfabJaxCLL0/S3exJBoxN87NqTRTyQFD3Py5wI
+YtXd9XaLqJyjyKt7cFEtK9kt5c/X0QPWf3K2+OJGDBwvJvvuYi7Hcsvw6QT
cRinpU69WsR6zlaDv9cToXdwkjfLZxFfS3Y1kZQTMdWlsEQOXISukIufvk4i
lqU5HCOjFvG0MtaJ1SYRZznb9VhiFjHNyxdi/SwRTzfcpF/HLSKQbX4y2ykR
fwvnd/slL2IXi8beSq9E7OD7EOXy3yK2X5akf/AmEXLUFk4buQQ/3B5XGZcI
3y9cBvZvF3FlVX5zPSkRDBHex22KFuHinjvFkpUINRsS3UoJ4Q/Hcu/PnESE
KX1bNitbxJSaquO7t4ng2HW76EHVIs5F1EkMlyTi7iRd9ETNImoOZP+TKU9E
YmWls379IibZzOsDKxPBZ39c9k7zIhS+Hy5sr0/EmfnfPTd6FxG+fnI/dVci
ntRnFTf1EXr0mA/49iSiKEkv5trAInjFU9r+UBIhod1gKDlC+PWa9ozPYCJc
Ljy/9nGMOK/eqSp7OBFVzMIC4pOL2F22g/J+JBHXWsK/n5tbRJdY5W33iUR4
p8tT8hcIP1N88mSnEtHi8a/k1NdFHD9OvvNjOhEqpAcvjv9YxAvRgw675xMR
yn7QKGV1EUjS6X+6kIi+1f81XOfRWG9rHMCJyjU2SHXUG+koieQYrpv65uQ4
xutyGlyEDCmRY4gGGTIcvSeUDB2kevf7et+EpCQylZCkMpUmWmq5WZf9S9c8
5O4/P2uvvdf3Wc+z91r7uY3W1DDK7ucEtw0LcOCWydK134fRH8U7vfOrAPdc
J5VfSlGMZN6zCxkRQHlRlWK8DMUvKV0uqd8E8L99Wt5kEUVYxIxb1v8EqHff
ITcoR3E4z1uFPyrAKrn5hXkKFH8OzeoFjAkQcqdexlGZ4vXF2DDTcQGeepyV
XrCUIrbuWN435vXylvN3l1M8KFQ/lDchwKnyhXP+ahRxP/PTjScF6PRqnv5h
NcWzBNfxWuYtiucm29QpZI+K/c2mBEiosB2P5VHsCd1aI2J+7604+pMmRfeR
quey0wIYKz8fGdCiCC5ae3w/c2plGveXNsWV8F38fOYBX6dhex2Ku9Yag2+Z
dy5Z/t95XQpedHeQ0owA2Q+6vpTpU6h1ZI+ZMH89lDXgt43CQa3Bw4XZepnL
51VGFNoZ0edCma/VrO5vNaHIl5XyTmKeOvyuL9qMYq3HaFcGs7PqlQ/bzCnK
o7615TMX1nm8+7yTwuX3x2Yi5gVHNd5kW1BoGfovusHsptb/ytaS4oarvNZN
5rsPSdecFYXna5XYImbFIL+OUhuK0TwFlRJm31UbX/rYU5zf0/ColLmm4Uub
miNFr7R+WjmzWnBha4sTxdTVsCM1zMd+CGyJ2kNxcWO4fQtzU6Ne89b9FG4n
5ra9ZV4Xwj3u/zfrp4KS0ggz+409ynSn2GB+o115lr0XzaH11p7sfIX+cCPm
TWFGtTMHKVYYtw55M8fxxh+U+FI06UcY5DK/bamoPOhPsVhzyLSX2fD4yQrV
AIqYJxtnt8yx+dbYXt4cSBHyq0pkMvOn1tmyU8EU4/1BZITZPLK2VC+Uom3y
l+gj3wXIWB9b8jGc4o1NpfQI83CbRdGlSIo+D69V5+YFsDopU2h1ikJzt3aR
oRRB/oZG8VQUm7eEBDFlnniRJCqKobBROTFWI03wr9PWxPMsxd7FEXHXFxBI
tOWvL0tk81LgZZojQyDd0Zrf+AeF8+oomRuyBK5nUvJO8CnuuPt0PF9IULbJ
MUc3hd2HdXMXFBcTKHQtudybRrFGQ7zFR46genPGJctMivSQ2vMeCgSqr/Ze
nMim8PfkcbJKBEFxK9MKcyikK7+ebVYm4PXk8JdcY/kC7IOEywgi4t2TGwQs
T4+Na70qwQt9XlKEiK33JYlm1AhiE6/HvS+ksAyyj+lUJ1CKXGx7sJjiQtGG
ut08gpzDQcsGblFsF4ilOjQI7tiZEe4uRcHZslu22gS7dlw9Gl5B8VupeKWJ
DsEz/YVGU5UUY/wziRZbCAaWtj9eUEehf+yjR5UhQaiMacofDynWufvXbjIh
mB/N26v4mEKUVaZQaUawqufwwIoWCp3zTxwsLAjs8qXkdDopPBqVP8w6EfSk
HXpZ3E1xxI7/JGkfgW/cs8uGPRTq6Zo3jd0Ion0v65h/YP3I9faW8SMo3Wxg
5/gfVs/fthf5nSLYsSZredcgRfzg+kBeLMFTpdl3LkMU167uUv+eSPDpa3Og
9wiF7nR3nWE6gVqFZ+rxGYqftFf2hhQREEnjvuk5ikJhTa7PHQKDHN11MVIc
mouN+FFVBDZnJm4lL+SQ6rXym1YLQdTutPZcFQ55B6uUrb8Q9L+oVX2kxSG4
ujmoRk+I4IcbPlhpc/jY5Jq73FSI2TK+qHUThx7nrh9TdwmxImufSbceB4fe
48P0NyGs3en+L6YcMpaYX3KOEqL4y9pcZXsO4ZEOO8w6hUi+kujV+08O7bQx
erRPCF/n4R9LnDgk3c7U6xwSYk11danDfg4WzwJ3TiwSgZ/m1nTem4NjVN2a
h+YiHDb5a0T+JIc/hfXZ54pFWJ+gar24gENJ663W+LwCfP97lNJrCQe9St2z
1TcL8Gb4U0fBTZZvS/DIeFUBLuy/c8DqNod643SXwDcFmN/sHJZYzSHmqayu
mZoY79vT8mU6OSQPdPsfSBXjftKET2c3hxcG1wx0roiRsd1Th/RwsNwdX/n5
phh2Iv27P/dy8OtNeaDdIkbVibaWuEEOQfqOr+4vkCBLzzjNaYhDSmno+Ocl
EoT05+3R5Fi98YXRkzwJNtkH9tWPcvjdltfQ/g8JZKW7hBcmODTmj6RmWkvw
sXx7gNc023+y8Z35PgmqA8hWgzkOvw7q32vykSB7ncLY/DwH44zNuoYhEvwf
bZ+OMQ==
          "]]}, Annotation[#, "Charting`Private`Tag$23290#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WKYbDvg8mKJ+J+adrFaW/MUN1v9NLQz/y4WPz5cKvTh3iO8I1YlbOorp6aSf
/iwPFLaILd4oPorUPfyiK6KeWGtSMTIuOYo1jt7c0VWesNNkXz+wYhReUxeC
atw8kfyfu/JWtVG4ZcvxOt94YsHT7TICG0chkm6spv34AH6aKgucPDiK+AaD
Hxs+eCPhXtPQer9RvO85tXdm1htS2q6NPP9R9L57NT2u4gMDucvH3IJHsciZ
VOIT4IPg30umNh0fhfiXuIdqsz4Yqfk9Mp02Ckrnkw2/NX3xUbfr7dGGUaD2
tqZRnB+ucsWj5z8eRa1ATlhbqR+8bu7TSGkZhU3LjTjTNj+MqPVHFbaOYruD
jWPr4sP4KT+0sq1rFF39M3Y6Fw9DXGT0kBSDiJ/THUXL8ce7Nl3xK6xRxLov
2W9R54/sBFr9Ks4oOqSvHBoc8Iei4MQS07FR0BM0m3YsD4DO7z93D/wZhVZx
Uq9AegCsmQtnKkV5SNv+6bTuESqES7dfM17Gw3Tus0rXdCrxnXbO7okEDzHK
KckG5VTs+7S0qHc5D95vTK16vlDh+U7aekaZB89N1xxuWgVCLcN5LEGNh4Xd
n4VG3QLB2p2TLbaKB1LiC9lXEYEIeqXAVdHhYS+f/ZdcGojjT1TTtm/gQb9V
9G3eTCC2nDpo8taYB/vTkTXF4kGYt+XGsKspD3NpohqbNYKQVLd6fbAZD679
wT6adkHIurNuMGsHD9cSTi99mh0EclBYPGkXD+v2JM7Y3QqCgs59nVu7ifrW
VWX7PQpCyQ3jmEYHHj6cIvmZfwzCnStQo7vzUOBmZB8jS8PEsYmFBw4Qz2ez
rFU1aNjgfIP7yZuHX7cjyh0NaHgkJnav34+HobqfMQd30jDLfZLlEMBDg1dD
u/l+GszajxzrDiTi3dhmXOlNQ+upoa2vQnnYcWlq65qjNCxyy1C3ieDB6Izp
Q8t4GmxNrIWfR/KwuSRFmH2ehq7xiq6mEzw4fh+bP3CFBsmOAzWmMUQ9ex+z
1G7Q4HRLOrs2lofD2ywsBapo+OAV7VF9huhXerm+TyMNilhnseYswU+9wS3e
Uxo85Rka5ed4UFW4d3DhSxpKfmWLaKXy0F843X+3kwbm2538a2k8/F03FMZ7
R4PmHYEelYs8LK7TLq9/T0PA+Zr7Vy/xkKF0f2LFEA2Vfn45Ctk8iO22bVw8
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$23290#10"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], 16], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Rho]   [t]\\n 1,1\"", "\"\[Rho]   [t]\\n 1,2\"", 
       "\"\[Rho]   [t]\\n 1,3\"", "\"\[Rho]   [t]\\n 1,4\"", 
       "\"\[Rho]   [t]\\n 2,2\"", "\"\[Rho]   [t]\\n 2,3\"", 
       "\"\[Rho]   [t]\\n 2,4\"", "\"\[Rho]   [t]\\n 3,3\"", 
       "\"\[Rho]   [t]\\n 3,4\"", "\"\[Rho]   [t]\\n 4,4\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], 16], FontFamily -> "Arial"}, Background -> Automatic,
          StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.75, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.571589, 0.586483, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "16"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8382251786885138`*^9, {3.8382252282853813`*^9, 3.838225251601405*^9}, 
   3.838225425711816*^9, 3.83822552892019*^9, 3.838225592525135*^9, {
   3.8382256771414275`*^9, 3.8382257510526943`*^9}, 3.838225953621829*^9, {
   3.8382260019851975`*^9, 3.838226018719228*^9}, 3.8382261529702225`*^9, 
   3.83831014932261*^9},ExpressionUUID->"d46e2dd3-d388-415b-b9e4-\
aad06e6983dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["rho"], "Input",
 CellChangeTimes->{{3.8382259259422035`*^9, 
  3.8382259261833286`*^9}},ExpressionUUID->"32889476-3f72-499a-ac0c-\
872898a465f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"1", ",", "1"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"1", ",", "2"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"1", ",", "3"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"1", ",", "4"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"2", ",", "2"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"2", ",", "3"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"2", ",", "4"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"3", ",", "3"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"3", ",", "4"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8382259267583394`*^9},ExpressionUUID->"ed677f50-2801-44c3-b25c-\
99c939b8710f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["popIdcs"], "Input",
 CellChangeTimes->{{3.838225459085228*^9, 
  3.838225461522276*^9}},ExpressionUUID->"a741e4e9-bde9-4202-9d2f-\
a650b8dd0133"],

Cell[BoxData["popIdxList$14433"], "Output",
 CellChangeTimes->{
  3.838225462029086*^9},ExpressionUUID->"b2db95db-e92c-4da3-a4db-\
fd049b517dfe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8382258806097035`*^9, 
  3.8382258870066557`*^9}},ExpressionUUID->"a3ad2dfe-f132-4ce8-b364-\
88a4b372e955"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rho", "[", 
  RowBox[{"[", "popIdcs", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.83822582167782*^9, 3.838225862025365*^9}, {
  3.838225936604004*^9, 
  3.8382259367992764`*^9}},ExpressionUUID->"0c48a8d1-63b8-4f3a-920f-\
92612e0d80f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"1", ",", "1"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"2", ",", "2"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"3", ",", "3"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"4", ",", "4"}]], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8382258286137576`*^9, 3.8382258627754545`*^9, 
  3.838225937554127*^9},ExpressionUUID->"639e3ab8-caad-4908-9e02-\
beda050ec8b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "atom", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"g", ",", "e"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalOmega]B", ",", "\[CapitalDelta]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atomBasis", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsingle", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{"\[CapitalOmega]", "/", "2"}]},
        {
         RowBox[{"\[CapitalOmega]", "/", "2"}], "\[CapitalDelta]"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hint", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"numAtoms", " ", "numStates"}], ",", 
         RowBox[{"numAtoms", " ", "numStates"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hint", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"numAtoms", " ", "numStates"}], ",", 
        RowBox[{"numAtoms", " ", "numStates"}]}], "]"}], "]"}], "=", 
     "\[CapitalOmega]B"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"interaction", " ", "Hamiltonian"}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"two", "-", 
     RowBox[{"atom", " ", "hamiltonian"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hmulti", " ", "=", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "numStates", "]"}], ",", "Hsingle"}], 
       "]"}], "+", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"Hsingle", ",", 
        RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"Hmulti", "+", "Hint"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"H", "//", "MatrixForm"}], "\n", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "\[Pi]", "\[Pi]", "0"},
       {"\[Pi]", "0", "0", "\[Pi]"},
       {"\[Pi]", "0", "0", "\[Pi]"},
       {"0", "\[Pi]", "\[Pi]", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}]}]], "Input",
 CellChangeTimes->{{3.838226093750388*^9, 
  3.838226100529103*^9}},ExpressionUUID->"e22b053d-1394-4d76-8f7a-\
70b3221c87b3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{
       RowBox[{"2", " ", "\[CapitalDelta]"}], "+", "\[CapitalOmega]B"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8382261032886605`*^9},ExpressionUUID->"19672166-b0a2-44b0-a673-\
a83f2c007067"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Pi]", ",", "\[Pi]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "0", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "0", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Pi]", ",", "\[Pi]", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8382261032886605`*^9},ExpressionUUID->"358537e7-713e-4cf1-8fc7-\
94dc87f4b75b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["multiple Rydberg states", "Section",
 CellChangeTimes->{{3.8124114178118296`*^9, 
  3.8124114227290764`*^9}},ExpressionUUID->"66302c3f-5cd2-4c15-a51f-\
240dc9e7090a"],

Cell[TextData[{
 "Now we take into account an atom with multiple Rydberg states, including \
fine structure. We will still assume sufficient detuning on the two-photon \
transition to merit disregard of the intermediate ladder state.\n\nStart with \
a 4 level atom: one ground state, three nearby Rydberg states. \nSingle atom \
basis: g, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "\[Alpha]"], ",", " ", 
    SubscriptBox["r", "\[Beta]"], ",", " ", 
    SubscriptBox["r", "\[Gamma]"]}], TraditionalForm]],ExpressionUUID->
  "44e3de28-01ad-4dfe-a103-d8b2295e39cb"],
 ". "
}], "Text",
 CellChangeTimes->{{3.81241143328765*^9, 3.812411519190938*^9}, {
  3.81241159427326*^9, 
  3.812411681538905*^9}},ExpressionUUID->"2d1fef95-6f32-4835-8cfd-\
662621e0c4f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Haf1", "=", " ", 
    RowBox[{"(", GridBox[{
       {"0", "0", 
        RowBox[{"\[CapitalOmega]\[Beta]1", "/", "2"}], "0"},
       {"0", "\[CapitalDelta]\[Alpha]1", "0", "0"},
       {
        RowBox[{"\[CapitalOmega]\[Beta]1", "/", "2"}], "0", 
        "\[CapitalDelta]\[Beta]1", "0"},
       {"0", "0", "0", "\[CapitalDelta]\[Gamma]1"}
      }], ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"atom", " ", "+", " ", 
    RowBox[{"driving", " ", "field"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Haf2", "=", " ", 
   RowBox[{"(", GridBox[{
      {"0", "0", 
       RowBox[{"\[CapitalOmega]\[Beta]2", "/", "2"}], "0"},
      {"0", "\[CapitalDelta]\[Alpha]2", "0", "0"},
      {
       RowBox[{"\[CapitalOmega]\[Beta]2", "/", "2"}], "0", 
       "\[CapitalDelta]\[Beta]2", "0"},
      {"0", "0", "0", "\[CapitalDelta]\[Gamma]2"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "4", "]"}], ",", "Haf1"}], "]"}], "+", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"Haf2", ",", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "]"}]}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.812413500492757*^9, 3.812413614388363*^9}, {
  3.8124136447296352`*^9, 3.812413730675482*^9}, {3.8124138526130743`*^9, 
  3.8124139406146183`*^9}},ExpressionUUID->"ea2623b7-3b2b-482f-80ff-\
da134a9bba28"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]1", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]2", "2"], "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "\[CapitalDelta]\[Alpha]1", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]2", "2"], "0", "0", "0", "0", "0", 
      "0"},
     {
      FractionBox["\[CapitalOmega]\[Beta]1", "2"], "0", 
      "\[CapitalDelta]\[Beta]1", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]2", "2"], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "\[CapitalDelta]\[Gamma]1", "0", "0", "0", "0", "0", "0",
       "0", 
      FractionBox["\[CapitalOmega]\[Beta]2", "2"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "\[CapitalDelta]\[Alpha]2", "0", 
      FractionBox["\[CapitalOmega]\[Beta]1", "2"], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"\[CapitalDelta]\[Alpha]1", "+", "\[CapitalDelta]\[Alpha]2"}], 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]1", "2"], "0", 
      RowBox[{"\[CapitalDelta]\[Alpha]2", "+", "\[CapitalDelta]\[Beta]1"}], 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"\[CapitalDelta]\[Alpha]2", "+", "\[CapitalDelta]\[Gamma]1"}], 
      "0", "0", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]\[Beta]2", "2"], "0", "0", "0", "0", "0", 
      "0", "0", "\[CapitalDelta]\[Beta]2", "0", 
      FractionBox["\[CapitalOmega]\[Beta]1", "2"], "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]\[Beta]2", "2"], "0", "0", "0", "0", "0", 
      "0", "0", 
      RowBox[{"\[CapitalDelta]\[Alpha]1", "+", "\[CapitalDelta]\[Beta]2"}], 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]2", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]1", "2"], "0", 
      RowBox[{"\[CapitalDelta]\[Beta]1", "+", "\[CapitalDelta]\[Beta]2"}], 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]2", "2"], "0", "0", "0", "0", "0", 
      "0", "0", 
      RowBox[{"\[CapitalDelta]\[Beta]2", "+", "\[CapitalDelta]\[Gamma]1"}], 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "\[CapitalDelta]\[Gamma]2", "0", 
      FractionBox["\[CapitalOmega]\[Beta]1", "2"], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"\[CapitalDelta]\[Alpha]1", "+", "\[CapitalDelta]\[Gamma]2"}], 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]\[Beta]1", "2"], "0", 
      RowBox[{"\[CapitalDelta]\[Beta]1", "+", "\[CapitalDelta]\[Gamma]2"}], 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", 
      RowBox[{"\[CapitalDelta]\[Gamma]1", "+", "\[CapitalDelta]\[Gamma]2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8124137243282185`*^9, 3.812413731027482*^9}, 
   3.812413885298745*^9, {3.8124139283246393`*^9, 
   3.8124139408730745`*^9}},ExpressionUUID->"a35d8755-fb7c-4f0e-b2a5-\
acb1d5b207d7"]
}, Open  ]],

Cell["see if it\[CloseCurlyQuote]s tractable to diagonalize this thing \
quickly", "Text",
 CellChangeTimes->{{3.812560186354424*^9, 
  3.81256021321309*^9}},ExpressionUUID->"2f1a0635-b682-4d0e-b6de-\
a97ddc7c202b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[CapitalOmega]\[Beta]", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]\[Alpha]", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]\[Beta]", "=", 
      RowBox[{"\[CapitalDelta]\[Gamma]", "=", "10"}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]\[Beta]", ",", "\[CapitalDelta]\[Beta]", ",", 
      "\[CapitalDelta]\[Gamma]", ",", "\[CapitalDelta]\[Alpha]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Haf1", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "0", 
         RowBox[{"\[CapitalOmega]\[Beta]", "/", "2"}], "0"},
        {"0", "\[CapitalDelta]\[Alpha]", "0", "0"},
        {
         RowBox[{"\[CapitalOmega]\[Beta]", "/", "2"}], "0", 
         "\[CapitalDelta]\[Beta]", "0"},
        {"0", "0", "0", "\[CapitalDelta]\[Gamma]"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"atom", " ", "+", " ", 
     RowBox[{"driving", " ", "field"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8125601498183556`*^9, 3.812560182520564*^9}, {
   3.812560222001629*^9, 3.8125602859451785`*^9}, {3.8125603314052176`*^9, 
   3.812560596589125*^9}, {3.81256063041803*^9, 3.8125606434669795`*^9}, 
   3.8125609982404537`*^9, {3.812561262189927*^9, 3.812561304717839*^9}, 
   3.8125615848811097`*^9},ExpressionUUID->"e35e216a-af76-4664-8711-\
bb873294404b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "<", "6"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", 
      RowBox[{
       RowBox[{"Timing", "[", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"HamiltonianProduct", "[", 
          RowBox[{"Haf1", ",", "i"}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8125601498183556`*^9, 3.812560182520564*^9}, {
   3.812560222001629*^9, 3.8125602859451785`*^9}, {3.8125603314052176`*^9, 
   3.812560596589125*^9}, {3.81256063041803*^9, 3.8125606434669795`*^9}, 
   3.8125609982404537`*^9, {3.812561262189927*^9, 3.812561304717839*^9}, 
   3.8125615848811097`*^9},ExpressionUUID->"4011c525-b074-46e0-bf6a-\
d018d9818efa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "0.328125`"}], "}"}]], "Print",
 CellChangeTimes->{{3.8125606115092044`*^9, 3.8125606446450424`*^9}, 
   3.8125612967633677`*^9},ExpressionUUID->"b117c644-44bc-469a-a14d-\
cf94eca6a249"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.812560636771304*^9, 3.8125610019433503`*^9, 
  3.812561299870541*^9},ExpressionUUID->"ba491b81-8890-464e-8989-\
12f9c7daf2a0"]
}, Open  ]],

Cell["\<\
Write a routine to prune out the n-excited basis states from the matrix. \
\>", "Text",
 CellChangeTimes->{{3.812560705187538*^9, 
  3.8125607492630234`*^9}},ExpressionUUID->"25b08f40-8f92-4f00-a288-\
7cbc1848c697"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "[", 
   RowBox[{"HamiltonianProduct", "[", 
    RowBox[{"Haf1", ",", "2"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"atom", "-", 
    RowBox[{"field", " ", 
     RowBox[{"Ham", "."}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.812560751713483*^9, 3.812560764863998*^9}, {
  3.8125608135060797`*^9, 3.81256083796276*^9}, {3.8125612214024367`*^9, 
  3.812561257890847*^9}, {3.812561631477818*^9, 3.812561637463664*^9}, {
  3.8125654021669445`*^9, 
  3.812565414156686*^9}},ExpressionUUID->"7de87ce3-6920-41bf-902e-\
add1d1c70677"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.8125612532364216`*^9, {3.8125616233201427`*^9, 3.812561638075369*^9}, 
   3.812565414618984*^9},ExpressionUUID->"b8723837-4cbb-4ebf-9d10-\
13af86e64bfe"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nExcited", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"excitedList", " ", "=", " ", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"atomIdcs", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"atomIdcs", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "atomIdcs", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"1", "+", "i"}], ",", 
         RowBox[{"Length", "[", "atomIdcs", "]"}]}], "]"}]}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"For", " "}]}], "Input",
 CellChangeTimes->{{3.812560751713483*^9, 3.812560764863998*^9}, {
  3.8125608135060797`*^9, 3.81256083796276*^9}, {3.8125612214024367`*^9, 
  3.8125612482348394`*^9}, {3.812561550952099*^9, 
  3.812561576816923*^9}},ExpressionUUID->"9680529c-9a51-4649-af1c-\
6476b2f6c574"],

Cell[BoxData[
 RowBox[{"Clear", "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.812560477475689*^9, 
  3.8125604791651974`*^9}},ExpressionUUID->"644ee652-4a77-4f91-b6ef-\
bdea20b0078c"],

Cell["\<\
could build the interaction with brute force. need to generate the basis \
first. \
\>", "Text",
 CellChangeTimes->{{3.812414219463213*^9, 3.812414285625105*^9}, {
  3.8124143326270366`*^9, 
  3.812414338872325*^9}},ExpressionUUID->"e84b53c2-024f-4ad5-b0ba-\
160a3219c06b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sbasis", "=", 
   RowBox[{"{", 
    RowBox[{"g", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812414361725629*^9, 3.8124143643109703`*^9}, {
  3.8124144281903267`*^9, 
  3.8124144902401004`*^9}},ExpressionUUID->"f18c0166-0254-4295-a62c-\
5bdf3163db19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OuterProd", "[", 
  RowBox[{"sbasis", ",", "sbasis"}], "]"}]], "Input",
 CellChangeTimes->{{3.812414476007797*^9, 3.812414498422366*^9}, {
  3.8124145351641793`*^9, 
  3.81241453722192*^9}},ExpressionUUID->"72e47a16-473c-4bca-b43c-\
88172c6acd8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["g", "2"], ",", 
     RowBox[{"g", " ", "\[Alpha]"}], ",", 
     RowBox[{"g", " ", "\[Beta]"}], ",", 
     RowBox[{"g", " ", "\[Gamma]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", " ", "\[Alpha]"}], ",", 
     SuperscriptBox["\[Alpha]", "2"], ",", 
     RowBox[{"\[Alpha]", " ", "\[Beta]"}], ",", 
     RowBox[{"\[Alpha]", " ", "\[Gamma]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", " ", "\[Beta]"}], ",", 
     RowBox[{"\[Alpha]", " ", "\[Beta]"}], ",", 
     SuperscriptBox["\[Beta]", "2"], ",", 
     RowBox[{"\[Beta]", " ", "\[Gamma]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", " ", "\[Gamma]"}], ",", 
     RowBox[{"\[Alpha]", " ", "\[Gamma]"}], ",", 
     RowBox[{"\[Beta]", " ", "\[Gamma]"}], ",", 
     SuperscriptBox["\[Gamma]", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.812414498806214*^9},ExpressionUUID->"92b6e632-5875-4c26-b0d7-\
e4c315ae724a"]
}, Open  ]],

Cell["\<\
need outer-product-like function that combines bases. then we can generate \
the matrix element at each pair of these. probably ask Mark if there is a \
smarter way to do this simulation.\
\>", "Text",
 CellChangeTimes->{{3.8124145393492346`*^9, 
  3.81241459766381*^9}},ExpressionUUID->"e91894ea-4ba0-4859-98fd-\
94540903cf9e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"statecombos", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "4"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<", "4"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"statecombos", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sbasis", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"sbasis", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sbasis", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"sbasis", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", "4", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"Range", "[", "4", "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.81241460037663*^9, 3.8124147531853895`*^9}, {
  3.812414791983062*^9, 
  3.8124148471566*^9}},ExpressionUUID->"3f892c51-6562-44e0-a66b-c0b9ce0f1414"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "g"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "\[Alpha]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "\[Beta]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "\[Gamma]"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "g"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Alpha]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "\[Gamma]"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "g"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "\[Alpha]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "\[Beta]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "\[Gamma]"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "g"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "\[Alpha]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "\[Beta]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "\[Gamma]"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8124146725323644`*^9},ExpressionUUID->"fc603738-b634-4a45-b34a-\
ee3982f01818"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.8124114256495457`*^9, 
  3.8124114313131213`*^9}},ExpressionUUID->"55ef5596-efdc-4402-9e73-\
8a4be5a96f97"]
}, Closed]],

Cell[CellGroupData[{

Cell["misc testing", "Section",
 CellChangeTimes->{{3.8120321084963675`*^9, 
  3.8120321102933493`*^9}},ExpressionUUID->"c4b338ab-afba-45d7-a1be-\
8ac3706ee666"],

Cell["\<\
write recursive function to build multi-atom Hamiltonian by successively \
combining the single atom subspaces.\
\>", "Text",
 CellChangeTimes->{{3.8120415288154936`*^9, 3.812041535984572*^9}, {
  3.812041587269907*^9, 3.8120416176735716`*^9}, {3.8120417391966004`*^9, 
  3.8120417518785205`*^9}},ExpressionUUID->"76501ed5-fc4f-49d5-ae9b-\
9c7398e71f63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "atom", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"g", ",", "e"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[CapitalOmega]", ",", "\[CapitalDelta]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H1", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{"\[CapitalOmega]", "/", "2"}]},
        {
         RowBox[{"\[CapitalOmega]", "/", "2"}], "\[CapitalDelta]"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H2int", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"numAtoms", " ", "numStates"}], ",", 
         RowBox[{"numAtoms", " ", "numStates"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"H2int", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"numAtoms", " ", "numStates"}], ",", 
        RowBox[{"numAtoms", " ", "numStates"}]}], "]"}], "]"}], "=", 
     "\[CapitalOmega]B"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"interaction", " ", "Hamiltonian"}], "*)"}]}]}]], "Input",Expressi\
onUUID->"408a119f-1150-4939-a0c3-52748b58f7c9"],

Cell["", "Text",
 CellChangeTimes->{{3.8119775825855646`*^9, 
  3.8119775841089497`*^9}},ExpressionUUID->"7376784f-a728-4a63-bfd7-\
90ff010736ff"],

Cell["\<\
test building the hamiltonian with kronecker products using only two-level \
systems\
\>", "Text",
 CellChangeTimes->{{3.812030160145507*^9, 
  3.8120301790847583`*^9}},ExpressionUUID->"0410d372-6e06-4cd9-8b5e-\
82451a713ed9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]1", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]2", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]2", "/", "2"}], "\[CapitalDelta]2"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H12", " ", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H2", "]"}], "]"}], ",", "H1"}], "]"}], " ", 
    "+", " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H2", ",", 
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H1", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8120301809072*^9, 3.812030242193406*^9}, {
   3.812030284454749*^9, 3.8120303132042327`*^9}, 3.8120303994139166`*^9, {
   3.812030630722088*^9, 3.8120306480422354`*^9}, {3.8120308617508698`*^9, 
   3.812030863104282*^9}, {3.8120315966550913`*^9, 3.8120316124931498`*^9}, {
   3.8120435629524364`*^9, 3.812043593457759*^9}, {3.8121464717802377`*^9, 
   3.8121464824561515`*^9}},ExpressionUUID->"6348373f-3d12-43ca-a158-\
42355e35ec53"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812030237354156*^9, 3.812030242521632*^9}, {
   3.8120302954932985`*^9, 3.8120303135118318`*^9}, 3.8120303998924*^9, 
   3.8120306504940243`*^9, 3.812030863797557*^9, 3.8120316131481867`*^9, 
   3.8120435944071245`*^9, 3.812043882828279*^9, 3.8120447220752897`*^9, {
   3.8121464620461693`*^9, 3.812146483744306*^9}, 
   3.8122842628079524`*^9},ExpressionUUID->"5ee76287-96f8-427d-8ba4-\
c293c52b50ec"]
}, Open  ]],

Cell["Now add the blockade:", "Text",
 CellChangeTimes->{{3.81204360759052*^9, 
  3.8120436193915653`*^9}},ExpressionUUID->"d1e96f64-475b-4976-9838-\
94c3f2d97ffc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H12int", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"Dimensions", "[", "H12", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"H12int", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "=", "\[CapitalOmega]B12"}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"H12", "=", 
     RowBox[{"H12", "+", "H12int"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"H12", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.812043623825844*^9, 3.812043788093379*^9}, {
  3.812043861935777*^9, 3.8120438747787476`*^9}, {3.8120447142107286`*^9, 
  3.8120447172817783`*^9}, {3.812146502597024*^9, 
  3.8121465103835826`*^9}},ExpressionUUID->"fcd6ddec-dd02-4b09-b7a8-\
2315a3849a72"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812043722121538*^9, 3.8120437889551544`*^9}, {
   3.81204386847375*^9, 3.8120438848457694`*^9}, {3.812146503225752*^9, 
   3.8121465108624706`*^9}, 
   3.812284267178783*^9},ExpressionUUID->"2b83ffac-2893-4318-8d3d-\
c5231724c8ca"]
}, Open  ]],

Cell["Now three atoms:", "Text",
 CellChangeTimes->{{3.8120307225666714`*^9, 
  3.8120307558840237`*^9}},ExpressionUUID->"74b104dd-0525-4332-b866-\
b6de4d04bc39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H3", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]3", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]3", "/", "2"}], "\[CapitalDelta]3"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H123", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H1", "]"}], "]"}], ",", "H12"}], "]"}], " ", 
    "+", " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H3", ",", 
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H12", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H123", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8120307473209925`*^9, 3.8120308353709655`*^9}, {
   3.8120308676428714`*^9, 3.8120308994836316`*^9}, {3.8120312352229805`*^9, 
   3.8120312439130335`*^9}, {3.81203167518322*^9, 3.812031706909399*^9}, {
   3.8120438179156284`*^9, 3.8120438555389147`*^9}, {3.8120438969209423`*^9, 
   3.8120438982403865`*^9}, {3.8120439343885374`*^9, 3.812043941961232*^9}, 
   3.8121466140602674`*^9},ExpressionUUID->"cda5a574-21a8-4ba3-87fb-\
384c76b42d83"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0"},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"]},
     {
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", "\[CapitalDelta]3", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]3"}], "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {"0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]3"}], 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812030886670458*^9, 3.8120309027320185`*^9}, 
   3.8120312445475373`*^9, 3.812031710251564*^9, 3.812043793095872*^9, 
   3.812043903545542*^9, 3.812043943173005*^9, 3.8120447281193933`*^9, 
   3.8121466678075924`*^9, 3.8121468370830927`*^9, 
   3.812284272987739*^9},ExpressionUUID->"1857ea0e-6aac-4b2e-9e40-\
d3dc286afeb8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
  RowBox[{"8", "..."}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "1", ";", "2", ";", "12", ";", "3", ";", "13", ";", "23", ";", "123", ";", 
    "4", ";"}], ".."}], " ", 
  RowBox[{"(*", 
   RowBox[{"essentially", " ", "counts", " ", "in", " ", "binary"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blockade", " ", "on", " ", "3"}], ",", "5", ",", "6", ",", "7", 
  ",", "9", ",", "10", ",", "11", ",", "12", ",", 
  RowBox[{
   RowBox[{"...", " ", "no", " ", "blockade", " ", "on", " ", 
    RowBox[{"2", "^", "n"}]}], ";", " ", 
   RowBox[{
   "but", " ", "this", " ", "is", " ", "not", " ", "does", 
    " "}]}]}]}], "Input",
 CellChangeTimes->{{3.8122842994137125`*^9, 3.8122844339728646`*^9}, {
  3.812284487348472*^9, 3.812284533401999*^9}, {3.812284564118578*^9, 
  3.812284572976612*^9}, {3.8123211250769043`*^9, 3.812321165273513*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"b0c98e82-aa42-49b0-a91b-b63d72ef5f02"],

Cell["\<\
Want to generate sequence \
{0,1,2,{1,2},3,{1,3},{2,3},{1,2,3},4,{1,4},{2,4},{1,2,4},{3,4},{1,3,4},{2,3,4}\
,{1,2,3,4}...};  it\[CloseCurlyQuote]s recursive

with 1 atom it\[CloseCurlyQuote]s {0,1}
2nd atom part is: {0,1,2,{1,2}} which is just taking 2 and combining with \
each element of previous list then appending onto end of {0,1}
repeat: append {3,{1,3},{2,3},{1,2,3}} to list 2, etc. \
\>", "Text",
 CellChangeTimes->{{3.8122845924624977`*^9, 3.8122846041231613`*^9}, {
  3.812321236112686*^9, 3.8123213014322095`*^9}, {3.8123214032502804`*^9, 
  3.812321406736663*^9}, {3.812321643036647*^9, 3.81232196616086*^9}, {
  3.812322334082972*^9, 
  3.8123223452996345`*^9}},ExpressionUUID->"765f9230-ff08-4661-9a57-\
bbb83fad03ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listn", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Flatten", "@", "listn"}], ")"}], "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "+", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"AppendTo", "[", 
  RowBox[{"listn", ",", "n"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"AppendTo", "[", 
  RowBox[{"listn", ",", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"listn", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"2", ",", 
          RowBox[{
           RowBox[{"Length", "[", "listn", "]"}], "-", "1"}]}], "]"}]}], 
       "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.812322349757517*^9, 3.812322399803362*^9}, {
   3.812322591949671*^9, 3.812322760045232*^9}, {3.8123228568319244`*^9, 
   3.8123229361188717`*^9}, {3.8123229729291887`*^9, 
   3.8123229965977607`*^9}, {3.8123230333744597`*^9, 3.8123230720370317`*^9}, 
   3.8123231197339344`*^9},ExpressionUUID->"c378aefe-d9dd-4f2d-9447-\
d816555a3795"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.8123225925515475`*^9, 3.812322634033271*^9}, {
   3.8123227409089813`*^9, 3.8123227608026805`*^9}, {3.8123228874376073`*^9, 
   3.8123228989698467`*^9}, 3.812322937125657*^9, 3.8123229973720026`*^9, {
   3.8123230345494547`*^9, 
   3.812323057154601*^9}},ExpressionUUID->"6450e9fd-4478-468f-8691-\
7258e5528e56"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BlockadeHamiltonian", "[", "atomNum_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"excitedList", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", "n", ",", "HBlockade"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", "atomNum"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Flatten", "@", "excitedList"}], ")"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "+", "1"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"excitedList", ",", "n"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"oldLength", " ", "=", " ", 
          RowBox[{"Length", "[", "excitedList", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "2"}], ",", 
           RowBox[{"j", "<", "oldLength"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"excitedList", ",", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"excitedList", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", "n"}], "}"}]}]}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"2", "^", "atomNum"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HBlockade", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<", 
         RowBox[{"dim", "+", "1"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"atoms", " ", "=", " ", 
          RowBox[{"excitedList", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HBlockade", "[", 
           RowBox[{"[", 
            RowBox[{"k", ",", "k"}], "]"}], "]"}], "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "atoms", "]"}], ">", "0"}], ",", 
            RowBox[{"BlockadeTerm", "[", "atoms", "]"}], ",", "0"}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "HBlockade"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8123264683969727`*^9, 3.812326486469763*^9}, {
  3.81232662802704*^9, 3.8123266530921464`*^9}, {3.8123266999613953`*^9, 
  3.8123267310142326`*^9}, {3.812326799596867*^9, 3.8123271330565057`*^9}, {
  3.8123273192749453`*^9, 3.812327380069936*^9}, {3.812327428288156*^9, 
  3.812327452385798*^9}, {3.8123275758003473`*^9, 3.8123276323051825`*^9}, {
  3.8123276753093023`*^9, 3.812327752872676*^9}, {3.812327821217046*^9, 
  3.8123278824310064`*^9}, {3.812327927751043*^9, 3.812327967269305*^9}, {
  3.8123280613001533`*^9, 3.8123280732733583`*^9}, {3.8123281531589675`*^9, 
  3.8123282278481*^9}, {3.812328281205476*^9, 
  3.8123283128899126`*^9}},ExpressionUUID->"ab1e90fc-5eb2-4972-8ba7-\
294f96c009cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"atoms", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", "atoms", "]"}], ">", "0"}], ",", 
   RowBox[{"BlockadeTerm", "[", "atoms", "]"}], ",", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.812328025927863*^9, 
  3.8123280415049505`*^9}},ExpressionUUID->"b6cf64d2-ec29-4221-8b7c-\
e7985ee328cb"],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 1, 2],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 1, 3],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"2\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 2, 3],
   Editable->False]}]], "Output",
 CellChangeTimes->{{3.81232803596637*^9, 3.812328042669524*^9}, 
   3.812328085388204*^9},ExpressionUUID->"5177e767-f054-4bf5-b47d-\
1cd948aadaa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"H123", "+", 
   RowBox[{"BlockadeHamiltonian", "[", "3", "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8123277302738857`*^9, 3.8123277396637263`*^9}, {
  3.812328112843172*^9, 3.8123281644909477`*^9}, {3.8123283160173645`*^9, 
  3.8123283276611032`*^9}},ExpressionUUID->"b53a25b9-164f-4de2-aa66-\
c0441c27c07a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0"},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", 
       InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \
\((``, ``)\)]\)", 1, 2],
        Editable->False]}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"]},
     {
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", "\[CapitalDelta]3", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]3", "+", 
       InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \
\((``, ``)\)]\)", 1, 3],
        Editable->False]}], "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {"0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]3", "+", 
       InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"2\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \
\((``, ``)\)]\)", 2, 3],
        Editable->False]}], 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3", 
       "+", 
       InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \
\((``, ``)\)]\)", 1, 2],
        Editable->False], "+", 
       InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \
\((``, ``)\)]\)", 1, 3],
        Editable->False], "+", 
       InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"2\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \
\((``, ``)\)]\)", 2, 3],
        Editable->False]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8123277574133987`*^9, 3.8123278565249653`*^9, {3.812327957212829*^9, 
   3.8123279746263885`*^9}, 3.81232810303502*^9, {3.812328137612626*^9, 
   3.812328165128434*^9}, {3.812328201422093*^9, 3.812328212114974*^9}, {
   3.8123283028074303`*^9, 
   3.8123283289541845`*^9}},ExpressionUUID->"792bd0d4-eb38-454e-8419-\
5f5c470d35c3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listn", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"fakeidx", "=", "1"}], ",", 
   RowBox[{"fakeidx", "<", "4"}], ",", 
   RowBox[{"fakeidx", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Flatten", "@", "listn"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"listn", ",", "n"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"oldLength", " ", "=", " ", 
     RowBox[{"Length", "[", "listn", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"fakeidx2", "=", "2"}], ",", 
      RowBox[{"fakeidx2", "<", "oldLength"}], ",", 
      RowBox[{"fakeidx2", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"listn", ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"listn", "[", 
             RowBox[{"[", "fakeidx2", "]"}], "]"}], ",", "n"}], "}"}]}]}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8123230743053284`*^9, 3.812323177681433*^9}, {
   3.812323593702451*^9, 3.8123236010834885`*^9}, 3.81232373160015*^9, {
   3.812323792207202*^9, 
   3.812323938393195*^9}},ExpressionUUID->"a5aa1e05-b170-46e8-99ac-\
99dabb4bace3"],

Cell[CellGroupData[{

Cell[BoxData["listn"], "Input",
 CellChangeTimes->{{3.812323161238824*^9, 3.8123231624265947`*^9}, {
  3.812323873250557*^9, 
  3.8123238739027085`*^9}},ExpressionUUID->"9c6a164b-11e8-4b06-938f-\
6a00d43b9c47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", "3", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "4", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.812323162694191*^9, 3.8123236060401*^9, 3.812323733782526*^9, {
   3.812323921024435*^9, 
   3.8123239431083136`*^9}},ExpressionUUID->"50922a4a-a6c2-47d5-beee-\
6c2f6a12f8ef"]
}, Open  ]],

Cell[BoxData["BuildInteraction"], "Input",
 CellChangeTimes->{{3.8123264536335144`*^9, 
  3.812326457489005*^9}},ExpressionUUID->"a71b1479-c6c1-48eb-9820-\
e61e36e928a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", " ", "=", " ", 
   RowBox[{"Length", "[", "listn", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Htestint", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"diag", "=", "1"}], ",", 
   RowBox[{"diag", "<", "dim"}], ",", 
   RowBox[{"diag", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Htestint", " ", "=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"listn", "[", "dim", "]"}], "]"}], ">", "0"}], ","}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.812324025457887*^9, 3.812324115165765*^9}, {
  3.812324169851132*^9, 3.8123242134619703`*^9}, {3.8123242999780383`*^9, 
  3.8123243679432487`*^9}, {3.8123255278118143`*^9, 
  3.8123255347647038`*^9}},ExpressionUUID->"3181ffa6-aa6c-48b8-b3a2-\
57ba52473c3d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BlockadeTerm", "[", "atomIdcs_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[CapitalOmega]BString", "[", 
       RowBox[{
        RowBox[{"atomIdcs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"atomIdcs", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "atomIdcs", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"1", "+", "i"}], ",", 
          RowBox[{"Length", "[", "atomIdcs", "]"}]}], "]"}]}], "}"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]BString", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"StringForm", "[", 
    RowBox[{
    "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \
\((``, ``)\)]\)\>\"", ",", "i", ",", "j"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8123244420775013`*^9, 3.8123244854290752`*^9}, {
  3.8123246530247555`*^9, 3.8123246951160493`*^9}, {3.8123247483104024`*^9, 
  3.8123247666461043`*^9}, {3.8123247978205814`*^9, 3.81232492052244*^9}, {
  3.812325545837923*^9, 3.8123255539431095`*^9}, {3.8123255920011773`*^9, 
  3.8123256023608093`*^9}, {3.8123256422457695`*^9, 3.8123256797206335`*^9}, {
  3.812326074225168*^9, 
  3.8123260852920446`*^9}},ExpressionUUID->"e3ea11e0-77d0-4cfc-9743-\
a52f1e8bbac6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BlockadeTerm", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.812326089880982*^9, 
  3.812326124633055*^9}},ExpressionUUID->"11e25d2a-8b2b-4d40-b17e-\
2bc4ad02bcc9"],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 1, 2],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 1, 3],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 1, 4],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"2\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 2, 3],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"2\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 2, 4],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"3\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 3, 4],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.812326127974825*^9, 
  3.812326178233185*^9},ExpressionUUID->"69ffa955-fd8a-4015-8981-\
f223eba06e80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alist", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[CapitalOmega]BString", "[", 
      RowBox[{
       RowBox[{"alist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"alist", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "alist", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"1", "+", "i"}], ",", 
         RowBox[{"Length", "[", "alist", "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8123245013140383`*^9, 3.812324516171531*^9}, {
  3.8123245595477123`*^9, 3.812324562037495*^9}, {3.812324938135827*^9, 
  3.8123250233236294`*^9}, {3.812325157709733*^9, 3.8123251710928555`*^9}, {
  3.812325204803276*^9, 3.8123252531601467`*^9}, {3.8123253415751767`*^9, 
  3.8123253430505066`*^9}},ExpressionUUID->"b6287ed3-7e14-4bd7-b73c-\
229b11682107"],

Cell[BoxData[
 RowBox[{
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 1, 2],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 1, 3],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"1\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 1, 4],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"2\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 2, 3],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"2\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 2, 4],
   Editable->False], "+", 
  InterpretationBox["\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\
\[CapitalOmega]\\), \\(B\\)], \\((\\!\\(\\*RowBox[{\\\"3\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\))\\)]\\)\"\>",
   StringForm[
   "\!\(\*SuperscriptBox[SubscriptBox[\(\[CapitalOmega]\), \(B\)], \((``, ``)\
\)]\)", 3, 4],
   Editable->False]}]], "Output",
 CellChangeTimes->{
  3.81232517323315*^9, {3.81232520886644*^9, 3.8123252233480062`*^9}, 
   3.812325343686083*^9},ExpressionUUID->"db51147e-6d24-4e09-9eeb-\
bf4275de4e07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BlockadeTerm", "[", "]"}]], "Input",
 CellChangeTimes->{{3.812325272877943*^9, 3.812325302530513*^9}, {
  3.8123264236150217`*^9, 
  3.8123264325650663`*^9}},ExpressionUUID->"cab74e89-5e70-4cdb-b973-\
46e1e335d985"],

Cell[BoxData["add"], "Output",
 CellChangeTimes->{
  3.8123252756495037`*^9},ExpressionUUID->"72e2a008-90e4-47aa-830e-\
2d3ad0e81ffa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.8123243345376267`*^9, 
  3.8123243367921886`*^9}},ExpressionUUID->"9ba34eb4-4d00-4823-b214-\
8d8ae411a03f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.812324337129854*^9},ExpressionUUID->"feddf7c0-1b5e-4bb7-8756-\
437cd10e4fef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"Range", "[", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8123250591011763`*^9, 
  3.812325078570385*^9}},ExpressionUUID->"0e176d2f-6e5c-4815-87d6-\
4971d2764f82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "@", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1", ",", "2", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8123237604790173`*^9, 
  3.812323767020362*^9}},ExpressionUUID->"b0e54b70-d13e-40ef-b835-\
5844779b0b5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.812323767554134*^9},ExpressionUUID->"003e0684-e0ee-4939-a5d4-\
9dd5e995a935"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H4", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]4", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]4", "/", "2"}], "\[CapitalDelta]4"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1234", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H1", "]"}], "]"}], ",", "H123"}], "]"}], " ", 
    "+", " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H4", ",", 
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H123", "]"}], "]"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8121463079667563`*^9, 3.812146379076687*^9}, 
   3.8121466333805685`*^9, {3.8121467026937094`*^9, 3.8121467048471813`*^9}, {
   3.8121468278439665`*^9, 
   3.8121468330883055`*^9}},ExpressionUUID->"b8c54a6c-8964-4b95-9135-\
a1d799adcf2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H1234", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8121468446856875`*^9, 
  3.8121468489387026`*^9}},ExpressionUUID->"4e20dfa1-6390-4db0-b8a3-\
82ee0a02d3f2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", "\[CapitalDelta]3", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]3"}], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]3"}], 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3"}], 
      "0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"]},
     {
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", "0", "0",
       "\[CapitalDelta]4", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]4"}], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]4"}], 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]4"}], 
      "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"]},
     {"0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      RowBox[{"\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], 
      "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {"0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{
      "\[CapitalDelta]2", "+", "\[CapitalDelta]3", "+", "\[CapitalDelta]4"}], 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3", 
       "+", "\[CapitalDelta]4"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8121468492869024`*^9, 
  3.8123214593628035`*^9},ExpressionUUID->"86688d89-a55d-4dfb-90a6-\
8df2c4ee7915"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H5", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]5", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]5", "/", "2"}], "\[CapitalDelta]5"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H12345", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H1", "]"}], "]"}], ",", "H1234"}], "]"}], " ", 
    "+", " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H5", ",", 
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H1234", "]"}], "]"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8123214889484434`*^9, 
  3.8123215153225193`*^9}},ExpressionUUID->"e02f94a1-5c61-48eb-896b-\
22d9df959034"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"H12345", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"17", ";;"}], ",", 
     RowBox[{"17", ";;"}]}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8123214914056787`*^9, 
  3.8123215761708813`*^9}},ExpressionUUID->"2b33322f-451a-4e81-8ff5-\
2c7eb5289f11"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\[CapitalDelta]5", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]5"}], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]5"}], 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]5"}], 
      "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      RowBox[{"\[CapitalDelta]3", "+", "\[CapitalDelta]5"}], 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]3", "+", "\[CapitalDelta]5"}], 
      "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{
      "\[CapitalDelta]2", "+", "\[CapitalDelta]3", "+", "\[CapitalDelta]5"}], 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3", 
       "+", "\[CapitalDelta]5"}], "0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"]},
     {
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"\[CapitalDelta]4", "+", "\[CapitalDelta]5"}], 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]4", "+", "\[CapitalDelta]5"}], 
      "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{
      "\[CapitalDelta]2", "+", "\[CapitalDelta]4", "+", "\[CapitalDelta]5"}], 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]4", 
       "+", "\[CapitalDelta]5"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"]},
     {"0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", 
      RowBox[{
      "\[CapitalDelta]3", "+", "\[CapitalDelta]4", "+", "\[CapitalDelta]5"}], 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]3", "+", "\[CapitalDelta]4", 
       "+", "\[CapitalDelta]5"}], "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {"0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{
      "\[CapitalDelta]2", "+", "\[CapitalDelta]3", "+", "\[CapitalDelta]4", 
       "+", "\[CapitalDelta]5"}], 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]4", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3", 
       "+", "\[CapitalDelta]4", "+", "\[CapitalDelta]5"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812321546714106*^9, 
  3.812321576537182*^9}},ExpressionUUID->"f465ec8f-81e4-4eeb-a76a-\
a374e8f13bba"]
}, Open  ]],

Cell["\<\
Try to add in the blockade interaction in a straightforward way:\
\>", "Text",
 CellChangeTimes->{{3.8121514481256084`*^9, 
  3.812151461554949*^9}},ExpressionUUID->"7b3e8442-f9c9-4841-a07d-\
276ca2bd455a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\[CapitalOmega]B", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]1", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]2", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]2", "/", "2"}], "\[CapitalDelta]2"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H12int", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"H12int", "[", 
     RowBox[{"[", 
      RowBox[{"4", ",", "4"}], "]"}], "]"}], "=", "\[CapitalOmega]B12"}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H12", " ", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H2", "]"}], "]"}], ",", "H1"}], "]"}], " ", 
    "+", " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H2", ",", 
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H1", "]"}], "]"}]}], "]"}], "+", "H12int"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8121514972149134`*^9, 3.8121516284568872`*^9}, {
  3.81215191139727*^9, 
  3.8121519114744105`*^9}},ExpressionUUID->"163780c2-f9c9-4c89-a2b2-\
80f6737aa633"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalOmega]B12"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8121516270237837`*^9, 3.8121516298097043`*^9}, 
   3.812151912135333*^9},ExpressionUUID->"39510d47-7dd0-45ba-9254-\
3433e7f03d60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H3", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]3", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]3", "/", "2"}], "\[CapitalDelta]3"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H13", " ", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H3", "]"}], "]"}], ",", "H12"}], "]"}], " ", 
    "+", " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H3", ",", 
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "H12", "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8121518461234446`*^9, 3.8121519779918094`*^9}, {
  3.8121529688985662`*^9, 
  3.812153081747897*^9}},ExpressionUUID->"95da1531-a3da-4360-8360-\
05c7ff83847e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0"},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", 
       "\[CapitalOmega]B12"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"]},
     {
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", "\[CapitalDelta]3", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]3"}], "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {"0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]3"}], 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3", 
       "+", "\[CapitalOmega]B12"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8121530363353367`*^9, 
  3.8121530822925987`*^9}},ExpressionUUID->"cd0f6719-61bc-4b24-be33-\
7eda89aac89e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8121529826490245`*^9, 
  3.812152982925845*^9}},ExpressionUUID->"4c549aa2-f89d-46fd-be4b-\
6645af1e98c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H13int", " ", "=", " ", 
   RowBox[{"H12int", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"H13int", "[", 
     RowBox[{"[", 
      RowBox[{"4", ",", "4"}], "]"}], "]"}], "=", "\[CapitalOmega]B13"}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H23int", " ", "=", " ", 
   RowBox[{"H12int", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"H23int", "[", 
     RowBox[{"[", 
      RowBox[{"4", ",", "4"}], "]"}], "]"}], "=", "\[CapitalOmega]B23"}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"H12", " ", "=", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"Length", "[", "H2", "]"}], "]"}], ",", "H1"}], "]"}], " ", 
      "+", " ", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"H2", ",", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"Length", "[", "H1", "]"}], "]"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"%", "//", "MatrixForm"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8121518461234446`*^9, 3.8121519779918094`*^9}, {
  3.8121529688985662`*^9, 
  3.812152977407816*^9}},ExpressionUUID->"7cac8ebf-1c74-4463-a345-\
c416c159465e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", 
     RowBox[{"Length", "[", "H3", "]"}], "]"}], ",", "H13int"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{
  3.8121529529914804`*^9, {3.8121530883857203`*^9, 3.8121532202308273`*^9}, {
   3.8121532669800463`*^9, 3.81215330485398*^9}, {3.8121533442664013`*^9, 
   3.8121533909222507`*^9}},ExpressionUUID->"a791552e-c8e1-43c7-8d32-\
845b0532e96d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "\[CapitalOmega]B13", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "\[CapitalOmega]B13"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812153125465613*^9, 3.812153170815939*^9}, 
   3.8121532208276863`*^9, {3.8121532683662415`*^9, 3.812153305420763*^9}, {
   3.8121533616682944`*^9, 
   3.812153391361569*^9}},ExpressionUUID->"8d0119fd-8d42-4e2c-bbaa-\
fd910d6c9899"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["H3"], "Input",
 CellChangeTimes->{{3.812153240489125*^9, 
  3.8121532545206966`*^9}},ExpressionUUID->"fe96b6f4-2c07-4b63-889f-\
cbce75b7b8fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[CapitalOmega]3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[CapitalOmega]3", "2"], ",", "\[CapitalDelta]3"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.812153244026168*^9, 
  3.812153255315741*^9}},ExpressionUUID->"174e74b6-5c08-4df0-8a9b-\
8ede6aafb1f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["H13"], "Input",
 CellChangeTimes->{{3.8121531750328255`*^9, 
  3.8121531763697004`*^9}},ExpressionUUID->"d0038748-213c-46cb-825c-\
bdc6bd0a9535"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[CapitalOmega]1", "2"], ",", 
     FractionBox["\[CapitalOmega]2", "2"], ",", "0", ",", 
     FractionBox["\[CapitalOmega]3", "2"], ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[CapitalOmega]1", "2"], ",", "\[CapitalDelta]1", ",", "0", 
     ",", 
     FractionBox["\[CapitalOmega]2", "2"], ",", "0", ",", 
     FractionBox["\[CapitalOmega]3", "2"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[CapitalOmega]2", "2"], ",", "0", ",", "\[CapitalDelta]2", 
     ",", 
     FractionBox["\[CapitalOmega]1", "2"], ",", "0", ",", "0", ",", 
     FractionBox["\[CapitalOmega]3", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[CapitalOmega]2", "2"], ",", 
     FractionBox["\[CapitalOmega]1", "2"], ",", 
     RowBox[{
     "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalOmega]B12"}],
      ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["\[CapitalOmega]3", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[CapitalOmega]3", "2"], ",", "0", ",", "0", ",", "0", ",", 
     "\[CapitalDelta]3", ",", 
     FractionBox["\[CapitalOmega]1", "2"], ",", 
     FractionBox["\[CapitalOmega]2", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[CapitalOmega]3", "2"], ",", "0", ",", "0", ",", 
     FractionBox["\[CapitalOmega]1", "2"], ",", 
     RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]3"}], ",", "0", ",", 
     FractionBox["\[CapitalOmega]2", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["\[CapitalOmega]3", "2"], ",", "0", ",", 
     FractionBox["\[CapitalOmega]2", "2"], ",", "0", ",", 
     RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]3"}], ",", 
     FractionBox["\[CapitalOmega]1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox["\[CapitalOmega]3", "2"], ",", "0", ",", 
     FractionBox["\[CapitalOmega]2", "2"], ",", 
     FractionBox["\[CapitalOmega]1", "2"], ",", 
     RowBox[{
     "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3", 
      "+", "\[CapitalOmega]B12"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8121531766056175`*^9},ExpressionUUID->"4243fede-d385-4d84-88c1-\
a9bf520a1156"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"KroneckerDelta", "[", 
  RowBox[{"H12int", ",", 
   RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8121519666010447`*^9, 3.8121520036902666`*^9}, 
   3.8121520546168733`*^9},ExpressionUUID->"f2f2796c-696d-4503-91b9-\
46e76d3e446f"],

Cell[BoxData["H13int"], "Input",
 CellChangeTimes->{{3.812151887187044*^9, 
  3.812151890448577*^9}},ExpressionUUID->"aeb1ec91-dc4e-461c-b2d7-\
b4e5d166ad05"],

Cell[CellGroupData[{

Cell[BoxData["\[CapitalOmega]B"], "Input",
 CellChangeTimes->{{3.8121516001584435`*^9, 
  3.812151603276168*^9}},ExpressionUUID->"d874ce5a-d31f-4834-9ccd-\
1927c035cf0c"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8121515708611655`*^9, 
  3.8121516035851164`*^9}},ExpressionUUID->"ce4df8e8-cab9-4040-baf8-\
1338c47b002f"]
}, Open  ]],

Cell[TextData[{
 "If we know what the basis is than we will know how to properly build the \
interaction Hamiltonian. \n{",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{"1000"},
    "Ket"], ",", 
   TemplateBox[{"0100"},
    "Ket"], ",", 
   TemplateBox[{"1100"},
    "Ket"], ",", 
   TemplateBox[{"0010"},
    "Ket"], ",", 
   TemplateBox[{"1010"},
    "Ket"]}]],ExpressionUUID->"8f9b5366-fdd8-43fe-ad62-dc3c68094e08"],
 "}... etc. So writing the states this way, denoting the jth atom in the \
subspace in its excited (ground) state with a 1 (0) in the jth position of \
the 4-atom ket, shows that the atoms involved in the blockade are gotten by \
looking at the non-zero places in the binary representation of the diagonal \
index. This pattern will change for a more complicated atom but this is a \
good start. "
}], "Text",
 CellChangeTimes->{{3.812147090118265*^9, 3.8121473307167487`*^9}, {
   3.812147375247294*^9, 3.812147398746379*^9}, 3.8121477774559727`*^9, {
   3.8121480465140676`*^9, 3.812148141341235*^9}, {3.8121514408945074`*^9, 
   3.812151442186186*^9}},ExpressionUUID->"6748bf88-e361-4c21-86b5-\
5bcfceac4448"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8121514435896087`*^9, 
  3.8121514443476734`*^9}},ExpressionUUID->"4ed5fd64-5846-475f-8bc1-\
e00a65fd34b4"],

Cell["\<\
Now construct such a hamiltonian for an arbitrary number of quantum systems \
using a function \
\>", "Text",
 CellChangeTimes->{{3.812148154558693*^9, 
  3.8121482020036907`*^9}},ExpressionUUID->"afe0a89a-6895-4183-9cfd-\
71777161e475"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HamiltonianProduct", "[", 
     RowBox[{"hsingle_", ",", "volume_"}], " ", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"totalham", "=", "hsingle"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "Hamiltonian", " ", "describing", " ", "the", " ", 
        "combined", " ", "space", " ", "of", " ", "`volume`", " ", "number", 
        " ", "of", " ", "quantum", " ", "systems", " ", "with", " ", 
        "individual", " ", "Hamiltonian", " ", "hsingle"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "volume"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"totalham", " ", "=", " ", 
           RowBox[{
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"Length", "[", "ham", "]"}], "]"}], ",", "totalham"}], 
             "]"}], " ", "+", " ", 
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{"ham", ",", 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"Length", "[", "totalham", "]"}], "]"}]}], "]"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "totalham"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8121488170657635`*^9, 3.8121489934165783`*^9}, {
  3.812149032438018*^9, 3.8121490329108553`*^9}, {3.8121490744404006`*^9, 
  3.812149160341043*^9}},ExpressionUUID->"5d8e9a79-ece5-4d88-ade3-\
880df9cfb84a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HamiltonianProduct", "[", 
   RowBox[{"Hsingle", ",", "4"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8121489752465973`*^9, 
  3.8121490006972733`*^9}},ExpressionUUID->"a37958a1-d6d2-485e-9fb7-\
0026ac2268d9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", "0", "0", "0", "0", "0", 
      "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", "0", 
      "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"3", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"4", " ", "\[CapitalDelta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812148986386901*^9, 3.812149001051944*^9}, 
   3.8121490345816784`*^9, 
   3.8121491569384766`*^9},ExpressionUUID->"c8d21705-7827-4514-adcf-\
9d6ee670b6c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ham", " ", "=", " ", "Hsingle"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"volume", "=", "4"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "quantum", " ", "system"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalham", " ", "=", " ", "Hsingle"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "volume"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalham", " ", "=", " ", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"Length", "[", "ham", "]"}], "]"}], ",", "totalham"}], "]"}],
       " ", "+", " ", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"ham", ",", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"Length", "[", "totalham", "]"}], "]"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"totalham", "//", "MatrixForm"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.812148273709047*^9, 3.8121482892793646`*^9}, {
  3.812148328658717*^9, 3.8121485023981943`*^9}, {3.8121485677046647`*^9, 
  3.8121485799721756`*^9}, {3.8121486665861635`*^9, 3.812148762157323*^9}, {
  3.812149054782303*^9, 
  3.812149054966093*^9}},ExpressionUUID->"33db5f91-c8bd-48fc-bed3-\
b364abe4c801"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.8121485812605247`*^9, {3.812148691191137*^9, 3.8121486977083244`*^9}, 
   3.812148729730687*^9, 3.812148762830231*^9, 
   3.812149055492099*^9},ExpressionUUID->"6142c298-ace5-4f2d-8d0a-\
05361d4a9709"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.8121485812605247`*^9, {3.812148691191137*^9, 3.8121486977083244`*^9}, 
   3.812148729730687*^9, 3.812148762830231*^9, 
   3.8121490555091248`*^9},ExpressionUUID->"7d209d45-ee71-4728-9314-\
abc59b422486"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", "0", "0", "0", "0", "0", 
      "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", "0", 
      "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0"},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0"},
     {"0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      RowBox[{"2", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"3", " ", "\[CapitalDelta]"}], "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      RowBox[{"3", " ", "\[CapitalDelta]"}], 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", "0", "0", 
      FractionBox["\[CapitalOmega]", "2"], "0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"4", " ", "\[CapitalDelta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.8121485812605247`*^9, {3.812148691191137*^9, 3.8121486977083244`*^9}, 
   3.812148729730687*^9, 3.812148762830231*^9, 
   3.812149055540115*^9},ExpressionUUID->"57ef2435-5c14-4351-b4c4-\
991760a0c9b9"]
}, Closed]]
}, Open  ]],

Cell["Generate the multi-atom blockade interaction matrix", "Text",
 CellChangeTimes->{{3.8121494508508344`*^9, 
  3.812149466632848*^9}},ExpressionUUID->"a8871298-b8d5-407a-8ac1-\
9cd67bf1a7cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OmegaB", "[", 
     RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"i", ",", "j"}], "]"}], 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<\[CapitalOmega]B````\>\"", ",", "i", ",", "j"}], "]"}]}]}],
    ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "eventually", " ", "this", " ", "will", " ", "be", " ", "a", " ", 
    "realistic", " ", "function"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8121494950870056`*^9, 3.812149579049961*^9}, {
  3.8121507385344434`*^9, 
  3.812150741176757*^9}},ExpressionUUID->"b083daf9-c1b0-4d57-b355-\
9617aed971ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bidcs", "=", 
  RowBox[{"Table", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.8121507184701695`*^9, 
  3.8121507817859373`*^9}},ExpressionUUID->"d6e60726-590d-4809-9b80-\
b8eb7b1c5b84"],

Cell[BoxData[
 InterpretationBox["\<\"\[CapitalOmega]B\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\!\\(\
\\*RowBox[{\\\"3\\\"}]\\)\"\>",
  StringForm["\[CapitalOmega]B````", 1, 3],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8121507291161947`*^9},ExpressionUUID->"3fc7e2c5-c0dd-4f62-aa06-\
ce6472cd77ac"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{478.5, 503.5},
WindowMargins->{{-3.75, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"de3ee624-2b9f-44ee-908b-8d66c9cf8f5d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 173, 3, 98, "Title",ExpressionUUID->"16184614-62ec-420e-b06c-b38581dc851d"],
Cell[756, 27, 151, 3, 35, "Text",ExpressionUUID->"b75bc868-570d-4a1b-9638-281ef57daf99"],
Cell[910, 32, 1864, 48, 276, "Input",ExpressionUUID->"e2b905a0-49d8-4d81-b655-869221322242"],
Cell[CellGroupData[{
Cell[2799, 84, 162, 3, 67, "Section",ExpressionUUID->"4b463eb9-073a-431a-a072-bfad753f4be1"],
Cell[2964, 89, 20690, 490, 2776, "Input",ExpressionUUID->"03e6dc6b-57ab-46f5-b5fc-afa13f48f5ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23691, 584, 263, 4, 67, "Section",ExpressionUUID->"1d12eacb-02dd-4c4a-8759-718a234f0ac9"],
Cell[CellGroupData[{
Cell[23979, 592, 157, 3, 54, "Subsection",ExpressionUUID->"e04fae16-1958-40ec-8558-2dfaf8a08491"],
Cell[24139, 597, 392, 8, 58, "Text",ExpressionUUID->"fa9c2b26-66c1-407c-ba17-cde25bbdeb35"],
Cell[24534, 607, 376, 8, 104, "Text",ExpressionUUID->"37b4f941-710c-4921-ae16-be49f1c65e2a"],
Cell[24913, 617, 3851, 102, 367, "Text",ExpressionUUID->"9648cf9a-ba77-43db-b34e-3fc23994b2e8"],
Cell[28767, 721, 939, 20, 106, "Input",ExpressionUUID->"780bd76c-8c23-4d1d-90c0-c6bee62a908f"],
Cell[29709, 743, 236, 6, 34, "Text",ExpressionUUID->"12df9571-107f-4c74-ac79-954a47229fbe"],
Cell[CellGroupData[{
Cell[29970, 753, 1253, 34, 121, "Input",ExpressionUUID->"fb181fe8-b061-4e9c-bfb8-766b217de51d"],
Cell[31226, 789, 1341, 33, 130, "Output",ExpressionUUID->"45983e94-26d4-498e-94bc-aa75db152bb0"]
}, Open  ]],
Cell[32582, 825, 162, 3, 34, "Text",ExpressionUUID->"d2cdf636-fbc9-4f77-9673-8f236d955751"],
Cell[CellGroupData[{
Cell[32769, 832, 899, 24, 84, "Input",ExpressionUUID->"88e59549-75a3-4d41-8a61-4878bf322245"],
Cell[33671, 858, 2371, 56, 246, "Output",ExpressionUUID->"4bc07582-627d-4603-b5e2-745a2976b063"]
}, Open  ]],
Cell[36057, 917, 1054, 31, 82, "Text",ExpressionUUID->"7ec2e46c-8577-409a-955f-91e1458a9b66"]
}, Closed]],
Cell[CellGroupData[{
Cell[37148, 953, 234, 4, 38, "Subsection",ExpressionUUID->"a080cd32-ffdd-4d9a-b455-aaeda80bb8fc"],
Cell[37385, 959, 2470, 64, 275, "Input",ExpressionUUID->"1407a7dd-088a-444f-9a8a-fabf91e15d04"],
Cell[CellGroupData[{
Cell[39880, 1027, 1175, 26, 124, "Input",ExpressionUUID->"904ca759-2ff2-458e-a72c-cee32fb9dfea"],
Cell[41058, 1055, 1186, 28, 82, "Output",ExpressionUUID->"7e244bf8-951a-4a69-8268-cdce28b82a09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42281, 1088, 5597, 144, 504, "Input",ExpressionUUID->"5790b34d-5b13-47bf-80d1-374b73cfb1b3"],
Cell[47881, 1234, 627, 11, 22, "Print",ExpressionUUID->"9b69a9c8-5f2d-4ed5-bff3-c15a0696614b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48545, 1250, 3145, 81, 523, "Input",ExpressionUUID->"fe8983ab-8329-4be1-9dc4-bb7c2e921abb"],
Cell[51693, 1333, 97847, 1682, 265, "Output",ExpressionUUID->"78df9bd9-8495-4067-92cb-c35fbfc1f802"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149577, 3020, 2865, 70, 362, "Input",ExpressionUUID->"3abcbabe-e23e-42a3-93ec-df397496ff26"],
Cell[152445, 3092, 129037, 2208, 256, "Output",ExpressionUUID->"49364f02-16a1-43ed-8d5a-c17bc184a670"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281531, 5306, 202, 3, 81, "Subsection",ExpressionUUID->"4024eb36-da6b-4acc-9228-22bc489bdae3"],
Cell[281736, 5311, 1569, 45, 179, "Input",ExpressionUUID->"045c0219-014e-411a-a0ae-53f4d568ac39"],
Cell[CellGroupData[{
Cell[283330, 5360, 1497, 39, 105, "Input",ExpressionUUID->"c578d3d1-66fd-4831-b038-59cdf0980674"],
Cell[284830, 5401, 5086, 111, 462, "Output",ExpressionUUID->"c3981ce4-cdf6-4cf9-8495-06a3d1868e49"]
}, Open  ]],
Cell[289931, 5515, 3869, 117, 295, "Input",ExpressionUUID->"7d80fc06-5ff4-4cba-b719-a2f8255f9688"],
Cell[293803, 5634, 1960, 51, 101, "Input",ExpressionUUID->"d1c1d9c4-f4c7-43d4-be31-f54f22bd6719"],
Cell[295766, 5687, 71, 0, 34, "Text",ExpressionUUID->"2d064a8d-7afb-4404-bdc9-78d751fd8c82"]
}, Closed]],
Cell[CellGroupData[{
Cell[295874, 5692, 167, 3, 38, "Subsection",ExpressionUUID->"035457de-f90e-4f71-a86f-39312205675e"],
Cell[CellGroupData[{
Cell[296066, 5699, 3415, 86, 408, "Input",ExpressionUUID->"72dc2eda-2dab-4e70-8fbe-790a8829ca3b"],
Cell[299484, 5787, 1211, 32, 114, "Output",ExpressionUUID->"a52cb387-01d8-4c02-8926-7ac7a38c543f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300732, 5824, 6297, 167, 831, "Input",ExpressionUUID->"9967bcf0-2a54-4ffa-8dee-23cc350e6479"],
Cell[307032, 5993, 1484, 36, 114, "Output",ExpressionUUID->"00acad60-3aaf-4674-883d-2ceba18c350b"],
Cell[308519, 6031, 805, 18, 52, "Output",ExpressionUUID->"78f586c4-8157-49ef-95bb-8ecd04fbbfb2"],
Cell[309327, 6051, 583, 11, 22, "Print",ExpressionUUID->"3d028236-db63-41d6-8bb5-6850e80aee94"],
Cell[309913, 6064, 223194, 3853, 556, "Output",ExpressionUUID->"d46e2dd3-d388-415b-b9e4-aad06e6983dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533144, 9922, 159, 3, 28, "Input",ExpressionUUID->"32889476-3f72-499a-ac0c-872898a465f1"],
Cell[533306, 9927, 1097, 35, 54, "Output",ExpressionUUID->"ed677f50-2801-44c3-b25c-99c939b8710f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534440, 9967, 159, 3, 28, "Input",ExpressionUUID->"a741e4e9-bde9-4202-9d2f-a650b8dd0133"],
Cell[534602, 9972, 145, 3, 32, "Output",ExpressionUUID->"b2db95db-e92c-4da3-a4db-fd049b517dfe"]
}, Open  ]],
Cell[534762, 9978, 208, 5, 28, "Input",ExpressionUUID->"a3ad2dfe-f132-4ce8-b364-88a4b372e955"],
Cell[CellGroupData[{
Cell[534995, 9987, 261, 6, 28, "Input",ExpressionUUID->"0c48a8d1-63b8-4f3a-920f-92612e0d80f1"],
Cell[535259, 9995, 579, 17, 34, "Output",ExpressionUUID->"639e3ab8-caad-4908-9e02-beda050ec8b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535875, 10017, 3376, 95, 481, "Input",ExpressionUUID->"e22b053d-1394-4d76-8f7a-70b3221c87b3"],
Cell[539254, 10114, 1187, 32, 114, "Output",ExpressionUUID->"19672166-b0a2-44b0-a673-a83f2c007067"],
Cell[540444, 10148, 508, 14, 52, "Output",ExpressionUUID->"358537e7-713e-4cf1-8fc7-94dc87f4b75b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[541013, 10169, 172, 3, 67, "Section",ExpressionUUID->"66302c3f-5cd2-4c15-a51f-240dc9e7090a"],
Cell[541188, 10174, 776, 18, 102, "Text",ExpressionUUID->"2d1fef95-6f32-4835-8cfd-662621e0c4f4"],
Cell[CellGroupData[{
Cell[541989, 10196, 1473, 39, 183, "Input",ExpressionUUID->"ea2623b7-3b2b-482f-80ff-da134a9bba28"],
Cell[543465, 10237, 3813, 78, 430, "Output",ExpressionUUID->"a35d8755-fb7c-4f0e-b2a5-acb1d5b207d7"]
}, Open  ]],
Cell[547293, 10318, 215, 4, 30, "Text",ExpressionUUID->"2f1a0635-b682-4d0e-b6de-a97ddc7c202b"],
Cell[547511, 10324, 1489, 36, 146, "Input",ExpressionUUID->"e35e216a-af76-4664-8711-bb873294404b"],
Cell[CellGroupData[{
Cell[549025, 10364, 911, 21, 69, "Input",ExpressionUUID->"4011c525-b074-46e0-bf6a-d018d9818efa"],
Cell[549939, 10387, 235, 5, 22, "Print",ExpressionUUID->"b117c644-44bc-469a-a14d-cf94eca6a249"],
Cell[550177, 10394, 183, 3, 30, "Output",ExpressionUUID->"ba491b81-8890-464e-8989-12f9c7daf2a0"]
}, Open  ]],
Cell[550375, 10400, 225, 5, 30, "Text",ExpressionUUID->"25b08f40-8f92-4f00-a288-7cbc1848c697"],
Cell[CellGroupData[{
Cell[550625, 10409, 579, 14, 30, "Input",ExpressionUUID->"7de87ce3-6920-41bf-902e-add1d1c70677"],
Cell[551207, 10425, 207, 4, 30, "Output",ExpressionUUID->"b8723837-4cbb-4ebf-9d10-13af86e64bfe"]
}, Open  ]],
Cell[551429, 10432, 1093, 29, 69, "Input",ExpressionUUID->"9680529c-9a51-4649-af1c-6476b2f6c574"],
Cell[552525, 10463, 186, 4, 30, "Input",ExpressionUUID->"644ee652-4a77-4f91-b6ef-bdea20b0078c"],
Cell[552714, 10469, 283, 7, 30, "Text",ExpressionUUID->"e84b53c2-024f-4ad5-b0ba-160a3219c06b"],
Cell[553000, 10478, 345, 9, 30, "Input",ExpressionUUID->"f18c0166-0254-4295-a62c-5bdf3163db19"],
Cell[CellGroupData[{
Cell[553370, 10491, 271, 6, 30, "Input",ExpressionUUID->"72e47a16-473c-4bca-b43c-88172c6acd8e"],
Cell[553644, 10499, 1031, 29, 34, "Output",ExpressionUUID->"92b6e632-5875-4c26-b0d7-e4c315ae724a"]
}, Open  ]],
Cell[554690, 10531, 338, 7, 30, "Text",ExpressionUUID->"e91894ea-4ba0-4859-98fd-94540903cf9e"],
Cell[CellGroupData[{
Cell[555053, 10542, 1397, 40, 145, "Input",ExpressionUUID->"3f892c51-6562-44e0-a66b-c0b9ce0f1414"],
Cell[556453, 10584, 1484, 46, 30, "Output",ExpressionUUID->"fc603738-b634-4a45-b34a-ee3982f01818"]
}, Open  ]],
Cell[557952, 10633, 175, 3, 50, "Input",ExpressionUUID->"55ef5596-efdc-4402-9e73-8a4be5a96f97"]
}, Closed]],
Cell[CellGroupData[{
Cell[558164, 10641, 161, 3, 53, "Section",ExpressionUUID->"c4b338ab-afba-45d7-a1be-8ac3706ee666"],
Cell[558328, 10646, 364, 7, 34, "Text",ExpressionUUID->"76501ed5-fc4f-49d5-ae9b-9c7398e71f63"],
Cell[558695, 10655, 1723, 50, 179, "Input",ExpressionUUID->"408a119f-1150-4939-a0c3-52748b58f7c9"],
Cell[560421, 10707, 146, 3, 34, "Text",ExpressionUUID->"7376784f-a728-4a63-bfd7-90ff010736ff"],
Cell[560570, 10712, 236, 6, 34, "Text",ExpressionUUID->"0410d372-6e06-4cd9-8b5e-82451a713ed9"],
Cell[CellGroupData[{
Cell[560831, 10722, 1433, 37, 121, "Input",ExpressionUUID->"6348373f-3d12-43ca-a158-42355e35ec53"],
Cell[562267, 10761, 1491, 35, 130, "Output",ExpressionUUID->"5ee76287-96f8-427d-8ba4-c293c52b50ec"]
}, Open  ]],
Cell[563773, 10799, 164, 3, 34, "Text",ExpressionUUID->"d1e96f64-475b-4976-9838-94c3f2d97ffc"],
Cell[CellGroupData[{
Cell[563962, 10806, 942, 26, 86, "Input",ExpressionUUID->"fcd6ddec-dd02-4b09-b7a8-2315a3849a72"],
Cell[564907, 10834, 1320, 33, 130, "Output",ExpressionUUID->"2b83ffac-2893-4318-8d3d-c5231724c8ca"]
}, Open  ]],
Cell[566242, 10870, 162, 3, 34, "Text",ExpressionUUID->"74b104dd-0525-4332-b866-b6de4d04bc39"],
Cell[CellGroupData[{
Cell[566429, 10877, 1198, 29, 84, "Input",ExpressionUUID->"cda5a574-21a8-4ba3-87fb-384c76b42d83"],
Cell[567630, 10908, 2539, 58, 246, "Output",ExpressionUUID->"1857ea0e-6aac-4b2e-9e40-d3dc286afeb8"]
}, Open  ]],
Cell[570184, 10969, 1065, 24, 69, "Input",ExpressionUUID->"b0c98e82-aa42-49b0-a91b-b63d72ef5f02"],
Cell[571252, 10995, 744, 15, 106, "Text",ExpressionUUID->"765f9230-ff08-4661-9a57-bbb83fad03ed"],
Cell[CellGroupData[{
Cell[572021, 11014, 1326, 37, 88, "Input",ExpressionUUID->"c378aefe-d9dd-4f2d-9447-d816555a3795"],
Cell[573350, 11053, 418, 8, 30, "Output",ExpressionUUID->"6450e9fd-4478-468f-8691-7258e5528e56"]
}, Open  ]],
Cell[573783, 11064, 3766, 88, 373, "Input",ExpressionUUID->"ab1e90fc-5eb2-4972-8ba7-294f96c009cc"],
Cell[CellGroupData[{
Cell[577574, 11156, 466, 12, 50, "Input",ExpressionUUID->"b6cf64d2-ec29-4221-8b7c-e7985ee328cb"],
Cell[578043, 11170, 1132, 25, 30, "Output",ExpressionUUID->"5177e767-f054-4bf5-b47d-1cd948aadaa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579212, 11200, 366, 8, 30, "Input",ExpressionUUID->"b53a25b9-164f-4de2-aa66-c0441c27c07a"],
Cell[579581, 11210, 4583, 102, 258, "Output",ExpressionUUID->"792bd0d4-eb38-454e-8419-5f5c470d35c3"]
}, Open  ]],
Cell[584179, 11315, 1605, 42, 183, "Input",ExpressionUUID->"a5aa1e05-b170-46e8-99ac-99dabb4bace3"],
Cell[CellGroupData[{
Cell[585809, 11361, 210, 4, 30, "Input",ExpressionUUID->"9c6a164b-11e8-4b06-938f-6a00d43b9c47"],
Cell[586022, 11367, 1012, 29, 30, "Output",ExpressionUUID->"50922a4a-a6c2-47d5-beee-6c2f6a12f8ef"]
}, Open  ]],
Cell[587049, 11399, 170, 3, 30, "Input",ExpressionUUID->"a71b1479-c6c1-48eb-9820-e61e36e928a0"],
Cell[587222, 11404, 1039, 27, 107, "Input",ExpressionUUID->"3181ffa6-aa6c-48b8-b3a2-57ba52473c3d"],
Cell[588264, 11433, 1601, 39, 55, "Input",ExpressionUUID->"e3ea11e0-77d0-4cfc-9743-a52f1e8bbac6"],
Cell[CellGroupData[{
Cell[589890, 11476, 258, 6, 30, "Input",ExpressionUUID->"11e25d2a-8b2b-4d40-b17e-2bc4ad02bcc9"],
Cell[590151, 11484, 2062, 46, 30, "Output",ExpressionUUID->"69ffa955-fd8a-4015-8981-f223eba06e80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592250, 11535, 1220, 32, 50, "Input",ExpressionUUID->"b6287ed3-7e14-4bd7-b73c-229b11682107"],
Cell[593473, 11569, 2112, 47, 30, "Output",ExpressionUUID->"db51147e-6d24-4e09-9eeb-bf4275de4e07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595622, 11621, 239, 5, 30, "Input",ExpressionUUID->"cab74e89-5e70-4cdb-b973-46e1e335d985"],
Cell[595864, 11628, 134, 3, 30, "Output",ExpressionUUID->"72e2a008-90e4-47aa-830e-2d3ad0e81ffa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596035, 11636, 189, 4, 30, "Input",ExpressionUUID->"9ba34eb4-4d00-4823-b214-8d8ae411a03f"],
Cell[596227, 11642, 130, 3, 30, "Output",ExpressionUUID->"feddf7c0-1b5e-4bb7-8756-437cd10e4fef"]
}, Open  ]],
Cell[596372, 11648, 458, 14, 30, "Input",ExpressionUUID->"0e176d2f-6e5c-4815-87d6-4971d2764f82"],
Cell[CellGroupData[{
Cell[596855, 11666, 328, 9, 30, "Input",ExpressionUUID->"b0e54b70-d13e-40ef-b835-5844779b0b5a"],
Cell[597186, 11677, 205, 5, 30, "Output",ExpressionUUID->"003e0684-e0ee-4939-a5d4-9dd5e995a935"]
}, Open  ]],
Cell[597406, 11685, 935, 26, 67, "Input",ExpressionUUID->"b8c54a6c-8964-4b95-9135-a1d799adcf2a"],
Cell[CellGroupData[{
Cell[598366, 11715, 193, 4, 30, "Input",ExpressionUUID->"4e20dfa1-6390-4db0-b8a3-82ee0a02d3f2"],
Cell[598562, 11721, 5539, 119, 490, "Output",ExpressionUUID->"86688d89-a55d-4dfb-90a6-8df2c4ee7915"]
}, Open  ]],
Cell[604116, 11843, 807, 24, 67, "Input",ExpressionUUID->"e02f94a1-5c61-48eb-896b-22d9df959034"],
Cell[CellGroupData[{
Cell[604948, 11871, 317, 9, 30, "Input",ExpressionUUID->"2b33322f-451a-4e81-8ff5-2c7eb5289f11"],
Cell[605268, 11882, 6062, 132, 490, "Output",ExpressionUUID->"f465ec8f-81e4-4eeb-a76a-a374e8f13bba"]
}, Open  ]],
Cell[611345, 12017, 216, 5, 30, "Text",ExpressionUUID->"7b3e8442-f9c9-4841-a07d-276ca2bd455a"],
Cell[CellGroupData[{
Cell[611586, 12026, 1664, 50, 180, "Input",ExpressionUUID->"163780c2-f9c9-4c89-a2b2-80f6737aa633"],
Cell[613253, 12078, 1253, 32, 128, "Output",ExpressionUUID->"39510d47-7dd0-45ba-9254-3433e7f03d60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614543, 12115, 916, 26, 86, "Input",ExpressionUUID->"95da1531-a3da-4360-8360-05c7ff83847e"],
Cell[615462, 12143, 2399, 58, 244, "Output",ExpressionUUID->"cd0f6719-61bc-4b24-be33-7eda89aac89e"]
}, Open  ]],
Cell[617876, 12204, 154, 3, 30, "Input",ExpressionUUID->"4c549aa2-f89d-46fd-be4b-6645af1e98c1"],
Cell[618033, 12209, 1625, 50, 126, "Input",ExpressionUUID->"7cac8ebf-1c74-4463-a345-c416c159465e"],
Cell[CellGroupData[{
Cell[619683, 12263, 520, 12, 50, "Input",ExpressionUUID->"a791552e-c8e1-43c7-8d32-845b0532e96d"],
Cell[620206, 12277, 1216, 28, 148, "Output",ExpressionUUID->"8d0119fd-8d42-4e2c-bbaa-fd910d6c9899"]
}, Open  ]],
Cell[CellGroupData[{
Cell[621459, 12310, 156, 3, 30, "Input",ExpressionUUID->"fe96b6f4-2c07-4b63-889f-cbce75b7b8fb"],
Cell[621618, 12315, 393, 12, 53, "Output",ExpressionUUID->"174e74b6-5c08-4df0-8a9b-8ede6aafb1f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622048, 12332, 159, 3, 30, "Input",ExpressionUUID->"d0038748-213c-46cb-825c-bdc6bd0a9535"],
Cell[622210, 12337, 2441, 57, 98, "Output",ExpressionUUID->"4243fede-d385-4d84-88c1-a9bf520a1156"]
}, Open  ]],
Cell[624666, 12397, 292, 6, 30, "Input",ExpressionUUID->"f2f2796c-696d-4503-91b9-46e76d3e446f"],
Cell[624961, 12405, 158, 3, 30, "Input",ExpressionUUID->"aeb1ec91-dc4e-461c-b2d7-b4e5d166ad05"],
Cell[CellGroupData[{
Cell[625144, 12412, 170, 3, 30, "Input",ExpressionUUID->"d874ce5a-d31f-4834-9ccd-1927c035cf0c"],
Cell[625317, 12417, 158, 3, 30, "Output",ExpressionUUID->"ce4df8e8-cab9-4040-baf8-1338c47b002f"]
}, Open  ]],
Cell[625490, 12423, 1130, 26, 75, "Text",ExpressionUUID->"6748bf88-e361-4c21-86b5-5bcfceac4448"],
Cell[626623, 12451, 156, 3, 30, "Input",ExpressionUUID->"4ed5fd64-5846-475f-8bc1-e00a65fd34b4"],
Cell[626782, 12456, 247, 6, 30, "Text",ExpressionUUID->"afe0a89a-6895-4183-9cfd-71777161e475"],
Cell[627032, 12464, 1804, 42, 183, "Input",ExpressionUUID->"5d8e9a79-ece5-4d88-ade3-880df9cfb84a"],
Cell[CellGroupData[{
Cell[628861, 12510, 264, 6, 30, "Input",ExpressionUUID->"a37958a1-d6d2-485e-9fb7-0026ac2268d9"],
Cell[629128, 12518, 5139, 112, 460, "Output",ExpressionUUID->"c8d21705-7827-4514-adcf-9d6ee670b6c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[634304, 12635, 1475, 38, 145, "Input",ExpressionUUID->"33db5f91-c8bd-48fc-bed3-b364abe4c801"],
Cell[CellGroupData[{
Cell[635804, 12677, 1265, 33, 117, "Print",ExpressionUUID->"6142c298-ace5-4f2d-8d0a-05361d4a9709"],
Cell[637072, 12712, 2296, 56, 229, "Print",ExpressionUUID->"7d209d45-ee71-4728-9314-abc59b422486"],
Cell[639371, 12770, 5185, 113, 453, "Print",ExpressionUUID->"57ef2435-5c14-4351-b4c4-991760a0c9b9"]
}, Closed]]
}, Open  ]],
Cell[644583, 12887, 195, 3, 30, "Text",ExpressionUUID->"a8871298-b8d5-407a-8ac1-9cd67bf1a7cb"],
Cell[644781, 12892, 672, 19, 30, "Input",ExpressionUUID->"b083daf9-c1b0-4d57-b355-9617aed971ef"],
Cell[CellGroupData[{
Cell[645478, 12915, 210, 5, 30, "Input",ExpressionUUID->"d6e60726-590d-4809-9b80-b8eb7b1c5b84"],
Cell[645691, 12922, 303, 7, 30, "Output",ExpressionUUID->"3fc7e2c5-c0dd-4f62-aa06-ce6472cd77ac"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

