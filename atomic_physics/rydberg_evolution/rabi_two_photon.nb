(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    770264,      14442]
NotebookOptionsPosition[    765046,      14268]
NotebookOutlinePosition[    765387,      14283]
CellTagsIndexPosition[    765344,      14280]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["two-photon rabi flopping", "Title"]], "Subsection",
 CellChangeTimes->{{3.8120320269110794`*^9, 3.812032045999884*^9}, {
  3.812149200707573*^9, 3.8121492050945826`*^9}, {3.818892597097991*^9, 
  3.8188926073392277`*^9}}],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.819201396926625*^9, 3.8192014024230766`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["global definitions", "Section",
 CellChangeTimes->{{3.8192014094166317`*^9, 3.8192014473494415`*^9}, {
  3.819201691049264*^9, 3.819201712767215*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"get", " ", "from", " ", "local", " ", "files"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<../../constants/rbconsts.m\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<../../constants/physconsts.m\>\""}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "CONSTANTS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]780A", " ", "=", "2414176448051179.0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      SubscriptBox["S", 
       RowBox[{"1", "/", "2"}]], "F"}], "=", 
     RowBox[{
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"5", 
        SubscriptBox["P", 
         RowBox[{"3", "/", "2"}]], "F"}]}], "=", "3"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]480", " ", "=", "3928955767695494.5"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      SubscriptBox["P", 
       RowBox[{"3", "/", "2"}]], "F"}], "=", 
     RowBox[{"3", " ", "\[Rule]", " ", 
      RowBox[{"84", 
       SubscriptBox["D", 
        RowBox[{"5", "/", "2"}]]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TFORT", " ", "=", "1*^-3"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "K", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]FORT", "=", "1.064*^-6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wFORT", "=", "2.5*^-6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]rFORT", " ", "=", 
     RowBox[{
      FractionBox["1", "wFORT"], 
      SqrtBox[
       FractionBox[
        RowBox[{"2", " ", "kB", " ", "TFORT"}], "mRb"]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"radial", " ", "trap", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]zFORT", " ", "=", 
     RowBox[{
      FractionBox["\[Lambda]FORT", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wFORT", "2"]}]], 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "kB", " ", "TFORT"}], "mRb"]]}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{"axial", " ", "trap", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ag", "=", "3.20346392953120*^-34"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ae", "=", 
     RowBox[{"1.52739309640219*^-34", "+", 
      RowBox[{"-", "3.817491143122172*^-35"}], "+", 
      RowBox[{"-", "4.5814576851206318*^-35"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ar", "=", 
     RowBox[{"-", "1.825469589864302*^-39"}]}], ";"}], " ", 
   RowBox[{"(*", " ", "ponderomotive", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480g", " ", "=", 
     RowBox[{"-", "2.90311524481040*^-39"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480e", " ", "=", 
     RowBox[{
      RowBox[{"-", "4.82150951678205*^-39"}], "+", "1.696626924053701*^-40", 
      "+", "4.557481703934684*^-40"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480r", " ", "=", 
     RowBox[{"-", "4.8350228219114005*^-39"}]}], " ", ";"}], 
   RowBox[{"(*", "ponderomotive", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "FUNCTIONS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AtomPositionSample", "[", "Tatom_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]rFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]rFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]zFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BuildSchroedingerSystem", "[", 
     RowBox[{"H_", ",", "psi0_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hamiltonian", "=", "H"}], ",", 
        RowBox[{"\[Psi]0", "=", "psi0"}], ",", "\[Psi]", ",", "statelength", 
        ",", "eqs", ",", "ics", ",", "sys", ",", "P", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"statelength", " ", "=", " ", 
        RowBox[{"Length", "[", "\[Psi]0", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Psi]", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
          "statelength"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ics", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"statelength", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"eqs", ",", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ics", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/.", 
               RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
             RowBox[{"\[Psi]0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sys", " ", "=", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Psi]", ",", "sys"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gJ", "[", 
      RowBox[{"L_", ",", "J_"}], "]"}], ":=", 
     RowBox[{"gL", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"J", 
          RowBox[{"(", 
           RowBox[{"J", "+", "1"}], ")"}]}], "+", 
         RowBox[{"L", 
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}]}], "-", 
         RowBox[{"Se", 
          RowBox[{"(", 
           RowBox[{"Se", "+", "1"}], ")"}]}], "\n", "+", 
         RowBox[{"gS", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", 
             RowBox[{"(", 
              RowBox[{"J", "+", "1"}], ")"}]}], "-", 
            RowBox[{"L", 
             RowBox[{"(", 
              RowBox[{"L", "+", "1"}], ")"}]}], "+", 
            RowBox[{"Se", 
             RowBox[{"(", 
              RowBox[{"Se", "+", "1"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "J", 
         RowBox[{"(", 
          RowBox[{"J", "+", "1"}], ")"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gF", "[", 
      RowBox[{"J_", ",", "F_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gJ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"F", 
            RowBox[{"(", 
             RowBox[{"F", "+", "1"}], ")"}]}], "+", 
           RowBox[{"J", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "-", 
           RowBox[{"INuc", 
            RowBox[{"(", 
             RowBox[{"INuc", "+", "1"}], ")"}]}]}], ")"}]}], "\n", "+", 
        RowBox[{"gI", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"F", 
            RowBox[{"(", 
             RowBox[{"F", "+", "1"}], ")"}]}], "-", 
           RowBox[{"J", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "+", 
           RowBox[{"INuc", 
            RowBox[{"(", 
             RowBox[{"INuc", "+", "1"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "F", 
        RowBox[{"(", 
         RowBox[{"F", "+", "1"}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Zeeman", " ", "shifts"}], ",", " ", 
     RowBox[{"only", " ", "for", " ", "diagonal", " ", "elements"}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FZeemanMatElem", "[", 
      RowBox[{"L_", ",", 
       RowBox[{"{", 
        RowBox[{"J_", ",", "mJ_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"JJ_", ",", "mJJ_"}], "}"}], ",", "Bz_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"mJ", ",", "mJJ"}], "]"}], " ", "\[Mu]B", " ", 
      RowBox[{"gJ", "[", 
       RowBox[{"L", ",", "J"}], "]"}], "mJ", " ", "Bz"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HFZeemanMatElem", "[", 
      RowBox[{"I_", ",", "L_", ",", "J_", ",", 
       RowBox[{"{", 
        RowBox[{"F_", ",", "mF_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"FF_", ",", "mFF_"}], "}"}], ",", "Bz_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"mF", ",", "mFF"}], "]"}], "\[Mu]B", " ", "Bz", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ClebschGordan", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"F", ",", "mF"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"FF", ",", "mFF"}], "}"}]}], "]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "F"}], " ", "+", "1"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "+", "J", "+", "I"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"gJ", "[", 
            RowBox[{"L", ",", "J"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "F"], 
           SqrtBox[
            RowBox[{"J", " ", 
             RowBox[{"(", 
              RowBox[{"J", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "1"}], ")"}]}]], 
           RowBox[{"SixJSymbol", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"J", ",", "I", ",", "F"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"FF", ",", "1", ",", "J"}], "}"}]}], "]"}]}], "+", 
          "\[IndentingNewLine]", 
          RowBox[{"gI", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "FF"], 
           SqrtBox[
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{"I", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "I"}], "+", "1"}], ")"}]}]], 
           RowBox[{"SixJSymbol", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"I", ",", "J", ",", "F"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"FF", ",", "1", ",", "I"}], "}"}]}], "]"}]}]}], ")"}]}],
        ")"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxBoltzVelocitySample", "[", "Tatom_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"intensityProfile", "[", 
      RowBox[{
      "x_", ",", "y_", ",", "z_", ",", "zRx_", ",", "zRy_", ",", "zx_", ",", 
       "zy_", ",", "wx_", ",", "wy_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["x", "2"]}], 
         RowBox[{
          SuperscriptBox["wx", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"z", "-", "zx"}], "zRx"], ")"}], "2"]}], ")"}]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["y", "2"]}], 
         RowBox[{
          SuperscriptBox["wy", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"z", "-", "zy"}], "zRy"], ")"}], "2"]}], ")"}]}]]}], 
       "]"}], "/", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"z", "-", "zx"}], "zRx"], ")"}], "2"]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"z", "-", "zy"}], "zRy"], ")"}], "2"]}], ")"}]}]]}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{"Gaussian", " ", "beam", " ", "intensity", " ", "profile"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8192017178253603`*^9, 3.819201748596358*^9}, {
   3.819201786457075*^9, 3.8192019210721493`*^9}, {3.8192333030040283`*^9, 
   3.819233303662179*^9}, 3.8192345626399574`*^9, {3.819239771374568*^9, 
   3.8192397924775696`*^9}, {3.819285775000683*^9, 3.819285889342253*^9}, {
   3.8192860475803337`*^9, 3.8192860513781133`*^9}, {3.8192861562427053`*^9, 
   3.8192861565744452`*^9}, {3.819286516969108*^9, 3.8192865728787575`*^9}, {
   3.819288035743561*^9, 3.819288045107689*^9}, {3.819288340765124*^9, 
   3.819288483559705*^9}, {3.8192885713813047`*^9, 3.819288593317494*^9}, {
   3.819289466893937*^9, 3.819289546232596*^9}, {3.8192953132452016`*^9, 
   3.819295415598989*^9}, {3.8192954536273327`*^9, 3.8192954901823406`*^9}, {
   3.8192956455007443`*^9, 3.8192956635180044`*^9}, {3.819296175241294*^9, 
   3.8192962209223027`*^9}, {3.819297317521513*^9, 3.8192974164656563`*^9}, {
   3.819297582214944*^9, 3.819297610162972*^9}, {3.8192976881996393`*^9, 
   3.8192977778235197`*^9}, {3.819297809892593*^9, 3.8192978869323854`*^9}, {
   3.8192979549267964`*^9, 3.8192980401364317`*^9}, {3.819298093863152*^9, 
   3.819298410886216*^9}, {3.8192984815713863`*^9, 3.8192987166625175`*^9}, {
   3.819298755044718*^9, 3.819298771732566*^9}, {3.819298915864654*^9, 
   3.8192989915549393`*^9}, {3.819299189843501*^9, 3.8192992505829697`*^9}, {
   3.8192993362779255`*^9, 3.819299375877252*^9}, {3.819299420510394*^9, 
   3.819299467227704*^9}, {3.8192997080685263`*^9, 3.8192997652116985`*^9}, {
   3.819299796347228*^9, 3.8192998556703157`*^9}, {3.819299891777793*^9, 
   3.8192999154387817`*^9}, {3.819299953853002*^9, 3.8193000441457915`*^9}, {
   3.8193000811766577`*^9, 3.8193002227545185`*^9}, {3.819300267470413*^9, 
   3.81930028248629*^9}, {3.819304933149105*^9, 3.819305037999817*^9}, {
   3.819305229004965*^9, 3.8193052336443095`*^9}, {3.8193138139349685`*^9, 
   3.8193139052259693`*^9}, {3.819314032913005*^9, 3.819314106440956*^9}, {
   3.819314159872086*^9, 3.819314176795687*^9}, {3.8193142912158546`*^9, 
   3.819314521957082*^9}, {3.819314621196687*^9, 3.8193146568913774`*^9}, {
   3.8193147815229673`*^9, 3.819314807941039*^9}, {3.819314876922186*^9, 
   3.8193149249406075`*^9}, {3.8193150506410093`*^9, 3.819315135965601*^9}, {
   3.819315167750901*^9, 3.819315215304494*^9}, {3.8194119228847456`*^9, 
   3.819411977846978*^9}, {3.819412132308697*^9, 3.819412224227352*^9}, 
   3.8194123412854176`*^9, {3.8194144461786003`*^9, 3.8194144593695464`*^9}, 
   3.819414496023246*^9, {3.819459399423623*^9, 3.8194594021000004`*^9}, {
   3.81946096372876*^9, 3.8194611937679853`*^9}, 3.8194646621608567`*^9, {
   3.819666014463086*^9, 3.819666058313715*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["simple Rabi oscillation test", "Section",
 CellChangeTimes->{{3.8192038754475665`*^9, 3.819203889914741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "atom", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"g", ",", "e"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", 
      ",", "\[CapitalDelta]2"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scl", " ", "=", " ", "1*^9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atomBasis", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "rabi", " ", "frequencies", " ", "and", " ", "AC", " ", "stark", " ", 
     "shifts", " ", "calculated", " ", "in", " ", 
     RowBox[{"rydberg_rabi", ".", "ipynb"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]1", "=", "695214755.6324366"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]2", " ", "=", " ", "71550273.89520717"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
     RowBox[{"2", "\[Pi]", "*", "600099"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"-", "13194689145.077131"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]2", " ", "=", 
     RowBox[{"-", "\[CapitalDelta]1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diffACStarkHFge", " ", "=", "1298349.0058336519"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diffACStarkHFer", "=", "339133.4042641225"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Haf", "=", 
      RowBox[{
       RowBox[{"(", GridBox[{
          {"0", 
           RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
          {
           RowBox[{"\[CapitalOmega]1", "/", "2"}], 
           RowBox[{"\[CapitalDelta]1", " ", "+", "diffACStarkHFge"}], 
           RowBox[{"\[CapitalOmega]2", "/", "2"}]},
          {"0", 
           RowBox[{"\[CapitalOmega]2", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
            "\[CapitalDelta]1", "+", "diffACStarkHFge", " ", "+", " ", 
             "\[CapitalDelta]2", " ", "+", "diffACStarkHFer"}], ")"}]}
         }], ")"}], "/", "scl"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scl", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]1", " ", "=", " ", "1"}], ";", 
    RowBox[{"\[CapitalOmega]2", "=", "0.3"}], ";", 
    RowBox[{"\[CapitalDelta]1", "=", 
     RowBox[{"20", "\[CapitalOmega]1"}]}], ";", 
    RowBox[{"\[CapitalDelta]2", "=", 
     RowBox[{"-", "\[CapitalDelta]1"}]}], ";", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"diagnostics", ",", " ", 
     RowBox[{
      RowBox[{"e", ".", "g", ".", " ", "reproduce"}], " ", "Shore", " ", 
      "examples"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Haf", "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
         {
          RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1", 
          RowBox[{"\[CapitalOmega]2", "/", "2"}]},
         {"0", 
          RowBox[{"\[CapitalOmega]2", "/", "2"}], 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[CapitalGamma]", "/", "2"}]}]}]}
        }], ")"}], "/", "scl"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
     RowBox[{"\[CapitalOmega]1", " ", 
      RowBox[{"\[CapitalOmega]2", "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[CapitalDelta]1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"scl", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Haf", "=", 
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"/", "2"}], "0"},
         {
          RowBox[{"1", "/", "2"}], "0", 
          RowBox[{"1", "/", "2"}]},
         {"0", 
          RowBox[{"1", "/", "2"}], "0"}
        }], ")"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Shore", ",", " ", 
       RowBox[{
        RowBox[{"page", " ", "794", " ", 
         RowBox[{"Fig", ".", " ", "13.3"}]}], "-", "1"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "5"}], ")"}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Haf", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192390395347195`*^9, 
   3.8192391336765013`*^9}, {3.8192391681624517`*^9, 3.819239205364618*^9}, {
   3.819239247806906*^9, 3.819239251535215*^9}, {3.819239552084382*^9, 
   3.819239554547559*^9}, {3.819239687324473*^9, 3.819239715963911*^9}, {
   3.8192397820159545`*^9, 3.8192397826899557`*^9}, {3.819239879006448*^9, 
   3.8192398838481426`*^9}, {3.8192406342774234`*^9, 
   3.8192406921008005`*^9}, {3.8192407358505707`*^9, 3.819240765537469*^9}, {
   3.8192409644297724`*^9, 3.8192409853614974`*^9}, {3.8192410516435223`*^9, 
   3.8192410633695292`*^9}, {3.819241203344366*^9, 3.8192412273522124`*^9}, {
   3.8192412962313366`*^9, 3.819241500542883*^9}, 3.8192415334792695`*^9, {
   3.8192416073247766`*^9, 3.819241669077629*^9}, {3.8192417151328716`*^9, 
   3.819241731777356*^9}, {3.8192417648395586`*^9, 3.8192417908514943`*^9}, {
   3.8192419070622606`*^9, 3.819241907184484*^9}, {3.819241988008176*^9, 
   3.8192420205235667`*^9}, {3.8192422332551126`*^9, 
   3.8192422352576494`*^9}, {3.8192894221202264`*^9, 3.8192894221285996`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", "2"], "0"},
     {
      FractionBox["1", "2"], "20", "0.15`"},
     {"0", "0.15`", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8192398847534113`*^9, {3.8192406794870863`*^9, 3.819240692790371*^9}, 
   3.8192407371978025`*^9, 3.819240987037568*^9, 3.819241064438328*^9, {
   3.819241492698249*^9, 3.8192415019648952`*^9}, 3.8192415345336*^9, 
   3.8192416729882517`*^9, 3.8192417342574368`*^9, 3.819241806055339*^9, 
   3.819241907722474*^9, 3.8192420210645285`*^9, 3.819242236844819*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"Haf", ",", "\[Psi]0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<BDF\>\""}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"e\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\) Rabi Oscillations\>\"", "]"}], ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.8192395716314893`*^9, 
   3.819239572460662*^9}, {3.8192396474327884`*^9, 3.8192396600483513`*^9}, 
   3.819239724419385*^9, {3.8192397972636976`*^9, 3.819239835865923*^9}, {
   3.8192410165200768`*^9, 3.81924102522064*^9}, {3.819241685565702*^9, 
   3.8192416864844785`*^9}, {3.819241802161066*^9, 3.819241803634892*^9}, 
   3.819288617708044*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8192395636890182`*^9, 3.8192395737551384`*^9}, {
   3.819239649098977*^9, 3.819239724773569*^9}, {3.819239776352786*^9, 
   3.819239798302092*^9}, {3.8192398369279604`*^9, 3.8192398908131895`*^9}, 
   3.819240705457554*^9, 3.8192407486938777`*^9, 3.819240990228368*^9, 
   3.8192410256930733`*^9, 3.819241066401521*^9, 3.819241505212696*^9, 
   3.8192415363032484`*^9, {3.819241674232566*^9, 3.8192416874700036`*^9}, 
   3.8192417441580625`*^9, 3.8192418822644453`*^9, 3.8192419798682876`*^9, 
   3.8192420255142*^9, 3.8192422527508283`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aJTeFBhG/wPJL3iI
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
yLCz8mAmmc1A+zTVS6WxnqCzuXokN4GBtQG9fg7XLcCUump3fxIDPd2bLyy8
kQWnEY/TG84y8Ly/usEbnxmSv9XNZvfzDDTT7g12/qMHYXfnJNLTGPgqhGfF
rV9OcHytyd7OdAaeM381svyCPzBjUu8JZTCw+s+tnYJUCqT1fVi0yST0/ets
50YuClwlqVgmZDMwu67g9cKCD9y5Fpf+4goDdWMn4wv77aGSr+UjTx4Dowuw
xeKwOrwI2aBsdJ2By0YHV276cpPU1bY/9vQNBnrdnlV4fU0VPqqXN1bfZGDV
hGm982E7mLjIK7pwi3jeyh0S4uIDfxac/bWLibwwXeZZ9pYM/P7XbkffZeDf
js7HLy9RQLxh6tf9ewQ/n6XjdooGwFYFMJl8QOCdT4/aes8ZVBKTzyk9YiA3
iWGVrGIA+pPv3h8oJ/Jw/alPEXKLJEvnHdtvPmagpuKzsyZbZcCt/NiR4SoG
PvjwnyjN1hzIG188lalhYMgwK86q0QMOnRYX9K9j4NuW0Vc5RP9/8hPFK7ue
8OsdI2ZZNzFfmj8o6H3GwPc+XdH3DgVC+m2umXUvGPhHxOt9aZQ7XBOyB5cm
gj+3tVynB0yg5HBO4vlmBopeqzkVJLseqt+Mv2lrJfByevPbh8UPTXv0tq1p
Z6CxztzY1jqEnlx2hGUnAzmVnzpzV7nCp+VvqpldDCzZ6nnp68UAmAqWW/ms
h4HL/zGEb5VT4G/zYVfuXiI/accooUwyrFKtzyO9Y2CpTHzVdVFvkLggPHGi
n4GDyZqdJ15bw7Z5P73HgwxsSLQZYI7tADWfO8yfHxnYlJehH4PdJFLdn87d
wwy8fdos7q2QFnDs9hbvG2HgyOXgiHkLZ+h638K4PEr47fc+Qb57ASAdqunf
Mkb4M2EiS6CLAqG/c3T+fSPyaMtI6iMMhDIW31r1SSI/um6u6hh2gWXrDo3v
nSbqzatbcq8e6IFt/ptnl2YIfFzUngXY/0fKUMcr/80xcOuktopp4G74kU8/
ELiCiR5XuVJO9aqCwe7vRhdWMrF7yFbZ1MYR2E9dpV6sZuLEzJozu3v9ocu+
Zu63ABNTY4LMV1VTYMuA/CslYSYWjziy7n8MhJCws4X+a5nYsUZvLG7ADcoW
fsWnijHRJPCZTN5hBG5OgPfzdUw8NboqtI7nB8lGokljXpLYf00k02xWCQo4
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aID/ARQBC28=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.3250590597826522`*^-21}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\
\[LongLeftRightArrow]\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\) Rabi \
Oscillations\"", 
         StringForm[
         "\!\(\*TemplateBox[{\"g\"},\n\
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},\n\"Ket\"]\) Rabi \
Oscillations"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"e\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8192395740823183`*^9, {3.819239649466631*^9, 3.819239725075938*^9}, {
   3.819239776646129*^9, 3.819239798616879*^9}, {3.8192398373443227`*^9, 
   3.819239891212536*^9}, 3.819240708064005*^9, 3.8192407511749024`*^9, 
   3.819240990799549*^9, 3.8192410259305944`*^9, 3.8192410666803017`*^9, 
   3.819241505471272*^9, 3.819241536564887*^9, {3.8192416745479774`*^9, 
   3.8192416878872385`*^9}, 3.819241744154047*^9, 3.819241882260453*^9, 
   3.8192419798633013`*^9, 3.819242026343623*^9, 3.8192422546418896`*^9}]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8192425142842827`*^9, 3.819242515867179*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["beam setup", "Section",
 CellChangeTimes->{{3.819997317215989*^9, 3.8199973187825303`*^9}}],

Cell[CellGroupData[{

Cell["RIN data", "Subsection",
 CellChangeTimes->{{3.819459322341485*^9, 3.8194593382829933`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"780", "A", " ", 
    RowBox[{"RIN", ".", " ", 
     RowBox[{"todo", ":", " ", 
      RowBox[{
      "bundle", " ", "setup", " ", "stuff", " ", "into", " ", 
       "function"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"VDC780A", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"contents", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"header", " ", "=", 
     RowBox[{"contents", "[", 
      RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"HzPts780A", ",", "dBVpkPts780A"}], "}"}], "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"contents", "[", 
       RowBox[{"[", 
        RowBox[{"15", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", "-=", 
     RowBox[{"10", 
      RowBox[{"Log10", "[", "VDC780A", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "compress", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compression", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dBVpkPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HzPts780A", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"HzPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "HzPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phases", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"make", " ", "phases", " ", "pre"}], "-", 
     RowBox[{
     "determined", " ", "so", " ", "each", " ", "subsequent", " ", "call", 
      " ", "within", " ", "a", " ", "measurement", " ", "sees", " ", "the", 
      " ", "same", " ", "function", " ", "of", " ", 
      RowBox[{"t", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
     RowBox[{"1", "+", 
      RowBox[{"Total", "[", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dBVpkPts780A", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"HzPts780A", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], 
                RowBox[{"t", "/", "scl"}]}], "+", 
               RowBox[{"phases", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}], 
         ",", 
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "divide", " ", "time", " ", "by", " ", "scl", " ", "because", " ", "time",
      " ", "window", " ", "in", " ", "solver", " ", "is", " ", 
     RowBox[{"mult", ".", " ", "by"}], " ", 
     RowBox[{"scl", ".", " ", "need"}], " ", "to", " ", "cancel", " ", "to", 
     " ", "get", " ", "real", " ", "time"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.819459478992441*^9, 3.8194596794743643`*^9}, {
   3.819459753112505*^9, 3.819459788323239*^9}, {3.8194655025486126`*^9, 
   3.8194656025372534`*^9}, 3.8194657684988165`*^9, {3.8194658896028366`*^9, 
   3.8194659360785265`*^9}, {3.819671207069723*^9, 3.819671220337928*^9}, {
   3.8196712785223885`*^9, 3.8196713591221867`*^9}, {3.8196714281459064`*^9, 
   3.8196715725133877`*^9}, {3.8196716098681164`*^9, 3.81967165595725*^9}, {
   3.819671850788233*^9, 3.8196718674966636`*^9}, {3.8196724562270527`*^9, 
   3.819672487236653*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Beams and differential frequency shifts", "Subsection",
 CellChangeTimes->{{3.819459361116685*^9, 3.819459368769582*^9}, {
  3.819459420970192*^9, 3.819459433960681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", ",", 
    "\[CapitalDelta]2", ",", "diffACStarkHFge", ",", "diffACStarkHFer"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStates", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"single", " ", "atom", " ", "states"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomBasis", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"rabi", " ", "frequencies", " ", "calculated", " ", "in", " ", 
    RowBox[{"rydberg_rabi", ".", "ipynb"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", "2"}], "\[Pi]", "*", "2100000000"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"780", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]2", " ", "=", 
    RowBox[{"-", "\[CapitalDelta]1"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"480", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]780A", " ", "=", " ", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]780A", "+", "\[CapitalDelta]1"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]480", " ", "=", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]480", "+", "\[CapitalDelta]2"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx780A", "=", "7*^-6"}], 
  RowBox[{"(*", "6*^-6", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wy780A", "=", "9*^-6"}], 
  RowBox[{"(*", "8*^-6", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zy780A", "=", "0"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"2.2*^-4", ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx480", "=", "4*^-6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wy480", "=", "wx480"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"field480", "=", "381161.43207231193"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"field780A", "=", "3797.8949279380545"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fieldProfile780A", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"intensityProfile", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wx780A", "2"], " "}], "\[Lambda]780A"], ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wy780A", "2"], " "}], "\[Lambda]780A"], ",", "0", ",",
       "zy780A", ",", "wx780A", ",", "wy780A"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fieldProfile480", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    SqrtBox[
     RowBox[{"intensityProfile", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["wx480", "2"], " "}], "\[Lambda]480"], ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["wy480", "2"], " "}], "\[Lambda]780A"], ",", "0", ",",
        "0", ",", "wx480", ",", "wx480"}], "]"}]]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
     RowBox[{"2", "\[Pi]", "*", "102712885", " ", 
      RowBox[{"fieldProfile780A", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
      SqrtBox[
       RowBox[{"RIN780A", "[", "t", "]"}]]}]}], ";", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
     RowBox[{"2", "\[Pi]", "*", "24538455", " ", 
      RowBox[{"fieldProfile480", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]Eff", " ", "=", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], 
      RowBox[{
       RowBox[{"\[CapitalOmega]2", "[", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"Abs", "[", "\[CapitalDelta]1", "]"}]}], ")"}]}]}]}], ";", 
    " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ACStarkHFg", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Alpha]780Ag", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"field780A", " ", 
             RowBox[{"fieldProfile780A", "[", 
              RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
          RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
         RowBox[{"\[Alpha]480g", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"field480", " ", 
             RowBox[{"fieldProfile480", "[", 
              RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
        ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ACStarkHFe", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Alpha]780Ae", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"field780A", " ", 
             RowBox[{"fieldProfile780A", "[", 
              RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
          RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
         RowBox[{"\[Alpha]480e", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"field480", " ", 
             RowBox[{"fieldProfile480", "[", 
              RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
        ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ACStarkHFr", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Alpha]780Ar", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"field780A", " ", 
             RowBox[{"fieldProfile780A", "[", 
              RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
          RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
         RowBox[{"\[Alpha]480r", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"field480", " ", 
             RowBox[{"fieldProfile480", "[", 
              RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
        ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"diffACStarkHFge", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ACStarkHFe", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
      RowBox[{"ACStarkHFg", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"diffACStarkHFer", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"ACStarkHFr", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
      RowBox[{"ACStarkHFe", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Bbias", " ", "=", " ", 
     RowBox[{"3.6", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], " ", ";", 
    RowBox[{"(*", 
     RowBox[{"magnetic", " ", "bias", " ", 
      RowBox[{"field", " ", "[", "T", "]"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"diffZ1ge", " ", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"HFZeemanMatElem", "[", 
         RowBox[{"INuc", ",", "1", ",", 
          RowBox[{"3", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}], "-", 
        RowBox[{"HFZeemanMatElem", "[", 
         RowBox[{"INuc", ",", "0", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
      "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"diffZ1er", " ", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"FZeemanMatElem", "[", 
         RowBox[{"2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "/", "2"}], ",", 
            RowBox[{"5", "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "/", "2"}], ",", 
            RowBox[{"5", "/", "2"}]}], "}"}], ",", "Bbias"}], "]"}], "-", 
        RowBox[{"HFZeemanMatElem", "[", 
         RowBox[{"INuc", ",", "1", ",", 
          RowBox[{"3", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
      "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dUge", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"diffACStarkHFge", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
      "diffZ1ge"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dUer", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"diffACStarkHFer", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
      "diffZ1er"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeRINDependentQuantities", "[", "useRIN_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phases", " ", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
        RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"useRIN", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
         RowBox[{"1", "+", 
          RowBox[{"Total", "[", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"dBVpkPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], 
                "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"HzPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], 
                    RowBox[{"t", "/", "scl"}]}], "+", 
                   RowBox[{"phases", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}],
              ",", 
             RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}],
         ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", "1"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{"2", "\[Pi]", "*", "102712885", " ", 
       RowBox[{"fieldProfile780A", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       SqrtBox[
        RowBox[{"RIN780A", "[", "t", "]"}]]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]2", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{"2", "\[Pi]", "*", "24538455", " ", 
       RowBox[{"fieldProfile480", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}], "2"], "*", "102712885", " ", "*", 
       RowBox[{"24538455", "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"Abs", "[", "\[CapitalDelta]1", "]"}]}], ")"}]}]}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFg", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ag", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480g", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFe", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ae", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480e", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFr", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ar", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480r", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFg", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFr", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Bbias", " ", "=", " ", 
      RowBox[{"3.6", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"magnetic", " ", "bias", " ", 
       RowBox[{"field", " ", "[", "T", "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diffZ1ge", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "0", ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diffZ1er", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FZeemanMatElem", "[", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFge", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1ge"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFer", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1er"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192333655353513`*^9, 
   3.819233370867853*^9}, {3.819238203926468*^9, 3.819238212667815*^9}, {
   3.819242324812809*^9, 3.819242335601594*^9}, {3.8192425228529005`*^9, 
   3.8192425649705935`*^9}, {3.8192426952527275`*^9, 3.819242736070496*^9}, {
   3.8192428894875054`*^9, 3.8192428895822864`*^9}, 3.81928868091359*^9, {
   3.8192887217444215`*^9, 3.8192889467697983`*^9}, {3.8192889833299923`*^9, 
   3.819289170826914*^9}, {3.8192894220156155`*^9, 3.8192894220173187`*^9}, {
   3.8192957445248413`*^9, 3.8192958447572355`*^9}, {3.8192959041747727`*^9, 
   3.8192959092834263`*^9}, {3.8192960319294496`*^9, 3.8192960538769937`*^9}, 
   {3.8193034098916764`*^9, 3.8193035599418974`*^9}, {3.819303646201226*^9, 
   3.8193036515027227`*^9}, {3.8193036912372627`*^9, 
   3.8193037667485657`*^9}, {3.8193038045967274`*^9, 
   3.8193038804710274`*^9}, {3.8193039368626165`*^9, 3.819303960296561*^9}, {
   3.8193042019942627`*^9, 3.819304304304721*^9}, {3.819304338698412*^9, 
   3.8193044435899553`*^9}, {3.8193044912848225`*^9, 3.819304531887264*^9}, {
   3.819304699361288*^9, 3.8193047364690647`*^9}, {3.819305210993579*^9, 
   3.8193055047831926`*^9}, {3.8193055639965887`*^9, 3.819305774843767*^9}, {
   3.8193059478703403`*^9, 3.819305968267867*^9}, {3.8193061209956503`*^9, 
   3.8193061299750924`*^9}, {3.8193142401229143`*^9, 3.819314265233693*^9}, {
   3.8193153142435246`*^9, 3.819315314670029*^9}, {3.8193153465117235`*^9, 
   3.819315446932372*^9}, {3.819411150878492*^9, 3.819411152483901*^9}, {
   3.819459389517168*^9, 3.819459391233161*^9}, {3.819460004760043*^9, 
   3.8194600074682074`*^9}, {3.8194608650992413`*^9, 3.819460886816124*^9}, {
   3.8194613841926346`*^9, 3.8194616106507425`*^9}, {3.8194616490044036`*^9, 
   3.8194616811144433`*^9}, {3.8194617185048847`*^9, 3.819461775328508*^9}, {
   3.8194619219427743`*^9, 3.819461922321254*^9}, {3.8194622332793164`*^9, 
   3.8194623292212567`*^9}, {3.8194623601207714`*^9, 
   3.8194623961000957`*^9}, {3.8194628575139103`*^9, 
   3.8194629208316975`*^9}, {3.819463185421892*^9, 3.819463188809188*^9}, {
   3.819464109295348*^9, 3.8194641275555296`*^9}, {3.819464934787344*^9, 
   3.819464935997485*^9}, {3.8194666169500165`*^9, 3.8194666789875655`*^9}, {
   3.8194694068464046`*^9, 3.819469410144925*^9}, {3.8196660786319504`*^9, 
   3.8196661071459355`*^9}, {3.8199843508317614`*^9, 
   3.8199845355480123`*^9}, {3.8199845935471673`*^9, 
   3.8199845973108177`*^9}, {3.819986197113324*^9, 3.819986222192198*^9}, {
   3.8199862916719337`*^9, 3.8199863527426357`*^9}, {3.819987507220671*^9, 
   3.8199875232824726`*^9}, {3.819987567982716*^9, 3.8199876234560585`*^9}, {
   3.819990761143233*^9, 3.819990785200689*^9}, {3.8199909904704533`*^9, 
   3.8199909910661993`*^9}, 3.819997427542777*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<g-e differential Zeeman shift\>\"", "\[IndentingNewLine]", \
"diffZ1er", "\[IndentingNewLine]", "\"\<e-r differential Zeeman shift\>\"", "\
\[IndentingNewLine]", "diffZ1ge"}], "Input"],

Cell[BoxData["\<\"g-e differential Zeeman shift\"\>"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9}],

Cell[BoxData["7.378324478594951`*^7"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387395463`*^9}],

Cell[BoxData["\<\"e-r differential Zeeman shift\"\>"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.819997338743719*^9}],

Cell[BoxData["2.1061225027442385`*^7"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.819997338746711*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["frequency scans", "Section",
 CellChangeTimes->{{3.8192038754475665`*^9, 3.819203889914741*^9}, {
   3.8192039332593327`*^9, 3.8192039370811744`*^9}, {3.81945674121952*^9, 
   3.819456756426366*^9}, {3.8194612112237186`*^9, 3.819461219450421*^9}, 
   3.819816230565086*^9}],

Cell["Run beam setup above, then a \[OpenCurlyDoubleQuote]Run\
\[CloseCurlyDoubleQuote] cell.", "Text",
 CellChangeTimes->{{3.819459484611496*^9, 3.819459488748825*^9}, {
  3.8194658453380756`*^9, 3.8194658461057043`*^9}, {3.819816239291933*^9, 
  3.8198162560188365`*^9}, {3.8199973070591745`*^9, 3.819997313284008*^9}}],

Cell[CellGroupData[{

Cell["Run - RIN and finite T", "Subsection",
 CellChangeTimes->{{3.819459448353262*^9, 3.819459449525453*^9}, {
  3.8198162323722134`*^9, 3.819816236260394*^9}}],

Cell["\<\
possible methodological issue: effects from fast frequencies in the time \
series RIN will not be resolved unless the time step size in the solver is < \
1/f_fast\
\>", "Text",
 CellChangeTimes->{{3.819463368989073*^9, 3.8194634390598507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"scl", " ", "=", " ", "1*^9"}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"time", " ", "scale", " ", 
       RowBox[{"factor", ".", " ", "multiply"}], " ", "times"}], ",", " ", 
      RowBox[{"divide", " ", "frequencies"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground",
       " ", "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", "=", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fTable", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "fMHz", "*", "1*^6"}], ",", 
       RowBox[{"{", 
        RowBox[{"fMHz", ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "19"}], ",", 
           RowBox[{"-", "13"}], ",", ".4"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTable", " ", "=", 
     RowBox[{"{", "0", "}"}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{",", "50", ",", "100"}], "}"}], "/", 
      RowBox[{"(", "1*^6", ")"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endPts", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{"j", ",", "i"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<", 
           RowBox[{
            RowBox[{"Length", "[", "TTable", "]"}], "+", "1"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"T", "=", 
            RowBox[{"TTable", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"endPts", " ", "=", " ", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"linetime", "=", 
            RowBox[{
             RowBox[{"Timing", "[", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", " ", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "fTable", "]"}], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "on", " ", "each", " ", "frequency", " ", "step", " ", 
                   "need", " ", "to", " ", "recalculate", " ", "the", " ", 
                   "RIN", " ", "time", " ", "series", " ", "and", " ", 
                   "parameters", " ", "that", " ", "depend", " ", "on", " ", 
                   "it"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"useRIN", " ", "=", " ", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", 
                    "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"f", " ", "=", 
                   RowBox[{"fTable", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  RowBox[{"(*", 
                   RowBox[{"780", " ", "frequency", " ", "tuning"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"avgsNum", " ", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", 
                    ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"endPt", " ", "=", " ", "0"}], ";", 
                  RowBox[{"(*", 
                   RowBox[{
                   "the", " ", "average", " ", "loop", " ", "gets", " ", "a", 
                    " ", "single", " ", "data", " ", "point"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"avgstep", "=", "1"}], ",", 
                    RowBox[{"avgstep", "<", 
                    RowBox[{"avgsNum", "+", "1"}]}], ",", 
                    RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"r", "[", "t_", "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{"vx", " ", 
                    RowBox[{"t", "/", "scl"}]}]}], ",", 
                    RowBox[{"y", "+", 
                    RowBox[{"vy", " ", 
                    RowBox[{"t", "/", "scl"}]}]}], ",", 
                    RowBox[{"z", "+", 
                    RowBox[{"vz", " ", 
                    RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"args", "[", "t_", "]"}], ":=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"r", "[", "t", "]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "InitializeRINDependentQuantities", "[", "useRIN", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Haf", "[", "t_", "]"}], ":=", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", GridBox[{
                    {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], "0"},
                    {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                    {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                    }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
                    RowBox[{"BuildSchroedingerSystem", "[", 
                    RowBox[{
                    RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"result", "=", " ", 
                    RowBox[{"Timing", "[", 
                    RowBox[{"First", "@", 
                    RowBox[{"NDSolve", "[", 
                    RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"time", " ", "+=", " ", 
                    RowBox[{"result", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"soln", "=", 
                    RowBox[{"result", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"endPt", "+=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"soln", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
                    RowBox[{"t", "\[Rule]", " ", "tmax"}]}], ")"}], "/", 
                    "avgsNum"}]}], ";"}]}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<solved system in `` mins\>\"", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                    "]"}]}], "]"}], "]"}], ";"}], "*)"}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"endPts", ",", "endPt"}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step T=`` \[Mu]K in `` mins\>\"", ",", 
              RowBox[{
               RowBox[{"T", 
                RowBox[{"(", "1*^6", ")"}]}], "//", "N"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"linetime", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"linetime", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", "endPts"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198033155039415`*^9, 3.8198033521721325`*^9}, {3.819826445929147*^9, 
   3.8198265033857417`*^9}, {3.8199928463290243`*^9, 
   3.8199928599394236`*^9}, {3.8199973498343863`*^9, 3.81999735042196*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step T=\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\) \[Mu]K \
in \\!\\(\\*RowBox[{\\\"\\\\\\\"0.06\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step T=`` \[Mu]K in `` mins", 0., 
   NumberForm[0.059895833333333336`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9, 
   3.8198033767219467`*^9, 3.819826521910613*^9, 3.8199928732960854`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.06\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["Total run time `` mins", 
   NumberForm[0.059895833333333336`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9, 
   3.8198033767219467`*^9, 3.819826521910613*^9, 3.8199928733011045`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"populationData", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fTable", "/", 
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]", " ", "1*^6"}], ")"}]}], ",", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"solnList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"]}], "}"}]}], "&"}], 
     ",", 
     RowBox[{"Length", "[", "solnList", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"freqScanFitList", " ", "=", 
   RowBox[{"Array", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{
        RowBox[{"populationData", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            FractionBox[
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
             RowBox[{"2", 
              SuperscriptBox["\[Sigma]", "2"]}]], "]"}]}], ",", 
          RowBox[{"\[Sigma]", ">", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"-", "16"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "0.5"}], "}"}]}], "}"}], ",", "x"}], 
       "]"}], "&"}], ",", 
     RowBox[{"Length", "[", "populationData", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
        RowBox[{
         RowBox[{"TTable", "[", 
          RowBox[{"[", "#", "]"}], "]"}], 
         RowBox[{"(", "1*^6", ")"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"freqScanFitList", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.81972174920236*^9, 3.8197217565313926`*^9}, {
   3.81972187044374*^9, 3.8197218890177326`*^9}, 3.8198000292565517`*^9, {
   3.8198001472233295`*^9, 3.819800184419408*^9}, {3.8198005104952717`*^9, 
   3.819800515739854*^9}, {3.8198006528154855`*^9, 3.8198007899681015`*^9}, {
   3.8198009156600924`*^9, 3.819800998083431*^9}, {3.819808958303379*^9, 
   3.819808993078162*^9}, 3.819814634914315*^9, {3.819992882596667*^9, 
   3.8199928965115905`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"freqScanFitList", "//", "Normal"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "19"}], ",", 
        RowBox[{"-", "13"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<780A Frequency Scan\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<780A Frequency Tuning [MHz]\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "populationData", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1.05"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819722415660283*^9, 3.8197224821418467`*^9}, {
  3.8198002775136056`*^9, 3.8198002916333714`*^9}, {3.8198008660705976`*^9, 
  3.8198008692092686`*^9}, {3.819801021314191*^9, 3.819801102127328*^9}, {
  3.8198011580167165`*^9, 3.819801159827584*^9}, {3.81980158291385*^9, 
  3.8198015847400465`*^9}, {3.819801713414281*^9, 3.8198017356726537`*^9}, {
  3.819801770294954*^9, 3.8198017879676886`*^9}, {3.819801994068571*^9, 
  3.8198019947561913`*^9}, {3.8198146973366947`*^9, 3.8198147191173286`*^9}, {
  3.8199929103403573`*^9, 3.819992923804121*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zewsLHJwX/3fsv8PRtOnCA==
          "]]}}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{-19., 0.9799911284639681}, {-18.599999999999998`, 
          0.9590998245874311}, {-18.2, 0.9964587177390769}, {-17.8, 
          0.9606872140821408}, {-17.400000000000002`, 
          0.8832277719445134}, {-17., 0.967571074001752}, {-16.6, 
          0.9264404303507531}, {-16.2, 0.4115434270561555}, {-15.8, 
          0.0018288274216711664`}, {-15.399999999999999`, 
          0.33409195969745487`}, {-15., 0.88620263848432}, {-14.6, 
          0.9813719936558448}, {-14.200000000000001`, 
          0.8841241136818124}, {-13.799999999999999`, 
          0.9482567662121306}, {-13.399999999999997`, 
          0.9990978299043318}, {-13., 
          0.9616744158600159}}]}, {}}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {0, 1.05}, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {-19., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-19., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"780A Frequency Tuning [MHz]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"780A Frequency Scan\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{-19, -13}, {0., 0.9999999999999966}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"15.774873666947252`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 0, $CellContext`\[Mu] -> -15.774873666947252`], 
        Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8197224596737127`*^9, 3.819722484573361*^9}, 
   3.819722565258933*^9, 3.819800292490164*^9, 3.8198008059998045`*^9, 
   3.8198008705184946`*^9, 3.819801058581767*^9, {3.819801792423691*^9, 
   3.8198018040058203`*^9}, 3.8198019956734304`*^9, 3.8198089956005335`*^9, 
   3.81981464150559*^9, {3.819814688903555*^9, 3.8198147200065136`*^9}, 
   3.8198307702232833`*^9, {3.8199928857339*^9, 3.819992924671993*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "fname", "=", 
    "\"\<..\\images\\plot_rydberg_780Afrequency_scanfit_varied_0_50_100_uK.\
png\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"fname", ",", "plt"}], "]"}], "\[IndentingNewLine]", "fname"}], 
    "=", "\"\<..\\solns\\soln_rydberg_780Afrequency_scanfit_varied_0_50_100_\
uK.csv\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"fname", ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "fTable", "}"}], ",", "solnList"}], "]"}]}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8194558720208583`*^9, 3.8194559606972227`*^9}, {
   3.819456020568077*^9, 3.819456026206417*^9}, {3.8194560634184227`*^9, 
   3.819456126228094*^9}, {3.8194561738043723`*^9, 3.819456176973164*^9}, {
   3.8194563112692614`*^9, 3.819456352032028*^9}, 3.81946598426628*^9, {
   3.8198018591353874`*^9, 3.8198018624561825`*^9}, {3.819801977205871*^9, 
   3.8198020594249554`*^9}, {3.819811878513671*^9, 3.8198118888360405`*^9}, {
   3.819811958513422*^9, 3.8198119602336245`*^9}, 3.819812001089165*^9, {
   3.8198307858095417`*^9, 3.8198308007864757`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_rydberg_780Afrequency_scanfit_varied_0_\
50_100_uK.png\"\>"], "Output",
 CellChangeTimes->{
  3.819456122204848*^9, 3.819456178692423*^9, 3.8194563540131607`*^9, {
   3.8198020086212463`*^9, 3.819802065489424*^9}, 3.8198119054186697`*^9, 
   3.8198119858306823`*^9, 3.8198307938641186`*^9}],

Cell[BoxData["\<\"..\\\\solns\\\\soln_rydberg_780Afrequency_scanfit_varied_0_\
50_100_uK.csv\"\>"], "Output",
 CellChangeTimes->{
  3.819456122204848*^9, 3.819456178692423*^9, 3.8194563540131607`*^9, {
   3.8198020086212463`*^9, 3.819802065489424*^9}, 3.8198119054186697`*^9, 
   3.8198119858306823`*^9, 3.8198307938758783`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rabi oscillations", "Section",
 CellChangeTimes->{{3.819802194536642*^9, 3.819802211616387*^9}, {
  3.819802298836159*^9, 3.8198022997982407`*^9}}],

Cell["\<\
Run setup cells below, then a \[OpenCurlyDoubleQuote]Run *some noisy \
condition* \[OpenCurlyDoubleQuote] cell. \
\>", "Text",
 CellChangeTimes->{{3.8198024144656057`*^9, 3.819802446048952*^9}}],

Cell[CellGroupData[{

Cell["RIN data", "Subsection",
 CellChangeTimes->{{3.819459322341485*^9, 3.8194593382829933`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"780", "A", " ", 
    RowBox[{"RIN", ".", " ", 
     RowBox[{"todo", ":", " ", 
      RowBox[{
      "bundle", " ", "setup", " ", "stuff", " ", "into", " ", 
       "function"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"VDC780A", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"contents", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"header", " ", "=", 
     RowBox[{"contents", "[", 
      RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"HzPts780A", ",", "dBVpkPts780A"}], "}"}], "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"contents", "[", 
       RowBox[{"[", 
        RowBox[{"15", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", "-=", 
     RowBox[{"10", 
      RowBox[{"Log10", "[", "VDC780A", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "compress", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compression", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dBVpkPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HzPts780A", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"HzPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "HzPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phases", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"make", " ", "phases", " ", "pre"}], "-", 
     RowBox[{
     "determined", " ", "so", " ", "each", " ", "subsequent", " ", "call", 
      " ", "within", " ", "a", " ", "measurement", " ", "sees", " ", "the", 
      " ", "same", " ", "function", " ", "of", " ", 
      RowBox[{"t", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
     RowBox[{"1", "+", 
      RowBox[{"Total", "[", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dBVpkPts780A", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"HzPts780A", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], 
                RowBox[{"t", "/", "scl"}]}], "+", 
               RowBox[{"phases", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}], 
         ",", 
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "divide", " ", "time", " ", "by", " ", "scl", " ", "because", " ", "time",
      " ", "window", " ", "in", " ", "solver", " ", "is", " ", 
     RowBox[{"mult", ".", " ", "by"}], " ", 
     RowBox[{"scl", ".", " ", "need"}], " ", "to", " ", "cancel", " ", "to", 
     " ", "get", " ", "real", " ", "time"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.819459478992441*^9, 3.8194596794743643`*^9}, {
   3.819459753112505*^9, 3.819459788323239*^9}, {3.8194655025486126`*^9, 
   3.8194656025372534`*^9}, 3.8194657684988165`*^9, {3.8194658896028366`*^9, 
   3.8194659360785265`*^9}, {3.819671207069723*^9, 3.819671220337928*^9}, {
   3.8196712785223885`*^9, 3.8196713591221867`*^9}, {3.8196714281459064`*^9, 
   3.8196715725133877`*^9}, {3.8196716098681164`*^9, 3.81967165595725*^9}, {
   3.819671850788233*^9, 3.8196718674966636`*^9}, {3.8196724562270527`*^9, 
   3.819672487236653*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Beams and differential frequency shifts", "Subsection",
 CellChangeTimes->{{3.819459361116685*^9, 3.819459368769582*^9}, {
  3.819459420970192*^9, 3.819459433960681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", ",", 
    "\[CapitalDelta]2", ",", "diffACStarkHFge", ",", "diffACStarkHFer"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStates", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"single", " ", "atom", " ", "states"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomBasis", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"rabi", " ", "frequencies", " ", "calculated", " ", "in", " ", 
    RowBox[{"rydberg_rabi", ".", "ipynb"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", "2"}], "\[Pi]", "*", "2100000000"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"780", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]2", " ", "=", 
    RowBox[{"-", "\[CapitalDelta]1"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"480", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]780A", " ", "=", " ", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]780A", "+", "\[CapitalDelta]1"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]480", " ", "=", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]480", "+", "\[CapitalDelta]2"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx780A", "=", "7*^-6"}], 
  RowBox[{"(*", "6*^-6", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wy780A", "=", "9*^-6"}], 
  RowBox[{"(*", "8*^-6", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zy780A", "=", "0"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"2.2*^-4", ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx480", "=", "4*^-6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wy480", "=", "wx480"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"field480", "=", "381161.43207231193"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"field780A", "=", "3797.8949279380545"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fieldProfile780A", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"intensityProfile", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wx780A", "2"], " "}], "\[Lambda]780A"], ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wy780A", "2"], " "}], "\[Lambda]780A"], ",", "0", ",",
       "zy780A", ",", "wx780A", ",", "wy780A"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fieldProfile480", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    SqrtBox[
     RowBox[{"intensityProfile", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["wx480", "2"], " "}], "\[Lambda]480"], ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["wy480", "2"], " "}], "\[Lambda]780A"], ",", "0", ",",
        "0", ",", "wx480", ",", "wx480"}], "]"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]1", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"2", "\[Pi]", "*", "102712885", " ", 
     RowBox[{"fieldProfile780A", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
     SqrtBox[
      RowBox[{"RIN780A", "[", "t", "]"}]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]2", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{"2", "\[Pi]", "*", "24538455", " ", 
    RowBox[{"fieldProfile480", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]Eff", " ", "=", 
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], 
     RowBox[{
      RowBox[{"\[CapitalOmega]2", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        RowBox[{"Abs", "[", "\[CapitalDelta]1", "]"}]}], ")"}]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ACStarkHFg", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]780Ag", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"field780A", " ", 
           RowBox[{"fieldProfile780A", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
        RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
       RowBox[{"\[Alpha]480g", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"field480", " ", 
           RowBox[{"fieldProfile480", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
      ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ACStarkHFe", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]780Ae", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"field780A", " ", 
           RowBox[{"fieldProfile780A", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
        RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
       RowBox[{"\[Alpha]480e", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"field480", " ", 
           RowBox[{"fieldProfile480", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
      ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ACStarkHFr", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]780Ar", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"field780A", " ", 
           RowBox[{"fieldProfile780A", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
        RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
       RowBox[{"\[Alpha]480r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"field480", " ", 
           RowBox[{"fieldProfile480", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
      ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diffACStarkHFge", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ACStarkHFe", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
    RowBox[{"ACStarkHFg", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diffACStarkHFer", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ACStarkHFr", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
    RowBox[{"ACStarkHFe", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bbias", " ", "=", " ", 
    RowBox[{"3.6", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "4"}]]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"magnetic", " ", "bias", " ", 
    RowBox[{"field", " ", "[", "T", "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffZ1ge", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"HFZeemanMatElem", "[", 
       RowBox[{"INuc", ",", "1", ",", 
        RowBox[{"3", "/", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}], "-", 
      RowBox[{"HFZeemanMatElem", "[", 
       RowBox[{"INuc", ",", "0", ",", 
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], "/", 
    "\[HBar]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffZ1er", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"FZeemanMatElem", "[", 
       RowBox[{"2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"5", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"5", "/", "2"}]}], "}"}], ",", "Bbias"}], "]"}], "-", 
      RowBox[{"HFZeemanMatElem", "[", 
       RowBox[{"INuc", ",", "1", ",", 
        RowBox[{"3", "/", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], "/", 
    "\[HBar]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dUge", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"diffACStarkHFge", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
    "diffZ1ge"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dUer", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"diffACStarkHFer", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
    "diffZ1er"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeRINDependentQuantities", "[", "useRIN_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phases", " ", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
        RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"useRIN", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
         RowBox[{"1", "+", 
          RowBox[{"Total", "[", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"dBVpkPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], 
                "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"HzPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], 
                    RowBox[{"t", "/", "scl"}]}], "+", 
                   RowBox[{"phases", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}],
              ",", 
             RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}],
         ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", "1"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{"2", "\[Pi]", "*", "102712885", " ", 
       RowBox[{"fieldProfile780A", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       SqrtBox[
        RowBox[{"RIN780A", "[", "t", "]"}]]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]2", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{"2", "\[Pi]", "*", "24538455", " ", 
       RowBox[{"fieldProfile480", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}], "2"], "*", "102712885", " ", "*", 
       RowBox[{"24538455", "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"Abs", "[", "\[CapitalDelta]1", "]"}]}], ")"}]}]}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFg", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ag", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480g", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFe", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ae", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480e", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFr", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ar", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480r", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFg", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFr", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Bbias", " ", "=", " ", 
      RowBox[{"3.6", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"magnetic", " ", "bias", " ", 
       RowBox[{"field", " ", "[", "T", "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diffZ1ge", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "0", ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diffZ1er", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FZeemanMatElem", "[", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFge", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1ge"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFer", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1er"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192333655353513`*^9, 
   3.819233370867853*^9}, {3.819238203926468*^9, 3.819238212667815*^9}, {
   3.819242324812809*^9, 3.819242335601594*^9}, {3.8192425228529005`*^9, 
   3.8192425649705935`*^9}, {3.8192426952527275`*^9, 3.819242736070496*^9}, {
   3.8192428894875054`*^9, 3.8192428895822864`*^9}, 3.81928868091359*^9, {
   3.8192887217444215`*^9, 3.8192889467697983`*^9}, {3.8192889833299923`*^9, 
   3.819289170826914*^9}, {3.8192894220156155`*^9, 3.8192894220173187`*^9}, {
   3.8192957445248413`*^9, 3.8192958447572355`*^9}, {3.8192959041747727`*^9, 
   3.8192959092834263`*^9}, {3.8192960319294496`*^9, 3.8192960538769937`*^9}, 
   {3.8193034098916764`*^9, 3.8193035599418974`*^9}, {3.819303646201226*^9, 
   3.8193036515027227`*^9}, {3.8193036912372627`*^9, 
   3.8193037667485657`*^9}, {3.8193038045967274`*^9, 
   3.8193038804710274`*^9}, {3.8193039368626165`*^9, 3.819303960296561*^9}, {
   3.8193042019942627`*^9, 3.819304304304721*^9}, {3.819304338698412*^9, 
   3.8193044435899553`*^9}, {3.8193044912848225`*^9, 3.819304531887264*^9}, {
   3.819304699361288*^9, 3.8193047364690647`*^9}, {3.819305210993579*^9, 
   3.8193055047831926`*^9}, {3.8193055639965887`*^9, 3.819305774843767*^9}, {
   3.8193059478703403`*^9, 3.819305968267867*^9}, {3.8193061209956503`*^9, 
   3.8193061299750924`*^9}, {3.8193142401229143`*^9, 3.819314265233693*^9}, {
   3.8193153142435246`*^9, 3.819315314670029*^9}, {3.8193153465117235`*^9, 
   3.819315446932372*^9}, {3.819411150878492*^9, 3.819411152483901*^9}, {
   3.819459389517168*^9, 3.819459391233161*^9}, {3.819460004760043*^9, 
   3.8194600074682074`*^9}, {3.8194608650992413`*^9, 3.819460886816124*^9}, {
   3.8194613841926346`*^9, 3.8194616106507425`*^9}, {3.8194616490044036`*^9, 
   3.8194616811144433`*^9}, {3.8194617185048847`*^9, 3.819461775328508*^9}, {
   3.8194619219427743`*^9, 3.819461922321254*^9}, {3.8194622332793164`*^9, 
   3.8194623292212567`*^9}, {3.8194623601207714`*^9, 
   3.8194623961000957`*^9}, {3.8194628575139103`*^9, 
   3.8194629208316975`*^9}, {3.819463185421892*^9, 3.819463188809188*^9}, {
   3.819464109295348*^9, 3.8194641275555296`*^9}, {3.819464934787344*^9, 
   3.819464935997485*^9}, {3.8194666169500165`*^9, 3.8194666789875655`*^9}, {
   3.8194694068464046`*^9, 3.819469410144925*^9}, {3.8196660786319504`*^9, 
   3.8196661071459355`*^9}, {3.8199843508317614`*^9, 
   3.8199845355480123`*^9}, {3.8199845935471673`*^9, 
   3.8199845973108177`*^9}, {3.819986197113324*^9, 3.819986222192198*^9}, {
   3.8199862916719337`*^9, 3.8199863527426357`*^9}, {3.819987507220671*^9, 
   3.8199875232824726`*^9}, {3.819987567982716*^9, 3.8199876234560585`*^9}, {
   3.819990761143233*^9, 3.819990785200689*^9}, {3.8199909760541115`*^9, 
   3.819990976986456*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitializeRINDependentQuantities", "[", "False", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8199876772148*^9, 3.819987681884759*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ACStarkHFg", "[", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "\[Pi]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8199863893606863`*^9, 3.8199864074072886`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.5911333367104535`*^6"}]], "Output",
 CellChangeTimes->{{3.819986394454195*^9, 3.8199864081962485`*^9}, 
   3.819987641286991*^9, {3.8199876833611307`*^9, 3.819987705169965*^9}, 
   3.8199928012764063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ACStarkHFe", "[", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "\[Pi]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8199864389240417`*^9, 3.819986438985861*^9}}],

Cell[BoxData[
 RowBox[{"-", "144763.42345298507`"}]], "Output",
 CellChangeTimes->{
  3.8199864394852133`*^9, 3.819987642587513*^9, {3.8199876857944365`*^9, 
   3.819987705843109*^9}, 3.8199928019926467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ACStarkHFr", "[", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "\[Pi]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.819986442216566*^9, 3.819986460234085*^9}}],

Cell[BoxData["266197.2399889001`"], "Output",
 CellChangeTimes->{{3.8199864453683667`*^9, 3.8199864607228937`*^9}, 
   3.8199876434830275`*^9, {3.819987686764515*^9, 3.8199877065224967`*^9}, 
   3.819992802785573*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run - frequency error", "Subsection",
 CellChangeTimes->{{3.8198024623979783`*^9, 3.8198025560204945`*^9}}],

Cell["\<\
Can use frequency found in scans to satisfy the two-photon resonance. if \
doing this, make sure to use the same temperatures from the freq. scan, and \
to convert the frequencies to angular frequencies with the correct units.\
\>", "Text",
 CellChangeTimes->{{3.819802738338188*^9, 3.819802776181384*^9}, {
  3.819802823405308*^9, 3.81980285048003*^9}, {3.81980292224253*^9, 
  3.8198029538937016`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"3", "*", "2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "fTable", " ", "and", " ", "TTable", " ", "should", " ", "be", " ", 
     "same", " ", "lenght"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fTable", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "\[Pi]", " ", 
         RowBox[{"(", "1*^6", ")"}], 
         RowBox[{
          RowBox[{
           RowBox[{"freqScanFitList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}], ",", 
       RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTable", " ", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"50", ",", "100", ",", "150"}], "}"}], "/", 
      RowBox[{"(", "1*^6", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "10"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "TTable", "]"}], "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"T", "=", 
            RowBox[{"TTable", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"f", "=", 
            RowBox[{"fTable", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"fTable", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ";"}], "*)"}], 
           RowBox[{"(*", 
            RowBox[{"780", " ", "frequency", " ", "tuning"}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"useRIN", " ", "=", " ", "False"}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", "False"}],
               "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"avgsNum", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", ",", 
              "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"solng", " ", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"solne", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"solnr", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"avgstep", "=", "1"}], ",", 
             RowBox[{"avgstep", "<", 
              RowBox[{"avgsNum", "+", "1"}]}], ",", 
             RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                 RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                 RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"r", "[", "t_", "]"}], ":=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "+", 
                  RowBox[{"vx", " ", 
                   RowBox[{"t", "/", "scl"}]}]}], ",", 
                 RowBox[{"y", "+", 
                  RowBox[{"vy", " ", 
                   RowBox[{"t", "/", "scl"}]}]}], ",", 
                 RowBox[{"z", "+", 
                  RowBox[{"vz", " ", 
                   RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"args", "[", "t_", "]"}], ":=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"r", "[", "t", "]"}], ",", 
                 RowBox[{"{", "t", "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
              "InitializeRINDependentQuantities", "[", "useRIN", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Haf", "[", "t_", "]"}], ":=", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", GridBox[{
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], "0"},
                   {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                  }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
               RowBox[{"BuildSchroedingerSystem", "[", 
                RowBox[{
                 RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], ";"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"result", "=", " ", 
               RowBox[{"Timing", "[", 
                RowBox[{"First", "@", 
                 RowBox[{"NDSolve", "[", 
                  RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                   RowBox[{"Method", "\[Rule]", "\"\<BDF\>\""}]}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"time", " ", "+=", " ", 
               RowBox[{"result", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"solng", "+=", 
               RowBox[{
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"solne", "+=", 
               RowBox[{
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"solnr", "+=", 
               RowBox[{
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"solng", "/", "avgsNum"}], ",", 
               RowBox[{"solne", "/", "avgsNum"}], ",", 
               RowBox[{"solnr", "/", "avgsNum"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step ``/`` in `` mins\>\"", ",", "i", ",", 
              RowBox[{"Length", "[", "TTable", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198027179663506`*^9, 3.819802727087193*^9}, {3.819802999443404*^9, 
   3.819803212436143*^9}, {3.8198120929386597`*^9, 3.8198120998933706`*^9}, {
   3.819812139100168*^9, 3.819812153910636*^9}, {3.819812187574404*^9, 
   3.8198123682048874`*^9}, 3.8198124212242584`*^9, {3.8198124579578257`*^9, 
   3.819812496228352*^9}, {3.819812906939867*^9, 3.81981290749551*^9}, {
   3.8198129922844114`*^9, 3.8198130629379635`*^9}, {3.8198131253967447`*^9, 
   3.8198131321322527`*^9}, {3.819825462799967*^9, 3.819825463319642*^9}, {
   3.8198308331275234`*^9, 3.8198308502080946`*^9}, {3.8198372046152873`*^9, 
   3.8198372220312605`*^9}, {3.8198380266196423`*^9, 3.819838056013425*^9}, {
   3.819851656117609*^9, 3.819851666679801*^9}, 3.819852309163109*^9, {
   3.819984278187317*^9, 3.819984284221818*^9}, {3.8199903617956977`*^9, 
   3.8199903691125803`*^9}, {3.819990501852253*^9, 3.8199905106423836`*^9}, {
   3.819992823532028*^9, 3.8199928289173536`*^9}, {3.819993024386036*^9, 
   3.819993052413942*^9}, {3.819993276536003*^9, 3.8199932809980297`*^9}, {
   3.819993678968377*^9, 3.8199936824492064`*^9}, {3.8199938884685736`*^9, 
   3.8199938885777435`*^9}, {3.8199954703984833`*^9, 3.819995549819788*^9}, {
   3.819995598877347*^9, 3.81999562126505*^9}, {3.819996799781807*^9, 
   3.8199968047444*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 1, 3, 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819825476543027*^9, 3.8198308647228966`*^9, 3.8198374131430464`*^9, 
  3.819838069771653*^9, 3.8198484326748414`*^9, 3.819851685483206*^9, 
  3.8199847134356985`*^9, 3.819990515453277*^9, 3.8199929692641025`*^9, 
  3.8199932255336103`*^9, 3.8199935596214333`*^9, 3.819993686754224*^9, 
  3.819994235981123*^9, 3.819995664324004*^9, 3.8199971587645206`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solng", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Transpose", "@", "solnList"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8199963282071033`*^9, 3.8199963657181683`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tidx", "=", "2"}], ";", 
  RowBox[{"(*", 
   RowBox[{"corresponds", " ", "to", " ", "particular", " ", "temp"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"leg", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"e\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"solnList", "[", 
            RowBox[{"[", "Tidx", "]"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"], "&"}], ",", 
       RowBox[{"Length", "[", "solng", "]"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<Ground-Rydberg Rabi Oscillation, T=``\[Mu]K\>\"", ",", 
         RowBox[{
          RowBox[{"TTable", "[", 
           RowBox[{"[", "Tidx", "]"}], "]"}], 
          RowBox[{"(", "1*^6", ")"}]}]}], "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Two-photon pulse duration [ns]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8199960504781103`*^9, 3.819996074923436*^9}, {
  3.819996292152076*^9, 3.8199963029224386`*^9}, {3.8199964352097654`*^9, 
  3.8199964399729977`*^9}, {3.8199964860908623`*^9, 3.8199965190236425`*^9}, {
  3.8199965555022497`*^9, 3.8199966574257507`*^9}, {3.8199966882483807`*^9, 
  3.8199967405946507`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVV3c81e8XVwmVSpIkSRlJRirScg6SUShlVii7KCNJKXuP7D3iXnKvdblG
ZBMqCn2VkJXNJZIk8fv8/rqv9+s8zznv91n3+Ry4fV/bfD0TExM3MxPT/3+N
Di/2l1TxQlPYhrW1tVlwnfklHOy/BHoxSuKTi7MQJumfpevPhu8yPqe+nJ6F
ucLNqcctOFH2FP/PQwuzkKDZPnHGnweD4c1g4eosKE3GnjhP5UcZQSb3+N+z
sKiYDyIWB9HNxfwL/9QsvAvjNBdzFkazcHtFi9lZSO1zCpT0F8VonwfSH5Zn
4YH41/xj8UfQNstNYDsRX/Xx2U5ZqiQe8vp0j2V8FrYNaz1N/nYUhX+/f/ae
wEuB68L2WxzDnQ++N94k+AxJ09PTZo6jCtVdX2J+Flq6zIoFnWWQPe5hidb3
WShx427OWJNF9da5Bw8GZiFNpLn7kL8c1vJ7VT4g+AW3ujAoHKfxhmRFTTeB
Hz44wiQefwabUhvfjPTOgsneb5x5B86hTclLC5fPs6BeFyp8lCqPw/40Y3HC
X8IJAT6DPYjMJwNebyDibWdzEU74hvh2n9OrvP9mwbunXbInTQFtPL2Kpt/N
wp88MTk+C0W03f+2Or1jFu55eincFFPCJ2JRqYlfZmFYp1c9ZUYJr+b9lgsh
zn9YCbkp4KyMw8Wj2//UzUK6+pynkL8qMpiE264UzMJufvVg80tqGPBXPZi9
jNAzlx6dyaGO5csav7fRZmHdm78pY/+p4zan0iyxVEJf3LUs0fiL+GXyOeND
8ixcHC1tFadq4s7syZnn/rOwjBDMa6GNK3JnfisbzEIRdYrjTLM2wqSlvo7R
LNzniou+LnYVeYM/cRw1ngWxZ+d5XYOvYuldHikDTYL/2I+UpJmr2JfmYWQC
BP/Q9AJ+Zx0c4ySTWIVmwX9JUxa+6uDfoLGgL4JE/9z+W258RhcbGj5u+nxo
FlbfvwT3ZF0s/6azpZZ3Fl7JXGt4saaL2rmrFmdZZ4HUu/HLQX99XEyr+PV7
fAbkV8/e8J7XR+bZ+4s2szPQtf/B4MgNA6SGCnCqfJ6BbaZDU1nShqgssDoi
Xz8DjyeqmKR6ruPmsd3ap5NmQHvRWeyMpDG6T06dfqI+A4zd+flJcca4405c
fqbGDDTwOfK6rTPBvMV6g5MyM2AsT00duGuCuze7xUfun4FoDx4qCW+h6yae
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
7w9dD/gfMevQLw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
2vvAaEfN+3fZGOm2SuzXm4VVtqP9Ml+y8blJVk+mN01vEs68PETj27KxD0Jn
oc1B4vadr9loLGbXeTp6lnZfy0gGjGej5fv2ugXCLMS+O7P6ZDKb9h5WFv8v
bxbEggw4t3/PxiHpfx+PvZuF+FMmozy/aPUdtOH4r3cW1sYt8mVXs/H165h/
iwOzcDPmruOVv9mYzKA/3U2dhTfgLGu7kY0vdRRov3yzYP4nwvADExG7B36x
7N4zB4m2zclZ/EQk7J40qVOfg+YvlzoKhYiYtftUm7vuHCxc7PlbKULETpk7
F9tuzAFnhaFYoygRLQ/t4hewmAOlI6MmHRJEtDUUy7a7PQc/Pv0T+KFA42Wm
844Bc8BzIVD/nyIRC+h28BmHzIEamTlkx3ki5rF9cx2MmgPXw/G1e5WJ+FDj
koVD0hxkhx2aO6RKxJ4HLvfk0ufgMsiVKukSkU72UU1exRx4FjWOaxkQkVXK
cn2hdg7yDqpyGBkTUcpVel/t8znoDXqvfOsGEZM131cPNs7Bxg99NzszIrL/
GB9dej0Hz/Lvn020JaLhNGHe4cscMLGR26cCiJhxfonp0d85kPE+/Xc5mIg/
LkqWkv/Nwc35BtH1MCJ2FXDxLmydhwijiyYMUUScEqpOjGach5pXnY9ZY4io
MaJjKr5rHign9Zq44omoYsjj2EVj1qyh7wJJRFRo94szYpmHMywWAhIEInpc
kxhJY58H64dzenJPiPj5NllpD+c8xE47B1/IJCL5/iVthYPz0KC3VqNJJOJk
xo3T/jSebfadNXhKRKWekxUe3POwX3Int3kBrZ7YtXTbI/Nw/km0pm0RETsk
m5kcBebBjonT27WEiIpDs/MWNE52yyD7lNH6ucBt/YzGrRSh8bBKIqZXTiVt
HpuHbzrF7Ak1RNRLnApTFJ2HQy+llTPqidgau36zSmweLoq+cC1ooPmH9eyH
1zTdOUUpv7yJiCE6W+V1aXo6w7svL1qJ2HBLz+ed5Dy037u6681rIvrv8WBb
PzkPP0cHzvR2ELEpiqK9TGM+LXP7oU4iXlV49cT7xDxo1M9kULuJuOnj+eoe
TXcTdur59oGIgo2Rhs0y85CdsLr172ciet8RPJQiOw9dW31ObR8g4ojp0C/Z
0/Ow5rDDas8wEU8vOiVlS8+D0HBU0sFRIrpyL9/5R5t/RW1/O/8EEaXX5mRb
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
P2s=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"Ground-Rydberg Rabi Oscillation, T=\\!\\(\\*FormBox[\\\"100\\\", \
TraditionalForm]\\)\[Mu]K\"", 
         StringForm["Ground-Rydberg Rabi Oscillation, T=``\[Mu]K", 100], 
         Editable -> False], FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999981632975}}, {{0, 4999.175718266285}, {0., 
        0.9999999981632975}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"e\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.819996689346566*^9, 3.8199967434237094`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"leg", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
          RowBox[{
           RowBox[{"TTable", "[", 
            RowBox[{"[", "#", "]"}], "]"}], 
           RowBox[{"(", "1*^6", ")"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"freqScanFitList", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"",
             "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"leg", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<`` \[Mu]K\>\"", ",", 
          RowBox[{
           RowBox[{"TTable", "[", 
            RowBox[{"[", "#", "]"}], "]"}], 
           RowBox[{"(", "1*^6", ")"}]}]}], "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "TTable", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"solng", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"], "&"}], ",", 
          RowBox[{"Length", "[", "solng", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Two-photon pulse duration [ns]\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.819813275851759*^9, 3.819813410386195*^9}, 
   3.819813454354553*^9, {3.8198135239072404`*^9, 3.8198135508270884`*^9}, {
   3.8198135815099916`*^9, 3.8198136276734962`*^9}, {3.8199841269564257`*^9, 
   3.819984170325721*^9}, {3.8199842303571825`*^9, 3.819984233385373*^9}, {
   3.8199959594528475`*^9, 3.819995961865506*^9}, {3.819996009351425*^9, 
   3.8199960214755535`*^9}, {3.8199963737985277`*^9, 3.81999639625327*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVV3c81e8XVwmVSpIkSRlJRirScg6SUShlVii7KCNJKXuP7D3iXnKvdblG
ZBMqCn2VkJXNJZIk8fv8/rqv9+s8zznv91n3+Ry4fV/bfD0TExM3MxPT/3+N
Di/2l1TxQlPYhrW1tVlwnfklHOy/BHoxSuKTi7MQJumfpevPhu8yPqe+nJ6F
ucLNqcctOFH2FP/PQwuzkKDZPnHGnweD4c1g4eosKE3GnjhP5UcZQSb3+N+z
sKiYDyIWB9HNxfwL/9QsvAvjNBdzFkazcHtFi9lZSO1zCpT0F8VonwfSH5Zn
4YH41/xj8UfQNstNYDsRX/Xx2U5ZqiQe8vp0j2V8FrYNaz1N/nYUhX+/f/ae
wEuB68L2WxzDnQ++N94k+AxJ09PTZo6jCtVdX2J+Flq6zIoFnWWQPe5hidb3
WShx427OWJNF9da5Bw8GZiFNpLn7kL8c1vJ7VT4g+AW3ujAoHKfxhmRFTTeB
Hz44wiQefwabUhvfjPTOgsneb5x5B86hTclLC5fPs6BeFyp8lCqPw/40Y3HC
X8IJAT6DPYjMJwNebyDibWdzEU74hvh2n9OrvP9mwbunXbInTQFtPL2Kpt/N
wp88MTk+C0W03f+2Or1jFu55eincFFPCJ2JRqYlfZmFYp1c9ZUYJr+b9lgsh
zn9YCbkp4KyMw8Wj2//UzUK6+pynkL8qMpiE264UzMJufvVg80tqGPBXPZi9
jNAzlx6dyaGO5csav7fRZmHdm78pY/+p4zan0iyxVEJf3LUs0fiL+GXyOeND
8ixcHC1tFadq4s7syZnn/rOwjBDMa6GNK3JnfisbzEIRdYrjTLM2wqSlvo7R
LNzniou+LnYVeYM/cRw1ngWxZ+d5XYOvYuldHikDTYL/2I+UpJmr2JfmYWQC
BP/Q9AJ+Zx0c4ySTWIVmwX9JUxa+6uDfoLGgL4JE/9z+W258RhcbGj5u+nxo
FlbfvwT3ZF0s/6azpZZ3Fl7JXGt4saaL2rmrFmdZZ4HUu/HLQX99XEyr+PV7
fAbkV8/e8J7XR+bZ+4s2szPQtf/B4MgNA6SGCnCqfJ6BbaZDU1nShqgssDoi
Xz8DjyeqmKR6ruPmsd3ap5NmQHvRWeyMpDG6T06dfqI+A4zd+flJcca4405c
fqbGDDTwOfK6rTPBvMV6g5MyM2AsT00duGuCuze7xUfun4FoDx4qCW+h6yae
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999981867437}}, {{0, 4999.175718266285}, {0., 
        0.9999999981867437}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 50], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 100], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"150\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 150], Editable -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819813363308201*^9, 3.819813458082431*^9, 
  3.8198135987210474`*^9, 3.8198136548229604`*^9, 3.819815622519642*^9, 
  3.8198160672575502`*^9, 3.819832848089136*^9, 3.819837924401493*^9, 
  3.819848412982501*^9, 3.8198515810447645`*^9, 3.8198523310353403`*^9, 
  3.8199842376250734`*^9, 3.8199905341823864`*^9, 3.819992985521444*^9, 
  3.8199932492306757`*^9, 3.8199936316110697`*^9, 3.8199936966558704`*^9, 
  3.8199949755058727`*^9, 3.8199959613228493`*^9, 3.8199963994043713`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"result", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819995559175569*^9, 3.8199955864281244`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
ChrU+okndXrCF9tnCzXKFORxMe4X2GkH4tX+6s1qFBxZJ7uWaqcG1tvehnZq
UvB3S/zxhR0mcCh7d26/DgVXvWzQ5A9zh+KF6ZYRPQpG3l9/rvacB7THHPsx
aUjBiGHfZMJaC/jx31/5HyYUHHomcVD1qzJIW6X4/jWnoOn99clb9lqBY8W6
dD5LChr5tgSwxz3gmNTlOiEbCp6/tOX9/jhXIGdIfpa0p+Cv6+7Td/YbwNPf
5C0KThT8eSpPsaRJC/5EqbhquVLww5tPV91DHUC+7/YZYw8KZrx46Dpg6Anu
YHTb2puCiV13PpaR7eEUp3nU1Y+C+ibbvTZGaQFDwl40IJCC494iFq+phtCX
2mOzM4SC1m3V3rMJrrD0w/f4/nAKHqswpav4eoBKxEjZ8Z0UPCoY859VjiX4
Pt01fDaagvNr9a5Xj6nCOZMva7P2UNCvW3p/cKEF3Cw7YnY1loL800+lP/x0
h8GNiweIB7n4DlwfnX/uCrznzxNZ8RR0CPhu9TXCGLRm+Puqj1LwxtCutIP2
WhAcks9z/wQFO6+O2Nja2UF6p4ReRyIFV/oQpsyueUCVASn6eRIFA5ofBVVf
dYARqtL112cpmDx0yGl3rQ7wC1d0TFzg6smc/XiwVx/0zxgsfEujYKHx0OCJ
aGeImGpSW8yg4BXVoTE1AQ/ICrANXZVNwSmfjBfHX1hB7aPuHME8CiofOyJm
clIDxnf4tGy+TEHvyKDpYXkEQdKr7/LXKHjf1tXCXNAdTAWi5DWLKPh5O21D
/3dX2J342ceohII3B54KJm0wg/zJ+DQrIgVVRN7voHtpQZPPfK0LhYJx02cd
Q5Nt4NODs5/86BRsSRj3kpxxBzGtNVsimRRssHsvHWzjCJYluS6xHK6+HYRS
cpd0YT+/+Jljtyi40yTrQFaxHlw/XlqRXElBd7VvE+xsR2gdVxjNqOHG+7up
+Xi1O8x4lItcqeXiEalUKz1mDZL39WxK71Gwemd86VClFtiqNR5jNnHxaeTb
vJ3fHOILrcuqWii4OjVRMum4KxBWdQ01tlKw8pJ28s3XrtBx2Gtt+2MK2ros
c7gQDTD7dti0r5OCV0VidubUa4GMa+SBV91cff13KXLFGmtwvvex9EMvBSkV
GdmfuP3iuFLcs5nnXH0Xup/pqnUE8pW5FQsDXPwmWBdokly9r0jWXTlMQc4+
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
1i+Xzqk89wC7ErXfyhls3H35xO4PK8Tgf55NTRM=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 
      Rational[56000000000000000, 11201846695523]}, {0., 
     0.002339802186091545}}, {{0, 4999.175718266285}, {0., 
     0.002339802186091545}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8199955669736814`*^9, 3.819995586924203*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AtomPositionSample", "[", "T", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.019772602149461`*^-6"}], ",", "8.386887955327306`*^-7", 
   ",", 
   RowBox[{"-", "0.00001505228471905297`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.819993773971568*^9, 3.819993807109626*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "fname", "=", 
     "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_scanfit_noRIN_\
correct_frequency_bigbeams_0_50_100_uK.png\>\""}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Export", "[", 
   RowBox[{"fname", ",", "plt"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8198137039247265`*^9, 3.819813730605784*^9}, {
   3.8198160476916523`*^9, 3.819816074977964*^9}, 3.81983713633145*^9, {
   3.8198373641667404`*^9, 3.81983738860429*^9}, {3.8198379852766256`*^9, 
   3.81983801435382*^9}, {3.8198516796377726`*^9, 3.81985167974338*^9}, 
   3.8198523856136446`*^9, 3.8199835969845734`*^9, {3.8199841038822374`*^9, 
   3.8199841067860084`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_groundrydberg_Rabi_oscillation_scanfit_\
noRIN_correct_frequency_0_50_100_uK.png\"\>"], "Output",
 CellChangeTimes->{3.8198160682800293`*^9, 3.819837169138708*^9, 
  3.8198379892478547`*^9, 3.8198523873710327`*^9}]
}, Open  ]],

Cell["\<\
Results of this might contradict stated temperature for earlier good Rb \
ground-Rydberg Rabi oscillations.\
\>", "Text",
 CellChangeTimes->{{3.8198524886724606`*^9, 3.8198525361717587`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run - positional error", "Subsection",
 CellChangeTimes->{{3.8198162061352124`*^9, 3.819816213907926*^9}, {
  3.819816295509672*^9, 3.819816295846021*^9}}],

Cell["\<\
Todo. use the frequency from the 0K frequency scan for the two-photon \
resonance, but do Rabi oscillations at 75 K stepping the 480 beam a varied \
amount in y for each oscillation. Not trivial-- need to make a function \
InitializedBeamPosDependentQuantities to move the beams and re-define stuff.\
\>", "Text",
 CellChangeTimes->{{3.819816300123455*^9, 3.8198163007715673`*^9}, {
   3.8198164043786287`*^9, 3.81981651969147*^9}, 3.8198250682038336`*^9, {
   3.819852694071585*^9, 3.819852741050108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"3", "*", "2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "fTable", " ", "and", " ", "TTable", " ", "should", " ", "be", " ", 
     "same", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y480Table", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10", ",", "100", ",", "1000"}], "}"}], "/", 
      RowBox[{"(", "1*^9", ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"480", " ", "beam", " ", "displacement"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", " ", "=", " ", "75*^6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"useRIN", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", "False"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "y480Table", "]"}], "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"y480", "=", 
            RowBox[{"y480Table", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"avgsNum", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", ",", 
              "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "simulate", " ", "beam", " ", "misalignment", " ", "by", " ", 
             "adding", " ", "an", " ", "offset", " ", "to", " ", "atom", " ", 
             "position", " ", "on", " ", "either", " ", "the", " ", "params", 
             " ", "passed", " ", "to", " ", "the", " ", "first", " ", "or", 
             " ", "second", " ", "photon", " ", "matrix", " ", "elements"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
              RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
              RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r1", "[", "t_", "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"vx", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"y", "+", 
               RowBox[{"vy", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"z", "+", 
               RowBox[{"vz", " ", 
                RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r2", "[", "t_", "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"vx", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"y", "+", 
               RowBox[{"vy", " ", 
                RowBox[{"t", "/", "scl"}]}], "+", "y480"}], ",", 
              RowBox[{"z", "+", 
               RowBox[{"vz", " ", 
                RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"args1", "[", "t_", "]"}], ":=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"r1", "[", "t", "]"}], ",", 
              RowBox[{"{", "t", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"args2", "[", "t_", "]"}], ":=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"r2", "[", "t", "]"}], ",", 
              RowBox[{"{", "t", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"soln", " ", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"avgstep", "=", "1"}], ",", 
             RowBox[{"avgstep", "<", 
              RowBox[{"avgsNum", "+", "1"}]}], ",", 
             RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "on", " ", "each", " ", "frequency", " ", "step", " ", "need", 
               " ", "to", " ", "recalculate", " ", "the", " ", "RIN", " ", 
               "time", " ", "series", " ", "and", " ", "parameters", " ", 
               "that", " ", "depend", " ", "on", " ", "it"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "InitializeRINDependentQuantities", "[", "useRIN", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Haf", "[", "t_", "]"}], ":=", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", GridBox[{
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args1", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    "0"},
                   {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args1", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args2", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                  }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
               RowBox[{"BuildSchroedingerSystem", "[", 
                RowBox[{
                 RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], ";"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"result", "=", " ", 
               RowBox[{"Timing", "[", 
                RowBox[{"First", "@", 
                 RowBox[{"NDSolve", "[", 
                  RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"time", " ", "+=", " ", 
               RowBox[{"result", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"soln", "+=", 
               RowBox[{
                RowBox[{
                 RowBox[{"result", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", "avgsNum"}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", "soln"}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step ``/`` in `` mins\>\"", ",", "i", ",", 
              RowBox[{"Length", "[", "TTable", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198027179663506`*^9, 3.819802727087193*^9}, {3.819802999443404*^9, 
   3.819803212436143*^9}, {3.8198120929386597`*^9, 3.8198120998933706`*^9}, {
   3.819812139100168*^9, 3.819812153910636*^9}, {3.819812187574404*^9, 
   3.8198123682048874`*^9}, 3.8198124212242584`*^9, {3.8198124579578257`*^9, 
   3.819812496228352*^9}, {3.819812906939867*^9, 3.81981290749551*^9}, {
   3.8198129922844114`*^9, 3.8198130629379635`*^9}, {3.8198131253967447`*^9, 
   3.8198131321322527`*^9}, {3.819825182485694*^9, 3.81982527712241*^9}, {
   3.819825309582905*^9, 3.819825405495739*^9}, {3.8198256599739227`*^9, 
   3.819825666950266*^9}, {3.819825874831174*^9, 3.81982598773234*^9}, {
   3.8198260994169316`*^9, 3.819826105790785*^9}, {3.8198261367599974`*^9, 
   3.8198262546018133`*^9}, {3.8198525812396746`*^9, 3.819852644258773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0026\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 1, 3, 
   NumberForm[0.0026041666666666665`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852583477241*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0023\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 2, 3, 
   NumberForm[0.00234375, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.8198525837544775`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0029\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 3, 3, 
   NumberForm[0.002864583333333333, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852584017575*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0036\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 4, 3, 
   NumberForm[0.0036458333333333334`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.8198525843097863`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \\!\\(\\*RowBox[{\\\"\\\\\\\"0.016\\\\\
\\\"\\\"}]\\) mins\"\>",
  StringForm["Total run time `` mins", 
   NumberForm[0.01614583333333333, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852584315771*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"leg", "=", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
         RowBox[{
          RowBox[{"TTable", "[", 
           RowBox[{"[", "#", "]"}], "]"}], 
          RowBox[{"(", "1*^6", ")"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"freqScanFitList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
      RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"solnList", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"], "&"}], ",", 
       RowBox[{"Length", "[", "solnList", "]"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Two-photon pulse duration [ns]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.819813275851759*^9, 3.819813410386195*^9}, 
   3.819813454354553*^9, {3.8198135239072404`*^9, 3.8198135508270884`*^9}, {
   3.8198135815099916`*^9, 3.8198136276734962`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MPIa/geD75SC
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999985727919}}, {{0, 4999.175718266285}, {0., 
        0.9999999985727919}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.216587457411112`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 0, $CellContext`\[Mu] -> -14.216587457411112`], 
        Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.229909574326399`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 50, $CellContext`\[Mu] -> -14.229909574326399`], 
        Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.261490199333716`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 100, $CellContext`\[Mu] -> -14.261490199333716`],
         Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819813363308201*^9, 3.819813458082431*^9, 
  3.8198135987210474`*^9, 3.8198136548229604`*^9, 3.819815622519642*^9, 
  3.8198160672575502`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "fname", "=", 
    "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_scanfit_0_50_100_uK.\
png\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"fname", ",", "plt"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8198137039247265`*^9, 3.819813730605784*^9}, {
  3.8198160476916523`*^9, 3.819816074977964*^9}, {3.8199835812244883`*^9, 
  3.8199835814474254`*^9}},
 EmphasizeSyntaxErrors->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc testing", "Section",
 CellChangeTimes->{{3.8194568337169476`*^9, 3.8194568379666376`*^9}}],

Cell[CellGroupData[{

Cell["RIN data to time series", "Subsubsection",
 CellChangeTimes->{{3.819456946258193*^9, 3.819456956348152*^9}, 
   3.8194574837036724`*^9, {3.819458376311167*^9, 3.8194583869456005`*^9}}],

Cell["780A RIN data, post-noise eater", "Text",
 CellChangeTimes->{{3.8194592742753935`*^9, 3.8194592863487315`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"VDC", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"contents", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"header", " ", "=", 
   RowBox[{"contents", "[", 
    RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"HzPts", ",", "dBVpkPts"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"contents", "[", 
     RowBox[{"[", 
      RowBox[{"15", ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dBVpkPts", "-=", 
   RowBox[{"10", 
    RowBox[{"Log10", "[", "VDC", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RINData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"HzPts", ",", "dBVpkPts"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8194571026276455`*^9, 3.8194571612992177`*^9}, {
  3.819457309573141*^9, 3.8194573208999853`*^9}, {3.819457486352996*^9, 
  3.8194575112408476`*^9}, {3.819457633214981*^9, 3.81945763750745*^9}, {
  3.8194578251097155`*^9, 3.819457841580284*^9}, {3.8194578959781523`*^9, 
  3.819458050021988*^9}, {3.8194580975524654`*^9, 3.819458151401802*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"fdata", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819457645150489*^9, 3.819457647510519*^9}, {
  3.8194577473811693`*^9, 3.8194578526985407`*^9}, {3.819457946273595*^9, 
  3.819457948999111*^9}, {3.819458322204796*^9, 3.819458338341813*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 102400.}, {-75.4418, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.819457512885433*^9, 3.819457572779807*^9, 3.819457640352894*^9, {
   3.819457752190879*^9, 3.819457811757634*^9}, 3.819457853260895*^9, 
   3.8194581893216295`*^9, {3.8194583271683702`*^9, 3.819458338809125*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeRIN", "[", "t_", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dBVpkPts", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"HzPts", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "t"}], "+", 
            RowBox[{"RandomReal", "[", "]"}]}], ")"}]}], "]"}]}], "&"}], ",", 
      RowBox[{"Length", "[", "dBVpkPts", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.819458368623186*^9, 3.8194583695414534`*^9}, {
  3.8194584267052593`*^9, 3.819458488630851*^9}, {3.819458703065729*^9, 
  3.819458843010213*^9}, {3.8194592286536636`*^9, 3.819459231696415*^9}}],

Cell[BoxData[
 RowBox[{"timeRIN", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.8194589271098003`*^9, 3.8194589296698475`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{"0.12732698340348503`", "\[VeryThinSpace]", "+", 
   RowBox[{"0.2240973466854182`", " ", "\[ImaginaryI]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8194589638280244`*^9, 3.8194589762592344`*^9}}],

Cell[BoxData["0.12732698340348503`"], "Output",
 CellChangeTimes->{{3.819458968488312*^9, 3.8194589768434343`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"timeRIN", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "0.0001"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8194588602065496`*^9, 3.8194588847845573`*^9}, {
   3.819458940048662*^9, 3.819458979183031*^9}, 3.8194590763582144`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c4l+8X/hgNQiKyIxVJUYqI8yCVCN+QVFJGEUIRSSKblJmdHbL35rF3
MrL33nvvn99f73Wu57nOfZ/zvuc9982haaT4kphAIIhSEAj/f9r8bbSzXf4i
Rpv+MSDp5R8kcN+tyNr8BZi/WpObPOuDPaWc2p+aG4OQctS4CZSho1rVf9fT
PoBXnizf69YoVFxMOnLP3AYubk8T1z4rwjsK5wZO/bAHh1o1ijfYDt/ov90z
muYM5qtPG8tEMDY1fNWR3ugGH6ofnz11pAx3fL41JW7uAe+7ujZi50qRWaXS
BJejF3zLrZD8dCcVn6TSHqP64QO0z6/2Xy0KR2kPTUdWI33BPDSP8RLjR/zf
T/uhnjR/cPcx73FQLEBzIz4DZSWB4Lrk9ND/BcZuvL/64hqD4cSha49mbpQh
HtPMHs/+EHAIoDyveLoGj/RqvhE1DwN2xdLclzZ5OJ1Ifyb5czicXMnydiat
QLbnTPQ5HSOg8S53GElJDHpwz3LK91sk9AVofLPYckXsb+xek/+IgkBzMhne
kWw87/F1wir4F8STjPn5VpThogxvncXIaGg8y910940V/tYRNKYdHwNlbTxf
25ZTkNpO5MuOtFiwiOc52yKaiC6yJ4zI5v2GeMNvT3afZqKtWxlauCQOiBN6
390U0kE1OgVDV2viYaw0uTdWJQv5fy3XiG5MgIYsWTY7d4x0kusHGDsSwdWW
KEYpMBcLtvx7/q0/CagWgiOy0rPRofWePsJ4MjSw+8XPELKw3relyyLmKaB0
vTysmiQTK4aazS1vpYDk8o0ax38VWDh1KzHxcypYlcv7Y5cyxF72+Y0OcRq8
bf32i429Ch9tJb7E4ZgGxAPLhH7vdLQw5jjTRZYOXdp920m+H1D7BnmCz7d0
EJy+Njrz8AUqInfXlz+RAaVC4fmnbPJxNAvtxaM//h8Tn4hbLsLfL/tNlTBk
gk3tm5e/pLzxe3HmOMvgTHAghRfq0UFITTH09XX2LNBVb2SsHs1GUtqcF+Yj
s6BfhJQjTysH85rFTMRyZQO3O9cv9vwSROt8MVYzPhvmQKO7QfQ12gpI1mHh
y4E/cz/3jTtj8FC8AFdbWg6wf7XcvUtVhGoLs8fcBXPh5SMiV1aeXJT692b0
vbxcOKlBUizCE4j9B/FLEsiDAYsyb0mZdGSzfOtcYUkePN1IyO5fzsO6h6pH
zG7nww/vi9OpHdlY4dT9KP6afGgLZE/F+xlY8EKj1tT9Arj/o59lVyEfs91U
5oxqLAAFn0WpQJ5KfFiuY+iZciFE7CUUie0W41l1tYhTHYVQGv6leKDbAv8z
HtBoeloEVwVY77GkZuMCW22Or/1FEBnEfv+1ZSSK8pkYkNLCQJIn2/n0txn+
Gm0QtjeGIXi2otz7aTEWVtvgU7teDM1DbyVG+FPxpZd5x4XNi2Ev6umFTdl8
zEL96HJYUTFs+cy/nhdPwxT5y/ePHC4BrXBsEBLth7dfeugbypWARv9s9NyS
B5qivuTa6lMCzjRVHbVP81Fnfk2saE8JFMXrDZ1rsEPVr15VRXKWwo3rLhLP
rnnj7BMkY+T6pfCPS4W4k5CBogtCSd+llYL+XO7uRnsU+qEjytm5WQqfhKSW
3IeysT1Np4S4RBnwjwv9bh/IQiaF71/EOJfBq5OsCQ5N4VhTl8aaqrEM2qVk
lcUb49ED2uSf70+VA0nFHlnF33QsXiRb0KNeDvdUIrpWJEwQ3+uJrlvR5VBN
yOdZiwzDbCcdNuNmy2Etp39T/nEaosQcDDTXK+DE8nPvwFlPvPO6SNDiUwVE
1AvPCg8+QtMnnz4cKKuAgcKo721pabgLr5vcPVYJo+TSnDfVM3CNno9XkmIl
KMxmkN4jL8c5dFdS6QIr4a2wzBM74nAUU/zn76fBSjCJN/VQtS/Bvvp6c8Pc
VaDH9Y740FYicqA/QilrXAUi+go3H3qkIdOSyItp2VXwiNM/rVyyAmkZiMsw
7lfBPK2+Qc7vFKR4qlfX5k41YIf6nRlVRyxRauE0/q0aYg/JOQlPlWD+N/TR
8q3VcOMn0emrbBnoNEN6eSZLDazpdrW48VUjqjKFYRbtGkiZPn/7vpYX3n0z
Q2QfXwNPX++bv+4txzMMLuzTSzVQbijVpx0eg7rLziFFkVoIY/pu+oDmF6o1
LH2W+6UWZo8QeJh+VeBcxuef2GtqYc27+r2ZZRmKLd8OdKKugx+gHdm0HIX8
jPxz5x7VwX+3EyabHGOwI9P1joehdVD6M+o9CVs+fl/RtFYwVgdvcsc+1JGV
IW1jQ7qzl+shuT7mmL1NGlZiPnbt6/t6aFRYVtCIikOSlTGKSwX1kGbggk7l
O+Irb6XePib9Ax1vVSNs5WsQO8uge7HsHwgofJe47BaBjldZJXF5/4G2DHfD
vJVfaO8t05/vXX+gmCfsbqVxMJplyZ5e5WgAG0Nv15SlZNxTpUT+7HUD6NP+
cH/okIvq3i1wl6c0gFmYpvDvsDcoj/Xb3YsbDWD54puwHN1H9Lv6wisv9BdM
Qg4bEtV7IH+TSvtNx78gELjRnOZejZzYtCJfNPwF3Y82Dy7RROP8kf2BYfJG
4NLUtM4L/Yyvisgb+11uhFVny7rzihjFuQfvyyg2Qst9JrmjVOXozOjU9733
jbA3JCThcCoLB4gIs6UFNAKhrcD5jGAxpvZwSnxZ2AjNHyrElqYTkPNoqyjj
YCNMll0RSh9OwYSbZ+vrSZuAJWg13pTVGZt7vHtqw90EhMDNk0qzZdiUdFe8
7V4TvNqw9bwrk4zffXA6z6vfBDT+XwMCbcqR0cwJClu3JlhJzFqfrC5DBi+C
F9sTm0BFfbJI2gMjvX/n2y/9bYI+sX/0ugnFWEc6tcBuoQnUonJLnYtLsXbB
zYjOE82gaEynmTRegjT5K534BJrBnFf5s5hQLH4R9d8bB+VmuDBbwflbKAE9
Y+hW7H7fDHP0N28XKBbgJ24vb1zxawYRMq8qYc1IpEpYYHXKaYZZ0ruUnTf8
8UPTjyS9nc2QUvvFKUanACtOkE5e3W6GT32B14rDI/B/au4NziwtYOdvosB8
OAHLNTJm9Im1wNevxvb+ovZIRioq4NrzFmj3u0euSZyPpXMuW7vatIClitpI
nUcevs2bqz0Q3gJFHK+3ZR+WIsmwWzKCZS1w/B5HloIbxuInG/jcRlpgLurF
LcmxCiTmrEo3dOgfGP8TIdVYyMAiO0NbQlz/4FeDSp9DcTy6Yfxm4Jv0PygT
NNc6/DcJC46sVwy//gfjDuepwiTysYCqbbzw13/Qmm0rppgVh/nrKTzdE/6B
6wZ7yPpyEbos7mc2+ucfjArJz91orUAXMzjUbs7/AwUPx0EDqSTEzZ0g4Und
Cg0zn05n7nrh88GCXONXWsH3rMeNmqlazEldQiGm1Ao3HReC9ue8MLu97JKX
aSvw7m+8PTYYgdk2WtsnfrSCVq52ucVAMWY2eFEI2a1w6tvJrmt75ZhhYCrC
p6MVtq59G6BciUH0yu+dpzZbYdZMMjFr1gnRVu+/EWdug/7no2miJcGIWtRV
yVe0DbqHHXgnHlRhqpSTwjPP2oB3RPo/VfYiRHE2lE3Sug00wutant1LRmT+
F0j9w9pgJtXiWDPlZXyYImNytqQNJto2A9syshCpDfy9NdwG+htxeVOKnoho
pTojgLQdrubKpSe6BKI9HaXA+XPtcLamJyMrKwPvdPda3757cH6FXWzOuwxt
Kui+DNJtByLfTBt0NQ2tlS3JLLq0g8OIPrd/WTJeEbLivxvfDoKmXvQ3SjPR
YvwR+p/17UCstc4n8z0az5322l6abYcG1nh+lWfZeMabZVD6eAcMqs3avUz1
QZNHYipD+DvAM2Ogx1ckB41ZXklYedAB7yhO3yecjEUj8/meMiYdYERW86q9
2AQPad0xD/PpAANtSfEzd4twf3uj2lpmB9R8O0Hg1HJGPbJPJe+3d4CUnb05
RVXqwf4Z5YrY6IBFE5qko50/ULuAMeUGYyc4WXUlCY4Vo38xW0tyNzuhNmzo
09CNLNTM7NARqdYJJP3lMQKrifiv+/GiTatOsLPlOustkI8+Oo+JxoZ0QvSD
kpCPTMX4/JfCfBXcCbL7Z9MoqTBqsvAROTTQCfGupf+ZkETjT+/0c9MJXWBz
aujceX5jzKUveUOTowuMRlLefVEqRM1ajNnUkl1gH571QmvUF1upLVzHml1w
ei9R4lEFxtwPqzLe2HXB30MnV763F+IWuRABlqguYOi7ptZ2PQ19vvM+rba8
Cx5ZnRNKc/+FedD9KxajXbCWdjSoxjQWtwpxpnAd7oaifj7ZybQqZMO/dbnt
fDf4SrQEMtqmYN4LTYn2d7th+a6J6ucGjNs5YnkFdLtBQnFor/1zILZlso4f
dO6GlV5RWpODebpEq8Lj8bsburzXTw/T5eCOY5d+Q203aHoco5BoSUF2pKTc
s1PdoPLYVU70Tja6vNsVHXSsBxgb5eQbXHNw52rqORneHmhNYgnyZ85D9nPO
URv3e2BMXrVIjj8e8Y8/54x50wOOC4YGT7zzcXe/YMTD7z3wiWZX9HHvL+zY
QclBmtwDfz4qvygRKkVXm0ZC0/72wHuzsec2WqW4tyafTWOhB7hDfjd1vyrF
zqVeP4+f6IUAxhHOQ5J5SCD/NUvRlV4IfsaPYzZScV+6eJCBYi/cuikhX0QV
iVwSTjExm/SCYIzIsP1aGb72a86/xrsXuNjch95+9Eb9PytOfcjoBdHjr83m
iEuxq2+w7/nWXtBcWQrxYwhCgu4mdK2rvRCVN/KEuTkFDTrJ+NjR98Fs2scn
jmsR2M2Gg/aqUB9ceNY1pbPzC9+w2PAceNQHeyRytxsMy/Hw27/U7h/6IFKa
I53TE6PvetHuYgF98KW+ilIzOhwJa1lRzeT2Qf/JMEh2KkcjT5W/BXb1AUFm
N1GxNRq5K1+kuLfdBxY36ORVXpdjETnir+vM/ZDBZb7J1ByGR293kkWL9oPp
8bo6bT5N5AEpzsrP+oHfL/nX+r1SJCrkdITkcz90/ojqNrpQjsf51B1TQ/rh
CAd+qtfgi7y4rx96gfshPPnfHb1fWQg4KOypBvpBT7NMipo4Fa24vf2iThgA
9pFDNenVmViGrLc4k3oA8nOrP3sFJ+EwB2kCJccAyOs760bOF+NVogykfWUA
Gmq7GVc2rJHM59PW+RIDILzZ1fSMLAuFbbkW0SgOwOO2loEz5LV4zWxt97Xm
APjcu59OWE7CsssaYiXvBsCwiqBvRpaHwoz+fGKwG4AB9bU3N/cxWpu+UWDk
PQCxnnT8cZuK6L5u1HZl5ACI27XLHWowQREjx2+yZQxAD+udnnrDWrzxwvLj
+/IDfp8+iM1hTyTXO5Zb/28ArvM3XiKxLsZniMlcHMcGoJPBPuxprRteO39R
VXxjAL56MIUMclegWlk5ri2yQRi7+M7iXXg+CjE2WktnHoSPIu2XWlh/4Xc/
PCveXBqESQnnFlHtQnw3L92HCw0Ch8SFEoWbBZilv1Vr8L9BIPcPq4jdrEIL
JBtXgzQHIS1A7FeudQkq52Yifmg6CBV+Sn0pz7xQgJxoE5XjIMglP+eqc8rC
hu/Uw6r9BkH29IkurztRWNLPxsj29yDIZPGeo1p3RvQFESCaPwjHOsUXe6SS
0fRAOeVa/SDc+fzq2HCrNy4+NN6T3DcIF/vJ6DqVU5EPD1nC64VBcC0Jzmtg
yUe6ChctOYmHIEeyMU4hOh2LmcrJ9NIOgXeL/XMdxgJME2DE6HduCJYJBX6/
B4rRWKHnxH9CQ5BWoUF8vyEM5Q2lZ5PfG4LE1t1Fdz9v9P1Im2P5kyGYpnFT
YxosxZq8Gw8/GwxB4ImapraENCz0gOncjc9DsLSWRxBuc0cUZqIri+5D8D6X
kVOdOA8NBKqXxYcPAa/2+8DH3RU4A9t4vUwfAhaVsSzL2WzsPBKhcbpiCA5f
HbbVe1OH1Mgq+DvbhoBRnr1C5FMaunJ5fN9rYghuR3JZKPzMxYeVyP7e3xoC
d76gUd7D9bjL/GLIYYphEIqWeXgksAQnBcu9KWYdhqnRv5c/MQZjuxIj0Y98
w2CqmZLFI1OOVMc8j12TGIaTZBO6YlY5iPdYRtes4jDonPJQH+esxgT+tt8x
2sOQL0ejyU1ZgP8pb3zQMBuGpIBoi46aLBRrwSTN7DwMtQ8/OU1rhCKrENFT
rQHD8PTedvPhmN9IsUx97Hv8MMyFD3nWeBej8xM2mdKFw/Ah4sI/zw+laIsi
0p747zBo7vHRpQvkoYYrFUoFA8PwiHDS3f9oLopQGT9jtjQMot4VaaahYdjc
kmyJj3QEcFRY9iFJe3Q/7GLJJN0IyOVmMJEZ5GL2CjmPSK4RoDE7zfdwJQqv
TBo9fyY8App/5NsiSX6hGiqvy6dkR6Aydz7fnawAhQhk7DaqjYCWdEPqMdso
/E61rd7VcARGMgMyW35/QXesNoKkbEZAXafyfWCVE2aOYNLf8xwB6rsKT9Xt
o/FCpahITuQICGRsPWoQCcLl0+pk7zJHwNPi2PPd9ynIn/pLx8WqEbDmlAgi
j83Cb65Hxox2jECGI6PUkngqknxSYRY6NQL69yzPGD4twvTW47cf74yAUFbM
h2dJwXgqkoyOlmoUvD8lTjRc9UBF1RdH6k+PgpPyiEDhn0LkNSuX7nhlFOqU
RI1p/dywDo2xrfitUagXtP0c0f4Rf76T8qlOaRTeqchNCtxJxr4fF8xUtEfh
iY/poQY2jBKT+N8Omo5C05GQ8U8bB/M6ZKxv4DAKPFq+XzfOZqIe+tSX6z9G
gZxbsO+QWRRelll8bhs9Cvp+bHH28bmY3PrKE8rsUSjgiLJ9fNUXn0l/q+xf
NQonSopFblwtRcLjqfKcHaOgqBp/ey67Av/HvCSdNHHAl2DkbGXtdTCfV28J
b47Cm7TTRU2iWcja7p1YOdkYxLO1Z/BwRWPf7DQhBaYxkPJ//a8roRQnTS9d
6eIZg/WShic3hapxxWkB3pc3xyCnu4i/7GcZ7lEyOb8ge3DfR8xK7AB/xSmd
3VJtDMi5dkJGuSPwsYJlpsNvxkBs8EzsdnIeOrMgQOdpNQZzTP7PliYSkchZ
0+Ms38fgJPurRzOrJeiBagZZTMgYTLdwK4oJliNdtxWSq8ljEPTnVg0OTcU2
xdf2CvAYrJERVLlLvZHfiunG3cYxIKajeV9JSMNJ3JlLzQNj8C39YeTCwxRc
qbY682xxDLbYNDcp8gpQr8f18QmicXhFclG5IOY3Xil/P2hCMw6V9Iln1qO/
IIrNzO69M+PQ2lbY+4QjFnNeWmt1ERgHPdlj9eYWuVhEQ7DxpNQ4kNPKexxd
xkjxh1ltqPI49DIynGHT+on1arLKeV6Og+qmmPbAw2z0ZXetKPP9OJT589w7
xxiJ/a8I5Yo7HuRXTnDMXc/CKS/N0+t8xyHnMk1PPapAVQHZiSox40DT93W7
TCET9/1ZjxnMHgeH8vLVl26VeI3oRoRB9Tic8+HRznJKx5SCH4LXO8Yhf/26
jpB2JD6rl+NrOzkO8rQ1wfxStkg0ZMODcmscmhLciZ3Uk7FS842v/uQT8HXv
k8Rc/C2sd9jCgZN5AuTm8YJudAm2Fcm1Tro4AQopnx/d8c5FAYabFsKiE8Cn
7CIw2O6OUiKETcvvT8AYd+RUjcFzVN1mYajwbAJoyCOcxUnS8QB5nm7XmwmI
7O0/+/qyIVqHLc2XnydAP37KTeedN6IyEXm28H0CpCNfUGrOpuPzMR8fWYZO
wNWc/UxHi1gk1p334HDKBDgmWhBeB8dh5ePbsp7FEyA+Lstz1/YzMrh18w5L
0wRc+q7CuXHsN7YztxSPGZyAG3/+HREITkeB8fkiV5cmgFvFbDshsBKn9W9f
KySeBIqlEq+bLYmohlaUT5p2EjauGNuEJzrhgbufLrRwTkI3SesVUT9HvGFZ
wKl+bRKesz15r6UdiI+n7LBOSk1CheHIMQGKH+j8iCiD6cNJKDCOMW/dLsDA
YEWz/3ISfl5hkLpn8RX/WzEJnjGfhC8fmNqfL2civSa9810uk9Aff4ZouzIQ
E5I0UqqCJmEnufiv3sVc7OeqKpKZOAlmk4s9bz7lo8s6CuUReBJCA253vs/N
QOW37sh7NE1CkQqVmhpRNn7CLtZhNTwJdWTCXfEWcXhhR0BTf3UShkSNMyvI
8pFjJ8+M6pEpCNKor7Ol8MEsWRxmdxinQNjM4tqH7d84zYuBcO3iFLDcTsth
/1OEpY2Ou3KITcE2m0/pX4oy1Cd7+ORxhSngYAui3nhbhE25d3/uvJgCjZPC
V1UK4lD44FRqu/0UPFTMqVLtS8Q3igZvVvhOwcZfc4bm/97jhsCOirTYKRhV
qrJ5JlSJtc3/KoTlHfAJ7FxW5I/BW0qVnd/qp8As8mhnanUB9uAv1LLsm4Kn
roeC4vcS0HnKjFndhSloe8Sm36qTigom48xViKeBbV/pUsdkIFasDCeSOjkN
C7O7Ls85ovFEhP/XK+enIdcrXBexpOPP1u50p29Mw+LjDaYbN2rxSTXHUAqZ
adgvap1zOh+O429YXdh6Og1qm3nUgdLeWJLONH38zTR8Umi14mAoQx2LemKt
1tOwN99cl1mWgQwbNKpKPafhW3aqksFiEiKNV32QEjkNyd/pizl48lGgk0L3
z8xp4Nqyodjd+Y74te+8/Fo1DWGH8yMPJRfiSnGx+Q+d03DJus7mEmUCVmO9
ZvFqehpWmma2w0hC8dImD4ny7jTQTk9VBeZVIuc2jm8Sx2fguHSt0GRkHmZL
ZzjFxzEDMfSODOtfElGm+/FwFoEZ8Pli0yw+4YnuGxy+SH575sAvF5hJ9Ifj
IendjHWVGXDVZ73GRlaBP5xbgVHdGaAyVRGdzA1BVMTT1c0fZ0Cy+y9rslwS
juobVCx2m4GT1KuiKqQWSCS/oycxZAZmmYkltr7m4ka/v6+CUmZgotgrT9Us
Db8yrVxwLp2BU+l/kzo3vNHOf4Ufzf7NgG+AXNRYnBH2upRBqj02A3ce9huP
3zvwp+Tx3x9szIAbK2WJkXUtxmPhDIh8FkiFJUjD/WOQSpl/BC/LLHhJuNOn
bgShmVB3XqbLs2DDEI4fni9Dtp8cs46IzwKeM5wM7sjHDI+txFcfzIJESczK
YdIclHTdtHZIaxbm+kjMlD8kIikafeXG97Pw8QnLDvPlEtQ1p9FX6DQLb452
HOfzycHGdaq68QGz4JLt47EvW4MPxyos+cfPgtYFmS+BetUo2P7OJ8fCWbj6
xNhO0zILX9UQO2z6dxZqxz8k6H9NwjVi1zw0BmdB8OVXEQ8PH5yl1vRqe2kW
mmv0dF/0pKEoS0OxH6RzYP/uhbWAdQn2DDx2ko9+Dh5MUR673pmNP+fGTlVz
zYGEPkfqc5lKrN9xu0RTeA56NfRFw+7WINX1Ib8dmTm4bZ6kcu5g092mtzH0
VZuDrRhRy+P/UtHV66y3+Q3nwCD6hm2BtBM+rZzHXGs9B+355C8sTuUgCpNH
S1qecyA4lDjNfTkCb3quVO9GzEG3u84JkcUyPJbiGeqXMQfJlRWCV3fsccvf
y2ZXKudAtPCLJ1lcPiqeq7tf1z4Hr3evKeQYZuNEytecLyfnICN998UrlkwU
yHt4a29rDqaiXcIEDqViJ9nIRn+KeRigsvvpbZ2MTPXEY66yzYOjsSbvg3Pp
WMOl16qebx6Gc1f4DXrjkXzsR+VXEvPAe0fwDyVzBrpZdeoiQWkepowVBkVZ
oxD3WAZRoPY8RK75M/teT8H0hxQ7BMzmoc9aLoiTsQSRnJ1P+uM0Dx1W5Ckx
EiloQdLNQSdgHvhdVHpUBwtQn8YFNaL4edBl3+gIvZmI62wqrwYVzAP7f6tl
VGXfUE6oFtn1hnlYeRJ+7/ZmEf5VRBho6J+HS3uvrtvYx2Ov3p9ZuovzQL8w
OeNy1AaLf/555wvRAgz7mWg+OpGIsyhnrsiTL8CPjb7MAf4CzPtThJWZdgFU
4+ani9cicSSvy9EJ5gW4+K7BbuwpxkwF7csZZxdg9T/LYK38OOQhe77/y6UF
sJP+79h/wdH4cLdprbzgAiSPzl534kvBVnplmcxoAW5X5USmvUnHK5snwifu
LkD/TnPhXdFwrOfywi3zvwVgbj7zUE3HAw8wJJvbPl4AVgY+N3X9KPwodldT
QXMBeF+lW854J6AGofvyLPoLYHKdwzPEKBRLVQUKT5osQPkgw86qpDfOU5k8
m/VpAaq0ZSLa/jjjK2NC1HYOC+C0vb+eduoXjn3vuK3wfQG2LrVVM+c4YLZD
rWMsfgtgu13XUEP5E/v4cDZPhi5AVOru0cT+dHzs7LvCrNgF8Ghs/VDmmY5s
04tj7VIXIPHvtID9rQS0IXnc57+8g/ss8zrEt/KQYfMza9ayBRBfHz7LGBCK
RzUS9KbqFqA59Sgjf1Y2Ulvcepj9bwGELI0iv39NRM029yTsexfgtNcJlZig
NCxN7c/7YGwBfj7faa246IJw6NgptvkFYBcIJVysq0CCfNdJptcXQEeMq+Sy
dyROKLKbyyYswgcXe6ZpkQrEKd/caU+2CPxS1LHC+c4osJe94gHNIlgpyPyh
3U3G1G+MUtiYF0GvcUjBeKMCO+0UBk1zLsKDt2N2rYQvONQ7iIWDdxE27U/y
dPtV4mwei58q1xbhdCrxzeDcOPS3RIXNTXQR1F1q71/1iMbjqtdCS6QW4ciV
SC+2A3+/P3+Cff3+Iqzunedtf5mFTznNh/E+XATHng+4ZT4V8bH94dB8dpDv
ksHjS9Xl+G5mXITfy0VweMl4SjvcBj+/78z5581BPdE9TrGyfth8+GUUsdki
hKhe9DneXITcP9468MeLIJnP4xuUkoJiTnBEv3FchNftPJv2R4sRjt07H/l9
EchFBUh0CAW4HfXEdPguwrh1n+hI+C8035bLTRW6CDzhbCMSp/3QEUO/37di
FsGPt/C2QWcKOn3oPY9F8iKMFuTSrY3/QELBivFJ2Qfnb35SDIz4IgUBft4R
vAgndriX5BYssU4tZSJj9SJUyBZ4WDZmYGuN6UsKjYvQF6DJGLIWi/w2qpPs
OxbBiKp+mPR2GU52j+bLG1gEn64rDdkdBajqvH3K/MQilCS9vUGUm4f7CzWu
nFtchHva9W9fhhehdWWU9mRzEaK/6L3nOV2Bj8+wCHgQLQHjyeavcTHFmMtu
K72CbAl+vuUgf07pjBBTx7XtE0vwqdu7PrIjBz9KzczkZ1qCV4TQp/QdsthI
2lvw1ZklkNZ6fet1RwZy6jfODuJZgrHFodTHtNko1Ez+RtPVJehZla2Ld4jA
2ZS8uYdvLoHgWhVxZKoD+htFJiJ6awn0L/OSecjnovGb43lvZZdASMXKRDy+
BO03l9+MUVqC4S/c9TWhJeiUXkRBz9MliDNg476y64L5iGzEaLSXYHa07dM7
ngJ81/9Z0V2DJSh0uHuMdcUXPee7iaxMl+B9rb7D2jVnbF7JUJz2aQkIYYd7
eiYeY/dna+IT9ktQ/NT4UeFLXxSz0lLC+m0JRBprJJs/fMH4a6qk0o8lOEI9
zhpU5YXaz7iXOf9cArkCVYpn0qF4PtdAqujXEhyaf3S5eF8DHXkgU7GcuAQT
ISI3Ww729ekJrjsXspbg0hyD2vW2UiRkfahKvWgJzih0Pjd1zkQK9MN3fSqX
gPdtRs+kQxTSSSyurmlYAjNjExKn9iRkLRVyb79tCdYtHxe0WeUjv27L2mv9
S7BIOd8Pu6U4+d1jWb3xJYAPBCqye8W4ikyoPnT+//Xk3Tn/sRT1h52Ua11f
gm+FjkeP3svE60JLf8gJy+DCeFY947IDOv73r7z40WXI3uQKm/jyGHG9Svz7
nnoZ4glUNm7ypRjtuv4Xz7AMp8btrK6/9UKPfHSbBtiXgYjtSn/3gwhkdPGO
Iv2FZfjNYcBJ7JuNnUo5W2SvLMPcOeensjoRqC+xJ+iqyDIkkkQZvCyKwYIB
P7QZby2DYOoZxs6lcPTNXv4S4f4yuEYfi7HSzMMjRkfWxpSXoaA86OQ32kAs
+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
n6Cfv/+hdRA=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.819459149673397*^9, 
  3.8194592388258524`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXXusbUdZX91r7cd53HMfvbT3XulLrlh5lUQT638aEyVGkT80ISa2vS09
KSFwG6gREog9WAsmyCOoRO0RTCBWFBW1l2qkVImUSMkRSKg8IiFELgGTagig
EHI8v5n5Zr6Z/c1as55773vOH+fevddea+ab7/v9fjPzzay1fuHCfffc/coL
9738rgs3/uyrL9x7z8vves2NP3Px1QeH8quy7Kp7siz75I0ZPu8ffDT/nMn2
9/ezfH97e1t9Un/498XqY5b0u/q59lXL/nsnrfq8PnbHP+99Zf+2nUd+8qkv
/Vd274qcvqeP4bT7//Lxz5/41ne+m80aFYHLcfqN33j622IRZ/UxVIHvZ/77
m/+b/VIYi4eFC8/XqwCfcQy/eRUEdpvTP/KmP/k4Tlff3iIUq6oa3frFrzx9
roUhphGz737v+ziurn1+PeNuE6p6btTgL736HY+lGnzKGXzzV7/xTfWtiDcC
5eAYyq3biJe46nH8hV++/D/ZRh8NU8aZhuH7u//og5/qqmGb+hiMRyNe9Kkv
fD1bjzeWzFSN6K+xJ9UVqvLctladJrT4nIDHqTo28bxwcARNgh3PqXSIV8NE
l+bVYErDOcf0JcCbai++/VRbf2U5DP3OXb/1ISUvZ3v0nOelCs9N/DpVMTdp
b+or17K93e0MHt3e3skuXTYdz/5etrtzKbsMlT34vVBnjLOdS5ethQd/KhJb
8QhIVuG7RuwYP+MnoBmNV2640aEZDVDfbkiMzjP0sT/9/Q/sve19f/9ZTjrv
vM3yKNqImaa99m8/+kXYo77Nlj+yxvvZ/t5utm2iyD7n1ozL2aWd7Wx3b99c
kkwtilYksPwSG9iTQnGbtYI98QJ2cATAQfd4XFeLS17y5FNfwzcUp2I2Tox/
LqjoKI4J26zamMg1JlT7ydWjWpiYSph4+p7f/gdVcdBgDoyDhl++tJvt7Oy4
v12Nj8uXdhi7D9i/vZvt7e+bwrRI7O45Ro0BlfU+EDL1ijs44n2ftUMMXWcQ
w7vnpUSMUS8MXfGdKxXqhTKpMo3QPPXrv/dPUL+uQGXbKoFq5myz3ew1vgIB
VZAXjSrIjULVhBQIomRQlTsFIlo3V6CJhC+ccqJDiJlWoL/HueraUbew0ygu
7n30if/4q3f82ZN0vA3ydDUTbjVHYQkIPYCY86glGn7q36l1mvlLBOBaGQBt
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
B7YOjikWefUmcoarbHHAIohzYHmUGwpYBQcWOrOpZPTyYwtnLwpbvLEp2Mqd
O7GMR/iSWL0hBL1vyKlx8QjSNx4SfCh7CcAXfZfZ6gDSd8A1HIhzS47GuwSO
AIued01jvbX3LrCoG7vGH9jGG6cG54RN9oBx3y5V8OB4nTiX2FgzdneL15mE
V/xPb6WSqmgKXYpGJ9CVXv5irvUe0zftAuKi1i4e32PuJWoZnU/41sbGbAsw
PhWUqjhMuCer6uN+JPzAMhH2HaEbsgGoiaanMCAXbDeqFkadLkvlh8ctHfH1
Mn7Q5BFlnemEFtI7hqRNgM2oMuVUwXFIO45hssCpg7OpbN4VSBQmmDpKhNsl
EghTcMLY0VACZ8x96HwaH/Inq0Eg49fwJY3KF+uLIZKaFndBJL6ciN9qEInO
6YNIyHNRx9Q5kTys9Egkepxw2AfNEckMAfFWd3IIfj/WF5dsLyZyaRKONGDX
S5586mvslZ0NuyLj2LCCRTJJ1d0zk2z0GjIJ16tFEhZfu2AyK2cSH9gcGibh
Nx7gKJP0Mbz6XEM/Bho3oFTVbLTmFCxEUUec6oFT/C3zMU7hmILVAjlV0Owa
ldv3VzpaKc4vGa3Irwm0ssfGzsUBmruiFaUjKmjF3uSJT0SvYqHMwlinKbPm
3m6oQmlY5zls/TAyjE3uJeBZDjTj2Ny9MWbXRwm9NiR64RfkEF70qS98nZys
fjfvPOfV0G8ok82/GlJtzKmGtQe1QFNU843KruBb7hhE027iXNaAdCw/j991
/gZNijNvEmMefzHlEe3q045NimlVj6iXpXJPmdsp9yYh97DHFT+PyulH3xdI
P/tbd/QzFMCNboQKTkHDQLoPrgYDeWAGZKCUly1WkpVjWnb0vDuR2QlhVrwq
Y+ckXFeiBhlHetmXSUOC2h1+jQmaewRVx2pSE5O1FaDmzV/9xjerqUlhjVCT
Cm1FzYmAYvbu9YCuc6R44C8e+xyOoUFNGYvsEQ0AFsVYjK74NCGZsaZMdR+B
dWxMiebvGuGb7qi66n6VD2dtvzp2ljjXKz+PicXwMhL3+jdVSk7VuvJHGs0Q
Fo4hExTCqQcvk1P34BVOJZvQWUW8gs5miE8ICpIkAqPtbAA7vuGu9RJSjxxm
LA7GMqnpmoWS2gBKSlJhJJbA8bl9Fxr7Qq5G6nEryK4K541Rjh2lkX7iv/dc
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
wCISG/Xvi2v8rn6ufdUK/55d9f/0g85B\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 805},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 245, 3, 81, "Subsection"],
Cell[828, 27, 91, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956, 33, 156, 2, 70, "Section"],
Cell[1115, 37, 73, 1, 30, "Input"],
Cell[1191, 40, 17989, 471, 1622, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19217, 516, 115, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[19357, 521, 7613, 168, 699, "Input"],
Cell[26973, 691, 1061, 26, 87, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[28071, 722, 6006, 138, 294, "Input"],
Cell[34080, 862, 738, 12, 22, "Print"],
Cell[34821, 876, 129920, 2202, 282, "Output"]
}, Closed]],
Cell[164756, 3081, 94, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[164887, 3087, 97, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[165009, 3092, 98, 1, 49, "Subsection"],
Cell[165110, 3095, 4737, 123, 468, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[169884, 3223, 176, 2, 41, "Subsection"],
Cell[170063, 3227, 23367, 560, 1635, "Input"],
Cell[CellGroupData[{
Cell[193455, 3791, 203, 2, 88, "Input"],
Cell[193661, 3795, 132, 1, 30, "Output"],
Cell[193796, 3798, 116, 1, 30, "Output"],
Cell[193915, 3801, 130, 1, 30, "Output"],
Cell[194048, 3804, 115, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194224, 3812, 279, 4, 70, "Section"],
Cell[194506, 3818, 321, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[194852, 3826, 161, 2, 49, "Subsection"],
Cell[195016, 3830, 254, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[195295, 3839, 20646, 402, 1181, "Input"],
Cell[CellGroupData[{
Cell[215966, 4245, 524, 9, 22, "Print"],
Cell[216493, 4256, 471, 9, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[216991, 4269, 2855, 77, 272, "Input"],
Cell[CellGroupData[{
Cell[219871, 4350, 2058, 45, 127, "Input"],
Cell[221932, 4397, 27880, 499, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249849, 4901, 1276, 28, 88, "Input"],
Cell[251128, 4931, 329, 5, 30, "Output"],
Cell[251460, 4938, 328, 5, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[251849, 4950, 153, 2, 56, "Section"],
Cell[252005, 4954, 204, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[252234, 4962, 98, 1, 49, "Subsection"],
Cell[252335, 4965, 4737, 123, 468, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[257109, 5093, 176, 2, 41, "Subsection"],
Cell[257288, 5097, 23169, 574, 1656, "Input"],
Cell[280460, 5673, 174, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[280659, 5681, 246, 6, 30, "Input"],
Cell[280908, 5689, 236, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281181, 5698, 244, 6, 30, "Input"],
Cell[281428, 5706, 208, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281673, 5715, 242, 6, 30, "Input"],
Cell[281918, 5723, 217, 3, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282184, 5732, 113, 1, 49, "Subsection"],
Cell[282300, 5735, 414, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[282739, 5746, 19767, 386, 1104, "Input"],
Cell[302509, 6134, 669, 11, 22, "Print"]
}, Open  ]],
Cell[303193, 6148, 261, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[303479, 6159, 2472, 60, 180, "Input"],
Cell[305954, 6221, 115067, 1962, 264, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421058, 8188, 3176, 79, 231, "Input"],
Cell[424237, 8269, 85640, 1478, 264, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509914, 9752, 418, 12, 34, "Input"],
Cell[510335, 9766, 60949, 1013, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571321, 10784, 71, 1, 30, "Input"],
Cell[571395, 10787, 255, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571687, 10798, 756, 17, 88, "Input"],
Cell[572446, 10817, 253, 3, 50, "Output"]
}, Open  ]],
Cell[572714, 10823, 201, 4, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572952, 10832, 161, 2, 49, "Subsection"],
Cell[573116, 10836, 516, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[573657, 10848, 19019, 372, 1085, "Input"],
Cell[CellGroupData[{
Cell[592701, 11224, 394, 8, 22, "Print"],
Cell[593098, 11234, 384, 8, 22, "Print"],
Cell[593485, 11244, 392, 8, 22, "Print"],
Cell[593880, 11254, 396, 8, 22, "Print"],
Cell[594279, 11264, 318, 7, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[594646, 11277, 2334, 59, 212, "Input"],
Cell[596983, 11338, 77362, 1346, 264, "Output"]
}, Open  ]],
Cell[674360, 12687, 481, 12, 50, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[674890, 12705, 101, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[675016, 12710, 190, 2, 39, "Subsubsection"],
Cell[675209, 12714, 117, 1, 30, "Text"],
Cell[675329, 12717, 1437, 38, 145, "Input"],
Cell[CellGroupData[{
Cell[676791, 12759, 390, 7, 30, "Input"],
Cell[677184, 12768, 6499, 118, 229, "Output"]
}, Open  ]],
Cell[683698, 12889, 1002, 27, 69, "Input"],
Cell[684703, 12918, 130, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[684858, 12924, 241, 4, 30, "Input"],
Cell[685102, 12930, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685254, 12936, 404, 9, 30, "Input"],
Cell[685661, 12947, 79345, 1316, 220, 66377, 1102, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

