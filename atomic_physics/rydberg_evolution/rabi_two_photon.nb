(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    359688,       6950]
NotebookOptionsPosition[    356094,       6830]
NotebookOutlinePosition[    356435,       6845]
CellTagsIndexPosition[    356392,       6842]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["two-photon rabi flopping", "Title"]], "Subsection",
 CellChangeTimes->{{3.8120320269110794`*^9, 3.812032045999884*^9}, {
  3.812149200707573*^9, 3.8121492050945826`*^9}, {3.818892597097991*^9, 
  3.8188926073392277`*^9}}],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.819201396926625*^9, 3.8192014024230766`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["global definitions", "Section",
 CellChangeTimes->{{3.8192014094166317`*^9, 3.8192014473494415`*^9}, {
  3.819201691049264*^9, 3.819201712767215*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"get", " ", "from", " ", "local", " ", "files"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<../../constants/rbconsts.m\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<../../constants/physconsts.m\>\""}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "CONSTANTS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]780A", " ", "=", "2414176448051179.0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      SubscriptBox["S", 
       RowBox[{"1", "/", "2"}]], "F"}], "=", 
     RowBox[{
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"5", 
        SubscriptBox["P", 
         RowBox[{"3", "/", "2"}]], "F"}]}], "=", "3"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]480", " ", "=", "3928955767695494.5"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      SubscriptBox["P", 
       RowBox[{"3", "/", "2"}]], "F"}], "=", 
     RowBox[{"3", " ", "\[Rule]", " ", 
      RowBox[{"84", 
       SubscriptBox["D", 
        RowBox[{"5", "/", "2"}]]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TFORT", " ", "=", "1*^-3"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "K", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]FORT", "=", "1.064*^-6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wFORT", "=", "2.5*^-6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]rFORT", " ", "=", 
     RowBox[{
      FractionBox["1", "wFORT"], 
      SqrtBox[
       FractionBox[
        RowBox[{"2", " ", "kB", " ", "TFORT"}], "mRb"]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"radial", " ", "trap", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]zFORT", " ", "=", 
     RowBox[{
      FractionBox["\[Lambda]FORT", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wFORT", "2"]}]], 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "kB", " ", "TFORT"}], "mRb"]]}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{"axial", " ", "trap", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ag", "=", "3.20346392953120*^-34"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ae", "=", 
     RowBox[{"1.52739309640219*^-34", "+", 
      RowBox[{"-", "3.817491143122172*^-35"}], "+", 
      RowBox[{"-", "4.5814576851206318*^-35"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ar", "=", 
     RowBox[{"-", "1.825469589864302*^-39"}]}], ";"}], " ", 
   RowBox[{"(*", " ", "ponderomotive", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480g", " ", "=", 
     RowBox[{"-", "2.90311524481040*^-39"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480e", " ", "=", 
     RowBox[{
      RowBox[{"-", "4.82150951678205*^-39"}], "+", "1.696626924053701*^-40", 
      "+", "4.557481703934684*^-40"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480r", " ", "=", 
     RowBox[{"-", "4.8350228219114005*^-39"}]}], " ", ";", 
    RowBox[{"(*", "ponderomotive", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "FUNCTIONS", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AtomPositionSample", "[", "Tatom_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]rFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]rFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]zFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BuildSchroedingerSystem", "[", 
     RowBox[{"H_", ",", "psi0_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hamiltonian", "=", "H"}], ",", 
        RowBox[{"\[Psi]0", "=", "psi0"}], ",", "\[Psi]", ",", "statelength", 
        ",", "eqs", ",", "ics", ",", "sys", ",", "P", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"statelength", " ", "=", " ", 
        RowBox[{"Length", "[", "\[Psi]0", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Psi]", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
          "statelength"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ics", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"statelength", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"eqs", ",", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ics", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/.", 
               RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
             RowBox[{"\[Psi]0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sys", " ", "=", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Psi]", ",", "sys"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gJ", "[", 
      RowBox[{"L_", ",", "J_"}], "]"}], ":=", 
     RowBox[{"gL", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"J", 
          RowBox[{"(", 
           RowBox[{"J", "+", "1"}], ")"}]}], "+", 
         RowBox[{"L", 
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}]}], "-", 
         RowBox[{"Se", 
          RowBox[{"(", 
           RowBox[{"Se", "+", "1"}], ")"}]}], "\n", "+", 
         RowBox[{"gS", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", 
             RowBox[{"(", 
              RowBox[{"J", "+", "1"}], ")"}]}], "-", 
            RowBox[{"L", 
             RowBox[{"(", 
              RowBox[{"L", "+", "1"}], ")"}]}], "+", 
            RowBox[{"Se", 
             RowBox[{"(", 
              RowBox[{"Se", "+", "1"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "J", 
         RowBox[{"(", 
          RowBox[{"J", "+", "1"}], ")"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gF", "[", 
      RowBox[{"J_", ",", "F_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gJ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"F", 
            RowBox[{"(", 
             RowBox[{"F", "+", "1"}], ")"}]}], "+", 
           RowBox[{"J", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "-", 
           RowBox[{"INuc", 
            RowBox[{"(", 
             RowBox[{"INuc", "+", "1"}], ")"}]}]}], ")"}]}], "\n", "+", 
        RowBox[{"gI", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"F", 
            RowBox[{"(", 
             RowBox[{"F", "+", "1"}], ")"}]}], "-", 
           RowBox[{"J", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "+", 
           RowBox[{"INuc", 
            RowBox[{"(", 
             RowBox[{"INuc", "+", "1"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "F", 
        RowBox[{"(", 
         RowBox[{"F", "+", "1"}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Zeeman", " ", "shifts"}], ",", " ", 
     RowBox[{"only", " ", "for", " ", "diagonal", " ", "elements"}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FZeemanMatElem", "[", 
      RowBox[{"L_", ",", 
       RowBox[{"{", 
        RowBox[{"J_", ",", "mJ_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"JJ_", ",", "mJJ_"}], "}"}], ",", "Bz_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"mJ", ",", "mJJ"}], "]"}], " ", "\[Mu]B", " ", 
      RowBox[{"gJ", "[", 
       RowBox[{"L", ",", "J"}], "]"}], "mJ", " ", "Bz"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HFZeemanMatElem", "[", 
      RowBox[{"I_", ",", "L_", ",", "J_", ",", 
       RowBox[{"{", 
        RowBox[{"F_", ",", "mF_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"FF_", ",", "mFF_"}], "}"}], ",", "Bz_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"mF", ",", "mFF"}], "]"}], "\[Mu]B", " ", "Bz", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ClebschGordan", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"F", ",", "mF"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"FF", ",", "mFF"}], "}"}]}], "]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "F"}], " ", "+", "1"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "+", "J", "+", "I"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"gJ", "[", 
            RowBox[{"L", ",", "J"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "F"], 
           SqrtBox[
            RowBox[{"J", " ", 
             RowBox[{"(", 
              RowBox[{"J", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "1"}], ")"}]}]], 
           RowBox[{"SixJSymbol", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"J", ",", "I", ",", "F"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"FF", ",", "1", ",", "J"}], "}"}]}], "]"}]}], "+", 
          "\[IndentingNewLine]", 
          RowBox[{"gI", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "FF"], 
           SqrtBox[
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{"I", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "I"}], "+", "1"}], ")"}]}]], 
           RowBox[{"SixJSymbol", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"I", ",", "J", ",", "F"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"FF", ",", "1", ",", "I"}], "}"}]}], "]"}]}]}], ")"}]}],
        ")"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxBoltzVelocitySample", "[", "Tatom_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"intensityProfile", "[", 
      RowBox[{
      "x_", ",", "y_", ",", "z_", ",", "zRx_", ",", "zRy_", ",", "zx_", ",", 
       "zy_", ",", "wx_", ",", "wy_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["x", "2"]}], 
         RowBox[{
          SuperscriptBox["wx", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"z", "-", "zx"}], "zRx"], ")"}], "2"]}], ")"}]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["y", "2"]}], 
         RowBox[{
          SuperscriptBox["wy", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"z", "-", "zy"}], "zRy"], ")"}], "2"]}], ")"}]}]]}], 
       "]"}], "/", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"z", "-", "zx"}], "zRx"], ")"}], "2"]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"z", "-", "zy"}], "zRy"], ")"}], "2"]}], ")"}]}]]}]}], 
    ";", 
    RowBox[{"(*", 
     RowBox[{"Gaussian", " ", "beam", " ", "intensity", " ", "profile"}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8192017178253603`*^9, 3.819201748596358*^9}, {
   3.819201786457075*^9, 3.8192019210721493`*^9}, {3.8192333030040283`*^9, 
   3.819233303662179*^9}, 3.8192345626399574`*^9, {3.819239771374568*^9, 
   3.8192397924775696`*^9}, {3.819285775000683*^9, 3.819285889342253*^9}, {
   3.8192860475803337`*^9, 3.8192860513781133`*^9}, {3.8192861562427053`*^9, 
   3.8192861565744452`*^9}, {3.819286516969108*^9, 3.8192865728787575`*^9}, {
   3.819288035743561*^9, 3.819288045107689*^9}, {3.819288340765124*^9, 
   3.819288483559705*^9}, {3.8192885713813047`*^9, 3.819288593317494*^9}, {
   3.819289466893937*^9, 3.819289546232596*^9}, {3.8192953132452016`*^9, 
   3.819295415598989*^9}, {3.8192954536273327`*^9, 3.8192954901823406`*^9}, {
   3.8192956455007443`*^9, 3.8192956635180044`*^9}, {3.819296175241294*^9, 
   3.8192962209223027`*^9}, {3.819297317521513*^9, 3.8192974164656563`*^9}, {
   3.819297582214944*^9, 3.819297610162972*^9}, {3.8192976881996393`*^9, 
   3.8192977778235197`*^9}, {3.819297809892593*^9, 3.8192978869323854`*^9}, {
   3.8192979549267964`*^9, 3.8192980401364317`*^9}, {3.819298093863152*^9, 
   3.819298410886216*^9}, {3.8192984815713863`*^9, 3.8192987166625175`*^9}, {
   3.819298755044718*^9, 3.819298771732566*^9}, {3.819298915864654*^9, 
   3.8192989915549393`*^9}, {3.819299189843501*^9, 3.8192992505829697`*^9}, {
   3.8192993362779255`*^9, 3.819299375877252*^9}, {3.819299420510394*^9, 
   3.819299467227704*^9}, {3.8192997080685263`*^9, 3.8192997652116985`*^9}, {
   3.819299796347228*^9, 3.8192998556703157`*^9}, {3.819299891777793*^9, 
   3.8192999154387817`*^9}, {3.819299953853002*^9, 3.8193000441457915`*^9}, {
   3.8193000811766577`*^9, 3.8193002227545185`*^9}, {3.819300267470413*^9, 
   3.81930028248629*^9}, {3.819304933149105*^9, 3.819305037999817*^9}, {
   3.819305229004965*^9, 3.8193052336443095`*^9}, {3.8193138139349685`*^9, 
   3.8193139052259693`*^9}, {3.819314032913005*^9, 3.819314106440956*^9}, {
   3.819314159872086*^9, 3.819314176795687*^9}, {3.8193142912158546`*^9, 
   3.819314521957082*^9}, {3.819314621196687*^9, 3.8193146568913774`*^9}, {
   3.8193147815229673`*^9, 3.819314807941039*^9}, {3.819314876922186*^9, 
   3.8193149249406075`*^9}, {3.8193150506410093`*^9, 3.819315135965601*^9}, {
   3.819315167750901*^9, 3.819315215304494*^9}, {3.8194119228847456`*^9, 
   3.819411977846978*^9}, {3.819412132308697*^9, 3.819412224227352*^9}, 
   3.8194123412854176`*^9, {3.8194144461786003`*^9, 3.8194144593695464`*^9}, 
   3.819414496023246*^9, {3.819459399423623*^9, 3.8194594021000004`*^9}, {
   3.81946096372876*^9, 3.8194611937679853`*^9}, 3.8194646621608567`*^9, {
   3.819666014463086*^9, 3.819666058313715*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["simple Rabi oscillation test", "Section",
 CellChangeTimes->{{3.8192038754475665`*^9, 3.819203889914741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "atom", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"g", ",", "e"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", 
      ",", "\[CapitalDelta]2"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scl", " ", "=", " ", "1*^9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "3"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atomBasis", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "rabi", " ", "frequencies", " ", "and", " ", "AC", " ", "stark", " ", 
     "shifts", " ", "calculated", " ", "in", " ", 
     RowBox[{"rydberg_rabi", ".", "ipynb"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]1", "=", "695214755.6324366"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]2", " ", "=", " ", "71550273.89520717"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
     RowBox[{"2", "\[Pi]", "*", "600099"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"-", "13194689145.077131"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]2", " ", "=", 
     RowBox[{"-", "\[CapitalDelta]1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diffACStarkHFge", " ", "=", "1298349.0058336519"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diffACStarkHFer", "=", "339133.4042641225"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Haf", "=", 
      RowBox[{
       RowBox[{"(", GridBox[{
          {"0", 
           RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
          {
           RowBox[{"\[CapitalOmega]1", "/", "2"}], 
           RowBox[{"\[CapitalDelta]1", " ", "+", "diffACStarkHFge"}], 
           RowBox[{"\[CapitalOmega]2", "/", "2"}]},
          {"0", 
           RowBox[{"\[CapitalOmega]2", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
            "\[CapitalDelta]1", "+", "diffACStarkHFge", " ", "+", " ", 
             "\[CapitalDelta]2", " ", "+", "diffACStarkHFer"}], ")"}]}
         }], ")"}], "/", "scl"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scl", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]1", " ", "=", " ", "1"}], ";", 
    RowBox[{"\[CapitalOmega]2", "=", "0.3"}], ";", 
    RowBox[{"\[CapitalDelta]1", "=", 
     RowBox[{"20", "\[CapitalOmega]1"}]}], ";", 
    RowBox[{"\[CapitalDelta]2", "=", 
     RowBox[{"-", "\[CapitalDelta]1"}]}], ";", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";", 
    RowBox[{"(*", 
     RowBox[{"diagnostics", ",", " ", 
      RowBox[{
       RowBox[{"e", ".", "g", ".", " ", "reproduce"}], " ", "Shore", " ", 
       "examples"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Haf", "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
         {
          RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1", 
          RowBox[{"\[CapitalOmega]2", "/", "2"}]},
         {"0", 
          RowBox[{"\[CapitalOmega]2", "/", "2"}], 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[CapitalGamma]", "/", "2"}]}]}]}
        }], ")"}], "/", "scl"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
     RowBox[{"\[CapitalOmega]1", " ", 
      RowBox[{"\[CapitalOmega]2", "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[CapitalDelta]1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"scl", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Haf", "=", 
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"/", "2"}], "0"},
         {
          RowBox[{"1", "/", "2"}], "0", 
          RowBox[{"1", "/", "2"}]},
         {"0", 
          RowBox[{"1", "/", "2"}], "0"}
        }], ")"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Shore", ",", " ", 
       RowBox[{
        RowBox[{"page", " ", "794", " ", 
         RowBox[{"Fig", ".", " ", "13.3"}]}], "-", "1"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "5"}], ")"}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Haf", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192390395347195`*^9, 
   3.8192391336765013`*^9}, {3.8192391681624517`*^9, 3.819239205364618*^9}, {
   3.819239247806906*^9, 3.819239251535215*^9}, {3.819239552084382*^9, 
   3.819239554547559*^9}, {3.819239687324473*^9, 3.819239715963911*^9}, {
   3.8192397820159545`*^9, 3.8192397826899557`*^9}, {3.819239879006448*^9, 
   3.8192398838481426`*^9}, {3.8192406342774234`*^9, 
   3.8192406921008005`*^9}, {3.8192407358505707`*^9, 3.819240765537469*^9}, {
   3.8192409644297724`*^9, 3.8192409853614974`*^9}, {3.8192410516435223`*^9, 
   3.8192410633695292`*^9}, {3.819241203344366*^9, 3.8192412273522124`*^9}, {
   3.8192412962313366`*^9, 3.819241500542883*^9}, 3.8192415334792695`*^9, {
   3.8192416073247766`*^9, 3.819241669077629*^9}, {3.8192417151328716`*^9, 
   3.819241731777356*^9}, {3.8192417648395586`*^9, 3.8192417908514943`*^9}, {
   3.8192419070622606`*^9, 3.819241907184484*^9}, {3.819241988008176*^9, 
   3.8192420205235667`*^9}, {3.8192422332551126`*^9, 
   3.8192422352576494`*^9}, {3.8192894221202264`*^9, 3.8192894221285996`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", "2"], "0"},
     {
      FractionBox["1", "2"], "20", "0.15`"},
     {"0", "0.15`", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8192398847534113`*^9, {3.8192406794870863`*^9, 3.819240692790371*^9}, 
   3.8192407371978025`*^9, 3.819240987037568*^9, 3.819241064438328*^9, {
   3.819241492698249*^9, 3.8192415019648952`*^9}, 3.8192415345336*^9, 
   3.8192416729882517`*^9, 3.8192417342574368`*^9, 3.819241806055339*^9, 
   3.819241907722474*^9, 3.8192420210645285`*^9, 3.819242236844819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"Haf", ",", "\[Psi]0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<BDF\>\""}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"e\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\) Rabi Oscillations\>\"", "]"}], ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.8192395716314893`*^9, 
   3.819239572460662*^9}, {3.8192396474327884`*^9, 3.8192396600483513`*^9}, 
   3.819239724419385*^9, {3.8192397972636976`*^9, 3.819239835865923*^9}, {
   3.8192410165200768`*^9, 3.81924102522064*^9}, {3.819241685565702*^9, 
   3.8192416864844785`*^9}, {3.819241802161066*^9, 3.819241803634892*^9}, 
   3.819288617708044*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8192395636890182`*^9, 3.8192395737551384`*^9}, {
   3.819239649098977*^9, 3.819239724773569*^9}, {3.819239776352786*^9, 
   3.819239798302092*^9}, {3.8192398369279604`*^9, 3.8192398908131895`*^9}, 
   3.819240705457554*^9, 3.8192407486938777`*^9, 3.819240990228368*^9, 
   3.8192410256930733`*^9, 3.819241066401521*^9, 3.819241505212696*^9, 
   3.8192415363032484`*^9, {3.819241674232566*^9, 3.8192416874700036`*^9}, 
   3.8192417441580625`*^9, 3.8192418822644453`*^9, 3.8192419798682876`*^9, 
   3.8192420255142*^9, 3.8192422527508283`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aJTeFBhG/wPJL3iI
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
yLCz8mAmmc1A+zTVS6WxnqCzuXokN4GBtQG9fg7XLcCUump3fxIDPd2bLyy8
kQWnEY/TG84y8Ly/usEbnxmSv9XNZvfzDDTT7g12/qMHYXfnJNLTGPgqhGfF
rV9OcHytyd7OdAaeM381svyCPzBjUu8JZTCw+s+tnYJUCqT1fVi0yST0/ets
50YuClwlqVgmZDMwu67g9cKCD9y5Fpf+4goDdWMn4wv77aGSr+UjTx4Dowuw
xeKwOrwI2aBsdJ2By0YHV276cpPU1bY/9vQNBnrdnlV4fU0VPqqXN1bfZGDV
hGm982E7mLjIK7pwi3jeyh0S4uIDfxac/bWLibwwXeZZ9pYM/P7XbkffZeDf
js7HLy9RQLxh6tf9ewQ/n6XjdooGwFYFMJl8QOCdT4/aes8ZVBKTzyk9YiA3
iWGVrGIA+pPv3h8oJ/Jw/alPEXKLJEvnHdtvPmagpuKzsyZbZcCt/NiR4SoG
PvjwnyjN1hzIG188lalhYMgwK86q0QMOnRYX9K9j4NuW0Vc5RP9/8hPFK7ue
8OsdI2ZZNzFfmj8o6H3GwPc+XdH3DgVC+m2umXUvGPhHxOt9aZQ7XBOyB5cm
gj+3tVynB0yg5HBO4vlmBopeqzkVJLseqt+Mv2lrJfByevPbh8UPTXv0tq1p
Z6CxztzY1jqEnlx2hGUnAzmVnzpzV7nCp+VvqpldDCzZ6nnp68UAmAqWW/ms
h4HL/zGEb5VT4G/zYVfuXiI/accooUwyrFKtzyO9Y2CpTHzVdVFvkLggPHGi
n4GDyZqdJ15bw7Z5P73HgwxsSLQZYI7tADWfO8yfHxnYlJehH4PdJFLdn87d
wwy8fdos7q2QFnDs9hbvG2HgyOXgiHkLZ+h638K4PEr47fc+Qb57ASAdqunf
Mkb4M2EiS6CLAqG/c3T+fSPyaMtI6iMMhDIW31r1SSI/um6u6hh2gWXrDo3v
nSbqzatbcq8e6IFt/ptnl2YIfFzUngXY/0fKUMcr/80xcOuktopp4G74kU8/
ELiCiR5XuVJO9aqCwe7vRhdWMrF7yFbZ1MYR2E9dpV6sZuLEzJozu3v9ocu+
Zu63ABNTY4LMV1VTYMuA/CslYSYWjziy7n8MhJCws4X+a5nYsUZvLG7ADcoW
fsWnijHRJPCZTN5hBG5OgPfzdUw8NboqtI7nB8lGokljXpLYf00k02xWCQo4
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aID/ARQBC28=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.3250590597826522`*^-21}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\
\[LongLeftRightArrow]\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\) Rabi \
Oscillations\"", 
         StringForm[
         "\!\(\*TemplateBox[{\"g\"},\n\
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},\n\"Ket\"]\) Rabi \
Oscillations"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"e\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8192395740823183`*^9, {3.819239649466631*^9, 3.819239725075938*^9}, {
   3.819239776646129*^9, 3.819239798616879*^9}, {3.8192398373443227`*^9, 
   3.819239891212536*^9}, 3.819240708064005*^9, 3.8192407511749024`*^9, 
   3.819240990799549*^9, 3.8192410259305944`*^9, 3.8192410666803017`*^9, 
   3.819241505471272*^9, 3.819241536564887*^9, {3.8192416745479774`*^9, 
   3.8192416878872385`*^9}, 3.819241744154047*^9, 3.819241882260453*^9, 
   3.8192419798633013`*^9, 3.819242026343623*^9, 3.8192422546418896`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8192425142842827`*^9, 3.819242515867179*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["frequency scan. RIN, finite T", "Section",
 CellChangeTimes->{{3.8192038754475665`*^9, 3.819203889914741*^9}, {
  3.8192039332593327`*^9, 3.8192039370811744`*^9}, {3.81945674121952*^9, 
  3.819456756426366*^9}, {3.8194612112237186`*^9, 3.819461219450421*^9}}],

Cell["Run each cell below.", "Text",
 CellChangeTimes->{{3.819459484611496*^9, 3.819459488748825*^9}, {
  3.8194658453380756`*^9, 3.8194658461057043`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"scl", " ", "=", " ", "1*^9"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"time", " ", "scale", " ", 
     RowBox[{"factor", ".", " ", "multiply"}], " ", "times"}], ",", " ", 
    RowBox[{"divide", " ", "frequencies"}]}], "*)"}]}]], "Input"],

Cell[CellGroupData[{

Cell["RIN data", "Subsection",
 CellChangeTimes->{{3.819459322341485*^9, 3.8194593382829933`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"780", "A", " ", 
    RowBox[{"RIN", ".", " ", 
     RowBox[{"todo", ":", " ", 
      RowBox[{
      "bundle", " ", "setup", " ", "stuff", " ", "into", " ", 
       "function"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"VDC780A", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"contents", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"header", " ", "=", 
     RowBox[{"contents", "[", 
      RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"HzPts780A", ",", "dBVpkPts780A"}], "}"}], "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"contents", "[", 
       RowBox[{"[", 
        RowBox[{"15", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", "-=", 
     RowBox[{"10", 
      RowBox[{"Log10", "[", "VDC780A", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "compress", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compression", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dBVpkPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HzPts780A", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"HzPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "HzPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phases", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"make", " ", "phases", " ", "pre"}], "-", 
      RowBox[{
      "determined", " ", "so", " ", "each", " ", "subsequent", " ", "call", 
       " ", "within", " ", "a", " ", "measurement", " ", "sees", " ", "the", 
       " ", "same", " ", "function", " ", "of", " ", 
       RowBox[{"t", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
     RowBox[{"1", "+", 
      RowBox[{"Total", "[", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dBVpkPts780A", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"HzPts780A", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], 
                RowBox[{"t", "/", "scl"}]}], "+", 
               RowBox[{"phases", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}], 
         ",", 
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}], 
    ";", 
    RowBox[{"(*", 
     RowBox[{
     "divide", " ", "time", " ", "by", " ", "scl", " ", "because", " ", 
      "time", " ", "window", " ", "in", " ", "solver", " ", "is", " ", 
      RowBox[{"mult", ".", " ", "by"}], " ", 
      RowBox[{"scl", ".", " ", "need"}], " ", "to", " ", "cancel", " ", "to", 
      " ", "get", " ", "real", " ", "time"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.819459478992441*^9, 3.8194596794743643`*^9}, {
   3.819459753112505*^9, 3.819459788323239*^9}, {3.8194655025486126`*^9, 
   3.8194656025372534`*^9}, 3.8194657684988165`*^9, {3.8194658896028366`*^9, 
   3.8194659360785265`*^9}, {3.819671207069723*^9, 3.819671220337928*^9}, {
   3.8196712785223885`*^9, 3.8196713591221867`*^9}, {3.8196714281459064`*^9, 
   3.8196715725133877`*^9}, {3.8196716098681164`*^9, 3.81967165595725*^9}, {
   3.819671850788233*^9, 3.8196718674966636`*^9}, {3.8196724562270527`*^9, 
   3.819672487236653*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Beams and differential frequency shifts", "Subsection",
 CellChangeTimes->{{3.819459361116685*^9, 3.819459368769582*^9}, {
  3.819459420970192*^9, 3.819459433960681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", ",", 
    "\[CapitalDelta]2", ",", "diffACStarkHFge", ",", "diffACStarkHFer"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStates", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"single", " ", "atom", " ", "states"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomBasis", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"rabi", " ", "frequencies", " ", "calculated", " ", "in", " ", 
    RowBox[{"rydberg_rabi", ".", "ipynb"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", "2"}], "\[Pi]", "*", "2100000000"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"780", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]2", " ", "=", 
    RowBox[{"-", "\[CapitalDelta]1"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"480", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]780A", " ", "=", " ", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]780A", "+", "\[CapitalDelta]1"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]480", " ", "=", 
    RowBox[{"2", "\[Pi]", " ", 
     RowBox[{"c", "/", 
      RowBox[{"(", 
       RowBox[{"\[Omega]480", "+", "\[CapitalDelta]2"}], ")"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fieldProfile780A", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"intensityProfile", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", "6*^-6", ")"}], "2"], " "}], "\[Lambda]780A"], ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", "8*^-6", ")"}], "2"], " "}], "\[Lambda]780A"], ",", "0",
       ",", "2.2*^-4", ",", "6*^-6", ",", "8*^-6"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fieldProfile480", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    SqrtBox[
     RowBox[{"intensityProfile", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", "4*^-6", ")"}], "2"], " "}], "\[Lambda]480"], ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", "4*^-6", ")"}], "2"], " "}], "\[Lambda]780A"], ",", 
       "0", ",", "0", ",", "4*^-6", ",", "4*^-6"}], "]"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]1", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"2", "\[Pi]", "*", "102712885", " ", 
     RowBox[{"fieldProfile780A", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
     SqrtBox[
      RowBox[{"RIN780A", "[", "t", "]"}]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]2", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{"2", "\[Pi]", "*", "24538455", " ", 
    RowBox[{"fieldProfile480", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]Eff", " ", "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], "2"], "*", "102712885", " ", "*", 
     RowBox[{"24538455", "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        RowBox[{"Abs", "[", "\[CapitalDelta]1", "]"}]}], ")"}]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ACStarkHFg", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]780Ag", " ", 
        SuperscriptBox[
         RowBox[{"fieldProfile780A", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"], 
        RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
       RowBox[{"\[Alpha]480g", " ", 
        SuperscriptBox[
         RowBox[{"fieldProfile480", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"]}]}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ACStarkHFe", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]780Ae", " ", 
        SuperscriptBox[
         RowBox[{"fieldProfile780A", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"], 
        RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
       RowBox[{"\[Alpha]480e", " ", 
        SuperscriptBox[
         RowBox[{"fieldProfile480", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"]}]}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ACStarkHFr", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Alpha]780Ar", " ", 
        SuperscriptBox[
         RowBox[{"fieldProfile780A", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"], 
        RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
       RowBox[{"\[Alpha]480r", " ", 
        SuperscriptBox[
         RowBox[{"fieldProfile480", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"]}]}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diffACStarkHFge", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ACStarkHFe", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
    RowBox[{"ACStarkHFg", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diffACStarkHFer", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ACStarkHFr", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
    RowBox[{"ACStarkHFe", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bbias", " ", "=", " ", 
   RowBox[{"3.6", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "4"}]]}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{"magnetic", " ", "bias", " ", 
    RowBox[{"field", " ", "[", "T", "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"diffZ1ge", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"HFZeemanMatElem", "[", 
       RowBox[{"INuc", ",", "1", ",", 
        RowBox[{"3", "/", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}], "-", 
      RowBox[{"HFZeemanMatElem", "[", 
       RowBox[{"INuc", ",", "0", ",", 
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], "/", 
    "\[HBar]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffZ1er", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"FZeemanMatElem", "[", 
       RowBox[{"2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"5", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "/", "2"}], ",", 
          RowBox[{"5", "/", "2"}]}], "}"}], ",", "Bbias"}], "]"}], "-", 
      RowBox[{"HFZeemanMatElem", "[", 
       RowBox[{"INuc", ",", "1", ",", 
        RowBox[{"3", "/", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], "/", 
    "\[HBar]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dUge", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"diffACStarkHFge", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
    "diffZ1ge"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dUer", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"diffACStarkHFer", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
    "diffZ1er"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192333655353513`*^9, 
   3.819233370867853*^9}, {3.819238203926468*^9, 3.819238212667815*^9}, {
   3.819242324812809*^9, 3.819242335601594*^9}, {3.8192425228529005`*^9, 
   3.8192425649705935`*^9}, {3.8192426952527275`*^9, 3.819242736070496*^9}, {
   3.8192428894875054`*^9, 3.8192428895822864`*^9}, 3.81928868091359*^9, {
   3.8192887217444215`*^9, 3.8192889467697983`*^9}, {3.8192889833299923`*^9, 
   3.819289170826914*^9}, {3.8192894220156155`*^9, 3.8192894220173187`*^9}, {
   3.8192957445248413`*^9, 3.8192958447572355`*^9}, {3.8192959041747727`*^9, 
   3.8192959092834263`*^9}, {3.8192960319294496`*^9, 3.8192960538769937`*^9}, 
   {3.8193034098916764`*^9, 3.8193035599418974`*^9}, {3.819303646201226*^9, 
   3.8193036515027227`*^9}, {3.8193036912372627`*^9, 
   3.8193037667485657`*^9}, {3.8193038045967274`*^9, 
   3.8193038804710274`*^9}, {3.8193039368626165`*^9, 3.819303960296561*^9}, {
   3.8193042019942627`*^9, 3.819304304304721*^9}, {3.819304338698412*^9, 
   3.8193044435899553`*^9}, {3.8193044912848225`*^9, 3.819304531887264*^9}, {
   3.819304699361288*^9, 3.8193047364690647`*^9}, {3.819305210993579*^9, 
   3.8193055047831926`*^9}, {3.8193055639965887`*^9, 3.819305774843767*^9}, {
   3.8193059478703403`*^9, 3.819305968267867*^9}, {3.8193061209956503`*^9, 
   3.8193061299750924`*^9}, {3.8193142401229143`*^9, 3.819314265233693*^9}, {
   3.8193153142435246`*^9, 3.819315314670029*^9}, {3.8193153465117235`*^9, 
   3.819315446932372*^9}, {3.819411150878492*^9, 3.819411152483901*^9}, {
   3.819459389517168*^9, 3.819459391233161*^9}, {3.819460004760043*^9, 
   3.8194600074682074`*^9}, {3.8194608650992413`*^9, 3.819460886816124*^9}, {
   3.8194613841926346`*^9, 3.8194616106507425`*^9}, {3.8194616490044036`*^9, 
   3.8194616811144433`*^9}, {3.8194617185048847`*^9, 3.819461775328508*^9}, {
   3.8194619219427743`*^9, 3.819461922321254*^9}, {3.8194622332793164`*^9, 
   3.8194623292212567`*^9}, {3.8194623601207714`*^9, 
   3.8194623961000957`*^9}, {3.8194628575139103`*^9, 
   3.8194629208316975`*^9}, {3.819463185421892*^9, 3.819463188809188*^9}, {
   3.819464109295348*^9, 3.8194641275555296`*^9}, {3.819464934787344*^9, 
   3.819464935997485*^9}, {3.8194666169500165`*^9, 3.8194666789875655`*^9}, {
   3.8194694068464046`*^9, 3.819469410144925*^9}, {3.8196660786319504`*^9, 
   3.8196661071459355`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitializeRINDependentQuantities", "[", "useRIN_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phases", " ", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
        RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"useRIN", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
         RowBox[{"1", "+", 
          RowBox[{"Total", "[", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"dBVpkPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], 
                "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"HzPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], 
                    RowBox[{"t", "/", "scl"}]}], "+", 
                   RowBox[{"phases", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}],
              ",", 
             RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}],
         ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", "1"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{"2", "\[Pi]", "*", "102712885", " ", 
       RowBox[{"fieldProfile780A", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       SqrtBox[
        RowBox[{"RIN780A", "[", "t", "]"}]]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]2", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{"2", "\[Pi]", "*", "24538455", " ", 
       RowBox[{"fieldProfile480", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}], "2"], "*", "102712885", " ", "*", 
       RowBox[{"24538455", "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"Abs", "[", "\[CapitalDelta]1", "]"}]}], ")"}]}]}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFg", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ag", " ", 
           SuperscriptBox[
            RowBox[{"fieldProfile780A", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480g", " ", 
           SuperscriptBox[
            RowBox[{"fieldProfile480", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"]}]}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFe", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ae", " ", 
           SuperscriptBox[
            RowBox[{"fieldProfile780A", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480e", " ", 
           SuperscriptBox[
            RowBox[{"fieldProfile480", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"]}]}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFr", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ar", " ", 
           SuperscriptBox[
            RowBox[{"fieldProfile780A", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480r", " ", 
           SuperscriptBox[
            RowBox[{"fieldProfile480", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "2"]}]}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFg", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFr", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Bbias", " ", "=", " ", 
      RowBox[{"3.6", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"magnetic", " ", "bias", " ", 
       RowBox[{"field", " ", "[", "T", "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diffZ1ge", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "0", ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diffZ1er", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FZeemanMatElem", "[", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFge", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1ge"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFer", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1er"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8194694170145273`*^9, 3.8194694918121986`*^9}, {
  3.8194695309582553`*^9, 3.8194695523643446`*^9}, {3.8194695913249955`*^9, 
  3.8194695963844547`*^9}, {3.8196661179676476`*^9, 3.819666172302586*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<g-e differential Zeeman shift\>\"", "\[IndentingNewLine]", \
"diffZ1er", "\[IndentingNewLine]", "\"\<e-r differential Zeeman shift\>\"", "\
\[IndentingNewLine]", "diffZ1ge"}], "Input"],

Cell[BoxData["\<\"g-e differential Zeeman shift\"\>"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9}],

Cell[BoxData["7.37832447859495`*^7"], "Output",
 CellChangeTimes->{3.8194666806633835`*^9}],

Cell[BoxData["\<\"e-r differential Zeeman shift\"\>"], "Output",
 CellChangeTimes->{3.819466680670319*^9}],

Cell[BoxData["2.106122502744238`*^7"], "Output",
 CellChangeTimes->{3.8194666806753426`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Run", "Subsection",
 CellChangeTimes->{{3.819459448353262*^9, 3.819459449525453*^9}}],

Cell["\<\
possible methodological issue: effects from fast frequencies in the time \
series RIN will not be resolved unless the time step size in the solver is < \
1/f_fast\
\>", "Text",
 CellChangeTimes->{{3.819463368989073*^9, 3.8194634390598507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fTable", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "fMHz", "*", "1*^6"}], ",", 
       RowBox[{"{", 
        RowBox[{"fMHz", ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "17"}], ",", 
           RowBox[{"-", "11"}], ",", ".4"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTable", " ", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "50", ",", "100"}], "}"}], "/", 
      RowBox[{"(", "1*^6", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endPts", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{"j", ",", "i"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<", 
           RowBox[{
            RowBox[{"Length", "[", "TTable", "]"}], "+", "1"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"T", "=", 
            RowBox[{"TTable", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"endPts", " ", "=", " ", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"linetime", "=", 
            RowBox[{
             RowBox[{"Timing", "[", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", " ", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "fTable", "]"}], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "on", " ", "each", " ", "frequency", " ", "step", " ", 
                   "need", " ", "to", " ", "recalculate", " ", "the", " ", 
                   "RIN", " ", "time", " ", "series", " ", "and", " ", 
                   "parameters", " ", "that", " ", "depend", " ", "on", " ", 
                   "it"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"useRIN", " ", "=", " ", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", 
                    "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                  "InitializeRINDependentQuantities", "[", "useRIN", "]"}], 
                  ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"f", " ", "=", 
                   RowBox[{"fTable", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  RowBox[{"(*", 
                   RowBox[{"780", " ", "frequency", " ", "tuning"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"avgsNum", " ", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", 
                    ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"r", "[", "t_", "]"}], ":=", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{"vx", " ", 
                    RowBox[{"t", "/", "scl"}]}]}], ",", 
                    RowBox[{"y", "+", 
                    RowBox[{"vy", " ", 
                    RowBox[{"t", "/", "scl"}]}]}], ",", 
                    RowBox[{"z", "+", 
                    RowBox[{"vz", " ", 
                    RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"args", "[", "t_", "]"}], ":=", 
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"r", "[", "t", "]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"endPt", " ", "=", " ", "0"}], ";", 
                  RowBox[{"(*", 
                   RowBox[{
                   "the", " ", "average", " ", "loop", " ", "gets", " ", "a", 
                    " ", "single", " ", "data", " ", "point"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"avgstep", "=", "1"}], ",", 
                    RowBox[{"avgstep", "<", 
                    RowBox[{"avgsNum", "+", "1"}]}], ",", 
                    RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Haf", "[", "t_", "]"}], ":=", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", GridBox[{
                    {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], "0"},
                    {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                    {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                    }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
                    RowBox[{"BuildSchroedingerSystem", "[", 
                    RowBox[{
                    RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"result", "=", " ", 
                    RowBox[{"Timing", "[", 
                    RowBox[{"First", "@", 
                    RowBox[{"NDSolve", "[", 
                    RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"time", " ", "+=", " ", 
                    RowBox[{"result", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"soln", "=", 
                    RowBox[{"result", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"endPt", "+=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"soln", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
                    RowBox[{"t", "\[Rule]", " ", "tmax"}]}], ")"}], "/", 
                    "avgsNum"}]}], ";"}]}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<solved system in `` mins\>\"", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                    "]"}]}], "]"}], "]"}], ";"}], "*)"}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"endPts", ",", "endPt"}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step T=`` \[Mu]K in `` mins\>\"", ",", 
              RowBox[{
               RowBox[{"T", 
                RowBox[{"(", "1*^6", ")"}]}], "//", "N"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"linetime", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"linetime", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", "endPts"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step T=\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\) \[Mu]K \
in \\!\\(\\*RowBox[{\\\"\\\\\\\"0.11\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step T=`` \[Mu]K in `` mins", 0., 
   NumberForm[0.10572916666666667`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step T=\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\) \[Mu]K \
in \\!\\(\\*RowBox[{\\\"25\\\"}]\\) mins\"\>",
  StringForm["ran step T=`` \[Mu]K in `` mins", 50., 25],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196748883273306`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step T=\\!\\(\\*RowBox[{\\\"100.`\\\"}]\\) \[Mu]K \
in \\!\\(\\*RowBox[{\\\"26\\\"}]\\) mins\"\>",
  StringForm["ran step T=`` \[Mu]K in `` mins", 100., 26],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.819676478291525*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \\!\\(\\*RowBox[{\\\"51\\\"}]\\) \
mins\"\>",
  StringForm["Total run time `` mins", 51],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.819676478297516*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"populationData", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fTable", "/", 
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]", " ", "1*^6"}], ")"}]}], ",", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"solnList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"]}], "}"}]}], "&"}], 
     ",", 
     RowBox[{"Length", "[", "solnList", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", " ", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`` \[Mu]K\>\"", ",", 
        RowBox[{
         RowBox[{"TTable", "[", 
          RowBox[{"[", "#", "]"}], "]"}], 
         RowBox[{"(", "1*^6", ")"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"Length", "[", "TTable", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"populationData", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<780A Frequency Scan\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<780A Frequency Tuning [MHz]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8194125456938157`*^9, 3.8194126523690124`*^9}, 
   3.819412742855522*^9, {3.8194128362080736`*^9, 3.8194129273518863`*^9}, {
   3.819413478306292*^9, 3.8194135408248096`*^9}, {3.819455327081751*^9, 
   3.819455336973714*^9}, {3.819455740805073*^9, 3.819455747844431*^9}, {
   3.819455786386036*^9, 3.8194558277574987`*^9}, {3.8194563401706667`*^9, 
   3.8194563409072495`*^9}, 3.8194599395794754`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-17., 0.9715512220776411}, {-16.6, 
         0.9978987767715238}, {-16.2, 0.9592296352140802}, {-15.8, 
         0.9132420698652783}, {-15.399999999999999`, 
         0.9890755030695109}, {-15., 0.8784776262169646}, {-14.6, 
         0.3611412057449486}, {-14.200000000000001`, 
         0.043566888804913974`}, {-13.799999999999999`, 
         0.40876495265820856`}, {-13.399999999999999`, 
         0.9044018845995317}, {-13., 
         0.983235230352757}, {-12.600000000000001`, 
         0.9127270983512553}, {-12.200000000000001`, 
         0.9645626029408448}, {-11.799999999999999`, 
         0.9969991912166698}, {-11.399999999999997`, 
         0.9710553179199262}, {-11., 0.9832333527256396}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-17., 0.9742816515940869}, {-16.6, 
         0.9980296831421578}, {-16.2, 0.9590975508322581}, {-15.8, 
         0.9223419574530564}, {-15.399999999999999`, 
         0.9876241659484503}, {-15., 0.8855102063147718}, {-14.6, 
         0.35037533011531163`}, {-14.200000000000001`, 
         0.09439821636509176}, {-13.799999999999999`, 
         0.42565527492579497`}, {-13.399999999999999`, 
         0.9063145074693824}, {-13., 
         0.9842344922236722}, {-12.600000000000001`, 
         0.9144409487512045}, {-12.200000000000001`, 
         0.9670295113282348}, {-11.799999999999999`, 
         0.9971470026316894}, {-11.399999999999997`, 0.97136334463095}, {-11.,
          0.9877120653820749}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-17., 0.9726232544387623}, {-16.6, 
         0.9986227723854546}, {-16.2, 0.9585382828044287}, {-15.8, 
         0.91937506156169}, {-15.399999999999999`, 0.9871829389747299}, {-15.,
          0.871974125303407}, {-14.6, 
         0.3643323440191495}, {-14.200000000000001`, 
         0.12261288632244104`}, {-13.799999999999999`, 
         0.5005827181470156}, {-13.399999999999999`, 
         0.9071317357760564}, {-13., 
         0.9800908237144211}, {-12.600000000000001`, 
         0.915392661575583}, {-12.200000000000001`, 
         0.9685749700846129}, {-11.799999999999999`, 
         0.9960977663989562}, {-11.399999999999997`, 
         0.9717037038324786}, {-11., 
         0.9831770069522552}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {-10.90625, 0}, 
     PlotRange -> {{-17., -11.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-10.90625, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"780A Frequency Tuning [MHz]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"780A Frequency Scan\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{-17., -11.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 0], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 50], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 100], Editable -> False]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.819412851404344*^9, 3.8194134887844186`*^9, {3.8194135234821243`*^9, 
   3.8194135413887587`*^9}, 3.8194136843833942`*^9, 3.8194522123533278`*^9, 
   3.8194557494035735`*^9, {3.819455789291876*^9, 3.8194558286231813`*^9}, 
   3.819456342513282*^9, 3.819465990278959*^9, 3.819466142417485*^9, 
   3.819466887317057*^9, 3.819467112822283*^9, 3.8196730013107967`*^9, 
   3.8196771625455227`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"freqScanFit", "[", "data_", "]"}], ":=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Exp", "[", 
        FractionBox[
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
         RowBox[{"2", 
          SuperscriptBox["\[Sigma]", "2"]}]], "]"}]}], "}"}], ",", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.819673137890054*^9, 3.8196731638407764`*^9}, {
  3.819673218629583*^9, 3.819673236052698*^9}, {3.8196732703050404`*^9, 
  3.819673299614642*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.819673315704982*^9, 3.8196733225181885`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\[CapitalDelta]1", "+", 
    RowBox[{"dUge", "@@", 
     RowBox[{"args", "[", "0", "]"}]}], " ", "+", " ", "\[CapitalDelta]2", 
    " ", "+", 
    RowBox[{"dUer", "@@", 
     RowBox[{"args", "[", "0", "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "\[Pi]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8194664412301006`*^9, 3.8194664710155706`*^9}}],

Cell[BoxData["1.509496629113952`*^7"], "Output",
 CellChangeTimes->{{3.8194664455733786`*^9, 3.8194664718276334`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"dUge", "@@", 
    RowBox[{"args", "[", "0", "]"}]}], " ", ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "\[Pi]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.819466523389953*^9, 3.8194665511233387`*^9}}],

Cell[BoxData["3.351998145620259`*^6"], "Output",
 CellChangeTimes->{{3.8194665450400147`*^9, 3.8194665520073423`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"dUer", "@@", 
    RowBox[{"args", "[", "0", "]"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "\[Pi]"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8194665580121117`*^9, 3.8194665643452983`*^9}}],

Cell[BoxData["1.174296814551933`*^7"], "Output",
 CellChangeTimes->{3.8194665646812572`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "\[CapitalDelta]1", ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", "\[Pi]"}], ")"}]}]], "Input",
 CellChangeTimes->{3.819466502247183*^9}],

Cell[BoxData[
 RowBox[{"-", "2100000000"}]], "Output",
 CellChangeTimes->{3.819466503325226*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "fname", "=", 
     "\"\<plot_rydberg_780Afrequency_scan_varied_0_50_75_100_uK.png\>\""}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"fname", ",", "plt"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "fname", "=", 
     "\"\<soln_rydberg_780Afrequency_scan_varied_0_50_75_100_uK.csv\>\""}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"fname", ",", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "fTable", "}"}], ",", "solnList"}], "]"}]}]}], "]"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8194558720208583`*^9, 3.8194559606972227`*^9}, {
   3.819456020568077*^9, 3.819456026206417*^9}, {3.8194560634184227`*^9, 
   3.819456126228094*^9}, {3.8194561738043723`*^9, 3.819456176973164*^9}, {
   3.8194563112692614`*^9, 3.819456352032028*^9}, 3.81946598426628*^9}],

Cell[BoxData["\<\"plot_rydberg_780Afrequency_scan_varied_0_50_75_100_uK.png\"\
\>"], "Output",
 CellChangeTimes->{3.819456122204848*^9, 3.819456178692423*^9, 
  3.8194563540131607`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "show", " ", "Rabi", " ", 
    RowBox[{"oscillation", ".", " ", "need"}], " ", "to", " ", "edit", " ", 
    "to", " ", "look", " ", "at", " ", "slices", " ", "of", " ", 
    "populationData", " ", "instead"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fRedDetuning", " ", "=", 
    RowBox[{"2", "\[Pi]", " ", "scl", "  ", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"populationData", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], " ", ";"}]}]], "Input",
 CellChangeTimes->{{3.8192365509559193`*^9, 3.8192365745778503`*^9}, {
   3.8192366930761423`*^9, 3.8192368119067802`*^9}, {3.8192368672887406`*^9, 
   3.8192368815826783`*^9}, {3.819237002905106*^9, 3.8192370831028223`*^9}, {
   3.819237116309847*^9, 3.819237149797676*^9}, {3.819237188010098*^9, 
   3.819237188092434*^9}, {3.8192372983978124`*^9, 3.819237345013156*^9}, {
   3.8192374304293003`*^9, 3.81923743748522*^9}, 3.8192376578636255`*^9, {
   3.819237757329837*^9, 3.8192377651074557`*^9}, {3.8192380227239037`*^9, 
   3.819238036666445*^9}, {3.819242425386094*^9, 3.8192424949364243`*^9}, 
   3.819288617780305*^9, {3.819289422071025*^9, 3.8192894220760098`*^9}, {
   3.819303292027187*^9, 3.8193032958650694`*^9}, {3.8193033358171844`*^9, 
   3.8193033365365963`*^9}, {3.819456881796772*^9, 3.819456938203231*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"step \\!\\(\\*RowBox[{\\\"0\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.007\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["step ``, `` mins", 0, 
   NumberForm[0.00703125, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.819237327786247*^9, 3.819237346462923*^9}, 
   3.819237443754485*^9, 3.8192376094394627`*^9, 3.8192379935333366`*^9, 
   3.819238037764179*^9, 3.8192423845136323`*^9, 3.819242478102248*^9, 
   3.819243280798976*^9, {3.8193032970709143`*^9, 3.819303339395804*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1666.3918720807635`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.81923732804727*^9, 3.819237346765306*^9}, 
   3.819237444029011*^9, 3.819237609727478*^9, 3.819237993907744*^9, 
   3.8192380379632196`*^9, 3.819242384731941*^9, 3.819242478385591*^9, 
   3.8192432810098333`*^9, {3.819303297237833*^9, 3.819303339566759*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc testing", "Section",
 CellChangeTimes->{{3.8194568337169476`*^9, 3.8194568379666376`*^9}}],

Cell[CellGroupData[{

Cell["RIN data to time series", "Subsubsection",
 CellChangeTimes->{{3.819456946258193*^9, 3.819456956348152*^9}, 
   3.8194574837036724`*^9, {3.819458376311167*^9, 3.8194583869456005`*^9}}],

Cell["780A RIN data, post-noise eater", "Text",
 CellChangeTimes->{{3.8194592742753935`*^9, 3.8194592863487315`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"VDC", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"contents", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"header", " ", "=", 
   RowBox[{"contents", "[", 
    RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"HzPts", ",", "dBVpkPts"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"contents", "[", 
     RowBox[{"[", 
      RowBox[{"15", ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dBVpkPts", "-=", 
   RowBox[{"10", 
    RowBox[{"Log10", "[", "VDC", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RINData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"HzPts", ",", "dBVpkPts"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8194571026276455`*^9, 3.8194571612992177`*^9}, {
  3.819457309573141*^9, 3.8194573208999853`*^9}, {3.819457486352996*^9, 
  3.8194575112408476`*^9}, {3.819457633214981*^9, 3.81945763750745*^9}, {
  3.8194578251097155`*^9, 3.819457841580284*^9}, {3.8194578959781523`*^9, 
  3.819458050021988*^9}, {3.8194580975524654`*^9, 3.819458151401802*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"fdata", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819457645150489*^9, 3.819457647510519*^9}, {
  3.8194577473811693`*^9, 3.8194578526985407`*^9}, {3.819457946273595*^9, 
  3.819457948999111*^9}, {3.819458322204796*^9, 3.819458338341813*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 102400.}, {-75.4418, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.819457512885433*^9, 3.819457572779807*^9, 3.819457640352894*^9, {
   3.819457752190879*^9, 3.819457811757634*^9}, 3.819457853260895*^9, 
   3.8194581893216295`*^9, {3.8194583271683702`*^9, 3.819458338809125*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeRIN", "[", "t_", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dBVpkPts", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"HzPts", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "t"}], "+", 
            RowBox[{"RandomReal", "[", "]"}]}], ")"}]}], "]"}]}], "&"}], ",", 
      RowBox[{"Length", "[", "dBVpkPts", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.819458368623186*^9, 3.8194583695414534`*^9}, {
  3.8194584267052593`*^9, 3.819458488630851*^9}, {3.819458703065729*^9, 
  3.819458843010213*^9}, {3.8194592286536636`*^9, 3.819459231696415*^9}}],

Cell[BoxData[
 RowBox[{"timeRIN", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.8194589271098003`*^9, 3.8194589296698475`*^9}}],

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{"0.12732698340348503`", "\[VeryThinSpace]", "+", 
   RowBox[{"0.2240973466854182`", " ", "\[ImaginaryI]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8194589638280244`*^9, 3.8194589762592344`*^9}}],

Cell[BoxData["0.12732698340348503`"], "Output",
 CellChangeTimes->{{3.819458968488312*^9, 3.8194589768434343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"timeRIN", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "0.0001"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8194588602065496`*^9, 3.8194588847845573`*^9}, {
   3.819458940048662*^9, 3.819458979183031*^9}, 3.8194590763582144`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
hKhe9DneXITcP9468MeLIJnP4xuUkoJiTnBEv3FchNftPJv2R4sRjt07H/l9
EchFBUh0CAW4HfXEdPguwrh1n+hI+C8035bLTRW6CDzhbCMSp/3QEUO/37di
FsGPt/C2QWcKOn3oPY9F8iKMFuTSrY3/QELBivFJ2Qfnb35SDIz4IgUBft4R
vAgndriX5BYssU4tZSJj9SJUyBZ4WDZmYGuN6UsKjYvQF6DJGLIWi/w2qpPs
OxbBiKp+mPR2GU52j+bLG1gEn64rDdkdBajqvH3K/MQilCS9vUGUm4f7CzWu
nFtchHva9W9fhhehdWWU9mRzEaK/6L3nOV2Bj8+wCHgQLQHjyeavcTHFmMtu
K72CbAl+vuUgf07pjBBTx7XtE0vwqdu7PrIjBz9KzczkZ1qCV4TQp/QdsthI
2lvw1ZklkNZ6fet1RwZy6jfODuJZgrHFodTHtNko1Ez+RtPVJehZla2Ld4jA
2ZS8uYdvLoHgWhVxZKoD+htFJiJ6awn0L/OSecjnovGb43lvZZdASMXKRDy+
BO03l9+MUVqC4S/c9TWhJeiUXkRBz9MliDNg476y64L5iGzEaLSXYHa07dM7
ngJ81/9Z0V2DJSh0uHuMdcUXPee7iaxMl+B9rb7D2jVnbF7JUJz2aQkIYYd7
eiYeY/dna+IT9ktQ/NT4UeFLXxSz0lLC+m0JRBprJJs/fMH4a6qk0o8lOEI9
zhpU5YXaz7iXOf9cArkCVYpn0qF4PtdAqujXEhyaf3S5eF8DHXkgU7GcuAQT
ISI3Ww729ekJrjsXspbg0hyD2vW2UiRkfahKvWgJzih0Pjd1zkQK9MN3fSqX
gPdtRs+kQxTSSSyurmlYAjNjExKn9iRkLRVyb79tCdYtHxe0WeUjv27L2mv9
S7BIOd8Pu6U4+d1jWb3xJYAPBCqye8W4ikyoPnT+//Xk3Tn/sRT1h52Ua11f
gm+FjkeP3svE60JLf8gJy+DCeFY947IDOv73r7z40WXI3uQKm/jyGHG9Svz7
nnoZ4glUNm7ypRjtuv4Xz7AMp8btrK6/9UKPfHSbBtiXgYjtSn/3gwhkdPGO
Iv2FZfjNYcBJ7JuNnUo5W2SvLMPcOeensjoRqC+xJ+iqyDIkkkQZvCyKwYIB
P7QZby2DYOoZxs6lcPTNXv4S4f4yuEYfi7HSzMMjRkfWxpSXoaA86OQ32kAs
+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
n6Cfv/+hdRA=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.819459149673397*^9, 
  3.8194592388258524`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXXusbUdZX91r7cd53HMfvbT3XulLrlh5lUQT638aEyVGkT80ISa2vS09
KSFwG6gREog9WAsmyCOoRO0RTCBWFBW1l2qkVImUSMkRSKg8IiFELgGTagig
EHI8v5n5Zr6Z/c1as55773vOH+fevddea+ab7/v9fjPzzay1fuHCfffc/coL
9738rgs3/uyrL9x7z8vves2NP3Px1QeH8quy7Kp7siz75I0ZPu8ffDT/nMn2
9/ezfH97e1t9Un/498XqY5b0u/q59lXL/nsnrfq8PnbHP+99Zf+2nUd+8qkv
/Vd274qcvqeP4bT7//Lxz5/41ne+m80aFYHLcfqN33j622IRZ/UxVIHvZ/77
m/+b/VIYi4eFC8/XqwCfcQy/eRUEdpvTP/KmP/k4Tlff3iIUq6oa3frFrzx9
roUhphGz737v+ziurn1+PeNuE6p6btTgL736HY+lGnzKGXzzV7/xTfWtiDcC
5eAYyq3biJe46nH8hV++/D/ZRh8NU8aZhuH7u//og5/qqmGb+hiMRyNe9Kkv
fD1bjzeWzFSN6K+xJ9UVqvLctladJrT4nIDHqTo28bxwcARNgh3PqXSIV8NE
l+bVYErDOcf0JcCbai++/VRbf2U5DP3OXb/1ISUvZ3v0nOelCs9N/DpVMTdp
b+or17K93e0MHt3e3skuXTYdz/5etrtzKbsMlT34vVBnjLOdS5ethQd/KhJb
8QhIVuG7RuwYP+MnoBmNV2640aEZDVDfbkiMzjP0sT/9/Q/sve19f/9ZTjrv
vM3yKNqImaa99m8/+kXYo77Nlj+yxvvZ/t5utm2iyD7n1ozL2aWd7Wx3b99c
kkwtilYksPwSG9iTQnGbtYI98QJ2cATAQfd4XFeLS17y5FNfwzcUp2I2Tox/
LqjoKI4J26zamMg1JlT7ydWjWpiYSph4+p7f/gdVcdBgDoyDhl++tJvt7Oy4
v12Nj8uXdhi7D9i/vZvt7e+bwrRI7O45Ro0BlfU+EDL1ijs44n2ftUMMXWcQ
w7vnpUSMUS8MXfGdKxXqhTKpMo3QPPXrv/dPUL+uQGXbKoFq5myz3ew1vgIB
VZAXjSrIjULVhBQIomRQlTsFIlo3V6CJhC+ccqJDiJlWoL/HueraUbew0ygu
7n30if/4q3f82ZN0vA3ydDUTbjVHYQkIPYCY86glGn7q36l1mvlLBOBaGQBt
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
B7YOjikWefUmcoarbHHAIohzYHmUGwpYBQcWOrOpZPTyYwtnLwpbvLEp2Mqd
O7GMR/iSWL0hBL1vyKlx8QjSNx4SfCh7CcAXfZfZ6gDSd8A1HIhzS47GuwSO
AIued01jvbX3LrCoG7vGH9jGG6cG54RN9oBx3y5V8OB4nTiX2FgzdneL15mE
V/xPb6WSqmgKXYpGJ9CVXv5irvUe0zftAuKi1i4e32PuJWoZnU/41sbGbAsw
PhWUqjhMuCer6uN+JPzAMhH2HaEbsgGoiaanMCAXbDeqFkadLkvlh8ctHfH1
Mn7Q5BFlnemEFtI7hqRNgM2oMuVUwXFIO45hssCpg7OpbN4VSBQmmDpKhNsl
EghTcMLY0VACZ8x96HwaH/Inq0Eg49fwJY3KF+uLIZKaFndBJL6ciN9qEInO
6YNIyHNRx9Q5kTys9Egkepxw2AfNEckMAfFWd3IIfj/WF5dsLyZyaRKONGDX
S5586mvslZ0NuyLj2LCCRTJJ1d0zk2z0GjIJ16tFEhZfu2AyK2cSH9gcGibh
Nx7gKJP0Mbz6XEM/Bho3oFTVbLTmFCxEUUec6oFT/C3zMU7hmILVAjlV0Owa
ldv3VzpaKc4vGa3Irwm0ssfGzsUBmruiFaUjKmjF3uSJT0SvYqHMwlinKbPm
3m6oQmlY5zls/TAyjE3uJeBZDjTj2Ny9MWbXRwm9NiR64RfkEF70qS98nZys
fjfvPOfV0G8ok82/GlJtzKmGtQe1QFNU843KruBb7hhE027iXNaAdCw/j991
/gZNijNvEmMefzHlEe3q045NimlVj6iXpXJPmdsp9yYh97DHFT+PyulH3xdI
P/tbd/QzFMCNboQKTkHDQLoPrgYDeWAGZKCUly1WkpVjWnb0vDuR2QlhVrwq
Y+ckXFeiBhlHetmXSUOC2h1+jQmaewRVx2pSE5O1FaDmzV/9xjerqUlhjVCT
Cm1FzYmAYvbu9YCuc6R44C8e+xyOoUFNGYvsEQ0AFsVYjK74NCGZsaZMdR+B
dWxMiebvGuGb7qi66n6VD2dtvzp2ljjXKz+PicXwMhL3+jdVSk7VuvJHGs0Q
Fo4hExTCqQcvk1P34BVOJZvQWUW8gs5miE8ICpIkAqPtbAA7vuGu9RJSjxxm
LA7GMqnpmoWS2gBKSlJhJJbA8bl9Fxr7Qq5G6nEryK4K541Rjh2lkX7iv/dc
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
wCISG/Xvi2v8rn6ufdUK/55d9f/0g85B\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 805},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 245, 3, 81, "Subsection"],
Cell[828, 27, 91, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956, 33, 156, 2, 70, "Section"],
Cell[1115, 37, 73, 1, 30, "Input"],
Cell[1191, 40, 17981, 470, 1622, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19209, 515, 115, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[19349, 520, 7593, 166, 623, "Input"],
Cell[26945, 688, 1061, 26, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28043, 719, 6006, 138, 260, "Input"],
Cell[34052, 859, 738, 12, 22, "Print"],
Cell[34793, 873, 129920, 2202, 282, "Output"]
}, Open  ]],
Cell[164728, 3078, 94, 1, 30, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[164859, 3084, 265, 3, 56, "Section"],
Cell[165127, 3089, 155, 2, 30, "Text"],
Cell[165285, 3093, 294, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[165604, 3105, 98, 1, 49, "Subsection"],
Cell[165705, 3108, 4738, 122, 468, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[170480, 3235, 176, 2, 41, "Subsection"],
Cell[170659, 3239, 12943, 312, 794, "Input"],
Cell[183605, 3553, 8434, 210, 679, "Input"],
Cell[CellGroupData[{
Cell[192064, 3767, 203, 2, 88, "Input"],
Cell[192270, 3771, 108, 1, 30, "Output"],
Cell[192381, 3774, 91, 1, 30, "Output"],
Cell[192475, 3777, 106, 1, 30, "Output"],
Cell[192584, 3780, 92, 1, 30, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[192725, 3787, 91, 1, 41, "Subsection"],
Cell[192819, 3790, 254, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[193098, 3799, 20071, 391, 1162, "Input"],
Cell[CellGroupData[{
Cell[213194, 4194, 449, 8, 22, "Print"],
Cell[213646, 4204, 396, 7, 22, "Print"],
Cell[214045, 4213, 396, 7, 22, "Print"],
Cell[214444, 4222, 339, 7, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214832, 4235, 2539, 65, 173, "Input"],
Cell[217374, 4302, 20984, 422, 274, "Output"]
}, Open  ]],
Cell[238373, 4727, 658, 19, 59, "Input"],
Cell[239034, 4748, 94, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[239153, 4753, 408, 11, 30, "Input"],
Cell[239564, 4766, 118, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239719, 4772, 252, 7, 30, "Input"],
Cell[239974, 4781, 118, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240129, 4787, 249, 7, 30, "Input"],
Cell[240381, 4796, 92, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240510, 4802, 175, 5, 30, "Input"],
Cell[240688, 4809, 96, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240821, 4816, 1000, 26, 88, "Input"],
Cell[241824, 4844, 185, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242046, 4852, 1611, 31, 50, "Input"],
Cell[243660, 4885, 524, 9, 22, "Print"],
Cell[244187, 4896, 21724, 367, 253, "Output"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[265972, 5270, 101, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[266098, 5275, 190, 2, 39, "Subsubsection"],
Cell[266291, 5279, 117, 1, 30, "Text"],
Cell[266411, 5282, 1437, 38, 145, "Input"],
Cell[CellGroupData[{
Cell[267873, 5324, 390, 7, 30, "Input"],
Cell[268266, 5333, 6499, 118, 229, "Output"]
}, Open  ]],
Cell[274780, 5454, 1002, 27, 69, "Input"],
Cell[275785, 5483, 130, 2, 30, "Input"],
Cell[275918, 5487, 241, 4, 30, InheritFromParent],
Cell[276162, 5493, 115, 1, 30, "Output"],
Cell[CellGroupData[{
Cell[276302, 5498, 404, 9, 30, "Input"],
Cell[276709, 5509, 79345, 1316, 220, 66377, 1102, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

