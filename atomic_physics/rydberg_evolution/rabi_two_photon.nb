(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    640572,      12084]
NotebookOptionsPosition[    635515,      11916]
NotebookOutlinePosition[    635856,      11931]
CellTagsIndexPosition[    635813,      11928]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["two-photon rabi flopping", "Title"]], "Subsection",
 CellChangeTimes->{{3.8120320269110794`*^9, 3.812032045999884*^9}, {
  3.812149200707573*^9, 3.8121492050945826`*^9}, {3.818892597097991*^9, 
  3.8188926073392277`*^9}}],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.819201396926625*^9, 3.8192014024230766`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["global definitions", "Section",
 CellChangeTimes->{{3.8192014094166317`*^9, 3.8192014473494415`*^9}, {
  3.819201691049264*^9, 3.819201712767215*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"get", " ", "from", " ", "local", " ", "files"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<../../constants/rbconsts.m\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<../../constants/physconsts.m\>\""}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "CONSTANTS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]780A", " ", "=", "2414176448051179.0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      SubscriptBox["S", 
       RowBox[{"1", "/", "2"}]], "F"}], "=", 
     RowBox[{
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"5", 
        SubscriptBox["P", 
         RowBox[{"3", "/", "2"}]], "F"}]}], "=", "3"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]480", " ", "=", "3928955767695494.5"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      SubscriptBox["P", 
       RowBox[{"3", "/", "2"}]], "F"}], "=", 
     RowBox[{"3", " ", "\[Rule]", " ", 
      RowBox[{"84", 
       SubscriptBox["D", 
        RowBox[{"5", "/", "2"}]]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TFORT", " ", "=", "1*^-3"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "K", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]FORT", "=", "1.064*^-6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wFORT", "=", "2.5*^-6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]rFORT", " ", "=", 
     RowBox[{
      FractionBox["1", "wFORT"], 
      SqrtBox[
       FractionBox[
        RowBox[{"2", " ", "kB", " ", "TFORT"}], "mRb"]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"radial", " ", "trap", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]zFORT", " ", "=", 
     RowBox[{
      FractionBox["\[Lambda]FORT", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wFORT", "2"]}]], 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "kB", " ", "TFORT"}], "mRb"]]}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{"axial", " ", "trap", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ag", "=", "3.20346392953120*^-34"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ae", "=", 
     RowBox[{"1.52739309640219*^-34", "+", 
      RowBox[{"-", "3.817491143122172*^-35"}], "+", 
      RowBox[{"-", "4.5814576851206318*^-35"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ar", "=", 
     RowBox[{"-", "1.825469589864302*^-39"}]}], ";"}], " ", 
   RowBox[{"(*", " ", "ponderomotive", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480g", " ", "=", 
     RowBox[{"-", "2.90311524481040*^-39"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480e", " ", "=", 
     RowBox[{
      RowBox[{"-", "4.82150951678205*^-39"}], "+", "1.696626924053701*^-40", 
      "+", "4.557481703934684*^-40"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480r", " ", "=", 
     RowBox[{"-", "4.8350228219114005*^-39"}]}], " ", ";"}], 
   RowBox[{"(*", "ponderomotive", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "FUNCTIONS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AtomPositionSample", "[", "Tatom_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]rFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]rFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]zFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BuildSchroedingerSystem", "[", 
     RowBox[{"H_", ",", "psi0_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hamiltonian", "=", "H"}], ",", 
        RowBox[{"\[Psi]0", "=", "psi0"}], ",", "\[Psi]", ",", "statelength", 
        ",", "eqs", ",", "ics", ",", "sys", ",", "P", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"statelength", " ", "=", " ", 
        RowBox[{"Length", "[", "\[Psi]0", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Psi]", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
          "statelength"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ics", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"statelength", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"eqs", ",", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ics", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/.", 
               RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
             RowBox[{"\[Psi]0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sys", " ", "=", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Psi]", ",", "sys"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gJ", "[", 
      RowBox[{"L_", ",", "J_"}], "]"}], ":=", 
     RowBox[{"gL", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"J", 
          RowBox[{"(", 
           RowBox[{"J", "+", "1"}], ")"}]}], "+", 
         RowBox[{"L", 
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}]}], "-", 
         RowBox[{"Se", 
          RowBox[{"(", 
           RowBox[{"Se", "+", "1"}], ")"}]}], "\n", "+", 
         RowBox[{"gS", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", 
             RowBox[{"(", 
              RowBox[{"J", "+", "1"}], ")"}]}], "-", 
            RowBox[{"L", 
             RowBox[{"(", 
              RowBox[{"L", "+", "1"}], ")"}]}], "+", 
            RowBox[{"Se", 
             RowBox[{"(", 
              RowBox[{"Se", "+", "1"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "J", 
         RowBox[{"(", 
          RowBox[{"J", "+", "1"}], ")"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gF", "[", 
      RowBox[{"J_", ",", "F_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gJ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"F", 
            RowBox[{"(", 
             RowBox[{"F", "+", "1"}], ")"}]}], "+", 
           RowBox[{"J", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "-", 
           RowBox[{"INuc", 
            RowBox[{"(", 
             RowBox[{"INuc", "+", "1"}], ")"}]}]}], ")"}]}], "\n", "+", 
        RowBox[{"gI", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"F", 
            RowBox[{"(", 
             RowBox[{"F", "+", "1"}], ")"}]}], "-", 
           RowBox[{"J", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "+", 
           RowBox[{"INuc", 
            RowBox[{"(", 
             RowBox[{"INuc", "+", "1"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "F", 
        RowBox[{"(", 
         RowBox[{"F", "+", "1"}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Zeeman", " ", "shifts"}], ",", " ", 
     RowBox[{"only", " ", "for", " ", "diagonal", " ", "elements"}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FZeemanMatElem", "[", 
      RowBox[{"L_", ",", 
       RowBox[{"{", 
        RowBox[{"J_", ",", "mJ_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"JJ_", ",", "mJJ_"}], "}"}], ",", "Bz_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"mJ", ",", "mJJ"}], "]"}], " ", "\[Mu]B", " ", 
      RowBox[{"gJ", "[", 
       RowBox[{"L", ",", "J"}], "]"}], "mJ", " ", "Bz"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HFZeemanMatElem", "[", 
      RowBox[{"I_", ",", "L_", ",", "J_", ",", 
       RowBox[{"{", 
        RowBox[{"F_", ",", "mF_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"FF_", ",", "mFF_"}], "}"}], ",", "Bz_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"mF", ",", "mFF"}], "]"}], "\[Mu]B", " ", "Bz", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ClebschGordan", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"F", ",", "mF"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"FF", ",", "mFF"}], "}"}]}], "]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "F"}], " ", "+", "1"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "+", "J", "+", "I"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"gJ", "[", 
            RowBox[{"L", ",", "J"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "F"], 
           SqrtBox[
            RowBox[{"J", " ", 
             RowBox[{"(", 
              RowBox[{"J", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "1"}], ")"}]}]], 
           RowBox[{"SixJSymbol", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"J", ",", "I", ",", "F"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"FF", ",", "1", ",", "J"}], "}"}]}], "]"}]}], "+", 
          "\[IndentingNewLine]", 
          RowBox[{"gI", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "FF"], 
           SqrtBox[
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{"I", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "I"}], "+", "1"}], ")"}]}]], 
           RowBox[{"SixJSymbol", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"I", ",", "J", ",", "F"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"FF", ",", "1", ",", "I"}], "}"}]}], "]"}]}]}], ")"}]}],
        ")"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxBoltzVelocitySample", "[", "Tatom_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"intensityProfile", "[", 
      RowBox[{
      "x_", ",", "y_", ",", "z_", ",", "zRx_", ",", "zRy_", ",", "zx_", ",", 
       "zy_", ",", "wx_", ",", "wy_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["x", "2"]}], 
         RowBox[{
          SuperscriptBox["wx", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"z", "-", "zx"}], "zRx"], ")"}], "2"]}], ")"}]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["y", "2"]}], 
         RowBox[{
          SuperscriptBox["wy", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"z", "-", "zy"}], "zRy"], ")"}], "2"]}], ")"}]}]]}], 
       "]"}], "/", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"z", "-", "zx"}], "zRx"], ")"}], "2"]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"z", "-", "zy"}], "zRy"], ")"}], "2"]}], ")"}]}]]}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{"Gaussian", " ", "beam", " ", "intensity", " ", "profile"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8192017178253603`*^9, 3.819201748596358*^9}, {
   3.819201786457075*^9, 3.8192019210721493`*^9}, {3.8192333030040283`*^9, 
   3.819233303662179*^9}, 3.8192345626399574`*^9, {3.819239771374568*^9, 
   3.8192397924775696`*^9}, {3.819285775000683*^9, 3.819285889342253*^9}, {
   3.8192860475803337`*^9, 3.8192860513781133`*^9}, {3.8192861562427053`*^9, 
   3.8192861565744452`*^9}, {3.819286516969108*^9, 3.8192865728787575`*^9}, {
   3.819288035743561*^9, 3.819288045107689*^9}, {3.819288340765124*^9, 
   3.819288483559705*^9}, {3.8192885713813047`*^9, 3.819288593317494*^9}, {
   3.819289466893937*^9, 3.819289546232596*^9}, {3.8192953132452016`*^9, 
   3.819295415598989*^9}, {3.8192954536273327`*^9, 3.8192954901823406`*^9}, {
   3.8192956455007443`*^9, 3.8192956635180044`*^9}, {3.819296175241294*^9, 
   3.8192962209223027`*^9}, {3.819297317521513*^9, 3.8192974164656563`*^9}, {
   3.819297582214944*^9, 3.819297610162972*^9}, {3.8192976881996393`*^9, 
   3.8192977778235197`*^9}, {3.819297809892593*^9, 3.8192978869323854`*^9}, {
   3.8192979549267964`*^9, 3.8192980401364317`*^9}, {3.819298093863152*^9, 
   3.819298410886216*^9}, {3.8192984815713863`*^9, 3.8192987166625175`*^9}, {
   3.819298755044718*^9, 3.819298771732566*^9}, {3.819298915864654*^9, 
   3.8192989915549393`*^9}, {3.819299189843501*^9, 3.8192992505829697`*^9}, {
   3.8192993362779255`*^9, 3.819299375877252*^9}, {3.819299420510394*^9, 
   3.819299467227704*^9}, {3.8192997080685263`*^9, 3.8192997652116985`*^9}, {
   3.819299796347228*^9, 3.8192998556703157`*^9}, {3.819299891777793*^9, 
   3.8192999154387817`*^9}, {3.819299953853002*^9, 3.8193000441457915`*^9}, {
   3.8193000811766577`*^9, 3.8193002227545185`*^9}, {3.819300267470413*^9, 
   3.81930028248629*^9}, {3.819304933149105*^9, 3.819305037999817*^9}, {
   3.819305229004965*^9, 3.8193052336443095`*^9}, {3.8193138139349685`*^9, 
   3.8193139052259693`*^9}, {3.819314032913005*^9, 3.819314106440956*^9}, {
   3.819314159872086*^9, 3.819314176795687*^9}, {3.8193142912158546`*^9, 
   3.819314521957082*^9}, {3.819314621196687*^9, 3.8193146568913774`*^9}, {
   3.8193147815229673`*^9, 3.819314807941039*^9}, {3.819314876922186*^9, 
   3.8193149249406075`*^9}, {3.8193150506410093`*^9, 3.819315135965601*^9}, {
   3.819315167750901*^9, 3.819315215304494*^9}, {3.8194119228847456`*^9, 
   3.819411977846978*^9}, {3.819412132308697*^9, 3.819412224227352*^9}, 
   3.8194123412854176`*^9, {3.8194144461786003`*^9, 3.8194144593695464`*^9}, 
   3.819414496023246*^9, {3.819459399423623*^9, 3.8194594021000004`*^9}, {
   3.81946096372876*^9, 3.8194611937679853`*^9}, 3.8194646621608567`*^9, {
   3.819666014463086*^9, 3.819666058313715*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["simple 3-level Rabi oscillation test", "Section",
 CellChangeTimes->{{3.8192038754475665`*^9, 3.819203889914741*^9}, {
  3.820001333966589*^9, 3.8200013389512644`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "atom", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"g", ",", "e"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", 
      ",", "\[CapitalDelta]2"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scl", " ", "=", " ", "1*^9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atomBasis", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "rabi", " ", "frequencies", " ", "and", " ", "AC", " ", "stark", " ", 
     "shifts", " ", "calculated", " ", "in", " ", 
     RowBox[{"rydberg_rabi", ".", "ipynb"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]1", "=", "695214755.6324366"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]2", " ", "=", " ", "71550273.89520717"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
     RowBox[{"2", "\[Pi]", "*", "600099"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"-", "13194689145.077131"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]2", " ", "=", 
     RowBox[{"-", "\[CapitalDelta]1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diffACStarkHFge", " ", "=", "1298349.0058336519"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diffACStarkHFer", "=", "339133.4042641225"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Haf", "=", 
      RowBox[{
       RowBox[{"(", GridBox[{
          {"0", 
           RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
          {
           RowBox[{"\[CapitalOmega]1", "/", "2"}], 
           RowBox[{"\[CapitalDelta]1", " ", "+", "diffACStarkHFge"}], 
           RowBox[{"\[CapitalOmega]2", "/", "2"}]},
          {"0", 
           RowBox[{"\[CapitalOmega]2", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
            "\[CapitalDelta]1", "+", "diffACStarkHFge", " ", "+", " ", 
             "\[CapitalDelta]2", " ", "+", "diffACStarkHFer"}], ")"}]}
         }], ")"}], "/", "scl"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scl", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]1", " ", "=", " ", "1"}], ";", 
    RowBox[{"\[CapitalOmega]2", "=", "0.3"}], ";", 
    RowBox[{"\[CapitalDelta]1", "=", 
     RowBox[{"20", "\[CapitalOmega]1"}]}], ";", 
    RowBox[{"\[CapitalDelta]2", "=", 
     RowBox[{"-", "\[CapitalDelta]1"}]}], ";", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"diagnostics", ",", " ", 
     RowBox[{
      RowBox[{"e", ".", "g", ".", " ", "reproduce"}], " ", "Shore", " ", 
      "examples"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Haf", "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
         {
          RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1", 
          RowBox[{"\[CapitalOmega]2", "/", "2"}]},
         {"0", 
          RowBox[{"\[CapitalOmega]2", "/", "2"}], 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[CapitalGamma]", "/", "2"}]}]}]}
        }], ")"}], "/", "scl"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
     RowBox[{"\[CapitalOmega]1", " ", 
      RowBox[{"\[CapitalOmega]2", "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[CapitalDelta]1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"scl", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Haf", "=", 
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"/", "2"}], "0"},
         {
          RowBox[{"1", "/", "2"}], "0", 
          RowBox[{"1", "/", "2"}]},
         {"0", 
          RowBox[{"1", "/", "2"}], "0"}
        }], ")"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Shore", ",", " ", 
       RowBox[{
        RowBox[{"page", " ", "794", " ", 
         RowBox[{"Fig", ".", " ", "13.3"}]}], "-", "1"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "5"}], ")"}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Haf", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192390395347195`*^9, 
   3.8192391336765013`*^9}, {3.8192391681624517`*^9, 3.819239205364618*^9}, {
   3.819239247806906*^9, 3.819239251535215*^9}, {3.819239552084382*^9, 
   3.819239554547559*^9}, {3.819239687324473*^9, 3.819239715963911*^9}, {
   3.8192397820159545`*^9, 3.8192397826899557`*^9}, {3.819239879006448*^9, 
   3.8192398838481426`*^9}, {3.8192406342774234`*^9, 
   3.8192406921008005`*^9}, {3.8192407358505707`*^9, 3.819240765537469*^9}, {
   3.8192409644297724`*^9, 3.8192409853614974`*^9}, {3.8192410516435223`*^9, 
   3.8192410633695292`*^9}, {3.819241203344366*^9, 3.8192412273522124`*^9}, {
   3.8192412962313366`*^9, 3.819241500542883*^9}, 3.8192415334792695`*^9, {
   3.8192416073247766`*^9, 3.819241669077629*^9}, {3.8192417151328716`*^9, 
   3.819241731777356*^9}, {3.8192417648395586`*^9, 3.8192417908514943`*^9}, {
   3.8192419070622606`*^9, 3.819241907184484*^9}, {3.819241988008176*^9, 
   3.8192420205235667`*^9}, {3.8192422332551126`*^9, 
   3.8192422352576494`*^9}, {3.8192894221202264`*^9, 3.8192894221285996`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", "2"], "0"},
     {
      FractionBox["1", "2"], "20", "0.15`"},
     {"0", "0.15`", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8192398847534113`*^9, {3.8192406794870863`*^9, 3.819240692790371*^9}, 
   3.8192407371978025`*^9, 3.819240987037568*^9, 3.819241064438328*^9, {
   3.819241492698249*^9, 3.8192415019648952`*^9}, 3.8192415345336*^9, 
   3.8192416729882517`*^9, 3.8192417342574368`*^9, 3.819241806055339*^9, 
   3.819241907722474*^9, 3.8192420210645285`*^9, 3.819242236844819*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"Haf", ",", "\[Psi]0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<BDF\>\""}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"e\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\) Rabi Oscillations\>\"", "]"}], ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.8192395716314893`*^9, 
   3.819239572460662*^9}, {3.8192396474327884`*^9, 3.8192396600483513`*^9}, 
   3.819239724419385*^9, {3.8192397972636976`*^9, 3.819239835865923*^9}, {
   3.8192410165200768`*^9, 3.81924102522064*^9}, {3.819241685565702*^9, 
   3.8192416864844785`*^9}, {3.819241802161066*^9, 3.819241803634892*^9}, 
   3.819288617708044*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8192395636890182`*^9, 3.8192395737551384`*^9}, {
   3.819239649098977*^9, 3.819239724773569*^9}, {3.819239776352786*^9, 
   3.819239798302092*^9}, {3.8192398369279604`*^9, 3.8192398908131895`*^9}, 
   3.819240705457554*^9, 3.8192407486938777`*^9, 3.819240990228368*^9, 
   3.8192410256930733`*^9, 3.819241066401521*^9, 3.819241505212696*^9, 
   3.8192415363032484`*^9, {3.819241674232566*^9, 3.8192416874700036`*^9}, 
   3.8192417441580625`*^9, 3.8192418822644453`*^9, 3.8192419798682876`*^9, 
   3.8192420255142*^9, 3.8192422527508283`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aJTeFBhG/wPJL3iI
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
yLCz8mAmmc1A+zTVS6WxnqCzuXokN4GBtQG9fg7XLcCUump3fxIDPd2bLyy8
kQWnEY/TG84y8Ly/usEbnxmSv9XNZvfzDDTT7g12/qMHYXfnJNLTGPgqhGfF
rV9OcHytyd7OdAaeM381svyCPzBjUu8JZTCw+s+tnYJUCqT1fVi0yST0/ets
50YuClwlqVgmZDMwu67g9cKCD9y5Fpf+4goDdWMn4wv77aGSr+UjTx4Dowuw
xeKwOrwI2aBsdJ2By0YHV276cpPU1bY/9vQNBnrdnlV4fU0VPqqXN1bfZGDV
hGm982E7mLjIK7pwi3jeyh0S4uIDfxac/bWLibwwXeZZ9pYM/P7XbkffZeDf
js7HLy9RQLxh6tf9ewQ/n6XjdooGwFYFMJl8QOCdT4/aes8ZVBKTzyk9YiA3
iWGVrGIA+pPv3h8oJ/Jw/alPEXKLJEvnHdtvPmagpuKzsyZbZcCt/NiR4SoG
PvjwnyjN1hzIG188lalhYMgwK86q0QMOnRYX9K9j4NuW0Vc5RP9/8hPFK7ue
8OsdI2ZZNzFfmj8o6H3GwPc+XdH3DgVC+m2umXUvGPhHxOt9aZQ7XBOyB5cm
gj+3tVynB0yg5HBO4vlmBopeqzkVJLseqt+Mv2lrJfByevPbh8UPTXv0tq1p
Z6CxztzY1jqEnlx2hGUnAzmVnzpzV7nCp+VvqpldDCzZ6nnp68UAmAqWW/ms
h4HL/zGEb5VT4G/zYVfuXiI/accooUwyrFKtzyO9Y2CpTHzVdVFvkLggPHGi
n4GDyZqdJ15bw7Z5P73HgwxsSLQZYI7tADWfO8yfHxnYlJehH4PdJFLdn87d
wwy8fdos7q2QFnDs9hbvG2HgyOXgiHkLZ+h638K4PEr47fc+Qb57ASAdqunf
Mkb4M2EiS6CLAqG/c3T+fSPyaMtI6iMMhDIW31r1SSI/um6u6hh2gWXrDo3v
nSbqzatbcq8e6IFt/ptnl2YIfFzUngXY/0fKUMcr/80xcOuktopp4G74kU8/
ELiCiR5XuVJO9aqCwe7vRhdWMrF7yFbZ1MYR2E9dpV6sZuLEzJozu3v9ocu+
Zu63ABNTY4LMV1VTYMuA/CslYSYWjziy7n8MhJCws4X+a5nYsUZvLG7ADcoW
fsWnijHRJPCZTN5hBG5OgPfzdUw8NboqtI7nB8lGokljXpLYf00k02xWCQo4
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aID/ARQBC28=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.3250590597826522`*^-21}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\
\[LongLeftRightArrow]\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\) Rabi \
Oscillations\"", 
         StringForm[
         "\!\(\*TemplateBox[{\"g\"},\n\
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},\n\"Ket\"]\) Rabi \
Oscillations"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"e\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8192395740823183`*^9, {3.819239649466631*^9, 3.819239725075938*^9}, {
   3.819239776646129*^9, 3.819239798616879*^9}, {3.8192398373443227`*^9, 
   3.819239891212536*^9}, 3.819240708064005*^9, 3.8192407511749024`*^9, 
   3.819240990799549*^9, 3.8192410259305944`*^9, 3.8192410666803017`*^9, 
   3.819241505471272*^9, 3.819241536564887*^9, {3.8192416745479774`*^9, 
   3.8192416878872385`*^9}, 3.819241744154047*^9, 3.819241882260453*^9, 
   3.8192419798633013`*^9, 3.819242026343623*^9, 3.8192422546418896`*^9}]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8192425142842827`*^9, 3.819242515867179*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["setup - beams, RIN, field-dependent shifts,...", "Section",
 CellChangeTimes->{{3.819997317215989*^9, 3.8199973187825303`*^9}, 
   3.819997557232665*^9, {3.820000023140946*^9, 3.8200000507931385`*^9}}],

Cell[CellGroupData[{

Cell["General", "Subsection",
 CellChangeTimes->{{3.819997580673704*^9, 3.81999758286849*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"scl", " ", "=", " ", "1*^9"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"time", " ", "scale", " ", 
     RowBox[{"factor", ".", " ", "multiply"}], " ", "times"}], ",", " ", 
    RowBox[{"divide", " ", "frequencies"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8199975730475397`*^9, 3.8199975777171087`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["RIN data", "Subsection",
 CellChangeTimes->{{3.819459322341485*^9, 3.8194593382829933`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"780", "A", " ", 
    RowBox[{"RIN", ".", " ", 
     RowBox[{"todo", ":", " ", 
      RowBox[{
      "bundle", " ", "setup", " ", "stuff", " ", "into", " ", 
       "function"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"VDC780A", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"contents", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"header", " ", "=", 
     RowBox[{"contents", "[", 
      RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"HzPts780A", ",", "dBVpkPts780A"}], "}"}], "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"contents", "[", 
       RowBox[{"[", 
        RowBox[{"15", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", "-=", 
     RowBox[{"10", 
      RowBox[{"Log10", "[", "VDC780A", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "compress", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compression", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dBVpkPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HzPts780A", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"HzPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "HzPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phases", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"make", " ", "phases", " ", "pre"}], "-", 
     RowBox[{
     "determined", " ", "so", " ", "each", " ", "subsequent", " ", "call", 
      " ", "within", " ", "a", " ", "measurement", " ", "sees", " ", "the", 
      " ", "same", " ", "function", " ", "of", " ", 
      RowBox[{"t", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
     RowBox[{"1", "+", 
      RowBox[{"Total", "[", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dBVpkPts780A", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"HzPts780A", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], 
                RowBox[{"t", "/", "scl"}]}], "+", 
               RowBox[{"phases", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}], 
         ",", 
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "divide", " ", "time", " ", "by", " ", "scl", " ", "because", " ", "time",
      " ", "window", " ", "in", " ", "solver", " ", "is", " ", 
     RowBox[{"mult", ".", " ", "by"}], " ", 
     RowBox[{"scl", ".", " ", "need"}], " ", "to", " ", "cancel", " ", "to", 
     " ", "get", " ", "real", " ", "time"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.819459478992441*^9, 3.8194596794743643`*^9}, {
   3.819459753112505*^9, 3.819459788323239*^9}, {3.8194655025486126`*^9, 
   3.8194656025372534`*^9}, 3.8194657684988165`*^9, {3.8194658896028366`*^9, 
   3.8194659360785265`*^9}, {3.819671207069723*^9, 3.819671220337928*^9}, {
   3.8196712785223885`*^9, 3.8196713591221867`*^9}, {3.8196714281459064`*^9, 
   3.8196715725133877`*^9}, {3.8196716098681164`*^9, 3.81967165595725*^9}, {
   3.819671850788233*^9, 3.8196718674966636`*^9}, {3.8196724562270527`*^9, 
   3.819672487236653*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Beams and differential frequency shifts", "Subsection",
 CellChangeTimes->{{3.819459361116685*^9, 3.819459368769582*^9}, {
  3.819459420970192*^9, 3.819459433960681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", ",", 
    "\[CapitalDelta]2", ",", "diffACStarkHFge", ",", "diffACStarkHFer"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStates", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"single", " ", "atom", " ", "states"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomBasis", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"rabi", " ", "frequencies", " ", "calculated", " ", "in", " ", 
    RowBox[{"rydberg_rabi", ".", "ipynb"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", "2"}], "\[Pi]", "*", "2100000000"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"780", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]2", " ", "=", 
    RowBox[{"-", "\[CapitalDelta]1"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"480", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]780A", " ", "=", " ", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]780A", "+", "\[CapitalDelta]1"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]480", " ", "=", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]480", "+", "\[CapitalDelta]2"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx780A", "=", "6*^-6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wy780A", "=", "8*^-6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zy780A", "=", "2.2*^-4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx480", "=", "4*^-6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wy480", "=", "wx480"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"field480", "=", "381161.43207231193"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"field780A", "=", "3797.8949279380545"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fieldProfile780A", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"intensityProfile", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wx780A", "2"], " "}], "\[Lambda]780A"], ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wy780A", "2"], " "}], "\[Lambda]780A"], ",", "0", ",",
       "zy780A", ",", "wx780A", ",", "wy780A"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fieldProfile480", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    SqrtBox[
     RowBox[{"intensityProfile", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["wx480", "2"], " "}], "\[Lambda]480"], ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["wy480", "2"], " "}], "\[Lambda]780A"], ",", "0", ",",
        "0", ",", "wx480", ",", "wx480"}], "]"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeRINDependentQuantities", "[", "useRIN_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Define", " ", "Rabi", " ", "frequencies"}], ",", " ", 
      RowBox[{
      "and", " ", "total", " ", "differential", " ", "shifts", " ", "for", 
       " ", "each", " ", "ladder", " ", "step"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phases", " ", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
        RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"useRIN", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
         RowBox[{"1", "+", 
          RowBox[{"Total", "[", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"dBVpkPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], 
                "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"HzPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], 
                    RowBox[{"t", "/", "scl"}]}], "+", 
                   RowBox[{"phases", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}],
              ",", 
             RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}],
         ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", "1"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{"2", "\[Pi]", "*", "102712885", " ", 
       RowBox[{"fieldProfile780A", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       SqrtBox[
        RowBox[{"RIN780A", "[", "t", "]"}]]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]2", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{"2", "\[Pi]", "*", "24538455", " ", 
       RowBox[{"fieldProfile480", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}], "2"], "*", "102712885", " ", "*", 
       RowBox[{"24538455", "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"Abs", "[", "\[CapitalDelta]1", "]"}]}], ")"}]}]}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFg", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ag", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480g", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFe", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ae", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480e", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFr", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ar", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480r", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFg", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFr", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Bbias", " ", "=", " ", 
      RowBox[{"3.6", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"magnetic", " ", "bias", " ", 
       RowBox[{"field", " ", "[", "T", "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diffZ1ge", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "0", ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diffZ1er", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FZeemanMatElem", "[", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFge", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1ge"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFer", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1er"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitializeRINDependentQuantities", "[", "False", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192333655353513`*^9, 
   3.819233370867853*^9}, {3.819238203926468*^9, 3.819238212667815*^9}, {
   3.819242324812809*^9, 3.819242335601594*^9}, {3.8192425228529005`*^9, 
   3.8192425649705935`*^9}, {3.8192426952527275`*^9, 3.819242736070496*^9}, {
   3.8192428894875054`*^9, 3.8192428895822864`*^9}, 3.81928868091359*^9, {
   3.8192887217444215`*^9, 3.8192889467697983`*^9}, {3.8192889833299923`*^9, 
   3.819289170826914*^9}, {3.8192894220156155`*^9, 3.8192894220173187`*^9}, {
   3.8192957445248413`*^9, 3.8192958447572355`*^9}, {3.8192959041747727`*^9, 
   3.8192959092834263`*^9}, {3.8192960319294496`*^9, 3.8192960538769937`*^9}, 
   {3.8193034098916764`*^9, 3.8193035599418974`*^9}, {3.819303646201226*^9, 
   3.8193036515027227`*^9}, {3.8193036912372627`*^9, 
   3.8193037667485657`*^9}, {3.8193038045967274`*^9, 
   3.8193038804710274`*^9}, {3.8193039368626165`*^9, 3.819303960296561*^9}, {
   3.8193042019942627`*^9, 3.819304304304721*^9}, {3.819304338698412*^9, 
   3.8193044435899553`*^9}, {3.8193044912848225`*^9, 3.819304531887264*^9}, {
   3.819304699361288*^9, 3.8193047364690647`*^9}, {3.819305210993579*^9, 
   3.8193055047831926`*^9}, {3.8193055639965887`*^9, 3.819305774843767*^9}, {
   3.8193059478703403`*^9, 3.819305968267867*^9}, {3.8193061209956503`*^9, 
   3.8193061299750924`*^9}, {3.8193142401229143`*^9, 3.819314265233693*^9}, {
   3.8193153142435246`*^9, 3.819315314670029*^9}, {3.8193153465117235`*^9, 
   3.819315446932372*^9}, {3.819411150878492*^9, 3.819411152483901*^9}, {
   3.819459389517168*^9, 3.819459391233161*^9}, {3.819460004760043*^9, 
   3.8194600074682074`*^9}, {3.8194608650992413`*^9, 3.819460886816124*^9}, {
   3.8194613841926346`*^9, 3.8194616106507425`*^9}, {3.8194616490044036`*^9, 
   3.8194616811144433`*^9}, {3.8194617185048847`*^9, 3.819461775328508*^9}, {
   3.8194619219427743`*^9, 3.819461922321254*^9}, {3.8194622332793164`*^9, 
   3.8194623292212567`*^9}, {3.8194623601207714`*^9, 
   3.8194623961000957`*^9}, {3.8194628575139103`*^9, 
   3.8194629208316975`*^9}, {3.819463185421892*^9, 3.819463188809188*^9}, {
   3.819464109295348*^9, 3.8194641275555296`*^9}, {3.819464934787344*^9, 
   3.819464935997485*^9}, {3.8194666169500165`*^9, 3.8194666789875655`*^9}, {
   3.8194694068464046`*^9, 3.819469410144925*^9}, {3.8196660786319504`*^9, 
   3.8196661071459355`*^9}, {3.8199843508317614`*^9, 
   3.8199845355480123`*^9}, {3.8199845935471673`*^9, 
   3.8199845973108177`*^9}, {3.819986197113324*^9, 3.819986222192198*^9}, {
   3.8199862916719337`*^9, 3.8199863527426357`*^9}, {3.819987507220671*^9, 
   3.8199875232824726`*^9}, {3.819987567982716*^9, 3.8199876234560585`*^9}, {
   3.819990761143233*^9, 3.819990785200689*^9}, {3.8199909904704533`*^9, 
   3.8199909910661993`*^9}, 3.819997427542777*^9, {3.81999747715672*^9, 
   3.8199974852201805`*^9}, {3.820001313135279*^9, 3.8200013143201113`*^9}, {
   3.8200018351202493`*^9, 3.8200019063948126`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<g-e differential Zeeman shift\>\"", "\[IndentingNewLine]", \
"diffZ1er", "\[IndentingNewLine]", "\"\<e-r differential Zeeman shift\>\"", "\
\[IndentingNewLine]", "diffZ1ge"}], "Input"],

Cell[BoxData["\<\"g-e differential Zeeman shift\"\>"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9, 
  3.819997594956947*^9, 3.820000006516736*^9, 3.8200000608983293`*^9, 
  3.8200067555923815`*^9}],

Cell[BoxData["7.378324478594951`*^7"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9, 
  3.819997594956947*^9, 3.820000006516736*^9, 3.8200000608983293`*^9, 
  3.820006755596371*^9}],

Cell[BoxData["\<\"e-r differential Zeeman shift\"\>"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9, 
  3.819997594956947*^9, 3.820000006516736*^9, 3.8200000608983293`*^9, 
  3.8200067556014433`*^9}],

Cell[BoxData["2.1061225027442385`*^7"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9, 
  3.819997594956947*^9, 3.820000006516736*^9, 3.8200000608983293`*^9, 
  3.8200067556049433`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["frequency scans", "Section",
 CellChangeTimes->{{3.8192038754475665`*^9, 3.819203889914741*^9}, {
   3.8192039332593327`*^9, 3.8192039370811744`*^9}, {3.81945674121952*^9, 
   3.819456756426366*^9}, {3.8194612112237186`*^9, 3.819461219450421*^9}, 
   3.819816230565086*^9}],

Cell["Run setup above, then a \[OpenCurlyDoubleQuote]Run\
\[CloseCurlyDoubleQuote] cell.", "Text",
 CellChangeTimes->{{3.819459484611496*^9, 3.819459488748825*^9}, {
  3.8194658453380756`*^9, 3.8194658461057043`*^9}, {3.819816239291933*^9, 
  3.8198162560188365`*^9}, {3.8199973070591745`*^9, 3.819997313284008*^9}, {
  3.819997600394043*^9, 3.8199976008909283`*^9}}],

Cell[CellGroupData[{

Cell["Run - RIN and finite T", "Subsection",
 CellChangeTimes->{{3.819459448353262*^9, 3.819459449525453*^9}, {
  3.8198162323722134`*^9, 3.819816236260394*^9}}],

Cell["\<\
possible methodological issue: effects from fast frequencies in the time \
series RIN will not be resolved unless the time step size in the solver is < \
1/f_fast\
\>", "Text",
 CellChangeTimes->{{3.819463368989073*^9, 3.8194634390598507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground",
       " ", "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", "=", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fTable", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "fMHz", "*", "1*^6"}], ",", 
       RowBox[{"{", 
        RowBox[{"fMHz", ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "19"}], ",", 
           RowBox[{"-", "13"}], ",", ".4"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTable", " ", "=", 
     RowBox[{"{", "0", "}"}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{",", "50", ",", "100"}], "}"}], "/", 
      RowBox[{"(", "1*^6", ")"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endPts", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{"j", ",", "i"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<", 
           RowBox[{
            RowBox[{"Length", "[", "TTable", "]"}], "+", "1"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"T", "=", 
            RowBox[{"TTable", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"endPts", " ", "=", " ", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"linetime", "=", 
            RowBox[{
             RowBox[{"Timing", "[", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", " ", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "fTable", "]"}], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "on", " ", "each", " ", "frequency", " ", "step", " ", 
                   "need", " ", "to", " ", "recalculate", " ", "the", " ", 
                   "RIN", " ", "time", " ", "series", " ", "and", " ", 
                   "parameters", " ", "that", " ", "depend", " ", "on", " ", 
                   "it"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"useRIN", " ", "=", " ", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", 
                    "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"f", " ", "=", 
                   RowBox[{"fTable", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  RowBox[{"(*", 
                   RowBox[{"780", " ", "frequency", " ", "tuning"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"avgsNum", " ", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", 
                    ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"endPt", " ", "=", " ", "0"}], ";", 
                  RowBox[{"(*", 
                   RowBox[{
                   "the", " ", "average", " ", "loop", " ", "gets", " ", "a", 
                    " ", "single", " ", "data", " ", "point"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"avgstep", "=", "1"}], ",", 
                    RowBox[{"avgstep", "<", 
                    RowBox[{"avgsNum", "+", "1"}]}], ",", 
                    RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"r", "[", "t_", "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{"vx", " ", 
                    RowBox[{"t", "/", "scl"}]}]}], ",", 
                    RowBox[{"y", "+", 
                    RowBox[{"vy", " ", 
                    RowBox[{"t", "/", "scl"}]}]}], ",", 
                    RowBox[{"z", "+", 
                    RowBox[{"vz", " ", 
                    RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"args", "[", "t_", "]"}], ":=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"r", "[", "t", "]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "InitializeRINDependentQuantities", "[", "useRIN", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Haf", "[", "t_", "]"}], ":=", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", GridBox[{
                    {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], "0"},
                    {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                    {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                    }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
                    RowBox[{"BuildSchroedingerSystem", "[", 
                    RowBox[{
                    RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"result", "=", " ", 
                    RowBox[{"Timing", "[", 
                    RowBox[{"First", "@", 
                    RowBox[{"NDSolve", "[", 
                    RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"time", " ", "+=", " ", 
                    RowBox[{"result", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"soln", "=", 
                    RowBox[{"result", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"endPt", "+=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    RowBox[{"soln", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "2"], "/.", 
                    RowBox[{"t", "\[Rule]", " ", "tmax"}]}], ")"}], "/", 
                    "avgsNum"}]}], ";"}]}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<solved system in `` mins\>\"", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                    "]"}]}], "]"}], "]"}], ";"}], "*)"}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"endPts", ",", "endPt"}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step T=`` \[Mu]K in `` mins\>\"", ",", 
              RowBox[{
               RowBox[{"T", 
                RowBox[{"(", "1*^6", ")"}]}], "//", "N"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"linetime", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"linetime", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", "endPts"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198033155039415`*^9, 3.8198033521721325`*^9}, {3.819826445929147*^9, 
   3.8198265033857417`*^9}, {3.8199928463290243`*^9, 
   3.8199928599394236`*^9}, {3.8199973498343863`*^9, 3.81999735042196*^9}, {
   3.8199975425950823`*^9, 3.8199975435209703`*^9}, {3.8199992715136914`*^9, 
   3.8199992908047895`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step T=\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\) \[Mu]K \
in \\!\\(\\*RowBox[{\\\"\\\\\\\"0.06\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step T=`` \[Mu]K in `` mins", 0., 
   NumberForm[0.05963541666666666, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9, 
   3.8198033767219467`*^9, 3.819826521910613*^9, 3.8199928732960854`*^9, 
   3.819999307110564*^9, 3.820005367851411*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.06\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["Total run time `` mins", 
   NumberForm[0.05963541666666666, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9, 
   3.8198033767219467`*^9, 3.819826521910613*^9, 3.8199928732960854`*^9, 
   3.819999307110564*^9, 3.8200053678574305`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"populationData", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fTable", "/", 
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]", " ", "1*^6"}], ")"}]}], ",", 
         RowBox[{"solnList", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
     RowBox[{"Length", "[", "solnList", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"freqScanFitList", " ", "=", 
   RowBox[{"Array", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{
        RowBox[{"populationData", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            FractionBox[
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
             RowBox[{"2", 
              SuperscriptBox["\[Sigma]", "2"]}]], "]"}]}], ",", 
          RowBox[{"\[Sigma]", ">", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"-", "16"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "0.5"}], "}"}]}], "}"}], ",", "x"}], 
       "]"}], "&"}], ",", 
     RowBox[{"Length", "[", "populationData", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
        RowBox[{
         RowBox[{"TTable", "[", 
          RowBox[{"[", "#", "]"}], "]"}], 
         RowBox[{"(", "1*^6", ")"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"freqScanFitList", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.81972174920236*^9, 3.8197217565313926`*^9}, {
   3.81972187044374*^9, 3.8197218890177326`*^9}, 3.8198000292565517`*^9, {
   3.8198001472233295`*^9, 3.819800184419408*^9}, {3.8198005104952717`*^9, 
   3.819800515739854*^9}, {3.8198006528154855`*^9, 3.8198007899681015`*^9}, {
   3.8198009156600924`*^9, 3.819800998083431*^9}, {3.819808958303379*^9, 
   3.819808993078162*^9}, 3.819814634914315*^9, {3.819992882596667*^9, 
   3.8199928965115905`*^9}, {3.819999315425623*^9, 3.819999318525769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"freqScanFitList", "//", "Normal"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "19"}], ",", 
        RowBox[{"-", "13"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<780A Frequency Scan\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<780A Frequency Tuning [MHz]\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "populationData", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1.05"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819722415660283*^9, 3.8197224821418467`*^9}, {
  3.8198002775136056`*^9, 3.8198002916333714`*^9}, {3.8198008660705976`*^9, 
  3.8198008692092686`*^9}, {3.819801021314191*^9, 3.819801102127328*^9}, {
  3.8198011580167165`*^9, 3.819801159827584*^9}, {3.81980158291385*^9, 
  3.8198015847400465`*^9}, {3.819801713414281*^9, 3.8198017356726537`*^9}, {
  3.819801770294954*^9, 3.8198017879676886`*^9}, {3.819801994068571*^9, 
  3.8198019947561913`*^9}, {3.8198146973366947`*^9, 3.8198147191173286`*^9}, {
  3.8199929103403573`*^9, 3.819992923804121*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vnDJu+o2c7KxUaAtaHDJ/wevok6T
          "]]}}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{-19., 0.9914287618297702}, {-18.599999999999998`, 
          0.9694347761991148}, {-18.2, 0.989728598060198}, {-17.8, 
          0.9851244894043121}, {-17.400000000000002`, 
          0.9182404097649306}, {-17., 0.9540391355430474}, {-16.6, 
          0.975507995378085}, {-16.2, 0.5957936627357445}, {-15.8, 
          0.09524241793272267}, {-15.399999999999999`, 
          0.19517349937836506`}, {-15., 0.7425183935545421}, {-14.6, 
          0.9982337218914675}, {-14.200000000000001`, 
          0.9287157901695166}, {-13.799999999999999`, 
          0.934426875957192}, {-13.399999999999997`, 
          0.9965937694157114}, {-13., 
          0.9794494335515508}}]}, {}}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {0, 1.05}, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {-19., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-19., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"780A Frequency Tuning [MHz]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"780A Frequency Scan\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{-19, -13}, {0., 0.9999999999999998}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"15.654447149890599`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 0, $CellContext`\[Mu] -> -15.654447149890599`], 
        Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8197224596737127`*^9, 3.819722484573361*^9}, 
   3.819722565258933*^9, 3.819800292490164*^9, 3.8198008059998045`*^9, 
   3.8198008705184946`*^9, 3.819801058581767*^9, {3.819801792423691*^9, 
   3.8198018040058203`*^9}, 3.8198019956734304`*^9, 3.8198089956005335`*^9, 
   3.81981464150559*^9, {3.819814688903555*^9, 3.8198147200065136`*^9}, 
   3.8198307702232833`*^9, {3.8199928857339*^9, 3.819992924671993*^9}, 
   3.819999337735525*^9, 3.8200053721129227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "fname", "=", 
    "\"\<..\\images\\plot_rydberg_780Afrequency_scanfit_varied_0_50_100_uK.\
png\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"fname", ",", "plt"}], "]"}], "\[IndentingNewLine]", "fname"}], 
    "=", "\"\<..\\solns\\soln_rydberg_780Afrequency_scanfit_varied_0_50_100_\
uK.csv\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"fname", ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "fTable", "}"}], ",", "solnList"}], "]"}]}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8194558720208583`*^9, 3.8194559606972227`*^9}, {
   3.819456020568077*^9, 3.819456026206417*^9}, {3.8194560634184227`*^9, 
   3.819456126228094*^9}, {3.8194561738043723`*^9, 3.819456176973164*^9}, {
   3.8194563112692614`*^9, 3.819456352032028*^9}, 3.81946598426628*^9, {
   3.8198018591353874`*^9, 3.8198018624561825`*^9}, {3.819801977205871*^9, 
   3.8198020594249554`*^9}, {3.819811878513671*^9, 3.8198118888360405`*^9}, {
   3.819811958513422*^9, 3.8198119602336245`*^9}, 3.819812001089165*^9, {
   3.8198307858095417`*^9, 3.8198308007864757`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_rydberg_780Afrequency_scanfit_varied_0_\
50_100_uK.png\"\>"], "Output",
 CellChangeTimes->{
  3.819456122204848*^9, 3.819456178692423*^9, 3.8194563540131607`*^9, {
   3.8198020086212463`*^9, 3.819802065489424*^9}, 3.8198119054186697`*^9, 
   3.8198119858306823`*^9, 3.8198307938641186`*^9}],

Cell[BoxData["\<\"..\\\\solns\\\\soln_rydberg_780Afrequency_scanfit_varied_0_\
50_100_uK.csv\"\>"], "Output",
 CellChangeTimes->{
  3.819456122204848*^9, 3.819456178692423*^9, 3.8194563540131607`*^9, {
   3.8198020086212463`*^9, 3.819802065489424*^9}, 3.8198119054186697`*^9, 
   3.8198119858306823`*^9, 3.8198307938758783`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rabi oscillations", "Section",
 CellChangeTimes->{{3.819802194536642*^9, 3.819802211616387*^9}, {
  3.819802298836159*^9, 3.8198022997982407`*^9}}],

Cell["Run setup above, then a \[OpenCurlyDoubleQuote]Run *some noisy \
condition* \[OpenCurlyDoubleQuote] cell. ", "Text",
 CellChangeTimes->{{3.8198024144656057`*^9, 3.819802446048952*^9}, {
  3.8199976250087905`*^9, 3.8199976255630765`*^9}}],

Cell[CellGroupData[{

Cell["Run - frequency error", "Subsection",
 CellChangeTimes->{{3.8198024623979783`*^9, 3.8198025560204945`*^9}}],

Cell["\<\
Can use frequency found in scans to satisfy the two-photon resonance. if \
doing this, make sure to use the same temperatures from the freq. scan, and \
to convert the frequencies to angular frequencies with the correct units.\
\>", "Text",
 CellChangeTimes->{{3.819802738338188*^9, 3.819802776181384*^9}, {
  3.819802823405308*^9, 3.81980285048003*^9}, {3.81980292224253*^9, 
  3.8198029538937016`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"3", "*", "2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "fTable", " ", "and", " ", "TTable", " ", "should", " ", "be", " ", 
     "same", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fTable", "=", " ", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", 
          RowBox[{"(", "1*^6", ")"}], 
          RowBox[{
           RowBox[{
            RowBox[{"freqScanFitList", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"",
             "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}], ",", 
        RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTable", " ", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"50", ",", "100", ",", "150"}], "}"}], "/", 
      RowBox[{"(", "1*^6", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "TTable", "]"}], "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"T", "=", 
            RowBox[{"TTable", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"f", "=", 
            RowBox[{"2", "\[Pi]", "*", 
             RowBox[{"(", 
              RowBox[{"-", "15.6544*^6"}], ")"}]}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"fTable", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ";"}], "*)"}], 
           RowBox[{"(*", 
            RowBox[{"780", " ", "frequency", " ", "tuning"}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"useRIN", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", "False"}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"avgsNum", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", ",", 
              "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"solng", " ", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"solne", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"solnr", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"avgstep", "=", "1"}], ",", 
             RowBox[{"avgstep", "<", 
              RowBox[{"avgsNum", "+", "1"}]}], ",", 
             RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                 RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                 RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"r", "[", "t_", "]"}], ":=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "+", 
                  RowBox[{"vx", " ", 
                   RowBox[{"t", "/", "scl"}]}]}], ",", 
                 RowBox[{"y", "+", 
                  RowBox[{"vy", " ", 
                   RowBox[{"t", "/", "scl"}]}]}], ",", 
                 RowBox[{"z", "+", 
                  RowBox[{"vz", " ", 
                   RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"args", "[", "t_", "]"}], ":=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"r", "[", "t", "]"}], ",", 
                 RowBox[{"{", "t", "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
              "InitializeRINDependentQuantities", "[", "useRIN", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Haf", "[", "t_", "]"}], ":=", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", GridBox[{
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], "0"},
                   {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                  }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
               RowBox[{"BuildSchroedingerSystem", "[", 
                RowBox[{
                 RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], ";"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"result", "=", " ", 
               RowBox[{"Timing", "[", 
                RowBox[{"First", "@", 
                 RowBox[{"NDSolve", "[", 
                  RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"time", " ", "+=", " ", 
               RowBox[{"result", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"solng", "+=", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"result", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "2"]}], 
              ";"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"solne", "+=", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"result", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "2"]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"solnr", "+=", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"result", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}], "2"]}], 
              ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"solng", "/", "avgsNum"}], ",", 
               RowBox[{"solne", "/", "avgsNum"}], ",", 
               RowBox[{"solnr", "/", "avgsNum"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step ``/`` in `` mins\>\"", ",", "i", ",", 
              RowBox[{"Length", "[", "TTable", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198027179663506`*^9, 3.819802727087193*^9}, {3.819802999443404*^9, 
   3.819803212436143*^9}, {3.8198120929386597`*^9, 3.8198120998933706`*^9}, {
   3.819812139100168*^9, 3.819812153910636*^9}, {3.819812187574404*^9, 
   3.8198123682048874`*^9}, 3.8198124212242584`*^9, {3.8198124579578257`*^9, 
   3.819812496228352*^9}, {3.819812906939867*^9, 3.81981290749551*^9}, {
   3.8198129922844114`*^9, 3.8198130629379635`*^9}, {3.8198131253967447`*^9, 
   3.8198131321322527`*^9}, {3.819825462799967*^9, 3.819825463319642*^9}, {
   3.8198308331275234`*^9, 3.8198308502080946`*^9}, {3.8198372046152873`*^9, 
   3.8198372220312605`*^9}, {3.8198380266196423`*^9, 3.819838056013425*^9}, {
   3.819851656117609*^9, 3.819851666679801*^9}, 3.819852309163109*^9, {
   3.819984278187317*^9, 3.819984284221818*^9}, {3.8199903617956977`*^9, 
   3.8199903691125803`*^9}, {3.819990501852253*^9, 3.8199905106423836`*^9}, {
   3.819992823532028*^9, 3.8199928289173536`*^9}, {3.819993024386036*^9, 
   3.819993052413942*^9}, {3.819993276536003*^9, 3.8199932809980297`*^9}, {
   3.819993678968377*^9, 3.8199936824492064`*^9}, {3.8199938884685736`*^9, 
   3.8199938885777435`*^9}, {3.8199954703984833`*^9, 3.819995549819788*^9}, {
   3.819995598877347*^9, 3.81999562126505*^9}, {3.819996799781807*^9, 
   3.8199968047444*^9}, {3.819997698745241*^9, 3.819997728043714*^9}, {
   3.8199980939668026`*^9, 3.8199981115653944`*^9}, 3.8199981442924147`*^9, {
   3.8199981930469246`*^9, 3.8199982306337337`*^9}, {3.819999365784561*^9, 
   3.819999365828227*^9}, {3.8199999565838366`*^9, 3.819999988717625*^9}, {
   3.8200009361202*^9, 3.820000937758066*^9}, {3.820001764415834*^9, 
   3.8200017711658363`*^9}, {3.820004021953421*^9, 3.820004024002699*^9}, {
   3.820005387310814*^9, 3.8200054066063795`*^9}, {3.820007484921318*^9, 
   3.8200074868684607`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 1, 3, 9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8199980857454357`*^9, {3.8199981402986727`*^9, 3.8199981491203666`*^9}, 
   3.8199982223323164`*^9, 3.8199982650764103`*^9, 3.8199995806569347`*^9, 
   3.819999993850145*^9, 3.8200002645475035`*^9, 3.8200015601559477`*^9, 
   3.820004264083867*^9, 3.820005576034815*^9, 3.8200068079692383`*^9, 
   3.820007005167683*^9, 3.8200080573063164`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 2, 3, 9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8199980857454357`*^9, {3.8199981402986727`*^9, 3.8199981491203666`*^9}, 
   3.8199982223323164`*^9, 3.8199982650764103`*^9, 3.8199995806569347`*^9, 
   3.819999993850145*^9, 3.8200002645475035`*^9, 3.8200015601559477`*^9, 
   3.820004264083867*^9, 3.820005576034815*^9, 3.8200068079692383`*^9, 
   3.820007005167683*^9, 3.820008633216302*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 3, 3, 9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8199980857454357`*^9, {3.8199981402986727`*^9, 3.8199981491203666`*^9}, 
   3.8199982223323164`*^9, 3.8199982650764103`*^9, 3.8199995806569347`*^9, 
   3.819999993850145*^9, 3.8200002645475035`*^9, 3.8200015601559477`*^9, 
   3.820004264083867*^9, 3.820005576034815*^9, 3.8200068079692383`*^9, 
   3.820007005167683*^9, 3.82000921272344*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \\!\\(\\*RowBox[{\\\"28\\\"}]\\) \
mins\"\>",
  StringForm["Total run time `` mins", 28],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8199980857454357`*^9, {3.8199981402986727`*^9, 3.8199981491203666`*^9}, 
   3.8199982223323164`*^9, 3.8199982650764103`*^9, 3.8199995806569347`*^9, 
   3.819999993850145*^9, 3.8200002645475035`*^9, 3.8200015601559477`*^9, 
   3.820004264083867*^9, 3.820005576034815*^9, 3.8200068079692383`*^9, 
   3.820007005167683*^9, 3.820009212728428*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8199963282071033`*^9, 3.8199963657181683`*^9}, 
   3.819999160243162*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"if", " ", "solne"}], ",", " ", 
    RowBox[{"solnr", " ", "were", " ", "obtained"}], ",", " ", 
    RowBox[{"plot", " ", "e"}], ",", "g", ",", 
    RowBox[{
    "r", " ", "populations", " ", "for", " ", "a", " ", "single", " ", 
     "temp"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solng", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", "solnList"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tidx", "=", "2"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"corresponds", " ", "to", " ", "particular", " ", "temp"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", "=", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"e\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"solnList", "[", 
            RowBox[{"[", "Tidx", "]"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
         RowBox[{"Length", "[", "solng", "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Ground-Rydberg Rabi Oscillation, T=``\[Mu]K\>\"", ",", 
           RowBox[{
            RowBox[{"TTable", "[", 
             RowBox[{"[", "Tidx", "]"}], "]"}], 
            RowBox[{"(", "1*^6", ")"}]}]}], "]"}], ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Two-photon pulse duration [ns]\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8199960504781103`*^9, 3.819996074923436*^9}, {
  3.819996292152076*^9, 3.8199963029224386`*^9}, {3.8199964352097654`*^9, 
  3.8199964399729977`*^9}, {3.8199964860908623`*^9, 3.8199965190236425`*^9}, {
  3.8199965555022497`*^9, 3.8199966574257507`*^9}, {3.8199966882483807`*^9, 
  3.8199967405946507`*^9}, {3.8199991617793407`*^9, 3.819999202499491*^9}, {
  3.8200052155157914`*^9, 3.8200052387574415`*^9}, {3.820005273916152*^9, 
  3.820005276332552*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "ground", " ", "state", " ", "population", " ", "for", " ", 
    "each", " ", "temp", " ", "step"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solng", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", "solnList"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"leg", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
           RowBox[{
            RowBox[{"TTable", "[", 
             RowBox[{"[", "#", "]"}], "]"}], 
            RowBox[{"(", "1*^6", ")"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"freqScanFitList", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<`` \[Mu]K\>\"", ",", 
          RowBox[{
           RowBox[{"TTable", "[", 
            RowBox[{"[", "#", "]"}], "]"}], 
           RowBox[{"(", "1*^6", ")"}]}]}], "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "TTable", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"solng", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Two-photon pulse duration [ns]\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.819813275851759*^9, 3.819813410386195*^9}, 
   3.819813454354553*^9, {3.8198135239072404`*^9, 3.8198135508270884`*^9}, {
   3.8198135815099916`*^9, 3.8198136276734962`*^9}, {3.8199841269564257`*^9, 
   3.819984170325721*^9}, {3.8199842303571825`*^9, 3.819984233385373*^9}, {
   3.8199959594528475`*^9, 3.819995961865506*^9}, {3.819996009351425*^9, 
   3.8199960214755535`*^9}, {3.8199963737985277`*^9, 3.81999639625327*^9}, {
   3.82000071965649*^9, 3.820000745827671*^9}, {3.8200007841505413`*^9, 
   3.8200007965277987`*^9}, {3.8200052490289707`*^9, 3.8200052707790065`*^9}, 
   3.820007380620767*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVWnk41N8XVlRSSaWirCFLEpEKOadQUpG1iERlCZVkixCF7LLvu7HPmBFZ
kn0LSdnXym6Winxb+c3vr3ne52zvuee9937u84yw5T292+tZWFhusrKw/P/3
uuTKRHntPnjPdmptbY0BnvQfYiGBP4HlT6Gq+C8GRMgE5hkFsqPT+ZuL178x
4BuZI03eaif2MdylV1YYkKj9fl45kAc13Gy+ra4yQG0hTkG9QAAvvzo62saM
XzlDhINWB3CCjeJ79isDOiJ23pZyFcOANWGN80sMSBt3DpIJlMBL+1LDVv8w
4KH0EPFowiGUfBDb/+onAzQfqfQpFshg6Ca5BU46AzindB6njMliCUVA9AwT
/wxaFyFodRTTn6mLcfzHgM9ylMwMujw+283lPvqDAZ2Dt16KuB7DumlDRv4C
A8q997TlrCmiKuXZmd+zDMg42DYsHngCKU9YW+WZ/EK63Gn5XEo4jxYX+Zn9
ujw8xCKdoIwrsrP3WGcYcGP/2M4S4VNYOdFi6T/JAK2GMDHZAlWUPh4rGsXM
l6ggxGfMi9hssBR+h1lvO7u7WOIYYrUXV/F6pv/TkfcyIxmn0eITj/qPAQb8
KpE6wWd1Bp0rRbarjzHgrq/faTMpNdSK4dCv+sSAKcNRrVS6GkZoctCDBxlg
LHnMYIKsjsr4vUa7mwHdf0PNhFw1UMootPLWewZkan3zFQ3UxJOOp/p2NTFg
r4BWyO2L55EA686adzD7+5YZk8ulhZ37qpramfZ1zX9SZz9q4b7Ndlw1Fcx+
4w3yJBIu4FKrZv7dlwy4MFPRJV2gjUd/zquH5zDgN0LIPis9HFiSbL7vy4Cy
gkUu5TY93B976OeZZwy4xx0fc01KH2MY3zdcD2CAlJf6Ps8QfRzw0mmZ92D2
M/s1NZmuj6XLy/vP32PyD8ssFXA1xMCw3iHuawwI/KmtCEOG6HU2Jma/MVNP
ln+qzJWNcP/+ysk1UwasviWAT4oRfqmhMiQMGfDqmEFT+poRBp4+XNilwYCs
0Q0DBwKv4ppQXqDVEQaorqqYPv1+FXPqN86yHWXAoODDT9Omxth+f5LvgDBT
Tzc/L+bJmaAF+YtpxE4GPJqvZTkycg25foTGxi7TQW/FVUpZxhzdzBojwl7S
gbaXSEyON0d2taO1WlV0aOJz2ue97gZmXX0sL5VDB3PVgrRJuxtY5e2u9ySa
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
ZyPB/wB0ULN8
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
79AwzL+yICKADmyaL5dL3Qi9/LKTAOL+7fYy7TC9S9yn1d9yTF86nJi/50X2
pOGWDJc1MfcJfe/dfE7Ti4b/nGzl7Aj8hm2S7MQDGrK+GLlEcadDfE99176H
NPxjbfxhB7E/6I3rDtQH0vAXb4NL8TVCb39i2C4HE/N6ogfp9nTgUZL6tj6U
hux7N/81tqODjEtleU4Yoe8yNQPBi3RQy9UJ1YugYSWHwEmvS3QwGu25PE+i
oeJ3tfliMzrYC11Xjo0i9ESqeTp5ntBTVNh4fywxn9PBZ1yI/ZfxTuiZzxMa
tjezCNB16VC9gRYtkUDDdbFXj27Wp8OwRyc6JtGwJmRVsUObDoeu7Ez8nUbD
jtwHQuUH6aCTTL1JzqAhm9+lqxoH6GDZpayjmUXwK2alZ0PsZ/9TF34E59Dw
ro6WrbooHboPphoI0Gg4FXH2qBAnsX+cDkjVF9Nwp5/77c/b6bCG+uLPpVIa
zprZWQiz0UFWcDwnp4KG/Rz7Thuy0MGLdS+r8jMaao7njB+fmwalqr7shnoa
fhN0Zv1HvDeM66GndBpoGNd0GUOHifdP+DjzfSMNXfcux0US9sWPs1GmL2io
ph/fWTgwDRppNFG3NzSM/rRwufbtNGxAJSj9TMP51ohrd1OnoX5hfFili4ZG
68/JHEmaBvfsJ/5N3cQ+jpdiU4iaBoXzOrK6vcT8Qla/R4ZMwyTHctuHPkJv
5kZ3rIKn4e3X2gtzQ4Qe+HIS1F2J99xT3UOeQcNbim2+4jgNOvu/7y5nEvke
MV1vqE3DmpG0RtV5Gmo78UqmKk9DTdxZ2+bvNJy4xz6gsn8aXHVZN51eJPah
wK5mstQ0GPO/enJthYYP9LaV/t0yDQKVp8uzNxSj9XNKs2rPFKR/N50TFS7G
M9T2EPVrU6D6gT2+VaQYO6Pk7jSfn4JPRc/gllgx2k8eHcgznwJWJ/GIZsli
vKLuyDekMwU2Ewx5e7liVFsrmFcoNQUS/Y+v5ysXo8tBrcWJb5OQ1VI6rnSu
GL23fzC6fnIScuK3fT0VVIzrr3/k7/47DuNzQ4bdwcW4y09qdmZhHMROlr20
CS1G2RcvjwkwxsEq1f/YfFgxLhhxMTyGx+HpshnNK6IYtyXYqRp/GodgizS/
othidHhsrKmeNw7XBQ/LcqcVoztNpoPDYhzkKRbuvTXFWGtT+p29eAyKszO3
O8wUo6+pdf+wzihYRJx1i9YrwQ9vPMqOXx+CkX2hfasVJfigwulLVnE/bAhB
k8CqEtRq1N3sltQP0hOLHdtrSlCOXfHCTd9+0NXMOZVYW4I6yTxKHtf6wZFs
+VLiWQmu41GK9jbvh8Vt+4t1X5Rg41++gZk1RLz5D/5x70vwt85SKeVcH0iX
7jywb7IE/+xeIya7thd0t73Lr5wqQUrt7TyDuR5wvO6zR51O2GyqgdzdPVAs
PiV4jlGCT6b4w22KekAlpmajx2IJlqa9S7xq2QOn7lh+bWEpxQbJYc/x2m5w
PpIeaMlfijJe8jOX/Lpgh4PxS55dpVjYrhsq79wFz55uZH0nWIrev5bFxi50
wZbV694qIqV4QYDOUFPsgtzmQ24795RioOvZG719X2DM8OWVD4dKkbc0ueu4
8he44Dilpn2GwF8qZWau+wysKYn3/xiWYlStiyvb/CfIe69XU3q2FBf8MuxH
hj7ByoGSw2KmpbjO326WWvsJnix7yP2zLMW8mzz53Dc/Qaf/FoHq66X4XPVx
NYx+BI+qelMXp1LU3sk0Ff34EUSnXWL33CjFfLWycsWWj+Ci95kzzrUUOa7F
xPxL/QgcPCkbb90rxeBMyfemlh+hQvuMtqxnKb49t2E7q95HsHRf6zd0vxQD
lhgXKuEj5PfarRr4lOJnRSf1XUIf4ewWftWND0ux5bzTOvrWj7By/O29er9S
vCO6++3ySiek3fCqvPO4FN0oI0/uMDvhZOr+H3IBpXhTnCwY0N8J/wNDzAXy

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999985995353}}, {{0, 4999.175718266285}, {0., 
        0.9999999985995353}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 50], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 100], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"150\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 150], Editable -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819813363308201*^9, 3.819813458082431*^9, 
  3.8198135987210474`*^9, 3.8198136548229604`*^9, 3.819815622519642*^9, 
  3.8198160672575502`*^9, 3.819832848089136*^9, 3.819837924401493*^9, 
  3.819848412982501*^9, 3.8198515810447645`*^9, 3.8198523310353403`*^9, 
  3.8199842376250734`*^9, 3.8199905341823864`*^9, 3.819992985521444*^9, 
  3.8199932492306757`*^9, 3.8199936316110697`*^9, 3.8199936966558704`*^9, 
  3.8199949755058727`*^9, 3.8199959613228493`*^9, 3.8199963994043713`*^9, 
  3.820000712874891*^9, 3.8200007671762857`*^9, 3.820001648880086*^9, 
  3.8200052934745936`*^9, 3.820007404544486*^9, 3.820013450119132*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "fname", "=", 
   "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_scanfit_RIN_correct_\
frequency_50_100_150_uK.png\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8198137039247265`*^9, 3.819813730605784*^9}, {
   3.8198160476916523`*^9, 3.819816074977964*^9}, 3.81983713633145*^9, {
   3.8198373641667404`*^9, 3.81983738860429*^9}, {3.8198379852766256`*^9, 
   3.81983801435382*^9}, {3.8198516796377726`*^9, 3.81985167974338*^9}, 
   3.8198523856136446`*^9, 3.8199835969845734`*^9, {3.8199841038822374`*^9, 
   3.8199841067860084`*^9}, {3.8200008186028566`*^9, 3.8200008433730907`*^9}, 
   3.8200009253422785`*^9, {3.8200040985509357`*^9, 3.8200040991164217`*^9}, {
   3.820007463716502*^9, 3.820007475215334*^9}, 3.820014163772544*^9},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_groundrydberg_Rabi_oscillation_scanfit_\
RIN_correct_frequency_50_100_150_uK.png\"\>"], "Output",
 CellChangeTimes->{3.8198160682800293`*^9, 3.819837169138708*^9, 
  3.8198379892478547`*^9, 3.8198523873710327`*^9, 3.820000855360773*^9, 
  3.820007467623906*^9, 3.8200141868625417`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tpts", " ", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "tmax", ",", 
     RowBox[{"tmax", "/", "20"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RabiPts", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"solng", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "/.", 
         RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "tpts"}], "}"}]}], "]"}], "&"}], ",", 
     RowBox[{"Length", "[", "solng", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RabiData", " ", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"tpts", ",", 
         RowBox[{"RabiPts", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
     RowBox[{"Length", "[", "RabiPts", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "RabiData", "]"}]}], "Input",
 CellChangeTimes->{{3.8200139550240755`*^9, 3.820014125592863*^9}, {
  3.820014594008012*^9, 3.8200146148424377`*^9}, {3.820014947433484*^9, 
  3.8200149715939703`*^9}, {3.8200165552905283`*^9, 3.8200166288266125`*^9}, {
  3.8200175826292453`*^9, 3.820017622587916*^9}, {3.8200176638196645`*^9, 
  3.820017717003324*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo+2M/aeDp+nV2+w54srmM+pq+h/HqHlR1T/jaU
37c3OXrjOFN+u8Mcxa7Jcx8fhMr3O8xSUNvySCPPntH//m+d9skOUp8eZdZc
PgJVP91h7aXp76+veWCfbn1p8o2w2Q5dSx0bjmyAmT/f4Y/ydK8/u97bP5/8
SNRp8kKHZp3QfYb1r6DmLXZ4GX9k97mce/ZSXHceilcvdbDIOLL4ouUhqPnL
HcylpY7sz5tq79dwde3bpJUOfVdfyX2Zfwxq32qH0ilJy/1rHtg3fjtXedhr
rcPhaotfEddfQe1f73D4/M6U6uvv7KPMnizymbnBoXe2fDdP9iuoezY68Jip
vvQOeWBf8vFBh3nvJod/287e6y8/CXXfZgePcz4rOFg22AMA+rmqGA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo+2M/aeDp+nV2+w7qPC5Yn572G8usdfEOcpp+J
e2BvcvTGcab8dgdflvkuP04dgcr3O1yvsTSfPqnJntH//m+d9skO2zY+j7Js
OAhVP90hdE5rdrbQPft060uTb4TNdnB1UzjapfAKqn++Q1B656R14e/tn09+
JOo0eaHD78mib3fdfw01b7GD1Pqbp9neP7SX4rrzULx6qYPRrCTxUwpnoeYv
dxB+emKGkPJae7+Gq2vfJq102FPp9fuG10GofasdPp95lpgsfcu+8du5ysNe
ax3m2cpzBH58BrV/vYNAc5n8iilv7KPMnizymbnBQdWVt47X/jXUPRsd4nyk
jPyNntiXfHzQYd67ycG04tzuSc7Xoe7b7LAnNnzS7XUn7AGQh6I4
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo+2M/aeDp+nV2+w4XV/jrdva+h/HqHF68rK5X3
PbA3OXrjOFN+u0NdYvEL1l3HoPL9DmtOrp5+cvMEe0b/+7912ic7bFyzdlEX
3wGo+ukOkzelNV9XuGOfbn1p8o2w2Q5Thc5nVfx7AdU/32FhLIvui9Pv7J9P
fiTqNHmhw6UlexKDWt5AzVvsIHFw2Xe2Q4/tpbjuPBSvXuqQusfFzZnzMtT8
5Q4//PYoLRbfZe/XcHXt26SVDvtltr/n/7Efat9qB67OMywbD1y1b/x2rvKw
11qH4tNvj8e9ewy1f72D5lr1iWFpr+yjzJ4s8pm5wSEsvjBqktdrqHs2Orgz
Hf2xcPcz+5KPDzrMezc5GFr8zvvJdx/qvs0Ot+oy57TfuWQPADPJqUw=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4999.175718266285}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8200176681414337`*^9, 3.8200177173879995`*^9}]
}, Open  ]],

Cell[BoxData["//"], "Input",
 CellChangeTimes->{{3.820017648952287*^9, 3.8200176490181737`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]Guesses", "=", 
   RowBox[{"{", 
    RowBox[{"100000", ",", "90000", ",", "35000"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]Guesses", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "2000"}]}], ",", 
     RowBox[{"0.95", "*", "2", 
      RowBox[{"\[Pi]", "/", "2000"}]}], ",", 
     RowBox[{"0.95", "*", "2", 
      RowBox[{"\[Pi]", "/", "2000"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RabiFits", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RabiData", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"\[CapitalOmega]", " ", "t"}], "2"], "]"}], "2"], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           FractionBox["t", "\[Tau]"]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[CapitalOmega]", ",", 
            RowBox[{"\[CapitalOmega]Guesses", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", 
            RowBox[{"\[Tau]Guesses", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}], "}"}], ",", "t", ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "100"}], ",", " ", 
        RowBox[{"PrecisionGoal", "\[Rule]", "100"}], ",", 
        RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}], "&"}], 
     ",", 
     RowBox[{"Length", "[", "RabiData", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820016641568408*^9, 3.820016657576668*^9}, {
  3.8200167512434497`*^9, 3.8200168245218816`*^9}, {3.8200169010984163`*^9, 
  3.8200169017207804`*^9}, {3.8200169469240894`*^9, 3.8200171162884436`*^9}, {
  3.8200178533101645`*^9, 3.820017853421129*^9}, {3.820017937476101*^9, 
  3.8200180552342954`*^9}, {3.8200181009163537`*^9, 3.820018115194195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`` \[Mu]K, \[Tau]=`` \[Mu]s\>\"", ",", 
        RowBox[{
         RowBox[{"TTable", "[", 
          RowBox[{"[", "#", "]"}], "]"}], 
         RowBox[{"(", "1*^6", ")"}]}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"RabiFits", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "/", 
           RowBox[{"(", "1*^3", ")"}]}], "//", "N"}], "]"}]}], "]"}], "&"}], 
     ",", 
     RowBox[{"Length", "[", "TTable", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "RabiData", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"RabiFits", "//", "Normal"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "leg"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Two-photon pulse duration [ns]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.820016641568408*^9, 3.820016657576668*^9}, {
  3.8200167512434497`*^9, 3.8200168245218816`*^9}, {3.8200169010984163`*^9, 
  3.8200169017207804`*^9}, {3.8200169469240894`*^9, 3.8200171162884436`*^9}, {
  3.8200178533101645`*^9, 3.820017853421129*^9}, {3.820017937476101*^9, 
  3.8200180552342954`*^9}, {3.8200181009163537`*^9, 3.820018115194195*^9}, {
  3.820018145408137*^9, 3.8200181661462207`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo+2M/aeDp+nV2+w54srmM+pq+h/HqHlR1T/jaU
37c3OXrjOFN+u8Mcxa7Jcx8fhMr3O8xSUNvySCPPntH//m+d9skOUp8eZdZc
PgJVP91h7aXp76+veWCfbn1p8o2w2Q5dSx0bjmyAmT/f4Y/ydK8/u97bP5/8
SNRp8kKHZp3QfYb1r6DmLXZ4GX9k97mce/ZSXHceilcvdbDIOLL4ouUhqPnL
HcylpY7sz5tq79dwde3bpJUOfVdfyX2Zfwxq32qH0ilJy/1rHtg3fjtXedhr
rcPhaotfEddfQe1f73D4/M6U6uvv7KPMnizymbnBoXe2fDdP9iuoezY68Jip
vvQOeWBf8vFBh3nvJod/287e6y8/CXXfZgePcz4rOFg22AMA+rmqGA==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo+2M/aeDp+nV2+w7qPC5Yn572G8usdfEOcpp+J
e2BvcvTGcab8dgdflvkuP04dgcr3O1yvsTSfPqnJntH//m+d9skO2zY+j7Js
OAhVP90hdE5rdrbQPft060uTb4TNdnB1UzjapfAKqn++Q1B656R14e/tn09+
JOo0eaHD78mib3fdfw01b7GD1Pqbp9neP7SX4rrzULx6qYPRrCTxUwpnoeYv
dxB+emKGkPJae7+Gq2vfJq102FPp9fuG10GofasdPp95lpgsfcu+8du5ysNe
ax3m2cpzBH58BrV/vYNAc5n8iilv7KPMnizymbnBQdWVt47X/jXUPRsd4nyk
jPyNntiXfHzQYd67ycG04tzuSc7Xoe7b7LAnNnzS7XUn7AGQh6I4
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo+2M/aeDp+nV2+w4XV/jrdva+h/HqHF68rK5X3
PbA3OXrjOFN+u0NdYvEL1l3HoPL9DmtOrp5+cvMEe0b/+7912ic7bFyzdlEX
3wGo+ukOkzelNV9XuGOfbn1p8o2w2Q5Thc5nVfx7AdU/32FhLIvui9Pv7J9P
fiTqNHmhw6UlexKDWt5AzVvsIHFw2Xe2Q4/tpbjuPBSvXuqQusfFzZnzMtT8
5Q4//PYoLRbfZe/XcHXt26SVDvtltr/n/7Efat9qB67OMywbD1y1b/x2rvKw
11qH4tNvj8e9ewy1f72D5lr1iWFpr+yjzJ4s8pm5wSEsvjBqktdrqHs2Orgz
Hf2xcPcz+5KPDzrMezc5GFr8zvvJdx/qvs0Ot+oy57TfuWQPADPJqUw=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
SlAkgGkr17Vn6WT0fRwldZWxf5kPC8P9SWT8o80ytixDwHex2a2l+Yz5LLrT
85uxvx5Zd5e3VpBRalzNrZufADHW1eP7qslIkyF9+7SXgLYHcVayNWQMrE6M
KNtNAPfBrqm7TWQM/jmxU5GNsR8ZGt2vOhnzLzsnvn+FDuw3aHu3d5FRxzJ+
z+oSHWzYg24b9TL2yab4eeU8HU46dI5zfiXj6Fuf2tEJOrRevvbzMY0R3znj
5exHOkhv/Hui+TsZ1wlwHZtuoUNkZbwD/08yPpP5QHpfT4fbB74yty6TsXyi
kgtK6fDLicq6i6UQNTZ7y32Lp0POVY+cmg2FKHGAuLcxkg43j+leMNtUiI9b
PhayB9GhZmopqH5LIX4uKpr/7EoHb22FPU84CrFUxtacz5AO3GK1+z/yF2Lm
Nhe9CiE6vFsf2mwvWIi+Z/dLyO2lg+OQgekBoUJskvu4KZ6D8XsQxpLvtL8Q
g/k+7NjNRIes1bMyEhKFGLh5XuhLPw3kPrcp+8gXooMB10JAIA2uuQzcUdEp
RJbo52Ym3+bAotxcdlK3EAvAR2Ltyxy4/Vjd5qdfiLGyK9wu7+Yg78G+is7r
hRiUZt+sQJ2DVU3jnQb3CrFGK7wkzX0OUgW/v3W1KMSU2p8KlwTnYLZ2vfRr
70K8ur8iOvncLDCthLMa+BZi/Q41qqfiLOyUPTC8wZ/x73zD1aarkrOglKPu
fzGoEHnCReRr2WchODRgYiCiEMt2qbNlds2AjOGeuL+phai45tH65fYMOLGI
s8hXF6KbiAOH171pkC3rJ9W8LsRlrxva8lrTQH/kr6FeU4gr39q2DypPw91P
tFD9+kK8Nlxy7o/wNCinFu6zbSnEgBeqj73Gp2AjygL1SyF+jXyjusN4CoId
TttL0gtxRv/u12e3JiFtQf/7PoEiXNL17QTxcciO3jGo4VOElg/rfhObv0IR
KYPDdK4IDXeK+hx72AWX78hV0mhF+AtY3lirdQF993ujJ0QRPj8sn1Mr2AUS
nt9LHRYY56nqDl7dXyDTSPF24O8i3GMU8a9G7QvE7+vIobJQcIDHfGLv/s/g
GbeisspLwa3n2c2+fu8AEe0gmhs/BSvEGp9BWwfUbxGK2iRIwe0SccOU3A5g
sj87wy5MwZgBrZBu4w5wuBoaLCxGQW+ibBf/UDtY7hIdVD9OwYPvH61GpXyE
60HatmEXKaj0VsWPLfg99FhNCctrUnA8SiVQTeM96Ok4dQxdpqBFkTtn5cb3
oMVDkjikQ0FxRy9nQ+d3oJG2PFJznYLrTlnPlFi2wMnSFE36AwpeH8l723av
GfiHCdFzbhTkcin4PPy8HuJrPbro7hT0n1qsbjpZD3vTeTzCX1JwQuGcyjJT
Pew2VRke9qbgSymOBnXfOtjxIzLCNoiCvXUK9MDkWmDapMScHk/BkwYfTx4t
ewOjUv79qyUUpLHPt4cJl8NGP9TzLqPg0IDcvdymMhCd/NnOUUHB3AvXZW89
LAOzpFtNItUU3FMwNxxCLYWfOw4Xna+n4PCA25VLF0tg43yHZ+RHCsa5UVJ8
EqkgetFznWAHBW8Ds9pLDSqcz1ZwzO6koKZPj5vwHwoE3kuzqvpCweL677Xn
9Ciwp9Pm5kg/Bc8P9dee5y4CUeoeaakpRj/j1umyPcuH8zs+5JVOU7Dw9YN/
LeN5YPbI9eDpWQq+le4N69XNgyLhaV4dOgWb7jUt/JLPBYXwik32PymYsRAz
qM6ZDRpPbw02MlFx3/d774j1GWDRwXFVk5mKwwaGShe80yFYsqmzZz0Vy3qz
Lm9mS4fP41JvZzdSkaVpXjqLLw1u6jFRObZTMUraLM//YgpYnEjzvsVDRWzK
bGL7Fseov27Tzv+o+MBqz0nBtViojt3E8oGXimb1u7ZWCsbCttVHLgqCVMyU
dFUIs4hm+H8Z2z0HqSjCwrJhWSYCtJYmqG2iVDxfwBrv9jgc/hyMmX95iIqD
UunjyflhoO73z+ynJBV16iMU02VCYfxKk2GHDBXL9fxP9fQHgr/78xRvWSo+
UrC+GOIbADKvDg2DHBW3bh5j9UN/cOMOul6gSMXCRX2B83U+IDisf8VPmYr3
ufm2neB7CW/ZtwQpq1IxLrFwr+xGD3isXPXhjxoVX4Y+zPBacoPXGYLqJueo
CEzNbIdornDTbFpJ7TIVL/x+YY/37YElMc5x5QoVDWtrj3/Mew65Hy9WULWp
WNF6OlBg/TNYlqYcF9Kn4kMxb22OAWtIMTKy7r1KxVlNnuiy209APXJ3UfB1
KubaPhWT/G4JUX/sJdZuUXHLZWV9DhczUBKXfFhyh4o3w+JFppdNYeLmMMn8
HhVli74bPA5/ADI1KsIDRlQ8WqYdFy1oCAPzi3fDjKlo9ey/KhWue+AunJV4
3oSKry+5yN44exs6PbftLX/EyG/ff2ORivpgX/Za39KciuJrv8K37tCBfTOW
EQcfUzGe20dtD/8VePuf8KchSyr+WZm3ce64AJYXv7BHPqGiMPfzAPahs8Dt
4nXpog0V/S7tiKLdU4E3hfL+LLaMeVIR+6ZQoQTGI7Mtlc+oGIOhhy4lnQC2
nYmbrO2omLroK7/P+iiUqF1WO+RAxSL26lnHR6Jw6xmz+zdHKobxuayVxwsA
S3ZxTbQzFdViTGu/8nFCXp/xqqYrFZmrTzWwvGIC7W08Jze5UVFRuQfvRowo
LZ96b/fanYrS17/a0wLtlFIfO5U+fUlFO2qOnuf1bqVzKYcXJbyo6NkqpNb8
Ylnpf5wQCqc=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fHEtH/4HTu0Qfw==
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c81f8Xx1XSMPKViiKRZKVSkpFziMgIZSdkJrMUKSLJHteKsu4l3Ktw
jczIltWQKCvJdu+l0i79Pr9/7n08H/e+z/uc1xmfzxG19zrttJqNjW2U+Pj/
t43Ut/eVDdvhks2PlX//FiGA9XVPTMQPWLnpd72aYJJcBNUsYj226XAMWBH8
qWxj9iFnPjTZYMQ3s7II90+9mlOJEMD0BzsPnCP4+HzqYc3CneiUZHWg/u8i
fNMoAQlnMSz4sJF/HcFdJD4nab89mCRrOqL8ZxGyx65GyUVIIpkcGGXxexGu
yL4rkb8ng3rfp0Xsfi2CznXVN0cK5bD6Cl+W8c9F4Jk0DMwcPYDyU9kc+34s
wo+oVSQRZ3m8fN/g7OdvizBxsDyHwjqErRd+ZFK+LkLPW8fHu/0UkO1B+kvl
5UWgSDwb2htxFLl2GPPIfFqEmF5/Jo1XGRtsPguHLC6C7xUZNtl7KvhtW6FE
C3MRdJvj9hwoVMPU55371swT8R7eJWQpiBiuUXFw9ewibFrvv+f+KOI13lql
halF+FksfVTIWQNDWi/a3/iwCJ4ht9XPSR/Hq+uiI8XeL8Kk6YhuFus4apqU
NpWPLMLzP7Hndvlp4UMeHZ/kwUXI0f0UIh6hg5ebWrQMexZh207dGCf9k6j7
wclGu5Pw91NOSj6vLm6piS+Qaif8TTOhSt7TQ3Oza6OPni6C3nRVr2zhKTzo
s8u6uHQRGmt4Bz08DdEqkR7wo2gR0tsPe5sLGmHIhZfLsoWLwHs/1j9t1AiN
BAJWmeYswi+EmO3Op/Gt4iGZnIRFqChc4FV5dhr7bETyIXYRvPjTUs5Kn0Ga
zI6CjgginpmlrAzWGVSveWySGkTEE5dTutPPFGkLAtuOuC9C7sjaQbEIC8zz
PWDjp74Iaiuq1qGfLVDbIc5LU2UR3opc+TBlbYkj1Se7fxwm8uswsUA9aIV+
RSXR2yQX4fpcA9v+4bOoEdZ3To57EU5/85NWkbPFL30GR7r7WMDcVlKSkWaL
atvHJfi6WdAq5LM9aJUdWt7bsUO9hQW2aoXZ4252aKuqqmFezoKUWwKFuXge
Z0gWf50SWbBq/dcGqXl71B1wOyKoz4LnaaRbViIOOBvt+3RagwUZUrKa0SYO
yH9HWTZTiQWKeg6djAYHpNULsVolWOAR9+p1SZIj3qkt7ljFxoJ3/MWzCsec
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
          "]]}}}, {}, {}}}, {
    Frame -> {True, True, False, False}, Axes -> False, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], ImageSize -> Medium, FrameLabel -> {
       FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 4999.175718266285}, {0, 1.}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 4999.175718266285}, {0, 1.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K, \[Tau]=\\!\
\\(\\*FormBox[\\\"230\\\", TraditionalForm]\\) \[Mu]s\"", 
        StringForm["`` \[Mu]K, \[Tau]=`` \[Mu]s", 50, 230], Editable -> 
        False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K, \
\[Tau]=\\!\\(\\*FormBox[\\\"44\\\", TraditionalForm]\\) \[Mu]s\"", 
        StringForm["`` \[Mu]K, \[Tau]=`` \[Mu]s", 100, 44], Editable -> 
        False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"150\\\", TraditionalForm]\\) \[Mu]K, \
\[Tau]=\\!\\(\\*FormBox[\\\"53\\\", TraditionalForm]\\) \[Mu]s\"", 
        StringForm["`` \[Mu]K, \[Tau]=`` \[Mu]s", 150, 53], Editable -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8200179526969323`*^9, 3.820018057740781*^9}, {
  3.820018105101287*^9, 3.8200181667705183`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlm", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tpts", ",", 
         RowBox[{"RabiPts", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", 
         RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"\[CapitalOmega]", " ", "t"}], "2"], "]"}], "2"], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox["t", "\[Tau]"]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[CapitalOmega]", ",", 
         RowBox[{"0.95", "*", "2", 
          RowBox[{"\[Pi]", "/", "2000"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "20000"}], "}"}]}], "}"}], ",", "t", ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "100"}], ",", " ", 
     RowBox[{"PrecisionGoal", "\[Rule]", "100"}], ",", 
     RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlm", "[", "\"\<BestFitParameters\>\"", "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.820016324875713*^9, 3.820016330322235*^9}, {
  3.820016393773044*^9, 3.82001646609929*^9}, {3.8200165289259233`*^9, 
  3.8200165347307234`*^9}, {3.820016671370825*^9, 3.8200167137095084`*^9}, {
  3.820017326954319*^9, 3.8200173402815437`*^9}}],

Cell[BoxData[
 RowBox[{"\[Tau]", "\[Rule]", "56240.970408384645`"}]], "Output",
 CellChangeTimes->{{3.820016434056139*^9, 3.820016467437086*^9}, {
  3.820016672858506*^9, 3.820016715831728*^9}, {3.82001733390203*^9, 
  3.820017341424492*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Transpose", "@", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tpts", ",", 
        RowBox[{"RabiPts", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"nlm", "//", "Normal"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820016259017494*^9, 3.8200162650277643`*^9}, {
  3.820016687709689*^9, 3.8200167086498876`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQPWvj6fh1dvkOF1b763T3vraH8OsdXryurFTe98De
5OiN40z57Q51icUvWHcdg8r3O6w5uXr6yc0T7Bn97//WaZ/ssHHN2kVdfAeg
6qc7TN6U1nxd4Y59uvWlyTfCZjtMFTqfVfHvBVT/fIeFsSy6L06/s38++ZGo
0+SFDpeW7EkMankDNW+xg8TBZd/ZDj22l+K681C8eqlD6h4XN2fOy1Dzlzv8
8NujtFh8l71fw9W1b5NWOuyX2f6e/8d+qH2rHbg6z7BsPHDVvvHbucrDXmsd
ik+/PR737jHU/vUOmmvVJ4alvbKPMnuyyGfmBoew+MKoSV6voe7Z6ODOdPTH
wt3P7Es+Pugw793kYGjxO+8n332o+zY73KrLnNN+55I9AJlUqBw=
       "]]}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]}}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4999.175718266285}, {0, 0.9623909835089998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8200162672412853`*^9, 3.820016339880286*^9, 3.820016473384672*^9, {
   3.820016685995693*^9, 3.8200167171059294`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run - positional error", "Subsection",
 CellChangeTimes->{{3.8198162061352124`*^9, 3.819816213907926*^9}, {
  3.819816295509672*^9, 3.819816295846021*^9}}],

Cell["\<\
Todo. use the frequency from the 0K frequency scan for the two-photon \
resonance, but do Rabi oscillations at 75 K stepping the 480 beam a varied \
amount in y for each oscillation. Not trivial-- need to make a function \
InitializedBeamPosDependentQuantities to move the beams and re-define stuff.\
\>", "Text",
 CellChangeTimes->{{3.819816300123455*^9, 3.8198163007715673`*^9}, {
   3.8198164043786287`*^9, 3.81981651969147*^9}, 3.8198250682038336`*^9, {
   3.819852694071585*^9, 3.819852741050108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"3", "*", "2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "fTable", " ", "and", " ", "TTable", " ", "should", " ", "be", " ", 
     "same", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y480Table", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10", ",", "100", ",", "1000"}], "}"}], "/", 
      RowBox[{"(", "1*^9", ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"480", " ", "beam", " ", "displacement"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", " ", "=", " ", "75*^6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"useRIN", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", "False"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "y480Table", "]"}], "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"y480", "=", 
            RowBox[{"y480Table", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"avgsNum", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", ",", 
              "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "simulate", " ", "beam", " ", "misalignment", " ", "by", " ", 
             "adding", " ", "an", " ", "offset", " ", "to", " ", "atom", " ", 
             "position", " ", "on", " ", "either", " ", "the", " ", "params", 
             " ", "passed", " ", "to", " ", "the", " ", "first", " ", "or", 
             " ", "second", " ", "photon", " ", "matrix", " ", "elements"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
              RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
              RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r1", "[", "t_", "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"vx", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"y", "+", 
               RowBox[{"vy", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"z", "+", 
               RowBox[{"vz", " ", 
                RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r2", "[", "t_", "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"vx", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"y", "+", 
               RowBox[{"vy", " ", 
                RowBox[{"t", "/", "scl"}]}], "+", "y480"}], ",", 
              RowBox[{"z", "+", 
               RowBox[{"vz", " ", 
                RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"args1", "[", "t_", "]"}], ":=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"r1", "[", "t", "]"}], ",", 
              RowBox[{"{", "t", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"args2", "[", "t_", "]"}], ":=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"r2", "[", "t", "]"}], ",", 
              RowBox[{"{", "t", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"soln", " ", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"avgstep", "=", "1"}], ",", 
             RowBox[{"avgstep", "<", 
              RowBox[{"avgsNum", "+", "1"}]}], ",", 
             RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "on", " ", "each", " ", "frequency", " ", "step", " ", "need", 
               " ", "to", " ", "recalculate", " ", "the", " ", "RIN", " ", 
               "time", " ", "series", " ", "and", " ", "parameters", " ", 
               "that", " ", "depend", " ", "on", " ", "it"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "InitializeRINDependentQuantities", "[", "useRIN", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Haf", "[", "t_", "]"}], ":=", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", GridBox[{
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args1", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    "0"},
                   {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args1", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args2", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                  }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
               RowBox[{"BuildSchroedingerSystem", "[", 
                RowBox[{
                 RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], ";"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"result", "=", " ", 
               RowBox[{"Timing", "[", 
                RowBox[{"First", "@", 
                 RowBox[{"NDSolve", "[", 
                  RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"time", " ", "+=", " ", 
               RowBox[{"result", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"soln", "+=", 
               RowBox[{
                RowBox[{
                 RowBox[{"result", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", "avgsNum"}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", "soln"}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step ``/`` in `` mins\>\"", ",", "i", ",", 
              RowBox[{"Length", "[", "TTable", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198027179663506`*^9, 3.819802727087193*^9}, {3.819802999443404*^9, 
   3.819803212436143*^9}, {3.8198120929386597`*^9, 3.8198120998933706`*^9}, {
   3.819812139100168*^9, 3.819812153910636*^9}, {3.819812187574404*^9, 
   3.8198123682048874`*^9}, 3.8198124212242584`*^9, {3.8198124579578257`*^9, 
   3.819812496228352*^9}, {3.819812906939867*^9, 3.81981290749551*^9}, {
   3.8198129922844114`*^9, 3.8198130629379635`*^9}, {3.8198131253967447`*^9, 
   3.8198131321322527`*^9}, {3.819825182485694*^9, 3.81982527712241*^9}, {
   3.819825309582905*^9, 3.819825405495739*^9}, {3.8198256599739227`*^9, 
   3.819825666950266*^9}, {3.819825874831174*^9, 3.81982598773234*^9}, {
   3.8198260994169316`*^9, 3.819826105790785*^9}, {3.8198261367599974`*^9, 
   3.8198262546018133`*^9}, {3.8198525812396746`*^9, 3.819852644258773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0026\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 1, 3, 
   NumberForm[0.0026041666666666665`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852583477241*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0023\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 2, 3, 
   NumberForm[0.00234375, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.8198525837544775`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0029\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 3, 3, 
   NumberForm[0.002864583333333333, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852584017575*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0036\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 4, 3, 
   NumberForm[0.0036458333333333334`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.8198525843097863`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \\!\\(\\*RowBox[{\\\"\\\\\\\"0.016\\\\\
\\\"\\\"}]\\) mins\"\>",
  StringForm["Total run time `` mins", 
   NumberForm[0.01614583333333333, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852584315771*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"leg", "=", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
         RowBox[{
          RowBox[{"TTable", "[", 
           RowBox[{"[", "#", "]"}], "]"}], 
          RowBox[{"(", "1*^6", ")"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"freqScanFitList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
      RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"solnList", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"], "&"}], ",", 
       RowBox[{"Length", "[", "solnList", "]"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Two-photon pulse duration [ns]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.819813275851759*^9, 3.819813410386195*^9}, 
   3.819813454354553*^9, {3.8198135239072404`*^9, 3.8198135508270884`*^9}, {
   3.8198135815099916`*^9, 3.8198136276734962`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MPIa/geD75SC
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVWHc81e8XR9JSSZrKjBBSSZScU/IlDXukkiSlKCGjkJVs14yse817L3KH
FckIKRFFIlGy3dFQaen3+f11X+/XOc95znif85zPlXW8an5eSEBAIGmBgMD/
f+2Vvw9XPtoIyW/2/fv3jw/+vG8KMRFzIGqVcE/mJx9I6hFU64jFmPJUrcDw
Mx8+s5bm7HIWR/1HyRn93/lw73j31L6I9WjXuX/Jn3k+6E/f1TxEl8KztSWU
QeL894NloOgshxahlz7AJz48I4mfV/FRwDFpupf0Vz7kDF2PUo9QQivDvsav
v/ngpdpftjN9G9b1jbhOzPHB6IZurxZdHTPjz+sp8fiwYtQkIOudBiZUH/yw
jsBzUYIkaeed2NfPfTFL+DOyg51L4e3CkWtFv+QI/PyNU4W8z24s7Voj9mma
D5W31rYV/NPCHyvayocn+EBRbBvYGqGNa3QXtUkQ/sV0+HFpYntR2Yce6E3E
6+21TUA1fR+umPauujXOBwfJd+L3Zffjnn6Xqdj3fDBuilPQoOvhuYdbmFcJ
e/c0ZTad2IBYunuRYhdx38rFfgr33iFu2dFpVUPoh73tVn9LOYAnltpI7HzD
h5/3VbQ3OR/EB2FiUorv+HAlJPTAaRV99DWpc1Qc4cOo1aBxNk8fRba1D93q
58MJ5d2Ww6xDKHbX0P5VJx86/8SelvExwLeLWn7YdfMh1/hzyJYII/zxo2zz
jmY+rJMyjjl/9DAKOS+PfPGMiO9zbkqhmDGOcyVjlFv5INjyO3uixxglNDw5
f6uJeNMsqUrpR3CVSY7o0wo+HBmv6lClH0eKcGa5XiEffiHEbHQ2R/mGjsRV
YXwop8+I7Wszx0I9T+aacD5clUhLOaligYaGLXqakXxQCTy00T/GAncWZUy9
DyTimfiUncmzwNsqeQ+CrxH+x+UypXyssChNyHv2NB8i5o5rQb8Vzhq8UM2x
I/jk+LvmzD5rFCt5a/HXng/z7UUQlGWNC8bUjTtt+VC927KZ/M8a38qONp8+
zAfPHIHDjWdtUNbr+yMJfT6oLynt+PDYBru67N9LGPJh0uOEuZCiLSrffb9Q
mpDnDS7sk4uwRUmv0YP0XXzQm9c9FfbFFs9UJIqe0+TDG2mvD2OnTqCEM8M4
VoHg37mRGeoOOxQuu1K7eR0fbkw9Etj+9iSWNVgF2v3kgfl3H5V96meQrLA3
PreGB9x1ZWWZaWcwku4heauBB82bPDfeEnRAP9uJDxZ0HpzRo+e8v+yAW8cb
YprTeZASvJ6eh2cx/VvT7FsfHggu/vZIedoRXXIvOAVr8KAzjRRsJ30OA088
EA5V5kGmsuqhaMtzuMDyyrJXm3mw58i5p5xH59BdQP3+46U8cIvrflWW5IS+
3ytLL3/kQr/E/cnd+53xEl/wglE8FwoLDhc7ezjjvzKK5lZfLnhpjbndLXJG
qtZUtbAfF1babvo6t+oCFl0/47vfkQsGGVF/a8cv4MEKzXjpXVxgyl4QP0hy
QdbcO0p1JwcEJj77chpdcIrkKKRdzYHjJf7DqV9d8IlT7X8qpRzIvLbovwMK
l/DzwoeH9Is5MK2VWDJjfQl7Fxx+cfEeB7YcrfsvZfNldBMyb1rvxIFU79U3
J+mumKirg7W/ZuBGe/3HuJarmOYeYa6rNgO5e2MG3P564CGrBSkrDafAI6nv
ROsaT3yw+BgnftcUHODI9Uupe+Kxwi1eHyWnQMzgiq3Pf56YIB4/ryU6Be+z
HvS9sPfEv6MPTaWEp0BKcKJnR4Mn3uJa/9N5NAnpTw68+BbihU80h2R1tCeB
ZPnjccBib6zotDb9uGMCAq44lsau9sNnW7Prjb+MwhmZ0Yi60lv4i7NibT1t
GNR2KH4mzYTgQw8Ds87Nr6HUdrp/Zi4Eby87XCQ/2wtqQfeb/hMJxY57P5cE
tRP4hVbyH5lQdDh46ATdj8BuhnsuWoeigvBRuaw3PaBGuxgAjaFY+/VlYFv+
K1CTLV7CSw3DqgFVXbTohlKjq1+M8sMwZzIy0VGuG9Tcd73NY4ah70E/uZpF
BK6vLTnxPAzNJOlfpR52gdrp5yYtgrfxx+PUZW0KBE7npmS63sZlai2WLYs6
QW2VhtyRg+Fo7a29WW3gKTTt+sG4YBKOcS4yMlLBT8Ha+hGEnQpHcec/42ZW
TyEw4+jpOu9w5FDJvcEv2qBTwSVte3E4hqtFvbjV8gTc9+aukJC4gym759N1
XrUA65zE78GxO/hhR2Ite0cT/Bf+NvLnlzu4S93jXOlcIwxQc9evFYjAekUD
c9rDRhDiaWiZbIzA3DClgwWHG8HC99i1xuMRaFASFNfk2gCzMeETBVURWNM0
u+1pcR3sqZx7dSUyEqdfhuscCKgCTkFtOy0lErP2e3c83l8F5JTAx6OUSIwK
VCj2+lwJlrcP1Erfj0TxmLqG/yIrYfF1YbZdTSSuCLRy/7q1EgZ2iSX+NxOJ
tVqbzIzfl4M/c6up1LEojI1P+NnnzQINyrThiRNRKM2o4myXYsEYqRSSz0dh
wJY9ej/eM+G4+67tSwOjcK/Zx0NC5kyQ3g4rvt+PwlUK+zQSdjOgqcT6eYdY
NLZLbuhevaUEvDM3NC/eHI11e0fYUvHFsC1msFZfORqXDVh/W8ihw/ubOezA
3dHYFye7sd6TDsmXHYsfHIjGVT26Xzlr6HBe5UpUgUc0vpkfRY/1VFhMvW0U
0BONZjM5X1RO5sPDu0ZY/T4aX7/3Xyq/NB/c7yzT/sqJxmmba6+MM/Ngi0/n
dvWf0Vh4IGdzrHge9DsnbHVZGIPWYYbv8si5QFfIErHSikH+nf+MNAUocCyv
vFk1LQafFWZYLt+QCfNTEYNXC2LQScr5R1pIBtzXOD3LYsVgcMv7r/Wp92DF
o4VbdDpisJRhdXO/bDp0vbEONRCKxQWmC4arT6VCkPS2jIiVsUgRCe5yGk2B
Hc7/WO2bYnE+4EZWy/IUSPxaNGK2JxaPeJ8QqG1PAssVPw/Yu8bib60RHb8r
CSBs1XGC4heLGz93zN1clQAVGZRro+GxyMryGj5mQYK1ysaUS5RY9GRW3zSI
ioM+/QwBn9exCK+8lRpzoiAi6ur6mo+xuNPupfe3tVGg3a2v8fdTLHpLnwjK
746ANHvOmdBlcVjb4GtUvPkO2Pntr4/HOGxvW3x9v3AYLG1Y1ffyWBzaXJj6
7FAUCrUi47w1J+PwT9bUgZ7sENiUHCeVeT0OGxtlpAosguH5gKPWcEgcvnfq
E59YGgz+snuOy5HiUOA0bZItFwTv7g8HUOlxON7A3rZofSDEfWOnzFTF4Wry
M4ubJQGgpxtRqt4Sh28sPL+qSvsDL+RUy7WXcbhm3+4PT1puQvZTjXflw3HI
P7d//6DdDTgutvDbD04cLh0oWbJh9Q34Z90vuu9XHO6TuBW1tt0XHEaDdRsl
4jGHfHPD4FUfENtmbSksF4+6I5NLPh72gcZrKq6G2+PRJFTXddthb/Cong+N
0o3Hx8z89+d3eYPcv5cZHYfjcdHPykZBm+vw0qCILWYTjyVe35YIml2H0Jib
7RZO8ei2fmmHXboXaL4y+Zh6LR6fJq2+VpnrBaMbtvzuD4xH6xeNjzXEvCDZ
YU58c0w8Wlyrjg9X8gKDoucqDunxuGbKMtq/1hO+c8kH8wrj8b5k8333EU8o
1LxuN86ORw03yau7MzzB+uZhD+XGeGyu7+vx6PIEkabNUa6d8QR/Vl41K/OE
ysVfKGVv41Gh5g498osnXDBpffBlMh57m26uaPnhCdrnUvdafotHg+g2J2Nf
Lwjbx343IEBCe52LK9e4e4GrgWT2skUk3F109Ka7vxdYmYTa6y4nYaoIqUF2
63XQOzEj5baahJXJOs2/C66D4jmL4awNJKRfv2S0puQ6rHCrzemUJmEgozuz
XMobvnvLO/xTIGHwaW3DbQt9YCgoWkZDlYS57U+Lbnn6QGvU1/cOO0m4JDzS
/wXdB+4nn6QkaJNQ6PfbHZYRvnA3+/HZJj0SplyMLX122w+CqNvkvh4i4fRP
vfRzU35wkZU0In+EhNc+u+uqX78Bpg9/51qakXB2IlviSOlN0G49d+62DQkH
99iNROT6g0xXu3zlaSLeIW23MokAWDywa3T8HAnLWfpqy5cHwqePGfnrLpHw
ZMjcz4nAW9DPXXDeyJ2EB7f00s3Vg6Dpx2UFP28SbvE4u+RicBDQBXvGaP4k
PBAoIySjFQyJy3QLB0JI2Ke6PnvtXDDcWJPvvCyShFmam7vd7EPAUVp0q248
CbdP/J3MGQqBI8peE64pJHTQ7jIReBwKmrsGi7IySOiZd6x5zD8MNu0/dLGT
QsLFe9hPXCfDoM5p1CWhhoSPnqz+L/rVHSi8clSlqYGETbF6G1ntERDnWz79
pZWEFkXhawJ6I8E7ZFOxfAcJn8tbVGe4R4F9TNhly1ck/MBYvnGzQjQIlG9x
W8chIUP5eUz5UBxM1sWoGX0hoWHa6uWL15Kg68ks13eOhL9j3RojIklAedt8
ZUA4AYf0x60KAxPg4ILz7lmbE3Amg+X5/mESqCzv0OiUT0AjbZtUfYdkEF+3
+/O8cgJmlLZRRluS4ZdMFnO7RgL+6YW2RtsU+Kiy0MNBKwH3Gj2kgUIqhJkX
eMqbJGDlOoeSBew0eEIZ86YFJaBaaHbt1V3ZsFfZZGlteAJqb9l153ZdNpQw
qrOexyTgx/Kn+0su5YCUttyOocQEvCgAtGElMpDqo5v5aQkY3RZuvi+TDHbv
dohrMRPwkb97d8OmXOCuDyxt+kDoj4k0DZ0sAAfyBPZMJKCTbOxzpZ4CeLnV
rGeMm4AH5Xx7Bx0L4VBZzYUfXxPQa6HtwgtDhVCpteX34l8JaF5BP2m9l9jt
LZ8ZmYgn4osUx6YIDRqsJq0dfXswEZdrxGn1ryyF8HVBPlyjRNRfwQtVYpTC
XPbU0n/HE/H++OE2qup9uKRokS1mlYi9Q0Z67xLuw2Dpwx1yJxPRoe+zyFmx
Mihsd7x10TMRd8rcom0gM0BnUdnGb3mJKD+gni4ryIYzgYZmKxYmoczDDUHj
o1Vgynwwm7csCVN2vHlrfqwacHRbmo54Evb/6etdRakGGWOxYSfpJIy/dm2f
nMMDGFnT71qrk4RL9BK/XRqrAefSSxEXryShOvIluoUegetgbH1TXxLKZQzy
xfSawG9vj5oPPRml3yu3K9Y+hV8WzQszGcko0XSn9trnp3DDrfxdQ2UyZoSZ
a1+TfAa/wvMrxh4mo3PIhfEWu2dwk5wcu/RxMn4tXvVCgfoMAkSsuFlvk5Er
fchQLK0dgl/2ljSLpqDM649ytkEdEHmpb5v41RS8Gr89wLy6C9LvDSiX7krF
HGOJXdHve2DfwDKliXd3MXwhV/pL+hA4+meOWwWl49ZXb11ubRiFmwUSr6+E
p6N1QeCXsu2jkNwZ03InJh2LDj1a+Uh3FFpkAvIfpKXjxEXbFJ7dKCi1nHbc
zCTO69i8Ss0aBe5y6aHRD+n46kWcz5zyGPjmUHo99e+hT2b4U8recYhvKmxO
EMnAWaPEbXd1JkHx7tZm9eUZOKC1y7kBJ+HhZerj9tUZqDhCW3XYbhKmJehN
C2UzMG+8PLHuxiQculDa4LcvA29f/bCbVzMJv5aVPzzrnoH/XsSddNeeAmer
xvIdAxnYqeEfulNpGv4qHyzvfJ+B5T1HCqT2T0PyfBP78kQGijZPnJQ3mIbG
omZWwWwGDsm2dQycnYZNv54wNqzMxJ6AVeHZ96bhZXZnieChTLxkvK4pYMkM
7J98m99dmokmu/gLwgdnwClv4M1fdibi8cfVfzgzEGXfL6pSk4nxq828GAIc
YG54g9YNmVhGfbgyU4QDb3pee4W0ZqJ7zYsrX5dywKux+9Cu4UyMGrHndWtz
gH7vyWiyWBZ+SP5T2JrIgW6r1vWNa7OwpZD0V72IA3NiLUe5m7Kwr+rf0Dkm
B6SfPw7aIJ+Fzxnrm9xYHPjvTlO5gXIW8b6eH3j4iAMfPOvCvh/IwmnrW8/G
pjiw/hh7i61nFi5eyLpkvZ8LsJhlG+aXhYM7NKxXHeWC82NGDONWFpanRvst
OcaFmMCyhsHbWej6yuoqw5wLbJ37s4tjsvBTgcmnU+e5cFyR1vwgPwvTHqmP
r4vhwu1/2U6Sr7MwmnbbHnu5UFKTlWY4mIVvFOKcZPu58PJ65nPPkSwMfSA5
YU3gnxoZAuTJLHS4ITqdMsEFGU665nNeFlZpK3SG/+DCwzfJwgGLsnFy+t7M
7vU8+JiUpE1bno2uyRc3dK/jwVKTRNfe1dn4g7f2oLIkDzSWJpAFN2bjQuOU
pJWqPLBpie9Rk8nGVzHffxzdw4PAoLjFdorZWBIaeDFuNw/y98XqhqtmY+jv
iugF+3jQ/j3anbUzG790Wik4HOXBF2ZU/pB2Nh7LVlB4ZcmDu+sTJ+MgG42d
Dls/suCB7q10VfgvG49ri27Kc+RB+FFqeY5FNqo/WH4+5yoPNky0NDtcycbr
gTqS/Age4CbBsZG8bJxhHL66qokHYyGLlZPo2dj5Pe7N/i4eRE2tdNNnZmMv
3Vmnu5sHryqlvuU9ykazNb8a7nzgge9mRR3LlmzckBJ59N4oDzaFqQUIP8/G
jRIZGQ8/8cDZTHfh+f5s7Lm27N3feR4sq9Y/vOZ9NppKz6gv+skDhtSR2Jbx
bHxCZWt+XcYHq9vm3de52ah9Y8xUWZgPv2ZOrFGczcbEpz1PXdfxIcf87InX
v7LxjO3KY+vE+HDowcWscMEcfOO08vBlWT7EhvsoTKzIwefPfJ9Jq/BhJzfQ
5e6aHPTMf6nVpMyH1xbhpYabcnBr6XDaxx18kJFN2U1VzsHkVFV1ZR0+tNzJ
9LPVyMHH4joSF/T5cImXV7d4Tw7ePHR67iLyobyWZeByKAfX7g9cvdyIDyfk
aiI3HMnB2Xm5/psn+DAf0djx1CwHU5/nOJ0x5YOhdZeVypkcFNlkoxJAyAc+
cc/P+OVgitBKmQw3Ptyy+UbLCMrBQ2FJvxde58OWR3+4R+7k4Jdf4u1ffPhw
JXqZd0lyDg42LFj3IZgPq7+I15zKyMH1m5deEg3kQ7XtxnnR3Bxs/jev9imK
D6fqZQ/WUXPwVn2B4HAIHwQVlcPdynJQOHdQrCGRD4UxGs82V+bglEW+/YkI
Phh/3bOi82EOOjisZa5N5wP/BJgHPs7BwIWR+tlxfEhu+C9V/Rlx3ndfw1QW
H3S2Hh8Y6srB0Tuc7uwUPgzFWknF9+Xgxayz9g4UPoTOnnKEoRx8Jv1MYDOh
r3TSqZA/moNb9oenPM/jgw241QXN5KCF7JHPXwn9cHnvnlVfcrBdoGD3IJ0P
FYtuzeTO5aCkNPpJ5vNhdOaOkOa/HBStC7v2ncGHpRfbYkaEyDhoFny/tJAP
sgNH128TIWOU1rxLVwUftI9253kuIeNPiilzlMYH00dW2x+KkrEhaPL9wQd8
uKgxUCMsRsYOAa7eq1Ii/7n2/x1bTcYMyw36prV8SJX42J2ylozat4/Wn2Xx
4X74hdNDG8jI8Tax3vKQ4MfczKTiZjI2ZZN4ZlV8GLzk7nVVhoxqOz+5LCfk
s4Oz/6rkyShgJXfDiMDLTPyiBbaSMdNU6qA7YV+u8e/awypklDtVLfe2gQ97
d4XkJqiR8ah2XEB1DR/MCkTUBzTIGPJzRJXSTPi7LvqBnCYZ1/1ZzTEk5EGR
Kw0u7yFj17/ZNP0nfLj7O6mLvZeMk9aNHhcI+X239af+7Cf87Ri4G9XGh9bh
zIlDB8h4c/mTB/uI+4fMZD1jD5FxlyZby5mQf3tcMN9rSMY9iWtj6wl/RbVU
oqSOkNH+uX7np1aCj9T7ay4cJ6OwWlhe8yM+6G7cRSkzI3D4v5+XCP8sYqpU
5yzJeMaT/vIXEc+l+X3VaEtG1/QR0o5GPoS4N+hHniSjaES/958mPtwbOfSi
256MB71Dj5XV8YFp+dRuoyMZI6Xe7LQn7LW1Hht3PE/GH89Fjh4l4nmv/fJa
8UUyyh++Tqon5HN0679fL5ORve7z9Gki/ys3v43QvUrGsds+X/of80Ex/ozE
bQ8y/urn5W4g+KAnOJrTcZ2Mnzb+FxxN+GPteXHbWj8i3x7namLYfHAb41Ta
+5Px+G8ft0HCnzCbaweLbpEx4obF0XtE/TOffuvgh5DxokpG3v//ry7fd+OE
djhRn1v8+n9MPrSXzo8GRRLxr9U5cICw9yth0Z9VJDKyelgDywl+iQvH3LFL
IuOTDMmOYwR/lb3FVuelktF5xjqnk+Cvrd0GFc0sIv+LlrSPkPng/jyrwp9M
xr+PVZ+bFvPhjp7cgZY8Mg55tE7EZfChUm6brTWdjEoNN4y+pPKhM7nsY3Yp
GbdmX1IWIfppTETz6gSDqG8aabtQEh8kZnTDfasIPhs6J0fH82Hb6cZVjTVk
/G+znVFjAh8OvjDIWvKIjDuXGazYF8MHuwPPlMwbyeh+4M3Ln8R8uMY+Xn6v
mYy15cNdNAJ3rRcfoD8hY6lddtWuAD5oBPb+q3lGxu/bWec1CUz6mKbQ3kFG
l978JQKhxDwxOnXkbRcZR1r6/XWJeXX8vvS1mVdkHBa9x6BdI/i6+mPq79dk
FDJYeGrzFT6s8Ct8uGyA8D9fZU+/J1GfIZcRyXdkdAuiJ63x4MNzfbXFqu/J
+CpTZWnieT6o0j6p6X4k/MlUvHTLng8xK8otjo6TUa9dMFTwHB9mPH38Tk0R
eKnODSEnPrgsuS2W9Y2MV5YZfJu0IPh2xUirdI6Mqm1sWbYxMa96lp2q+03G
nqntd3T1+BCh8yK4Y56M14tD7C/t58NEdmLRO0EKzl0KJj87wIfzmmQ9qRUU
/LzP/k2zGh/Onql1zVGkYKxfYMe0AB8amgMTy5QpKJ1T8DVYiHhvVA5W16tS
8KdCgmn1Dx4ExS8cerGdguwd6oqm0zwYnm1b8H4nBdMkt8SVTvLgdNTrezJA
QdbJdrn8Fzw4UfG5jWJDwfxZ3zKlTB5Ub6zgMe0oeD96gVg0gdcH+Uo0nabg
FbPYmhQC+47t2/vSgYJyEyfCjEg86DP+d2bkHAXH92q3zAfzwOq96A85dwp2
lKy4TrrAg3KDrk27PCnYm/VvQ+tZHkgUJx3U96ag6CnO6oZzPPASs7lo4Uf4
s/2I/9wpYh+4vjHunD8FZZ95TT4i9hOzZUoK+REU/HKiZshyBw/cW/nm36Mp
+Djec98zYv+JC64KMoqn4ELSAcntMjx4/uO/QU4KBStY9t4NK3jw3+j5pN15
FNx9lr5m1QwX9tblCT6pI/xPkarPIXNB7qr00NQXCmY+tpLKE+ACqkws0/1O
wSnTeElTIS6cGbuvE/eT8Dell1k4w4HMk3opOwVy0XegV8/jNQfWGp0+enN5
Ll4d9z1/ppgDS2UzakSVcjGEve2dvzkHvrxce3f76VyUfzU01pU8A7bBm88c
dshF0+ULc+jRM1C/fcvWc+dy8U6AlNVG7xlQHFLh+zvnolyOtd2NSzMQE7Oj
KtUlF0VLZTy+XiDk/x3t+3s9F89P1dMXaM/AyQfB657H5eLiKJrfaOc0NOdw
7l5syMUvxp452XNTkOralEaRz8MVS0Y6bu+chICqrF9q43nou1BH76DDKGzx
iDut+yAf12+oLPxZMwyd8/tMdwQW4KFy6X3Pz/RBw9JlqneCC9BA/p+lrWof
sNYOLHoXVoBJnORfVzb0QYq6b31EdAHel9qUm/zyNZyyL1d/n1aAe2y/WDzW
fw1TdarL49kFWLvIyP2UYi8IB2x+xpksQPOPxBor+gp0fs/rUy0KkV5/0Hb/
ok741HI8kmddiDfsI3bmf+yAQlJ2p6ZdIVqp2XjeS+gACUW9E40OhVhZPRS4
Q7oDeKYBVwbcCpHfeuOMpN5zyC/8nSYaUYhu54WUlrk8AzHzOa77w0K8AkdL
9023wpNNRruq6gtRZLpIvLagFQIn7vr+bSrEDc7XrzQHt8KM/54FUU8LMX9r
Byt0XSu0Fnmvz3tdiDfD+VJH97eA/9/Zg72fClFJUCXjcNxjmKB+vqujUIRO
L0IHjKIbYNw5yMdQqQhf+RxMGj3bAKNbVtpYbStCrlsN87hKA4yQVdde21GE
SWMBm9JK62Eo7UIydX8RFsVd6bE+8gh6It6R1lkXoVDStcg11FpouPg08lt4
EW63OL/kz4dKqFe0dVkQVYSs4F+b9oRWwqPRcaNVsUVIfyAi/U6jEh7mXleS
JhXh1X/MbSVzFVDrILxYLakID045ShQ/rIBKWwh3yinC2UPr2+XSy6HEqCLk
VVURTiS91pe3Z0GaEuUmc7IIkx/toPypKgFrXc1zgpwivDnR61thWgISpk+M
zfhFGF6/9fvTimKI9+Fu+PytCB/9EV69pJoO4a061RoLqGgi+0Ge85QKXk4v
Z8s2U5F6uul1iXwB7PQ9P/hPhorLFxivP9CaD5+i5x6bbKFimn7icXeDfLjM
lkriq1BRqEhevulyHjgKXd6xXZuKKywiz2xupYAZecGV++ZUzBBZKrnEKQtW
lKdazVtR0cqAUhXYkAnPnyjvP36CiieNx15Ifs4AI76JKO8MFVnb9nn73rkH
qJdJV3Oj4nXXHSlyXXdh3mx7YoA7FSlX690Kde7Cw/NNfh2eVFyrbyfrF5IK
e2InjdxuUFEm61zdNr0UUB/UnCi5Q8VsMS31iu5E4PCfdP6JoiIss+7fdzgR
6AtOVh6No2KSQmNaEi0BFLYF3+YkE/kQKNv9LooEm250yKvmUnGzaPnOwFcx
sHS9s0PxQyq+slubsXnnbRCT1h5pqqfivzhTmq9eGKxVXOo00ERFsrVrTA8t
FGQ1719Y8pSKPgvulW/8FQzapt+vXOgl7N0UzB6WCAQ9m7ZPgW+o+PiRpoJj
tz8csr/nkfqWinlvt7aIDt0E4/Ous6VDVGw8KKdh6HgDTF31vFs+UFFW8vUV
yTZfuBARHiDPo6LNw/fegsu9wDXe9t/ezwQW161igCd4pKoEm89S0bO3qarU
2AN8s/4IXfpBRV3TTWOr+O4QmN8ZFvyLiqTPzT0lDVchrJgskv6Xiu7Cxyal
Ll6BKJZHBEOAhqt9637b+rkC6cGhpW0LaOgic9zFZs0lSG1YGzMsQsNuS6ev
vTcuQuaTyeU/ltBwd2OVesd/FyC3syZ+xXIa0n9JxiQ4nQdqb8wqRTEaxrVY
xRm7noPSQfuk/atpGFwp3n9BzxFYHzXWWK2l4c1did0Bm85C9bTQXdcNNDS+
Nl5xpNEeHn3uWR+2iYZn4Xeza/1JaJ4rvJchTcONlpUbby20g2f/fDex5Who
ciBgR+WgDXSJHMl+pkBDs+tH3p6asoTXyzfLjCjRMHroI92v2xwGJfiUn9to
GMoKmXsWZgYjko3yq7bTsIyZvLhFzAQm5ZIKlHbSUHK/ISMo3hh4yue34m4a
HstatqX0lyF81dhDs9GmYR0loeQL3wDm9izZdnUfDXkhTNHx9IMwr/e2JFyP
hieiV2dmXQQQ/q9UPfsADYW8DfZqtOnC0mO3GBWHaJg9rXNRJFEHxCzNdnYY
0jDjcrFw0YgmrD0pXz5qTMPNjlu3C9nthE2O33b/OUZDqSa7n2ejd4Ccy5Oq
1WY0TE5ee5rNVAcl93SdbZY0dF0elqOerQLqPpdrD9rQ0Ie+LCLadRtoBu7f
b2dHw+tnlv9cZKIKOrdX1l87TcOBBaL5Pu9VQC/mA0Y60BDL159qnVWFQ0ns
JvI5wn6dTZ/33h1gfO/2oWpnGjaH07nf83eCKcWm9YULDRlhGTqrVmmCNVXZ
aMKVho8OCWxPM9CGU2W/n85fpeGS+6sk95XqgmNlx5G1njSMGGiPrFECuFiX
06HmTUPPgmxBbeYBuNJ8zcTAj4YN9J2TUroG4NWu333Kn4YKJ+OaFn83hBsv
11h43aKhYEBj15Fvh+FW/0RPdAgNZ+/sUrOpOgbGOXsbkm7TMOGkSPLT9WYg
cT62OCOChquoG7z0fprDsMr71LxoGkq/c2yX9bAE+qedIcVxNLRulzDY8p81
XK+87cZOoKH41sOyzp9sAf3f2NYm04h9s2eSN3ISlh3cdujxXYKPW4uazxvY
w+tFgdvb79EwJyFMRH6jA1A6uja+yqLhnrz0Zlurs+CaJC/ylkzDv7tfOoWu
OAeC0k8HpwtpqIerFO6ZOoOqlkTUUjZRf5Veq5s2bvDjt/N18UoaBnU/4DYI
X4WmxgcOGx/Q8P59bVGOjjvE3hE9KveQhh9DEq7GbbsGtsfO7FGpp6HS+pwU
G1cPkF/NktvZREMth7fP/OiewHsjvGJvC8Gnsza8qmwvqM62+XmgjYbX/Jbp
P/C6DqFO9NHD7TTU2bd0b22CNxxX+fvCrJPwxyda7pawL6z/ZFJ7opuGvb9t
ZS9f9oOPFbmFZ3to+M5m2MzZ/wbcv/ktwaWPhgvGRbtMrt2EgUSEyI80TBns
TtOKDYIC2ySVhHEazpmpLnBYFwzuUuNr0qdoeLko9urtl8Gwb1RbkMKh4QbW
TvXguhAQoUdzqHwavm7QPtNzNxR2NL5Ob/tNQ/Lq2ThScTj8CVe+3TVP8MOl
ctg87Q60HvV3fyNIR1TZWXbvcASceiNrOLmIjpNk9cen30VCBN91dpEEHWkl
nznD7rFgUVE/vHIdHSU7yc7Pr8WB1E3x9nUb6Zigsmu3b0E8lItUU7bK0HFq
yJb8pZ4Ew5sXmBiq0jHRTtvty0QiaB1Np4UfomPLRNR88Y670HDhU2aXIR2D
P+jyzszdBeNQQ9LGI3QUbl24JNQjDexrvnnfN6Njp7O258pH6XBbyfzQa3s6
6i17ztLyzYQe4WXDCn50fNBMij20nwL2Mo4vr/rT0Snw842IHApM7nvQ8uAW
HVW066ucl+bCH48LJcfC6fhSXMDC820uyH947Hc9iY67fY3F88LzwaPOX6Kl
lI6uO9/Qpb4XwZ83rxatZNJxLFBEa9KMCuGzKr9ty+mYt7OZYdZHhXvb+j9w
aujY1+rtnVBLg8b03WUSbXS0TFFerEMqBjFv3mGnETrKKX/daBxQBvfVHW4t
WFeM7QUX7Dy2lUPQ/u+iazYW46vyJ6MRZ8rB/GjMPcXNxagpcletJLUctpyU
U9KWKcZukuvTyOly+O5SXXFYvhh3fk6+rQQVoFcgxonfXowtcVvbgmwroUOy
0XaTUTEuutBSzMyoBs5iuZ27/YrxieL2ZTrn6kD548dR57fFGL0j3vOFYDPU
GAbeqBkqRsvQtBvThs1gXLJebMVIMaY3P/GIc2oG1+vH9lVMFiOFOtN2oq0Z
GIuqEhZ8L0a9lYHWokktoK0apUcWK8GMm8624ppPwPC6Rlq/QQkuFbLP35X2
DM4vCjhylFGCetp3a493dUH+35cH1vuU4lObDvn4hW9AocA2bV7nPjZVfewb
9BqGCw+/8p2Xl6HU7rc8F/pHKCk40lfxsgzbGJvEBzdNgNhJ7sblr8vwzrH+
2XfSE8T3VLy9U38Z6v+7ddpLewJ0b74cE39fhrMeLn67LSagw/TE7FVuGbYc
GSgoDZ+AHwHsxWuEGbhA+3BN28wErFduVHghxcBHlKi45JZJeLYg8ckNGQbu
1dM7dKRtEvyHHF0U5Rj4aVQ5kjI8Ce+ThEsDFBhIe2/a8GxuEqjzhpqqqgyM
D73aH6A0Bdo9nQcjdRh4nurkDyFTcOLW4Bl9SwZ+4KyJvaQ/DVceuGlNWDFQ
ID3tRsrhaQj5Oi8abcNA/R9/vyyzmYaSC7I1L+0YGPZ9reKZS9Mwb+Is4XiW
gVpRmU/mE6YhV+ZTW9AVBvKei3q0TE/DTOOCnY8iGHj3yt1hpcgZEPiTvNgx
ioEOA1IkkbszIKGlOLwwhoEXPDQzhtNnQI9uFHMsnoHNFf6dssUzQEqMHR9M
YeD7sDCBI10zkP9cqi7oLgOdHXu8Dn+cgQcijKQt6QyUctGPUR2dgZEbL9E1
k4EbHzWciJ+bAc1z6zJ+5zIwtb28/ZsMB4yyqNdy8hn4BU8EHZXlwOk+HSP9
QgY21a2hCmpyIPzIqW9RNAbu+OW1+4UBB97sophsZDDQXOVOiNt5DnDcdio+
YjKw7YbpuNYFDghSH/85y2Zg3LEvT4s8OaCyaZxGq2Tg8sJzQY7BHAgQ3ias
U8fAtV5eK09kcUCr+m1RwyMGRrt/vqBdwgHe5ZgjRg0M/Cu1a6tSFQeKpPfz
XzQyMNIkxOAhgR1ecRNtHjNQlX7SpucBBw7mMmS9nzJQc4nShzbie1cEtYDd
y8CRgCbBG6u48Ojr+MjePgZKD/v/S1jNBZ+iu+FNbxj4lPd3/IAMFyZX/Ozo
fsvA/VOnepzUudD+rvbUpw9E/UKFxUyMuUC6eeCGGo+Bvz+vvX8wgAtG279s
ruAzUDl26W42gQU/5jbqfmagtn+JwpQ/F2pSLc43fyH8sdBacS+cCx7GwkuO
zhL8+lKV2ZnEBasNT+5e+sXAnqmblr5ULmysOlpRJMLEodqLwdQOLuR9sfkk
K83Enqv/Oa9cwwPd7qVpz2SYmEJy1C/ewoOesjrwlGNi08fAnq1SPBB2k49v
VmAiw02Ot3grD5wmeGoXVJko9cJUW0GbB39aKL0r1ZlYcH53AhrxIDnfMqB6
OxOPdXhedUAeNJ+teb5kFxNLLl875UTItwzevlyiw8RrbQ+h1YYHD2u0V1vt
Y+IqMRWFZxd4YJk+U/NXl4l98f8pbjnDgzBrs6UmyMQ7zkI5xs48GOvaRPv8
HxM5NacFP3vyoLCFPa5lycSjK4XWU2J4oJfvHDdsxcRqm2nngns8eB2yQSvC
homVLXbKBxJ5RP1u3e63Y2KCrPcv6l0eXKgx3uJ/lomC4z34gsIDgfS/7VvO
MdHl1deBuVIepPkwPDucmBikyXeMLeRBm+bax1IXmZhHPZwpXswDpbIPZxuv
MHFNn9vda2weNMQmL7nkzkR5b3arfh0PbF0NmeIeTCwiPZk1ruJBhHKpgNN1
JuZHGJKna3ggs9iBKurDxAzNnHsuj3lQPS5uWuHLxLsLfZxMH/FgMs83R8Sf
wJ8Slvo38iAoZJthWQAR744AkcQ2Hqw/O8SzucXEpEyarVszD4ykDunRQpho
0P9dYssTHrz/833MLIyJu9M2iNU/54HvW1rsr9tM9DNQFCE/5YFYzandeXeY
GKnz7bdPJw9oaSvfHYkk8ncr4/P7dh6Mf/pg9iaKiYr1JbIBPTyQO1ze6hTD
RHX3q53KL3hgTwnf9zmWiaako7cfEfbu/bRlBMQzMczn35ptL4n8m21TWJrA
xGHi26fzNQ/E6X/TUxMJ+8h2CSXuOy7UtUI+mYjn/NumCx08iLLLDS1LIfh5
Yy13ax8PWllec/vuMnGsJjuoiDgvtMzQrS2Nifq81PU/CH29cxtGLO8x0SRZ
qC+3mwc3amesP2QwsfxAuq3wAA8qVz9qd8tiotDNVs98wv8vl0n4K5uJaiuq
DdWJ+9WbHSvCyUxc/nvHy8JeHlzetFtldS4Ta04GGB8nzlO9FuXk5DHRWm++
tpSwP/q8f7VqARN3cNb5nyLil1EoiaguZKIzddFwwBsenAoI/HuIykR3C5Ox
NQRO6zX16KYxEVTPJFYQ9/WoyU+cLmai3P27cRqEPbHwbyenS4j+GOltONrP
g6NDT7q87zOxanhp1+Qrgi9a9wwWMJj4t9U/7hpRv+Y415p4JhMD2hZc4xD5
FZjQ276JzURlEYekRCJfurAqn1rOxC375DfQiPvUyHY+AzVMPGgTTDlC1OfS
nCrH+SETzZQV3yQ+I/rH9J/D1zom6rx0eWVP2BuhdvfeqmdieJvXw3niPinB
fGPRRib+eeegnkDwy+6Ed31aExMHRK/kLiTOpzKNNBWamSiSLSSVT9z3cokk
jdnCRLvVDy0CW3iwwpG7We8JE1trIxidDTwwrqlPfNbGxHFxCIoj+BsunrjI
5hmh32oga0fgpktO/h/bCf+OKu1/TPTPfJPW56sdTJQ0GJvpIfBeySXOfzqJ
fBwPiTUg7Ht7vh2I6GJiY39/zKd6HrDaS03WvGTiGyupM2mVPODLBzVTXjGR
bzkWN0/0m6q/uY56LxMdm1wuxhH6F3u23K95zURD1kCxNqGfr/pDzvANMY+M
iyscGUT/hD29+6qfib+9hUIdiP7d9C5D1OEtkZ9tGTkGBLbdfSWYM8hEvCRV
r1RCzL9Y/O47xMQnXifOCRPzoWtM/PLC90wUqPx0eQWLB6J6Y8MJH5h4Wcn0
3zNC3yi1ylLqIxPbvfrKk3OJeceLfEofJfpxT2/bWAExT/47pbdnnIlfHbPd
ztCJeZutzn48wcS6rJymMTIPtH8IKJlOMTHiVvXfT+k88DJ5lTk4zcR0Q+Uv
soScWVSwyoXDxK22bdrSBDY9o13L5TIxd42ARmUqD3hr2508+Ex0fZIUtoXE
g9jO0yt+fCLqGbpeK4SYl6rhn6pufiHmv8TzUCah/2x/6FmBWcKeuKJsHyF3
+bZm2e1vTJyWdCt6E8GDxaXU8iU/mOgk/UkpIZTgl9M++7g5JrKvbZjtD+dB
pmw3nS3Mwl2HX25XvUTUs/+cpbYIC6UbjaPaifnfT/r+9+EiFppvWpc2eZmY
V0aRRQeWsHABnarbTuC1ApvMWpeysKjWpHvEkQcVVfd/GYuykFPZ53HzBPF+
XD2Q/2I5C42WWGtH2hL9rthzzHIlC4NXxWLgKR4kDDn/eCPGQsHgdqtwOx5o
pP4knxZn4WZJs0ZPUx50HosxHlnNQsNXE9zPhjxwWyg967yGhdOCggZHifdL
tI6ZNbOWheHcGvmKIzygex0ydF/Pwg9L5zd3EfqHVfs+zW5g4SrPX7o8XWJ+
f3S55yfJwit25ltTdhN8z/ijP7+Jhf7L/C8v3EO8hxbx3BApFpIK1jFDdHjw
eKnc3UUyLBTykjCp2MUDx6ZyjJFloX3DylxnJaLfbxhOi8mz0GAxzdBZjgc5
OwaSUraw8M2i3yvzifdbb8p1/0ZFFjLe+Ui/V+DBIPnfePZWFnZIPlj/H/Ge
37RNJMkrszCg3OsmX5wHG8UU9lJVWOhMnlJxXEG8P0+qPqqqsrC5WVR/3Soe
2NwyjmWqEfmWaBx9JsaD71rvtLS2s7Bq+c+TKYsIvvOuvq/RYOHtGXtK2h8u
7CoUioKdLJS6fuZ+8E8uvDydsqt5FwvfxVCfHifk7muU3hntZuHx1dFfDv3i
woqOmvAOLRbKxUk9ruJzoTTsmIa5Ngt/FqiEXBnjwlHd9/2vdVj4S8dxT81H
Lkx/9Qg9uY+FaQu7NuqOcyGyeKHae10W3vdxqbAc4YLSubTXTnosVP5Ne9z0
mgutG7cFTQELU+jrMv2I/ef8yzrlKwdYCM0+LvPPuWAXb+GddIyFRwte6I1T
uPDm2qS8jgkLF49kvY/K44K1ZUD3kCkLK85piuXe5YL5hiJVFUsivlfVttax
XDiS92ukwY6FSmmO8sa+XHh2O57kfIqFE2qD5mJXiH3u4hY9UXsWnjswyLd1
48IhtePpNmdZWDphzxV05IJuFcWEd4Got3/v5MBhYr9L1/qb5MLCCNvvZ8v3
cEHbv52uc5mFGuYR57/qckHzwLeFt6+w0C7jVbLvdi6otRs9lLzOwkyzXdqD
4lyQGuYrHQ5h4d7r3MHKHg5kNoa95oUS9WrYGGnfxYGN+RvCkm+zMPCdlzy1
mQNrXfSHhyNY+G+Z51BSOQdWfk1N8Y5n4dMTVQa0ZA4ILNITys8k+LK2euyd
NQc+qse8na9k4YgFeWB0YAZEotE6opq4L+XXio3tM6A0Mdu1qoaFS8Zzf8k2
zICxPu1IRi0Lx55qdHrUz4BrzunWLXUs/J2vKY81MzC7cjvT+DHB77a6F3/T
CHufu8NTX7DwpEAIuciSsMdet1N9koXGO/pXcZqJ76U9eRGnN7BxsGknVyF6
ivDfqlVCko21gd0flnhPQd29RcLPN7Exq/rK1lzPKXB6/uBAqBQb5Tf72X9w
mgLR+cu39sqw8YQMhdRlOQXl26XqPsuy8XV/+cEX5lNw8mzXL6o8Gxc5G/ev
05sCoaQQbQcFNt6RLNpVsXsK6M2a3uu2srHdgV3uqj4FY2at57o12egQlq8f
+GISTrlO6RmYspFBGqy8uGwShLMz/P+YsbGPuRwff5uA4hfHatgWbDyuUu91
8MsEmAsKzF2yYmPk2f9iFo9MwK+drN1yNmwU9NO7nNk9ARQnJ89+WzbS14c1
ruycIN6LtUySHRtzJWXmzlVPwKcnbTzDU2z8pq1BdS2bgLs/b6j+O83G7nUX
v10vnICX4aIbH1xm42a54MxKmIAb1Y9s3N3YOCKpFDWmPAGy0+4pW6+y0TX2
tsKYwgS0Scq/GnJnYyV7XYnImglwP9YrlurBxp0fa9yDhYnv41t3jh/zYqP9
sp6E/QITUM/QiRH2ZqNU5YTezulxcB6ZeVrrw0arbZvlBT6MwwqJ7EWefmxs
O76UZNA3DpUGpgYqN9noUkEWOt84Dqd9hEI/+LNxZSlNSaluHIRp5Q1pgWzc
63sr52/xOJQMOM+bBLHxzHPTOfeMcbAQ3aC7KISNHlanTXpTx+HX/na/R6Fs
FOWaC1GCxiH3akDV9dts/KJ21tnKZxwOU7Z/U73DxnLBW5/3u43D/wDNVA65

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999985727919}}, {{0, 4999.175718266285}, {0., 
        0.9999999985727919}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.216587457411112`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 0, $CellContext`\[Mu] -> -14.216587457411112`], 
        Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.229909574326399`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 50, $CellContext`\[Mu] -> -14.229909574326399`], 
        Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.261490199333716`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 100, $CellContext`\[Mu] -> -14.261490199333716`],
         Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819813363308201*^9, 3.819813458082431*^9, 
  3.8198135987210474`*^9, 3.8198136548229604`*^9, 3.819815622519642*^9, 
  3.8198160672575502`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "fname", "=", 
    "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_scanfit_0_50_100_uK.\
png\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"fname", ",", "plt"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8198137039247265`*^9, 3.819813730605784*^9}, {
  3.8198160476916523`*^9, 3.819816074977964*^9}, {3.8199835812244883`*^9, 
  3.8199835814474254`*^9}},
 EmphasizeSyntaxErrors->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc testing", "Section",
 CellChangeTimes->{{3.8194568337169476`*^9, 3.8194568379666376`*^9}}],

Cell[CellGroupData[{

Cell["RIN data to time series", "Subsubsection",
 CellChangeTimes->{{3.819456946258193*^9, 3.819456956348152*^9}, 
   3.8194574837036724`*^9, {3.819458376311167*^9, 3.8194583869456005`*^9}}],

Cell["780A RIN data, post-noise eater", "Text",
 CellChangeTimes->{{3.8194592742753935`*^9, 3.8194592863487315`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"VDC", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"contents", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"header", " ", "=", 
   RowBox[{"contents", "[", 
    RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"HzPts", ",", "dBVpkPts"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"contents", "[", 
     RowBox[{"[", 
      RowBox[{"15", ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dBVpkPts", "-=", 
   RowBox[{"10", 
    RowBox[{"Log10", "[", "VDC", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RINData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"HzPts", ",", "dBVpkPts"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8194571026276455`*^9, 3.8194571612992177`*^9}, {
  3.819457309573141*^9, 3.8194573208999853`*^9}, {3.819457486352996*^9, 
  3.8194575112408476`*^9}, {3.819457633214981*^9, 3.81945763750745*^9}, {
  3.8194578251097155`*^9, 3.819457841580284*^9}, {3.8194578959781523`*^9, 
  3.819458050021988*^9}, {3.8194580975524654`*^9, 3.819458151401802*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"fdata", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819457645150489*^9, 3.819457647510519*^9}, {
  3.8194577473811693`*^9, 3.8194578526985407`*^9}, {3.819457946273595*^9, 
  3.819457948999111*^9}, {3.819458322204796*^9, 3.819458338341813*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 102400.}, {-75.4418, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.819457512885433*^9, 3.819457572779807*^9, 3.819457640352894*^9, {
   3.819457752190879*^9, 3.819457811757634*^9}, 3.819457853260895*^9, 
   3.8194581893216295`*^9, {3.8194583271683702`*^9, 3.819458338809125*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeRIN", "[", "t_", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dBVpkPts", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"HzPts", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "t"}], "+", 
            RowBox[{"RandomReal", "[", "]"}]}], ")"}]}], "]"}]}], "&"}], ",", 
      RowBox[{"Length", "[", "dBVpkPts", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.819458368623186*^9, 3.8194583695414534`*^9}, {
  3.8194584267052593`*^9, 3.819458488630851*^9}, {3.819458703065729*^9, 
  3.819458843010213*^9}, {3.8194592286536636`*^9, 3.819459231696415*^9}}],

Cell[BoxData[
 RowBox[{"timeRIN", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.8194589271098003`*^9, 3.8194589296698475`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{"0.12732698340348503`", "\[VeryThinSpace]", "+", 
   RowBox[{"0.2240973466854182`", " ", "\[ImaginaryI]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8194589638280244`*^9, 3.8194589762592344`*^9}}],

Cell[BoxData["0.12732698340348503`"], "Output",
 CellChangeTimes->{{3.819458968488312*^9, 3.8194589768434343`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"timeRIN", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "0.0001"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8194588602065496`*^9, 3.8194588847845573`*^9}, {
   3.819458940048662*^9, 3.819458979183031*^9}, 3.8194590763582144`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
hKhe9DneXITcP9468MeLIJnP4xuUkoJiTnBEv3FchNftPJv2R4sRjt07H/l9
EchFBUh0CAW4HfXEdPguwrh1n+hI+C8035bLTRW6CDzhbCMSp/3QEUO/37di
FsGPt/C2QWcKOn3oPY9F8iKMFuTSrY3/QELBivFJ2Qfnb35SDIz4IgUBft4R
vAgndriX5BYssU4tZSJj9SJUyBZ4WDZmYGuN6UsKjYvQF6DJGLIWi/w2qpPs
OxbBiKp+mPR2GU52j+bLG1gEn64rDdkdBajqvH3K/MQilCS9vUGUm4f7CzWu
nFtchHva9W9fhhehdWWU9mRzEaK/6L3nOV2Bj8+wCHgQLQHjyeavcTHFmMtu
K72CbAl+vuUgf07pjBBTx7XtE0vwqdu7PrIjBz9KzczkZ1qCV4TQp/QdsthI
2lvw1ZklkNZ6fet1RwZy6jfODuJZgrHFodTHtNko1Ez+RtPVJehZla2Ld4jA
2ZS8uYdvLoHgWhVxZKoD+htFJiJ6awn0L/OSecjnovGb43lvZZdASMXKRDy+
BO03l9+MUVqC4S/c9TWhJeiUXkRBz9MliDNg476y64L5iGzEaLSXYHa07dM7
ngJ81/9Z0V2DJSh0uHuMdcUXPee7iaxMl+B9rb7D2jVnbF7JUJz2aQkIYYd7
eiYeY/dna+IT9ktQ/NT4UeFLXxSz0lLC+m0JRBprJJs/fMH4a6qk0o8lOEI9
zhpU5YXaz7iXOf9cArkCVYpn0qF4PtdAqujXEhyaf3S5eF8DHXkgU7GcuAQT
ISI3Ww729ekJrjsXspbg0hyD2vW2UiRkfahKvWgJzih0Pjd1zkQK9MN3fSqX
gPdtRs+kQxTSSSyurmlYAjNjExKn9iRkLRVyb79tCdYtHxe0WeUjv27L2mv9
S7BIOd8Pu6U4+d1jWb3xJYAPBCqye8W4ikyoPnT+//Xk3Tn/sRT1h52Ua11f
gm+FjkeP3svE60JLf8gJy+DCeFY947IDOv73r7z40WXI3uQKm/jyGHG9Svz7
nnoZ4glUNm7ypRjtuv4Xz7AMp8btrK6/9UKPfHSbBtiXgYjtSn/3gwhkdPGO
Iv2FZfjNYcBJ7JuNnUo5W2SvLMPcOeensjoRqC+xJ+iqyDIkkkQZvCyKwYIB
P7QZby2DYOoZxs6lcPTNXv4S4f4yuEYfi7HSzMMjRkfWxpSXoaA86OQ32kAs
+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
n6Cfv/+hdRA=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.819459149673397*^9, 
  3.8194592388258524`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXXusbUdZX91r7cd53HMfvbT3XulLrlh5lUQT638aEyVGkT80ISa2vS09
KSFwG6gREog9WAsmyCOoRO0RTCBWFBW1l2qkVImUSMkRSKg8IiFELgGTagig
EHI8v5n5Zr6Z/c1as55773vOH+fevddea+ab7/v9fjPzzay1fuHCfffc/coL
9738rgs3/uyrL9x7z8vves2NP3Px1QeH8quy7Kp7siz75I0ZPu8ffDT/nMn2
9/ezfH97e1t9Un/498XqY5b0u/q59lXL/nsnrfq8PnbHP+99Zf+2nUd+8qkv
/Vd274qcvqeP4bT7//Lxz5/41ne+m80aFYHLcfqN33j622IRZ/UxVIHvZ/77
m/+b/VIYi4eFC8/XqwCfcQy/eRUEdpvTP/KmP/k4Tlff3iIUq6oa3frFrzx9
roUhphGz737v+ziurn1+PeNuE6p6btTgL736HY+lGnzKGXzzV7/xTfWtiDcC
5eAYyq3biJe46nH8hV++/D/ZRh8NU8aZhuH7u//og5/qqmGb+hiMRyNe9Kkv
fD1bjzeWzFSN6K+xJ9UVqvLctladJrT4nIDHqTo28bxwcARNgh3PqXSIV8NE
l+bVYErDOcf0JcCbai++/VRbf2U5DP3OXb/1ISUvZ3v0nOelCs9N/DpVMTdp
b+or17K93e0MHt3e3skuXTYdz/5etrtzKbsMlT34vVBnjLOdS5ethQd/KhJb
8QhIVuG7RuwYP+MnoBmNV2640aEZDVDfbkiMzjP0sT/9/Q/sve19f/9ZTjrv
vM3yKNqImaa99m8/+kXYo77Nlj+yxvvZ/t5utm2iyD7n1ozL2aWd7Wx3b99c
kkwtilYksPwSG9iTQnGbtYI98QJ2cATAQfd4XFeLS17y5FNfwzcUp2I2Tox/
LqjoKI4J26zamMg1JlT7ydWjWpiYSph4+p7f/gdVcdBgDoyDhl++tJvt7Oy4
v12Nj8uXdhi7D9i/vZvt7e+bwrRI7O45Ro0BlfU+EDL1ijs44n2ftUMMXWcQ
w7vnpUSMUS8MXfGdKxXqhTKpMo3QPPXrv/dPUL+uQGXbKoFq5myz3ew1vgIB
VZAXjSrIjULVhBQIomRQlTsFIlo3V6CJhC+ccqJDiJlWoL/HueraUbew0ygu
7n30if/4q3f82ZN0vA3ydDUTbjVHYQkIPYCY86glGn7q36l1mvlLBOBaGQBt
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
B7YOjikWefUmcoarbHHAIohzYHmUGwpYBQcWOrOpZPTyYwtnLwpbvLEp2Mqd
O7GMR/iSWL0hBL1vyKlx8QjSNx4SfCh7CcAXfZfZ6gDSd8A1HIhzS47GuwSO
AIued01jvbX3LrCoG7vGH9jGG6cG54RN9oBx3y5V8OB4nTiX2FgzdneL15mE
V/xPb6WSqmgKXYpGJ9CVXv5irvUe0zftAuKi1i4e32PuJWoZnU/41sbGbAsw
PhWUqjhMuCer6uN+JPzAMhH2HaEbsgGoiaanMCAXbDeqFkadLkvlh8ctHfH1
Mn7Q5BFlnemEFtI7hqRNgM2oMuVUwXFIO45hssCpg7OpbN4VSBQmmDpKhNsl
EghTcMLY0VACZ8x96HwaH/Inq0Eg49fwJY3KF+uLIZKaFndBJL6ciN9qEInO
6YNIyHNRx9Q5kTys9Egkepxw2AfNEckMAfFWd3IIfj/WF5dsLyZyaRKONGDX
S5586mvslZ0NuyLj2LCCRTJJ1d0zk2z0GjIJ16tFEhZfu2AyK2cSH9gcGibh
Nx7gKJP0Mbz6XEM/Bho3oFTVbLTmFCxEUUec6oFT/C3zMU7hmILVAjlV0Owa
ldv3VzpaKc4vGa3Irwm0ssfGzsUBmruiFaUjKmjF3uSJT0SvYqHMwlinKbPm
3m6oQmlY5zls/TAyjE3uJeBZDjTj2Ny9MWbXRwm9NiR64RfkEF70qS98nZys
fjfvPOfV0G8ok82/GlJtzKmGtQe1QFNU843KruBb7hhE027iXNaAdCw/j991
/gZNijNvEmMefzHlEe3q045NimlVj6iXpXJPmdsp9yYh97DHFT+PyulH3xdI
P/tbd/QzFMCNboQKTkHDQLoPrgYDeWAGZKCUly1WkpVjWnb0vDuR2QlhVrwq
Y+ckXFeiBhlHetmXSUOC2h1+jQmaewRVx2pSE5O1FaDmzV/9xjerqUlhjVCT
Cm1FzYmAYvbu9YCuc6R44C8e+xyOoUFNGYvsEQ0AFsVYjK74NCGZsaZMdR+B
dWxMiebvGuGb7qi66n6VD2dtvzp2ljjXKz+PicXwMhL3+jdVSk7VuvJHGs0Q
Fo4hExTCqQcvk1P34BVOJZvQWUW8gs5miE8ICpIkAqPtbAA7vuGu9RJSjxxm
LA7GMqnpmoWS2gBKSlJhJJbA8bl9Fxr7Qq5G6nEryK4K541Rjh2lkX7iv/dc
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
wCISG/Xvi2v8rn6ufdUK/55d9f/0g85B\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 805},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 245, 3, 81, "Subsection"],
Cell[828, 27, 91, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956, 33, 156, 2, 70, "Section"],
Cell[1115, 37, 73, 1, 30, "Input"],
Cell[1191, 40, 17989, 471, 1622, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[19217, 516, 174, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[19416, 522, 7613, 168, 699, "Input"],
Cell[27032, 692, 1061, 26, 87, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[28130, 723, 6006, 138, 294, "Input"],
Cell[34139, 863, 738, 12, 22, "Print"],
Cell[34880, 877, 129920, 2202, 282, "Output"]
}, Closed]],
Cell[164815, 3082, 94, 1, 24, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[164946, 3088, 207, 2, 56, "Section"],
Cell[CellGroupData[{
Cell[165178, 3094, 94, 1, 49, "Subsection"],
Cell[165275, 3097, 364, 9, 30, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[165676, 3111, 98, 1, 41, "Subsection"],
Cell[165777, 3114, 4737, 123, 449, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[170551, 3242, 176, 2, 41, "Subsection"],
Cell[170730, 3246, 16916, 390, 1225, "Input"],
Cell[CellGroupData[{
Cell[187671, 3640, 203, 2, 88, "Input"],
Cell[187877, 3644, 230, 3, 70, "Output"],
Cell[188110, 3649, 212, 3, 70, "Output"],
Cell[188325, 3654, 230, 3, 70, "Output"],
Cell[188558, 3659, 215, 3, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[188834, 3669, 279, 4, 56, "Section"],
Cell[189116, 3675, 367, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[189508, 3684, 161, 2, 49, "Subsection"],
Cell[189672, 3688, 254, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[189951, 3697, 20563, 400, 1167, "Input"],
Cell[CellGroupData[{
Cell[210539, 4101, 570, 10, 22, "Print"],
Cell[211112, 4113, 519, 10, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[211658, 4127, 2822, 74, 245, "Input"],
Cell[CellGroupData[{
Cell[214505, 4205, 2058, 45, 127, "Input"],
Cell[216566, 4252, 27687, 496, 266, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244290, 4753, 1276, 28, 88, "Input"],
Cell[245569, 4783, 329, 5, 30, "Output"],
Cell[245901, 4790, 328, 5, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[246290, 4802, 153, 2, 56, "Section"],
Cell[246446, 4806, 243, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[246714, 4813, 113, 1, 49, "Subsection"],
Cell[246830, 4816, 414, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[247269, 4827, 20556, 400, 1104, "Input"],
Cell[CellGroupData[{
Cell[267850, 5231, 611, 11, 22, "Print"],
Cell[268464, 5244, 609, 11, 22, "Print"],
Cell[269076, 5257, 608, 11, 22, "Print"],
Cell[269687, 5270, 539, 10, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[270253, 5284, 122, 2, 30, "Input"],
Cell[270378, 5288, 3215, 78, 210, "Input"],
Cell[CellGroupData[{
Cell[273618, 5370, 3471, 84, 260, "Input"],
Cell[277092, 5456, 70709, 1235, 264, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347838, 6696, 899, 16, 88, "Input"],
Cell[348740, 6714, 324, 4, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349101, 6723, 1423, 38, 88, "Input"],
Cell[350527, 6763, 2968, 61, 240, "Output"]
}, Open  ]],
Cell[353510, 6827, 96, 1, 30, "Input"],
Cell[353609, 6830, 2240, 57, 163, "Input"],
Cell[CellGroupData[{
Cell[355874, 6891, 2520, 62, 184, "Input"],
Cell[358397, 6955, 65139, 1145, 264, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423573, 8105, 1590, 41, 136, "Input"],
Cell[425166, 8148, 242, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425445, 8157, 665, 19, 50, "Input"],
Cell[426113, 8178, 17259, 296, 243, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[443421, 8480, 161, 2, 49, "Subsection"],
Cell[443585, 8484, 516, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[444126, 8496, 19019, 372, 1085, "Input"],
Cell[CellGroupData[{
Cell[463170, 8872, 394, 8, 22, "Print"],
Cell[463567, 8882, 384, 8, 22, "Print"],
Cell[463954, 8892, 392, 8, 22, "Print"],
Cell[464349, 8902, 396, 8, 22, "Print"],
Cell[464748, 8912, 318, 7, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465115, 8925, 2334, 59, 212, "Input"],
Cell[467452, 8986, 77362, 1346, 264, "Output"]
}, Open  ]],
Cell[544829, 10335, 481, 12, 50, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[545359, 10353, 101, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[545485, 10358, 190, 2, 39, "Subsubsection"],
Cell[545678, 10362, 117, 1, 30, "Text"],
Cell[545798, 10365, 1437, 38, 145, "Input"],
Cell[CellGroupData[{
Cell[547260, 10407, 390, 7, 30, "Input"],
Cell[547653, 10416, 6499, 118, 229, "Output"]
}, Open  ]],
Cell[554167, 10537, 1002, 27, 69, "Input"],
Cell[555172, 10566, 130, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[555327, 10572, 241, 4, 30, "Input"],
Cell[555571, 10578, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555723, 10584, 404, 9, 30, "Input"],
Cell[556130, 10595, 79345, 1316, 220, 66377, 1102, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

