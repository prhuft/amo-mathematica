(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1061921,      19414]
NotebookOptionsPosition[   1048116,      19181]
NotebookOutlinePosition[   1048462,      19196]
CellTagsIndexPosition[   1048419,      19193]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["two-photon rabi flopping", "Title"]], "Subsection",
 CellChangeTimes->{{3.8120320269110794`*^9, 3.812032045999884*^9}, {
  3.812149200707573*^9, 3.8121492050945826`*^9}, {3.818892597097991*^9, 
  3.8188926073392277`*^9}},ExpressionUUID->"b6aa20e3-ffe9-4094-bc5a-\
4f559a54b4c2"],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.819201396926625*^9, 
  3.8192014024230766`*^9}},ExpressionUUID->"a38413a9-f26f-4ace-9d92-\
fa36a4575f35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["global definitions", "Section",
 CellChangeTimes->{{3.8192014094166317`*^9, 3.8192014473494415`*^9}, {
  3.819201691049264*^9, 
  3.819201712767215*^9}},ExpressionUUID->"27e79af6-167b-47d6-b7d3-\
7ae057014df8"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"get", " ", "from", " ", "local", " ", "files"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<../../constants/rbconsts.m\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<../../constants/physconsts.m\>\""}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "CONSTANTS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]780A", " ", "=", "2414176448051179.0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      SubscriptBox["S", 
       RowBox[{"1", "/", "2"}]], "F"}], "=", 
     RowBox[{
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"5", 
        SubscriptBox["P", 
         RowBox[{"3", "/", "2"}]], "F"}]}], "=", "3"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]480", " ", "=", "3928955767695494.5"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      SubscriptBox["P", 
       RowBox[{"3", "/", "2"}]], "F"}], "=", 
     RowBox[{"3", " ", "\[Rule]", " ", 
      RowBox[{"84", 
       SubscriptBox["D", 
        RowBox[{"5", "/", "2"}]]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TFORT", " ", "=", "1*^-3"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "K", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]FORT", "=", "1.064*^-6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wFORT", "=", "2.5*^-6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]rFORT", " ", "=", 
     RowBox[{
      FractionBox["1", "wFORT"], 
      SqrtBox[
       FractionBox[
        RowBox[{"2", " ", "kB", " ", "TFORT"}], "mRb"]]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"radial", " ", "trap", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]zFORT", " ", "=", 
     RowBox[{
      FractionBox["\[Lambda]FORT", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wFORT", "2"]}]], 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "kB", " ", "TFORT"}], "mRb"]]}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{"axial", " ", "trap", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ag", "=", "3.20346392953120*^-34"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ae", "=", 
     RowBox[{"1.52739309640219*^-34", "+", 
      RowBox[{"-", "3.817491143122172*^-35"}], "+", 
      RowBox[{"-", "4.5814576851206318*^-35"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]780Ar", "=", 
     RowBox[{"-", "1.825469589864302*^-39"}]}], ";"}], " ", 
   RowBox[{"(*", " ", "ponderomotive", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480g", " ", "=", 
     RowBox[{"-", "2.90311524481040*^-39"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480e", " ", "=", 
     RowBox[{
      RowBox[{"-", "4.82150951678205*^-39"}], "+", "1.696626924053701*^-40", 
      "+", "4.557481703934684*^-40"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]480r", " ", "=", 
     RowBox[{"-", "4.8350228219114005*^-39"}]}], " ", ";"}], 
   RowBox[{"(*", "ponderomotive", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "FUNCTIONS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AtomPositionSample", "[", "Tatom_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]rFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]rFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "\[Omega]zFORT"], 
           SqrtBox[
            FractionBox[
             RowBox[{"kB", " ", "Tatom"}], 
             RowBox[{"mRb", " "}]]]}]}], "]"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BuildSchroedingerSystem", "[", 
     RowBox[{"H_", ",", "psi0_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hamiltonian", "=", "H"}], ",", 
        RowBox[{"\[Psi]0", "=", "psi0"}], ",", "\[Psi]", ",", "statelength", 
        ",", "eqs", ",", "ics", ",", "sys", ",", "P", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"statelength", " ", "=", " ", 
        RowBox[{"Length", "[", "\[Psi]0", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Psi]", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
          "statelength"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ics", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"statelength", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"eqs", ",", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ics", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/.", 
               RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
             RowBox[{"\[Psi]0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sys", " ", "=", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Psi]", ",", "sys"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gJ", "[", 
      RowBox[{"L_", ",", "J_"}], "]"}], ":=", 
     RowBox[{"gL", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"J", 
          RowBox[{"(", 
           RowBox[{"J", "+", "1"}], ")"}]}], "+", 
         RowBox[{"L", 
          RowBox[{"(", 
           RowBox[{"L", "+", "1"}], ")"}]}], "-", 
         RowBox[{"Se", 
          RowBox[{"(", 
           RowBox[{"Se", "+", "1"}], ")"}]}], "\n", "+", 
         RowBox[{"gS", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", 
             RowBox[{"(", 
              RowBox[{"J", "+", "1"}], ")"}]}], "-", 
            RowBox[{"L", 
             RowBox[{"(", 
              RowBox[{"L", "+", "1"}], ")"}]}], "+", 
            RowBox[{"Se", 
             RowBox[{"(", 
              RowBox[{"Se", "+", "1"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "J", 
         RowBox[{"(", 
          RowBox[{"J", "+", "1"}], ")"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gF", "[", 
      RowBox[{"J_", ",", "F_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"gJ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"F", 
            RowBox[{"(", 
             RowBox[{"F", "+", "1"}], ")"}]}], "+", 
           RowBox[{"J", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "-", 
           RowBox[{"INuc", 
            RowBox[{"(", 
             RowBox[{"INuc", "+", "1"}], ")"}]}]}], ")"}]}], "\n", "+", 
        RowBox[{"gI", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"F", 
            RowBox[{"(", 
             RowBox[{"F", "+", "1"}], ")"}]}], "-", 
           RowBox[{"J", 
            RowBox[{"(", 
             RowBox[{"J", "+", "1"}], ")"}]}], "+", 
           RowBox[{"INuc", 
            RowBox[{"(", 
             RowBox[{"INuc", "+", "1"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "F", 
        RowBox[{"(", 
         RowBox[{"F", "+", "1"}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Zeeman", " ", "shifts"}], ",", " ", 
     RowBox[{"only", " ", "for", " ", "diagonal", " ", "elements"}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FZeemanMatElem", "[", 
      RowBox[{"L_", ",", 
       RowBox[{"{", 
        RowBox[{"J_", ",", "mJ_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"JJ_", ",", "mJJ_"}], "}"}], ",", "Bz_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"mJ", ",", "mJJ"}], "]"}], " ", "\[Mu]B", " ", 
      RowBox[{"gJ", "[", 
       RowBox[{"L", ",", "J"}], "]"}], "mJ", " ", "Bz"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HFZeemanMatElem", "[", 
      RowBox[{"I_", ",", "L_", ",", "J_", ",", 
       RowBox[{"{", 
        RowBox[{"F_", ",", "mF_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"FF_", ",", "mFF_"}], "}"}], ",", "Bz_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"mF", ",", "mFF"}], "]"}], "\[Mu]B", " ", "Bz", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ClebschGordan", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"F", ",", "mF"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"FF", ",", "mFF"}], "}"}]}], "]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "F"}], " ", "+", "1"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "+", "J", "+", "I"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"gJ", "[", 
            RowBox[{"L", ",", "J"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "F"], 
           SqrtBox[
            RowBox[{"J", " ", 
             RowBox[{"(", 
              RowBox[{"J", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "J"}], "+", "1"}], ")"}]}]], 
           RowBox[{"SixJSymbol", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"J", ",", "I", ",", "F"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"FF", ",", "1", ",", "J"}], "}"}]}], "]"}]}], "+", 
          "\[IndentingNewLine]", 
          RowBox[{"gI", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "FF"], 
           SqrtBox[
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{"I", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "I"}], "+", "1"}], ")"}]}]], 
           RowBox[{"SixJSymbol", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"I", ",", "J", ",", "F"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"FF", ",", "1", ",", "I"}], "}"}]}], "]"}]}]}], ")"}]}],
        ")"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxBoltzVelocitySample", "[", "Tatom_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"MaxwellDistribution", "[", 
         SqrtBox[
          FractionBox[
           RowBox[{"kB", " ", "Tatom"}], "mRb"]], "]"}], "]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"intensityProfile", "[", 
      RowBox[{
      "x_", ",", "y_", ",", "z_", ",", "zRx_", ",", "zRy_", ",", "zx_", ",", 
       "zy_", ",", "wx_", ",", "wy_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["x", "2"]}], 
         RowBox[{
          SuperscriptBox["wx", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"z", "-", "zx"}], "zRx"], ")"}], "2"]}], ")"}]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["y", "2"]}], 
         RowBox[{
          SuperscriptBox["wy", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"z", "-", "zy"}], "zRy"], ")"}], "2"]}], ")"}]}]]}], 
       "]"}], "/", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"z", "-", "zx"}], "zRx"], ")"}], "2"]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"z", "-", "zy"}], "zRy"], ")"}], "2"]}], ")"}]}]]}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{"Gaussian", " ", "beam", " ", "intensity", " ", "profile"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8192017178253603`*^9, 3.819201748596358*^9}, {
   3.819201786457075*^9, 3.8192019210721493`*^9}, {3.8192333030040283`*^9, 
   3.819233303662179*^9}, 3.8192345626399574`*^9, {3.819239771374568*^9, 
   3.8192397924775696`*^9}, {3.819285775000683*^9, 3.819285889342253*^9}, {
   3.8192860475803337`*^9, 3.8192860513781133`*^9}, {3.8192861562427053`*^9, 
   3.8192861565744452`*^9}, {3.819286516969108*^9, 3.8192865728787575`*^9}, {
   3.819288035743561*^9, 3.819288045107689*^9}, {3.819288340765124*^9, 
   3.819288483559705*^9}, {3.8192885713813047`*^9, 3.819288593317494*^9}, {
   3.819289466893937*^9, 3.819289546232596*^9}, {3.8192953132452016`*^9, 
   3.819295415598989*^9}, {3.8192954536273327`*^9, 3.8192954901823406`*^9}, {
   3.8192956455007443`*^9, 3.8192956635180044`*^9}, {3.819296175241294*^9, 
   3.8192962209223027`*^9}, {3.819297317521513*^9, 3.8192974164656563`*^9}, {
   3.819297582214944*^9, 3.819297610162972*^9}, {3.8192976881996393`*^9, 
   3.8192977778235197`*^9}, {3.819297809892593*^9, 3.8192978869323854`*^9}, {
   3.8192979549267964`*^9, 3.8192980401364317`*^9}, {3.819298093863152*^9, 
   3.819298410886216*^9}, {3.8192984815713863`*^9, 3.8192987166625175`*^9}, {
   3.819298755044718*^9, 3.819298771732566*^9}, {3.819298915864654*^9, 
   3.8192989915549393`*^9}, {3.819299189843501*^9, 3.8192992505829697`*^9}, {
   3.8192993362779255`*^9, 3.819299375877252*^9}, {3.819299420510394*^9, 
   3.819299467227704*^9}, {3.8192997080685263`*^9, 3.8192997652116985`*^9}, {
   3.819299796347228*^9, 3.8192998556703157`*^9}, {3.819299891777793*^9, 
   3.8192999154387817`*^9}, {3.819299953853002*^9, 3.8193000441457915`*^9}, {
   3.8193000811766577`*^9, 3.8193002227545185`*^9}, {3.819300267470413*^9, 
   3.81930028248629*^9}, {3.819304933149105*^9, 3.819305037999817*^9}, {
   3.819305229004965*^9, 3.8193052336443095`*^9}, {3.8193138139349685`*^9, 
   3.8193139052259693`*^9}, {3.819314032913005*^9, 3.819314106440956*^9}, {
   3.819314159872086*^9, 3.819314176795687*^9}, {3.8193142912158546`*^9, 
   3.819314521957082*^9}, {3.819314621196687*^9, 3.8193146568913774`*^9}, {
   3.8193147815229673`*^9, 3.819314807941039*^9}, {3.819314876922186*^9, 
   3.8193149249406075`*^9}, {3.8193150506410093`*^9, 3.819315135965601*^9}, {
   3.819315167750901*^9, 3.819315215304494*^9}, {3.8194119228847456`*^9, 
   3.819411977846978*^9}, {3.819412132308697*^9, 3.819412224227352*^9}, 
   3.8194123412854176`*^9, {3.8194144461786003`*^9, 3.8194144593695464`*^9}, 
   3.819414496023246*^9, {3.819459399423623*^9, 3.8194594021000004`*^9}, {
   3.81946096372876*^9, 3.8194611937679853`*^9}, 3.8194646621608567`*^9, {
   3.819666014463086*^9, 3.819666058313715*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["simple 3-level Rabi oscillation test", "Section",
 CellChangeTimes->{{3.8192038754475665`*^9, 3.819203889914741*^9}, {
  3.820001333966589*^9, 
  3.8200013389512644`*^9}},ExpressionUUID->"508c615f-4c6a-4671-acdb-\
c345f6bb7547"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "atom", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"g", ",", "e"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", 
      ",", "\[CapitalDelta]2"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scl", " ", "=", " ", "1*^9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atomBasis", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scl", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]1", " ", "=", " ", "1"}], ";", 
    RowBox[{"\[CapitalOmega]2", "=", "1"}], ";", 
    RowBox[{"\[CapitalDelta]1", "=", 
     RowBox[{"20", "\[CapitalOmega]1"}]}], ";", 
    RowBox[{"\[CapitalDelta]2", "=", 
     RowBox[{"-", "\[CapitalDelta]1"}]}], ";", 
    RowBox[{"\[CapitalGamma]1", "=", 
     RowBox[{"0.1", "\[CapitalOmega]1"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"2", "\[Pi]", "*", "1000"}], ";"}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{"diagnostics", ",", " ", 
     RowBox[{
      RowBox[{"e", ".", "g", ".", " ", "reproduce"}], " ", "Shore", " ", 
      "examples"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Haf", "=", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
         {
          RowBox[{"\[CapitalOmega]1", "/", "2"}], 
          RowBox[{"\[CapitalDelta]1", "-", 
           RowBox[{"\[ImaginaryI]", " ", "\[CapitalGamma]1"}]}], 
          RowBox[{"\[CapitalOmega]2", "/", "2"}]},
         {"0", 
          RowBox[{"\[CapitalOmega]2", "/", "2"}], 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}
        }], ")"}], "/", "scl"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
     RowBox[{"\[CapitalOmega]1", " ", 
      RowBox[{"\[CapitalOmega]2", "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[CapitalDelta]1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"scl", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Haf", "=", 
      RowBox[{"(", GridBox[{
         {"0", 
          RowBox[{"/", "2"}], "0"},
         {
          RowBox[{"1", "/", "2"}], "0", 
          RowBox[{"1", "/", "2"}]},
         {"0", 
          RowBox[{"1", "/", "2"}], "0"}
        }], ")"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"Shore", ",", " ", 
       RowBox[{
        RowBox[{"page", " ", "794", " ", 
         RowBox[{"Fig", ".", " ", "13.3"}]}], "-", "1"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "5"}], ")"}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Haf", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192390395347195`*^9, 
   3.8192391336765013`*^9}, {3.8192391681624517`*^9, 3.819239205364618*^9}, {
   3.819239247806906*^9, 3.819239251535215*^9}, {3.819239552084382*^9, 
   3.819239554547559*^9}, {3.819239687324473*^9, 3.819239715963911*^9}, {
   3.8192397820159545`*^9, 3.8192397826899557`*^9}, {3.819239879006448*^9, 
   3.8192398838481426`*^9}, {3.8192406342774234`*^9, 
   3.8192406921008005`*^9}, {3.8192407358505707`*^9, 3.819240765537469*^9}, {
   3.8192409644297724`*^9, 3.8192409853614974`*^9}, {3.8192410516435223`*^9, 
   3.8192410633695292`*^9}, {3.819241203344366*^9, 3.8192412273522124`*^9}, {
   3.8192412962313366`*^9, 3.819241500542883*^9}, 3.8192415334792695`*^9, {
   3.8192416073247766`*^9, 3.819241669077629*^9}, {3.8192417151328716`*^9, 
   3.819241731777356*^9}, {3.8192417648395586`*^9, 3.8192417908514943`*^9}, {
   3.8192419070622606`*^9, 3.819241907184484*^9}, {3.819241988008176*^9, 
   3.8192420205235667`*^9}, {3.8192422332551126`*^9, 
   3.8192422352576494`*^9}, {3.8192894221202264`*^9, 
   3.8192894221285996`*^9}, {3.820251257579648*^9, 3.820251299994659*^9}, {
   3.8202513860157185`*^9, 3.8202513899624095`*^9}, {3.8202515375537996`*^9, 
   3.8202515387065816`*^9}, 3.8202515804057455`*^9, {3.820251629211418*^9, 
   3.820251690898617*^9}, {3.8202517593053656`*^9, 
   3.8202517598371534`*^9}},ExpressionUUID->"e8921aac-a5dd-4076-93cc-\
196a165ef92a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", "2"], "0"},
     {
      FractionBox["1", "2"], 
      RowBox[{"20.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.1`", " ", "\[ImaginaryI]"}]}], 
      FractionBox["1", "2"]},
     {"0", 
      FractionBox["1", "2"], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8192398847534113`*^9, {3.8192406794870863`*^9, 3.819240692790371*^9}, 
   3.8192407371978025`*^9, 3.819240987037568*^9, 3.819241064438328*^9, {
   3.819241492698249*^9, 3.8192415019648952`*^9}, 3.8192415345336*^9, 
   3.8192416729882517`*^9, 3.8192417342574368`*^9, 3.819241806055339*^9, 
   3.819241907722474*^9, 3.8192420210645285`*^9, 3.819242236844819*^9, 
   3.8202513009663987`*^9, 3.8202513909871826`*^9, 3.8202515401386504`*^9, 
   3.8202515809447794`*^9, {3.82025166421879*^9, 3.8202516918007317`*^9}, 
   3.820251760503684*^9},ExpressionUUID->"9330d079-536f-4f90-aad9-\
ab55f377bbbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"4", "*", "2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"Haf", ",", "\[Psi]0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"g\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"e\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"r\"},\"Ket\"]\)\>\""}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.8192395716314893`*^9, 
   3.819239572460662*^9}, {3.8192396474327884`*^9, 3.8192396600483513`*^9}, 
   3.819239724419385*^9, {3.8192397972636976`*^9, 3.819239835865923*^9}, {
   3.8192410165200768`*^9, 3.81924102522064*^9}, {3.819241685565702*^9, 
   3.8192416864844785`*^9}, {3.819241802161066*^9, 3.819241803634892*^9}, 
   3.819288617708044*^9, 3.8202515678020787`*^9, {3.8202517209947996`*^9, 
   3.820251737461563*^9}},ExpressionUUID->"feaff679-05ae-4fbc-a605-\
c888c0572ea7"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.820251762730776*^9},ExpressionUUID->"08bf5d3b-bc0d-4941-91b2-\
0fab39d698a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{
       "StringForm", "[", 
        "\"\<\!\(\*TemplateBox[{\"g\"},\"Ket\"]\)\[LongLeftRightArrow]\!\(\*\
TemplateBox[{\"r\"},\"Ket\"]\) Rabi Oscillations\>\"", "]"}], ",", "Black", 
       ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",ExpressionUUI\
D->"8252c0fe-7e76-43ec-92d9-34209242d70c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
1sb3jf3fzslyVVn9Dkqtp64K+b2xBwAmMnaM
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwc2Hc81d//AHDZZCQjinZUlBXZ53XvRTZZKSnZ2Q1c28cdIUQSykpDEWlI
SZJEEUpRpIFIAwmFjN/r+/vL4/m45/06r/M+57zOeVvnFmTrycnBwbGVl4Pj
f38bAlMe72dMGahmcH7/97NX/97uPYO/H7wm76/ad3XI9BrkteV9bHowQLQW
V8ztNf1ncGDylNnZnBFSU2odNHhDmCwTpjjfejBBxCGPcyhUhvxao5OeUzJN
Mr+qf6vYsoG8UlNvisuZJ+tSvI+JJW4l3evPLqgbLoE/jgIi+xxVien10znF
D7hgb7H074A7GqRa49SOVeq8kOnSuvG6qQ7Z+uhke2oJP9ie5Az/soQQwQ4m
T2iOMIgz/dZzmxiS2jJ4eZx/GfxYeb6n+oIxCf1dm7fdUAwc423s2d9NyFDk
A62iB+LwwEPV8952S5Jfp827/68EjGiNJ5WstiaOPPdeS6pLgVN+ytUjx2yI
iJnmhfbAFcAtkPmlibKbNKbeCUwskYYDHBV+H6Z3k5jXanq0IRng3kWfS8+y
JZrSNwXm162C5D7t9vVydmR0v/Lbuy6ysGWZxOONiXak+ELZpeAcORgfXTkV
+96OuA4pHt3auRomzK0EgiTsSbJk55qj/GuhKee3PX2HPRneeYbX+spa8Ns5
NOiuZ08M99mNKBquA+Ydw+87ttmTwqjlb/j718E+F+WlG/jtyVz+q+rB2PUw
GpK+8UybHXF6nHahXm4DPN9q0SoTb0fuDFgnFDzYAMzl/lPeG+3IMl7RoKi9
G+HkzYsTZlW2xH9zm8Pevxuh786aiUI9W/LMLEVPM3MTuG3kLbe7u5tsDLDY
IK4uD29lWX9t5XeTuFNLBX+9lIcnjUZbT6fakN6bzb9eBCrADcvPaYt91uTM
H5NadslmOMuzWqd+jyX5Jc1/2d1kC4ys4i57ImpBLHSbTsLQFujYUlyzt9mM
cMcZ7Z1dpwg+fl7cR+xMiGsRN7x9pAj60s1hoQq7SE3DE/k7Lkqw/LUoQ0DA
mIQIUCcDcraB557cSz1zNNKhuOS92c7tsHp6cTp4OY1st6p7rNC5HV7nv3DY
qUclScGxV7mPKYPpqQqFdZEUcsy0oCmYXwW2UrZs7m4HcqFnQefgHhVoP60U
91wHSLvfgXLLKypAGviUVemEzM89XKc3pQI6N2p17IoNiGKqXOZWQ1VQkXv/
z4nTgOxdE80vk6EKv66ocWkl6JMTFb2RfP2qsPRWhX/ATn1SSdEbm1JRg+Of
M18qiuiTgY7zbl9i1WDteI+Su6A+EfP419nRpgYr6xRqLm3RJ2Rqn+ljOXVQ
okqmWR3WJwHs6pob/urQUPZQq6hRn5xfsVIl/4E6LLnt1nPNwID8OldnriK2
A1I4GTcunTMgxqu9veu9doAIa4B3zwEguReEGfY1O+BoR3TmLQkq+b3xTv6Q
mAbUqDLSfq00JCZX91XTvTXAfu3js03ixiRfcUmX4EMNkEsRv2RasotMlheP
5y7XhGKF5E3nCkyImZqVsLKPJvDbT22VfGNCCisnNz9+qAkajoK9F8xMyB+t
84Z24jvhU1+kwa9Nu4hFDcV10GcnVI3mbD5TaESKyHBkWO1OmP8vIO7SEkMy
XZ+aJSChBQ9UPhz7e4pKrIw1bp8/rAV9nMdX7WRTyKXn79u2PdKCCpuSky8F
KGTWIv77IwltiOcT+SMoTyE2Lzfz2vpqQ6fZbE5rC4VcsWtf9+WRNtyfd4z5
0Eklc10h+qGSOjC94X51xjJDYrtPdi+/nw70cHO8o9OMyNUP9cfP1elAwLmj
v0R1jcmC6+E0JSldeH7M6pTKK2Ni/0X0eq2fLngmP5I989uYXPO+22TzWBfe
9L+TeVuI7b/vH+iX0oO/HjFz3b+MiH0g1+Jxfz0QNMyL4eI1IiXj11by1evB
DqeZZXuXGhKOEBvNnBX6YG+qS6lXpBHH6T+7FQP0oexub2VXEpVcj8wLeFiv
D+/O8O50JlTCuUhLtJY2gL7h6O/6NlTiFP/9Ul+AAbRTKlqO36GScp70umNP
DMAxkMVOdqAR7sSdvTwyBPhH1n0xkzAk+4Q+/s0KJND812ptbJshqTjFFN/a
QEC0ZihgysOIMBIzV3wUAnjoEPCAUWdEtrf4bCreCVDMeyfLu9OIdAvpqQe7
AZRMnF3PumREmFaiFO0UAKfVd/uDdYyIclq/Fec9gN/lpVYp1w1Jz6vK/S39
ANVN6xs/Y/8s8UTfM8IUuHiyQdk3hUZUHPbTXbQoMN33yfIxjv/9WWW2vDsF
7tj2/qyZpxL2O84zYykUeJkQLnGBD9uv7Lpw7x4FJhrFDvAaYnvnazf+G6DA
uxqjBtfLNMLOi3poJkKFMGP+r63ShkTlk3WLuDYVTJSaRXMTDcn7tRu6e92p
cLX4dXnfF0PCdvszdDmVCnZ2zptSZI2I6qXnk4H3qcBOdRI5vsWI9A7mcmp9
ocIRvfASCSEjckIheNkSURq8O7q8iOOFIVE7TFvdrE2D8V1Zp9aHGpIPJVJK
GR40KLUXi9TB/ZTw85v2/lM0cGElPOR7RiPq2x/u2lRNA79U8qYomUY+BqU5
jH6hQaX1ma8xwTSSeNPdvUrUEEIfW9jrhNLIjgnNI3E6hrAgtP5r+jka+bRD
MNbU0xDaTh92cOqkkaTQD8nL0wzhsmxswvJVhkQiMe0Jzz1D8JvLV+FeYUjy
z9Nmpz8ZwvY5fS4tcUOyufyPyk8+I+B4T58tETUkt+queX9SNoIK+osT+4QM
id7r/fkde4xA+3G0n6GAIWkcFO18GmsEhx1m73jy4nwKhlKvtxvBW8Hnp41w
v3rIbQkv+GsE6Z3TposLNDKq3Hvj9BpjgBM65CvWYzr11BBrlzGsiu8v+DdL
I5wOVLnwIGOwTdK+pj1DI8neU3b+WcbAkSZbWfCXRqQiriYdfGQM7jfyuJX+
0EhhsvNj26/GIDGmxtk7SSOKBSLTRqK7YDSsseTGBI3cvfl4u/bOXeDrl29X
8ptGoOG4p9LBXdApp7zxyTiNNHcp5K45sQuaXy0MT/+iEftvPR3Lb+yCwvLC
YVP0x38pArxvd0GySbDInTEa8RGhwMzCLhAwNv+mgf69djL0p7wJXFzdGNs2
SiNR6sVln6xMoH2elxGF5jXe96Uj1ARGNTz5DdBpTsKrGvNNwB7W6EuhV/rV
7b7faAI+txu/Lo7QyKXoYwnXR/F3vibTGfT2NPlHBVKm8JtX0HsJtr9X1D11
2sAUTjmOUFegqZXJSmwvU1B7M3JJG/2iibiHp5pCWznD2xvt2PM7x/+uKSjl
PUosQH/+efnlwY+mMD1rurUP7bvoxGfHawZbrD/EK+J4JsWEDIy3m0ER5/Yv
0eiYjY+OazuawWHv/Ly3aP6dR0uVYszAX5E83YnvR3b/O2nxNjOQaRdYwY/v
80rgSWveP2YwqN/xNRSt8p8Be0bOHNaZr/P/hja8cmniU4A5zMoP1r3F+fD/
Fdx2XdgCbp7Jb3qO8/eHcyNPoYYFPJZwHNo1RSNxkm91M1wsYCLvIVcj+oyO
/rXwMgvoWjb2qw7nv4YpwDS2tASNCxpdV6ZpxDirplo7xBKqnP8lrML18/Ja
0LhSniUsfcfNmYr+0tZ5QHzEEsYF+9f64XoL7EvI5JW0AsOxBetO9PSE7osZ
PStYm9d0QO8fjcTzjnGOeFiB0p3LGoVoYZki7c/JViD6c/szDly/HxPNOwTv
WEGUW37eD3T57KSvxnsrcJp4dVMD13uMXz6XK6c1ZAqfYb1cpBGr3l25SVus
ISotVbMU98dqy/EdlTbWcHQbz9tKLkMy+vBc66cwa3jXclH/E48hSS0YWdjR
aA1b3mb1WQkakgPLsrIOjliD9V7LR6G4H7NgrbSRoA1E2L6+9J+IIVmcPu7R
I2cDIYc1Ct3x/PK++bwiSNUGmNl7jyxfbkjaD6+e5zaygdVDiS4s3O871x8z
PedkA3bv6vsrsf4W9DRlKvvbgKyN4sd8SUPClyHb3xBrA83a9y/qSxmSYPMj
2/dl2MBIaveNNPQ7rsaIsSs2cKFVdzQbDTUrm5jVNuDUJqDmhL56PEh8ZZsN
JFs5R3RgvGXbGg7e6LOBy3uueAuh6YPS1w2nbGBiH4+jEPb/OS9gupt/N5yU
7/j3DvM1caw3DJLdDRGb3UiEGJ5HIivSuVV2w+adrrLTWJ+km/w+5NB2g1BC
whZnHP/wTsnQBt/d0LFMxWQJnp82vw7X743ZDTvpRlW7sV7du1orMpa+G+Bp
am0xH9ZfGZ9imfu74Ye+QH0EtyH59apmovzFbrg1KLdrgdOQOCWJgeHn3XD2
uVh1Ds5XHdUruXsC422NqrXhwHr5r/pdIJ8tbN9f81Qe5zfttugm7lW2EN8h
y70a53/az+NIznZbsI59b641TyOuG+8/3E61hZcfju0LxfXyrFdYsMHBFh4x
1Q6+w/WlkunmuPewLTw7v1Dngs62rCoajbKF9BO+57jQHLxCY4w0W9h2fv5T
I65Xn1pXXZlLtrC3TF2kGP0ytPJEeZUtpOoQ5SK0lrLgG1qLLdx3vTN2B134
9cDa7o+2cJi+tfU9mr/wtn/gbzTX72ZxjB/sxH+fi9cOeqW/X3JCv1vmwpMj
Ywf0NV8rrqCv/seb/wTsQOkwR4w15r9Mx/m7k70dZKperi36Xz3/fUNz1NsO
JO3W3/yF/lzCzWBE2sGg+ZcPGjh+E/e97dKn7OCQhXVdELpiVfmq8iI7eOsm
cvs8WvoNpw/trh0Uft23vwodl7znzrvndhDC2eX0GD1seJ0j8IMdWN99K3cP
bTPPYck1bgc1zqtvn0Pfq3TIyea2h7PuMuM+6LWBJYPbpO2B6RQYvB6dKL+o
+kTRHv47BmVNmF/UeU+fJRR7WFvAf6EBxxe47EU+ccTqbOr4yQbfjytLrTPa
zx62H7bZlIX1xXY2e2lNnD3k369f34z1xzBokTKbaQ8+d6TTZbE+aX7xpGuV
2kNRwhOnajx/Nu99UR5aZw/8LqtH6rHerWxTG7zTaQ/OS3SGDNFCtJxVE9/t
oYAR9EEPvVC1uFuVwwGe1X+Sy0L/UvJKCJJ0gA+newTUMV7/hRe1ZVsdwCs8
a/or+o2U+tQP4gCDCZ9fnMT62XgyR3GrgwPYVlr8m0bf4+Bw8/F1AIFt1/aI
Y34lIV7ZV2IdgKIQeqEFf29uaF1IfO0Imc4pQpvxvBF0z22xidwL5Xc13l/6
iO/jgfp/G4IPQGriadWwRhzPqjyX7K+H4M5k4sG4azRy41Gqzcbfh4Als+6z
71Ucv0ccrWLuECi3nlgWXEwjtfxHNfX43CBz/87qvCs0YlTmvuWZmBsEap/P
ncf72IvdDrL2sm6goSDNOoO2/2Ms+lneDcy3XBo4hH5/TovTX9UNVmeoDB5E
u5GtU3913cAwau0yJvrbwKphhrEb2LMjbOvQwQnC70V3u8G9tyVe3NjftNJi
63lnNzixIcmPoGNf/apT8HKD164PThxC84b2376NF9byxXGLA+jUlW+ukEg3
KDvR+1gZLfnoaU4Lyw3OFd2OaMf4ue5VyXvS3MDA9QGfHnoD/7XYgXNuoNv9
KJN+Cd/v9XNHgy67gXYzQyrlIo2o7U72/HfDDTLkKkeZRTRyfyra6US1Gyj1
Vl0OvID3kXNB5uJP3eCFrYPQvkKsBwaHDAra3aDFMvCHYwGNWA/Yqir2uMHs
jBDn8Xwa6TphuLHqixuQ7oHImjwaOaCkuYI25gZqf/TvaqEHXyoIts+4gdQb
DZ4fuXi+hsjM7+N2h/mb1Sod6EmZpb+GRNzh+6fOkiF0ZO1c/1EZd/gpa/Ze
Dp/ndB/tXNjgDj1mqu0+6CS+z8+StrtDr6iSdRVa7PqrB1La7tBWly81jc62
eVJeRHOHGyMMr1WY39qpOxe2W7lDTZFKiji6OOfKmWon7C/90b632H67QfYJ
Y3d3cJTniDmEvtufGNER4A6z9rP8tzEf/RORAQfo7mB8gCX+6jyNNCgGuH6P
dweTybaORrzfWrw8YBea4g52Q/FqRTk08vq4jTFntju8Oj1ddDybRvbJULVT
i9xBYpuUuE0W7peH6kory9xhRnbml9FZGjnstmnNlSp3aPwrUOmZifuLd8Vy
tXp3qKUeZFWfwfpVys9T+8IduNnvkszRi9azf03fusMXa6scGTR78sf3zj53
KGh8mLIWLZzz4cOhn+6Qpm5Ld0Sf0W9/OfLHHRhRDWplaNn+uifhSzyAAY/0
xbG/i+xbd3mEPCD78OXCEPRWxUvX0qU8wP60mcpj9K32zFy5dR4wuf0CDKK1
j584dU3RA4wzNItfo+ukw+M1ND3g1Xo9VyZ610PfkMfgAWvdyz0msL+2Q/t9
LM09YGTw5KmNaEdeK+duBw8IdaspWZNBw+8PYuXp6gGRdyVtJ9JpxMNalTLu
6wFhzjUnK9Jo5OfE+h3RIR6whpfvlt8pGjmWLaEgEIf92xQMaKXSyKwe78rM
JA+I3rFrmyJ+n93vVM7yO+MB8ZG8IQJoeuBeCWq+B4yyanJ/4/fLTj5GuvRV
D/AS+DD3Bf2n4LrI2E0P8CvsOvIJXanVdfLpAw+I0H3M+Rl9/NUif+5TD7D1
dl38X3t13y3so+0eEGV3OuUn+jenHZdptwc0B1zyn0TfPB8Vt2bAA/pGiydn
0cE7rsxP/fQA12qdpnm0cmt7xIs/HvC9R3TDP/So58zfIg5PeHfDQG0cXbaw
PiRc0BM4+d+8/YD2z7L4bS3hCe2mZ+Tq0EoqoUHyqz0hMFn+Tib6x7OCn3MK
nkA0JQIPoEsOPT/8WtUTenqsLKXRvrO/h67pesJeLsXYJydpZEuGrEeckScs
fjgicBA9rGjc52jtCYJ3VWe/J+H+aAg6sG2vJ7w5l33fG+3lkvOey90TeCW/
q3cm0simP/VOPf6e4Hx9qn8H+kvqz86KUE8Q81ATPZGA60lByu5EnCdk3Yop
bz2B9bGOvHRJ8gTWm2tvBNCfx083C+Z7wpKgHed9WTTSa6/9yOOpJ/BoXh3j
i6eR8yNuerrtnpBdeJ1f4z/cP+zk+2LdOL7QzHCfOBqRWXNXc7jfE+a27tW4
HIv3gapPt2t/eoJlrpfxzxgaybIRUM384wk6K/DSjXb8plbux+EFmpI3qUXR
WD/j9ytSBb0g90nZeXH0m5Xsq9ISXmCwsaw4M4pGMm7f2DQm5wVlH78GbUbb
WnQXPVXwgsazlY6tkVhvBjnX5qp6ATvN24KBfhmtlHdU1wuOfaRuN0efknJc
aWrkBWtNEn03oK1uxGatsfaCaOezj5eihU2uSfxx8oKtRmVFnOgXnzvSX7h5
wfHpKDov+mT4nMhFfy+4vl2hXhJttlw+OTzUCwpLm8S3owVKrQVs4rygxiiG
bYl+Rgtnyyd5weru62lH0Cd6i7jmM7xAulg9MwttHPIi7nWeF9zzG3V5iOYR
+TN/rdgLOHUSnnxCN1xZExl30wskfcLa59AMYjrt+MALBFYOp4vh+KnvjoZs
e+oFTVlOPavQS47k/uZq94KRQL37Mug6gcagnndeUKzVl8qPji0a+1nR7wW/
zpqXfcV4Broyvid+eoFM9Wa3O+iF19SvLn+8wE7myJ9A9EN/f48dHN4wfNTN
/X/jrR/Id/wk6A1rxo+OhUfg/WHfK5MkSW8IIJBoFY73g1dcuhprvWFn25P/
rodhfTHR3PZ5qzf0yKVL14XQSMcjnzUnNbwh4p/N10fH8HzSPC+mCd4gdM7n
3+ARGukpa+XqM/MGtXKi6hOM30sbOf6cdPCG3Ix/TwODsD6fVxvWdPUGY+4d
+svQQ8s9e/p8vWEy3Ydiif6emPUiOcQbYtb1fRDB50c5mmt3xnmDzhWu94oY
/3fYXEV/kjesyL7hEHAU68vo9ospmd7QfGzmQSbmM+t5KFOr0Bvia5SbfY7j
++jNODFQ4g3p3zjVCtCc9o3hqZXeMCNEN5VD87ZM+2nXeQM7rPXbKMYTpCoe
+NLsDVLc7/z0sD+R+y42pzq9IdFS5yEF81uukkbV+ewNL3JprbQAGpEqrt8x
+N0brpTum2X64X1v9ZR82pQ30JpdOHR8aWR1poKMLocPiDm0C8UfppH1QvuW
Dgn6QER98Vs3tDwjeT5N0gdWG9ybfobeOls7prvWBxYiA9SS8fntR8b7hrb6
wH8cwq9CMb7a8IY36Ro+cLSJDtb+eP866NioB2jyr6kPrdOVcO+rmQ9ApMc5
fszPwPJByWkHH/DgOUJu4u+PtgmO/yo5DGwvEet8Fxq5PXdpqc1mf1hZOHPx
IgXv34vJruJq/pBKca9loa04Qyq7dP3hFT0uJha9isdF8JyRP1zn79RLRQ/z
GR10sfYHqdru2+Xou4Lb7qzd6w+C7IvLetEMYUmBL27+cO+LS7oYFe/vy+Zd
iv394d+npkRT9GrxwVu+of5QY3j5UzT6h2Qr3/Y4f3CxW2ZxDX1PunL/eKI/
nPtjkX4bzV6Vd/NOhj8MDquuvYy2W83ipef5w9DBIt049Np1Ac66xf7g3Z++
j4Ye3eBQsVDhD6f9Km+MYD4P5PV56qv9YcVUnOL/xpOwZdM+VoM/2LncNpkG
GnFQEr5h0uYPn+/oee9Dr1ee4hJ65w+/F/QbigneH1Q/OLX3+UO92grlAQPc
Xzuelp3+4Q+xF19OiKKTdpZxOk75w+HR0ruq+jTipJO5R2bRH5JutcRb6OH6
JZ5LCpcHQNiKC+oxOri/qZaO7rIBYO2rFJOnTSMpRhql8vIBUP89KqFRC+uz
iRzHd+UAyBzum5vbifdxcx6HMu0AuDLIMUNDT1mOXAumBYASS2pZvibub5vO
BXXLAJBLvqsvjE6ze2j31zEAXouMi2Vo0IiL4+Wr1a4BcKw3SVUFzVdx2WhT
TiAsND0vWrIV12/6WdGHFwPhgiHXtApa6eiJbvvyQBBclroyGW1gR7/4814g
PPca2TGHttlxOID5JBD4d3bq+SjieSS5b6dsWyBo1Gb0VKFD/pgtufMuEIZT
tDS60AlvdVvMBwJh8bjx7jvoc/eUMgdGAiFh27KHZujrOXIHI6cDIdafw/kc
xq+NENkizhUEPbwxO65vwfPAefF3iXAQHE1t3J+2mUYG9H7VUKWDoDrmOu9+
BawHcn3snvVBMG9F51OQx+/dxVc2R7cFQXhzlpjAJhzf5/qVglpBYFcUNiO1
Ecf3+PaXC9Qg2L44Z++6AcdXdKlc2zIIfs59uTuyHsfHyKS/2hMEuQEGjY/Q
bh5s6mG3IEj8kU9pR4cYhQktCQiCTXduDwrj8wnyPl3ZYUFwsn/1eh/0Ob69
hSrxQXA/87xXE/r6sKnvs+Qg2LlS54kE9l/7XGeHaxaOR/pMii76ZYniwt8L
QfCKf7pGEd1/UvbZqes4nu6ie+/x+Ul/4dMKVUHAZybqYYrms1pwfvQ4CCbl
N1tEYD4rlcc27XkRBIMRK39HrMPxLfs8NtoVBOk6uWYua3F84y/vs/uCgNpe
XaC5BsfX8Zix+mcQaBpyS8qtxvHdvmV5908QHLm1WnqTHNaT5ldLizmC4UKv
usBBWRp5otP86zdPMJyWpOzvXIX389L6ToOlwXBVSJh+Et256kF10rJguCNV
6h6NPpB8u6BLMhgmvvBbFKKH50qZ61cFg0FjzqZ+9JGAS4cD1waDSUOGpjLG
n/2Qa1W9KRjEHsdvoqOZVpnqvIrBcCJMNP4aWvhRirStSjD8lzP09ib6rDJ7
Pk8jGLaWl1Qw0WsKY/q/6QTDg2e8B1airy4La9KAYMgpXbHhGPan+l/Q9f+M
guGvs/HgmZU0Uj3und5qFgzrrYaPJ8vQCM3NNVTGJhg2p/VQ/KTx/tDh5Ozp
EAwS8aInjVbgfYe2G27uCwZBxz9RKlI08um26ab5g/h+ElzziSSN+GykCpp6
BgP77KGqeAnc72d0xs74BsNMWHIuFzqSR/3N56BgeLzEl9YoTiPcoYr3lUKC
wcXp6cr/OWVoQz49IhgcxTmkZtBSe2QZDbHB4NXooGeFzxc0SfgsYwVDpqIn
uYnerCVsuT8pGMqdH9Usxf5vXuVRu3oqGKJ0vIxN0DoyC1KTZ4IhoeyhqD26
IfHPP3IuGFKOTk2vQ1vOjn4+WYDja50IKcV4py4KeHW9PwIDY1ueRMxTSbAk
JN9QOwZOIwYffn6mkvjwLfU0xnHoK7uVuLGJSpI9xMiWhyHgbqKgKl9OJZrS
ki55YmFQ9HHgS+4ZKtbja0fPSIVBn6PuXlv00q36CSdXhUHksxatpejPup63
wzeFQcisRB8rg0qaDWeeBW8NA89njDO70JWWKR+9lcNgzbfm70vRSQcrBRy1
w8C34mXC+dNUctzHdI2lQRg8VPl3wgt98MiHHYa0MLgoOaGtjt7B4HFVswyD
Gqbn+5fpVPLpisNdkUNhkNjfoiiJbr7xrYXHKwzGric5DaVRyZ170X1zvmGw
xfz5t7vopObLQj+Oh0FejsQhB/Tx19rr+8PDoJbNPrQefbC3dWd3TBg8tZF7
NnIK+xudcmtKwPH3bJiMRq/+m0ivTQmDhiI/GypagGN1auXpMFhnUznJhf4o
Znz/Ym4Y/H7/iBqdSiXPVva0nbsQBm39c0s10Lc3BH5JvxIGqhtC24ZTqCRB
46xoXEUY6N3RkTZCHzXYuimsMgxKVj1d+JlMJS67anUCq8Nglkv8Xhpabe+Q
5/6GMJBLe/Wu5SSVyLpFRNo9DwMedfFXbmg+P5F0s7YwcC226ppKopLeKM0a
rXdh0GVotyiCbmQ1v1L+EAaFVzJKMxOp5Gbqga/y/WHQGlVNl0azC9nLJX+G
wbT5m7HlCVSi0tDlM76I43ltlNTPopKVrb4xw9x0WBHqK2eD5ulayPgkQIcD
TrG1D5hU0vNV/lGrOB0S1iyrSWVQCXNpmGSJAh2S/50U2vYflQRKLFW8oEQH
Vc6FVZlxVLJXrgCyVekQXDPjuRBLJduVm/zYunR4PjGk1RlDJTJazv9FAx1a
fvxppKG5KWNnjxvR4Zrz+Kc70VQyasq47mdGh4cJy+I3o7ttV9S7WWM+Jzr+
K4iikqFm5eUN9nQQPxh5TQ9/n6SauG3aRwdR5pH+NRhvyQPXW+yDdHDtbju5
FPsXUQ/nHPagQ3PvqvZH6FWl6bamvnTg3/TUhBfz3byhpKgkiA55M6YNNfi7
xvn630tD6ODBrnLsxXhU8ffUgAg6nLOXr4nA/qxPTpxui6XDUif63sZIKtnP
JTSgzKJDRtO6O/PhVHI4cqN6ehIdClZs2+5Bp5LQCT3G71N0aK+4raARRiUM
P4fXdpl0eOHzYHt2KJWkDQRsqDxHB04vbd8cdJ4z+5hUIR2ojAOqCti+5HX+
k7DLdLj0alJVEuNVmVeJd5fQYc741ZKN2F/Dk3Z3nQo6gL/pP6EIKnmlO3z7
fCUd7N00pNPQH29zcM9X08HxCZdUHPqHooz9gTo6hO7/JdSCz09fVL306Ckd
fPnq2qMxPo+s2eTaFjpkjTdV1mM+y8+4Gca/pIMSc6y8+ziVrBGKPDPQSYfV
ntLjS49RiRIz44vhezp0u0co5x+hEu250h1XPtOhQbCl/kkwlRgfb2DyDeH6
EdsnnYm2+9n7xucHHSa5x1oEsL2rx9TG5l908P8RvGEWHdArHKL4hw6KW6NP
y2P8CHv5p8n/6PAmTiqLhv2feGEgOcoRDoPyM5f4QqjkjOEeT2vecLj2NqRV
C32hJqiyYmk4WGcF3r6H7ct3JPAsFwuHkypcJ5Iw3oPrhQ7HpMLh845TzA7s
79nG+5ffrAoH35dVNu1BVNKZ+2pKY104uDVpZbUFUEm/xHejLPlwsMpvHV3t
TyVjyZxnpxXDoSHlLOHwo5I57lVDe1XDQfZaqluWL9aPaHXNB5rhwMGoEv+K
lpoyZ8vqhYN4UpBhO7bfEODRFU0JB2X50pLlGF9lMEr+k3E4/CxYZ30okEr0
XTJDwSIc3M/Y2/hgPmadZY0XdodDnL5CVR96j2WjFNeecNgS53LrAtrj6Ucv
j/3hwDd+vz0fnz+i//fu00Ph4GhV5j+J+cZUivIpeIeDMdXv7kfM5+S2zXsS
/MNhx7eKt+U+VJJ9GYq/HQmH5QbDlx54Ucllub1/zcLCIeyvo+1uTyq5lXlk
1/UoHE9A+/GLHlTySDgpSzg+HEZbGB716Besoq+BJ8LBMETGIAvbd89X73yZ
HA7XBX6YD2O8oZDXJ1RPY35KDq3u2N/EyI+3p7PCIbjt+bXyw1TC4cW9eTI3
HA4/LOA+iPmJfJSlOxSFw8VuC3MV9CpHjWd3i8MhxP2m5Dps/ysnmXvxejho
nN19oNEb69+HAdh1KxzCN3kLbMf+ctfpRp+qwvmeba+PwfyOep6+/7YG3/9d
/7TPblRicu3b1Jr6cFhqJn8w7BDW/xFQ82kKh9ksPc6DrlhPVLIDK16Ewyvd
CulrB/H8OT5WMv0qHBQ2nwnfhy68Z/wV3obDB0u1x37o0Lm8DYm94SDx10O2
BW0BUwdf9YXDD86ESReMt45pkSvzNRxK5CY1ebC/P00X3x36GQ77sgj/BfSL
pf8kSsbDYcpncVYc8yuytt39+084nD5M1d2FpmdcS9GZC4c3HuMWSug3L+Xs
am0igO2syue3D+uDRMgpXscIiN5iJBOEjnN60WLlHAH2K7sKKWjH3A38Wa4R
cDNiQ8fHvVSi+DnC8JNnBEy1HRcwRXNs7IhT8IsA2oHKBwlOVNLlveVhUHAE
xEqKdJXswfvE2FsNjsgIWFLwfLzTgUqc1JWPmsRFgL7+5q2L9ljfw9jlaawI
aOypou1Ccz/48P1dUgQcO7am864droeFHQrr0iLg8X1Q340upya7H86MgL3p
/bck0Ez2QMHNcxEgdfUqxz9bKtnXrNM7UxABGrJpb2bQKiKnpamXI+AQ808l
N7bntf1mn1QSAXf/MCxF0L2ZkN5xIwI2vl32RwB9qzurdWVlBHxYszZoBJ8/
ITcm4F4dAa5O7As30fsPGRuXPorAZCxC7dBql/PiJxoi4IJbs9yb3VTC/22y
Vrc5ApTEb/hroT8qWfxjtEeAZfdbSoYN3j+CL+588SYCvmuskvpijfePO7PH
JHoioCI58KsS2nV6d8X+T/h+W4qOhFjhfUvv2s9LXyKgl2lU9NSSSoTiOLaM
fMP+zN9IbUL3P9njqTEWAdMDv37lWFDJPb4bF6InI8BN++vgZnSKOe/HpzM4
H+b8cW/McT8nhh+8vRAB6Vmfqr3QwU0/PxdyRUK6yM0bC2ZU4sbj6pbKHwln
bdSO5KLtaa8HIoUjwbHSMx7Qxv8Zex5eHglv9Mtlf5hSyc5H94ccV0SCAu+6
zbnozfNKPoaykeAgOvzLDr1St/Cb6rpIWPbVeUgMLRQu7rdGPhLcxkUUukyo
ZOEu+6eQYiS8Oh8+VID+NTkTMKscCRdbJ78HovvUAsa+7ogExf2qJlR0R/Dn
4E7tSFg3Vxwkg24ot/tdbxAJ5m1dFhO7qOTuz8ZjFbRIqFm6cXM7+upWnak8
k0hIO3GxpBRdLxAoFJoVCVcbvL88p+J87OpLcc/FfLseimmgr7DsRXdfiAQZ
gz9fsilUkrhEd7lSaST0zTzutgIqsZnhk+6vjYSEE9f6s/XxfN8ZmdP+JBLC
NVcfHNGjEvWQ0ZUPn0WCqqVcqhF64+1DuSWtkRCZZ9dxURfr+fgbueyOSMje
f7uGH82vbFLAehsJulz0sVAdKpn1f7D2WG8kFDybyBjVppKfJduLXPsiwajx
3OIR9IfhCxushnB+vLPNl6Db5CUv6/7A9kM2o3laVFLnkSC/5RfmY2BDMUHf
KvpXLDUVCWv++xXGgb70OXAL92wkFEvr72jaSSVnV/eXjC9EQuiGqqjz6BP7
HZQ+cUUBd4fTg2g0/dyzshf8UbDk8biDP9r3na5ytXAUPJBRijmE3i91o6J4
eRTEvzsV7Yy2sl+vlrkiCpxv8y3fi4bTmbfjZaOgcovyuBNa9SW/RvC6KFh2
OLT5f7+vF4m66yIfBWd8fpjtQ0tYjO00V4wCscscG//3O2+S230tlSgwpsQs
c0BPN3XqyGtEAf+p2XcWaC7hx1qSJ6OBQ2y5C00O7+d33mgvT4sG6R+JbYuy
eL45D+uIZkZD/qEB7hp0wzVRfYGCaIigbj6rjmYaH6DM34qGq8J/v8utwvoT
9890sCcarIPHld5KYzwFUfP+T9HAPuSw8iTao229xacv0XBerdXAEN0ga2bV
PRoN2T4PlCtXYLz72batnDHwt6dDNVkK401oOFdujYFaQV0qpwTGO2e6/5Zy
DIxnn+oqEcd4FBeXGztiwOvr2CZbdMMp5sFrBjGgaRb48fxyjKf02j3PNgZ+
3dg1LSuG9yuvYH9WRAwswr1vb4SxPggzA+JjY6D06F51T7TXnazAWGYMvBKQ
1ZsUwvON81FweGoMuHXtERNBswuEQwKKYqBcvstBXRD3i/G6UN/iGFjwyRy9
L4Dn7ciOMO/rMXBAZe1lgjbW2x9+6G4MWPzaFGrCj+fVQFDEgQcxwPFfcGUL
H+6XJEakc10MLLvUtMcK3aWaFeX0NAZclgwcf8mL89ddEu3QHAMxQ2uX2aIX
zed9tdtjYP0N8/T/eHA+a62d5N7EwFmOLX63uXH/qxYZLemOgXcb3979zkUl
3y5Nqg1+wPdTkeSniO5fsWvt837MbzpKhM6J3xdJOcJlX7H/SCfFN0uo5PX8
j9m0nzEwoHTAn4J+EWwwfHwc5+N8Qkg9B5U8HUjrdPoTA7sTs7/vQdc6DtTr
/YuBU1Pq8lzoqucaFWs5YoGiXnH7ySKFVOgl5HHzxIKYrNyRHPS1Gz1JwwKx
kJne9yYeXbR+G/2FSCyIt9aYxKDPZcZ6VojHwo0tbtREdAZ/h+0Z6Vj4KPN8
oRCdHLkR6HKxoP0sW7wezRwN3bZ/fSyUzwWIfENHH3q+EhRiYfPr7rdimE/o
m1X8G5ViwcduzYAWOmhX4BSfaiyElVY93ov2qa7r/6ERC+oB7vZH0Ie2ib9s
14mFbYs3zCPR+wo9H94msZDj/cY1BG0nfq8kyxDz63cZdkZbsAWzI01j4V15
dvU2tOHMftZBq1j4sCXbYhjz0fe/cZRmFwsZP6WqTqI1Py1xVXCKBeuuhz+k
0Ntt7S2XusSC0Ov3tJMLFKLw9IrO2CHMl8np8G2eQtZqzSi89oqFT9Y/89XR
MqXmklV+sZC4/BDFf45Clq/O5zwfHAuvFBMqz/6jEC5u2ge3iFg4uiRIo32G
QuZCM5uNY2PhREGk2+A0hUx++1q1lYn531Vhzf+lkKH25NO/U2JBwn/ZP9of
CvlE/RTbdToWusPO0yKmKORdpWpAdVYsHGlUeVI/SSGvNjP35efGwg/B2ZA1
6ObzXbviL8RC5cKX8YwJCnkiskXD60osrE7e3bIWXfNf5Hqz0lhYwndA79lv
Crkz2Sq6vSIWgsSeH0xEl3mvnRerjAX7DbF1HugrPUe/T92PhT2rhqSc0PmW
T9921+L4bmrLu6Gz6lY8ffgkFnpXhUTEotPUfW9deBYLvO8b9crQiVdqClit
seBYYyn1FR0vI5pyuCMW/iQLCWzBfCKTD0VYvsXxz8sqB6KPL972Vu2NBeeF
x8K30AFHeR0k+2LhumP7iTG016ATdWYwFi63agSsx/EecCpV/vA9Fh7JTDYa
ofe0zMs+HouFdBWKjyPaxsBG8PJkLFgx2v5ao01uFv1NmMH3tSq0UQVN2Tj1
xX8hFoo1C3KnMH5ey4bDV5fEwdYAi//y0SV6otHW3HHA1fSToYS+Vzab9oc3
DvbPzawxx/E0rh66lCcQB4+ZH4b5xinkzalX9wyF4qCz7T01aoxC+jkevvgh
EgfxTVWaLSMUMnbk6ufTYnHQTj5dXPUT10N/xqS2RBxcderLz/xOIYL2sfx9
UnGQ1ru02fkbhUg/9ZVNkMH4WwJPJQ5TiLymo4qybBwcrxyrVELvKKYYdq2O
A+bUuxxjNEV6m1P0ujioYmjsbEZbJUr7b9wYB/W/hoXzMN7+Wa64Fvk4eGp/
1jsX+/P1G8s4uiUOWsWfe+X/oBB6b0+xjFIcmN1xZ4VjfmzLxgd12+PgkFrQ
Lj7MP6P2Zru3ahwY5uWoK6ILlfMGRHbEgWeIWtVrbF9emPC3UjMOivxlzRYw
Xo3Y8aUu2nHAc2BwtAr7a44/uIZbLw5kquYPy2A+7ybM1EsN4qCuaQ/njq8U
MuihucuWEgcWZ4ovWg9SyO/Odc4ztDh48aPB4uYAhXDsEg4qNI6DWpfiibh+
ChG5Nx2/yzQOjJ5Jsjv7KER2y5ezo+ZxIHb9BO9t9NZz7SWZVnGg/2xvmiC2
37n0Qa3e7jgodqd/q0EbRl3pGLCLA69xolmI8W1H0oeSHOOAX/UBP/sLhfCJ
cngElMbB/cvM6m1vKWQ005nzvel/4Fpu85RdRyEblxiNn5r6Dxo8zCW8Sink
6CCfz/r8eLheMCiwLgPrjbBZvIsuA0Y/n3WSDaeQQMupk3wGDLhiX3T7CTo/
pTDzJjDglQ6zOzuCQtpazQucaQyw/Hn63JFIClkQ/nuVx5gB/VXNPeujsD5Z
Fd26YcLA++Cnfyz0wVTLmr3mDNi+/unFWHRa2/RTLisGZHt87F6CrhO51F5m
w4BqsTBbUYz3y8q6e48dA85IbGp8gP2vOzXbv8SRAVlXLRIV6Dj+9ss/S50Y
MLvOcjAqFPer6O4/Ds4MsL8d+PrbcQq5ZT23uOjCAM+3Z4VzjlHIwKligRJX
BrTe3Hai7CiFSLy0Fbd3Z8CNYt3/dNGGyxZkFzwZ4Mv/ZswYfdzmmvxVHwZ8
E5w0f4K+nGavYuvHgGMizY9PY7yul4vacwEM+JhxNzYZ++MVK6VdCWaAzPVz
e/4LwXq929HS5hgDSqX33KVgfl7pS/bMhjDAzq258DL67KvrrpfoDFBqad+V
hm4Sc/K1imRAe3cj+YPPT+/mOj4dzQDjgG3VHzH+5tPl0UVxDPhiJs99CPt3
6th7woLBgJuN57UuHaGQhOU86X9YDDge+9roXRDuf9uKc4UJ+L4Skj2VAynk
22nnS2YnGbCjUMf6nT+FrHzNWz6ZwoCTeqYjU34UYiZ+qyo/jQFSfYubctER
di6PTTIYELP0kP0LdGkGf8vvTOyf8Yl+DJ/vfX37TW42zu+ggkhQAIUISRz8
aHyeAUfnm5alYX969oLDv/IY4FJnZH4B8wk4Uzl+rhDXi1LTj6BgXE9vXP8Z
XsT+jt4reYlukxDiGbvMAKPe80JX0Qv2VSI5V/83H7zGI/i8cqabNK2UAb9X
qPmUYHzXTuH1I2U4H4MzNguYT5rkfcWsCgYs66yTmfPF9eTgoUG5zYCMbGd+
/sO4njJFyY9KBkw5Hcw/7I3nY1e1SeY9BvzwS9Sx9qKQ3VJetuQBA6ISxRVe
euJ6chTb/+0hAzZvVVH4jr51tsYzo44BNpLnZ+OxfX+Xd5D+EwbMCRS5BmC8
5SvEw78+ZYBGq9TuIz4UQt1TG5/+jAENx1TSHbD/Y1mHk3VbGFA20Vk2jL70
VuLsYCsDmN9FTPkx3zcr6gpOvWRAkWJJ22X8ndvJ75r2a3wfMQOyzzCeRrbU
7YFO/P3YbZNE7M/r3eOalHcMsHZmeIhhPmelAxp3vmdA/SbeU6c8sN47Sb/s
+8AAtTfjlmruFPI3+0n3yc+4nrMfmK51w/XUHTigMYDvN4pJO3oI15PMypFP
gwzYd6NsXBl91tEuZ/8wA4TGLUU/u1JIZ0ayUfd3/L1sZGU62lZkMa9jjAHF
73g+TB2kEHOuL1ZPZxjQddm9t+kAhRiMlFWUCDMh9tMe+fj9WH8eU46HaDBh
qY/LYU4nPF98Dv8TZDEh4XbQia3W+P6E6uUiTzAhnD/2d6MVnhc3VsKPRCak
/xXUs0PvsT3m5pzMBPvO8x3tlrg+p1qYLalM6C+5Gm2Azs3eWKybzoRPZ8y4
LlhQyCPd6OelGUzImBgZmzHH9xm/XSQ5mwlXhO68PW+G96VNJ1TmzjFhpXLv
1A9TXP/PPtn65zGBoRAaAmh/P62Q3gImdP92ep9rQiGnRNKzLIqYcPnkS3ke
9K2b3+7XXGLC87cZklG7cP7sqb1KxUwYPSAtz43++/fcQu41JvxyXDdSYIz7
7fzEWuHrTPgif13BBq1vYEGLLmdC6vA/XUm0a98lz5EKJly9ZKM7ZoTrjzl/
wuU2E4a39h7oRV9WcCxprWTCu38853rQz5rLX+jfw/dVkqr5Ff09gG+srJoJ
/K0atAW0sJir2OqHTMi+nNSxCuOr3LmnnvqICS/OxMrrou32iDkuPGZC1uOc
3XvQobOH6YENTHB8k93vh87Oqz/3sZEJVameV4+hH8Cqh1bPcTyKM16+6I8D
xz7VtjChZ3VlrwWa48SLJcptTFAoumC+Ar1h66aNBS+Z4HDY9XkT5mPcGm0s
+poJnJrOpS7ow8FdPrGdTBBo+bH9nSHez8WVT469ZULIzfV3tdDld0+UHexh
wrnz9Nv/0fD+uPdze3svE3Tfj/yspOJ9dE7rN/nEhA/O76e7KRQiVZguUdHH
hNyfi7W/Ae8PQ9S9aUNMKNrRUytDKCQ28XwkxzcmdFVx1mgb4PeD0mRe8A8m
bF5eJhWmTyEN7RZ1n0eYsOIYyDfpUcjXo5f7bX4xYV1L3D8ltKDUAvfj30xQ
FOm8WaJLIUr3HRVUp5gwYNZHp6Ct998wvfCXCWk3JcvHdfB8XeTzF5tlgkli
/+dqdGaRa+p/czifij3cueh7RvcrxheYwI7U5slA9wyLvT60hAU8sa18eej5
k75Tr7hY8FhtzcW76LXKT1ZQeVnwxPHv7Hs0tWOVzi1+Fqx9uO8zP/bvGXJ8
//qlLEis9XmnhU6Qbo05LcwCryNTLt7o0gebLnAuY8ERIcGlaei2AzFPji5n
wb0598py9K8lbwf7JVjwX1C01yO0+GVlfrsVmE/KvvZatKZJwtYnMixgWy+1
+t/4nX58tlCXxXzMukdj0ZGp2kEXV7OggK/iiAE6X/V0uvg6FoyuO7RxEPO1
Fdr26t4GFuz9nZR6HM37tWnZAXkW/Hswr3xfm0KqH7vZcG1hwS+ZFJVaLbx/
5M6fuqrIgmVurNLMnRSyPiy73XI75iu0kOeoiefvbnXRCRUWFBXMWq7UoJAk
pTarbHUWjKdeOjqjjvWH73CqviYLapO+RQmgf/dxtfVrsUBs0zPYp4bfCzX5
wgm6LHDcs5M6qUoh+7K0LbcZsGCLhU7nW7TI0TfJHcCCo2GTCvPoeougF2E0
FuzMjFZ3wOdDFQSF5IxZIP/qXmgLeivnZfN6Exa81XMxMcH+PvaSk97mLLjB
ko6+jT5d1dMsZMWChJsLkn/RxqdDBG/ZsOAaRat0yQ4KmfVfZrbHjgUbLPmt
n+Hv5btKE+ccsL/lH+7sQrutN35+wYkF53gPRDOxP6n5z/y7nFmgZjZdmIT5
Nb+NNPnpwoKgMi9hfxUKibkllZDuyoLrPbQMA2UKUUu52aTpzgLttzePymzH
7zdvC75eTxZ83VzStHwbfj9Tvxr/58MCJ0vaSn0lvI/LxbPl/VjgvFpq32VF
CuGclm1sCWABy/xH1G703Y4qniPBmB/DZIigfctsjaSOsUC59esVb/TqhBHm
gxAWxKesPXkf3eGW0OBKZ0Hbu4h36zA+W38DN28kC14dTjmRhNaRrqWVRrPg
Zfj0/Q/o0d9ODJs4Fpwu3SnPj/kVtU7UT8WzoHzh0Y5/+Lvj1VTO8ywWZDVt
zShHCzK2UCGBBfYjk2L/i1/r0vDfYBILAtVL7zlh/0e1Dj5OSmGB6JUFHret
+H0iPsuhksaCqORsutUW3H8jZ6DzNAv8bNZlqW2mkNRnynERmSxoNg+6uEEB
99vF5kdrsnH//HfMQEOeQv5Eey42nGOB0P33JGwTfn85cRDfPBY8F1i6MLER
v/fUz8eIFrJg7JiY5g30chHN2jtFLNDdonTzMrpx+OX83sss+J60uqIVHfHE
T3+xmAWzT2pFpDHe9nze6EslLKh53TZ/BN1Pv1BjWsaCbpnBtU3os3Z6c6M3
cH8VMl5zYT5m29/qnrnFgjqP6/Yr0Av8RyO1K3G/GRWen8L2twaEHnysYkFX
WealbLRXbfEso5oFn0VPiixBr8yh6mx5yILGNxHjGphP27EP4W2PWLA++y6/
4QY8j6zo94/V4/r+9U5Pbz3Wgy3iM9JPWXBwY1W16jo8f7jKtWqbWHBnoqht
51r8Pv1oQndvZoFNp+7jg2vwfdw9su/9CxaciErkVEavTT2nZ9fOAg+doZ2c
6H7PJ6tbXrHgaVrlqe7VeD/S/8lBe8MCcdhzvBLtJSk5UN3FAuHJVRKZ6M0j
+k/Vulnw4/fG5jD09dxTies/suBh3fBVGjrw+D2/c59ZELrTa40iWsWiz3L5
AI5/Yrp4Ofr3BkGVpEHcL8v3ms3IUcidf2rLOYdZsCPn8daP6NDXzpPh31kw
oXagtg6tVcrsGv/JArk2lfYC9Gx82b3DY7i/7JhfI9A1+7rO9Y1jfXks67Mb
HaO2GLV3kgW3DAe11qNBcPPBV39YcCZG0nZEFvdTvw3FdAbr+9lXL2+iG+6H
b3j8jwWSmtK0IDQ7vYhHewGfXzX2dBPa5HDL1woONsw0Pwl+swrXO2Xy+WYu
NsSvXX8mEt0iLXe9kIcNDvIaW1ahk38ZpUrzs0HjWVXHrZW4n58FBqcJsuG/
AYFdNHRHWN2OOFFsv+JompUMhZyx/iY1LcYGv8Q16c3SuL8Uls8ESbChp+nl
SUD3dLk/PCjDBs59F5/LrcD7VnlywdtVbHiUcMqLLYXzy678z3o1G6qEexR/
SuJ8avAZkw1s4JmseXhLAudTWGVz1SY2mOv5OUlK/P//RwSVN7NBQo/+gy6O
6+dMSdvqbWyYbLqlYbwc59P/dcVZZTYcgHVct8RwPg3nTouoseHTizOr1qN/
T1juWdBkQ0L0Yqn4Mpy/llDtUG02XKbkKJ4Vxfm7WLBqVJcNh9OWeK5Fa0U+
m/c0YEOE8Ydtt0QoZMZ2/NMHYENHq2+WBbp668p6Bxr2t1X1+pgwhURx0i61
GrFh+fVrxufRBj1+bCMTNuw4cWqbDZrj1hmfh2ZsmC24eVcYXZ/40EzDkg1j
LyW+vxaiEOahIaUyazakF+Y9LEIba4uKbrJlwxWDv7vC0fxiWuO59mzYm3Eo
fg+6edj1tcQeNpzW9Tmvh06uS6xM3ov5HNK7pYC2yr6Vxb2fDUIMfyNp9LLg
9+FRB9iQKe4MwuiOXdz7J13ZsCWa7yoP+syabQb+7mz4wJTP5kA7/nVY+8WT
DeO5Ln/nllKIdHsM534fNly9kMOaQft9/LZEwI8Nm/m+r4oWxPo5Yr/kbgAb
RgbGwlYIYP2af8ThHsyGz66tRyf48L4hpMix7BgbBo4Zr1ZD31t1drEmhA2p
QX3pX3jxe1BxyeJhOhuKhC4GC+DvB3X8F6Qi2VCpdS0gBX3L9O38k2g2RO0/
mWDJTyE8e6nzwXG4Hk1P6stif04+ZXNyDDZwn96W8xxdGiY918xig8Lzfalb
Mb8FNuNfWAIbdFK+UNagd58dnd14kg2Byfu8c7D9pct7Z1+lsGFf52JgPsaf
vtMwE5OG7+O5vLMx9m/eoDyjmMEG8SNPtt7jwf16//PYv4dsSEnucT60COTV
M/Oxq3Vs6Jw49v7hPJCN7+6OOjxhg2CKWvrBOSBhX9eNcjbi/guVTAz+B6T5
T/LIjWdsiL1VZy+AluOd/rm/hQ3dSTL129DBku4/BdrYEGyswWhGN2xs+3H3
Ja73r0lx9zDeih3aP9xfs6Eitvf0E+zPl3bp+7IuNnwfWnC+tQCk1lb0+8N3
OH5vsZdWmJ+YW8Q33/dsaAjU+xOE9jgyOLziIxtMntgc5UBXxdkMN3zG9Tps
5roEnxdMe/D1yAAbigUWB5KwP5cC+a+rh9hQnnLv8PNZIBXl6UMtw2zgUAmL
nZoGwlU7N0j/wYZzFfKc5n+BOLZ6D24axfXLnx7B8QdISW/Hl45fbDir+sJV
fwrI/A/9L7ETbJj4v4rrNJyqrwsAuFlCNIiMkWSsSGlQe5miSCoiyV9EVEoy
loTknnvudW+iIhIJyVBmISFJJVODISJpkCHJUFG96/34e87Za++9zh7W+e1/
dCHaZub2B+2pKKiI4VMLQd+au+hD588ouPPjg5Qjtp9ecq4/aiYKaNFzsWcw
/naNr+/X/MX5hfJXpGH/19fbve/jYcDiZ9Wucb+AjJlX90XzM6AsdJ6iNI7X
xF6rb6MQA0w3b3MTQl/xuNL7eQ4DivaJJtni+4P+vL1xogyQXinYI47xDC8c
e2c0jwF/Lulk2WH/F+Pae0YlGaBwyzXddQLIhzTjnsSFDCj9s2bUfxyI6b1N
5+QWM6DL/+tVY3RGpb5yogwDtAQ6TCTRnq/V3K8pMCB3cdrrvO9Anr5XEpZd
yoAI/8Tr59CaozJZCSoMyJLVNdmFZv2eb7lkOQNeqNntkEYPC4mOxK9gwBnB
QoXWMSA7FgpwZTQZUH/x1gEanaf0Z3W8NgPu8x4WM0H7rP/md1WXAa8MdR8W
fAMy4fVy9vImBsxp2vOYNQrELqAxWWoLA4KaC5sAXRLxGC4DAyZXnvKcHAES
lFgaGWfGgAWDn+0OoP80JorF7mTA4Ns7O9SHgQitPiR/0Y0BDlcjzXMHgRw2
PFAl4cEAnq53tBO6wWKvC9eTAYXP90SJoumDFrc43gx40nUn1/MLEIlYbe3o
QAa0kz86Sz8DkZma2ESzGJA30Ot7YQDzUXlhf2Qh5pPvLK3fi/NZmXxquhjn
G2W+4+87IMUpJawjZQxouJcgWoeGC58rbB4wwOX7GWNjdNT0v5ePHjJAZY1W
/78eIM+9ZIbX1eL3HFIpeIiW7F4tcKeOAeRxkn0Qeq/1NnmFJ5if2+LOGuik
6oP6F58yIH1p8URrN5D3eqet+BtxPkJxe3zRx6SzQwZbGOBZaWRy7S2QAuaj
OKeXDLgkbfZZBT098zan+TUDMuM+tN/qwvV0fKLOuIMBO2NP2SujI/rEeoq7
GBBzwJJO6ATSJRDn/JmXgit3ti4LfglkaWBOgKMABeK/Vu4+hHYfrOO8EKLg
hs1Fdzv0nf09GSBCwdBwevJ29NiLyapCUQp65dOvG6HXwbx2tXkU6DWbB65H
nylQ+5YgSUENuytKG12tSoTFF1Lwyfj6bTm00FV7pTApCi5nBzTyo61EfAx+
SFNwssTZtL8NSMwZaqeHLAVfauqHi9FvRlIOd8pTYGY+WRyClne5f85KiQL5
d0et1qJd21qvPlSm4MyCQ469rUAyTb/e1VOloPOVa34weriEryFdjQLReWVT
Amg9Dbk+GQ0KZkUkvcNb/r/+1vxkaVEQx7Ov9VszkAfiVpL/dCjYP5zMuxtt
MR4CH/UoaNfyzPj5Agjn0GUHh7U4/3f2/4zQL9/k+jw3oEC/XyOcagTiXPEu
Jd+QAkrX95HMczxfdKbLVAkFg6sWrfR6hvv/hkTrVSMKTEN2JdY+BbJygfrg
XFMKdBefPquO9osE3tCtFLhYdDtdbwBSPuWw5LsFBR1cs7cq6H+eJ3UPWVKQ
dPVFZcUTPA/eMre176DgV9IFM080vePmwe02FLw8aXReA31wevbK+G4KDFIe
nLpcD2R9qn3jNTsKwqz/O7YHPc+ygNfEgQIHG9OMQ+iPE2IGQ44UjKR6b6xC
VyYfPhZ7gILXS7m3rTHeJYva1E0uFEwp6K8VwvF4jcu3f3CloOSvgFoOGpIC
xdjuFLRtSVZRwvlIb20z0vek4LhM+CNT9Og37cDuIxQIaJBxMXRdAiMn0psC
TkDsyClsn2jS/17bh4Ly3pn8COzPd8RQ+rUvBSvkvWp24Hgsrl61OutPQUza
kNZ4HRAlo/Hw5UEUzGvrrY55BGTqq1Xpi9MUvFPZk2Zdi+uDmhbblU7B9Myi
+e0PgGzQ2238K5OCqlztscTK/+/PnMDUOxTwSewYvlgB5NMF4dxtuRRYL0iN
ayzH9bDKtf/7XQpYQ/YSTui4zkrpawUULH2W4W+EPnJeeodxMQW2ItHJp9BG
Or4RX0speFru4tKLlmlvLL1UjvnamrXrCMZvWn7T9VUzBcmzS9bY3MfxPLIq
s/+N+eFjlEQUAVE8svZi2yzut4mwyB1ovvmKnjv+UfBTrtZPCt3o/E3aRIAJ
A6xE1aRCvB8FO749EGJCaE1guiP6ck71k/UiTNio4fNcCu38OyZw5TwmvB85
+Di8AO+n1NM7sySZoMqojtJDq1u4rVBdyIQxIYmG3nwg3y/rty+RYYLA8eUf
VqEjddvXCaow4fbYIofbd/F7dzycF6bKhMgzhY1b0Nbnbn/6rcaEoW7xM215
+L1fBF8Z02JCdPDBTeO5eH54yk+9XcsE03ufJJbk4P6REGzau54J0l7808nZ
QE6VjKS3bmSC7pdFr5ehDQUe2j0hTJBd5hCkdQeIcnamjrExE8z5xKrzsvD8
2H1R8IEpE0pffuXTQ3/9GdRjYI7x1RrCi28Dab5xsLhgGxMSDetr16LdQwIK
xBOYELH5v8OHruP555ia+SCRCVt8+4YUkrAe2NCY5J3MhG3S6uKyiUDqpadj
FFKZ0C+oEhd0Dcczpcx4kcaEYC+FK+bogldWIWczmBBgGzMchlYvDDypk8UE
vfHsw3OxfXLMTY+ebCZUvXHKKEcv8nmxPzqPCcd3PWx1wf5o6582m/OZMCuq
HPYCzaOzbOtIIRO0lHw136IDRK03XS9hArUuStkfPTwYtHrHfSZs9/VTT8J4
rg1py/9UMKGhs9DEA/vvyGiSza1iQsWMctnvePweF35JHKhhwu6fSv/oq7i/
3FQFxeuYkJwbrLL9CpCNxjt/V9Yz4XyuvKnbZVw/S09/O/YUx1OmrPs9Doja
v1sD8o1MqC3v9vqFTupp7mxsYsKOctb8o/j+gsrfTSGtTHArSR5QxnjUteV1
2q8w/wvsVYbRf4Ns7ne/YUL7p9TaWOz/lP2ZPHYnE+y6Q+5/QX9Zm5Fm2M0E
BTnZR0/Rzota44ffMSGj+bO3JvrV+Ex00nsmrFIzjJTCeNtb1c5bDeB6Jd0K
OTie6ru7gmY/MUHKydVcKRbvH06Id84grs9v7MmMGMD/s0xXp2EmeL9y7gm8
CETFss1e7BsT5Dp6lpdzgcRr/LGq/M6EyXSpmHD0vDnqxscmsD2dsP4pOvLT
bgP5aSb8fFt33g/b/647q934iwnaqQq2thjfJ+22csgsE7o3TXivuoTnRfjL
xdr/cD+YNfk2op1c/op289Lwt0P4+Sy6bYsGL1uAhrAU9ZR0tIWC7dQmYRpG
bpS31GG8qpnQoSERGvbf8PA8if3pd2X1JYrRUNljmdrOwf1T9uq1pQQNOn7T
93Sj8b6++u/ZzHwaXnTy51SysL7016zOXkSDGP822VwaiJitXfF+aRpO14c6
LUeH64XdEZWloe3E0dBV6CnJ7BsV8jRwnBV6y9HHvr2OO6pEg6HGpz3JGK//
BQ8tp0KDpusa6RQ2EIccrXPPVWlILW10DMP+m+i9fmdW4Pi0WpsFcHymXuFe
Wpo0WPAqf+NDl5vnOL/VpqGgwjXLE99frda+h4UdxzKeyAPGyxDg27ZJj4br
EeL5/x+v/AftLUP6GP+gFjVI4f1SY78m0YCGgZXh7LVYNs1JiVC33EjDob2D
71ovAAkNzVWYMaThq6zgkbFIrDedOhZkExrKYuOOZqOPbOKfs9+Yhu3Hda7z
4Pt9S1b+mWtGQ9S9t1H/b7/ROcgzz5wG/YAvwqFReJ7frH25azsNyjxJFeuw
v9FPYmTSiobc7nvi/ehtWvZ34nfSMG+qIN8Dx3frRKqU4W4a7lqxT+G1QP4W
DoX12tKwWdUmNRvt8HPtcIQ9DaXdk8J70AWGYfZqjjSYdh5MTsN4YuHPap86
0SDy377adOz/8ONFK73/o8FliZ/OYRxfrch/CZKuNNzUWvP7z3nMj3WWQNEh
Gq5VrP4REYHnw6UfJ+wP02A1ayC0IBxIy5vNb3970bC74HzN43NYz8pRW5OP
0SC8vUGyJBTIhf/a8o1O0LDih2fOxFnMR5q8wseTNLyxoZSi0Ru/eFCUHw3t
/bWTYeg47fwfWoE0OK4u4nmOHvWZcW4OpiE+JTNxP8azKDZ75htCQ3m85B5F
7C/tF3ft4nM0vCNlX6bRfzd3pdwPp8E2Lub98zDMR4Sq2IFIfN4Ute4sjreg
/nggD4MGe4OdZuNoMdH7/WlMHM99kzOLcX4eO/mtzdk0WB6w8+nB5zWxO+5/
5dBgPVxobYyW77iqyonB/eK7a4Mlxg+Q7+fqxuF639SiKYj9t7hoz7y6QoNZ
QPuWKBy/ZnqAR1ACDX7bH0S2nMH9PVjdKpdEw1y162T1aSDvdEQ3P0ymgfl+
e1VjENZHvna3XVNxfX/451ITCCS25MZCoVs0ZMdNZCugR38PhmZl0BBpb0A+
BmA+iP5XqywaFoBmrAQ+v3k+1G4sm4aMzk9/KPTsk4bq2DwaHj2SDVqH8feK
LdQ2yKfh+NFToj/R+TYHrnYV4v7VrJPIDcZ8XM7kCy3B79XlKbcex+fR+d1b
+T4Nd/757AtHVysYdtZV4Prn9x8NRsu6Rpl6VuF6qa9Llkf7ZbTcFa2hgWer
fpU3xmv+Kit39xENFftlpc9gf5qr3KN219OweGM6/z4cX+Spu98nG2iYE/3L
fCnO513pL6eE5zQ8vtVvNOSH+Zg1aTBsomH2c7VZ2yncn8BZ09dCQwt/Wcmg
L5CRyI7k8y9pEKiw9yZoi6cqc1e8oWF0RCCo8yTmQ9zb/1kHft/jgXYl6Nld
pX3eb2nQUMkpb0TvvcJrNf8dDebzBk+LY/t7XZalRX00JN0NZLmjRZWuqDh8
wPVuG9P+EO3h1hc985GGVZOZDnNwPNWZmr+Sv9Cgbub3WgctO+x3yHiIBums
X2XL0H6rHzZ/HMH17EVlfMD23Sev9uwfw/PkyuugcLRp4Ymh1nEaFiocqZFF
S61bKlw1jevpY8kjIxxfyabwLVd4WTC4OHv+8RNYn53dZyUmwAKRvE7eyeP4
/1el6xghxALFsW92Z9D2Rv3+x0VZcG0NfxPDG8jPrSa5W6VYYC57YGnOUSAu
lFxFpTQLGDo5ZRvQDU9/NOjJsqC04Eve0yNAEqxuDSgqsSDJbkXydy/cn7sF
5afVWRD/MyDR3RPzGduj4a3FgiuG/sFz0XNfFxt80GGB58j2EwWHgby199jT
rMcC4XUGhYJo04QtB83WsuBfIP+cXA+8H7sWn6gwYMHoOQ3WPnTIgSd0piEL
wlZ7lj1yBzKQfCNegbBA069zVzjaqi8wI9aIBWqN5f6m6CJlmyIRUxzf28hn
YmgFN/Xac1tZkD/v0byuQ5iPWzwtkxYsaPGYuJyNHv3Y0XPUkgVvdIIHwtBV
nsxf9jYsOCycm7gGrXbnoHDTbhaYMuxsJNCcoQ1SpnYscLTU9Btyw/tKe8Gy
cnsWBP6tbKpH/3f86+rVjizozZktSUE33K3dkuHEApNTvmWB6NXfr1nJ/8eC
mukIZ0t0vN4px0sHWeC16vAqWTSPn6XnnEMsWJIs9OKDKxDP4mUBoR443/cz
opnolqmZ8xOeLGDz5AW6odevfxVz5CgL9v0NjJRBpwbn3OjzZoFQXRD1+CDm
vyIyd68PCzR8PhYdQfvOOlU0+rJg8+5Ud2G08Tnx9rJAFkyf3jBfwwXv8+qP
AytPs4CKZmfn/Yf1FF/V+K0QFsQ9N9+rg/4QeXxeTDjm48yqyiXOmP/6rfLC
kSw4r0b7Mw9g/oWVNM9GseBxj6LFlBOeh9umDX5QLDhdrPPoIDqSbjbzYrHg
gnjez8b9eF/yf/VZxGHBj9uSBkr4PDBEIOnhRRbMHtslFIj2mVR8ciQW58ff
kluBPnJ8w7jUFRZIdUrkv0Ef+rxHoSYexyecmV+MPuBy3OJYIgu6tzWSnei9
ndQpaSwc9F2LRG9ifza705JrU1gg2ZPRUuqI9dvzB0+901hgKb/N4eY+/P8w
7ZiQycD1Kbgp8bQD1tcPxpXqbuP6u3tR7IA91nPrxC1PZOP+upO1130vfs+7
KwJk81jgzBcXnW0HREPdOPXxPcx3qe1SglZJdWr0KUSXKfOpoeVlA6flSljA
UyO7wBFdlKWY1dTHguYJpbRlO3F9N3iL6a9jw8u88L4Dplhfb1nclb+eDZ7a
8078MgHyo6gqc9UmNjwY5w+6guZLlTDRwsJFtjx29JUx1l/B+VhIs2EZz4kM
NyOs/7/tM0+xYkNNfsRKUfQqdz4pxZ1scE0SsC4CIFt27bm3xJYN6a3FhqLo
/RqTnySd2XDI4erYsy1Yz9+4XsRxwf5KvtKh6CNSWyPE3Nhw7/DBhDXoIN6r
CnM82TBwV3IkdTPWe53rbf+dZMMWWf2SaEOsL5khNSMX2KDZ5L4ifiP+3/xT
5R6l2BAb4iV1AP3e/4XTIM0G9ZvuKSrosYOKPwe4bIjydjS/uwHr343VK7sT
2FAwP6KgcT3WO1/5k57lskFxMNpCxAC/p0uOl8U9Npx9/KeqeR3e529sDeoL
2LBybWjtZbRHbXpbTSkbJO33aC5FR14zF7lfwwYdq3MexmuBsCXH3qyrY8Pe
O42L56Jjo+JvFdWzYcqNJdCqj+eZ7yC595wNqS+95zihq7ezAjJfs+HPaGuQ
+xo8r9T2lMt0sKFbVK0T0PF8cn+ZXWitrQJi6Mh3/UYz3Zj/qK1n6/WAnCi/
c+FYLxuyn4uvOoF2vOL7tOc9GxbKp8ULobf6bhTfOcCGndeixti6QPSs+XZV
f2LDrPhgFj9aUfNZnO4gG9o2eBkeW437W+hSx80hNlyqvD3VsArPo/f75BeN
Yv6L063k0U0Jg2lT42xY7Ff3pkAH61///M+HJ9lwsWeENauN9e6uYK3OaTbw
qgw4b0OfFREprJjF9cAvNPlLE8+fjy1T2v/YsGR+eJYb2rYmfmMybzTUr5R4
+VYDCFx3CZUQiIaBzzkq7mjtYPXaMKFokGWUmvOgZezGBMfnRANPxmBrnjoQ
Ad2ybW6i0ZBhumKvD3pMLCz6lXg07CGZ/Gbo7i/mrWaS0VAlIndAC91QJyFV
uiAaNrTka6igi1LaHdSlomHwUNe0Gjol5EZSgnQ0lAosdjZAsxwO982VjQbL
u5xlNugA/VWqIfLRIMnapXQc7So5fXhEMRomnBOZ0Wjr4apsZ+VomBI0k8hG
b2yI+ta8LBp4t/bfrv1/f2YRnj9PRkOl3Fw6XAHvS1Xh7ItyHJC5/nvtUmEg
ZeaiMa33OXB7s/78qS+E1HgarYmr5MB7s33xD9DPmIGv9z7kgP/0vOXlnwl5
eSc3cEktBz4q8p3n+URI9/MPS7rrOJDHvzr08wdCPg4vqUx+woF7J37vG3pP
yKi4jfPBZxzQafN+FtFHyPTKKB7VFxx4MapoNtFLCI9N5c1PzRzw+GY/thGf
i5wcN81q40BB048gQWy/4JL656OvOdB7cbFqC1qu0Jm5soMD+vfcxRf0E6L6
Kk7rexcHbuq0iR7H5zqTz14U9nDgWW9O9WuMv24xr09AHwekXNqqY3oIAQOD
BRs+cKB409lPmm8J2ebgXTTzkQMGSlTNpk5Cdgen7a36gvMPODK8oYMQp2ud
P8OGONAWvI/ejnavkEg0GeXA/oEXw7r4/vFus81C3znQ9PMKuHcREvjnTG/D
Dw64Kdus34DxwxQLwllTHOhp95FTRDPJl2XWvzjwzasDXmH7Sy6K9ZKzHMiy
uPrpQjshieG2ni//cqDOxGB55StCbt2k517h5cLyjYWUbhshuY+qcxwEuBBw
08MkpoWQkoEpazlhLvy6YbZjA/qhoM73HhEuvJn9eF2qlZAGNbfYFDEuCNiO
Td3E9q3mCWvdJLgQJHM0cwnG7/Jsbl++gAuFUzxBBegPTMHTXxZxQTG2be7o
S0KG72ySz5bmgtOSOv3HGG/y+ckqb1kuXOe1UL7XRMjf4UyX1QpckGipUw17
TojwvHd8P5S4IDLYqifzlBDJVYvSi1W48Hfp8E75BkJkbbabBy3nwvzB1OAi
9LKTYYMb1XH8kWpJwc8I0b5UwvqjyQXgyZuNa8TvVzisU63DBSl52ydzsD/y
SqUlYjUXZrKlXUTQFpMOvmZruCBpPaJpge/vWsxdNGcdF0JN/AIXYf+OBo9L
nq3nQmfCBjezx4S4Ocw4RG/C/ofiZcZrCDkWrDuzcwsXrN/M1ZCsJsT/2uHr
C4y4wOb/aSqLDq24Tl6bcEEpLSeuF99ndL98f3UrF2IrJSrj6wi5+Eck0nEb
FyYE9XQn6glJUAQ1BSsuaKTYpZc+IeQmCWjotcb2K6Zq9uPzbJecIzd3ceH0
6rh61UeEFIX3i7nbcuHu8l5e4YeEPLgpc3eFPRf0dQdSLSsIqX9kvevrPi7U
VC+RW3ifkOaByB85Tlw4dGM771AZIR2CFZdP/MeF3hnlVYnlhLxX+26g58qF
+HaezI0PCPlqvqJr4hAXLm0wX0Zj/AnPAyGlh7mgFZqy/SjO7w8zVvH0Efz+
2R3rLPD5/wD0pvSQ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ao9ABQdFKTC8bj8UwZNO
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.8080282657022965`*^-20}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\
\[LongLeftRightArrow]\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\) Rabi \
Oscillations\"", 
         StringForm[
         "\!\(\*TemplateBox[{\"g\"},\n\
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},\n\"Ket\"]\) Rabi \
Oscillations"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"e\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.820251765880464*^9},ExpressionUUID->"025a74d3-46c1-4716-8dd2-\
bc3ca393e4d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{
       "StringForm", "[", 
        "\"\<\!\(\*TemplateBox[{\"g\"},\"Ket\"]\)\[LongLeftRightArrow]\!\(\*\
TemplateBox[{\"r\"},\"Ket\"]\) Rabi Oscillations\>\"", "]"}], ",", "Black", 
       ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.8192395716314893`*^9, 
   3.819239572460662*^9}, {3.8192396474327884`*^9, 3.8192396600483513`*^9}, 
   3.819239724419385*^9, {3.8192397972636976`*^9, 3.819239835865923*^9}, {
   3.8192410165200768`*^9, 3.81924102522064*^9}, {3.819241685565702*^9, 
   3.8192416864844785`*^9}, {3.819241802161066*^9, 3.819241803634892*^9}, 
   3.819288617708044*^9, 3.8202515678020787`*^9, {3.8202517209947996`*^9, 
   3.820251737461563*^9}},ExpressionUUID->"f9df3ade-9666-4fcb-bece-\
85656e97e99a"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8192395636890182`*^9, 3.8192395737551384`*^9}, {
   3.819239649098977*^9, 3.819239724773569*^9}, {3.819239776352786*^9, 
   3.819239798302092*^9}, {3.8192398369279604`*^9, 3.8192398908131895`*^9}, 
   3.819240705457554*^9, 3.8192407486938777`*^9, 3.819240990228368*^9, 
   3.8192410256930733`*^9, 3.819241066401521*^9, 3.819241505212696*^9, 
   3.8192415363032484`*^9, {3.819241674232566*^9, 3.8192416874700036`*^9}, 
   3.8192417441580625`*^9, 3.8192418822644453`*^9, 3.8192419798682876`*^9, 
   3.8192420255142*^9, 3.8192422527508283`*^9, 3.82025135246563*^9, 
   3.820251417572178*^9, {3.8202515604035587`*^9, 3.8202515820965757`*^9}, {
   3.820251666312736*^9, 
   3.820251722258984*^9}},ExpressionUUID->"dc20c240-9899-4dd8-9ab6-\
4dcd35ab2d9d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
j0DB4e8mao7vPy3w6c0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
71UMMf/iDZsyZ11mgdDViuXqmD/Vmf7uRiYLArSBk47sxhoXsL7Kgq7jeob+
qIeeps2mv9dZ4HT28FEP7G+hjrzgKzdZIG32+aYQ6v/19Lx883wWND1lZ3xF
vz1a59Y9fIsFo/tsI/aiP1PaHoqdL2JB+XP/G72oh1es2I5Nd1kwN8Fx2QbM
10Q1IKavlAWWHyMuLEQWf/eyNKkM99sw94o/nj8UtXpQ/xELtp7R3ZOB+lYr
x8j3PGbBOr78/CnUP725w56qZIH3J/9xAZynxyN06PXPMP5BgWQXrJ+FUlLl
++cseOK/ODIM81/xZmA8to4Fm+7KllX/xOelk9tUVepZYHT5tEM0csOqTLfm
Vywoq5z8XYR6XH01dTb8DQvMKjbuU0M9w0Pt6xXeYr4fOy+kot42K4t469+x
wF2+5J431mNNvYDuiXZc3z++Uw7rNSv4sI/MB+xX+9J/a7GeLSsqM599ZIFC
5sq73PtNfp10q083C1hx9+wykeMCgwVFv6C/Gq86FmL++2TfbCr/xgKTRpO+
g9zn8RqVEI8+Fhj2BE5y/x5yfkBC/qJBFtwWmVzF/fvmTqnu7pIhFtTadwbY
YL3uPjMUdxlhQU0Xz79pzJ/td3bHvFEWfMr+21GA+bpJjMTcGke/xL6pvDeE
9X5qec9+Atk1r3QjHpf10vrvzRTOV6eKZB5k3iWynjtmWHBW9ezxV3j+t9K5
UMNDwBkF3ajr3M9/OQ+JmfIRIGsa94FALpzTOvRoLgH9Yd05Qchn8iqe6y4g
QOWh/5QPctjunIw7/AQoDZa99kN2nkgMVltEgL6LzJJwZNMrYTtzhAio7pVL
T0JWMnNfrbCMgO/Cf63uIAsMbZ+5JEKA75PLszqRh89seCchTkDmieiYpRhv
i6HMrRRJAvTUqIxdyGU9cxIWyxAQG3JDMg05g/zhTC4noNDtfHovcpzGO+05
8gQw/u1l3M93HGl9vChKgQDtxz0Ls5CtIm98nVAkQM7IcrkA6ilWH5r6cy0B
AQVN9b+Qp467+R5VI2B89+aQY9g/XZLbt35VJ2DllT6+UeSbntJj77UIqF82
4cqP/mQWz2mw0yVAamLPj3Tk4yWDV1/rExB8OrRfA+tnyPd4z3NjAkSmLZ66
o99eZRy4W2ROgP+CEv636PfirRa0qiUBfGnWRv5Y/7RBzUM3rAgwfBmUvwD9
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
/3nXEv4L/VbNesnNN+rYCI/SGO5fcmpsDeYb1ieg2vSHgjyPgA9WyMfdVztE
TFJAagkmaWC9vTtMYtf8w/nc7DsdifX22ONU0DyLDbJz7gzn4n6uDUFtkbPZ
4Ey0befF54292xL51s5lwxAzmlqD8dpU5K5rmc8GtuE6JSfMx1Kvel80Pxua
UuOad2C+W4u6TqssYgPz7tSJ43jceO1k4TshNnj41C4cwut1s0U6YpaxwTr3
O58yrq8poz5PTZQN//jTRypxf5VUC802cTYcveGieBzjW7X40P44KTZUjhqp
/sR8ZVmRrHWybDgjMDhU321qLM5z/k77Cja8Ff+Tdgh5aVhx5+mVbOjtiY6o
xvz5fzUs0FDE+H2ouGKsN5/39w0dSmzY0S8XeRvr/e/zbNeEtWw4EXDl7RL0
25/9spSmGhvWnVT3lcD+G27RLfmgzobJtP90pLDefTt3f2Ktx3jtjx8/M879
/z8+Ahu02aD74v3oVu73ORiJtt/WZYNgwH4HW+RfxeXX1xmwQcxvqtQZeUL5
8In8jWxw/71XwIPr/yuLTdcCG9J89dZx768Lxe4J5Wxig2P0s39cXkK7dipu
YYO23chFT2Tx2Qvysreh/uoCq7g//1kRejtU3oINCZ2unH3ISkN7t122ZMON
izIPrJDXHeIVkd3Jhus3tEhjZO33N7svWLPBTsBJURXZyHp3oYQtG2zOOeRx
58+W55Onztqx4b9P26RmMF/LjdnbRfayIX3dEbseZNs7lhLJjmx4EP7YtArZ
cc3oVyFn3E9LelkmslvGxWLGlQ0Vmg5fwpG9RLbGCLizQSXA/JEt8jHqx07y
EBs0tt2MXYMcwnNWZr4nG/L/TMtP4v0lKti4/7QXG9pvOzTWIicMfrs324cN
ivskC88gp7bp2s4cYwMnd2reKuRLOz/JnQpkw5qof/t70V9XnxFDE0Fs2BTd
NzsHufh2Ozl2kg1uCt7l8shviPAng6fZIHFFwekP9nP7jALnKIsNW2ynFW8g
fzpR7/SdZMPCs+XP9iD/PCD75zOHDakqmwtuct+39SvUOs6xwahfScQY+9W8
b3Z6XT7qI/OtbxW+j+1yzTtiVsiGYZfQ1HL0s0OLrU51EfZH7IFEO2SPyqtv
npSi/5MqDpzGeRZ3ftuC+0/YsCpl1fMuvN+zhX62aFfhfoEZncHc5/f4tOzi
ajZE8TaZLkbODPhuXPiCDdeOCCoZY3/c7E0UVGtAP4sVTL3D+XDbWf99biMb
zgWwrxxDvtfcfWNNExsy12yXEkCusKCCrr/F/qmYe/w69/lFcXeZeCvqa2d7
iB/nQxqv1D+iHfvfsKWVg/0T19ltMtnBBla+6KeN2F9+ZTdPe39kg7BGCS3z
ydR4X2pA7YdPqK+t1H2tLuz/AH3BnZ/ZcPfZpk7qI/a3Fa91xVdcb9f9sZXI
ssp1KRrf2eBrl7pvFvLCuUmtmf2oj/SrG3LIY5/2Sgv/YEODuVhjPHL3IznX
0z9x//g0MVVcv+Hc96yxETZUWf1cJ4T7l524/e3wKPpbK3GHMsZ3zTp0bds4
+mHp8PZAjD9J1cTPYoIN2aIybV9wfpxasODOgynUq+Vv0QnM3/NL45jKDBuk
u8tfSKCetk/S9C/x0KB2f3nSc9QbLrpGLOajoaomWz8Q66USqlQZNZeGAO1i
HhGst/ien3NG5tPw4o+LTwbeL/g07pm789MQsSWG5r6P/xSIopsFaTBOKdO1
QP909G57vUWIBs13R7fv5T5vVS0WKV1Kw6DBy0/rcN4UX37noCRCw8Xoa6E1
yJfDM9LPidGQ+GSPyHL0L+VwuGuhJJ6vX7JbAzlowzqFcGka/jknRPzD892E
xg8PytLA7v/BJCBbDZTnOsvRcGA3r9Ir3E+/Jn7o1Uoaxo+/i23DeBSzrdab
KNKw+q6yWx7GuzRKNLhICa8PCR20GuL+P5POspVraVhuXxRei/l+17n2L0WV
BnndHS6r0M/Ny3w3zVWn4dIGo2zu979VDGnFB2vS0OYZ0ZGDeqZdfya4T4eG
7WpuPtz7T1wsbf1Cj4Zq/X1LE7E+/i57zhgaYjzng6qEsH5OBjJt+UY0FDw1
v3sf620m9kV6uQkNzjZblqWgHzb8ynP9z5SGjuZv76514vx7FZjNs5WGSinh
i+Mf8P0z17A3wIwG8+2nw0jk8Xg+lc8WNMQ7+AwcQO52e+m3ZwfGeyP4cQRy
g1HKneqdNHRn/Jn+iFwm6TSuY0PDQUtXvlhc/9rYSoMcWxr6VOtT3HH/pDf9
EZL2NOxYazd8EuOLKLhTSe2lwWSuxkwV+tGLPDl32pGG5JyBY9qYn52HqYWv
Mw2zZ41OV6P/Nm3iZz660uBicybdG/2nJtv0epc7DU9bs+9Jo16SE+dFKg/R
wMv2OPES/TenxW3vek8aLDS7JvzRfz9vK1/M9qJBSXv5vRnUv4Me6RLxwfVF
X2b5ov9qjpQpJPjRwH8mPbQY61e8JcbzzzHUY2zLrxqsr8Zedu2lQBqCdn6v
68B6FninKm8JpmHupM8A9314bdRlqj+UBq8dmtESGN+N5JsDieE07L63zs0U
67PqevEO3Ugalsj0FK1APTLLygs6o7EfmsvHxFG/5Q01i0/Hod+Pxz317TA1
Tv/0xn9tAvr35x5hHTwuMdrx+jVBg9xUEcsOr0+d/00zhE3DqQ82jXG4/jLp
4WRZDg2d2/X47HD//9ZN/q5KpGGFm9m0GcYnaDrH7mgKDYHif8VbMX7SbnHp
krM0RF2jcknMb76XhPi9czSMSTULzEG/nz61MtQ5nYZnSrN2CCPzJqq282XQ
cFPe50Mxnh+VrWOQewX9nL56yTLUb7rUJN06m4ZGfYOI07hf2Ivt0+PXaAgp
mSqMxnjGO/c4X8qh4VA5fwYb4w0ccXm8OY+GWMeH3mswn+E5Xiv6C9BffZYa
NZi/r0RgdOJtnA/Bggql702N+1UiunWKaSgMOZsljsc9gWXaWYL+ntdQ3In6
fNmdlB13n4Zc19JnL9FfbofT56x9SEP4mnjvSPTPx7BrHq/LaTiyzuZEKPrF
iSl8HvyEhtdaYfs3oB/arpQpyVbR8PCQ0mMN7vvC3Sqiqhr7S/GCgAD2e1NN
Q59XLQ0t2Xqdsci7Olq3L3lJg+fB0AUs1KN+qDuvtIEGjRUKn3VQD4vZg4LO
r2lI49zf9BH1eC467svXTEO+2EDJAPd9WJmn8WYLDSKSs6e7UY8nG/k1rNto
MN1W1L7tI/f5QiRp/D0NAsWZz5Mw3wcHl/+62Il+u/qQVwb10A1ZY7v5Ew2l
X47NFkW+S62/29eD9Wvs9DyF52tmbBRN/EqDrtf0lDyud6toW7DOdxpWDhPf
83A/lWrr1g/9NGQNLNmdhfHcbHPUi/uB+kpEqkZhvKsHD51XHqYhNPDkvQr0
S/Ys/8nGXzifGgIixlAfeeEwp+Ax5IKPsi3c3/+tjnsk8xfnT5rcD0CWNmBk
qybR359nfTZDPc5ZpUV6/cN5qORrrYb9KOqW2SXEw8DutP0ce7y/Jp/IMymd
zcCRr7Jlptj/QkRJ5v65DHiE23wNxfjp9IrZfAsY+H0zJzEY81tYWHfwJj8D
v2aSjS+34/PO0+ZnuxYxsGZKd4U6Mt+7TsVxIQYuyXyK2oD6RPf1JlxcxoD8
0o/LuPPt3/RIr6koAy94u0M/oV9OLpk27xNnoNPsA13L/X5PhXm5/0kxMHak
QqYc/RKrlVGwQJYB6LuTwP0+0EVbdYpiVjBwq8rRoA/1Uzh8+H7gKgZmPxw+
vADn9a3gmYeDqxlQXxbYLYbr6bPOVngoM/Bm7qmrqzG/XTnPnzusY+D+IkVp
a5x/7++7vHitwQA9YvrcB+PxqBtvsNjAwArt91mJ3P5o57x5qs1AkOXo4nKc
r+H9q1sM9RgYGNR0/I35zJt63HbXgIEHPdNVWshJAg4f1IwY6NN8GRaLesnI
/Oy6DqhfdEBqJ+pxQ5X1eYUpA7rL46TNkNcbreg9t4WBqbLHExWoX7nVvf6l
ZgzcfsCaa4Fs7rJriLJgYIbHd7KnDe9ffr0jfDuQw91COcguUVFjp3YyIK5y
6J8lct9/4hNj1gzkPWR/lUY+caVw2s+WAba8p99Mq6nxrCIznu92DHye5rn3
G5mq7OJz28uAnHR/xRSyaFPI/PeODCzf6OIthtdf6RESsHVmoPlETMRmZJXf
NxbXuzLQHVZyMRa5lM9k2VZ3Bpgl83c3I28SaRN9fIgB/dd3F2pj/PWrjknq
ejJw0eCN8A1kB+0Fsre9GHg3MvvaGsy/Z+sVOWUfBkbNVFrvI/va663K8mNA
a3Iw2x71iws5onImkAHBlJXxpajvYoJHfVEw6mOsoRyM9Th/7tz6hFAG56sq
aYz1Kiyr1Q+NYGCfUdKfz1hPgxcHjEaisJ41/5QeY72r3/81ORrLwHXw2Z+O
/dgxtcZ8P4uBIlnXur3ol/nGpL1JEgNPmkQ1Srj9sVPesSyFAddH+sYR6EdZ
1zLn9WcZqO1IDd6I97scfxu3vHMMhEXOkCPIG6L7Dq1KZ6Ax3MAgHfv5cWLM
kUuXGJCQL3XSw/6zyJT0EbvCQICQQmsN8tuiIv//spBl5+eZc99nn1oELriG
+d4x/FGG3N/UHRxzg4HMXS71UjgPgj6HnZy8iXquXp90FJlndGlkYD72738j
l3OQ2XNyYwZvMWDdLHryLbKYqGm8RxEDE5/7n/1AzlR8T3wsZmCnz6DZKLKq
znHaoZSB+QpJfb3I97bxJ76+z0BGnGIh9/npiafJ+pSHDLw2MXT2xnjqiOC3
do+xPm2f4lehPk0384MlKhn4G7Hw7TzUu+NFj0RHFQMhPVqvutAPXwYkHl56
zsDN3yUnpd+ZGv8Q3OV8oA7XF60lX6HfxtXiZynUo/7srxHmWM9Zux5mfn3F
QJNuUcA+7OcFx0Y257zB+MMe/VVHvZYmKX07+hbjt68TDcH4pO44E2qtDJSx
yvq5P19UaE5ZO9yOvFfF2g+vVx2tq7/zgQFHI1XtLbi+tiiPf1AXA0YPGOE0
3B90dJbq9TDgPodOz2rBfnPwKZ78gv2w7vFiZYzfJjTLrryXgXrBHvnV6C+n
821/ovoZuJdA8+rg/Dn0YPEF0x8MeMcN3mXh/r4dWzbOHWaAE3n9/STqFTx9
8mPNLwbKBe7E/UF/RMkWRVNjDOzZ2Z+ai/OIMO5dafWXgez5uXc56PckV9lq
oSkG8nlvvTqGel2ItvVs+sfA2T8HhmwxvuxMcmEqDwcsoh1/XMX48p9W5Dnw
ccBvJkpJCPUv+TxmJTWPAye/nz3Kh/V5PEd1+MMCDmgbyVx8iPHVKLonXxbg
QOuSYs09GN/rbee03BdzQNKIZ5CN/m73fPVu1VIOLCySe9OJ/dJDzAnrFebA
jFHS0gHs34GbBtK5Yhy4qx+w/RjGM/riWLmPJAfKr9Bv1ZH/DVx3VZfhgNuX
VjXA8+ct6uT9tZwDlcfjrWYwPqF1wlfvynOg4r8o90cYn+Qui20hqzhA7ZN/
WovxrTwW9V1fiQPR3958ieO+vySVUNPKHFhwhzGcg+dr3xlQrVDlwFX7b2GL
cD3jZvnGGHVcf87BYmfUw2zUIWDLeg7ILIuRTntramwtyhGer82BlPUPC7Qw
vn06z0rqdDmgVpf64TfG5+4w6UAbcODTk38tQ5ivd6jG5E4jDrAyyKn9qMeJ
84cvLjXhwIcLajsKMJ6IBxeN35pywKnZ5C2F/Z3Q0fTp7FYO5Mpk9B1Ev/03
vSBunzkHlBN+Jxuj387JgqKMJQduDErZDWA9M42Daj5aof5gW9DbbGqc65rn
lWnNweejekc3jK84ulvgkC3uPxKQ/Rjn4aNM8Vur7Tnw4KWgWAfOq+qnVtZ9
ezmwccPe2k8Y36vPcb/ynDggbt4/7wjG1zrnwRk/Fw4c9vEO8ka/fVIc1tF0
48CYp39zIfqtb9vq9t8HORBpVK3OvZ//9twfXnqYA4EZigZpuP80kSwb5sWB
woGbFe4Y3/8T3HYV
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
pTm/CY46fBJI+48Kb0IaLjGrm6CCj3+C3X4qaP7iDdBPMsGpj3N++9SoUGS4
0nrkkQkyOMRPFF+gwn+VrVy/a00wP/zeBOMVKnQ5ezzKmTBBruWnSevWVLgy
1dlPkbmOKW/HHLYGU6FKNV/gjcZ1fGYbcLQ8nAo89/1uJhtfR9/ndxwPxVJh
xPjIP8Xg65ioXHzW6B4VlKv/nONMuY5Pf5vq7M2hQjb3+6Txwuu4V6LgUfZD
Klj2BIlF9F7HDy1klj8lVGiSNPQ0mbqOTiO+pu8rqXCILFkv9fM6hkdv5rrW
UGFWffjKoKApWoS+tvz7hgpaeSX3C2VNUaj87RZKCxUe05EW/DVN8UfE/Ym8
dio41R6/c9DFFPPbqm0te6lgPMBXlR1qik9tY6vFB6igTmVc4Ltniv+uJzcd
GqKCNMvi/tQSU3QVNvm+/zMV9h18r7+rxRSfiZ4b/DRKhW1KLyPiPpniqlj1
2b2TVPhmkF/HtmKKkcOG3bnTVPjiEvUtnMkMPVZmRg1nqdAe6SGydZ8ZOl27
vCYzR9Mv3+T6nWNm2HlOnaBFwzl1agl/NMzwyKe7l9/R9kd9lGj1NTFDnvv6
Vd9nqOCzumtzzdUMa3TmUhlo2Jrtj7QbyQzVTj31FqfF0z08ZUPJMMMkDlm2
+CkqnMbOdPsyM3S93bepQMNHjCu7p1vNcOl5CJGbhrk8MrdYfTbDRx5VHms0
/n+jQ+W/rpqh3ezpuvs0vNZ/4rnkFnOctD1TMTRBhYXRot4FDnMUevjqr/04
FUaXBBYL95qj09SdoWM0PQZ/JTDZCZvjRZvrRcI0vd4xMx84LGWOZwdzHunT
9Hyz67bipLw5GsfvvDX/ngrVB6hXctXM0Urv1mf+HioUH7VyMb9ojhdkImzF
O6iQpnn+wYi1Of7buVM0tYEKMVdev053Nkejo349h19RIcTy+LCRnzl+Edya
M1VNBRd/Ps6BWHPMfmQzdoHWPzciYkUT082xIvg2a+hjKpikMKpdemCO8w2V
j4Ro/aaX523KWWKOZVfV9OnvU+FsyYJPZ4057T6hPrgzjabfK7NEcrM5Yk95
xI14Ksi09z8912OOTxVOdeyLoILAZO1485Q5flyXfk7ypsKuFak/xGVz3Gwn
yxc5UYH1b94e1d/m2Hip+cO6DU3PPVEX6rZboO+wPZ8Mbb7mhels/fksUOiv
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
1JI=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.8080396233483285`*^-20}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\
\[LongLeftRightArrow]\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\) Rabi \
Oscillations\"", 
         StringForm[
         "\!\(\*TemplateBox[{\"g\"},\n\
\"Ket\"]\)\[LongLeftRightArrow]\!\(\*TemplateBox[{\"r\"},\n\"Ket\"]\) Rabi \
Oscillations"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"g\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"e\\\"},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"r\\\"},\\n\\\"Ket\\\"]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8192395740823183`*^9, {3.819239649466631*^9, 3.819239725075938*^9}, {
   3.819239776646129*^9, 3.819239798616879*^9}, {3.8192398373443227`*^9, 
   3.819239891212536*^9}, 3.819240708064005*^9, 3.8192407511749024`*^9, 
   3.819240990799549*^9, 3.8192410259305944`*^9, 3.8192410666803017`*^9, 
   3.819241505471272*^9, 3.819241536564887*^9, {3.8192416745479774`*^9, 
   3.8192416878872385`*^9}, 3.819241744154047*^9, 3.819241882260453*^9, 
   3.8192419798633013`*^9, 3.819242026343623*^9, 3.8192422546418896`*^9, 
   3.8202513566603465`*^9, 3.8202514208090773`*^9, {3.820251564124087*^9, 
   3.820251582531413*^9}, {3.820251666549054*^9, 
   3.8202517234187512`*^9}},ExpressionUUID->"4a46115f-9659-4808-b24b-\
2c39b5c2b440"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8192425142842827`*^9, 3.819242515867179*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["setup - beams, RIN, field-dependent shifts,...", "Section",
 CellChangeTimes->{{3.819997317215989*^9, 3.8199973187825303`*^9}, 
   3.819997557232665*^9, {3.820000023140946*^9, 3.8200000507931385`*^9}}],

Cell[CellGroupData[{

Cell["General", "Subsection",
 CellChangeTimes->{{3.819997580673704*^9, 3.81999758286849*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"scl", " ", "=", " ", "1*^9"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"time", " ", "scale", " ", 
     RowBox[{"factor", ".", " ", "multiply"}], " ", "times"}], ",", " ", 
    RowBox[{"divide", " ", "frequencies"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8199975730475397`*^9, 3.8199975777171087`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["RIN data", "Subsection",
 CellChangeTimes->{{3.819459322341485*^9, 3.8194593382829933`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"780", "A", " ", 
    RowBox[{"RIN", ".", " ", 
     RowBox[{"todo", ":", " ", 
      RowBox[{
      "bundle", " ", "setup", " ", "stuff", " ", "into", " ", 
       "function"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"VDC780A", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"contents", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"header", " ", "=", 
     RowBox[{"contents", "[", 
      RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"HzPts780A", ",", "dBVpkPts780A"}], "}"}], "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"contents", "[", 
       RowBox[{"[", 
        RowBox[{"15", ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", "-=", 
     RowBox[{"10", 
      RowBox[{"Log10", "[", "VDC780A", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "compress", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"compression", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dBVpkPts780A", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dBVpkPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HzPts780A", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"HzPts780A", "[", 
         RowBox[{"[", 
          RowBox[{"compression", "#"}], "]"}], "]"}], "&"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "HzPts780A", "]"}], "/", "compression"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phases", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"make", " ", "phases", " ", "pre"}], "-", 
     RowBox[{
     "determined", " ", "so", " ", "each", " ", "subsequent", " ", "call", 
      " ", "within", " ", "a", " ", "measurement", " ", "sees", " ", "the", 
      " ", "same", " ", "function", " ", "of", " ", 
      RowBox[{"t", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
     RowBox[{"1", "+", 
      RowBox[{"Total", "[", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dBVpkPts780A", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"HzPts780A", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], 
                RowBox[{"t", "/", "scl"}]}], "+", 
               RowBox[{"phases", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}], 
         ",", 
         RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}], 
    ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "divide", " ", "time", " ", "by", " ", "scl", " ", "because", " ", "time",
      " ", "window", " ", "in", " ", "solver", " ", "is", " ", 
     RowBox[{"mult", ".", " ", "by"}], " ", 
     RowBox[{"scl", ".", " ", "need"}], " ", "to", " ", "cancel", " ", "to", 
     " ", "get", " ", "real", " ", "time"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.819459478992441*^9, 3.8194596794743643`*^9}, {
   3.819459753112505*^9, 3.819459788323239*^9}, {3.8194655025486126`*^9, 
   3.8194656025372534`*^9}, 3.8194657684988165`*^9, {3.8194658896028366`*^9, 
   3.8194659360785265`*^9}, {3.819671207069723*^9, 3.819671220337928*^9}, {
   3.8196712785223885`*^9, 3.8196713591221867`*^9}, {3.8196714281459064`*^9, 
   3.8196715725133877`*^9}, {3.8196716098681164`*^9, 3.81967165595725*^9}, {
   3.819671850788233*^9, 3.8196718674966636`*^9}, {3.8196724562270527`*^9, 
   3.819672487236653*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Beams and differential frequency shifts", "Subsection",
 CellChangeTimes->{{3.819459361116685*^9, 3.819459368769582*^9}, {
  3.819459420970192*^9, 3.819459433960681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", ",", 
    "\[CapitalDelta]2", ",", "diffACStarkHFge", ",", "diffACStarkHFer"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStates", "=", "3"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"single", " ", "atom", " ", "states"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numAtoms", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomBasis", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"rabi", " ", "frequencies", " ", "calculated", " ", "in", " ", 
    RowBox[{"rydberg_rabi", ".", "ipynb"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", "2"}], "\[Pi]", "*", "2100000000"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"780", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]2", " ", "=", 
    RowBox[{"-", "\[CapitalDelta]1"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"480", " ", "detuning", " ", 
    RowBox[{"rad", "/", "s"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]780A", " ", "=", " ", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]780A", "+", "\[CapitalDelta]1"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]480", " ", "=", 
   RowBox[{"2", "\[Pi]", " ", 
    RowBox[{"c", "/", 
     RowBox[{"(", 
      RowBox[{"\[Omega]480", "+", "\[CapitalDelta]2"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx780A", "=", "6*^-6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wy780A", "=", "8*^-6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zy780A", "=", "2.2*^-4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wx480", "=", "4*^-6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wy480", "=", "wx480"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"field480", "=", "381161.43207231193"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"field780A", "=", "3797.8949279380545"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fieldProfile780A", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"intensityProfile", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wx780A", "2"], " "}], "\[Lambda]780A"], ",", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["wy780A", "2"], " "}], "\[Lambda]780A"], ",", "0", ",",
       "zy780A", ",", "wx780A", ",", "wy780A"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fieldProfile480", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    SqrtBox[
     RowBox[{"intensityProfile", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["wx480", "2"], " "}], "\[Lambda]480"], ",", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox["wy480", "2"], " "}], "\[Lambda]780A"], ",", "0", ",",
        "0", ",", "wx480", ",", "wx480"}], "]"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitializeRINDependentQuantities", "[", "useRIN_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Define", " ", "Rabi", " ", "frequencies"}], ",", " ", 
      RowBox[{
      "and", " ", "total", " ", "differential", " ", "shifts", " ", "for", 
       " ", "each", " ", "ladder", " ", "step"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phases", " ", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "&"}], ",", 
        RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"useRIN", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", 
         RowBox[{"1", "+", 
          RowBox[{"Total", "[", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"dBVpkPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], 
                "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"2", "\[Pi]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"HzPts780A", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], 
                    RowBox[{"t", "/", "scl"}]}], "+", 
                   RowBox[{"phases", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], "]"}]}], "&"}],
              ",", 
             RowBox[{"Length", "[", "dBVpkPts780A", "]"}]}], "]"}], "]"}]}]}],
         ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RIN780A", "[", "t_", "]"}], ":=", "1"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{"2", "\[Pi]", "*", "102712885", " ", 
       RowBox[{"fieldProfile780A", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       SqrtBox[
        RowBox[{"RIN780A", "[", "t", "]"}]]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalOmega]2", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{"2", "\[Pi]", "*", "24538455", " ", 
       RowBox[{"fieldProfile480", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]Eff", " ", "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}], "2"], "*", "102712885", " ", "*", 
       RowBox[{"24538455", "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"Abs", "[", "\[CapitalDelta]1", "]"}]}], ")"}]}]}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFg", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ag", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480g", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFe", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ae", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480e", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ACStarkHFr", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]780Ar", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field780A", " ", 
              RowBox[{"fieldProfile780A", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"], 
           RowBox[{"RIN780A", "[", "t", "]"}]}], "+", 
          RowBox[{"\[Alpha]480r", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"field480", " ", 
              RowBox[{"fieldProfile480", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ")"}], "2"]}]}], 
         ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "\[HBar]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFg", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"diffACStarkHFer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"ACStarkHFr", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], "-", 
       RowBox[{"ACStarkHFe", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Bbias", " ", "=", " ", 
      RowBox[{"3.6", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "4"}]]}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"magnetic", " ", "bias", " ", 
       RowBox[{"field", " ", "[", "T", "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diffZ1ge", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "0", ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diffZ1er", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FZeemanMatElem", "[", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"5", "/", "2"}], ",", 
             RowBox[{"5", "/", "2"}]}], "}"}], ",", "Bbias"}], "]"}], "-", 
         RowBox[{"HFZeemanMatElem", "[", 
          RowBox[{"INuc", ",", "1", ",", 
           RowBox[{"3", "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1"}], "}"}], ",", "Bbias"}], "]"}]}], ")"}], 
       "/", "\[HBar]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUge", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFge", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1ge"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dUer", "[", 
       RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"diffACStarkHFer", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], " ", "+", " ", 
       "diffZ1er"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitializeRINDependentQuantities", "[", "False", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
   3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
   3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
   3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
   3.812033344197033*^9}, {3.812041862540533*^9, 3.812041915684704*^9}, {
   3.8120419747087965`*^9, 3.812041974783596*^9}, {3.8120423451808767`*^9, 
   3.812042345343083*^9}, {3.8120430097897882`*^9, 3.812043040954068*^9}, {
   3.8188896631214857`*^9, 3.8188896798386602`*^9}, {3.8188900084721375`*^9, 
   3.8188901615443287`*^9}, {3.8188901935142884`*^9, 3.818890303449911*^9}, {
   3.818890343627186*^9, 3.818890353029492*^9}, {3.8188904125403943`*^9, 
   3.818890460241414*^9}, {3.818890495415929*^9, 3.8188904988063164`*^9}, {
   3.818891076975772*^9, 3.818891089529849*^9}, {3.818891364880495*^9, 
   3.818891368995977*^9}, {3.8188925875724783`*^9, 3.8188925916523004`*^9}, {
   3.819201328638991*^9, 3.8192013819633684`*^9}, {3.819202064716399*^9, 
   3.8192021256574745`*^9}, {3.8192025977044983`*^9, 
   3.8192026091011114`*^9}, {3.819203142430956*^9, 3.8192032044641953`*^9}, {
   3.8192032508722725`*^9, 3.819203282310354*^9}, {3.8192033448383875`*^9, 
   3.819203353218113*^9}, {3.8192036102135987`*^9, 3.8192036159086366`*^9}, {
   3.8192036911104608`*^9, 3.819203709256077*^9}, {3.8192333655353513`*^9, 
   3.819233370867853*^9}, {3.819238203926468*^9, 3.819238212667815*^9}, {
   3.819242324812809*^9, 3.819242335601594*^9}, {3.8192425228529005`*^9, 
   3.8192425649705935`*^9}, {3.8192426952527275`*^9, 3.819242736070496*^9}, {
   3.8192428894875054`*^9, 3.8192428895822864`*^9}, 3.81928868091359*^9, {
   3.8192887217444215`*^9, 3.8192889467697983`*^9}, {3.8192889833299923`*^9, 
   3.819289170826914*^9}, {3.8192894220156155`*^9, 3.8192894220173187`*^9}, {
   3.8192957445248413`*^9, 3.8192958447572355`*^9}, {3.8192959041747727`*^9, 
   3.8192959092834263`*^9}, {3.8192960319294496`*^9, 3.8192960538769937`*^9}, 
   {3.8193034098916764`*^9, 3.8193035599418974`*^9}, {3.819303646201226*^9, 
   3.8193036515027227`*^9}, {3.8193036912372627`*^9, 
   3.8193037667485657`*^9}, {3.8193038045967274`*^9, 
   3.8193038804710274`*^9}, {3.8193039368626165`*^9, 3.819303960296561*^9}, {
   3.8193042019942627`*^9, 3.819304304304721*^9}, {3.819304338698412*^9, 
   3.8193044435899553`*^9}, {3.8193044912848225`*^9, 3.819304531887264*^9}, {
   3.819304699361288*^9, 3.8193047364690647`*^9}, {3.819305210993579*^9, 
   3.8193055047831926`*^9}, {3.8193055639965887`*^9, 3.819305774843767*^9}, {
   3.8193059478703403`*^9, 3.819305968267867*^9}, {3.8193061209956503`*^9, 
   3.8193061299750924`*^9}, {3.8193142401229143`*^9, 3.819314265233693*^9}, {
   3.8193153142435246`*^9, 3.819315314670029*^9}, {3.8193153465117235`*^9, 
   3.819315446932372*^9}, {3.819411150878492*^9, 3.819411152483901*^9}, {
   3.819459389517168*^9, 3.819459391233161*^9}, {3.819460004760043*^9, 
   3.8194600074682074`*^9}, {3.8194608650992413`*^9, 3.819460886816124*^9}, {
   3.8194613841926346`*^9, 3.8194616106507425`*^9}, {3.8194616490044036`*^9, 
   3.8194616811144433`*^9}, {3.8194617185048847`*^9, 3.819461775328508*^9}, {
   3.8194619219427743`*^9, 3.819461922321254*^9}, {3.8194622332793164`*^9, 
   3.8194623292212567`*^9}, {3.8194623601207714`*^9, 
   3.8194623961000957`*^9}, {3.8194628575139103`*^9, 
   3.8194629208316975`*^9}, {3.819463185421892*^9, 3.819463188809188*^9}, {
   3.819464109295348*^9, 3.8194641275555296`*^9}, {3.819464934787344*^9, 
   3.819464935997485*^9}, {3.8194666169500165`*^9, 3.8194666789875655`*^9}, {
   3.8194694068464046`*^9, 3.819469410144925*^9}, {3.8196660786319504`*^9, 
   3.8196661071459355`*^9}, {3.8199843508317614`*^9, 
   3.8199845355480123`*^9}, {3.8199845935471673`*^9, 
   3.8199845973108177`*^9}, {3.819986197113324*^9, 3.819986222192198*^9}, {
   3.8199862916719337`*^9, 3.8199863527426357`*^9}, {3.819987507220671*^9, 
   3.8199875232824726`*^9}, {3.819987567982716*^9, 3.8199876234560585`*^9}, {
   3.819990761143233*^9, 3.819990785200689*^9}, {3.8199909904704533`*^9, 
   3.8199909910661993`*^9}, 3.819997427542777*^9, {3.81999747715672*^9, 
   3.8199974852201805`*^9}, {3.820001313135279*^9, 3.8200013143201113`*^9}, {
   3.8200018351202493`*^9, 3.8200019063948126`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<g-e differential Zeeman shift\>\"", "\[IndentingNewLine]", \
"diffZ1er", "\[IndentingNewLine]", "\"\<e-r differential Zeeman shift\>\"", "\
\[IndentingNewLine]", "diffZ1ge"}], "Input"],

Cell[BoxData["\<\"g-e differential Zeeman shift\"\>"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9, 
  3.819997594956947*^9, 3.820000006516736*^9, 3.8200000608983293`*^9, 
  3.8200067555923815`*^9, 3.8200673620059676`*^9}],

Cell[BoxData["7.378324478594951`*^7"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9, 
  3.819997594956947*^9, 3.820000006516736*^9, 3.8200000608983293`*^9, 
  3.8200067555923815`*^9, 3.820067362009957*^9}],

Cell[BoxData["\<\"e-r differential Zeeman shift\"\>"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9, 
  3.819997594956947*^9, 3.820000006516736*^9, 3.8200000608983293`*^9, 
  3.8200067555923815`*^9, 3.820067362012949*^9}],

Cell[BoxData["2.1061225027442385`*^7"], "Output",
 CellChangeTimes->{3.8194666806563573`*^9, 3.8199973387344112`*^9, 
  3.819997594956947*^9, 3.820000006516736*^9, 3.8200000608983293`*^9, 
  3.8200067555923815`*^9, 3.8200673620179744`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["frequency scans", "Section",
 CellChangeTimes->{{3.8192038754475665`*^9, 3.819203889914741*^9}, {
   3.8192039332593327`*^9, 3.8192039370811744`*^9}, {3.81945674121952*^9, 
   3.819456756426366*^9}, {3.8194612112237186`*^9, 3.819461219450421*^9}, 
   3.819816230565086*^9}],

Cell["Run setup above, then a \[OpenCurlyDoubleQuote]Run\
\[CloseCurlyDoubleQuote] cell.", "Text",
 CellChangeTimes->{{3.819459484611496*^9, 3.819459488748825*^9}, {
  3.8194658453380756`*^9, 3.8194658461057043`*^9}, {3.819816239291933*^9, 
  3.8198162560188365`*^9}, {3.8199973070591745`*^9, 3.819997313284008*^9}, {
  3.819997600394043*^9, 3.8199976008909283`*^9}}],

Cell[CellGroupData[{

Cell["Run - RIN and finite T", "Subsection",
 CellChangeTimes->{{3.819459448353262*^9, 3.819459449525453*^9}, {
  3.8198162323722134`*^9, 3.819816236260394*^9}}],

Cell["\<\
possible methodological issue: effects from fast frequencies in the time \
series RIN will not be resolved unless the time step size in the solver is < \
1/f_fast\
\>", "Text",
 CellChangeTimes->{{3.819463368989073*^9, 3.8194634390598507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fTable", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"2", "\[Pi]", " ", "fMHz", "*", "1*^6"}], ",", 
       RowBox[{"{", 
        RowBox[{"fMHz", ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "18"}], ",", 
           RowBox[{"-", "13"}], ",", ".4"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTable", " ", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "50", ",", "100"}], "}"}], "/", 
      RowBox[{"(", "1*^6", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"endPts", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{"j", ",", "i"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<", 
           RowBox[{
            RowBox[{"Length", "[", "TTable", "]"}], "+", "1"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"T", "=", 
            RowBox[{"TTable", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"endPts", " ", "=", " ", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"linetime", "=", 
            RowBox[{
             RowBox[{"Timing", "[", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", " ", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "fTable", "]"}], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                  "on", " ", "each", " ", "frequency", " ", "step", " ", 
                   "need", " ", "to", " ", "recalculate", " ", "the", " ", 
                   "RIN", " ", "time", " ", "series", " ", "and", " ", 
                   "parameters", " ", "that", " ", "depend", " ", "on", " ", 
                   "it"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"useRIN", " ", "=", " ", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", 
                    "False"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"f", " ", "=", 
                   RowBox[{"fTable", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  RowBox[{"(*", 
                   RowBox[{"780", " ", "frequency", " ", "tuning"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"avgsNum", " ", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", 
                    ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"endPt", " ", "=", " ", "0"}], ";", 
                  RowBox[{"(*", 
                   RowBox[{
                   "the", " ", "average", " ", "loop", " ", "gets", " ", "a", 
                    " ", "single", " ", "data", " ", "point"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"avgstep", "=", "1"}], ",", 
                    RowBox[{"avgstep", "<", 
                    RowBox[{"avgsNum", "+", "1"}]}], ",", 
                    RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                    RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"r", "[", "t_", "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{"vx", " ", 
                    RowBox[{"t", "/", "scl"}]}]}], ",", 
                    RowBox[{"y", "+", 
                    RowBox[{"vy", " ", 
                    RowBox[{"t", "/", "scl"}]}]}], ",", 
                    RowBox[{"z", "+", 
                    RowBox[{"vz", " ", 
                    RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"args", "[", "t_", "]"}], ":=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"r", "[", "t", "]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "InitializeRINDependentQuantities", "[", "useRIN", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Haf", "[", "t_", "]"}], ":=", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", GridBox[{
                    {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], "0"},
                    {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                    {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                    }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
                    RowBox[{"BuildSchroedingerSystem", "[", 
                    RowBox[{
                    RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], 
                    ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"result", "=", " ", 
                    RowBox[{"Timing", "[", 
                    RowBox[{"First", "@", 
                    RowBox[{"NDSolve", "[", 
                    RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"time", " ", "+=", " ", 
                    RowBox[{"result", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"soln", "=", 
                    RowBox[{"result", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"endPt", "+=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    RowBox[{"soln", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "2"], "/.", 
                    RowBox[{"t", "\[Rule]", " ", "tmax"}]}], ")"}], "/", 
                    "avgsNum"}]}], ";"}]}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<solved system in `` mins\>\"", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                    "]"}]}], "]"}], "]"}], ";"}], "*)"}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"endPts", ",", "endPt"}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step T=`` \[Mu]K in `` mins\>\"", ",", 
              RowBox[{
               RowBox[{"T", 
                RowBox[{"(", "1*^6", ")"}]}], "//", "N"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"linetime", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"linetime", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", "endPts"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198033155039415`*^9, 3.8198033521721325`*^9}, {3.819826445929147*^9, 
   3.8198265033857417`*^9}, {3.8199928463290243`*^9, 
   3.8199928599394236`*^9}, {3.8199973498343863`*^9, 3.81999735042196*^9}, {
   3.8199975425950823`*^9, 3.8199975435209703`*^9}, {3.8199992715136914`*^9, 
   3.8199992908047895`*^9}, {3.82001864008563*^9, 3.8200186401937838`*^9}, {
   3.8200186708372936`*^9, 3.820018680913883*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step T=\\!\\(\\*RowBox[{\\\"0.`\\\"}]\\) \[Mu]K \
in \\!\\(\\*RowBox[{\\\"\\\\\\\"0.053\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step T=`` \[Mu]K in `` mins", 0., 
   NumberForm[0.05286458333333333, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9, 
   3.8198033767219467`*^9, 3.819826521910613*^9, 3.8199928732960854`*^9, 
   3.819999307110564*^9, 3.820005367851411*^9, 3.8200186967696505`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step T=\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\) \[Mu]K \
in \\!\\(\\*RowBox[{\\\"21\\\"}]\\) mins\"\>",
  StringForm["ran step T=`` \[Mu]K in `` mins", 50., 21],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9, 
   3.8198033767219467`*^9, 3.819826521910613*^9, 3.8199928732960854`*^9, 
   3.819999307110564*^9, 3.820005367851411*^9, 3.820020009186549*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step T=\\!\\(\\*RowBox[{\\\"100.`\\\"}]\\) \[Mu]K \
in \\!\\(\\*RowBox[{\\\"21\\\"}]\\) mins\"\>",
  StringForm["ran step T=`` \[Mu]K in `` mins", 100., 21],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9, 
   3.8198033767219467`*^9, 3.819826521910613*^9, 3.8199928732960854`*^9, 
   3.819999307110564*^9, 3.820005367851411*^9, 3.8200213235034776`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \\!\\(\\*RowBox[{\\\"43\\\"}]\\) \
mins\"\>",
  StringForm["Total run time `` mins", 43],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.819672603558898*^9, {3.8196730450711174`*^9, 3.8196730556544704`*^9}, {
   3.819673258219062*^9, 3.819673270120534*^9}, 3.8196733702697525`*^9, 
   3.8198033767219467`*^9, 3.819826521910613*^9, 3.8199928732960854`*^9, 
   3.819999307110564*^9, 3.820005367851411*^9, 3.8200213235094585`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"populationData", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fTable", "/", 
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]", " ", "1*^6"}], ")"}]}], ",", 
         RowBox[{"solnList", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
     RowBox[{"Length", "[", "solnList", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"freqScanFitList", " ", "=", 
   RowBox[{"Array", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{
        RowBox[{"populationData", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            FractionBox[
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
             RowBox[{"2", 
              SuperscriptBox["\[Sigma]", "2"]}]], "]"}]}], ",", 
          RowBox[{"\[Sigma]", ">", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"-", "16"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", "0.5"}], "}"}]}], "}"}], ",", "x"}], 
       "]"}], "&"}], ",", 
     RowBox[{"Length", "[", "populationData", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
        RowBox[{
         RowBox[{"TTable", "[", 
          RowBox[{"[", "#", "]"}], "]"}], 
         RowBox[{"(", "1*^6", ")"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"freqScanFitList", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.81972174920236*^9, 3.8197217565313926`*^9}, {
   3.81972187044374*^9, 3.8197218890177326`*^9}, 3.8198000292565517`*^9, {
   3.8198001472233295`*^9, 3.819800184419408*^9}, {3.8198005104952717`*^9, 
   3.819800515739854*^9}, {3.8198006528154855`*^9, 3.8198007899681015`*^9}, {
   3.8198009156600924`*^9, 3.819800998083431*^9}, {3.819808958303379*^9, 
   3.819808993078162*^9}, 3.819814634914315*^9, {3.819992882596667*^9, 
   3.8199928965115905`*^9}, {3.819999315425623*^9, 3.819999318525769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"freqScanFitList", "//", "Normal"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "19"}], ",", 
        RowBox[{"-", "13"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<780A Frequency Scan\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<780A Frequency Tuning [MHz]\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", "populationData", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1.05"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819722415660283*^9, 3.8197224821418467`*^9}, {
  3.8198002775136056`*^9, 3.8198002916333714`*^9}, {3.8198008660705976`*^9, 
  3.8198008692092686`*^9}, {3.819801021314191*^9, 3.819801102127328*^9}, {
  3.8198011580167165`*^9, 3.819801159827584*^9}, {3.81980158291385*^9, 
  3.8198015847400465`*^9}, {3.819801713414281*^9, 3.8198017356726537`*^9}, {
  3.819801770294954*^9, 3.8198017879676886`*^9}, {3.819801994068571*^9, 
  3.8198019947561913`*^9}, {3.8198146973366947`*^9, 3.8198147191173286`*^9}, {
  3.8199929103403573`*^9, 3.819992923804121*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RiVrOwVssmHZu2q3sq1YQYErIoPL/j8/xVaP
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
SqECv6djMFl/MrXFKlYxmQp6o1eArE8pPfh+Xi+JCm7Op/q+YF+5ffzt9QQq
5Hr5bq3Bzli4tjIljgoSerePkPUvHnyZRnlv8PUnKx8i62NOy7EmV8dSgZY+
IN6E/e9+8OmRaGzeTRtasNVY4YNYBBVE6zP9yHqbr2u5LWNCqFD05GrhN7L+
iWKS8yGYChUX394k63kenojlKQqiQgtFQJSs/xH1lcn/HkAFLUueu73Y17ku
bNv9jApr2Fn+kfVCSkTiNXF/fPwG0WCynmiL3kzxUT8qNG3cRiPrjbJfeF0/
40uFF3r/aQxgr9r6ofKlJxWqd89fJuuV2g4uCrzzoMKE4+Eh0vHGKrc+u+N4
SoBLZH2Tdmjn3lY3KihVtZ8m66Fe8rHd3fyQCnvufN5D1kvZyGk17n2A2+96
/FPScudDxPa7UuFxssYs6b4IWovuPSrcXtVQTNZb0YUMJfycqZDovVeJrNcy
3toh63WbCsoJV96QfshxXtXNiQrSMpdWk/VdLeNWZi438fhsScwn7Zp758Ul
eyr8M6/bRtaLxaeujLhwnQrxyputSTdFP0k8a0eFVL6rmaTFvPxL9K9RQSfZ
U4+sR2s4GfMHWVNBVifQlqxXW1ATY5O9TIXSl+/ekxY5mswlbUWFummhKdIu
ez+L0Sxxf/bdsCfr4YTGv5hsu0AFtcdOZ8l6Oa0+HatNZlSglOcFkL7d0uy4
0ZQKPHxplaRrcr75sp2jQseqTEmyPu+W52T++CkqeDYIT5GOuuNUNWyM80nH
a0Gyvq/KdrGt3wjHd928JmmBk+wTXYZUeOf+KJp05Z6dQhW6VDA/YadA1g9O
8UYwinWosGmm9BJp/rXCR/O1qdCzuN+HtANT/GSGJhVM+iwbSO/KUfCIVKPC
Vv+C5frG4yllAWGquP38zzqQtovSiAxWocKDi4eekS7xOJnlq4z7Jy2nkvQ1
Q+uR28eoEC19+wBZTxmiypx1lKfCriU3LdJFso6r7BAV9hlPWpLetucev+VR
PP6+LwWSLhh7pqMng+/fSG50+XiV7WnnDuF8FHZ2BVn/eS0igvvKQSqwHeTY
RHqXXkrDowNU2JzKe5D0rYwqgwyCCpXWh51Ja200yChgUKHx0Vov0kKXOnlr
JKggsPn2S9IN24Za+ulUCD6o8Ik0/Q77qW0UfH+KH8dIszU/zRQSo8IN0aJ5
0h30LTuIfVSwf+66Zmm53kmoU02ECvsPbhYk3aegcNZlDxVs9tRqkc56VZHr
Lojjiel/irT/lA5/gAAV+jO5LEjLvTn/LZGfCsWGOk6kX669a9a9gwrT1NnX
pO0usBUObafC2fiGN6SPZ3vv+bMNzydXbqaQnrIJ7ePciuOziB9Ia9d9unhs
ExVqEjZ/Iy0ihko1eajwVtukn/TCg1KR09z4+AjHUdLx+5sH7DmpMOq6d570
quCJyzHrcPu7Pt1M1jN3MW9XpnJQYerPkx2k36uupOauxflp5pTAcj39X86R
ZnYqXOZ8QSWdfZZ+jZ2NCosHLsuTfv4xvWYTKxVWB2sqk7biPCIhwILnr7Wb
1ElvKVAfP7SCCgM8SvqkrwtZ2VsvUOCSkp4F6bY0ttcu8xRwXomsluvXUWSZ
z18KVMtusiG9/nTHrpRZChx3cHQg/dZPo2xyigKnlMQekObk+/WbDdv3tNnj
5Xr3eLddWyYpcJlwcyetVJJ3/dBvChSufe5LuucvY9fdUQpY7KsOIa3iUX38
6QgFInbavSKdzGt9/b9hCtiasISTvsOILi34RYFfJ2eiSG+z5L2+uh9fX6vI
cj39/cm0V1t/UkC2Uyt5uT7cVat03w8KnOa7nLpc7//KfeeJXgqkJN9IJ61T
P1fi102BM/V/luv3+Uckd77vooCuqP1yff/Iahu7pg4KtBlAIWmPI907trdS
IDOop5z0SaOtdrLNFPB7/fELaSF7nZKzjRQQMLeqIQ1xhbZRtRTw32rZSPpp
4XxxcTUFktUylr9HOPNVasfAFwp0FfYvf68wyxNXTC2ngJPCzPL3DAGq223t
iimgeva/5e8fGPe8t2cABWS6hnuXv49YHAx7m0MB17eCy99PiNw5LhD2mQLy
e/4tf18hOB8d7ZeO2+OB7/L3F7ucV4o+SqXAl43No6R5nHLo1m8pQM9J/E16
7c1bUroRFGjhyZwiPXN99NhufwqoJK2bI9171Vx79D4Fco7kzpNW3xk29MGM
AifM9ZZIp5U3uTkrUoAWfHr5exIbrVmlXEEK3HlUvmzRpp1sK1ZQgGtwdNn/
B9LxY/I=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6la8u0GAlYlJCv6s+bPi/wO93AET
          "]]}}}, {}, {}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{-17.999999999999996`, 0.9985662273843768}, {-17.6, 
          0.950623971764372}, {-17.2, 0.9171236254875579}, {-16.8, 
          0.9948489466699387}, {-16.4, 
          0.8421414466785231}, {-15.999999999999998`, 
          0.308752649034797}, {-15.6, 
          0.05036805607444758}, {-15.200000000000001`, 
          0.4639552283009734}, {-14.8, 
          0.9321674866005039}, {-14.399999999999999`, 
          0.9748187449380986}, {-14., 0.9118028834956344}, {-13.6, 
          0.9726442103346862}, {-13.200000000000001`, 0.9950744996498908}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[{{-17.999999999999996`, 0.9985132786874044}, {-17.6, 
          0.9548592026453001}, {-17.2, 0.9205606565868053}, {-16.8, 
          0.9944177049781086}, {-16.4, 
          0.8516109410311099}, {-15.999999999999998`, 
          0.33862227207692186`}, {-15.6, 
          0.06693663268549403}, {-15.200000000000001`, 
          0.454870984677015}, {-14.8, 
          0.9210670398553815}, {-14.399999999999999`, 
          0.9794350820788345}, {-14., 0.9159288808438844}, {-13.6, 
          0.97183319986481}, {-13.200000000000001`, 0.9958538925457058}}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[{{-17.999999999999996`, 0.9983918151189922}, {-17.6, 
          0.9579751058938311}, {-17.2, 0.9242662525731902}, {-16.8, 
          0.9940616115934522}, {-16.4, 
          0.8609067033300563}, {-15.999999999999998`, 
          0.3646691915901349}, {-15.6, 
          0.07972959373046708}, {-15.200000000000001`, 
          0.44923028772721874`}, {-14.8, 
          0.9098308995412481}, {-14.399999999999999`, 
          0.9835463441143365}, {-14., 0.9224927893231384}, {-13.6, 
          0.9708380919888582}, {-13.200000000000001`, 
          0.996191064111181}}]}, {}}}, {}, {}, {{}, {}}}}, {
    PlotRange -> {0, 1.05}, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {-19., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-19., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"780A Frequency Tuning [MHz]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"780A Frequency Scan\"", FontSize -> 16, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{-19, -13}, {0., 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"15.654916747543062`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 0, $CellContext`\[Mu] -> -15.654916747543062`], 
        Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"15.642409860516441`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 50, $CellContext`\[Mu] -> -15.642409860516441`], 
        Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"15.631257495769292`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 100, $CellContext`\[Mu] -> -15.631257495769292`],
         Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8197224596737127`*^9, 3.819722484573361*^9}, 
   3.819722565258933*^9, 3.819800292490164*^9, 3.8198008059998045`*^9, 
   3.8198008705184946`*^9, 3.819801058581767*^9, {3.819801792423691*^9, 
   3.8198018040058203`*^9}, 3.8198019956734304`*^9, 3.8198089956005335`*^9, 
   3.81981464150559*^9, {3.819814688903555*^9, 3.8198147200065136`*^9}, 
   3.8198307702232833`*^9, {3.8199928857339*^9, 3.819992924671993*^9}, 
   3.819999337735525*^9, 3.8200053721129227`*^9, 3.8200232826061144`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "fname", "=", 
    "\"\<..\\images\\plot_rydberg_780Afrequency_scanfit_0_50_100_uK.png\>\""}]\
, ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"fname", ",", "plt"}], "]"}], "\[IndentingNewLine]", "fname"}], 
    "=", "\"\<..\\solns\\soln_rydberg_780Afrequency_scanfit_0_50_100_uK.csv\>\
\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"fname", ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "fTable", "}"}], ",", "solnList"}], "]"}]}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8194558720208583`*^9, 3.8194559606972227`*^9}, {
   3.819456020568077*^9, 3.819456026206417*^9}, {3.8194560634184227`*^9, 
   3.819456126228094*^9}, {3.8194561738043723`*^9, 3.819456176973164*^9}, {
   3.8194563112692614`*^9, 3.819456352032028*^9}, 3.81946598426628*^9, {
   3.8198018591353874`*^9, 3.8198018624561825`*^9}, {3.819801977205871*^9, 
   3.8198020594249554`*^9}, {3.819811878513671*^9, 3.8198118888360405`*^9}, {
   3.819811958513422*^9, 3.8198119602336245`*^9}, 3.819812001089165*^9, {
   3.8198307858095417`*^9, 3.8198308007864757`*^9}, {3.82002331468017*^9, 
   3.8200233342758784`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_rydberg_780Afrequency_scanfit_0_50_100_\
uK.png\"\>"], "Output",
 CellChangeTimes->{
  3.819456122204848*^9, 3.819456178692423*^9, 3.8194563540131607`*^9, {
   3.8198020086212463`*^9, 3.819802065489424*^9}, 3.8198119054186697`*^9, 
   3.8198119858306823`*^9, 3.8198307938641186`*^9, 3.8200233275207825`*^9}],

Cell[BoxData["\<\"..\\\\solns\\\\soln_rydberg_780Afrequency_scanfit_0_50_100_\
uK.csv\"\>"], "Output",
 CellChangeTimes->{
  3.819456122204848*^9, 3.819456178692423*^9, 3.8194563540131607`*^9, {
   3.8198020086212463`*^9, 3.819802065489424*^9}, 3.8198119054186697`*^9, 
   3.8198119858306823`*^9, 3.8198307938641186`*^9, 3.8200233275786324`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rabi oscillations", "Section",
 CellChangeTimes->{{3.819802194536642*^9, 3.819802211616387*^9}, {
  3.819802298836159*^9, 3.8198022997982407`*^9}}],

Cell["Run setup above, then a \[OpenCurlyDoubleQuote]Run *some noisy \
condition* \[OpenCurlyDoubleQuote] cell. ", "Text",
 CellChangeTimes->{{3.8198024144656057`*^9, 3.819802446048952*^9}, {
  3.8199976250087905`*^9, 3.8199976255630765`*^9}}],

Cell[CellGroupData[{

Cell["Run - finite T, RIN, optional detuning error", "Subsection",
 CellChangeTimes->{{3.8198024623979783`*^9, 3.8198025560204945`*^9}, {
  3.820070750472477*^9, 3.8200707609367933`*^9}}],

Cell["\<\
Can use frequency found in scans to satisfy the two-photon resonance. if \
doing this, make sure to use the same temperatures from the freq. scan, and \
to convert the frequencies to angular frequencies with the correct units.\
\>", "Text",
 CellChangeTimes->{{3.819802738338188*^9, 3.819802776181384*^9}, {
  3.819802823405308*^9, 3.81980285048003*^9}, {3.81980292224253*^9, 
  3.8198029538937016`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"3", "*", "2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "fTable", " ", "and", " ", "TTable", " ", "should", " ", "be", " ", 
     "same", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fTable", "=", " ", 
     RowBox[{"2", "\[Pi]", 
      RowBox[{"(", "1*^6", ")"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15.549"}], ",", 
        RowBox[{"-", "15.6424"}], ",", 
        RowBox[{"-", "15.6313"}]}], "}"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "\[Pi]", " ", 
         RowBox[{"(", "1*^6", ")"}], 
         RowBox[{
          RowBox[{
           RowBox[{"freqScanFitList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "&"}], ",", 
       RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}], "*)"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TTable", " ", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"50", ",", "75", ",", "100"}], "}"}], "/", 
      RowBox[{"(", "1*^6", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "TTable", "]"}], "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"T", "=", 
            RowBox[{"TTable", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"f", "=", 
            RowBox[{"2", "\[Pi]", "*", 
             RowBox[{"(", 
              RowBox[{"-", "15.6544*^6"}], ")"}]}]}], 
           RowBox[{"(*", 
            RowBox[{"fTable", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*)"}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"2", "\[Pi]", "*", 
              RowBox[{"(", 
               RowBox[{"-", "15.6544*^6"}], ")"}]}], ";"}], "*)"}], 
           RowBox[{"(*", 
            RowBox[{"780", " ", "frequency", " ", "tuning"}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"useRIN", " ", "=", "False"}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", "False"}],
               "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"avgsNum", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", ",", 
              "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"solng", " ", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"solne", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"solnr", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"avgstep", "=", "1"}], ",", 
             RowBox[{"avgstep", "<", 
              RowBox[{"avgsNum", "+", "1"}]}], ",", 
             RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                 RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
                 RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"r", "[", "t_", "]"}], ":=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "+", 
                  RowBox[{"vx", " ", 
                   RowBox[{"t", "/", "scl"}]}]}], ",", 
                 RowBox[{"y", "+", 
                  RowBox[{"vy", " ", 
                   RowBox[{"t", "/", "scl"}]}]}], ",", 
                 RowBox[{"z", "+", 
                  RowBox[{"vz", " ", 
                   RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"args", "[", "t_", "]"}], ":=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"r", "[", "t", "]"}], ",", 
                 RowBox[{"{", "t", "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
              "InitializeRINDependentQuantities", "[", "useRIN", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Haf", "[", "t_", "]"}], ":=", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", GridBox[{
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], "0"},
                   {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                  }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
               RowBox[{"BuildSchroedingerSystem", "[", 
                RowBox[{
                 RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], ";"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"result", "=", " ", 
               RowBox[{"Timing", "[", 
                RowBox[{"First", "@", 
                 RowBox[{"NDSolve", "[", 
                  RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"time", " ", "+=", " ", 
               RowBox[{"result", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"solng", "+=", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"result", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "2"]}], 
              ";"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"solne", "+=", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"result", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}], "2"]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"solnr", "+=", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"result", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}], "2"]}], 
              ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"solng", "/", "avgsNum"}], ",", 
               RowBox[{"solne", "/", "avgsNum"}], ",", 
               RowBox[{"solnr", "/", "avgsNum"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step ``/`` in `` mins\>\"", ",", "i", ",", 
              RowBox[{"Length", "[", "TTable", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198027179663506`*^9, 3.819802727087193*^9}, {3.819802999443404*^9, 
   3.819803212436143*^9}, {3.8198120929386597`*^9, 3.8198120998933706`*^9}, {
   3.819812139100168*^9, 3.819812153910636*^9}, {3.819812187574404*^9, 
   3.8198123682048874`*^9}, 3.8198124212242584`*^9, {3.8198124579578257`*^9, 
   3.819812496228352*^9}, {3.819812906939867*^9, 3.81981290749551*^9}, {
   3.8198129922844114`*^9, 3.8198130629379635`*^9}, {3.8198131253967447`*^9, 
   3.8198131321322527`*^9}, {3.819825462799967*^9, 3.819825463319642*^9}, {
   3.8198308331275234`*^9, 3.8198308502080946`*^9}, {3.8198372046152873`*^9, 
   3.8198372220312605`*^9}, {3.8198380266196423`*^9, 3.819838056013425*^9}, {
   3.819851656117609*^9, 3.819851666679801*^9}, 3.819852309163109*^9, {
   3.819984278187317*^9, 3.819984284221818*^9}, {3.8199903617956977`*^9, 
   3.8199903691125803`*^9}, {3.819990501852253*^9, 3.8199905106423836`*^9}, {
   3.819992823532028*^9, 3.8199928289173536`*^9}, {3.819993024386036*^9, 
   3.819993052413942*^9}, {3.819993276536003*^9, 3.8199932809980297`*^9}, {
   3.819993678968377*^9, 3.8199936824492064`*^9}, {3.8199938884685736`*^9, 
   3.8199938885777435`*^9}, {3.8199954703984833`*^9, 3.819995549819788*^9}, {
   3.819995598877347*^9, 3.81999562126505*^9}, {3.819996799781807*^9, 
   3.8199968047444*^9}, {3.819997698745241*^9, 3.819997728043714*^9}, {
   3.8199980939668026`*^9, 3.8199981115653944`*^9}, 3.8199981442924147`*^9, {
   3.8199981930469246`*^9, 3.8199982306337337`*^9}, {3.819999365784561*^9, 
   3.819999365828227*^9}, {3.8199999565838366`*^9, 3.819999988717625*^9}, {
   3.8200009361202*^9, 3.820000937758066*^9}, {3.820001764415834*^9, 
   3.8200017711658363`*^9}, {3.820004021953421*^9, 3.820004024002699*^9}, {
   3.820005387310814*^9, 3.8200054066063795`*^9}, {3.820007484921318*^9, 
   3.8200074868684607`*^9}, {3.8200232943169136`*^9, 
   3.8200233009803586`*^9}, {3.8200233596099367`*^9, 
   3.8200233997896347`*^9}, {3.820061627285411*^9, 3.8200616509721346`*^9}, {
   3.8200668038406253`*^9, 3.8200668069687924`*^9}, {3.820066957921187*^9, 
   3.8200670216319747`*^9}, {3.8200706503841777`*^9, 
   3.8200706630917253`*^9}, {3.820072520392098*^9, 3.8200725253029623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 1, 3, 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8199980857454357`*^9, {3.8199981402986727`*^9, 3.8199981491203666`*^9}, 
   3.8199982223323164`*^9, 3.8199982650764103`*^9, 3.8199995806569347`*^9, 
   3.819999993850145*^9, 3.8200002645475035`*^9, 3.8200015601559477`*^9, 
   3.820004264083867*^9, 3.820005576034815*^9, 3.8200068079692383`*^9, 
   3.820007005167683*^9, 3.8200080573063164`*^9, 3.8200234352321815`*^9, 
   3.8200616711752863`*^9, 3.820066625557649*^9, 3.8200666729274783`*^9, 
   3.820067512507822*^9, 3.8200712895442257`*^9, 3.820072704504379*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 2, 3, 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8199980857454357`*^9, {3.8199981402986727`*^9, 3.8199981491203666`*^9}, 
   3.8199982223323164`*^9, 3.8199982650764103`*^9, 3.8199995806569347`*^9, 
   3.819999993850145*^9, 3.8200002645475035`*^9, 3.8200015601559477`*^9, 
   3.820004264083867*^9, 3.820005576034815*^9, 3.8200068079692383`*^9, 
   3.820007005167683*^9, 3.8200080573063164`*^9, 3.8200234352321815`*^9, 
   3.8200616711752863`*^9, 3.820066625557649*^9, 3.8200666729274783`*^9, 
   3.820067512507822*^9, 3.8200712895442257`*^9, 3.820072891678802*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 3, 3, 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8199980857454357`*^9, {3.8199981402986727`*^9, 3.8199981491203666`*^9}, 
   3.8199982223323164`*^9, 3.8199982650764103`*^9, 3.8199995806569347`*^9, 
   3.819999993850145*^9, 3.8200002645475035`*^9, 3.8200015601559477`*^9, 
   3.820004264083867*^9, 3.820005576034815*^9, 3.8200068079692383`*^9, 
   3.820007005167683*^9, 3.8200080573063164`*^9, 3.8200234352321815`*^9, 
   3.8200616711752863`*^9, 3.820066625557649*^9, 3.8200666729274783`*^9, 
   3.820067512507822*^9, 3.8200712895442257`*^9, 3.8200730736494546`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \\!\\(\\*RowBox[{\\\"8\\\"}]\\) mins\"\
\>",
  StringForm["Total run time `` mins", 8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8199980857454357`*^9, {3.8199981402986727`*^9, 3.8199981491203666`*^9}, 
   3.8199982223323164`*^9, 3.8199982650764103`*^9, 3.8199995806569347`*^9, 
   3.819999993850145*^9, 3.8200002645475035`*^9, 3.8200015601559477`*^9, 
   3.820004264083867*^9, 3.820005576034815*^9, 3.8200068079692383`*^9, 
   3.820007005167683*^9, 3.8200080573063164`*^9, 3.8200234352321815`*^9, 
   3.8200616711752863`*^9, 3.820066625557649*^9, 3.8200666729274783`*^9, 
   3.820067512507822*^9, 3.8200712895442257`*^9, 3.820073073666751*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8199963282071033`*^9, 3.8199963657181683`*^9}, 
   3.819999160243162*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"if", " ", "solne"}], ",", " ", 
    RowBox[{"solnr", " ", "were", " ", "obtained"}], ",", " ", 
    RowBox[{"plot", " ", "e"}], ",", "g", ",", 
    RowBox[{
    "r", " ", "populations", " ", "for", " ", "a", " ", "single", " ", 
     "temp"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solng", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", "solnList"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tidx", "=", "2"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"corresponds", " ", "to", " ", "particular", " ", "temp"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", "=", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{\"g\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"e\"},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{\"r\"},
\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"solnList", "[", 
            RowBox[{"[", "Tidx", "]"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
         RowBox[{"Length", "[", "solng", "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Ground-Rydberg Rabi Oscillation, T=``\[Mu]K\>\"", ",", 
           RowBox[{
            RowBox[{"TTable", "[", 
             RowBox[{"[", "Tidx", "]"}], "]"}], 
            RowBox[{"(", "1*^6", ")"}]}]}], "]"}], ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Two-photon pulse duration [ns]\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", " ", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8199960504781103`*^9, 3.819996074923436*^9}, {
  3.819996292152076*^9, 3.8199963029224386`*^9}, {3.8199964352097654`*^9, 
  3.8199964399729977`*^9}, {3.8199964860908623`*^9, 3.8199965190236425`*^9}, {
  3.8199965555022497`*^9, 3.8199966574257507`*^9}, {3.8199966882483807`*^9, 
  3.8199967405946507`*^9}, {3.8199991617793407`*^9, 3.819999202499491*^9}, {
  3.8200052155157914`*^9, 3.8200052387574415`*^9}, {3.820005273916152*^9, 
  3.820005276332552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "ground", " ", "state", " ", "population", " ", "for", " ", 
    "each", " ", "temp", " ", "step"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solng", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", "solnList"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"leg", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
           RowBox[{
            RowBox[{"TTable", "[", 
             RowBox[{"[", "#", "]"}], "]"}], 
            RowBox[{"(", "1*^6", ")"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"freqScanFitList", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<`` \[Mu]K\>\"", ",", 
          RowBox[{
           RowBox[{"TTable", "[", 
            RowBox[{"[", "#", "]"}], "]"}], 
           RowBox[{"(", "1*^6", ")"}]}]}], "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "TTable", "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.819813275851759*^9, 3.819813410386195*^9}, 
   3.819813454354553*^9, {3.8198135239072404`*^9, 3.8198135508270884`*^9}, {
   3.8198135815099916`*^9, 3.8198136276734962`*^9}, {3.8199841269564257`*^9, 
   3.819984170325721*^9}, {3.8199842303571825`*^9, 3.819984233385373*^9}, {
   3.8199959594528475`*^9, 3.819995961865506*^9}, {3.819996009351425*^9, 
   3.8199960214755535`*^9}, {3.8199963737985277`*^9, 3.81999639625327*^9}, {
   3.82000071965649*^9, 3.820000745827671*^9}, {3.8200007841505413`*^9, 
   3.8200007965277987`*^9}, {3.8200052490289707`*^9, 3.8200052707790065`*^9}, 
   3.820007380620767*^9, {3.820060497436195*^9, 3.820060501681718*^9}, {
   3.8200724549262953`*^9, 3.820072458861874*^9}, 3.820073336386266*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"solng", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Two-photon pulse duration [ns]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.819813275851759*^9, 3.819813410386195*^9}, 
   3.819813454354553*^9, {3.8198135239072404`*^9, 3.8198135508270884`*^9}, {
   3.8198135815099916`*^9, 3.8198136276734962`*^9}, {3.8199841269564257`*^9, 
   3.819984170325721*^9}, {3.8199842303571825`*^9, 3.819984233385373*^9}, {
   3.8199959594528475`*^9, 3.819995961865506*^9}, {3.819996009351425*^9, 
   3.8199960214755535`*^9}, {3.8199963737985277`*^9, 3.81999639625327*^9}, {
   3.82000071965649*^9, 3.820000745827671*^9}, {3.8200007841505413`*^9, 
   3.8200007965277987`*^9}, {3.8200052490289707`*^9, 3.8200052707790065`*^9}, 
   3.820007380620767*^9, {3.820060497436195*^9, 3.820060501681718*^9}, {
   3.8200724549262953`*^9, 3.820072458861874*^9}, {3.820073336386266*^9, 
   3.8200733419484262`*^9}, {3.820073385492215*^9, 3.8200733859950857`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVWHdczd8bD0VGGkZGNFFJQqjQ82iQqJCWb2aakmgILSHtHe26rdu899ZV
aZf2VAmVlva4Q9Ou3+f31329X+/nPPN9zvmcK3r7/mXTlRwcHLarODj+/3td
anEgv2wH+JecXF5eZoMza2GPn9dPON77zEPiFxuCZL3S9L24ketOqYrRDBtm
ctfFHzETwKjyFepzi2yI0m6fPOG1Dc8Gru5ZXmKD6tQbebWM3Th3Y/ZUPbF+
UYUKe83EMP/Pa7bKdzY0BgmYSj/ag1HbxSU15tgQ3+/gI+sliUvHF2VW/mWD
vUw39XDkfvTWc1Uu+ckGjScnPx3LkMXPVivceVls2Dii4xLbJ4dPDts1qxH4
p8+KIGGzwzgl6qkm8IMNQ4foiSTWEWyTiX8/usCG5q47eeKPjmJ20aNC2hQb
8t221qcsH8NvYnbZKyfYQNpb37PPSwF3ZsYe/H9+fi2Pmel8Sqi7qHFGlqjX
0X4/h0zkCUxZu8FWYIwNN3f2CVBET+EbFeeA14Ns0HwfsEcuQxkHoorj0seJ
fsiLCBltR9xivOLfCyIeL/fjPVF9iH/IEt07CfsXX9tlv5JOY27GDVneLjb8
okgrCJmp4EaV/0zu9LHBxuP56WvSqmiE56YHvrFhRK9XM46liufiPsrmEPZG
UkevDOSqYYye3G37Vja0/vW/JvJIHatNYnKC2tmQqDnjIeGlgc+jUk5qVbNB
cLemn+mFc7h8R/h4QiNR30xieCqfJkp0NFI31LBhRc2fuPFOTbwuWsazXEDU
G3ElTTLyPP6mSWgX5LHh/FhBi0yGNhbfF1mcSGHDbwS/HWaX8chiMOesBxve
Zkzznai/jKf1rWdbXrLh/uaI8P+kdZHFqo34/ooN0q5qO5z9dDHHp3m7qzNR
z/j3uBiWLt5aNOwdvE/kH5CYs/uRHurbdk1W/8cGr5/ax6BbD2m2pVs/GRF6
uv2n6MYJfez1N3xRdY0NS01kcI/Vx6vRDLvvemx4d/RKdcKyPor3He58c4YN
Sb1cX8S8DPFqdbX/BTk2KC+dNH4xa4grDh77+fMwG7qE7b+NGhvhaZB0ERQj
9GQyNJ126Co+VqhODN/EhieTZRwHv/6HJT7d6qULLLi8+Ej6hOwNHN3y0Xwp
nwVMQSo1JuIG9vZ8a68vZkG1kN0OtxU38Y7t8dfZqSy4oZwRP3j3Jr7juVq4
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
4Rzp4ILMKzr+qbPa6ZpbDP8Djy1Nwg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVWXc81e8XV4jQLlEi2TJapFLnZJRK2ZKUQlYSFVIpe49ry973mvdyZWeP
rESTpMh2R4rq29Dv8/vL6/16n+ec9xnP+dznRdzqpuG1lRwcHBc5OTj+//ey
3PePlQ3boDLo2L9//9jwgLUkFR78E7oqdBtV/2MDSSmYYhrMi6BSX+S9wIaF
cr6M/bYbkVRiXrbmBxuSzw3MHgkWwgAZig8vcV5zLvGAVqEoXmE8KRsnzn/X
oIK07S5sOFH+1vMLG7pJG6/Je0ihzq7CDfe/sSFj1C1UKVgWj02e6ZD8w4Y7
CkPUfY9345jgjgj2Tzbo3FN/rVqohMkui87XWGxYO6HnlfZhD3J+dT2WSeCf
oStIYrb70GlUjOMKoWd8Lz07i7UfO48kPtH4zobedzZPJDxU0P33Mw2VeTZU
PhJ8lvdPFVWKBB8kzLAhS/rZsEywGpboHdzeS+gL7/NkFqw/jClXNTraiXzd
7+zmUHh8BF03u6u9nmLDle0fNpaKH0VPxrD5rTE2nG6JlNpTeAzFB7sTvQl/
yQd2ilwQRszpKlxlT8Rbx+splfwBsb1oV5oCYe//fkDpfdZxLL7/0VFjiA3/
lcqridhqoNG4xZrHo2xw9vU7fkleE2/wmwSIfWbDhMnI6XSWJt6P42wXG2bD
BTkV44/lWjjpdtJs7Qs2PP8TcWmnhza+qJV33v+SDdmnF3wlg3WQc/i9pHMH
G7aKng6/pnsKZV4IMnp6ifwWsuPz159GjpN9H2w72bCi/Xf69KvT2Dby7nVs
LZFvkjFF9vEZFLb9rmhbzYYzU1V9CoXnkIPhpqtSwIZfCOHbbA1xS9x/EflB
bKgonF9/5Jkhbj9UvD05lA03NyfFX5Q3wq7/9u6dCGeD/EOtbQ/CjTCCL0a3
3ofIZ/pLeirLCN+KKUdbuhH6I7PLRD1MUIr/k7yIFRuCf55ThSETLJ36V2pw
hZgnq9+1lkdM0ZwurHvNhg3LPWTwTjNFMmP0yAcLNlSrGLdl/jPFr/v5e16f
ZcPtDI5TzVfPI1/eo9rTp9igtLqkb6z1PHLvmnC2JfiZWxcMV0qboXqRoOTS
STbkjHC/3RVshjVPXqs8UmPDsWV1C/+vZriP25VX9wgb3ondGZu0uIBN7/cP
vJEn5s96fJ6y1xy/P7lsPSnChnuzDRzK7y9ip4MJU42DDYbfPeSPKFli9zX+
+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
yksKQXRUt/K6//FvK/wP0Rpl4Q==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999985923214}}, {{0, 4999.175718266285}, {0., 
        0.9999999985923214}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 50], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"75\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 75], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 100], Editable -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819813363308201*^9, 3.819813458082431*^9, 
  3.8198135987210474`*^9, 3.8198136548229604`*^9, 3.819815622519642*^9, 
  3.8198160672575502`*^9, 3.819832848089136*^9, 3.819837924401493*^9, 
  3.819848412982501*^9, 3.8198515810447645`*^9, 3.8198523310353403`*^9, 
  3.8199842376250734`*^9, 3.8199905341823864`*^9, 3.819992985521444*^9, 
  3.8199932492306757`*^9, 3.8199936316110697`*^9, 3.8199936966558704`*^9, 
  3.8199949755058727`*^9, 3.8199959613228493`*^9, 3.8199963994043713`*^9, 
  3.820000712874891*^9, 3.8200007671762857`*^9, 3.820001648880086*^9, 
  3.8200052934745936`*^9, 3.820007404544486*^9, 3.820013450119132*^9, 
  3.8200257463137407`*^9, 3.8200605463017216`*^9, 3.820072443090769*^9, 
  3.8200724802272787`*^9, 3.820073366914111*^9, 3.8200734145467577`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"RINsolng", "=", "solng"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8200725031723223`*^9, 3.8200725142443495`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "fname", "=", 
   "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_noRIN_correct_\
frequency_50_75_100_uK.png\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8198137039247265`*^9, 3.819813730605784*^9}, {
   3.8198160476916523`*^9, 3.819816074977964*^9}, 3.81983713633145*^9, {
   3.8198373641667404`*^9, 3.81983738860429*^9}, {3.8198379852766256`*^9, 
   3.81983801435382*^9}, {3.8198516796377726`*^9, 3.81985167974338*^9}, 
   3.8198523856136446`*^9, 3.8199835969845734`*^9, {3.8199841038822374`*^9, 
   3.8199841067860084`*^9}, {3.8200008186028566`*^9, 3.8200008433730907`*^9}, 
   3.8200009253422785`*^9, {3.8200040985509357`*^9, 3.8200040991164217`*^9}, {
   3.820007463716502*^9, 3.820007475215334*^9}, 3.820014163772544*^9, {
   3.820025771538884*^9, 3.820025777827982*^9}, 3.820059418575559*^9, 
   3.8200605193342876`*^9, 3.820060554929738*^9, {3.8200706905036526`*^9, 
   3.82007069484505*^9}, {3.820073367856656*^9, 3.8200733969150414`*^9}, {
   3.820073442817767*^9, 3.8200734469653044`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_groundrydberg_Rabi_oscillation_noRIN_\
correct_frequency_50_75_100_uK.png\"\>"], "Output",
 CellChangeTimes->{3.8198160682800293`*^9, 3.819837169138708*^9, 
  3.8198379892478547`*^9, 3.8198523873710327`*^9, 3.820000855360773*^9, 
  3.820007467623906*^9, 3.8200141868625417`*^9, 3.8200257927775626`*^9, 
  3.820060550274289*^9, 3.820073374545498*^9, 3.820073447992634*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"color", "=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{"0", ",", "0.5", ",", "0.9"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820075369006538*^9, 3.8200753708594203`*^9}, {
  3.8200755910077796`*^9, 3.820075596619972*^9}}],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 0.5, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0.33333333333333337`, 0.6000000000000001],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0, 0.5, 0.9]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.5, 0.9]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 0.5, 0.9],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8200755970315332`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"solng", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"RINsolng", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"color", ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"color", ",", "Dashed"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<w/o RIN\>\"", ",", "\"\<w/ 780A RIN\>\""}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Ground-Rydberg Rabi Oscillation, T=50\[Mu]K\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Two-photon pulse duration [ns]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8200734752097073`*^9, 3.820073599025813*^9}, {
  3.820073646947096*^9, 3.820073724929431*^9}, {3.820073861669426*^9, 
  3.82007387850342*^9}, {3.8200739133621607`*^9, 3.820073949360276*^9}, {
  3.8200740004258313`*^9, 3.8200740045102115`*^9}, {3.8200741340055385`*^9, 
  3.8200741418879976`*^9}, {3.820075235699059*^9, 3.820075241938086*^9}, {
  3.820075374748933*^9, 3.8200754081881256`*^9}, {3.8200755833944874`*^9, 
  3.820075588110585*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0.5, 0.9]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0.5, 0.9], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
Hl1qGZrt5IqMLG8A+eja7a7fy/BuwX+xLgoNcMnR6FMrAwkJQ4e4p4tegU3/
PgOtzSRcY/A2ZXF7BRHH2gaGt5BwSOt4hvvZVzA4K/FmeRsJrXkndEU/vISb
+gykfXtI2FAx21238yXYnM4MMOImockpEsuO4Dr6fvTa2P8joVRQTouXXh28
TNjO2M1DwqRAzvCz4nWwe/3+E/lDJFR5deLhfFst5LdIO3EJk/CO4pNyjT21
oL06R+oVIaHsYe65L+M18Es4fuWZGAmvJ069l62tAfXgf9bfj5HQl0+IPHO3
Bmavtpn0S5NwX8ipZ1KvqyHE53F6gAwJmQxb6w++qAbpCrEJkCUhWznIMj2u
Bu/94deLFUh4V7da5oN4NRyauHY1WJmEEukCq9LpVfCGhSlcWZWEH6O2PHV7
WgUPleu7f6mR8NWT+9ZC5lXwKvuQuuUFen0HxuXERKrA/MPAM75LJPSZtx4s
31kFe3Y+a36vQcJVhqNXShcr4ab1oqLaFRLmjVSPlpEqgTEl0f3vVRKKlm1r
skishIK3l2tJOiTsfCbsPO1bCb9Plp0SuEZCnp0nhKV0KyHd1NR+xICEJ9iD
BD3kK0E9lrM04joJw/XCL7zjr4Qv7W+o52+SkDnyIrM4ayXE/XIV3zAi4WXS
bq211QpQPHrsXuVtEsZFOWuKzlXA3M0JwoO7dDtHekjIYAVIN6gIjpmSkH/u
z63jpRUwtvLjTpQ5PZ9JU6V8UgX4COamXLQk4crAnO1UUAWI6V0f23SPvo9x
Q2B7WgEDfrsP1NwnoVfmYKbc/QpwrX51zfYBCf90MQt/uVsB/Eu2McIPSahx
edNWTb0KsL08xBL7iD7fUm2rC1AB+5/4a152oOvJ7GYpm2QFvC6RC2F0IuGj
Yb1phsMVYD613FHnTMJx7fLIw/wVsJc9Zbu9CwkTd+pfj2apgEq1K2pibiT8
Rg1wHdpbAUbOm30+u5Nw422AAWyvAMa88oYXniQcNjY2iP5TDoWj5utaXiTs
VfT5HrZeDjq7uc9s9yahc1X3Ha5v5fD7bJfLKx8SKoT7/5T7Ug4ZDz2qHJ+R
cEz5VtL9r+VwIV3yh7g/CalrQsLM8+XwPy4AF24=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation, T=50\[Mu]K\"", FontSize -> 16, 
        StripOnInput -> False], TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999985824264}}, {{0, 4999.175718266285}, {0., 
        0.9999999985824264}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"w/o RIN\"", "\"w/ 780A RIN\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 0.9]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 0.9]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 0.9], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.5, 0.9], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 0.9], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6000000000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0.5, 0.9]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 0.9]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 0.9], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.5, 0.9], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.33333333333333337`, 0.6000000000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0.5, 0.9]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.5, 0.9]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.5, 0.9], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.820073731822008*^9, 3.8200737552842016`*^9}, 
   3.820073990513077*^9, 3.8200740446723185`*^9, {3.820075416942728*^9, 
   3.8200754408146763`*^9}, 3.8200754958990545`*^9, 3.8200756457991657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "fname", "=", 
   "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_780RINcompare_correct_\
frequency_50_uK.png\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8200755771761417`*^9, 3.8200755783229685`*^9}, {
  3.8200756747579737`*^9, 3.820075675679941*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_groundrydberg_Rabi_oscillation_\
780RINcompare_correct_frequency_50_uK.png\"\>"], "Output",
 CellChangeTimes->{3.820075579746646*^9, 3.8200756768537426`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"solng", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", "solnList"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tpts", " ", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "tmax", ",", 
       RowBox[{"tmax", "/", "200"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RabiPts", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RINsolng", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", "tpts"}], "}"}]}], "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "solng", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RabiData", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"tpts", ",", 
           RowBox[{"RabiPts", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
       RowBox[{"Length", "[", "RabiPts", "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8200743737617083`*^9, 3.820074379319805*^9}, {
  3.8200747853600492`*^9, 3.820074822545491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "fname", "=", 
   "\"\<..\\\\solns\\\\solng_groundrydberg_Rabi_oscillation_780RIN_correct_\
frequency_50_75_100_uK.txt\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", 
   RowBox[{"ToString", "[", 
    RowBox[{"RabiData", "//", "N"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.82007417033937*^9, 3.8200742389336967`*^9}, {
  3.820074388516175*^9, 3.8200743900424166`*^9}, {3.820074466214772*^9, 
  3.8200744665837574`*^9}, {3.8200746774216566`*^9, 3.820074729613006*^9}, {
  3.8200748363352633`*^9, 3.8200748408016005`*^9}}],

Cell[BoxData["\<\"..\\\\solns\\\\solng_groundrydberg_Rabi_oscillation_780RIN_\
correct_frequency_50_75_100_uK.txt\"\>"], "Output",
 CellChangeTimes->{3.8200746824374003`*^9, 3.8200747877256613`*^9, 
  3.8200748437220182`*^9}]
}, Open  ]],

Cell[BoxData["\"\<..\\\\solns\\\\solng_groundrydberg_Rabi_oscillation_correct_\
frequency_50_75_100_uK.txt\>\""], "Input",
 CellChangeTimes->{{3.820074646105668*^9, 3.8200746611685896`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"Import", "[", "fname", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8200743957239985`*^9, 3.82007441552508*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
GeA=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
TGMB+h+THCuT
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxV1ns41GkbB3A5lKKtJpUVOlsqiUTbwXOT2rLJoQO7vEJKVys6SNhWpTTJ
ISIZyXEwxhhz8CqHQhPlkONUTsU4DMMMabfzrvcd8zzvH+/vuuaa6/PH/OZ5
7uf+3r/fCu8A52PKSkpKdfLP9Pf/X++Q/uKT9n9ObQHfSxk9JRMTxHvgwn4+
lAsm0JBX5ivzSmdotvt1cm7EBDo1/C1/csoVwhnflOgWE8iYd38iz+oImOTS
xs+3jaNN01elNxRvo2svdxpHjjF3/Sm9x2Dmz+dnmPBl5PcngP1S/6PNDBmK
tPYcatH3g5zj84qVd0pR7r2nyzlWAZDcJ5x1+8IYEoVqsX8yOQNa1qnUhcmj
6F1e7c+WlWchOe/cLqNMCbKR/3ylQyA89TD03JY8Qv7vPDgsl2oVXB9GHmV7
NZUDLkA4+48Zj06Lyf8Hw4bYenuh8xD6XX57UWwotLRftm77YZCs5yKs35s2
9u1dP0r2p1ytYv8BZx1cLqwvEZH1XQL/zHULGGF96O/8yTZ738uQeLVTVTvp
LbpaVZ+5y+QK2Iyv3Oe0oQfNeZ19esenK6Dtpn7W8UknipddRJsrw0Hn2+2Y
WW6v0feqh78zpl6F8HO7Ez/OfIkydEzerHa4Bl+uSStiXrShH0zVWbpLIsB6
3Uaf8wUtSL7aUK3eCKhIipsXavECTd9+Tt51UJFmH3CxqiP7pQIrhrvQI7wG
yavT/cXiBuT7uR74ResJ2f8NoF6vYfwme4T++kcYLKmNhHMbP5Zutn1I6nET
1Jm7i2Ya8pHyOurizsNRsCldeyr4YCGpTzTYKjXk7KvJQfNdfyx+Lo4GQcUz
moFfOpIr6DE7Bk6u3Ti7YksSqpaXoyQoFrxTfRwpD26hPdMHanULGObex9Of
3UAP9SPGnFTigFbhvsz0JRXbNw7iI+06O7qj8fk3xMGd1zmZmV0JpB/iYdk2
D0s3k1Rc34R4+GK89ZeTj7JJvePBvXd9/YLXTGy321Dwx/QduKQ/b0N7h4dG
aEAJ9qoEoCy5vFvSVo7cbz35YEhNAGdDjSNHxqqwxxLAYMpwtHHHU2yHRLiS
cKrvO+EzJF/tQ31+Isx1ikCCew3YS+5AsMZqw7DoZnxev98B20VTmgGvWsn5
3QHefD3ln5SF2DuTIKnlXxTfXa/IeSZBuCXd6UpCB7bGXbjUWxlypr8LKWIb
cBc0xUVxpWZvsNvvQmDLGt3QqF5kNL1Ai2SgT4VGqH3qw05JBhXE9Kr8oR97
KhkWVxqxDjoOIOfpgnvTwDI6vG/y1CB2LQ2S6WY1utdIPtamwMUj7sy2JDHp
jxQwY/XHNGYPY79PgQ4NNb9Z2SOILl/u68P3IH7OUQ3rWAl22T3QCFvqXXF8
FL1olF/6qSBIC/r8m9kYdngqDDx12XbzT2JxKqgkXteJoEvRR0P5gu3uw7Ou
3k79HTJs9n04sOqvTR/KZGjZdMEpaeDJCvA8u2ocOygN7IoHJ4svjuN+60qD
sKdFroIaYqt0oFI3hul8Is5KBx3tkF8WakyQfsyAIyX3S3arEm/OANVYVR2/
0XHF+vb5ZoCF8mRZWDUxLQMCvefJjkYQN2RA17Bp/SaTcdyv/2TAQbF4aesj
GenfTHi/WpJSZ4n3Y+OVCT7Dp/yCyH5tEjLhc69dkJ+qFPdvTSYMeXgeNnQe
I/2dCQORy5sEkaPYRllQFxsDFWyJYv9b3LIgWOrL1aobwY7JggS9pVeC3wyT
/s+CApnB51yJGHsyCx7FbvFRkQyRPGTD46/BI+Xdg4r6bDiUDVE5ex5Tng9g
U7PBo7xYxCnux3kozQbU78ISZYlIXrLBu8vyk8utPmw9OtieWrrb+t1bdEbe
Dqsc6DBsuc98T3UP9hU6bNdS+2qb1kXyRActMOX5xHZgD9Fh9PaZaJ9br1AK
jUb7fkkO6N3+1ZCWKsTemwMWM64PNT9ow/49B2KDet6VS8i8LMwBm5ZWZlJg
E8lfDqQ+sVNbdKgBCT4Yus9bkAs+7mfOHPR/jr0zF5zTQn6UPq7BPp8LVtt/
jlvgKCD5lJu/GuyNq7E7c6G1qDB9iv8YSeXLVdPIg0V6dUOIXo69Iw8oqmE7
7xqUYgfkwZurtcqLbB/g/GbmgfX3NIs29RKS5zxwZYlWfgr8N5qO11dVBoSX
NqavCSO2YEB70rVDM5eV4DyfYMB/dKMoNI8HJO8M+DBubrXFthS7kQE6Ipm1
+vNyJC939rspBjzzvnfQ/NVj7I35wAigtR8zrSbzIB/2txhQHbYKsBPzQcxy
+NEgqobMh3zYUFu1NXbZc3Rcfok/50NI/cmytJF67LVM2OTANorrfIHngzsT
VtH9fY+EtJD5wYTZ+d2dLvpt2FVM8NdWqx7obkfT7dLznglbIu7MWct8ib26
AB6O+OR/CHtN5ksBSNbz1WsOd2LfKAClqL+/rrDoVuS1tawAam6ZXjBe8QZb
WgDmEU2/SSm92PosiGxRt2Bf6sPzxpEFXedoKaoBIjKPWGCixdGLdu1X5PVZ
MQsGtaYPdABbzAIX7md7rzWD2NqFsPR9s2a/yhCZV4UgTJ5/bu9L4ouF0O08
K2RHsliR10fsQjgW2WQW5TiM3VcI/6QLLobMGMGmsGHbUGsMh4Hz+9CWDRVF
9RH1SELmGxu4fuI44ROJIq98BhtOu9fazzUfxe5iw4mgN27x8vclxXzTLIIs
z1ot1iSxVRGUfdkd2Lx1DPt0EURVC4oD/McUeWVkFcG5DGqXRTSxsAiadKcD
N0bmIwc63td/KPmfdTkwuG9hSXo08WYO7OqqTWf4jSny47CfA7V+dUx1S2Jf
DpwostL/Oo6fB/suc2DFys0y7xRiGgeiRKNKN7YR8zjQlBd7yK5ZosibXQMH
pF9ShnhOxIMcSG8Qrg4WjJB5ywHjuzFNX4yIF3OBeS+qUhY5rMjfLhMurOzN
Ea4ZEGPv4YLiPcyM2IsLQw/kDXcen59NKBdMIWu2FneQzGcuuGnwW5okA4q8
AosLc/MaX1iuJK7hgvL692NUef8o/JYLJykVK2Juisj85sLxv7JFiaV92PN5
UCVN275e2KvI91YjHnh/0hMcRW+xbXhgb3Z28cfiHmw3HkzJX9sMTLvxfA/k
gdqmXM8YfieZ9zxw9vJb8dy6Q5H/zbk80FRJcq/pf4VdyQOnkyZZsuSXeN53
8ODoZduFht5C8jzggZeu+1bx9nbsOXyoa0hx7VvXppgXG1fxSb+1Ym/ng8hr
euC3kOcFH6qVnlApxs3Y/nzQLNzf5Njzgjw/+DChvEZtcVUj+i8jeBf2
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4999.18}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.820074416235081*^9, 3.82007447768079*^9, 
  3.8200746863634357`*^9, 3.820074789223116*^9, 3.820074847849884*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fit - \[Tau]", "Subsubsection",
 CellChangeTimes->{{3.8200615097462463`*^9, 3.8200615121437473`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "FIT", " ", "AND", " ", "PLOT", " ", "DISCRETE", " ", "DATA", " ", "TO", 
    " ", "GET", " ", "DECAY", " ", "TIME"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solng", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", "solnList"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tpts", " ", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "tmax", ",", 
       RowBox[{"tmax", "/", "40"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RabiPts", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"solng", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", "tpts"}], "}"}]}], "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "solng", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RabiData", " ", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"tpts", ",", 
           RowBox[{"RabiPts", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
       RowBox[{"Length", "[", "RabiPts", "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8200597733530064`*^9, 3.820059774828841*^9}, {
  3.820059853703871*^9, 3.8200598564584494`*^9}, {3.820067533402568*^9, 
  3.8200675344148664`*^9}, {3.8200690215163527`*^9, 3.820069021569394*^9}, {
  3.8200690699276233`*^9, 3.82006908652879*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "RabiData", "]"}]], "Input",
 CellChangeTimes->{{3.8200690103232203`*^9, 3.8200690139029803`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjQo+2M/aeDp+nV28AxfHFc9Da99B+fkOu/abvg94
/8re5OiN40z55Q5/4z5GnE1+CpWvd6j4bCVq8OauPaP//d867c0Oq3ibw5dk
XYSqb3c4JuB3Oc5hr3269aXJN8K6HWyv6yxVMJkC1d/vsGvJAjY9kwL755Mf
iTpNnuiQ4sTwhf/sRqh5kx1i13jqPws/ZS/FdeehePVUhxUlVTNj/t2Amj/d
gX/dUUnpv4/s/Rqurn2bNNPh2ouwyJ9/X0Dtm+2QWJ0yfX7zW/vGb+cqD3vN
dRBiUmPUPPceav98h60TjZeU1Ly3jzJ7sshn5gKHnp6brh1z3kDds9DBc9+t
bQ9WPLcv+figw7x3kUNXePOjhOKHUPctdqheYqfxkPmafe+au3lKjUsclP21
Ldb0HIW6d6nDLeZ7LLpqK+yXp98K4S1d5sD8oK/99wZdqPuXO+QZPuR7wLPI
/qDSdasfGSscVj+xuqJ/5BDUPysdtAXnBp60vmJ/6+5lhccxqxwyv3yuWtP8
AOq/1Q48zMu+zrvyzP7LjAts5wLWOLDZlO3KY30D9e9ah61+3SsFrN7b84Wc
fbPDZZ1D8LyZl269gvl/vcPDgqQux99v7aewp74MlNng0MLD9FRv30toeGxw
CJN3PFT5/LG9QmpyjLvYRgeNgNYnb2/dgobPRocz1sc/nms4a7/2UOJ5G4FN
Dnk/gt9tebkVGl6bHGZ/+JxQsbbR3kohwcmIa7PDjuSZH4zFO6Hht9nhcMT2
406TdtgDAEWVRQE=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjQo+2M/aeDp+nV28A69fX4rtvndQfr5D89t2LjOd
1/YmR28cZ8ovd9CSYXjPdPspVL7eoXHFk+klzvftGf3v/9Zpb3YQ/xjf5v71
ElR9u4Np8DZOtryD9unWlybfCOt2aPO/EO38bQFUf79Dz5Ent9ecSLd/PvmR
qNPkiQ7yZ77n3p6yEmreZAdHh+v2ulFH7aW47jwUr57qcG/1V8XU4qtQ86c7
pLAU/173+oG9X8PVtW+TZjr4qmpNnvj1GdS+2Q4JmdvU/Z6/tm/8dq7ysNdc
h6PKXV1L/sL8N99hcUCh+8MD7+2jzJ4s8pm5wEGu09bRVPwd1D0LHSrmWBXN
cX9lX/LxQYd57yIHVobzcppvn0Ddt9hhrWCiyNJdd+1719zNU2pc4nDrUMuk
19yXoO5d6qD/i3/VaaWD9svTb4Xwli5zYM4pbr84eSnU/csdwvp2GohkT7E/
qHTd6kfGCoemOUcqJ93fCPXPSoey+R9mHq45bn/r7mWFxzGrHOZdFlJI+n4V
6r/VDhs3SRcEnHxg/2XGBbZzAWsc6h5ddtPKeAb171qHp8IXdvxiem3PF3L2
zQ6XdQ5L4y0M09+/hfp/vYOm8dTOL8fe2U9hT30ZKLPB4TPrnLPHSt5Cw2OD
w6QE14pIs1f2CqnJMe5iGx00z/3LXd//FBo+Gx3q1ty7XGv6wH7tocTzNgKb
HP6ULVkZ8egqNLw2Odh7rOnw5Dllb6WQ4GTEtdmheuLiRWss90DDb7ND94kl
C6IZN9sDAMBuRBA=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjQo+2M/aeDp+nV28w8eeD7wu595B+fkO1a/2yzqn
v7Y3OXrjOFN+ucNtsaKXYv7PoPL1Dn8ZTlTZeT+wZ/S//1unvdlh/50Gyfnt
V6Dq2x12dP6blVV/xD7d+tLkG2HdDpmcpz/t0loF1d/vIKV4ZuOBg832zyc/
EnWaPNFB9fGaKB3XpVDzJju0L9ZPzlc4ZC/FdeehePVUh5WxCVoTbl6Cmj/d
Qd2n09C48569X8PVtW+TZjqIV1/6VqD3FGrfbAePGXfMVD1e2Td+O1d52Guu
wxPWo+eULr6F2j/fISZANW+j+3v7KLMni3xmLnDI+Vo8n6XmHdQ9Cx02yOiu
Zp/22r7k44MO895FDqKfl5S78D6Hum+xgyD/gvQ9Ux7a9665m6fUuMShzPSC
x6s/16HuXerwWZr7FnveGfvl6bdCeEuXObx03PA2+/UeqPuXO0Q/aJ6w/8p6
+4NK161+ZKxwEHTsvjsldjPUPysdEt3zkxT0DtvfuntZ4XHMKgcHju9HMwou
Qv232sFu4XT+aJ3b9l9mXGA7F7DGYeOTJ6uiVj+C+netQ4aa7J8G6+f2fCFn
3+xwWefQWXhyvfmSV1D/r3dQXHZg6bfiN/ZT2FNfBspscJD56bL4cMUbaHhs
cLCp2XJq+pFX9gqpyTHuYhsdcjJOpuctfw4Nn40OU+eWz5m54LH92kOJ520E
Njn0fb/uEDjlHjS8NjlUP3CeVdd8zd5KIcHJiGuzA/fLXVM7VS5Aw2+zw/xZ
FTErWk/YAwBgUkRH
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4999.175718266285}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8200690143255816`*^9, 3.820069025295438*^9}, {
  3.820069072166334*^9, 3.8200690887688293`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"(", 
    RowBox[{"2", "\[Pi]", " ", "scl"}], ")"}], 
   RowBox[{"\[CapitalOmega]Eff", " ", "20"}]], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8200696778181944`*^9, 3.8200696848735695`*^9}}],

Cell[BoxData["83.31959530443808`"], "Output",
 CellChangeTimes->{{3.8200696751319733`*^9, 3.8200696853530483`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8200698583108745`*^9, 3.820069881162115*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.8200698568543777`*^9, 3.820069878653909*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Clear", "[", "i", "]"}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tpts", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"0", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "-", "1"}], ")"}], " ", "2", "\[Pi]", " ", 
             RowBox[{"scl", " ", "/", "\[CapitalOmega]Eff"}]}]}], ",", " ", 
           RowBox[{"#", " ", "2", "\[Pi]", " ", 
            RowBox[{"scl", " ", "/", "\[CapitalOmega]Eff"}]}], ",", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]", " ", "scl"}], ")"}], 
            RowBox[{"\[CapitalOmega]Eff", " ", "20"}]]}], "]"}], "&"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{"tmax", "/", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"2", "\[Pi]", " ", "scl"}], ")"}], 
           "\[CapitalOmega]Eff"]}], "]"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"DecayData", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"solng", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8200691756639853`*^9, 3.8200692180337844`*^9}, {
  3.8200692538428707`*^9, 3.820069280270079*^9}, {3.8200693112339582`*^9, 
  3.820069329512329*^9}, {3.820069371965833*^9, 3.820069446492095*^9}, {
  3.8200694799234343`*^9, 3.820069612370078*^9}, {3.8200696537245345`*^9, 
  3.8200696592934895`*^9}, {3.8200696964623785`*^9, 3.820069698225417*^9}, {
  3.8200697452584887`*^9, 3.820069846105592*^9}, {3.8200698839448657`*^9, 
  3.8200700059936643`*^9}}],

Cell[BoxData[
 RowBox[{"solng", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "@", 
   RowBox[{"{", 
    RowBox[{"tpts1", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"solng", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", 
        RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "tpts1"}], "}"}]}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8200691756639853`*^9, 3.8200692180337844`*^9}, {
  3.8200692538428707`*^9, 3.820069280270079*^9}, {3.8200693112339582`*^9, 
  3.820069329512329*^9}, {3.820069371965833*^9, 3.820069446492095*^9}, {
  3.8200694799234343`*^9, 3.820069612370078*^9}, {3.8200696537245345`*^9, 
  3.8200696592934895`*^9}, {3.8200696964623785`*^9, 3.820069698225417*^9}, {
  3.8200697452584887`*^9, 3.820069846105592*^9}, {3.8200698839448657`*^9, 
  3.8200698938228936`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo+2Asp3rUvuRLiIHFv9dKajPdQforDREXvfw5r
39rP2ng6fp1dvsOu/abvA96/gsqXOLBqCfjeS3puH5Z5xX8iZ5WDktXaiT7e
j6Hq6x0qPluJGry5a/++5uH2p5ZNDqlF60pFs65C9bc4mD+9knEq4bS9ydEb
x5ny2x2OCfhdjnPYCzWvy8HzL9uJJpZl9hW8F67LL+lxqFy2cJ7wsVKo+f0O
u5YsYNMzKbC/t+px8bw3ExxOTxK9+Pj3Yqh9kxzy9/FtC126257R//5vnfbJ
DrFrPPWfhZ+C2j/FgVM6/r/kpSv2yp9vNe9WnObQNmNyk5TPXah7pjvwrzsq
Kf33kb3r9GvcXntmOCQtZArRloH5d5bDxuCCFXJbX9kDAPtJm+s=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1666.3919060887615`}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8200696598839674`*^9, 3.8200696990089293`*^9, 
  3.820069778448822*^9, 3.8200698869609404`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tpts1", "//", "N"}]], "Input",
 CellChangeTimes->{{3.8200696284353447`*^9, 3.8200696300794945`*^9}, {
  3.820069704095743*^9, 3.820069704464139*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "83.31959530443808`", ",", "166.63919060887616`", ",", 
   "249.95878591331422`", ",", "333.2783812177523`", ",", 
   "416.5979765221904`", ",", "499.91757182662843`", ",", 
   "583.2371671310665`", ",", "666.5567624355047`", ",", "749.8763577399427`",
    ",", "833.1959530443808`", ",", "916.5155483488188`", ",", 
   "999.8351436532569`", ",", "1083.154738957695`", ",", "1166.474334262133`",
    ",", "1249.7939295665713`", ",", "1333.1135248710093`", ",", 
   "1416.4331201754474`", ",", "1499.7527154798854`", ",", 
   "1583.0723107843235`", ",", "1666.3919060887615`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8200694528629584`*^9, {3.8200696162211018`*^9, 3.820069630492095*^9}, 
   3.820069662517841*^9, {3.820069701769123*^9, 3.820069704975439*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Tau]Guesses", "=", 
     RowBox[{"{", 
      RowBox[{"200000", ",", "50000", ",", "40000"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DecayFits", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RabiData", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "//", "N"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"Floor", "[", 
              RowBox[{"tmax", " ", 
               RowBox[{"\[CapitalOmega]Eff", "/", 
                RowBox[{"(", 
                 RowBox[{"2", "\[Pi]", " ", "scl"}], ")"}]}]}], "]"}]}], 
            "]"}], "]"}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "\[Tau]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"\[Tau]", ",", 
             RowBox[{"\[Tau]Guesses", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "}"}], ",", "t", ",", 
          RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}], "&"}], 
       ",", 
       RowBox[{"Length", "[", "RabiData", "]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"leg", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<`` \[Mu]K, \[Tau]=`` \[Mu]s\>\"", ",", 
          RowBox[{
           RowBox[{"TTable", "[", 
            RowBox[{"[", "#", "]"}], "]"}], 
           RowBox[{"(", "1*^6", ")"}]}], ",", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"DecayFits", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", 
             RowBox[{"(", "1*^3", ")"}]}], "//", "N"}], "]"}]}], "]"}], "&"}],
        ",", 
       RowBox[{"Length", "[", "TTable", "]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"leg", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<`` \[Mu]K\>\"", ",", 
          RowBox[{
           RowBox[{"TTable", "[", 
            RowBox[{"[", "#", "]"}], "]"}], 
           RowBox[{"(", "1*^6", ")"}]}]}], "]"}], "&"}], ",", 
       RowBox[{"Length", "[", "TTable", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"solng", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", " ", "leg"}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
       ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Two-photon pulse duration [ns]\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], 
         "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LabelStyle", "\[Rule]", " ", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], "]"}], 
     RowBox[{"(*", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"DecayFits", "//", "Normal"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", " ", "leg"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], "*)"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvemf1yz9sjeOVreuLwHRXOtzV4LoPMXsjSDaO8zw
FIhuMzhxBkRXzX5+BUQbea68BqIf8ZdxGABpkVlTRED0xYsTpED0lPXK0iC6
6A2PKojumTJLA0wL6OiCaGbuejDt1fHTEER33fljAqJXuwVag+g1C5Z4geir
SbH+IHrGwfYwEK0UpZsHomWOBoLpf+ejmUyA9M/u6awg2nXiNm4Q/Yr/BB+I
7pdMEgfRsw8ng+kpa+UngehjkeJTQPSJS5tngOipNjqzQLR9zZqFIDqgy20J
iHZYJ7QCRKuoyYFpAAH8jMA=
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVWnc41f8Xp+mbkiRRykpJoewk54gkhWSEpIlEUgiVEbJnJPPal3Av7lX2
HpkZKTMiM9xPZaTpd39/3ef1vM9+v97nc87zXKHrdy9YrGFhYaGvZWH5/6/5
weWR15W7YExVaXV1lYDHjCXRYP8ViCVuKLD/JCBc0j/LyJ8Njy+K2At/I+Ab
bVOSjCUXPs3omWlfJiBOp2vmuD8v3ha1MPz+jwC1Ly9k1bP34s+17+RSmPrL
J/Ngv6Uw1tntC1ggCGgJ57IQdxbFo3HDnH+/E5A07BQo6S+GJS8fCbb9JsDx
cH+edOwhvP3xu8mdFQI0Hyq/l8+WxNVaYj50ngCOcV23xI9HkF39Vk4pE68E
soYLWEqjyMjw2xhmPGNH6akpDBkkvbHPN1gioK3v5isRZzkU1XiuNzlDwGsP
nqaMVXmcC25wE5wiIGV/08ABf0Vk015Nv82ML7jddf4lpxKu6V0Mw68EPHA8
xHI49jiOPGm5PzFOwNXdH7moQieQszwrSm2EAK3aUNEj2SooSk+MNJlk1kNW
kN+ED9FiYwSHINPfVjZX0biPiO9Sb91xGCbAZ7BLcjBFFesPLS5JfyDgJ1Vc
kd/yJD4e8q58MkiAnZe36mVxNUSt/AMzTPvjhkNaJIYarp1vM3FkypsclDMY
oanjaI8AdbmVgLd/Qi4LOp/C1JLhYtYOAlK1vnnt89fE8GqNhJVqAnbu1Qq2
OHcGxSynD8u/Yeb3LfU5mVMLZRgK0ZdqCGBt+E2a6tFCjeOv7y7TmfnGGGSJ
xZ5FFVK0kE8BAWcni9oPZ+ugGYS0VCYT8AsheJflBYzIdjnx7BEBhdmznMeb
LuDIzPPb6u4E3OWOeX5JXB9XhXtD9nsSIO6uvutxsD6WTdmwqTky85n6Skpg
6KPw5dcGalbM+ENTC/Y6G+KnBIP33XoE+K/oyEO/IUaNGQtn6DL5dP136ZXj
Rig4KtdioE/Av9ZM8Ew0Qq9EnjscZwkoljOoT141wncsLyqUjhOQNrS+V9jf
GLds3apjJ0KAyj9lM5/vxhgzkHtgVJSAPgHH0QkzE5RdbTA242by6cbYbNZR
U5TZ2pb4Yx0BD2cqWaQGL6GP73Tf6QkGXFh2Fj8ueQXniyMvRaUyYH5nXl5C
zBVMGUndt0RmQD2/wy4P1qu4wf99vUIEA66oZCd9srmKa90+HonwYMDzJ7zZ
aXgNZ99yfzW6xABWtqXKg1+uI3H4c3gCBwPexoQ/MRW4gTZ6ruva1zAg4eBh
9SCDG6jdbpVt+WseFM7eaJ6rvIFJ5URF6cQ83AntepcXeRP5rhzbMlM6D/3c
1Gm5E5Y4+Hiqoc98HsgZZ3Is71ui//GjHePq8+AoP3HnRaYlXniYUG6jMQ9b
jfkXVrZZ4SDnPIutxDycig/8WzZphdrpn92Lf85BgZAV18lwa/x+6vvm/qA5
YJn65jJXY40xUwU2RY5zoJP7eCR6wRqHOV9HvbSdg4R7GzVURW9jALG/8IfV
HHyRf5Y7a3Qbd7XQTzddmIN95yo0nu+xwfRbEhzsfHMQ/WD7o+lsW/RePpql
mDMLD1urPoc23MWm3wELos1fIFUpeODO3/vYRtU6f7piGu5H9po07nBAp4Oa
dTIZ06A6J9y/V9IBF8i3nqaETgPnKTtjZw0H7Bnb/4Pbaxo+JZb0dpg7oIgl
5a+ayzTsZZ3qOVrtgGsXRbhsJKch9o1qx5KXI9q/1c6/GTsF4QY/6tzYHqD7
n+a0lCeT4GZ3nRKy3RWj6t/1OvCNwxXBcf8KigemehwsOar+ESSO7v8WPuuF
j+aN7HxPvgOK8Zf+2RUvzG0IuK1+4B1IeFJrNTZ4o6vlP/ZIohskOuSj/gh6
4xqqnOZCIhPfOa1wy8gbd9qoimf96wKJl7fcoMYbNyvJ7X/U0gkSQjn/MaJ9
sKK2qjS9qg0omne/a6b7YEyJa0+oWxtI2MsMphX4oJdNqFr2fiauKss1afPB
iHDlzMqwVpC43KbbwPoUa1+3ZXlbt4BE7PzzBNuneHrq4n8PjzeBxLYjwmdP
+uKR1b92pZvqoVbmR76Vri9uPLX6Z6WiDoyMKsHHzBfTArKgJqwO3OPPXa54
4IvGdaTgrdx18FbUOkYqxxf/BP+438hXC/ZKqRzc3H5oNDSbJnCoGmg3uH8P
Tfjh34z3kb+CSkDDdzDg53c/9Cy97LJjtRgGslJ5eVj8kaX2X/WukmJYwzgi
r7vLH/ds95ZcN1kE+i7a92p0/NFvdPpkrvprWAz2ncoo8kfBTmG1lBN0UHi9
8s4uIACPb1WosR/OgbmMstaXzwNQh8f2xOeLOZD83L1uPCUAX2jcrbtMzgY2
p3V009IArOufGqgIegkDMpzPNGYDULVm5GiTXiY8Ljhwfq92IGoE1vfIS6fB
kZQvp01MAlFA3U9mX1sqTIRTIMoiEOWHY0JcbqVCnKe9Qse9QEzgn+P+MJIC
OvYyUpvcA3FmUneRpJMCAlLAsUwNxF3q87dObE2C2lyjtnbOIBQJMc89FBYD
DxL46tn2BKFTVWv4ncQXcCh4qEztYBBqnZxasJmOhk+PkujuckF4M7BaXtsw
GqJsrueUqAahq0Kp3EzUc7AQtwvMuB+E6csBmaSGZ7Br11GvT+5BeP3LyDq/
xQh4+9+i6+6gIPSIPbZV/GgEeP18fc/oRRB6mkgInCSHg/yMq3VEWhBun32f
vFEoHNiynmq69QThvxph/kS9ICh/oYnFn4LQ99SW7QaigWDvx664MBeE+fVh
8baV/rDP+a2U5M8gNGg9fh2j/aDfMuKA9fpgJDm5Di5U+UK2aOIGQ/lgPH3I
6vCuKC8w33H1X9jJYASXv0fPtj+B7etFllt0gnFI7aVVb40nPB7PmkCrYDRq
WepwyHID7bTC+sMxwbj71WqvJZsz/JvxH7qbEYzp8+qe2R+dgHrk8iKNFoy/
9xWs7/vgAByV6/cdaw9GDqF98Vxj9lC5buD444Fg3Hjd/EZV2V24e5aqXzUV
jJkho0u6BrbQ2WfkfWpNCLoHqebqmluBp8CheP+tIUg6Fa6enWEBRy1Xaa38
IbilbNdlHLsOY7nvWjjEQ9C4vrst98I1eLaQOaanEIJhVFtLp+rLcFLp8a8o
9RBccLHMUVoyhQXP81x9eiE46fuKMyvfCAw4fqqa24agzzfr98rPz8M6w3aT
FNcQDHedfupBnINX8Sn3xn1D8OpnN7/UIQ2wHHMKOBAVgsuN0wHthmrAc1Ar
5XZKCHq8VyZ9I5Sh8e7eEgo1BI9XSCRW6ivAg9ffO7+WheA4N+uLB9+lYP/f
xmmZ5hBM8vdNO5Z/AHrV4lmcP4QgS/rXe+KGu8E/8C5v6ecQjA6UyN0zwQmK
XWpH/n5l+o9d83Tq5IrK9E5eTfzH9K+kZZs6+1Elxnzuijd7KH68IPhE7N4L
Fc2MaudG3lB0Vvy7jstxTOXnbFTYf/tD0UvNavuTrjWQLW2deU4mFP2M5VnF
5LjA1PVEVRgy9UvUqP2sQrCpeltvt3YoxhZqFd9uFoOyDZOMHZdC8XCMtnC5
qzTYapduMLkVin8kK/9r5VME/qjQvQlOoah5IvDKTmGEtoHr8iNeoSgqHJYo
9kENHgsp6AiHh+LBNSfUhglNOHyL3dIiMRRXBYq+LIVow0fqiFtWdijmao0K
f+vWg9Al+vPZolB8LH2Td2OcAago+1MkG0JRUiji7GchY2B4mTXc6w7FExb+
npw3LwGp+cjHwpFQ/OFBY4+4eQV0ONcv/ZgLxcBQdwmHZ9dg1ah/8/Ffodiw
413vlfYbcHX8iXINdxh+PM4uvfP6LeA8ZGSwTjgMB05k+q5ruA0198RtT0uF
oaRIGf9Z+zsgvNod334mDKUu1Qd8eXQPuk9l0jkvhqH9kR+8Hd/ug3fwo1b9
m2Eo525Td+qxI4zz7fvd7x6GJVfvMgRLnCHq6grXnuAwLNB+/df+gSucymwT
vxobhpo3Tx+7Kf0IyLJOppP0MFzvyKezPOUOVrqNJd+nw9D2Hn2xzdsbFG9E
KxkshWGcchzvBgsf8DlO/zjAEo6vtu772VPwFAx1vc2Vt4Qjt1zeXctMP1h+
IHJ1VTQcL43pHvVRDIZhzyDBI4fDcc+qS1lsTAg0Bi58uiodjlw99P0394YB
NepSSoRiOObY/dixY0c4vCDVXatVCUef0OX+16RwUGy8cePpxXBsH47KnzGL
BMHOVpHXl8ORNvDupYx6FLANyIxP3ghHxe+KYl9+RUH//FoLTftwHIlTeBVh
FA0Pd6RbsgeEI327ZuyqfyxU3By3jigNx+5D8w76J5OBbHdOvLY6HHWOVVWG
ZydDqEvhl++N4fierKjnsT4FHnjx54i0h2NUn5aZWkQKmAf72Bi8C8eCpKq9
ZKFUYCncd2fnXDgKl0U8lONOh5NrLewT90RgYZtGu6FsFrxJmXjw0jMC/WS9
/wvqzgelg7qbynwjsPrcs/94ZAsgN784sS04Ai9uPaLnEFEAexWFjw4/i8Dd
3lvuGPUXQHhVUD0RE4HbeF1Uc3fRwPTjUS75ggj8z8h4e8pjOszzulNqRyNw
PJTS4q/9GraH84wPnnyGI15/svsMy8F3p6fzvOYztHr7WOl9ejmskGY2reo8
w9wVyZpptgq4vV+fxGn4DPkVzJb0fStgiFJ+VPjSM3weG+Ih87cCyK3XPW45
PEON9VLGljFVcGxj3q6ltGf4LWVX0Od7NXDF/bQex/pIvLjLd+zh3gY4X1Cy
mMYeiWFvuNmNrzQAjh+KOcYViUkHa4cKSA0gqMU5clMgEre7BK45IdgIYzv6
bcuORSK7Y1SwuNgbsKTc9r9lF4mOhgYH/HWbwXYopKq2l4k3C0wdZbSDq1KP
hHN2FO7W96sqbX8HsXEDByky0Xgu9kuEZtdHOD7ALjb18QUOkb7JZFqMM+fv
DZ/tx18g5xPLo+OPxuHcFRbSry8vMOvOfNv8s3EwH1/czrHyAjv2LdY9rhoH
T8bHVVmuGJQ4NqVxfvsE1K/J7/XSiMGGmMPSPJQJ0Dlk4Lc3LwZFl9ycZZcn
4cMdnZNZr2JwStzdImjDFFzJ1/x7tDwGI4x+fPrBNwX2ciccTjUz7c13EV0n
piAS9l+x/RyDfGOUfJ+AKejTX5Ev3RmLDe/8Px6UmIbrjxMmDT1j8cq6pJQi
zRl4lMH9wc43FnWzpS59NpqBqLfBDX7BscizPkGy1m4GGgTd0ktiYpH/pMGr
f6EzINZw+fqeglgsvXSke/zdDMxvERgeH41F56uMfU4XvoBLUsp7B7U4lHPx
zpdTnIWIJr6G4DNxqFPuUGqqOQvZ3yIKM3Tj0Cg3cV7vyizU7tqUXmkYh9ft
GS2sd2dhUM0rsvdSHFKrKT/3OM2CyvR1veOOcVhn8N2EgzYLF7cNosHDODw6
/quJVjTLnP/0j9zxjENJubFFWuMs+N9oFfD1jcOoC3Qy18dZSAlW25oUHIdL
bUrdcXOzsO7ovvY1GXEYmCxQPS88B3tME8p358ThN0qctu3hOZD35s6VLYhD
/XopdvGj/983guO1i+Iw0aiv85fKHFi9XxdkWRGHbuWvDtAN5qDFdUKz5X0c
Ft3qFVTznoOwWnJ9xIZ4jFRnnWCMzMH+FwfqJbfE49Wy8wrFv+ag3CarrnV7
PNo0x/h1MPedL9zZteuF4jFuOyX+4vZ5ULeiVLsej8cDf+zfmp6ah1/sheXX
7OPRopt7gCtjHiI+yZb/e8C0l/dqd1DZPIi9elUW7xaPRkdvb9pRPg+G5kWl
7wPjUVHmeNTr7nnIzy8tPpMRj2pPt+Z0/5sHS8OawqMD8bilsqTkzAUG/D14
svDtp3gMyytc+HqFAVH/auk2U/EYMJDyTsiSATWZ9bSMxXjcnchqHerKAP5f
b/L5tiagUD/XMYEkBnST3uayqidgUYDJwR/jDLB20M0laSVgzfR/m9mnGcCi
2ZlzXC8BTztKzGgtMUDiW1e2k3kCzrqF9h1Yz9y31d5nzbgk4JU120VdmPvy
Xl6jLF+PBBz9FqFcIETAq7kPmSK+CVg2r7dl5igBY8/7yJcjE/BRBb/qMBBw
YnowvYuSgGtNQV3PlICbaQN9f+kJqD+gO5plSECgef9m8dIE/JLnxBLAPC/g
60Oj6gSs81WriLrN3Md7Pjh6NSag/OW+I0Z3CXCs6VKXGUnAr626uZZeBMQ/
7nS5MpGAoVyk5lw3AmoVOnKDZhPQs4btjIkfAdPf2z8VfUtAfJZtz/2cgK3U
Nu7xHwmY+6OuLzmSgOy4N+NRnInI67Zw40AaAV2Gjbw1PImYIZZRopBCwApn
w7l5/kS0kZtlnKISINBW58knkogHGqs51xQRoOFXW3jqYCL2h/GU7S0gYNSh
wmdZNREjeCVEsysIYJMqLxbWTERP58IVvWoCJL+UzunoJKJ+PGPNzrcEGGaU
CD4ySMTQKwfkrnUS8PhqsUGmaSKOJqz/Md1EAK82fZ+xQyJqnqliX+wmANho
xj6uiWj8VOuY1QABlnX5wfkeieh2NiO3ZoKAYPe86qGniVjdHUHtGiWAfoy6
yBaciL3zui2DgwQMLOaKyT1LxA9Y9hmY8iz5OWbXYhLxvfSVHwYMAg7YZIeH
kBLRy8z04ugUATr7X9aXpCfiVPrJbvJnApxGM1cmshORq8auyY4pn5BAPsxV
kIi3XSztChcJqLuYcVWlKBH/lGkMmc0R8IUrPep2RSLKUT9f1vtCwLa3qU3R
dYm455GmaPsSAYoBKX9qmxPxkqZb7NQKAebqyUeIjkQsZ+d0ukUQ8HSVdHP3
h0QUHG51aWfi3NLEmNNDiejDe/+iwm8Cup0S2hzGElHVQJSPhYl/HolnSZ5O
xGAHiaP7vhEgOBcr28ZIxHpT8U3rmPGdzoy5tbKYiPCwKijsHwF2118k7PvN
9F93/BQvU//5nujO86wkVN7D4/qSqV/eF7XObSMJTRxO+H9YJuBzZKTiyy0k
bLi95WfVKgGbdJ/Zvt9OQsZfUQm9nwQc2RSRzLqLhJJxZYL/MfUvNoT1SAiS
MG4+GISY+bl7hrKZ7ifhfM+wWznTf/rxEGXfwySsSLy7tZNZj9blIHuaNAnz
JdP3ajHz/V4QmD6sSEJrf50tlT8IeMH7bDoUSBhSvilBhGlf2SP2MGiQ8LD8
mPBtpv3RiWR74hwJW4nXNzOZ9fc9l1WYpE9CsXOB4XVM/UP0vBVdUxKSAhIG
C6YJ6OQrUma5RsJ048whV6Z/R89Kz3wrEkbx7JF+xOQH31RD/VU7Eqqb2M7e
Zfqr1G5n2+ZEwhPR857rmHy4XthzruYRCU+xdfPUzBKwcfdQ+D0vEio0/I7f
yeRf7pPPPUIBzPzeHrMqHydAb/oLb3cYCZseysecHyFgWee7mVc0Cf/sXar+
MEQA8rNOjKWRkLUwxjO6h4AJL7aDkdkkFOwRypRg8j1wZusdtQIS7qYkb33c
RsC713uX0ipJOG0x4TFbT4DLnv3HDBpI+M0++97HDgL4fSTc1rUx681CFtpd
yXwvesrrLfpJKOv+VWBTMQHsxWpndnwiIblnzK6NeZ6/92xIwyQJR0/WlnnS
CPg1a7Jj/yIJ12w35NtFISDpwjWTD79ImG1gyZ2URYB6ya1EX9YkzJGAr4aZ
zH4jYD8qz5aEpMXHUY0JBIT4OotOcSThxnz6urxkAqTn3a1f7EhCj5c7N/JF
EPBB35dymj8JZ57es6fFEPCoNOTbD+EkXL43NLTylMlfoedyWQeTsFeai749
jIAGvwRX4yNJyPsj2DHuEQG3GWkVbApJaN4tv63Um4DCMtopa/UkVOD3Ga1/
QICJcGkA39kkFOfotx+9RcA//5r2Zr0kPNo3tcmXiU8bdRqKX0lCvxKPEgcT
Zn/4Om8x65qEe5zqrMaVCPC4uPQy3jMJOd65XahEAvZV/pk/65eEF1xYj2sc
Zr6fIPYHuVFJ2NK7N8JmLwGs+w/63slLwixVdbPidQSQg4+07HmdhDuLtQ5Z
rSFAa0GB4215Eq5pK+aBFeb3rFojWrIlCac+b1C/OcuAYwd0BoY7k5Dd9LPm
5o8MGA4x3BvWm4RPkwv/pjOx96LZdRhOwkVSks39FgaIXbpJJsaZ9aHY8j57
y4CLcKfCczYJG49VcyeUMMBX5EHPtu9J6O2oyqNSzoDxWb81sqtJqPRG90dx
FgPOVxpKlW9ORs2BZX9vDwaw67oGsRxIxvtbr8U9kWSAcM1fnjPiyegR5fdV
5CgDlGS8UiMkkjGqjlSTtJsBt3YGlQjLJuMiQRXb9R8DGkcSptRVk/Fv9KFz
rZ/nYVhPyCFEPRlVTgUJar2bh6W6jH/vTyfjrF7w6rHOediXRd1hpZOMnCMF
3c+Y84KXfbVawKVklN/1wEwidB7ixtQ7usyTUS/y0luK0zwUGDSb7rqejM+a
masdE39S7L6XcysZy/4c2XLj0jyosI4ntTsl4/y/Jq0Dosz5JGLjn23hyaik
rV1SXDIHXOuC/Uwjk7GLn19InYkPPuDcnhadjIeq4raoJ8+BsSmfuGxiMt59
b39fxW8OXgsfMjbKTkaD//i+qhrOwT26TmFcfTLudlrSLJ6ahU5eroHsN8nI
G7NV2ub9LBxxf79a2pKMyVPjoZeqZiH8c4xoa3syTuzsEE8rnAVC0+zsYGcy
rtnBvd4lbxbuDFuP7f6YjMV26T2XmfOk9X9POROXklHAqWur+58vcO1KmW3S
/hTsueIskrQ6A3rsYqLp/inIfciu+QqDOV83EheWg1LQUG4sp7dzCkKfFHlq
hqWgXo3MJ5U3U9D2Q2No7nkKavn6Gb9LmgKNcYtIubQU9P8ovnrg/BQoVaSx
vqlIwY7I9/F9lEkQviswPPM9BW/XNd1TuzoB37t5XkhdTsVHtq8UzOljEG1b
G5MikoaF9aOO+3cMgltR4i+JyTRMp5bFJ7t1wa2HB2UfzqSh+znTcMWzXXDh
xKs7jXNp+PxoiLaIZBeI1bV9Ml9Iw19Jbz7PDXdC99vfjWEs6Xih61lgpGon
7J80ify2Kx0Vvo0uM/jeQic3z+FXuunYc6On+mlwM5T2pliw6qejTtkWub/G
zZARJ5GkbZSOtbrhRDdrMzwUPMU1aZaOMzpfaoNdmkD0sOMKz+103NHlV/3T
+g08VOuud/FJR7X6hydDTBtg3/3Qy8ol6VilW6affasGjMRMjp4vT0dnw0UZ
TqkaCBgWWX+zKh3jGOvY5KeroTyK0edcm452Zc9/itGqgaFVkhvUwPT36T+y
S0A1lIiM/x7oSsdib/a7BuZVoPP+WJzrl3TscKTri2wvhydB6+xC5tPRI59S
xE4ug0LVDtWUr+n4WatOV3l/GUz+iN3xaiEddTV5H69vKgU+6s2ZpmWm/65G
ganHpTDuG6bIuzYD93M7OAl9KwZXxYkPr3dnoOvRdG3Sz1eQy8jLbtmbgTTp
Lbdtol7BcPpD92GhDPwbavkvRuQVbLt06sL3fRk4JrF7sK27ENS3ce7fIJaB
KyHcVkdCC4Hji5KToWwGRt5UkOiToEN6fPj2xXMZSFe1Tv8dmg9v/x0/f9Q9
A3fGrbDmFGdC9Sb2w35PMpD3t3lF5ncy0HgGNn70ycA/Jqq5dmFkeC7pUuUf
lIGXux4oKNtkgJl5oeSnmAx8ePJ1+1uZNNC57b1JPiEDs+4/nXqSmArw4MJk
UFIGjv+5vrtJKBWEQ78mKpAzUCN+5MOOnSkwU3F4Sxg9A7sOTsbzyJJgoPn3
9PjrDIzpWthS5Z4Ibe9b6pVKM9DSiCddWi8B8udvPZ6szkBWTrVtdp5x8GBP
xuyJtxl4L7x/9cyOF7DObU/L3HQGiq7R0H/+XwQs+89lnJzLQGmp/Y4m2uEw
FVX2JIbIwIEvEXrnjcOgJdfkmPpyBm61omrYFwdDxNDzrPi1ZCRttiq0aPQD
r+mbPt82kHEq6t50kpIvOC7KXD29iYypdfyKAw5PwXhz984FTjI27XK19Tru
DXuVOfy09pJx19eE6RIld+DU/Hg9WYiMdnL/OE+uewxrDHJVlveR8X6d+uoe
x4cwYaO1nHKIaf+EwKmLsw/ggzNf9w9JMpqbp9a4aTlBk/c0RVuajLML2Vvo
qQ6QG+9r8VORjEH2YWq/4+2BlGmoqqtMxshOotxywQ7C6Pv2ZAAZCWpGcUq+
Ddxvre05r0HGFfYt0gr5lnCzNyKffIaMd3Ybc/7mtgCjz1eD/5wjo/fVRQFB
+etw7Pc/tSx9Mm4SEV448MQMvjboBDCMyJhhsXnvI15TIIeT3sqakvG4nthX
kXxDuHyJsf3RZTIu3WaPCXbXB+79KiY1V8n4OKpQX7lLF1q+hpA23iSjYfj3
OlH/s/Ck7ONnbSsy/nne2rj9sAYo+kocjLpNRk7XfBmn36rAOO9mN3CHjPpK
lZ5TL5QhY3c7XfAeGa3Zo9bgrCyYTfL/tHQko5Cqe2OawhHgKrBVoTiTsbbe
bGzDxn3Q/Kjce+EhGQeip690fuQHT43Nzcfcyei25l8e69X/QH6bGYfnEzJy
zH1aYOn4rTI/mKPf6EPGoV3S1nuvN6ukk3/HbPYno9ca+rrFwIcql+6dHb4Q
RMYDK3tF5XJmVbiU40ViQ8noJ68wWdHPCk0bZm+NRJDx+5Eu2SNrucGjS4kq
+pyM18RtD4RuEgL5hMAFmxhm/BbWN1UOHIQ5ywFFWjwZpYqfvVJ4Lw1pR8Xd
V0hkLJK52nSLrgCmf1zrVFLJeO6LE8+cG8K2N81sTzPIeCYgMfCLtho0RfDp
tGYx76/PLvix6RlwN7OO3JZLRv5jM9+Hms6B3IGSvot5zHqwsy2tEnow941t
L4nGlHfrylOSNoDUcuMb46/IGJ2tLWX67yJwXliZty8nY2v11+W9g+bwhl9T
pqiKjO95uC3EPK6B+9QLl7+1ZORKeN7boXUDZh8rrA1sJmPM7oZCoTQrSD3t
p9nZRsbnkz0PX7feBmOu3hCeTjLuzuYV6Pa2hcbMB7xpH8jYCyd5fX/bg9v9
xssz/WSsEjjqeKnjPsie4EmT+sis34TLIQ4WR0jpfiVR/pmMBSzD3q/OOcPj
v4sn338l49vzJaqVSe4g06Tuv3uRjB8qHWZv/PaAL8+i2q/9IONXXoewi2ee
wEUxWWPGXzL+vdE5sdPIG6T1He5sZM9Ew9rzbkez/GB6Tx1NmyMT35zJybr/
zh+SprlWIrdl4idhqU8nFgNgszvNS5A3E4dNzNoSrwTDVNa3F8dEM/GQ+4Vx
yQ/hMGnp6XxaLBNvrujRbUIjYHzf1ouGhzJx238avRZXn8HnsUT5G5KZGP9U
rnPpv0gYSz7Mc+9oJp5WMVJ1eRYJwzFWUVknMlE7KGZ7ZEA09Ph/DN9plIl7
LrdE/NiWCO80bO1FTTKxe/Ea+0RZInSv+60rY5aJC2qu7/uekKCzNkBK9Uom
fjc780wsJAk6PHm36l7PxNTUB55xWsnQ4qIf4muXiSZqMLC0JxWqbzUHLPlm
4pPoSluXPxlQtd/Yem1gJvosyW7QSSRD5fik5raQTLwvMS+5wJsJZVfXsUlE
ZqK0pZLiBo4seG0MvjeTMlGyksaxVTkbcjVfeb0rykTXbW/IM8tUiBFLeVQw
nYn5lN8nvd8WgpGy7A3WuUx8F7SBk2XrK+A+/0ZLj8jE/YEi1yciXkGY8zzf
t6VMHOBz3+li/Bp8G48VH1mbhWo1Zy/uJIrA8Wb3Yt6eLLQSf6USrloGeslr
7agXsjA9ue/gkFINcBRGG/4zzMI3Fdxj767XQNubgyd0TLKwt0HL9llhDWgS
upsZV7Lwm2V2a45ULaBKQrbEnSxMOlco+PNgHUgOyU7l+mWho9TRHVGSDbCJ
1/JqTnkWHnHbfdTUsRk4BRTHaquycNhtkXc+txl49m+6OVCbhVc2v931dqQZ
+CWGJr41ZCF/vniriVQLCMlSrf5rzkIB5dj7oh4toHh+2c7qfRbemOpc8yyo
Faz8fd1EGFloXG5P+vGyHepXyHHxAi9x7eLaF/ZsXeDRP9UT5PUSzd+pke/0
vgf5c7EvfdWz8eqsxvmS9hGgSl71WLszB1+fy7pnpjYBnieWN+/YlYPLEfOf
bxlNwIVzwXH79+RgiLiGd8O9Cdh3SVhMUTAH48RuvhHxnYBl6+JXZ0RysPi7
207riAlQyeCcC5PKwYJRKav1IxPQvrvGmF8zB/cGppIzXCZhjk1YWs41B8VX
asTvpE1B5c7iKo3HOWirJpz8LXcKwvfraBt75CBrgvmsaOUUXJcbH7D2Ytor
uZft1jcFsuoPbz16moNsnkpp87NT8Mijm1QTkYO69X7fbGSmYdOyF7tOdg7y
9hXwS1RNw8HPn8ctB3PwnP7gn3dNM1B62v1h6TAzfvbaJbauGdDK5eXkGGPG
X2HNkTU3A7ZO2sdfTedg/syxq2s4v0D+xqKItcs5aHxJZ+aI4RdQPByoksyZ
i1nu8Eui/wucdjoS038qF+NTRzn2tM5CX3+LhMSZXOx4+aF2cnQWbqlY1Hme
y8Wx7+zRM8z5P3BjHOOAfi4m/1HAJ+vm4G3s2lMPrubiGRUau/iJOTCq/PCN
61Eu7vExep6VOwdTwvf8LN1z0d9edG15wxy4+LHvKX2Si+tDD4oLNM1B3HnU
vOafizd3PjK/9nkOhsdekvKe52KrZrvHfr55sNjodvZcfi5O0o99CPBk7jtX
jB5Z0XMRJ5qrE5n7Ek+RVI7X61zs1Vkr8oeJCY7/BhNLclFWY9VvZ/w8NFmO
bSopz8VLimahG/Pn4XDj6RbR5ly0f5nyWHxgHtbvFfqFbbm4oec+334mHnb6
ddCsgxl/v3xZP3OfK2p/Z+LcnYu3g5rT4lfmIVyUEvDsfS4KlR/rYlmdh0Uf
rjOro7loMvB08LsgA9qHZl12TeSiga6x+HExBpBlG7LkpnNxy6XeRk9lBngE
k/rOz+ZilcKG44tqDDAed2azZeTi1LTF4hkmLlf7+KbvVy7+uXs3/9AtBjyP
f/1j4W8u5qwW7ct4xAC7hbADW1kpGB29N07OhwGnz1pfFF9HQVGzJjcdLwYI
pp30O7WRgn5yvrdPhTHAZ02WBm07BRdtxVJ+vmLAZdMnD9p5KMgWtFHgZRUD
5Gmm5Gk+Cv5u/zvbxtyXt26S/bB2DwVZlHurLN8wYPralg0CghS8vLdGYKmP
ATUlk3JKIhQclVtc2jjAgLht1RaG+yk4s1ba/BETO1jHPrc/SEHVbMfUe8z9
/lzN/Yagw0z/envOyS0zQJTv3BJZioKbsnv8qd8Z8M9eVLRWmoKf5T7rdf9i
QG/TP4OPchSUeRq8cGUzAfmCfT4rihQ8nPL78UkOArg9T6hbnKLghsSllSER
AuZ7eRw9NSk4GHKw2/0gAY1SX9Piz1KQUaiRX6VEQJJf87vXOhQ0DUgJiT5B
gMtI6tpuPQom/zXaoMM8H1Jhq1Mxp6DXs6HqG/oEvIoe/W5yjYKGphKlbDcJ
CGWUCjvdpGD1Dp7JOSsCrDSiLoRbUfDqxqVu4RsEIOmOV85tCnJwVLrr2xHA
t6xBa7xDQZErXZuiHxHwXVtwbNSeKX9j9UKzMwGtGT+3/XWgYNU9AS1XFwLS
/3ar8jpTsNC74LK0PwEnuSUGRR5SUG990sJwKAGfxP0cpdwoGHqEu9s0iAB3
1dEtxz0puKrjcb8skAB+4+OZGt4UTLW2c9J7TkCp3XO84EvBuN77166nEGD8
lOi/HEDB2LphOUoqAcvxZxysgykYufEA789EAqJoaZudwpj3yWoj5cyUl27+
m+H5jIK5q9eX+akEdI5chODnFPw3qVq66zUBdssFfS9iKPjKsnrLBI2AzVs2
30+Lp6CDh1luZh4B2SKW7HkkJr9GQdyhiABNper00hQKHlT9+TuyjoDJ87tU
GtMp+KRQPupkIwE+Vo69XZkUDFqtpSdXEyDs/tb+YzYFzV0KreaYuDpKbNMM
hYJdWaelG1sJMM/xSlvMp2AOq3hMew8Bf2qGlFkKmfXm23P3ajcBcX3yH9iL
KKjsbfH7VxsBikT43Z2lFBzhe51I7SLgw/pZNpEKCtJ+yHCe/kiAI/+pVMlq
Jh8Olxy3HCWASybpuFIdk7+atgb3Bpn8O/Oz51Qj830Z03tL+gjQuapvp9dM
QQHn7EsnmPJzDygbL7dRUL4lKXH8CwGBIRtTbnVQ0Cq973fCDAFi6deUHLsp
qB42HpMwxuRnadk7j/cUvBSw5RjXOAE3u3bcCeqjIKvRiwfeDALWTN/d8GKQ
+Z44X40uLxCQ/K85KXWYef8odB6Z5yo79h2jjlLw3kbumYFpJn8PuXeXjDPf
0y6fOy+Y5w9P9tk0TFFQrmi1yWSFAF4T6fVdXyj40sl81p6JX98NJg3NM/ln
f2Tp7lcCDHwnFaa/MvljeOt8DlP/ewJ2LSxQsFWCdf2lHwSE0+Nury5TsCi6
eMPIXwIkWxbXsv9iYpaue+NMe22fdBJ5/jLfz76sRxrfCLj9I0temIWK5d7f
a+aY8bNxrO2UWEvFF+cuUWWY+uR9l62PbaDiW0McK/1HgPrxojWn/qNiKMul
9Ub//7+u3raE85upuO9MwiMfpj3PWzZyZlupmKMxlzrFjGevR8NbKy4qKnL4
je9YJaD8ucAthx1UvNL847zibwJMc11ZPXipqHw7aYXB1F+pfRcXuJuKQUrB
7UZMHN0vIRu9l4qnJc75+PwkQParX3uKEBVXn2wYuvGHgO4NY5aUfVSse7mJ
TWqRAPs9yiwlB6gYMvGfTfocARyy0bH14lRsNq3bdoZZv1ytr9KdElTcrPP1
dRIzPq1rWm2DR6hYm+abw79EwLRzusWUDBULeKxZ6pj88A399++7PBW57vZs
ZkwSIJphHPPvGBXvxakn3ZonwGtb0bFzJ5j2N0rabGDy55PbjsFYpGJHz7/t
ncz7jjPq3iN3moqcMZcDyj4T8KP2SJWXFhOvXPS0YPLLQCrsaqc2s15yj0iS
w8x42c6l2RhQ0dTP/tthJn9tHLPVSy5S0SDazONdPwFNn9gmN1yiIkVs87ZS
5vvwKmkQS71Gxf5hnrv9Lcx+cRuofXZU/Okf2jFYRoB+b6Lu/vtUtBL67OVc
y3wfan++OjhRsfP89sJ6OvP++Utktj6m4gfjd0/P5hAw3C5dciqAik467wyP
xzL5f2R/PS2Niryfwiaa7AkQSfSxYMmkYtYxOxkWV+Z9//d5g042FQP64/qb
LAhQGks6M5NPxWs3DsrcMSWAGsnXIVBJxZ1+IpmkkwSws7jY36mhouibUWuK
BgG3bD9sK6unYllfWYqYPLOfnIo0MGqlonuT0rvzzO9D9PLmgeA+Kl6vkb56
n/k9Wbhu82hgkIoCPg+metkJON/RzC82QkXuk7POliwEbMryvVI3QcVAsYMX
Gd8Y4G7CMvHzOxUTtfamUt4xwKp8gbDckoda+zi1YyMYsJk/4tBjzjzs37nt
rLgHA2iPJK0itudhGkt/NOHCgIuDralknjzssgvwHXFlwB8l6+EyvjzcWvQ5
rfYOA8JLhts49+dh486REX1NBhS/bn5ZqpKH0pVhP6eZ88emgqQbHPZ56PPh
ar73mXnI4zyRJOKQh9mpfQt8MA8G9gMDig/yMEPJJt/gxDz87HDm0XHNw4KV
WbFWqXkgSe24cONxHkYfPc8esGsepKmBWOyfh/u2LTtbfJmDSzlOe66nMOPX
9apo8J2D3Iyzva+689D364h0Nm0WOC/N79ryIQ/dLPWVf+TMgiNnmPnN/jy8
PJi3/nD0LCg/6p7g+pSHclc9FvJdZ6H9vMni3fk8NOHLPGkHs/DDjc62Y10+
Sv8oK8+o/AK8B2tEO/bm47elbR+Gk2fAxGPoippBPtrE+jieVp8Cu5I78lOG
+Xjt2ZVdZcpT4LXwb3PQxXyUGdveIbxnCnKthEq7TfOxdcg9d2R5Ev7pWnJf
v5aPfAPvyBtyJyFV8GuTp10+vvgQLn572yTM1qyVrvTPR9/nvqzS5ePgtu7Q
umMV+cg52HDkGNcYpH2/+FVIoACFuku05373g3LXppgWwQL87TLK6fC2H3ry
KsBBuAA1Ygeyj6f3w7o7ImH1ogW4xUFQq+JcP9ycYkhYHS5Asx9uoTdJfbBv
6KlN7rECTDuRrEdS7wVyA31S3qAAv+4d7nRO6oGXMVs/ng0oQEZTXWm3WgdM
fh3V6wsswB7zo5IC2zpA+Exh483gAqzpUXrR2/YWzFN8j38LKUCpq45je+69
hbifxvluYQWYwB99ZFLiLQSapnrnPS/Ajelho5F72sGGX058e2oBdt8n7s+s
awWJZFPngdIC5BNlG7g/1Ai3Vw7PWZYXYNDgt6pTzxuBfH716kJFAfpimYup
VSOMZXW996gqQPeVpjabQ42wlzVda3NNAcLzrReZNQOO6/N7VN4U4JMZIoxl
tB4IEc/6lHcFzP5j/rNnXR0UZGZss54rwOuNLpYhO6vg/BXFsvn5AlyTdeaM
V2IlMHhab94nCnA229NNQ6ASQt5e5vjxtQAP8P8+vFBWAYd9vxY9+l6Ahk52
Lv42FUC+edw8dKUAhSNu6OyrKoMEoa5s+joatr7fWDiYVQxK/TcMFDfQMHWc
spZ8shj6w5f/lm+koQ/8x/l4qQh4WPj1GjfR0ODWjjdpUAQRw5Y/+jhp2O/6
40t63yvwjf+j9o+fhjoGwWqGrHTYpx8277WXhsuf/ji1V9KgbpPwi42CNNQV
KKoqsaHB9dpCDBaiIatQgNyrDTRgeXj6C6cIDUM2RcmVvSyAR8bPwkUO0nBE
vwfP2uaD/Q6xj5pyNNQWWz/5STYXONpLfdvladi5Paf+QXAOUHy0j1xQpGHH
c0md/o/ZcE75U/+HY8x4fnQ+0dDPhi8L970vHaehepBCyo3PL8Giu+KgnSoN
NzxiWWhNyATTMP0Hkdo0LNxCF/b2S4O+e9Mix3RpSJn9T+IqTxoYGbh1DZ+n
4Q6SokzYk1S4wJd5WNyAhhajqnkNXilwNu3XWLUpDZ/u4uEQl0mClqdh4ZZm
NCSGWhaDBUigeWufymZzGuobuH+zvpwI6hI6sRev0TBRsF5XPCoelItSdBlW
NPzvJY9q5P4YKI2V/xtpzTzXjFMp5ngBio9bs4/Z0PD8k3RxTa9okFVdWv/U
joZSFRWqkV+iQKJVs3y3Ew1va70Dg7EIyKV8tK55QMPLPztaJ9ZGgHj4/Z1W
LjT8ufupCeV+OOw3TLhPe0TDrFa+KrJwKOwdIcTOeNHw4SuOzLFlf0io8fnA
8KbhyWup8lKDfrArnc8n6ikNG3I2zHqG+QKPtdrIiD8Nt8w3O/877QNRZ/uC
nwbSkDvnzMbFO97AJXlH6VAwDb3sM/waBb1g60L08wdhTHlRl5Ktuzwh9P0h
Nf4IGg7o8zXxDrrD5uLqrzXPaGhcSS0rsXoMbG5fzm6JpuFNvvB3rEMuwLJR
ZU16AvN+KDXvXnvfB/eZ7rwzJKZ+MvWJyP178KfV6jKRRENzbmXe67fvws/w
iGKlNBo2UtNGTp++DS4O+y0/pdNwzc8Y3zTZW7BsWLbdl0xDK8GO1vUJFvB9
14Rd10saCl074dFoeQ3s/7ryO+fQUJ7r1Oi6YXNgjHC08FNouDs7WErp3CWw
rU1zrqXSsGSfemNN+EX4kq4oeiufhuk7FW4AzQBu+bV3b6HR0KRzpY1dVQ8m
ra970uk0pOYqy/b91YbPksGD/17TcEz3/GlbC3XYEIRG/sU0XNt5gvsXAohN
LXZuK6Vh/McDMRGqiqCl9vJsfBkN583T01qoMmCbdLlxXwUz/9VNmvEyEhD6
e5sqtZKZj7uF75K+MORfbCxTqKahxqYuD+E9PNBNfyhfU0PD8Qw3uPKaHRa3
ShVo1dHwx4enQzw3fqrw2H4+1FNPw8C0bf0GHB0qik0vyJcbaRjj23ljjDdb
xXTfOaGpNzTskROL7jH8pOLmyZJg30zDu2XaoX9E/qgkDxXy/Gph5t9ws7Jy
eRvUKlpHeLfRsK3etn6HlgCMR+3ZvOUtjfk9GfucTRaFDd+6fKM7aLiH2BBS
f0ISxLR9WQW7aKimSOp4PSUHWi+VHr/spqFIr8rahffKYLueWJbuYfafi4cq
+WRVIfRa2r3y9zTU4urd0PteHfIrLs6d6qXhKRXRD4vKWtDNt9mqo4+GCgvT
0zyBurDoVD1qPMD0f66L512HHuzsdjQbG6ThJjU70RITA1CSPNhr85GGfP/1
iUlsNgazwI96S8PM/sD7/Yp46iVwn4xoc//E7Jcb3uSfMzSH5JMap9nGmPm1
7+CjNl+FWtKvmojPNDyqfkRqSvAGjP+iKu+eoOGzjnZXqoUFbLh4oyh9koaD
weESKdxWIEbfKS05TcN/azzLzditQWtrW27RDA05Vy/Lfhm2AVsbzwOqs8z+
wd4gYpVkB6FvZFNb5mj4weW8gv8FeygQmeE3YDD9m+vsi3G5Bz0eiS8+Esz4
XNuHYwQcYHlQj8vqGw1fiV53jqp0BF7FDSFfv9PQ9b9safd5J1CKKt34cJGG
orJPK4VPOIPZVzuvtcs0BPWG+/qCruB+TuRv8A8mH7f1Fvf9ewjJWb3OPD+Z
/dlsoCLJ9DHUrgv+nvSLyUcZwe7Gbjc463T5YwMLHclbXvc6JHiBXdc2Y901
dJzbim8fN3lDuERjd99aOmbnf9+kveIDtICH2tfX01FZYZTVoOcp9ExINs1u
oKN7iE6cdZEvmBmx0LdtoeOabRPpn44FgZ1Cmv9lPjp6mD31bSx5xuw/ho3c
u+nonOmsnlYcCRVxG9e18dNRzLH4uaBVFGz+Z+OhJEjHwNsm/QzJaCiU2lvx
TYiONj13TyS3RMOla52/skTo6Og3qrqr/gVk18s+2HmA6e/gq7OEeSxM6DXe
6JKl44XonfvRIxmCvV1S/OXpmFLblsC7PwVkX4mPgCIdiwy146/EpYAXb5gp
9TgdD6eE+1RUp4LgyEW9oJN0DHXozzvdkg5mtjMqp87T8e/D2CiT0JewjhT/
+I8eHUN+Sz39aJoNOR3apXR9OiY/flBlM5cNv6RpcsIX6fhi9GC2woVcePHz
4eHVy8x4XS3b1jRTodt3864SG6Z+hlBW83EaPCyuvGh/h44nll7rddFpIPTF
/vmBu3TkMnNKRnY62Gu/54y+T8es16yOXEN04OAmbXRwpePdxcb4sLOv4PWp
86fEH9Hx8gOu1PVtr+Cy8xrv0cd0lNtgt75W/DXkDlj+0/Vk1jOyoLDpvyLQ
38ynvNGLjgsCVRLsxkXw60Sra6U3HeOdO+3FW4og9a5bkdNTOo6ZCR6jnSqG
MylSS4f96Lh5ba4cPiuG/wHQoEx4
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVV3dczd8bTyFCKoS+aUulpKmB5zEiSaRFVrSHFBo0Je29tW77Nu+tbntp
S4kKLWmnee8lCUn97u+vz+t5Pc857/fzPu9zzucI3ntw1ZSZiYnpIQsT0/+/
t8WXR8rqeEAy+vj6+jodXGk/Dwb5/YZy3YxPQn/oEHbEL1vfbwsOicY+0PtO
h+/FbAQ5My60Z9ZepS/TIV6re1bVbx9qceSe/7dGhzNzsfJnc/lQMOArfxNj
/PJpMoiaCaFe6vODKt/o0B7GZSrhdBAd6J+UT/6gA2HYIeCInxi2vJqY+fWX
Do8lB8iyLw9j1emiJNJvOqg/Pf5JMfcIUi/yt61S6cA+edkt6ctRbHmerCxN
o8PvgA1h/GayeFC3UvEvg8+4DCUtlSaHnn1fQtt/0uFtv0mpsJMC7jU7LRg6
R4cyD+62zHVFtBF//Gxomg6pom2Dh/yUcPvRPo39DH5BnU+oORwqGP9vkxMT
o1/Hx4eZJF+qov4N561fpuhg9N8XLpLgCbwZazNiOEoHjcaQg0dzTyLbJG3U
kjFfvLwA7/X9iFd+bA4CBt7OLU8Oxn9BNPTmqO4coYP35+4jn1NP4RvZlQOV
fXT4Q5JQ4jU7jerc5/u2fKGDrdfzU7ckziBf+c9BtzE6TOoNaSTTzuDyHRsH
tX46XBdX0B0pPouxfHt41zvp8G41+JaAkxrOXthht7ubDmka371E/NSxhmnf
/bwmOuzl0wgy1byAuxzP7Vl+w+jve1p0FocGdu3aKWnQTIcNLX+Tpz9qIOdD
XbYT5Yx+43SzxV5exHhrvkPzJXS4+LW8UzJXC8vXquuoGXRYQQjiMbuKnCMa
dQHP6FCSO8+h2nYVU2e/vrvuTYcHu+Oib0jooJxO+B5bHzpIuJ/lcQ3SQS2h
Qru5p4x+pr8lJ9J0MGdPcvlxWwb/kLQiPic9VF6Uthm5Tge/31qKMKCHGp+H
N40aMPx072/VHVV97GEhuNfdoMNaBxE8k/SR/75CYL8OHSoUdJtT1vWRelo2
0uYsHdKHNvUJ+V3DMxIlUn1SdDi5dvym9+I1/OP19Yb9UTr08z8em7p5HQkT
BzY68zP8ZDw+ny1jiFLf7PvaOejwdLaOSfrzDWTp0FSIW6TB1WUnCdUjd/DK
WKgPN4UG1L1kcmLcHfz9oVKurZwGzbyPeDw2GOEZ+VnOiDQa3DmZSxi1NsL8
5QTztnAaRD/bl5uOd/FHwO1E/Qc02LDlZ5343D0McDFdthSlwbu4sGeG/MYo
qHFT9ex/NEgUlzwbqGuMqrKyMfK7aHDsovGbhTpjbFLP9QlZp8L9kO4P5EgT
XHfJz+rvpcLAbtKMwgkzPFkkGAEeVMjKvJBn9tAM2yheJ3eaUeGx4tT9WKIZ
bhFqEfxnToWd13h//OY0R+72f0OSV6iglhDwr/qrOf5376TqVz4qFAmac50O
s8TFjZs+cpUtANP0d+eFBkssnXz48yVhAbTyXUdiflhidL/TwnLsAiTas547
ddAKSRbbnoxGLsCcYkT+vL4VMilsYnrqsQAimrXnog9YY2/8vz8y6gsQ47jL
ZSbXBjlPkSTPjMzD045XEyEtD3Dy7Z/FLtZ5SFMJGrz/7yFqePAHhnLNwsPI
vuutex6h6olkad2/M3BqQWiA78gj/K7EhyZTM8ChZnvN6dwj5PB+LWU6MAOj
SZV9728/wrA6+wuXu2aAb8P0R5n6R9j3WaX3kv8MvHx96v1Pr8e4Qa/k4PGV
aQjT/dXktsURTZyMev5Rv4Kb7b2C4F1P8LWUdGRK4iTcEZj0qy3wwF3MtXuk
U4ZBSkb0e9i8F/Jxnvt+u/0jFFybG5j/7YWJxeeL3MgfQcqT1Hhu83Nc3+wr
99uJEb9XjFoVeI6ymjjVL8qI758/ZqH/HHl22pk4+n0AqRwLN2h4jhV36+K6
9HpASjBvKy3GGwUbnRXaP72HAvUHi+oZ3ti71vmnOeI9SNnJfU4v8sY25Vi2
AVVG/Ko6//pbb2QaOnrpffo7kLr19nLLhheo/pDnI5NLJ0i9pEYn2rzAlfRy
AZbzHSDFeVTo4mkfnGDlnXbb+Boa5X4Vml/2wbe9Eha/S1pBX78OvG/6IK1J
iz3HpxXcEzRv1Tr64MgZYfEPrK3w7qBlnHSeDz5ITW57vLkF7FTS2Hfv9kXB
ndNmH1mboNh499+hKV9MDovaY7dWB+d8Pvv/WfTFzrTPDQ6WdTCYnbaPm8kP
r35UscgUqANm2lHFyzx+6Cz6jY3vdC3oOF+yb9DywyvL2wlv/aphKchnOrPc
D1P+sm4tvFIBx8p+f7D198fpGKPlxKhiWMis7siJ9sdT47e9DC8WQ0q0e9Nk
qj9+2ti47jpbBFscNlIMq/xR/PdpocZLRTAoxxFxbt4fI28LBZ3jKgTXokNX
+C4FoGLZlkADnzw4mjp3/vr1AGwXuJ9QuisPpsIKIMo0AFVf8LwkpedCvKfd
sff2AXjIpzNojjUXtOzkpNncA9DdeKQq9G4O8EsD+zIpAHcNCAZKXiNCY77+
206OQDQvd9KlhqSDY+L+5i0HAjHnaXqtzHoaHA4aqj4jHohH7HjSHaLSYNSF
QHFXCET78K8TLSfSIMr6Xl7lqUDUoWwzPd+eCqYStgGZDwMx/HmjIGlfCvDw
yHiNugfi1W5S1F9pArzbuvTkv8BA3HNsIU4Lk8HrT5m9fmwg1pfMiobGJoHi
7BPL8PRAvFscPubwIxG2ZL9Qd/sYiIZZJl+0h15CTaw6Vowy8Le0UIf/ewl2
vtuUfiwE4kSUuVGofByIOL2TPvKHUa9z9JmHUywMmIUfstwUhG1Mu8LF6DGQ
ezBps55iEHrNf7vPcTQKbu8xWgs9HYTHj57/PZQbCbs2CS+3awVhkNxdutSP
CHCdzJ5C8yBcH/34+3daOFxKL2mWjAvC/P3tHJHRIbA26zf0IDMICS55/iM1
wUA6emupuDgIJx3PN6hAELDXbRJR7gxCb2bxjac2BUDdxkFV18EgZMvTk8hX
9YcHF0k6r6aD0LM7vLh42he6+vWfqzEHo/nN6qGEry/Ak/9wgt/OYHzRo1rq
K/kCZMzWizt4g3G4pvo9K7M3RPwgjmsfC8bNBi/2blDxAl32P6du2wQjz8uQ
nd7rbrBRr/N66pNgXHU7cf7PW1coTUi1n/QJxuLsO9sU/3MBbnGNVKvUYAyR
27dN3c4ZWh/wVRaQgtF38yfBZSMncCxb7PpWHYweLAOFr9ccoO9MApNTbzA+
k4s43ND6CPwCHuyrmgjG/oFGloyhh6DUfebov2/BSGa7dgza7GFm7z51XAvG
96N/T4Z+t4O42wt3nm8LQYOERf6LLHagnlnv1LovBL09oxtOPLOFP/NRoVtF
Q3Bh1xGvAboN5MpaEjXlQjDaZt2uKdIaDJ+ceBWKIRgel7ZXT9MK2Oo5+3ou
hWBNXqfRGx5LqN78lbbnRgg2HKrbvovXAmwuVW2+bhGCYwKp0abc5sAbFcKX
6BCCf7NMEnnumMHbwXuKI14h6PmeC3N9TMFV8JiWUFgIVt9RUrDbYwqSFtvM
TJNCcKXWoTLT2gS+kEbcsnNDsN9n2GUPmEDIT0r0fHkIHt4X+/xeizGcPO5X
cKQlBFU/tmhuHTIGmtfNFvueEPw6FXxiOtIYkt8c/VIyEoKnYwivzy8YgxbH
pp+/FkJwe4JrtmKfMazrD2xXXQnBlCmH0+0PTKAwqUDEnTUU38mpp14ONQGj
yWfHG3aHokv4x9u+ZqbAcVhfd6NQKBJyx/mkakyhwV7C5rx0KIrfOvD7YZcZ
PKxYex5wPBR3ePIotN4yB6H1noTOC6EYL52h7F5gAT1qRAqHQSi+ztu+nf2x
JTwPcunQMQnFsEK+qNh/ViD/4fJEjH0oRgQcnvyxZg2T+0X+DriHYm4FT11u
/X2IMvrNdSAoFB27ju8xXrMFNeJbCaOXoSgWwH/niosdZMk7GH6lhGLge7Yl
8uWHoO9y4aF4QygWpbsWq0o9gs2NBwJs3oViaoDznOmtx2B+ubVycSYUPe23
V93LcAQl4xgV3Z+h+Mb9193OF07grUr5MsgUhjefCuzcSnUGvcvPbx/fEYad
Im9LPhm7wMnr83z3d4XhCrPkXu5IVxA11hlJ2h+G+cUsZh+03YH9fjXhHX8Y
7rhk0ane4wHLjsJG6wfDkCZsGav72BOGPQMFjkqG4c5wqfv3Tj6D1oAfo0ay
YfjnoO2Wdye8gBR1IzVcKQxn/y2OHFjxgtjkpruNJ8NwA9tlRSHCc1BqNTZ+
YRCGayqnDXSP+YJAV4dw2a0wTL6rLnHNyg+2DMpNfjUOwz0l3utVTv7wbSIh
Y69VGJ63+WvYpxAAA1QWU3W7MOS7pj2kBYHwdE+G2Tb/MGR7+GRTQmko3OPf
fuh4aBhyre6fcgoOg4vij6dtohn9vKhnsmANB94TZy3epTLwTkrUmmhEQK3J
pGV4VRhWl6G7xlwUZNlqSjTWh6FVtCmhLTQaQpxL5hZbwzDnv9VPvzljwNGL
N0+4MwzjD6VI7OmLgdtB3ta6H8LwpPj9g8xlscBUInJ/70IYchyT3f83Jx5O
s5jaJR0Ix5Y9zuORz1NAYkfn0XfC4Vgqei1SfDAFuPYqfF8TD0dtvbClgdup
MCGx6aGRYjg+f1pS5qqSBt5XMx8JXw7H1lUP46StGfA6dcoxxzMc5T5NRB5b
IYKK+GW2ah9GnG4tbRGVDfmFFUlvg8IxUSvzdoJ0DvApCckMR4Rj7ljJ8085
ORD2KrCZHsfAsxUpn+PKBcMvMlyKReHYbS19fVgvH6j73Asax8JxDt20mJwL
YVcY9+Tn0xE4JcvaSAsoBZ+9nk5U9Qj81cNlPdBZCr+TZ9nWtSKw7yhtZiN/
GViJ6iRz6EXgQxehAFPfMhgqqJERuhGB11Lvzv2klUFWxz0Pi0cRmH/ieW2L
RgUos5J5fqZHYMDkhN5hoWq4435em31TJErNBvpI1NXDlaLKpfRtkZgdvtvR
Z6UecPJwnDIXI+6TO6B9pAEENDhGTPgj8eeWqMifhAYY3zNgU60ciXKybv0W
fo1gVmDlZ2Ebieu/upo+2TWDzVDwq8a+SBy0mk/SDW6DJyofpZxyo7CJ+e47
vZwuWNFp3pRYGIURd0JlTnV0wdP7JV/qy6Iw5vMBosxvRt4no3SqJgo52fN5
iLzd4JISFczWFIV3BLe3Vyp0g9tmPWrS5yg0uCNgF9/UDc96PuU3b49GmTNs
3FETPeBv1XeY60E0TouESGfKfoKX8YPiBXIxOO00qXNhbQBUB7eJTX+JxQZF
Jw6xK+NwzzXxq57nS4zu+pf5+Nw0uGTu7rX1eYmCIecLFHSnIepdUItv0Ev0
K4lV8rWehhYBt4zKuJc4IrlPuS50GsRabt07UPQS2/0Pf7jeNw3UHfzDk2Mv
kdbzrIL55gw4E1I/PToTjx8iBpQ09WchvG1/S9CFeMzn9WRhNpuF3O/hJZmX
45HzRNoOH7dZaORhy6jTi8eI5kLrxdBZ+HzGK7LvRjxmahR5JMXNwsmZe9qq
j+MxRjTc48XgLGyUEelkzozHwQRpve16cxDamNUcvjkB29SaYm5IzYNo7KHm
IzsScKgWfDrU56HGOrupY1cCplRvzhe4OA9zu3MbNwkmYEFV0ViSxTycNS+o
f6KagGLWiwE1afOwsq2k5q5dAhYbXuqy2rUA4aPyNWuOCXgkNmPeRXwBxEpL
qxPcEtB5E1Gn+8gC6N0ur/oUkICWdQKGXy8sQGFhVcWFzAS0OTikxc1475jp
NZTIDCbg6MCJSZOpBfgnfrrk3WgC+vZXmHgsLkDUWiPFeprBz8h9gHttARqI
zcWZSwloFBvnYc1NBd6V14X7dybi6Exk97IaFXqS3+VvOJuIZxTLOGxSqGD5
6HJ+skYijrHMlE6nU4FJvStPVTsRE/ce2M1WRgWp7925DrcT8W6P3inooILf
mU/Zs86JKLKhjdVqiQonZj5ndBckIsXi64bUUzQwSR/s/0dJRFMrW1In0iDg
9sB2iapEvHFMy+zGORoU7e9H/fpEHHEczL56jQb9H3sfe7UmIoHoYMRyjwaP
G7rPyo0kojkhdlOMJw1y419PRnEkIVP1I++8Chp067Xua+BOQpeoL0bXGPFv
jhZNKm8SqgfIvH/RSoNzvo0lauKM+hMCTNY9NBh7VOu9fCoJHUQat72fo8G+
SxSRa4+S0JJeUbG+lw6wpfia95MkJKbrVKoK0MGsqTCo0CMJ/9iM+8pI0yHI
nVw/9CIJu5zZ41MY732KMmlpS1ASHifv5f8nSQct0ZzmyowkDDoUHr6KdHAY
I/6eyk1CUj7+EL1Eh8TELEmuoiRsG9rz4vQ1OjQZZBqdLGfwA9biYl06zHFl
RFnVJuHfHyY5Gxjxi/Vkk/96k/CYao/cZjM65FclxZ0fSkLaqmTH70d06HFI
fPtoPAk3eTVt1HtChz9HE5hSZpJQXPR8zWFGXmDhpfxbWhKOKZ/2XXGkQ01/
1EY31mSclvwe0upDh8WigIxhpWScNfRgN0ujQ+y+iJkQSMZfWpm/ahnxcY+X
knAuGcPKZfMTcukwNpViR9dMxnrFp57WmXTw0cwuIegko6O23o7OIjocppB/
XzZMRpM4I+X72XTo2l9+nOluMkqJBy7HltPhsWedZ6F5MhJCdmRz5tNh/3RL
s5FtMsZYtsc1V9Oh7lLnFk6HZIywzmZyKqTDvZKPmg0uybgyr3rhch0dWP8b
CrP3SsbKTr7BF6UMPZ5NfBT0T8YW71dClq/ooD0zt68nNBl7AptUf1bRYVlr
8aZXTDIW5f9yesDIJ5T+SZFNSkZ+mTwtg3o6IO+GqfH0ZBTRfxX8mTH/lNcW
8cjcZBxzPOom2UKHgNmd988UJeMGtVZnKUb+yJW9RT/Kk3GOVzPvTxsdPpTx
/UyvS8a+/IL2T7V0cD4gqqzbkox7jpRl3eqgA6+3lNvGt8n4dMbupyBjfMOc
fENJTzKqblDcI/SW4S/t45tMB5KxSvXY2yMMftsqzlzYM8rg/5B79ixjfCHf
xeCWr8n4ja/Xc4LBV+/F1W4HajK+W3Kr+c3AX5m/vkd0iaEX4e2vn410IFy9
e713JRlrSrlWExj8z1ZaJPlsIKDHjGv5r2Y6zPDbjSluIeC0edaj7AY6BPs4
HZxmJ6Dpjrdilq10kKW6W8buIeD5puA9yYx+enV8Cs7zElD1KfHTe0bepSr4
+y8hAi5UKZUsVDL8JRitkC1OwFwlo7oOBl6Lb+KTa0cJqCf/PGi0jA5WtPTa
LccIaEvevkusiQ479fI2VJ4gYPfRa5ujS+hQUl2sZnmWkS/WNp5k6HNdqMp/
/0UCnjkh+5deTIc1v4bON9oEVC8aK5Bn4J3X79KTuEPAU2OdWs6M/OA3qun8
EwKWUaQ8X6fTwcPgZ06CJwGVxzT0b+bRQaRulXrRl4AiWmmBDYl0eCOyUXY1
mICHOtpeLGXRwTZwm2N+FAHj7322uRdDh12LXFU3Ewi4Wsx3nZZCh4prPGvb
0who9/HfvuYwOmwQFfe5Tybg1e+e/B2BdMgKOtp+oIyAHKH7ScDIa/w4xv6u
hoA5k1EBh33pQL8OV92bCNhj3B8nydhvUfXnYo60M/AT1aQdveigfEhrcLiL
gH+77lEDXegwHKzHF9pHwEQvmQOSbnR4vnTzHgwT0F0gu3jIjg5iN0yy6JME
3HFH6PVHxn42gPu1nvMEdLF5zCxvwdiPwo4fORcJuDzVPC9jQ4fJeV9m+XUC
7r2sERRrRIcrdXrSNdtTMOO+kPTqeYbfLj8JZDqUgn7PDdu38NBBqOEf9wWJ
FNRLPvySwEcHFTmvtHCpFFwZIG7v2kkHi72BlULyKUjyvpr7ahMdPP13qlkf
S0F9Xi8HOhPj/Pgb2UVRScGR4Ae9Ln9p0DqSOH32VAoKV96hp3yjwbC24KPg
syno8GL8feAYDX42Za59Op+Cgkwks55JGohkk/aYa6Xg+hJzVFsfDY7zyKWS
tVMQbvQpKzbRQCeoXPK3bgqqHiCa3HhDAy+7+jP+N1LwkeBDbb9KGsSPn33f
fTsFWRLGBUSIjPtF940hz70U3DVwofphNg1GlXrs8yxScKFTJO12DA1Obpgk
dDqkYMPdqJkCOxqshLOucoal4JbfNR7HxGjAtTHI1zAyBQc3BF36K04DcUeO
XekxKdgTotJtvZcG1wz3S8gnpaDzvPmZz5tpUCZ0+Jp+bgp2yuZ92DhFBXuK
Vkl8cwpe61h/4RdNha59XIO5r1OQu/KOlqQ/FY66f1qvak/B4XebzXUcqRA2
EXewozMFDV0WV3bepwJd/ebFz10p6O52tLbFmgr3hy3H//vC0Hex44EyMu7r
rS84kn6moP1xKZvGyQW4e6fahiCaipNENl4v4QWob3aPIIun4qFMsffOvAsg
IHG64pVkKtq0NhSe27sAnqGbht9Lp2Kw84fRhM0LMLLUxjIqm4qJzy19mBfn
4VZAb7wApGK7p1nezvp5uF76vS3VIBVngksnVQznQXub2MEMv1Q0UTr7dMxz
Duxa6VeXA1OxymSbnYnpHIQ8K/dUD01FOfuFoyx35+Dtr3NDC9Gp+E3z9MV2
nINzk6aRCumpSL0qclh7fRZUatM3vK5NRe8T0hm+zrMg9IB/eHYxFQ3z4wvF
bs/AYg93rPStNLwU8SS6ectXiLFpjEsVTkc1fqEnStpj4FaetCL1NR0fThqY
NkoPgMVTcfmns+l4KOF26aX1frh6ovR+60I6+ovPX/rypR/Emt6O3v6RjgKL
KczcQf3Q8+5vayhTBnoGHE6UmO0D0a/XI7/zZGDAja39r4m90LWbW7L0cgaa
Pw3cqgUfQeRhyK3jlRkoU0m9zGL5HvTFrstcqclAkj3r3yrJ9+A/LLzJ5FUG
ighaX+EbfAc1UbR+p8YMnM1w/k8h+h3QNCrzA1sysH7mZ1qU2TuoFJ78O9id
gc8dwy48MO8ErU/K8U/mGPhxpzSNHnXAE6Wp3rL/MjF0sfdpTdlryKeRc9v5
MrFh9c+GU66vYTjjqfuwYCbSDhlX/JN9DZw31K4uimQi+6XdKbkrrXCWk0N0
s1gmum/bOnOwuxXY51Qc9OQzsYIQIBxKb4GMhLBdS5qZePls/NlSpWZ4t6Z6
RcY9E2W+Bhr5rtVDPds2Sd9nmVhlffsER0U9FHMPsn7xzsRa0iaxnqh6iD7i
/MovMBNfbespSz9cDzdvlxwZjWPgfdq3plxWB7O1kjtCKZnYLIdrJUHVMPjm
78xkWSYSlre4ZalWw9tP7c0qVZloPrjp2N72KiikWrh+rc/EUqLpNtNtVeB4
IHP+xLtM5LWyLsyOr4CNbgfaF2YyUT3Y5ZTgfCks+y1knl7IRJPzB+JLk0th
Oqr6WRw9EwX27S64oF4K7fnXlc8uZ+LPDH6xm9klED4UnZ3AkoV52eL5cw8o
wHec3VeDLwtf7Z4WKd1bBBzqX+6lCGahJbGR83N1ITDr5p9cFsnCBJVkx3mf
Qpiy1lhOPZyFhRfzWzS/kyE/wcf0j1IWhjkm8A2+KQDlv2tnsnWyMKAmxfhz
dw58a9Hyp+ln4cnnysMTXjmQFZb8Tt4wC68uHD8c+D0bdouevN5glIU3jtwj
VfJkA+2Km+3g/Sy0mfZkc/LMgsz/OikC9lkYfInrh+d6Jtz8yvvH7DGDr1IW
a2tFJrxxqXn+42kWTs5UHBH5kQEZWX/jtvtlIQ/boMLgg3S4YX9x+GpgFprI
/Tn8Ykc6cB1PEH4ZkoU+jpUPL5amgUe3CulgdBYOBy9F8DGngWJiwA/ruCxc
lTG+urExFRbMBpWKE7LwKauaz6pBKhiuPmk6mZaFOrJxc2/KU4Dz9ZstLzKz
sF/IfyHcOwXawvdrdWRnIZ/w7NGngimgcKiy34CchTsU4k6fFyMAx9XfVLua
LOxuJ+1P402C17zqcuWvsrAnUutJhUciuE/HOv9rzEIlnoQNrw4mwrzrMZaA
Nwy93ryvdVNMgLTzvupdb7PQ81/FQHJ8PFzj6gvm7spCyfgPh5e04qGV6Lgv
vTcLNaMrCPF2L8HtYeut2YEsVFe+vmnubxzIn+BOl/6ShUxrimmdSXGQ2lMq
VTORhcLTZyR5B2LhWtKmR8zTWeg62fp7e2QssFvoVajPZeEd2+xP0SKx4Ppv
6fSnb1modUvg2IVnMSDXdtbvv6UsVKucXrmgHQNzEVGdd39lIXvIqwwuejQY
iMlfo/3LwptV57Y22UQD+4/nSfIbiBgkdGb42bFoaK79MP50IxHtU3j/Bf+O
AlmdR/dZtxGRr2zlZ3xYFMwcaCq+xE7Ehytms9FXo4Aww/U7kpOI4hb+i8Fy
UaBPuXdicDcRFdrYk/x+RcJ292IvgX1E3JigMj06GglN6sxtZv8RUcK3YZtr
fiQ83XV1RwEfER1cT7D/iouEo8OpV38IEnH2XvPHHLtImM7+Hqt8kMEH2thn
b0bCVzNPp/NiRMwcvtNZoREJkyI7DfQOE5ED73z+JBMJE+NJisZHiDjGfIQ1
gzcSxlMkue1liFhTdGTTa65IGLtd/dNdnohar7/OybBHwiivxqegY0S8CpaD
VzZHwshgf0m8ChGfzdQ5dK1GwHCceVT2CSLquS2OmPyJgC/6y4/KkIg6vtqP
eNciYGj3C53mM0RMJ1J0MzdFwmDPLrmecww9yK7xVtsiYSAsjWv0AhFx7+s5
A85I6NeSWaRqEvF5Is3/B4Nf7/b67r+XiVgt9Dx7/9FI+NSuVbRVh4iHZDeJ
bDsXCR/9voTt1SfixBeBTQ+uR8KHczZ2B68TUanwTkSyTST0bPx7We4mEddO
PVN0942ErkZ/6VN3GP11BZbdyYuE9577dl6+R0S11FPh6u8j4d1JIu2mKRFv
W5/OdadGwttVhXdWFgw9Q0fT1NijoKOqucDZmoj1tP2X3qtGQbuzTrCPLRFn
8hUOPrSLgjeK4zZR9kTcnpgieDg5CtqW7DTTHjPwdWKFL7VGQWvx+uFCJyI2
zYWn6f6Jgha7kG11T4koE2+cFa3K8NeRA/MdbkSMfXVc7J9LNDQu5LUPeDLm
Y98x+5kcDfUWb/x/+hBRUdp4TlomBl6JXrNkCSAiW8vmTDnvGKib/KrOGUxE
wzo3bc03MVCT5iDGH0bEnwNv5Mo3xUK10cYtUpFELN+R8MFFJxaq+CKnVWIY
/jFnfaRYGgsVQ4Kv1V8S0e+7sUrwzjgojy/M0k9kxFsqXu8wiIOya+BjQiBi
jpuqT2hmHJRyvzN9mEZkvC93sNvufAklH2+qeWYSMTo4sPGKx0sojpgXCckm
opU2h1Vf/0souvJ0Y2IeEXlZjMfWxeMhX73U60M5EXt4TnPEjCVA3uaz98aq
GPN/keKz1EiE3OaeU/RaIgbwr1xg+ZQIRPzGtK2Z4Y8/vKYZ7UmQpnTY43QX
EbW3/Va9MkaAOLFUl6IZIl5yjR7xOp0G+sfljTcsEPFDluP8F8802H3ltYY2
neHnBzkKS9/TINSJuv/7T4ZfLCk1fcR08GlVrjjKko1lMccmhkUz4bFJzxL5
QDZm+N19fM4+G2SdTYfWBbIxZfiVU3pjNnwL/N10WSQbx6YT7dJ1csCawhdJ
l8jGJtO9wqeO58I9ZmsZaaVsJBkJFAsJ5IN2Cost6Wo2kp/0PO/fVwjsJTF6
a3rZ+NtiIZOuUQhvX4uf0LqejeWc91vT0wpBnX55O+1ONu58E6lkL10EeDIx
V+p+Nmpsl9rMfLUYjgzJT+f7ZqMrj5eSV1UJsO0zM8qryca79I1Wi7urgINf
abzxVTYWHT7/gmBWBdyibCaDjdmIwyR0IVYBr9TQ1PeWbPwhUrRVY3M1CMqT
zLe+ycbeCw7/ZOyrQenKsq35Jwa/G4c5rT/WgLmfj5swLRtzfqb9TSa9gubf
WfEJ/DmYoJiu+3q0EdrXnXkpQjloX/tyj+3+JujafDG5/WAO/imSKnp4vQl6
dxwQGBfLwalrZvuZfZoY5wM99c/hHPypWOn8mtwEP44eyzFQysFHp7+puno3
g5Dl6/Jd2jkYLGoTbnSyFTwGpj8GeuUg1VK+vXv8DWgQVOojX+RgyK3MyoP7
2mG3aXBegl8OZl/mSo1Wa4cRidGY9MAc7H+ZZn/TrR1yv8l65YXkYLVDUqlP
Uzv0srpLd8TnoPvPv+mmmR0gqbg7gI2Sw/gfWB3siOmEwQgE/4kcXFR6sqxS
2QWKmi9zfM7mYup5KWaehY9AOmLkwbI3D9nPOpVlhQ+D+MTEpNnnPIyws2W1
75+AqvPuT6uG8/CHK/bem5kAjfx9HOzjeRi67xX6r0+AjcMl1dKZPGxxmIu1
E52EQtbycJblPJRY8X4S8mgSlCQDTqZw5GN8J3XUim0KzjscjRtQy0eu9haZ
HRJfoX+gXUrqQj6+OXDrsuWJr2Bx0rTJUzMfJT69dfir+RUCWONph3Ty8bup
nV7Lg6/w7iWLmqNRPqYTlKQ3l34F/bre71wu+dh7g8D9+uQ0mLK6XdQszMec
Bl2wujwDJ+/ou5hT8lGvfP3AfZMZ4C6XzvMqy8d3Ib6vm2xmgM6+9XNSZT6q
bRTYWuk8A21m42yVNfloeG9SpSt0BiRbz7cffJOP0fq/Ta52zsCSN9eF9bF8
XMNLkW+Pz4I3c/a54l0F+GP629VMnjm4ZfjMsZO7ANs1H4WqSM2BYrFh1sz+
AlTM5iCuys7BTjb5XpYDBRhe0Jr578QczNzdsZlfoAC/N5pLxOvMgWbDw5ZA
yQLUOH7bUNh/DnZ7njhrqlaAXfuUw47NzEHGv55T+5wK0FnYapN31jyc3i31
WfhpAb5iLs27VDYPoxK+j6XdCtBl3UBSpHYe3E+N7VD1LMC9c93U0IZ54L2m
Sjz3vAC7o1+0DHbOQ1Rx+naH0AJ015jefW55HrzNH/d1EwvQb9RUyurSAgi5
v7P7kluAYgcjEke1Ge+9KDG22YICFDfYNrv3zgLczvNKXyosQCTs7sp8sACr
DUPHmUoK8Ey5A6nAeQHi+xV7t5Uz8H24Psu5LIASPezB3qoCHGqdP/TMawF6
N81vEa4tQHNW2xXhiAV4zKuWdqS+APWTx8pOpSwAlxxBVaWpAE2No6w1Mxeg
8MKfj2qtBTh46CQzZ/YCaBnp2Gq/YfTvw943WrwAC44FrLfeFqDn+PVdvE0L
YNK9535gfwGW5fo62Y0vAPPMg82xnwuwaFRq9OD3BUhZe0NIGy7A9B2348V/
LcDJPSLKpLEC5P+qaZ73ewGGDrv3VE4WoJKn92UaExV0fb4em/lWgNM8CbvY
BamwmIjdP34UIJwcf1klyXhfU+Kt1pcL0D8ibvqlKhWOtC+xbFspwBzbF7Ut
p6nwdlQriftfAQaYzdI9zlDhrGo5s9pWEu7pnzWuNKPCuDZn4pXtJPTTNFNr
MqeCp4W1ws2dJJS7fc/3nx0V+Dxa3plzkbDplz6bvwcVaqL5LR7tIaEgV/2m
eV8qGOY/2eCxj4R/2S913vCjwu/GD/EB/5Hww5stwoRAKsQMSMnH8DHOTvOd
4wOxVJD/5tuZKkhCDACZ5gwq9GweNysQIaEU10v2L9lUsDtwnKnyEAkDqF/O
RDJidvmYl80SJGxXesWkQKZCvsY32S4pEm5ZWZidrqHCwcxrcWvKJHy00QIO
9VDBi7NcWfMECa/qO12Q+kKFUbc9n18iCe1ds7oXh6kQr99zQOE8CRX9jrZY
zDPm36KZbq1LQu8ITqObLDRYtgJSvy0JbVnKW8OlaaDTl3RZ9CEJR/wTmniQ
BoVnVr89ciBhhIZDyagyDax4K+V2ujL0lDnkMHmGBsOdspVq/iSclDHO3mpA
g9ajos3F6SRs6+jdUvyEBsJJ3qZMRBI+t1xd0H1BA8+tE5u1ckmYXcZhG/6M
BirjhAuzhSQ8kz7h958/DUiR+9/z1zH66b+RfjCWBtuYnO3uN5CwLCVceWsS
DSxsejmrmxnrde02XwojFlKL1NXvIOHsef4bVek0iFnePhjUT0LWzmdKjSQa
/Lhn7TL4mYQcIoJfJRnxlfdveMVGSOi8Hr6YQ6EBW7bPnaYpEk7tl684WEED
891TTJyzDP3oQpc9SmjQ7Hkm7fYCCVWbXn2QraGB+3WmqT+LJFSzXqx+94oG
n1tu+5xfJqF4/wdV20oaKMnWHor+Q0LH2iC+X400iE7+7834Kgm7NkiKmVXT
YJHtqdVRJjL+sK6YyWmhwWWn/m3uLGS0PBdI2lZLg/wJxYKOzWQcOS9zZeo1
g9+VaK39bGTsC1OyN6pj8Kv5QTfbQUZJYe8B4hsabOcNP+zKQcbIiPeVkQy8
Ypcj5uG7GPnuen/RehoYfO5Iy+ImI5FXsNG6jQarKpbD1fvJuDjHbTDeToPU
+M083bxkVLmtNrahiQbnVtL1vvKTcUBIv4PSQIP566fC/wqR0Z1ydesSAy+s
cvgthygZOUyDT0Qzxivsd90iKk5G8/nyP1IM/EHn/WdVJcmoMHiFwMaIPfrL
PK5Ik9HgOjxZZ4wXUdKtNpUlY8uonE4rg8+b2O/LTxXIyIWkc/wMvra/QmTD
lMhoUkG4dJCBv8tA0jZTlYwRr1gE/Rj1FWVvcqpOkrHu469SV4Z+t7jNp96f
IiNLtNTqZ8b6MDtuFJw6S8abEWIi/xh6ET+l3lw5T0blOKsn/ox6TQWI23mR
jHedaKn1DLzvUUMfRLTIeGjnTg5LxvrHLD3ZqaJNRvFnPKUBjPU6rrv34mVd
Mn5/bRLGxOAzRinxMTFg6MssJ5lQRQOfXVcbnxiSUZ3MzNleTAPJR/R/IbfI
GMSzh6+1jAbdPUHKGUZkvONkcmiBUe8oK+FQaUzG+DaJv3v+778igjG7HRl7
JZ1/qeTSgMxxgiD8iIwNz7amsmfQQNducFDJkZFvWLkvmkODP++duLWekLFH
vq1IhFGfLL3nqrErGbf8G1/blUIDWVIAVviRGf8na7G5UTTo2yHm2hlIRift
9IPZYTRwvd9SPh5CxvrsAJWxaBoIdt778SucjNTavQqakYz9K8kkvSOajK9G
urJZ/WhwI8/hwL1UMtoabj0m95QGTNt2XXfKIGPw79kUd2caZFkVRgURyagh
unKqxZUGF9svdaXmktF5qs8g2pEG38TnGdcTGX8vZRyRt6aBd7bRyrYqMq5u
2q7AcYPh98yLfaU9ZNy7fn/a4hgNOG5QeXb0knHa/vYK8wkaPOYIvW0ywMBP
kzsaIsVYD5eeKa5RMiq99vv4T5gGnVeuLz2gMvxoOVQzx8Hof/PfY6+/kfGF
6cZI3q2M9axOdOFbIuNYhbXo8GYa3BYdZe5cIWOOtPXT/1ap8MuNsmXPxkJc
5RncQ5igQu4179z6TYVoF1C7i9pNhZtyepo2rIXo39fytfgTFepnlkOb2Apx
RKC9oLiVCn46Knsfchbiza193uJZVNgn3nDwPV8hElb2uivdo0I7S8TrpwKF
6NLxs3PehAquw/csRYUKEaS3SE9oM87ryI0FbgcLUTLQopd+igrZa+flJSUL
sYLvyHi6EOO+GdjX2ydViJfuWFeL/keF7SWzTs+lC/EQ3dO6l4txf1gGVg/K
FiLb3pLscGYqKH18d9pfuRANQgoEskYWYI5EmJRXLcSC01PuMR0LkOhv5zN6
vBBZ/swr5r1dACbgaj+GhahQNnM3sWIB2nL0tL+eK0Qe0/m6vOAFuO4xdOeM
biEyXZ+9/112AWwr7ytO6xXiVb1X9FMyC+D1Y217oEEhxnJPp3/nW4B8c8Gq
HsNCbDDWLT69bQHWLpvtvne3EJsOnb90cWIe0gS+tXnaFuJKbLBYp+88lBk+
I4jYFSLJqpfFyGEeOqK4HNvsC9HdXrVb2HYelrYoCHM4FCIXR7XlkM48nPv+
xI3gUogvypYD9vLPw3wDi2ydXyE+H3shU1E9B24bD29Uri3Ebxw2r5Q2zIJi
xWdifV0httzco1NKnQGaddBF9fpC5Oc+XGAzPgNE/hP09w2FmHqU7WnS4AwY
faBGGDQVovDPKyfVOmbgdFqhoOObQhS5Ee2yKWoGNqMiUD4VovgjJYUJgRkI
czn1VIrG4JtYe9Xu8DSkLxp8E+QvQiaT1dOnlKcgJ27nl4v+Rag1zfLmU8Yo
FBEzOS0XitBI7M/ujE/9cOWOUjWVWoRXHNf/Fpb1A427w+QhvQg1j0rOl4b2
g6TPt3KXxSJUWjz4dlWrH7JMVG+H/C5C4zGdgSMdfZAo2J1L2ViMNmcmqoV7
e8EnYfXMGm8xylD4jieMfgTDUB3HyEvFSN/FKTZ+phv67WeElS8X4+CF5Nhv
At2gr+vWPXylGNNPL7CXbumGq/uJkhK6xdi0b3XkVWcXXExfGa83ZNQnhIzc
uNYFx8tTL9PMizHlgaj43ZF3wDdCF7vgVYyu/EurO4w7ILHBu5f2vBiH3ijI
qZ7sAJ6M/d5RL4qRanB2u9WfduC2PDMy4leMh5xFBDTD22Hnj5hox9BilLOw
8ghseQNMrCeZMxKL0b+ON2blRBtMHAn6vFZWjNxGVvpEwxbYHIj6fhXFuKnQ
3lddugXEppe6OKuKcca1wnDfv2bQOJNzMaG6GHkb//y90tsMNoRbrSK1xWhw
8vDwwfJmWNopXaTRVIzkO42mZXubYfP3bp+Y98VIC2FRODPVCGKXfDYIdBej
VNqwc2R9I2jkqLjm9BTjfwL3+FQiG8FmE31Z9iOjn1vPuHhtGyHkbrp9zadi
nLRvNrp+tRH29jy+Of65GPsiV7RLmxpAjLJX9sgMQ1/Hro/3KfWgsfNtfvls
MUZw1h1Viq4HG2vPQ6fmGeMV7FY97tdDkfAsry6tGDee+sQyJlMPKlFVrE+X
ipH91KXbIZav4KLDrS8tTBRkGQ9YFQ+rBdtuzmuXmSmoco50ZvlOLYRJtfb0
s1BQLU2XtOlALXycOtI2v5mCQYJvovmLauCmPhOFcwcFE7aHNp//XA22x9L9
bu2nYCx65j+8yHj/W+q17v6PghUTL3p37qqC2njWjW95KWgheOjHXmolbF+z
9lARoCDND5d0PSsht1nece8hCk4mh50qqqqAq8tfKe/EKPg3e+DnNv8K+HPo
5fcXEhTcNxEy8dq8AtQD/9ksSVFwTGsiishaAVParcbd8hTkiSF177xeDkHP
nVP9FCl46XC7z+kj5SBfKjECShS8T/5j3MZZDl77Qg1JqhR0NMpjta4rA4ER
A+3A0xQUDFp2YD1UBm0cbKGnz1Lw+9ncCjGWMnhwuubtHzUK3p22YAmeL4W6
TAF1iwsUZNN8b7w9sxTM+npe8F+k4AJziFHDi1LYsfVFU68mBfsoD4/V3iyF
EpVjG0K0KDjL+pP452Ip3LSZPal2hYI9bQfhr0gpbExOcF3VpmD5anDugS2l
kPf+UhVFh6Gn0JD8o58lcHUD028rPQoajX+a6ntbAiuyxQpCBhQUkLVPGa8u
gVQTk0cD1yhI/NrFkpFaAuox3EVhhhQ8yDUhUetRAt9et9HO36Tgxtdh77wf
l0Dsn6eS67coaDDkfEBJpwROHpayKrtDwRtqlnpWJ0rg680R4v27FKwJM1Zp
lC6B4JDwKRFjCtbv33yctKME5OvPCA+ZUFBypOHZEZYSGPr+0yjSjIJlT18N
rlIp8Fw4O1nDgoIpfPwJ0h8oIKFnOLTBioJXyBuMEjsp0OOznafSmoIfyHwf
l4oo8LSizsDuPgUD6JWep9IpIDhnF33oAQVTQw9x58VToO0/4Q/DdhQM3/rx
HbsHBewufeKIeUjByHq2SB4XCuzz8NW69JiChDvpX5asKPCqUDlooyMFY2jd
NcoGFDAbn39T7UTBn1nKK/cYMfvuZNZHTxh6Nc/+1D5FgTK1K2oSLhQ0LuJp
fqVMgVtOzM/HXBl+8HoYrq5IgY05JfVx7oz1PhT9lFOQAvmDZmuXPSnommgj
Vi1MAZ3t+4+zelFQzsSmO3kfBVZOdDype07BpTWR5LltFEh74Fbu8IKCOzNX
mac4KXAhVfqnpC8FDzy7PX99AwX+B6dvLc4=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qJoDV5Mn8e1kBDKkj34ra8qB7j0X3o7PReDXLQ8FhBVyoUhR/Df3UgTG6Vkn
PJPIA2/9Fk1dvqfYHxvAGSxPg80kgbGPak9Rguut+InhfPDf6n1/TvMpTqrt
OV8lWACLSdNr/+k8xdtm9Gt3LxfALcmLSbwGT3FM+7Jmb34BDORVHBC7/BQf
8zHD/NcyIOPNda+bzk8xYvi6m82BQjjKRdv+I/UpQkftybepRWDuefrChtWR
mP6rCr6IVMD5/NLvqTyRmDJ/ju0eVgE4tjfmKF8kzqmH7pQarwCRs7zDFrsi
kSu54oBLbiWMbvlgW340EqWfbZG306gGq7xbgTftI3FjYF6Tvl4t2A6EVtf1
EfJxZ7wEftXDQ+W3++5nR+GeGZbFxslWWLpYvzqBHoWMDe7UQbE2cLUrHKwp
isLODl/XGOc2WPJPezleEYUHbj3V2l3SBm7JUaFrX0Xh7t/p5jqTbeCxxmAu
8WMUkhoU9tXPtINPd29u/bpo9IGQDiePTnhyq28v351o3LxRx/ZWUjfExvVL
5x16hl/qrzWcFOgDlX4eqcnB5zjig3ghcQSuuydMGHjHomxJwzotn3FwS+d/
Z+8fi7XPpBPLw8Yhqj2kISAkFnXZaiY/08ahQcQjrTQmFnUcfUWft4yDVIPp
9Z35sZgrNRQqyTcBc+t3DY19isXnrgvC3c8n4AE5pdf5ZBzuuROpR42dhIim
bQ0hZ+KwVvCa7VjmJGR/iShM141Dvls+Xp+qJ6Fu+9q0KoM4DN9if9+sZxI+
nnwU2Xc5DvOpm4pLBidBder6BZW7cTicmnRdSHQKVh0Qb1uRHodpKsr7NpKn
ILwuoz5iTTxubpat9fCbBsnne+rl1sdji1kWey95GipuZ756szkeU95er9uc
Ng0z/Nl1q0XjUXYhYK/9q2lQt86reagSj5p7Eituc87AEk9hxTWHeFTVjR2x
dp0BK4PawgP98Uj9EDCoYD4Lf6XVCttH4rH/a1Dd4O1ZiFquY9yejMfA51fl
XFxnoZZSX5D+PR5thpu4rKJnQWipkb5tYwJasg2dtFpmoTupPZdTPQHzDw8e
Wr2fCcenPqZ15SXgZOJ6Nf4ZJlik9r//y0hA7zU/nhxkMiHI7MM6mbIEXDyy
XuTWVybkb3uPhjUJ6GSzvql21Ry8f/vu7qPXCSitxRW8dxNx/9V2qR8aTsAr
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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999985944158}}, {{0, 4999.175718266285}, {0., 
        0.9999999985944158}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 0], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 50], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K\"", 
        StringForm["`` \[Mu]K", 100], Editable -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.82005993265065*^9, 3.8200599434354553`*^9}, {
   3.8200599841974287`*^9, 3.8200600020118427`*^9}, 3.8200602462835913`*^9, 
   3.8200603427767954`*^9, {3.820060819685706*^9, 3.8200608375699854`*^9}, 
   3.8200608898436127`*^9, {3.8200609288628936`*^9, 3.8200609431284184`*^9}, {
   3.8200609755361576`*^9, 3.820060997229342*^9}, 3.8200610366766853`*^9, 
   3.820061220442791*^9, {3.8200612517288294`*^9, 3.8200612701152973`*^9}, 
   3.8200613095483894`*^9, 3.8200613923897505`*^9, 3.820061582520847*^9, 
   3.820068840465987*^9, {3.8200689774554996`*^9, 3.8200689965322037`*^9}, 
   3.8200690417079306`*^9, 3.820069153640668*^9, 3.820070114196929*^9, {
   3.820070172512924*^9, 3.8200701922561665`*^9}, 3.82007022300874*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "fname", "=", 
   "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_RIN_correct_frequency_\
50_100_150_uK.png\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8200615367804327`*^9, 3.82006154818779*^9}, 
   3.820061589818788*^9, {3.8200683129772468`*^9, 3.8200683255914936`*^9}, {
   3.8200701678901806`*^9, 3.820070173630434*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_groundrydberg_Rabi_oscillation_RIN_\
correct_frequency_50_100_150_uK.png\"\>"], "Output",
 CellChangeTimes->{3.8200615852254167`*^9, 3.8200702656886525`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fit - \[CapitalOmega],\[Tau]", "Subsubsection",
 CellChangeTimes->{{3.8200614733169985`*^9, 3.8200614792401776`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"FIT", " ", "DECAY", " ", "TIME", " ", "AND", " ", "RABI", " ", 
    RowBox[{"FREQUENCY", "--"}], " ", "GENERALLY", " ", "POOR", " ", "FIT", 
    " ", "PERFORMANCE"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]Guesses", "=", 
     RowBox[{"{", 
      RowBox[{"100000", ",", "70000", ",", "30000"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]Guesses", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.99", "*", "2", 
        RowBox[{"\[Pi]", "/", "2000"}]}], ",", 
       RowBox[{"0.90", "*", "2", 
        RowBox[{"\[Pi]", "/", "2000"}]}], ",", 
       RowBox[{"0.90", "*", "2", 
        RowBox[{"\[Pi]", "/", "2000"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RabiFits", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RabiData", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"\[CapitalOmega]", " ", "t"}], "2"], "]"}], "2"], 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             FractionBox["t", "\[Tau]"]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[CapitalOmega]", ",", 
              RowBox[{"\[CapitalOmega]Guesses", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{"\[Tau]Guesses", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}], "}"}], ",", "t", 
          ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "1000"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1000"}], ",", 
          RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
          RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}], "&"}], 
       ",", 
       RowBox[{"Length", "[", "RabiData", "]"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8200597733530064`*^9, 3.820059774828841*^9}, {
  3.8200614219884696`*^9, 3.820061455553026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"RabiFits", "[", 
      RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", "]"}],
     "&"}], ",", 
   RowBox[{"Length", "[", "RabiFits", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.820059518871094*^9, 3.8200595527841663`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "\[Rule]", 
      RowBox[{"-", "1.6557659384385688`"}]}], ",", 
     RowBox[{"\[Tau]", "\[Rule]", "4.7130395226441`*^6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "\[Rule]", "0.556181030605765`"}], ",", 
     RowBox[{"\[Tau]", "\[Rule]", "398258.99771732435`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "\[Rule]", "0.19805791167964418`"}], ",", 
     RowBox[{"\[Tau]", "\[Rule]", "74520.77999404435`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.820059554163*^9, 3.8200596250053596`*^9, 3.8200596560784035`*^9, {
   3.8200596942216654`*^9, 3.8200597041927595`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<`` \[Mu]K, \[Tau]=`` \[Mu]s\>\"", ",", 
        RowBox[{
         RowBox[{"TTable", "[", 
          RowBox[{"[", "#", "]"}], "]"}], 
         RowBox[{"(", "1*^6", ")"}]}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"RabiFits", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "/", 
           RowBox[{"(", "1*^3", ")"}]}], "//", "N"}], "]"}]}], "]"}], "&"}], 
     ",", 
     RowBox[{"Length", "[", "TTable", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", "RabiData", "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"RabiFits", "//", "Normal"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Two-photon pulse duration [ns]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.820016641568408*^9, 3.820016657576668*^9}, {
  3.8200167512434497`*^9, 3.8200168245218816`*^9}, {3.8200169010984163`*^9, 
  3.8200169017207804`*^9}, {3.8200169469240894`*^9, 3.8200171162884436`*^9}, {
  3.8200178533101645`*^9, 3.820017853421129*^9}, {3.820017937476101*^9, 
  3.8200180552342954`*^9}, {3.8200181009163537`*^9, 3.820018115194195*^9}, {
  3.820018145408137*^9, 3.8200181661462207`*^9}, {3.8200183238678627`*^9, 
  3.820018325970768*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjQo+2M/aeDp+nV28g3iVzI2Da99B+fkOfflPJvi/
f2VvcvTGcab8cofcqviK08lPofL1Dj6bJ5fqvrlrz+h//7dOe7PDkTzFvUuy
LkLVtzs4SB03znXYa59ufWnyjbBuh4Jp/EJFJlOg+vsdsjgfiDqZFtg/n/xI
1GnyRAc5BfMfkmc3Qs2b7DBz58eNL8NP2Utx3XkoXj3V4eO6iw/i/92Amj/d
IfShvbHc30f2fg1X175NmukgwPzU5+/fF1D7ZjtcCHdqWdT81r7x27nKw15z
HQ6s47+oce491P75DikfIqsLat7bR5k9WeQzc4HDyZmbghrnvIG6Z6HDJGnL
3TdXPLcv+figw7x3kYPDtcerYoofQt232MHYUGXDA+Zr9r1r7uYpNS5xMP6y
Jmh7z1Goe5c6+P+L35GitsJ+efqtEN7SZQ77DwhOOHNVF+r+5Q6qX5qkPvIs
sj+odN3qR8YKhxkl9/zMjhyC+melw4ncFz8vWl+xv3X3ssLjmFUO7jlPeLY0
P4D6b7WD0rOTi5ZfeWb/ZcYFtnMBaxw6dko2lLC+gfp3rYPf17fv+a3e2/OF
nH2zw2Wdg4Dc2lOXXsH8v97BwNeexfT3W/sp7KkvA2U2OGyZd+6j0r6X0PDY
4GCxbtGzoueP7RVSk2PcxTY6CGsLx7y9dQsaPhsdzjiK8D5oOGu/9lDieRuB
TQ5Kicxn7rzcCg2vTQ7sU1IfGK1rtLdSSHAy4trs8DG7XrJKvBMafpsdrHZr
zw2ZtMMeAMhORVg=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjQo+2M/aeDp+nV28w1KDrm7J3e+g/HwH1dUC9xoV
XtubHL1xnCm/3KFjzoRVxw8/hcrXO2QGHG/R+H/PntH//m+d9mYH35C4m7pL
LkHVtztIrJve3n3xgH269aXJN8K6HSpMj/pszZkH1d/vYLjNI/1SWoL988mP
RJ0mT3SoX8ygVHVjFdS8yQ6urQJ7a5WP2Utx3XkoXj3VIe/8FpZVvNeg5k93
sNJcNM/X66G9X8PVtW+TZjrkCW3P8wh/DrVvtoPo04RfW63e2Dd+O1d52Guu
g7lc+299w/dQ++c7OE7+niZ87L19lNmTRT4zFzj4FZ3+tfjpW6h7FjrI7Lrm
qX//pX3Jxwcd5r2LHMJztLqlwp9A3bfYYaXlwmn+4Xfse9fczVNqXOIQcL7a
/tCiC1D3LnUwnv5C/mHGXvvl6bdCeEuXORQHv1h9SXce1P3LHa5PmMK5tn+C
/UGl61Y/MlY4zG83fSrWuxnqn5UO9yqa7nxddNL+1t3LCo9jVjmUNX39Hjnt
OtR/qx3KZxy4sOjIQ/svMy6wnQtY43DHS6lINuc51L9rHYo3CEz/9vy1PV/I
2Tc7XNY5XP2sOtWqHxa/6x3+rf5TdJPpvf0U9tSXgTIbHCYHhrZssHoLDY8N
Dq2fLDyWtLy0V0hNjnEX2+hwhs2ovLbsCTR8Njpw+J8qOr3qrv3aQ4nnbQQ2
ORReN22e/e4SNLw2OTxo7i/06jlib6WQ4GTEtdlhc5fN+9fzN0PDb7ODeNg2
MRn3NfYAtLxE8g==
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjQo+2M/aeDp+nV28wx4rRrMvF95B+fkOmWbWDVmF
r+1Njt44zpRf7mDMoG/amfwMKl/v8K3s1IvdmQ/sGf3v/9Zpb3b4zMh27vOF
K1D17Q4x3xObNvAetU+3vjT5Rli3w0Kfqq5J21dD9fc7PJ8gwbRsbYv988mP
RJ0mT3TQ0613EVi4GGreZAfl/PD9L7QP2ktx3XkoXj3VIev8ki3zpC9BzZ/u
YPjPyoNvxl17v4ara98mzXRQfrTxy9zVT6D2zXaIu2RlfOb8S/vGb+cqD3vN
dWhxKmkWqXoLtX++g/QvXo4Ktff2UWZPFvnMXODwMc861n/eO6h7Fjr0NSSv
vPfvtX3Jxwcd5r2LHMp2cL9+vuk51H2LHaxWi87cl/DIvnfN3TylxiUOjPHf
/sUvuAl171KHl19cZ1QYnbdfnn4rhLd0mcMv33dOBfIHoO5f7nB9Fs+7PXwb
7A8qXbf6kbHCYbOFGXde03qof1Y6uOxLdnv1a5/9rbuXFR7HrHIQtNFNYpt9
Fuq/1Q4tv9J9g7hv2H+ZcYHtXMAahw7D7PeFAg+h/l3rwHv32vsfF5/a84Wc
fbPDZZ3DN+MNDzcvfQn1/3oH5tKydZV8b+ynsKe+DJTZ4CD/cLXhnGNvoOGx
wSE+7+U9zeOv7RVSk2PcxTY6ZDFtTd7t+hIaPhsd5LmO1+1b+dR+7aHE8zYC
mxxSj86fm1X9EBpemxxYQxb96Zx3y95KIcHJiGuzQ7n3T78pSZeh4bfZQVG7
7ruz1xl7AGdbQwg=
          "]]}, {}}}, {}, {}, {{}, {}}}, {{{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4MSdLrDz/vJFz4+OXkHOWr+7ufD781Vxq2t0jD8gftHtaCskaK47dDaAjupH
DEP8zzJg32PWI/9A4jzvSvfhgAkY41hXPQom4uV/ddMiehweWU3zvblH8POw
teGFPemgRQvD3Ad0vHZbKeJNdDu0iagEfHpIR7V2K2b4Vy4EeJblDETQsTYr
bH+d9hfY/Mn5x88oOv76b9mx3xPJUK7GoykSTcd/sZO6r8bG4GL4K3e5ODp+
m68sbdkwCaJTBqk7X9DRWbSD21vJhmzz9n6LBDo+uX79wt6yZjhO9pV2TiL4
jCMH/v8+Y54Va49dTaHji0/O+qKqPZDqzngWnkbHImVzk/8CosC82rI+iUTw
o/G9SO62Ufi6ZZKwe3T8sfulg4D3FESHPjCpZdBx6Q0Rf7/N78FgXPFOP5uO
PwP0VT03N0Cv6cfCuWw6Bphwkm/Yc+Fu+un5Ffl0zMo+d0B7bT9sEVzU2fye
jjEKikurD16GOtcX/+kW0fHdo2W7VjkNw+UKPar5R4LPJ03PhkZPwwbl1rHT
5XRse7d0MX5JKbwPuazgV0XUgxutYP5fDTiPiJ5+WEvH9bfkrPVpHBA4QHuR
+JmIP3NOcV54EChvzduyGum4WJ3L7GvgA9Hj05IirXTsm4kbvJgzDFdEH590
6aDjim3Iufx9EtrLtiUXdNGx0WnoTMpxGuy+0Ti8po+OM59dSbNPOyFx25Ut
7oN0fK3xq787kgt8I+s8i0foWA+njyQafIILL3IYGyboaEMv3mOTWAWfbI7N
XJqmo35/hwzNjAtay/7srPhKR7zt1Z1T0g0xBS9vyMzQkeesR7Z3XCrMext+
8P1JR4nojY3u2yfhpFLf0k/zdBT7djC6JW8ESjpvH1BYpOOUUM2hA8uOw9PK
1WXveRj4yyVBR8B8CIzfDJx3W8rA5uADcqSBKfh5ky24jo+B5lJZuvvts4Dk
cJdUxM9Akm3szz+J7eC044iFhwAD+Vs8q7c3cmHlSiXO+uUM/Gab5r9NpwGK
xuYefxRi4Ejhqd+ji6Xg87Fi+yVhBtquHDhbV8sBhYS4JsmVDJTKj1RWP9MH
rf5uvuWrGFj/7qeUUugLeHDYYL3PauL+1OWDxWsnwEBjRZ70WgZSx0PvsUXG
YEqwy7FKjIGHDV+d/GITCAmDlIUr4gwMO7/pv8HmAbApvJkgu4GB/U17L+Zl
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
DQeTNGfV7rOR/DMlOCo1F/4H1XUyeQ==
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/d7XX6J5gQS9BKWfCvcovdESQ25dugz/A7adC7w=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mhMNIzAo0P6R9VgV0Fp0mF0zj0CNXbbCWT5dsP5KjKXJNgL9CLSCu3eNwUzP
h4LHLhFIN69aTS82A730Z9V+eEaga0bqaamni9AoEvMnwD8CL0QFKRYnkeGj
GeNLzrAIfIe32j31KJCW/Px2YVQENvyVi9enzkOkbsqMdEIElv5BfzrHefCj
0w0Yfx2BAz5KB9RrJ8FRuJvHPj0CD+WI6nI2DcDmg1qa+JwI3BXrTSw/1A5O
ph+GKwsjkEd1UHmbVgls+qYUTJdFoOk51nJt+XBwfhkRzFATgTpPMvX/uD+B
P8XeTy59jkCzRJGwlT+Z4NJlc1Opneq3zhHynbP18GdJ/4BjTwS+USgk1Nj0
wHPah8sJg1Q/bE+ve70ag63jEnXV4xFoc+K925DhDLhe50+YnY3AH6azHMtC
i7ClyGW7mxyBL9d3vEvSIYObyQGZy2sR6MyaRyw2o8A2Xxou5c0ITKcdWAq9
Tgb3pB9/nLZF4q6yUxqR5AXYVjzdnUQbicAnXvWDdgY8Onsya3dH4p6MRz/P
C46Bv3HvBRbzSOzkq1lO/W8SGLwbdgraRmIk0+JBac4BCEgoGtRwjsSTm5xs
z9ZagaHobb67RyTy3JNJ+F77EQI7ogPfvIjErCsfEwT9w2D3wgu9pmBqXL3l
edhfMwja6SBCCY9EnVuHX/5nkw27jxnuZ42NRI4LnLovTzdAsIDqotDLSPzm
uWx5k/krMMlL1WimRiIt8foRtu9jEGIkFOeZGYk/1p4Iy+TMAJPXOeu3eZEY
eFmWIdxkEULjD0m3fIxEF9hVke5IBuZC+lMrFZFoM60brfCUAmHtG5sH6iIx
2lt0TGc/NT4/1yncHImvZ2oDS94vAGFHf/rjL5FoFZ9xWqhwGliOfvb07o3E
Hv77Tl5Vo0DkL1Z/NxyJ/z4+Hv+zqxtY5N5daZuk8hvNLlqcr4FwwxiG7/OR
aH+cFafT3wKrp/8E27dInA1NblO6exci4hxLbqxHYsxP7H72KBZYC4yIOn8i
kb1QajWArQIi29SMfXdEYRafU0RRdwccnLsrlkEfheYdk2vFIkMQtV2YvYMp
CmOs5qvTGKfg4JHzq2usUVhiLKUcoTYP0dfYmw4fiUJLO49WS/FlOCTL8Er0
RBTWanH6HLtBAdLTTUe9s1HoddzwAv8GGQ55LCj48UTh4c8umq6eSxATO8Cd
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
cnPn5ggGXnbTUe2sHoSCs8tWqrxgYP/bo5RU8W7I3/Ri9FA0AxVeSzg18P1b
bveWcoNXDDwze+OV0Y93kBOXSrciMFCP/i9dWT0esm0g2JnIwI3zzWY/ZHZD
lmSty3UKP55bQpRPbCJkNtsfDaLx+XHpUUGgXgmkP5+UD2Pyv6+R+qL6oRHS
TH2XETgMfH13y0zY+h5IXS04xEpmoG8k+/jr4iFIro75kJPGwOalVcttM8bh
zRMFalkmn5/l4anbVaYgySDrXlMOA3krHh5/kcoDzgq98/35DHxmGrUnZgUP
2KWNR6bfMlAfygin9SeBee/clj9F/H72pqXXtY4AA2cWrSplIPfff9QbVv1A
/xvQt6GcgWrXXOOqZNsgsVCkSKGKgSTFcxPFupVA9SUQ99bw9WWy+pfbcDpQ
DuwK1Knn6yn/Qy/NLgjIP/IcTJsYeGX6i7T2zD0gZRpoO7QykHM5psavIQMS
rrdtdO9gYJ7CnYPm3yshXt31j083A3Osn6+7FNwGBN637pBeBu5pL1dbeNoP
cUn3C18OMPD5art7WstH4dUlcQJ1mM9PV3e3rguTELuTfCdtjIF/ON//mknw
wEpzr9NiLp9/Qk8u7CbwQMK03NBsml+PE4SmDa+40Ohkt4f8lYFmmQqMmbNj
EH57SurLdwa6BRLmOxgDYPQ0aPGRXwzcoCamYlDaDkLEteMRCwx82OpTdvBq
FVSk0+v7/jEwYYn1qXWW6RD88WCu+lImlourndxbfQP0OquJQSuYKG90Rakk
IxKW8BxD6gWZ+L3mou+uMwVQtHj2qpwIE40V7y/4hNWD/7pgKw9RJq5b7yw1
R+6GQ4pS2kVrmRjApqZLhQzBnGbSdtH1TLSWkem52DcO2aYgclaaiY/6Cdov
vafAy7nxW8pGJkrNHnZXzubBHm+X7n9y/PVn63+azlMw83Tuw0l5JvpnmrLk
C8YhmfiUQ9zBRHp2d4Wi9RBcztj0YlqJiRHvTLBVsxt2lqf5gir/79m3f/7d
Ww8jnXrnw3cz0WHLCZMz5/Ihkdd2vHcvE3cU312kJh4B55dc3q12gIm7GdNK
b/1vg5zk3w2Bh5n4uqpqec2ODOhRjFxUp83EzUdpDf6in4CgJT+2SYeJ5LkX
Oo+2dYCdWU7d1aNMtL93/u22Vv4TxMUw550BEx+2WBamPhyDVu/PCauNmKjH
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
sjQ=
          "]]}}}, {}, {}}}, {
    Frame -> {True, True, False, False}, Axes -> False, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], ImageSize -> Medium, FrameLabel -> {
       FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 4999.175718266285}, {0, 1.}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 4999.175718266285}, {0, 1.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K, \
\[Tau]=\\!\\(\\*FormBox[\\\"2348\\\", TraditionalForm]\\) \[Mu]s\"", 
        StringForm["`` \[Mu]K, \[Tau]=`` \[Mu]s", 0, 2348], Editable -> 
        False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K, \[Tau]=\\!\
\\(\\*FormBox[\\\"234\\\", TraditionalForm]\\) \[Mu]s\"", 
        StringForm["`` \[Mu]K, \[Tau]=`` \[Mu]s", 50, 234], Editable -> 
        False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K, \
\[Tau]=\\!\\(\\*FormBox[\\\"75\\\", TraditionalForm]\\) \[Mu]s\"", 
        StringForm["`` \[Mu]K, \[Tau]=`` \[Mu]s", 100, 75], Editable -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8200179526969323`*^9, 3.820018057740781*^9}, {
   3.820018105101287*^9, 3.8200181667705183`*^9}, 3.8200183268425236`*^9, {
   3.820025806970149*^9, 3.82002584636587*^9}, 3.8200597126007805`*^9, 
   3.8200609229701824`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "fname", "=", 
    "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_decayfits_RIN_\
frequencyfits_50_100_150_uK.png\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"fname", ",", "plt"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.820018341646467*^9, 3.8200183514888864`*^9}, {
  3.820059426016796*^9, 3.8200594375879087`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["\<\"..\\\\images\\\\plot_groundrydberg_Rabi_oscillation_\
decayfits_RIN_correct_frequency_50_100_150_uK.png\"\>"], "Output",
 CellChangeTimes->{3.820018361747261*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run - positional error", "Subsection",
 CellChangeTimes->{{3.8198162061352124`*^9, 3.819816213907926*^9}, {
  3.819816295509672*^9, 3.819816295846021*^9}}],

Cell["\<\
Todo. use the frequency from the 0K frequency scan for the two-photon \
resonance, but do Rabi oscillations at 75 K stepping the 480 beam a varied \
amount in y for each oscillation. Not trivial-- need to make a function \
InitializedBeamPosDependentQuantities to move the beams and re-define stuff.\
\>", "Text",
 CellChangeTimes->{{3.819816300123455*^9, 3.8198163007715673`*^9}, {
   3.8198164043786287`*^9, 3.81981651969147*^9}, 3.8198250682038336`*^9, {
   3.819852694071585*^9, 3.819852741050108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground", 
     " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"3", "*", "2", "\[Pi]", " ", 
      RowBox[{"scl", "/", "\[CapitalOmega]Eff"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "fTable", " ", "and", " ", "TTable", " ", "should", " ", "be", " ", 
     "same", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y480Table", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10", ",", "100", ",", "1000"}], "}"}], "/", 
      RowBox[{"(", "1*^9", ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"480", " ", "beam", " ", "displacement"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", " ", "=", " ", "75*^6"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"atom", " ", "temp"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"useRIN", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"T", "\[NotEqual]", "0"}], ",", "True", ",", "False"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measurements", " ", "=", " ", "50"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runtime", "=", 
     RowBox[{
      RowBox[{"Timing", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "y480Table", "]"}], "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"y480", "=", 
            RowBox[{"y480Table", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"time", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"avgsNum", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", "0"}], ",", "measurements", ",", 
              "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "simulate", " ", "beam", " ", "misalignment", " ", "by", " ", 
             "adding", " ", "an", " ", "offset", " ", "to", " ", "atom", " ", 
             "position", " ", "on", " ", "either", " ", "the", " ", "params", 
             " ", "passed", " ", "to", " ", "the", " ", "first", " ", "or", 
             " ", "second", " ", "photon", " ", "matrix", " ", "elements"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
              RowBox[{"AtomPositionSample", "[", "T", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"T", "\[NotEqual]", " ", "0"}], ",", 
              RowBox[{"MaxBoltzVelocitySample", "[", "T", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r1", "[", "t_", "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"vx", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"y", "+", 
               RowBox[{"vy", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"z", "+", 
               RowBox[{"vz", " ", 
                RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r2", "[", "t_", "]"}], ":=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "+", 
               RowBox[{"vx", " ", 
                RowBox[{"t", "/", "scl"}]}]}], ",", 
              RowBox[{"y", "+", 
               RowBox[{"vy", " ", 
                RowBox[{"t", "/", "scl"}]}], "+", "y480"}], ",", 
              RowBox[{"z", "+", 
               RowBox[{"vz", " ", 
                RowBox[{"t", "/", "scl"}]}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"args1", "[", "t_", "]"}], ":=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"r1", "[", "t", "]"}], ",", 
              RowBox[{"{", "t", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"args2", "[", "t_", "]"}], ":=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"r2", "[", "t", "]"}], ",", 
              RowBox[{"{", "t", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"soln", " ", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"avgstep", "=", "1"}], ",", 
             RowBox[{"avgstep", "<", 
              RowBox[{"avgsNum", "+", "1"}]}], ",", 
             RowBox[{"avgstep", "++"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "on", " ", "each", " ", "frequency", " ", "step", " ", "need", 
               " ", "to", " ", "recalculate", " ", "the", " ", "RIN", " ", 
               "time", " ", "series", " ", "and", " ", "parameters", " ", 
               "that", " ", "depend", " ", "on", " ", "it"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "InitializeRINDependentQuantities", "[", "useRIN", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Haf", "[", "t_", "]"}], ":=", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", GridBox[{
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args1", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    "0"},
                   {
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]1", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", " ", "+", " ", 
                    RowBox[{"dUge", " ", "@@", 
                    RowBox[{"args1", "[", "t", "]"}]}], "+", "f"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args2", "[", "t", "]"}]}], ")"}], "/", "2"}]},
                   {"0", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]2", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], ")"}], "/", "2"}], 
                    RowBox[{"\[CapitalDelta]1", "+", 
                    RowBox[{"dUge", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], " ", "+", " ", 
                    "\[CapitalDelta]2", " ", "+", 
                    RowBox[{"dUer", "@@", 
                    RowBox[{"args", "[", "t", "]"}]}], "+", " ", "f"}]}
                  }], ")"}], "/", "scl"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<building hamiltonian\>\"", "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
               RowBox[{"BuildSchroedingerSystem", "[", 
                RowBox[{
                 RowBox[{"Haf", "[", "t", "]"}], ",", "\[Psi]0"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "\"\<solving system\>\"", "]"}], ";"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"result", "=", " ", 
               RowBox[{"Timing", "[", 
                RowBox[{"First", "@", 
                 RowBox[{"NDSolve", "[", 
                  RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"time", " ", "+=", " ", 
               RowBox[{"result", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"soln", "+=", 
               RowBox[{
                RowBox[{
                 RowBox[{"result", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", "avgsNum"}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"solnList", ",", "soln"}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<ran step ``/`` in `` mins\>\"", ",", "i", ",", 
              RowBox[{"Length", "[", "TTable", "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"time", ">", "60"}], ",", 
                RowBox[{"Floor", "[", 
                 RowBox[{
                  RowBox[{"time", "/", "60"}], "//", "N"}], "]"}], ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"time", "/", "60"}], "//", "N"}], ",", "2"}], 
                 "]"}]}], "]"}]}], "]"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Total run time `` mins\>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"runtime", ">", "60"}], ",", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"runtime", "/", "60"}], "//", "N"}], "]"}], ",", 
        RowBox[{"NumberForm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"runtime", "/", "60"}], "//", "N"}], ",", "2"}], "]"}]}], 
       "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}, 3.8120364783405857`*^9, {3.8120419406238565`*^9, 
   3.812041941820767*^9}, {3.81479356605363*^9, 3.814793566583889*^9}, {
   3.8147935991931124`*^9, 3.814793678026719*^9}, {3.8147937220198603`*^9, 
   3.8147937387522907`*^9}, {3.814793780332354*^9, 3.8147937805756316`*^9}, {
   3.818890479136215*^9, 3.8188905038644905`*^9}, {3.8188909102749157`*^9, 
   3.818890973544738*^9}, {3.8188911190899887`*^9, 3.818891119799724*^9}, {
   3.8192015284491224`*^9, 3.8192016169581556`*^9}, 3.8192016849604907`*^9, {
   3.819201768169551*^9, 3.819201772107477*^9}, {3.8192019292898216`*^9, 
   3.819202018445759*^9}, {3.819203631184203*^9, 3.81920367612117*^9}, {
   3.819203716272231*^9, 3.81920372283805*^9}, {3.819203959178084*^9, 
   3.8192040838950205`*^9}, {3.8192041294238963`*^9, 
   3.8192041470701847`*^9}, {3.8192325366341133`*^9, 
   3.8192326635049267`*^9}, {3.819232698000661*^9, 3.81923270724561*^9}, {
   3.8192328073485184`*^9, 3.8192328477219267`*^9}, {3.8192328925458407`*^9, 
   3.8192328934486446`*^9}, {3.819232929281372*^9, 3.8192329367399273`*^9}, {
   3.8192329718543844`*^9, 3.8192330002580605`*^9}, {3.819233064910223*^9, 
   3.8192331365874405`*^9}, {3.8192331677565136`*^9, 
   3.8192332038320203`*^9}, {3.819234604878256*^9, 3.8192346728224587`*^9}, {
   3.8192347113606024`*^9, 3.819234774075638*^9}, {3.8192349459745445`*^9, 
   3.8192349621475596`*^9}, {3.8192352580918417`*^9, 3.819235271279897*^9}, 
   3.8192353911200037`*^9, {3.819235422735242*^9, 3.819235479077521*^9}, {
   3.8192355727918425`*^9, 3.819235595669992*^9}, {3.8192356404965076`*^9, 
   3.8192356484929395`*^9}, {3.819235756330975*^9, 3.8192357737266655`*^9}, 
   3.819235812260604*^9, {3.819235863974307*^9, 3.8192359326516776`*^9}, {
   3.819236120414153*^9, 3.819236125577258*^9}, {3.8192362361592636`*^9, 
   3.819236240635622*^9}, 3.8192374983109245`*^9, {3.8192377696558433`*^9, 
   3.81923778718381*^9}, {3.8192378555867305`*^9, 3.8192378729639797`*^9}, {
   3.8192379195930595`*^9, 3.8192379534822454`*^9}, {3.8192382849365964`*^9, 
   3.8192382947421436`*^9}, {3.8192385248351116`*^9, 3.81923857828841*^9}, {
   3.8192388570756507`*^9, 3.8192388706479034`*^9}, {3.819238933196875*^9, 
   3.8192389399791336`*^9}, {3.8192427630850363`*^9, 
   3.8192427659321737`*^9}, {3.8192429318449025`*^9, 3.819242950737444*^9}, {
   3.8192431539780354`*^9, 3.819243164267486*^9}, {3.8192434557428184`*^9, 
   3.8192434570533705`*^9}, 3.81928861777033*^9, {3.819288974299965*^9, 
   3.8192889786747026`*^9}, {3.8192894220351458`*^9, 
   3.8192894220411034`*^9}, {3.819300383113629*^9, 3.819300489847483*^9}, {
   3.819303264909413*^9, 3.819303268160434*^9}, {3.819303350102517*^9, 
   3.819303359395898*^9}, {3.8193058040789294`*^9, 3.819305827643179*^9}, {
   3.819305859168288*^9, 3.81930587318677*^9}, {3.8193060081191487`*^9, 
   3.819306030785101*^9}, {3.819306095927794*^9, 3.8193061121322527`*^9}, {
   3.8193061439882965`*^9, 3.819306215550415*^9}, {3.8193062719254756`*^9, 
   3.8193063379218216`*^9}, {3.8193064180920115`*^9, 3.819306672388347*^9}, {
   3.81930670657456*^9, 3.8193070192404284`*^9}, {3.8193070496464696`*^9, 
   3.819307094301133*^9}, {3.8193071542985106`*^9, 3.819307156511718*^9}, {
   3.8193071905871334`*^9, 3.8193072113962555`*^9}, {3.8193073546116667`*^9, 
   3.819307494213092*^9}, {3.819315470400198*^9, 3.81931547130735*^9}, {
   3.8193155410917997`*^9, 3.8193156364077654`*^9}, {3.8193156789841623`*^9, 
   3.819315835601692*^9}, {3.8193173289684224`*^9, 3.81931742241566*^9}, {
   3.8194097089389324`*^9, 3.8194097517626915`*^9}, 3.819409812022467*^9, {
   3.8194099368763847`*^9, 3.819409951986514*^9}, {3.819410151063843*^9, 
   3.8194101818458395`*^9}, {3.819410236395419*^9, 3.8194102631633577`*^9}, {
   3.8194103078496227`*^9, 3.8194104936996408`*^9}, {3.8194105308624*^9, 
   3.819410747472289*^9}, 3.819412264693054*^9, {3.8194135541052437`*^9, 
   3.81941362682642*^9}, {3.8194137034791317`*^9, 3.8194137217506833`*^9}, 
   3.8194145169371386`*^9, {3.819414610532843*^9, 3.819414622913555*^9}, 
   3.8194521583747473`*^9, {3.819456656915118*^9, 3.81945667831774*^9}, {
   3.8194594421325903`*^9, 3.819459445620172*^9}, {3.819459822794724*^9, 
   3.8194598499466295`*^9}, 3.8194599499262476`*^9, {3.81945998576124*^9, 
   3.8194599897242117`*^9}, {3.819462695604034*^9, 3.819462767921038*^9}, {
   3.8194629666689253`*^9, 3.8194631314556656`*^9}, {3.819463204741235*^9, 
   3.819463236687443*^9}, {3.8194640280046797`*^9, 3.8194640355745287`*^9}, {
   3.8194641518606763`*^9, 3.81946417154265*^9}, {3.8194642180514965`*^9, 
   3.819464226772186*^9}, {3.8194649473987474`*^9, 3.819464948088623*^9}, {
   3.8194650014492345`*^9, 3.819465057255636*^9}, {3.8194652748539376`*^9, 
   3.819465437929993*^9}, {3.8194654792306137`*^9, 3.8194654850221386`*^9}, {
   3.8194658366466274`*^9, 3.819465837422733*^9}, {3.8194660050989833`*^9, 
   3.819466013793743*^9}, {3.819466168513215*^9, 3.8194661863792953`*^9}, {
   3.8194663905809155`*^9, 3.8194664081990604`*^9}, {3.819466759159521*^9, 
   3.8194667619072065`*^9}, {3.8194669753118963`*^9, 
   3.8194669810992985`*^9}, {3.819467163586125*^9, 3.819467209747701*^9}, {
   3.8194679891378355`*^9, 3.819468030497486*^9}, 3.8194681183014746`*^9, {
   3.819469320963646*^9, 3.819469360082926*^9}, {3.819469507135427*^9, 
   3.8194695233829894`*^9}, {3.8194696389243965`*^9, 3.819469650141816*^9}, {
   3.8194697302092733`*^9, 3.819469748857415*^9}, {3.8196662727252293`*^9, 
   3.819666306035389*^9}, {3.8196665121264973`*^9, 3.8196665334739437`*^9}, {
   3.819669317466673*^9, 3.819669322438582*^9}, {3.819671174408489*^9, 
   3.819671175255849*^9}, {3.81967258809729*^9, 3.8196725896421113`*^9}, {
   3.8196729595871363`*^9, 3.8196729598281455`*^9}, {3.8196730415739374`*^9, 
   3.8196730485043497`*^9}, {3.8196732510003986`*^9, 
   3.8196732584444585`*^9}, {3.8196733547658367`*^9, 3.819673362693434*^9}, {
   3.8198027179663506`*^9, 3.819802727087193*^9}, {3.819802999443404*^9, 
   3.819803212436143*^9}, {3.8198120929386597`*^9, 3.8198120998933706`*^9}, {
   3.819812139100168*^9, 3.819812153910636*^9}, {3.819812187574404*^9, 
   3.8198123682048874`*^9}, 3.8198124212242584`*^9, {3.8198124579578257`*^9, 
   3.819812496228352*^9}, {3.819812906939867*^9, 3.81981290749551*^9}, {
   3.8198129922844114`*^9, 3.8198130629379635`*^9}, {3.8198131253967447`*^9, 
   3.8198131321322527`*^9}, {3.819825182485694*^9, 3.81982527712241*^9}, {
   3.819825309582905*^9, 3.819825405495739*^9}, {3.8198256599739227`*^9, 
   3.819825666950266*^9}, {3.819825874831174*^9, 3.81982598773234*^9}, {
   3.8198260994169316`*^9, 3.819826105790785*^9}, {3.8198261367599974`*^9, 
   3.8198262546018133`*^9}, {3.8198525812396746`*^9, 3.819852644258773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0026\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 1, 3, 
   NumberForm[0.0026041666666666665`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852583477241*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0023\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 2, 3, 
   NumberForm[0.00234375, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.8198525837544775`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0029\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 3, 3, 
   NumberForm[0.002864583333333333, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852584017575*^9}],

Cell[BoxData[
 InterpretationBox["\<\"ran step \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\)/\\!\\(\\*RowBox[{\\\"3\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.0036\\\\\\\"\\\"}]\\) mins\"\>",
  StringForm["ran step ``/`` in `` mins", 4, 3, 
   NumberForm[0.0036458333333333334`, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.8198525843097863`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Total run time \\!\\(\\*RowBox[{\\\"\\\\\\\"0.016\\\\\
\\\"\\\"}]\\) mins\"\>",
  StringForm["Total run time `` mins", 
   NumberForm[0.01614583333333333, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8198130872176476`*^9, 3.819813138320979*^9, 
  3.819852584315771*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"leg", "=", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<`` \[Mu]K, `` MHz\>\"", ",", 
         RowBox[{
          RowBox[{"TTable", "[", 
           RowBox[{"[", "#", "]"}], "]"}], 
          RowBox[{"(", "1*^6", ")"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"freqScanFitList", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<BestFitParameters\>\"", 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
      RowBox[{"Length", "[", "freqScanFitList", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"solnList", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "]"}], "2"], "&"}], ",", 
       RowBox[{"Length", "[", "solnList", "]"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Ground-Rydberg Rabi Oscillation\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "16"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Two-photon pulse duration [ns]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(Ground\\\ State\)]\)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.819813275851759*^9, 3.819813410386195*^9}, 
   3.819813454354553*^9, {3.8198135239072404`*^9, 3.8198135508270884`*^9}, {
   3.8198135815099916`*^9, 3.8198136276734962`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MPIa/geD75SC
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(Ground\\\\ State\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"Two-photon pulse duration [ns]\"", TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 14], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Ground-Rydberg Rabi Oscillation\"", FontSize -> 16, StripOnInput -> 
        False], TraditionalForm], PlotRange -> NCache[{{0, 
         Rational[56000000000000000, 11201846695523]}, {0., 
        0.9999999985727919}}, {{0, 4999.175718266285}, {0., 
        0.9999999985727919}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.216587457411112`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 0, $CellContext`\[Mu] -> -14.216587457411112`], 
        Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.229909574326399`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 50, $CellContext`\[Mu] -> -14.229909574326399`], 
        Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"100\\\", TraditionalForm]\\) \[Mu]K, \
\\!\\(\\*FormBox[RowBox[{\\\"\[Mu]\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"14.261490199333716`\\\"}]}], TraditionalForm]\\) MHz\"", 
        StringForm[
        "`` \[Mu]K, `` MHz", 100, $CellContext`\[Mu] -> -14.261490199333716`],
         Editable -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 14], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819813363308201*^9, 3.819813458082431*^9, 
  3.8198135987210474`*^9, 3.8198136548229604`*^9, 3.819815622519642*^9, 
  3.8198160672575502`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "fname", "=", 
    "\"\<..\\images\\plot_groundrydberg_Rabi_oscillation_scanfit_0_50_100_uK.\
png\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"fname", ",", "plt"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8198137039247265`*^9, 3.819813730605784*^9}, {
  3.8198160476916523`*^9, 3.819816074977964*^9}, {3.8199835812244883`*^9, 
  3.8199835814474254`*^9}},
 EmphasizeSyntaxErrors->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc testing", "Section",
 CellChangeTimes->{{3.8194568337169476`*^9, 3.8194568379666376`*^9}}],

Cell[CellGroupData[{

Cell["RIN data to time series", "Subsubsection",
 CellChangeTimes->{{3.819456946258193*^9, 3.819456956348152*^9}, 
   3.8194574837036724`*^9, {3.819458376311167*^9, 3.8194583869456005`*^9}}],

Cell["780A RIN data, post-noise eater", "Text",
 CellChangeTimes->{{3.8194592742753935`*^9, 3.8194592863487315`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"VDC", "=", "0.310"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "fname", "=", "\"\<srs_filtercav_noise_eaten_rin_20201223.asc\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"contents", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"fname", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"header", " ", "=", 
   RowBox[{"contents", "[", 
    RowBox[{"[", "14", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"HzPts", ",", "dBVpkPts"}], "}"}], "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"contents", "[", 
     RowBox[{"[", 
      RowBox[{"15", ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dBVpkPts", "-=", 
   RowBox[{"10", 
    RowBox[{"Log10", "[", "VDC", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RINData", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"HzPts", ",", "dBVpkPts"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8194571026276455`*^9, 3.8194571612992177`*^9}, {
  3.819457309573141*^9, 3.8194573208999853`*^9}, {3.819457486352996*^9, 
  3.8194575112408476`*^9}, {3.819457633214981*^9, 3.81945763750745*^9}, {
  3.8194578251097155`*^9, 3.819457841580284*^9}, {3.8194578959781523`*^9, 
  3.819458050021988*^9}, {3.8194580975524654`*^9, 3.819458151401802*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"fdata", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819457645150489*^9, 3.819457647510519*^9}, {
  3.8194577473811693`*^9, 3.8194578526985407`*^9}, {3.819457946273595*^9, 
  3.819457948999111*^9}, {3.819458322204796*^9, 3.819458338341813*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 102400.}, {-75.4418, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.819457512885433*^9, 3.819457572779807*^9, 3.819457640352894*^9, {
   3.819457752190879*^9, 3.819457811757634*^9}, 3.819457853260895*^9, 
   3.8194581893216295`*^9, {3.8194583271683702`*^9, 3.819458338809125*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timeRIN", "[", "t_", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dBVpkPts", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "/", "10"}], ")"}]}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"HzPts", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "t"}], "+", 
            RowBox[{"RandomReal", "[", "]"}]}], ")"}]}], "]"}]}], "&"}], ",", 
      RowBox[{"Length", "[", "dBVpkPts", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.819458368623186*^9, 3.8194583695414534`*^9}, {
  3.8194584267052593`*^9, 3.819458488630851*^9}, {3.819458703065729*^9, 
  3.819458843010213*^9}, {3.8194592286536636`*^9, 3.819459231696415*^9}}],

Cell[BoxData[
 RowBox[{"timeRIN", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.8194589271098003`*^9, 3.8194589296698475`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{"0.12732698340348503`", "\[VeryThinSpace]", "+", 
   RowBox[{"0.2240973466854182`", " ", "\[ImaginaryI]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8194589638280244`*^9, 3.8194589762592344`*^9}}],

Cell[BoxData["0.12732698340348503`"], "Output",
 CellChangeTimes->{{3.819458968488312*^9, 3.8194589768434343`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"timeRIN", "[", "t", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "0.0001"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8194588602065496`*^9, 3.8194588847845573`*^9}, {
   3.819458940048662*^9, 3.819458979183031*^9}, 3.8194590763582144`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
hKhe9DneXITcP9468MeLIJnP4xuUkoJiTnBEv3FchNftPJv2R4sRjt07H/l9
EchFBUh0CAW4HfXEdPguwrh1n+hI+C8035bLTRW6CDzhbCMSp/3QEUO/37di
FsGPt/C2QWcKOn3oPY9F8iKMFuTSrY3/QELBivFJ2Qfnb35SDIz4IgUBft4R
vAgndriX5BYssU4tZSJj9SJUyBZ4WDZmYGuN6UsKjYvQF6DJGLIWi/w2qpPs
OxbBiKp+mPR2GU52j+bLG1gEn64rDdkdBajqvH3K/MQilCS9vUGUm4f7CzWu
nFtchHva9W9fhhehdWWU9mRzEaK/6L3nOV2Bj8+wCHgQLQHjyeavcTHFmMtu
K72CbAl+vuUgf07pjBBTx7XtE0vwqdu7PrIjBz9KzczkZ1qCV4TQp/QdsthI
2lvw1ZklkNZ6fet1RwZy6jfODuJZgrHFodTHtNko1Ez+RtPVJehZla2Ld4jA
2ZS8uYdvLoHgWhVxZKoD+htFJiJ6awn0L/OSecjnovGb43lvZZdASMXKRDy+
BO03l9+MUVqC4S/c9TWhJeiUXkRBz9MliDNg476y64L5iGzEaLSXYHa07dM7
ngJ81/9Z0V2DJSh0uHuMdcUXPee7iaxMl+B9rb7D2jVnbF7JUJz2aQkIYYd7
eiYeY/dna+IT9ktQ/NT4UeFLXxSz0lLC+m0JRBprJJs/fMH4a6qk0o8lOEI9
zhpU5YXaz7iXOf9cArkCVYpn0qF4PtdAqujXEhyaf3S5eF8DHXkgU7GcuAQT
ISI3Ww729ekJrjsXspbg0hyD2vW2UiRkfahKvWgJzih0Pjd1zkQK9MN3fSqX
gPdtRs+kQxTSSSyurmlYAjNjExKn9iRkLRVyb79tCdYtHxe0WeUjv27L2mv9
S7BIOd8Pu6U4+d1jWb3xJYAPBCqye8W4ikyoPnT+//Xk3Tn/sRT1h52Ua11f
gm+FjkeP3svE60JLf8gJy+DCeFY947IDOv73r7z40WXI3uQKm/jyGHG9Svz7
nnoZ4glUNm7ypRjtuv4Xz7AMp8btrK6/9UKPfHSbBtiXgYjtSn/3gwhkdPGO
Iv2FZfjNYcBJ7JuNnUo5W2SvLMPcOeensjoRqC+xJ+iqyDIkkkQZvCyKwYIB
P7QZby2DYOoZxs6lcPTNXv4S4f4yuEYfi7HSzMMjRkfWxpSXoaA86OQ32kAs
+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
n6Cfv/+hdRA=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.819459149673397*^9, 
  3.8194592388258524`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXXusbUdZX91r7cd53HMfvbT3XulLrlh5lUQT638aEyVGkT80ISa2vS09
KSFwG6gREog9WAsmyCOoRO0RTCBWFBW1l2qkVImUSMkRSKg8IiFELgGTagig
EHI8v5n5Zr6Z/c1as55773vOH+fevddea+ab7/v9fjPzzay1fuHCfffc/coL
9738rgs3/uyrL9x7z8vves2NP3Px1QeH8quy7Kp7siz75I0ZPu8ffDT/nMn2
9/ezfH97e1t9Un/498XqY5b0u/q59lXL/nsnrfq8PnbHP+99Zf+2nUd+8qkv
/Vd274qcvqeP4bT7//Lxz5/41ne+m80aFYHLcfqN33j622IRZ/UxVIHvZ/77
m/+b/VIYi4eFC8/XqwCfcQy/eRUEdpvTP/KmP/k4Tlff3iIUq6oa3frFrzx9
roUhphGz737v+ziurn1+PeNuE6p6btTgL736HY+lGnzKGXzzV7/xTfWtiDcC
5eAYyq3biJe46nH8hV++/D/ZRh8NU8aZhuH7u//og5/qqmGb+hiMRyNe9Kkv
fD1bjzeWzFSN6K+xJ9UVqvLctladJrT4nIDHqTo28bxwcARNgh3PqXSIV8NE
l+bVYErDOcf0JcCbai++/VRbf2U5DP3OXb/1ISUvZ3v0nOelCs9N/DpVMTdp
b+or17K93e0MHt3e3skuXTYdz/5etrtzKbsMlT34vVBnjLOdS5ethQd/KhJb
8QhIVuG7RuwYP+MnoBmNV2640aEZDVDfbkiMzjP0sT/9/Q/sve19f/9ZTjrv
vM3yKNqImaa99m8/+kXYo77Nlj+yxvvZ/t5utm2iyD7n1ozL2aWd7Wx3b99c
kkwtilYksPwSG9iTQnGbtYI98QJ2cATAQfd4XFeLS17y5FNfwzcUp2I2Tox/
LqjoKI4J26zamMg1JlT7ydWjWpiYSph4+p7f/gdVcdBgDoyDhl++tJvt7Oy4
v12Nj8uXdhi7D9i/vZvt7e+bwrRI7O45Ro0BlfU+EDL1ijs44n2ftUMMXWcQ
w7vnpUSMUS8MXfGdKxXqhTKpMo3QPPXrv/dPUL+uQGXbKoFq5myz3ew1vgIB
VZAXjSrIjULVhBQIomRQlTsFIlo3V6CJhC+ccqJDiJlWoL/HueraUbew0ygu
7n30if/4q3f82ZN0vA3ydDUTbjVHYQkIPYCY86glGn7q36l1mvlLBOBaGQBt
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
B7YOjikWefUmcoarbHHAIohzYHmUGwpYBQcWOrOpZPTyYwtnLwpbvLEp2Mqd
O7GMR/iSWL0hBL1vyKlx8QjSNx4SfCh7CcAXfZfZ6gDSd8A1HIhzS47GuwSO
AIued01jvbX3LrCoG7vGH9jGG6cG54RN9oBx3y5V8OB4nTiX2FgzdneL15mE
V/xPb6WSqmgKXYpGJ9CVXv5irvUe0zftAuKi1i4e32PuJWoZnU/41sbGbAsw
PhWUqjhMuCer6uN+JPzAMhH2HaEbsgGoiaanMCAXbDeqFkadLkvlh8ctHfH1
Mn7Q5BFlnemEFtI7hqRNgM2oMuVUwXFIO45hssCpg7OpbN4VSBQmmDpKhNsl
EghTcMLY0VACZ8x96HwaH/Inq0Eg49fwJY3KF+uLIZKaFndBJL6ciN9qEInO
6YNIyHNRx9Q5kTys9Egkepxw2AfNEckMAfFWd3IIfj/WF5dsLyZyaRKONGDX
S5586mvslZ0NuyLj2LCCRTJJ1d0zk2z0GjIJ16tFEhZfu2AyK2cSH9gcGibh
Nx7gKJP0Mbz6XEM/Bho3oFTVbLTmFCxEUUec6oFT/C3zMU7hmILVAjlV0Owa
ldv3VzpaKc4vGa3Irwm0ssfGzsUBmruiFaUjKmjF3uSJT0SvYqHMwlinKbPm
3m6oQmlY5zls/TAyjE3uJeBZDjTj2Ny9MWbXRwm9NiR64RfkEF70qS98nZys
fjfvPOfV0G8ok82/GlJtzKmGtQe1QFNU843KruBb7hhE027iXNaAdCw/j991
/gZNijNvEmMefzHlEe3q045NimlVj6iXpXJPmdsp9yYh97DHFT+PyulH3xdI
P/tbd/QzFMCNboQKTkHDQLoPrgYDeWAGZKCUly1WkpVjWnb0vDuR2QlhVrwq
Y+ckXFeiBhlHetmXSUOC2h1+jQmaewRVx2pSE5O1FaDmzV/9xjerqUlhjVCT
Cm1FzYmAYvbu9YCuc6R44C8e+xyOoUFNGYvsEQ0AFsVYjK74NCGZsaZMdR+B
dWxMiebvGuGb7qi66n6VD2dtvzp2ljjXKz+PicXwMhL3+jdVSk7VuvJHGs0Q
Fo4hExTCqQcvk1P34BVOJZvQWUW8gs5miE8ICpIkAqPtbAA7vuGu9RJSjxxm
LA7GMqnpmoWS2gBKSlJhJJbA8bl9Fxr7Qq5G6nEryK4K541Rjh2lkX7iv/dc
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
wCISG/Xvi2v8rn6ufdUK/55d9f/0g85B\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 805},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 302, 4, 84, "Subsection",ExpressionUUID->"b6aa20e3-ffe9-4094-bc5a-4f559a54b4c2"],
Cell[885, 28, 151, 3, 34, "Text",ExpressionUUID->"a38413a9-f26f-4ace-9d92-fa36a4575f35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1073, 36, 216, 4, 67, "Section",ExpressionUUID->"27e79af6-167b-47d6-b7d3-7ae057014df8"],
Cell[1292, 42, 73, 1, 30, "Input",ExpressionUUID->"d544aee8-ec1d-4b69-a86a-3363ecdddc31"],
Cell[1368, 45, 17989, 471, 1622, "Input",ExpressionUUID->"a4619dc3-e949-450e-a152-bfcac121f0c4"]
}, Closed]],
Cell[CellGroupData[{
Cell[19394, 521, 234, 4, 53, "Section",ExpressionUUID->"508c615f-4c6a-4671-acdb-c345f6bb7547"],
Cell[CellGroupData[{
Cell[19653, 529, 6290, 134, 487, "Input",ExpressionUUID->"e8921aac-a5dd-4076-93cc-196a165ef92a"],
Cell[25946, 665, 1429, 34, 101, "Output",ExpressionUUID->"9330d079-536f-4f90-aad9-ab55f377bbbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27412, 704, 4469, 99, 187, "Input",ExpressionUUID->"feaff679-05ae-4fbc-a605-c888c0572ea7"],
Cell[31884, 805, 276, 7, 22, "Print",ExpressionUUID->"08bf5d3b-bc0d-4941-91b2-0fab39d698a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32197, 817, 1642, 43, 120, "Input",ExpressionUUID->"8252c0fe-7e76-43ec-92d9-34209242d70c"],
Cell[33842, 862, 92491, 1593, 280, "Output",ExpressionUUID->"025a74d3-46c1-4716-8dd2-bc3ca393e4d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126370, 2460, 3618, 70, 120, "Input",ExpressionUUID->"f9df3ade-9666-4fcb-bece-85656e97e99a"],
Cell[129991, 2532, 946, 16, 22, "Print",ExpressionUUID->"dc20c240-9899-4dd8-9ab6-4dcd35ab2d9d"],
Cell[130940, 2550, 120004, 2043, 280, "Output",ExpressionUUID->"4a46115f-9659-4808-b24b-2c39b5c2b440"]
}, Open  ]],
Cell[250959, 4596, 94, 1, 30, "Input",ExpressionUUID->"675ee83d-5666-4182-936e-a4b2c227a941"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251090, 4602, 207, 2, 70, "Section",ExpressionUUID->"c1044b77-05be-4fbf-bbde-67c42d347eb8"],
Cell[CellGroupData[{
Cell[251322, 4608, 94, 1, 49, "Subsection",ExpressionUUID->"19e3fa86-494f-41b0-abeb-cb1b2bfa7385"],
Cell[251419, 4611, 364, 9, 30, "Input",ExpressionUUID->"d8a7136a-5347-44d1-bff9-1ee340b5eee0"]
}, Closed]],
Cell[CellGroupData[{
Cell[251820, 4625, 98, 1, 41, "Subsection",ExpressionUUID->"23c3d9c8-0a2b-4f59-acdf-ac33783f6bc5"],
Cell[251921, 4628, 4737, 123, 449, "Input",ExpressionUUID->"bcf28e5f-b585-4600-ab29-0e01e11ab34b"]
}, Closed]],
Cell[CellGroupData[{
Cell[256695, 4756, 176, 2, 41, "Subsection",ExpressionUUID->"d87b76da-00c9-451b-b5c4-f0bdb8ff5012"],
Cell[256874, 4760, 16916, 390, 1225, "Input",ExpressionUUID->"b0c1093b-a219-49cd-95bd-3e3ca91a9ee9"],
Cell[CellGroupData[{
Cell[273815, 5154, 203, 2, 88, "Input",ExpressionUUID->"2a9d925e-252d-4135-aaa3-f0ed0e4724f3"],
Cell[274021, 5158, 254, 3, 70, "Output",ExpressionUUID->"6282fae2-3de5-4d9e-b5ed-0e3fc653c002"],
Cell[274278, 5163, 236, 3, 70, "Output",ExpressionUUID->"537c24cd-b263-4982-9135-fd4e833cd01f"],
Cell[274517, 5168, 252, 3, 70, "Output",ExpressionUUID->"52edae72-2cf7-4ee3-ad54-cded8870a32d"],
Cell[274772, 5173, 239, 3, 70, "Output",ExpressionUUID->"a0d76b4c-0907-4f06-aabe-4e8a6288c09f"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[275072, 5183, 279, 4, 56, "Section",ExpressionUUID->"d502509c-8875-4ad6-8835-14012f706d74"],
Cell[275354, 5189, 367, 5, 30, "Text",ExpressionUUID->"ddd22fd4-f862-44b6-ada4-320325cd145d"],
Cell[CellGroupData[{
Cell[275746, 5198, 161, 2, 49, "Subsection",ExpressionUUID->"4b62b2b9-6c3a-4c55-81d8-ec1523e2e2ce"],
Cell[275910, 5202, 254, 5, 49, "Text",ExpressionUUID->"c7d4bbad-638a-42df-8637-e554470078b9"],
Cell[CellGroupData[{
Cell[276189, 5211, 20624, 400, 1167, "Input",ExpressionUUID->"ebe57364-011f-447f-82ce-2d68bfe5a683"],
Cell[CellGroupData[{
Cell[296838, 5615, 595, 10, 22, "Print",ExpressionUUID->"e27ea814-24cf-4143-856a-53fb04f99a30"],
Cell[297436, 5627, 540, 9, 22, "Print",ExpressionUUID->"c9dfad02-d188-421a-8b98-d4598e32e86f"],
Cell[297979, 5638, 544, 9, 22, "Print",ExpressionUUID->"acf109cc-bcad-4059-b67d-3e8492681b38"],
Cell[298526, 5649, 487, 9, 22, "Print",ExpressionUUID->"c1e50306-2313-4fa9-9361-fbafd757c4ac"]
}, Open  ]]
}, Open  ]],
Cell[299040, 5662, 2822, 74, 245, "Input",ExpressionUUID->"ed8bd508-64fa-4174-a5d6-8cd71afe69e6"],
Cell[CellGroupData[{
Cell[301887, 5740, 2058, 45, 127, "Input",ExpressionUUID->"27c8f89d-20d0-4cde-a21b-42cfad234ead"],
Cell[303948, 5787, 68319, 1204, 266, "Output",ExpressionUUID->"c258ace4-1e98-438a-9dac-bf731e4abcaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372304, 6996, 1313, 29, 88, "Input",ExpressionUUID->"fa2b5369-7bee-468a-8b01-8737c0a63ebe"],
Cell[373620, 7027, 346, 5, 30, "Output",ExpressionUUID->"9b740d0c-73a7-49df-8f46-5da30b854f5e"],
Cell[373969, 7034, 345, 5, 30, "Output",ExpressionUUID->"aa7ea265-9052-4fb1-b790-5117871420cf"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[374375, 7046, 153, 2, 56, "Section",ExpressionUUID->"86bcfa68-c927-4bef-bec3-ddd870860223"],
Cell[374531, 7050, 243, 3, 30, "Text",ExpressionUUID->"5eeb8638-9995-4da2-af60-7cbcfbcce07c"],
Cell[CellGroupData[{
Cell[374799, 7057, 187, 2, 49, "Subsection",ExpressionUUID->"af1ee59d-ab79-429a-8c14-c312c716d0e8"],
Cell[374989, 7061, 414, 7, 68, "Text",ExpressionUUID->"9605165d-03c9-4862-8378-7aad3b3157c4"],
Cell[CellGroupData[{
Cell[375428, 7072, 21376, 419, 1142, "Input",ExpressionUUID->"40406285-d66a-4ea2-88c6-1bcf53984357"],
Cell[CellGroupData[{
Cell[396829, 7495, 781, 13, 22, "Print",ExpressionUUID->"a206d0e8-5026-4f1d-a416-b5b5cc22b9af"],
Cell[397613, 7510, 781, 13, 22, "Print",ExpressionUUID->"c7fa7718-ee30-4685-84e6-47c698ca37e1"],
Cell[398397, 7525, 783, 13, 22, "Print",ExpressionUUID->"81d31edb-f504-4161-a9e9-466398b5bb25"],
Cell[399183, 7540, 709, 12, 22, "Print",ExpressionUUID->"e7113b09-af19-4e66-abca-8d39f2ae67f7"]
}, Open  ]]
}, Open  ]],
Cell[399919, 7556, 122, 2, 30, "Input",ExpressionUUID->"1eff0aac-a9be-48af-b584-34981432f0b7"],
Cell[400044, 7560, 3215, 78, 210, "Input",ExpressionUUID->"21240a4a-b5b1-432b-af44-1a07b9b57198"],
Cell[403262, 7640, 2310, 54, 126, "Input",ExpressionUUID->"344ce93c-8827-47e0-a510-c393163ac8be"],
Cell[CellGroupData[{
Cell[405597, 7698, 2010, 40, 127, "Input",ExpressionUUID->"573011d4-1294-423e-8deb-3e93e3dc8974"],
Cell[407610, 7740, 73751, 1283, 264, "Output",ExpressionUUID->"999b080c-0dfa-421c-a9ef-a7608b018f26"]
}, Open  ]],
Cell[481376, 9026, 174, 4, 30, "Input",ExpressionUUID->"cfe5f48c-9db4-4b2e-8c6d-6aa4282f23ca"],
Cell[CellGroupData[{
Cell[481575, 9034, 1165, 20, 69, "Input",ExpressionUUID->"10e77b61-1ca5-407f-8632-bba706cbe8dd"],
Cell[482743, 9056, 410, 5, 30, "Output",ExpressionUUID->"57183deb-d331-4381-bf5b-2e7a7af319fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483190, 9066, 245, 5, 30, "Input",ExpressionUUID->"67336145-4adb-4287-bcb8-952747828e15"],
Cell[483438, 9073, 1458, 40, 30, "Output",ExpressionUUID->"2c9a6842-033d-4cfe-b59c-c322d1390773"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484933, 9118, 2054, 47, 146, "Input",ExpressionUUID->"a08079b8-3f83-49c0-a562-620fc7ec00dc"],
Cell[486990, 9167, 51383, 903, 264, "Output",ExpressionUUID->"cb6beff3-cd20-4d52-b7ac-47c74ff3a619"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538410, 10075, 418, 10, 88, "Input",ExpressionUUID->"593fb273-3732-49c9-ac03-edd0f2073da9"],
Cell[538831, 10087, 196, 2, 30, "Output",ExpressionUUID->"6298b1e4-126d-4790-a08c-199a0df1c812"]
}, Open  ]],
Cell[539042, 10092, 1465, 42, 88, "Input",ExpressionUUID->"077fcf8e-5fbc-41da-878e-587fa273c9ec"],
Cell[CellGroupData[{
Cell[540532, 10138, 608, 13, 88, "Input",ExpressionUUID->"894bf22c-6cda-4e3f-9391-5b1566f6b2fb"],
Cell[541143, 10153, 225, 3, 30, "Output",ExpressionUUID->"c3631126-30ac-46f7-b5ec-ab60052f5c01"]
}, Open  ]],
Cell[541383, 10159, 190, 2, 30, "Input",ExpressionUUID->"fec90857-92c9-46b0-9689-e0fa78c0361e"],
Cell[CellGroupData[{
Cell[541598, 10165, 205, 4, 30, "Input",ExpressionUUID->"d24e9a1c-15cb-442b-8a80-78589ac47d1e"],
Cell[541806, 10171, 11841, 208, 240, "Output",ExpressionUUID->"3def6f4c-31e2-40f8-94e3-5ec9b6865147"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553684, 10384, 107, 1, 39, "Subsubsection",ExpressionUUID->"796818ca-4a6a-48f8-940a-6b2f945eb767"],
Cell[553794, 10387, 1768, 47, 107, "Input",ExpressionUUID->"16ddfaab-84d5-4670-bcfd-f3e80fb07615"],
Cell[CellGroupData[{
Cell[555587, 10438, 138, 2, 30, "Input",ExpressionUUID->"bf804fd3-5caa-4436-a5cf-a3292c49cac3"],
Cell[555728, 10442, 4181, 83, 240, "Output",ExpressionUUID->"a956b833-e99c-4056-9235-3b483f8e43aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559946, 10530, 243, 6, 55, "Input",ExpressionUUID->"ea7ee6f9-7e7d-4657-a061-76544c4bc3a2"],
Cell[560192, 10538, 115, 1, 30, "Output",ExpressionUUID->"ed3cbc7a-5c9f-4e60-9842-f33e53c12d8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560344, 10544, 94, 1, 30, "Input",ExpressionUUID->"f8510d98-4755-4e63-8cff-640f60499673"],
Cell[560441, 10547, 96, 1, 30, "Output",ExpressionUUID->"59758af6-624e-4cd2-9c85-fff66b2b0a38"]
}, Open  ]],
Cell[560552, 10551, 1698, 41, 154, "Input",ExpressionUUID->"e1f2a482-cfbf-47cb-a524-e5405d74ace9"],
Cell[562253, 10594, 81, 2, 30, "Input",ExpressionUUID->"78fd7fe3-0702-4f3e-a8f1-950dbaa7ad49"],
Cell[CellGroupData[{
Cell[562359, 10600, 892, 20, 30, "Input",ExpressionUUID->"82cb4971-da61-4451-9e61-14dce78bfd32"],
Cell[563254, 10622, 1873, 42, 243, "Output",ExpressionUUID->"d9a0de08-daa8-45cd-af79-18b5cc35a3ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565164, 10669, 173, 3, 30, "Input",ExpressionUUID->"d97127b3-c140-4214-979c-8108c2a5fff0"],
Cell[565340, 10674, 816, 14, 50, "Output",ExpressionUUID->"b93a047e-2153-412b-8149-e7eb8ad8cc23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566193, 10693, 5081, 134, 374, "Input",ExpressionUUID->"7e8142fd-44c9-4b73-8607-6ecec5936875"],
Cell[571277, 10829, 74077, 1288, 264, "Output",ExpressionUUID->"372933f8-e67b-4c79-9642-a9a99527aa38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645391, 12122, 490, 11, 69, "Input",ExpressionUUID->"e121c761-fa4a-4246-8039-da2c4edc2047"],
Cell[645884, 12135, 196, 2, 30, "Output",ExpressionUUID->"d1f3e42e-794e-439c-9124-4efb9c6d5c3a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[646129, 12143, 123, 1, 39, "Subsubsection",ExpressionUUID->"837f2fa7-e200-4f7e-80cf-d9b56fe99f05"],
Cell[646255, 12146, 2366, 62, 182, "Input",ExpressionUUID->"2a3a4f31-18e4-4f03-9cb3-eb7ec2b248c7"],
Cell[CellGroupData[{
Cell[648646, 12212, 333, 9, 30, "Input",ExpressionUUID->"4c5b6e7c-06bd-4e69-b3af-6e949e60b4e6"],
Cell[648982, 12223, 755, 19, 34, "Output",ExpressionUUID->"5e4d073b-fb26-41f3-bde2-e25cd55316ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649774, 12247, 2626, 64, 184, "Input",ExpressionUUID->"e6880c63-2773-4985-8032-0a3f07a880bd"],
Cell[652403, 12313, 202888, 3405, 264, "Output",ExpressionUUID->"0911f9ef-624e-4792-98af-ad60c97e3029"]
}, Open  ]],
Cell[CellGroupData[{
Cell[855328, 15723, 450, 11, 88, "Input",ExpressionUUID->"e5e19399-2ab4-413c-a476-b2bfdf3c9b25"],
Cell[855781, 15736, 180, 2, 50, "Output",ExpressionUUID->"33fb58ee-7bb5-478e-8120-97b1d59eed08"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[856022, 15745, 161, 2, 49, "Subsection",ExpressionUUID->"6f9c5f36-cb25-4789-99a4-9216f671f45f"],
Cell[856186, 15749, 516, 8, 68, "Text",ExpressionUUID->"72cff628-1325-48a2-b11c-eae106d4b40b"],
Cell[CellGroupData[{
Cell[856727, 15761, 19019, 372, 1085, "Input",ExpressionUUID->"35140e69-00cc-4a3a-879d-019ffd3a5257"],
Cell[CellGroupData[{
Cell[875771, 16137, 394, 8, 22, "Print",ExpressionUUID->"cefdbccc-dd7e-4036-950b-21ea9f898174"],
Cell[876168, 16147, 384, 8, 22, "Print",ExpressionUUID->"4f2a3ac1-8bef-49fc-8452-84a5d2faebd0"],
Cell[876555, 16157, 392, 8, 22, "Print",ExpressionUUID->"29c16576-530d-400c-a12b-c002e5fac2b8"],
Cell[876950, 16167, 396, 8, 22, "Print",ExpressionUUID->"32690e20-a1bf-413c-9e77-70984385b466"],
Cell[877349, 16177, 318, 7, 22, "Print",ExpressionUUID->"5da54dd9-6fae-459e-b382-1f300c5698b0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[877716, 16190, 2334, 59, 212, "Input",ExpressionUUID->"a13fd56f-3acd-4841-99db-4ecc62edede0"],
Cell[880053, 16251, 77362, 1346, 264, "Output",ExpressionUUID->"4e617d9a-0b6a-4fe3-b650-2b60348e0bc3"]
}, Open  ]],
Cell[957430, 17600, 481, 12, 50, "Input",ExpressionUUID->"f84ab940-fd81-41f4-8d30-0c51a942a714"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[957960, 17618, 101, 1, 70, "Section",ExpressionUUID->"006eefdd-5bfe-4a65-88c6-651b2796b35c"],
Cell[CellGroupData[{
Cell[958086, 17623, 190, 2, 39, "Subsubsection",ExpressionUUID->"e7ee8a90-03c2-49f9-8e8a-9f8f2d58bb46"],
Cell[958279, 17627, 117, 1, 30, "Text",ExpressionUUID->"c45926fa-852e-4463-be55-bde45dc1a0f0"],
Cell[958399, 17630, 1437, 38, 145, "Input",ExpressionUUID->"a80d82c5-8119-4128-be70-f221739e949e"],
Cell[CellGroupData[{
Cell[959861, 17672, 390, 7, 30, "Input",ExpressionUUID->"a73e7706-1fec-421e-98ed-eae4ab268cb9"],
Cell[960254, 17681, 6499, 118, 229, "Output",ExpressionUUID->"aec57cc6-7406-4f00-a423-cf048752bea0"]
}, Open  ]],
Cell[966768, 17802, 1002, 27, 69, "Input",ExpressionUUID->"75f921fb-3001-4d37-bd53-7bd0b9d7678c"],
Cell[967773, 17831, 130, 2, 30, "Input",ExpressionUUID->"4b72e89c-83e2-44eb-bf9c-8c386090fac2"],
Cell[CellGroupData[{
Cell[967928, 17837, 241, 4, 30, "Input",ExpressionUUID->"5d27d639-e754-4ed2-b076-06035985da11"],
Cell[968172, 17843, 115, 1, 30, "Output",ExpressionUUID->"0f121155-dfdc-4837-bab9-1221bd6e69a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[968324, 17849, 404, 9, 30, "Input",ExpressionUUID->"629defb6-b1e3-4a3e-bd9d-0dc2b24b5086"],
Cell[968731, 17860, 79345, 1316, 220, 66377, 1102, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"3ee7d35b-2d91-4e1b-8b58-a41b263900b1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

