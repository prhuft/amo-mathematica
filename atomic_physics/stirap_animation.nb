(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1160165,      21881]
NotebookOptionsPosition[   1146714,      21689]
NotebookOutlinePosition[   1147060,      21704]
CellTagsIndexPosition[   1147017,      21701]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["stirap animation", "Title",
 CellChangeTimes->{{3.8431732595951905`*^9, 
  3.8431732694700165`*^9}},ExpressionUUID->"5203471b-a0f9-4fd4-be19-\
20bb20a7ec85"],

Cell[CellGroupData[{

Cell["functions", "Chapter",
 CellChangeTimes->{{3.8431738136149306`*^9, 
  3.843173817178313*^9}},ExpressionUUID->"4ddc9cf8-1dea-444d-8a3a-\
b1516558aa71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<\\\\images\\\\\>\""}], "}"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.843259965265293*^9, 
  3.8432599811512747`*^9}},ExpressionUUID->"213d895c-8aa3-4ddd-8387-\
89c234e224ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BuildSchroedingerSystem", "[", 
     RowBox[{"H_", ",", "psi0_", ",", 
      RowBox[{"t0_:", "0"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hamiltonian", "=", "H"}], ",", 
        RowBox[{"\[Psi]0", "=", "psi0"}], ",", "\[Psi]", ",", "statelength", 
        ",", "eqs", ",", "ics", ",", "sys", ",", "P", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"statelength", " ", "=", " ", 
        RowBox[{"Length", "[", "\[Psi]0", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Psi]", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
          "statelength"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ics", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"statelength", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"eqs", ",", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ics", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/.", 
               RowBox[{"t", "\[Rule]", "t0"}]}], ")"}], "\[Equal]", 
             RowBox[{"\[Psi]0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sys", " ", "=", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Psi]", ",", "sys"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "R", " ", "is", " ", "the", " ", "angular", " ", "momentum", " ", "bector",
     " ", "which", " ", "experiences", " ", "the", " ", "torque", " ", 
    "vector", " ", "\[Gamma]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TorqueVectorSphere", "[", 
    RowBox[{
    "Rx_", ",", "Ry_", ",", "Rz_", ",", "\[Gamma]x_", ",", "\[Gamma]y_", ",", 
     "\[Gamma]z_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Specularity", "[", 
          RowBox[{"Pink", ",", "5"}], "]"}], ",", 
         RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
         RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "Rz"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "Rz"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", "Thick", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Gamma]x", ",", "\[Gamma]y", ",", "\[Gamma]z"}], 
             "}"}]}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\"", ",", "20"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1.3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", "20"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", "20"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.3", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.84317380154134*^9, 3.843173808789051*^9}, {
  3.843256256616705*^9, 3.8432562658772492`*^9}, {3.843256297845808*^9, 
  3.843256300094759*^9}, {3.843256460589281*^9, 3.843256472597183*^9}, {
  3.8432566942854614`*^9, 3.8432568865456114`*^9}, {3.8432571875285583`*^9, 
  3.8432571914299655`*^9}, {3.843257261939678*^9, 3.843257265337478*^9}, {
  3.843257334041218*^9, 3.8432574145898046`*^9}, {3.843257456666551*^9, 
  3.8432574753416834`*^9}, {3.8432575055404673`*^9, 3.843257578622681*^9}, {
  3.8432576155315104`*^9, 3.8432576194409795`*^9}, {3.843257763009717*^9, 
  3.8432578566415873`*^9}, {3.8432578938470078`*^9, 3.8432579099884377`*^9}, {
  3.843257978452303*^9, 3.843257980641626*^9}, {3.8432583623908386`*^9, 
  3.843258437324326*^9}, {3.8432598971839905`*^9, 
  3.8432599616903944`*^9}},ExpressionUUID->"09dc086e-3399-4674-8cfc-\
9394b6dd7a19"]
}, Open  ]],

Cell[CellGroupData[{

Cell["simulation", "Chapter",
 CellChangeTimes->{{3.843173833814064*^9, 
  3.8431738348329263`*^9}},ExpressionUUID->"f505d7c7-7541-44c3-82e2-\
a5087de1edb5"],

Cell[CellGroupData[{

Cell["STIRAP", "Subchapter",
 CellChangeTimes->{{3.8435659461789913`*^9, 
  3.843565948056758*^9}},ExpressionUUID->"dac351e4-c2e3-401c-ad63-\
29c089c7f59d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"w", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]0", "=", 
   RowBox[{"6", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
   RowBox[{"\[CapitalOmega]0", " ", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"t", "-", 
          RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
      RowBox[{"2", 
       SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
   RowBox[{"\[CapitalOmega]0", " ", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"t", "+", 
          RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
      RowBox[{"2", 
       SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
   RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
      {
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
       "\[CapitalDelta]1", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
      {"0", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
       RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"H", ".", "psi"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.843165564929308*^9, 3.843165629054659*^9}, {
  3.843165761770397*^9, 3.8431657864577045`*^9}, {3.8431658302255945`*^9, 
  3.8431658363491745`*^9}, {3.8431734463439646`*^9, 3.8431735739235682`*^9}, {
  3.843255187867103*^9, 3.8432552300248117`*^9}, {3.843255283258112*^9, 
  3.843255285353894*^9}, {3.843255698023137*^9, 3.8432557304257927`*^9}, {
  3.8432558373748055`*^9, 3.8432558487070904`*^9}, {3.843255912312868*^9, 
  3.8432559141289487`*^9}, {3.843256066956253*^9, 3.8432561052243547`*^9}, {
  3.843256349027733*^9, 3.8432563556327496`*^9}},
 FontSize->14,ExpressionUUID->"cbef7251-a162-4bcd-a510-380ba86d4fcf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "c2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.2222222222222222`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.25`"}], "+", "t"}], ")"}], "2"]}]], " ", 
        "\[Pi]"}]},
      {
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "c1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.2222222222222222`"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.25`"}], "+", "t"}], ")"}], "2"]}]], " ", 
           "\[Pi]"}], "+", 
          RowBox[{"3", " ", "c3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.2222222222222222`"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.25`", "\[VeryThinSpace]", "+", "t"}], ")"}], 
              "2"]}]], " ", "\[Pi]"}]}], ")"}]}]},
      {
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "c2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.2222222222222222`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.25`", "\[VeryThinSpace]", "+", "t"}], ")"}], "2"]}]], 
        " ", "\[Pi]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.843165773290162*^9, 3.8431657867891083`*^9}, 
   3.843165836626266*^9, 3.8431738223713007`*^9, 3.843254901895709*^9, 
   3.8432552351628823`*^9, {3.8432557148421535`*^9, 3.843255758604006*^9}, 
   3.843255811987832*^9, {3.84325585058219*^9, 3.843255871963889*^9}, 
   3.8432559145404515`*^9, 3.8432561056662416`*^9, {3.8432563494662657`*^9, 
   3.8432563559826994`*^9}, 
   3.8433912084652805`*^9},ExpressionUUID->"fc76f637-10bc-4d3e-ac2e-\
a21e64b5fe28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Counter", "-", 
    RowBox[{"intuitive", " ", "pulse", " ", "sequence"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"6", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", 
       RowBox[{"-", "tmax"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<Classic STIRAP\>\"", "]"}], ",", 
         "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.843259031509108*^9, 3.843259032518113*^9}, {3.8432591062599835`*^9, 
   3.8432591063515716`*^9}, {3.843259168095916*^9, 3.8432591750256915`*^9}, {
   3.8432609839650316`*^9, 3.843260984054989*^9}, {3.8433912027153177`*^9, 
   3.843391235234599*^9}, {3.843411420110826*^9, 3.8434114422214174`*^9}, 
   3.843411756039548*^9, {3.8434119960709457`*^9, 3.843412090519328*^9}, {
   3.8434121506521535`*^9, 
   3.8434122865773706`*^9}},ExpressionUUID->"8f3aee44-2e43-437d-963e-\
e52feec04cc9"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8432552463222933`*^9, 3.8432552689082365`*^9}, {
   3.8432557391765943`*^9, 3.843255815286768*^9}, {3.843255860805763*^9, 
   3.84325587971325*^9}, 3.843255917037311*^9, 3.8432561083413134`*^9, 
   3.843256205077754*^9, 3.84325624323956*^9, {3.8432563246507735`*^9, 
   3.843256358082154*^9}, 3.843257172572596*^9, 3.8432585926777234`*^9, 
   3.8432586669185033`*^9, 3.843259032706847*^9, 3.8432591066068883`*^9, {
   3.843259168495345*^9, 3.843259175276205*^9}, 3.8432593190886497`*^9, 
   3.843259674362086*^9, 3.8432609843378515`*^9, {3.843391210347452*^9, 
   3.843391235725329*^9}, {3.843411425282866*^9, 3.8434114427335916`*^9}, 
   3.8434117714638095`*^9, {3.84341196925638*^9, 3.843412095889089*^9}, {
   3.8434122464033833`*^9, 3.843412290269232*^9}, 
   3.8434127694235353`*^9},ExpressionUUID->"bff3023a-84b9-405b-b1ff-\
ed5a8c2a0f5d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$134570#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$134570#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8432552464634953`*^9, 3.8432552689982586`*^9}, {
   3.8432557392880187`*^9, 3.8432558153891554`*^9}, {3.8432558609253564`*^9, 
   3.843255879831044*^9}, 3.8432559171468782`*^9, 3.8432561085253215`*^9, 
   3.8432562052171774`*^9, 3.8432562433912134`*^9, {3.84325632478458*^9, 
   3.8432563582752404`*^9}, 3.843257172689002*^9, 3.843258592860937*^9, 
   3.843258667129422*^9, 3.843259032902144*^9, 3.843259106801689*^9, {
   3.8432591686918764`*^9, 3.8432591754758453`*^9}, 3.843259319291441*^9, 
   3.843259674451502*^9, 3.8432609844330654`*^9, {3.8433912105263195`*^9, 
   3.843391235875944*^9}, {3.8434114254413023`*^9, 3.843411442873974*^9}, 
   3.8434117715937195`*^9, {3.8434119694096966`*^9, 3.843412096029975*^9}, {
   3.84341224650338*^9, 3.843412290357162*^9}, 
   3.843412769517254*^9},ExpressionUUID->"714fbf25-4507-45c2-8c30-\
485965e7acba"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt23c81d//AHCueYWMCJFZSRISMt6vk5SUSmU0SImGSkV2RCSZJXuUkEoa
UkLxfstKyiZ77z2vze99P9/f/ec+no/7fp/xOue8zjl/XEnLWyetKQwMDCVM
DAz0b/f+o1Nra/wEw3+fCQi7e+GIZyw/MbJG/4zDO0b7ZAY1fiLt/316t/kw
528+gvL/ZrHWUxY25yP8l//nwOe+FeZzvETP7P/M31B0I/EpL2HY/T9/Pqo4
0LuTl2D4+D+fLIi5tP03D/FH7H/2a235M2/OQ2DnVv6z27j2jSfd64ljOvP/
OWb3jeEXwuuJWt7h/5zlFGPz8Tg3ERPz6z8zsTgX1d/lIhgOWP7nY6HGEqvR
nATrlN4q3Zzh4++eKHASzqU7V+j+HflYTbpgHSGywWrpv/pjpAu+mq4jPsV6
zdOtF5977NAIByEc3TFNd6jUV3xnDgfhn9gyQXfb6zRFfj8O4nHP5lG6fWxk
B1lucRBM2MgQ3XI7k1/OG3MQtqouA3RXjoufHdbiIIp4iV66HT/H8rVJcxDW
rtlddIs6bCyr5CDL1znbTvdPtWfeBZNUgqEsupluAeGqdq1eKnHIPrSR7quL
3FqZDVTiXMKtf3Rz5/rPvMGpxFRBRTXdF5//MpTKoBKF7scq6f5yn/V9bAqV
+Iyl/qX7rM4D6+AgKuGWPFVC93tpIp/Ni0q8VGwppJuBZVXM6y6VsHkSl093
SolLvf05KtEXE5lDd7Sy4/63RlRC0CYk67/xj7f71HaUSpw+4pxJt539dX99
RCWeem/6TLe2uDkmvoVKGD6KfUO3ov+Zd0abqcSjpPUpdEvNGgv5b6QSFYZ3
kuhmLzs2NUOlEuueL8XTXeuIUn6PsRMS8WKhdJd0avEzDLATWo3jwXTnGOz1
3NPJToRxvwugO0FK+WxCDTshm9/oQ/f1cmluxyx2QqmMxZHu83sl3N6lsxMu
Jlx2dBsmiw50pLIT557N36Rb1VXg55F4dkLYw8mabspWNkfJB+yE+kPGU3TP
PmHqNnFjJx618xyje2Bp7XjgXXYCLSwforu8an773GV2ovvuFey/eLkPtf45
wk7crr627b94DfQdphxgJxJv7pek2+NU9zc1jJ3Y3DIpQrfV9paniYrsRJ9W
Kdd/8ar7e8BZgJ0oaNGZXCUtjX5/fs/NTuwVThqkW/BdsXg3Gzsh1PS3k+5l
T3zh6CIbYT51r4ruEvn099LtbASWt/ED3TmR70XONLAROywSk+lOo6Q+Cq5i
I2Qih2PoDm1IvLhQwEb41mX40n3eJ0yg4g0b8TF87Czd5UBjc05kI5iD2Q3p
hiXTRYk4NkLkQYsu3RJ2m9rtQtiInVLvdtLdZZH4RtCRjTiS+Glphb7+NzHH
4rfYCK7GK2N0F9RbB129xkbUhP3uoDv56Ha7HDM2gvFCQCHdlzU/aZ7fz0Y0
nix5RHc9jVeBTZuNCNya4kS33md7iU+qZP8CxK/QLbtdjYUix0ZEnv+nS/eQ
YF75Kx42Yi6IZ2mZPv+rxfOPcbARTodd+ukuC/LKmGNiIwYPXKmhO435QJT+
HCvx0vDXW7ptp8oujrayEpqCRoZ0t73faRTxj5Vwk41Tp/v4tZCDUMVKuDCf
kqBbsePkjqeFrETGxeXRJdJTfxtnVN6xEhVsVV50Wz7W7G9NZiW8ZsSt6a7R
jW/0fc5KiO3N06P7y/cLeQ1PWQlV3UYOuh3f9j+658xKpGSJ+i2S7rPSd91i
x0o4fXexpttU4t2N8uusxE0ONh261SNtT0hYsBLW/S/mF0gv+syKFB5gJb7x
yZ6j2waZct0EVoKl5bYS3c1LWWsCe1kJy9VcVrp/2N3ruSLPSiQwHv8wT5+f
F5g+rONnJfwHP07Mkf5UoRdcy8lKMC574HR3YYG28aysRL69UhDdB8UEdu1a
ZCHKnuzYQjd309ZPJztZCOT0/SCNNNK//mRTMwuxV3dmHd12WR9v99SyEOyM
TRWz9PGNUFdy/MVCHBINOUX381OHP0d/ZCEEomr0Z+j59GdwqOVbFiIk8TUT
3RTlGrsdSSyE6L6x79P0+cJjtjs3goX4lfxlG90Kf29+6XBnIdJNxIcnSeMH
n2ZuM2AhbvzcIDxOH5+vdRETB1iI1uzCr2OkZbaIOGUDC2HrcsKQbj+mJLUj
u1mIcMlKj1F6viC+ZNmKsBC5l1iJYdIPdi1EqW1gIWRv6xym+8tzbRcGbhZi
4sJ81RBpIffivaGMLMRVv4TGQdIdextyvg4wE7Oifr/6SfO9FY316GImJnPU
tenWFbroptfCTOROLn3oI/2GNqjZWMFMjNS6Pu4lfTtj6cdyJjOR8SZBqJue
r3eK4/sfMhMcN348bSV9T3Df+YcezMTasg/eQnpuzXKl2ImZCGxIGmgmPVad
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
uyzM/mPMwKjIOtT4OgVbzs7FmsxWbd8brkPGSs9jP8QWYm++FbnJ/1iHavLf
2G38WokduGkULveME01OMqnuf9SG3Q39znArmhPxnBlcxsbasORvUjcyXnCi
mNEFBx7jdoxCmdTRSuNESWzN6wV4OzAiImjiaBEnym5TaV1o6cA0iOIjd+Y4
kZn3vbPztl2YAv9eStY5LnQ9E7fd49CLmasn3Fy+yIW225u/50vuxQLN2RrR
VS605Ujig7zqXmz4dd3H0rtcSPbewnrPXX3YGy078+YgLnSe4C2K7evDpC+/
y1rFuVCcW6BMxeEBTChb7NYBGW7kJzwvOzswhK1eer2Jdwc3kvlj76q3YRjr
4Vb61aLEjTz/KnIZwzD2yUpX8i5wo4/RsUdehg1jejzXaxLPcqPFwlHfRU0y
31/JUmN4yo3avq5FvHQfxcz4dHrKIrnRoY8Jl+KTRzGd3LInkc+5UX2qzN9T
ZaMYN3/7oEIaNzoZJtUxsXEMS8ljiTMv4UZSlYdyx9+PYXUCpxi+r3Ajzqvy
D2T/jmM5REuaL/N6dPKIcUjH+DiWcP3ymZPr1qMp9vAWOeoEdiPf5fOg0HrE
4sLFqLVjAmO+mWAlpLIevQjz/lh5cwJTKRz95WCzHmnkGtU3j0xgoXZ+TxX/
rUdHCrIHHWomscU/aVl+retRyaENXcvtk5jltqr2ju71SKBXwtxmZBLb3SKs
8HRiPUotmTVaYJ7ChhKNe+eZeVBTLsofUpnCAjn7vc5s5kETgse27n0yhRF7
XcIfSvKg3ZNjhWqxU9jM5XVv02V4UOOHkzziKVOYWf6uSuoOHhRwZODwm+9T
2E5H5805ajyIdu/9u7e9U1h5O/W7yAkexN6dpPxwzzRG4YorP2jEg44HmJwU
h2lMVUOhy86UB4lvY9NOPjSNPQ87SS0z50HGggHztuemsVv6saZuNjxI+cwu
Yp3nNMaTIT/T7M2DLI0d7ngVTWMnfY/vjM/kQXMmN7+e0ZnBUs5M6Gdn8yBB
PqOYG/oz2IL808t1P3hQNYv+jluGM1hCTfULrgIeJKA+ULL//Aw2KmHC51HB
g3yppioKLjOY33ezufMDPMjjXfoXqbQZrCV4hd9tmIyPZugL7PMMtsvyuWLk
GA9aOOi6xSBrBqtn77hWMcODZmf3eGsVzmDSJpdagJEX2bFHODg0z2B5E9fy
JUR40b2xhD/mbLMYXyFHm5YYL+KbJJpfcM5i1pHvFk9L8KLW09dl6nhnMU5s
dPfTrbyoxK+gVFh0FjsTcDuFcTcvWnLRwrgVZ7GZLU4BXUd4EQhum8oxnsXk
zvkYJ7vzkvmgYaY2inz+TiYfsxcv+iQ39oQSP4v5PRqouOTDix5OnEiTeTmL
9WYYHJYO4EXvfcbLD76dxRI4BSAxihcVmPmWsmTPYgJ5r2QTMnjRtrAplkf1
s5hu7b/etUxexCCl/ZraNIvZDVGTLHJ40Ulr5cAHrbNYpaCtmHg+Lyp873fH
tGcW87+lyve8nBdxTlS3h0zOYgySJUuxg7zoo5/klqMcNGyX2kLW0ggvui7D
+libi4adP7rD8dwEL7KQkXDewkPDvruETIjM8SK9XucjLQI0zLHatDeamQ9J
nM7kHZCgYcPeA+WR4nwo0iEh3H8PDROJEQmck+JDyhIlAStqNOzQJwN90618
6HVaqcU1DRqW0vKpQHAnHyrVMZzbATTswh6XrHANPpTO/hksDtGw+j5q4jNj
PtQqsrUw+AwNKzZ6HJd9mg+de2o873COhmX+ZI9sP8eH8kK2DZqa07CI52yB
Oyz50Ky49y7OizTM2ITFscCWD8nGJ0aqXaVhtUUMh6cf8aGU36xbkx1oWOFu
T13hAD7U+/vRGy0nGvbl5RoGwXxorDoiudKZhoW5r+4OCONDe4Z49g670bBT
e5bFpF/yobCuFckRLxpWnTw3eTKHD+khvzvbgmjYTz6nEedcPsT3p2m7ezAN
++xJ63tO8CG74cpNFSE0LNRstnmomA+xxFNbr4TSsBMbpose1PAhuQtzPTcj
aVil91j05xE+VMYoXVudQMOIyZthDeN86GdCw4WJlzTsk8Vo8OoUH9L1KP3A
kUTDnmiOeB9e4ENN0UIf9ryiYcenB292sfCjlNZ2octvaVi5Ze8+PnF+xN6x
L1ItnYZ1Mr+eD5fiR6aJIRboMw2bSbn6UXgrP7r87sePAxk0THh4WFRyJz+S
xo9bHvxKw6zsp+Z2afKj7YyLoRLZNGzRe+39UVN+9EZu/qAOQcO4tuZbVZ3l
R74HfT2E82mYxK8Hm4zP8yPPjIKhUdIHOFkfm1nzo5LRu57BBWR7wzitrtvz
o2F/NrePxTRs6ythkcch/Cg6ZuKB0x8atlevuZLzGT9y7Dr6YctfGmYwGPfo
SQRZ3t9bAVWk7+yUmI2M50dfH112laqgYT++bq1MeceP5nk+saZW0bCTxbt9
C0v40Z0eMcK4noZZX53VOlTGj/hzY852kXbm+DZdVs6PKh3ieG7+o2HxxzQu
1tTxo7JzlX33GmjYQD3S6urmRxYzDzp9m8j+OlOmrfv50TOetBXmZrK/mwrf
Dg7xo4EHqVZepJUt9DZOTvKjb34Ncg4tZH8ZqeV3Z/lR/c/O8BHSp5N++8zP
8yPWOPtLlq00zOZAoOa9ZX4kNusWXU/6//9fjMYEB7X122jY/wG0dk5q
          "]]}, Annotation[#, "Charting`Private`Tag$134652#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wCC/J0o
          "]]}, Annotation[#, "Charting`Private`Tag$134652#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwU13k4VU0YAHCufV+TJS2UsoZEcc+ZkxSlJIqSsksIkS1FSpIt+x6hD5EQ
IpUzWVJCsmXfs3Pt+/Kd+5fn98zcMzPvO+/MOGDuqGdFoqGhsaCnoaH+fTR6
cX5nhw+26HXeD3jwWnnES2Cpa5MPRtDo49K1/Ko63H0rJWt88GsUrcMzdUvV
/SedthwX+OCXvfnXFjJyVCsCI5j7R/igj2HqtTzOWVVmub97YT0fzEy6EfhQ
U0Et6r6p9uNEPijhuUeKZfKeWg6tyxsaFT64fWT3nTfoBzUGK01FoZu8MPF3
zZbzXT4yX3u1fVo4D9wswfCcZisylE4N8AvlgQ8v6x7W4b9Ntvd5+MY6iAeG
9Fh4plrbkL9LHOuWesYDIxVSYk6dtiM/cH2tXejBA009n8r1rTqRB3m9pKpM
eOBjybMnx2Y8yR8uyo/9k+WBwua/zHUdQskmqWz0P6R44CetNM7JXWFk9qWR
fdmHeeBWnvRTPdpwsnXSK0OHAzwwjY9bUpEmkiw8yVqzzM8DDyokweXcWPKT
gH//MW1yQ36R6n8dkmnko93w2/gqN8z23rQ/KZZO7j6a1PNriRvemXUTZZR4
Q1b+q7crjMINS1r2z929nEGeOAT9BIe4IZugdZy4dg5ZrzLBQrKWGx5/Zm3M
mF1EPtgy3FvznRsqB+1ojPYVk5eH5YysK7nhEPOOTv/hEnI8Y6Vu+hdu2HnR
nBeb+0TuPzeJiOZxw6s31v96YpAsEcInHZvKDXGNZtMCrSry3UY1QZ4obmgo
P/XtC/knuYjPkiHInxuKmB/gUAj/TV43CJ6n9+SGESnNT/bWNZOTPfaPn3Lm
hsh5Rp5N6TbyqYSiPm87bpjg0FU58aedPPxZq+2zJTfcv3Xvfm1lFzmgp7tu
9SY3FOxwofnB1EeW2XGqPG7IDRumWP+T0xsg/97PUOasyw29h9mSjugOkZ3V
4/PzznHD6FxXh3C/f2QBS9nMKXVuaKo74hlPM0b+9OzbK0kyMX54f5B03QTZ
OPNqlPVxYn4zg07eM9Nkmp/jgely3DBJkLs1qWSWnD7xyLf/MDc8WoJ/VM2Z
J9/fqNn0PsgNuzKS56M+LZDPsvN6iB7ghhKkBr2bbYvkCdkMByNhIp71gx6+
yAr5Czo7vipA9P+i9YL1xSo55JKqVSwfkY9dNPrG/9bI8vcabrSwc8O7BzK5
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

          "]]}, 
        Annotation[#, "Charting`Private`Tag$134652#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"Classic STIRAP\"", 
         StringForm["Classic STIRAP"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8432552464634953`*^9, 3.8432552689982586`*^9}, {
   3.8432557392880187`*^9, 3.8432558153891554`*^9}, {3.8432558609253564`*^9, 
   3.843255879831044*^9}, 3.8432559171468782`*^9, 3.8432561085253215`*^9, 
   3.8432562052171774`*^9, 3.8432562433912134`*^9, {3.84325632478458*^9, 
   3.8432563582752404`*^9}, 3.843257172689002*^9, 3.843258592860937*^9, 
   3.843258667129422*^9, 3.843259032902144*^9, 3.843259106801689*^9, {
   3.8432591686918764`*^9, 3.8432591754758453`*^9}, 3.843259319291441*^9, 
   3.843259674451502*^9, 3.8432609844330654`*^9, {3.8433912105263195`*^9, 
   3.843391235875944*^9}, {3.8434114254413023`*^9, 3.843411442873974*^9}, 
   3.8434117715937195`*^9, {3.8434119694096966`*^9, 3.843412096029975*^9}, {
   3.84341224650338*^9, 3.843412290357162*^9}, 
   3.843412769651497*^9},ExpressionUUID->"8c5ad21b-625d-44d4-8313-\
5dd49c3673a9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = -5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], -5, 5, 0.001}}, Typeset`size$$ = {
    360., {193., 198.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$134725$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = -5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$134725$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, -5, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {240., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8432552464634953`*^9, 3.8432552689982586`*^9}, {
   3.8432557392880187`*^9, 3.8432558153891554`*^9}, {3.8432558609253564`*^9, 
   3.843255879831044*^9}, 3.8432559171468782`*^9, 3.8432561085253215`*^9, 
   3.8432562052171774`*^9, 3.8432562433912134`*^9, {3.84325632478458*^9, 
   3.8432563582752404`*^9}, 3.843257172689002*^9, 3.843258592860937*^9, 
   3.843258667129422*^9, 3.843259032902144*^9, 3.843259106801689*^9, {
   3.8432591686918764`*^9, 3.8432591754758453`*^9}, 3.843259319291441*^9, 
   3.843259674451502*^9, 3.8432609844330654`*^9, {3.8433912105263195`*^9, 
   3.843391235875944*^9}, {3.8434114254413023`*^9, 3.843411442873974*^9}, 
   3.8434117715937195`*^9, {3.8434119694096966`*^9, 3.843412096029975*^9}, {
   3.84341224650338*^9, 3.843412290357162*^9}, 
   3.843412769729554*^9},ExpressionUUID->"3d7c1871-e4b1-42c3-b77b-\
8048f55b490f"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,19,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565922797923*^9},ExpressionUUID->"e6d1fa0b-b8ac-459b-8f48-\
b8ae38302a1b"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,20,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659228608136`*^9},ExpressionUUID->"d7cdfa80-d5a1-4e89-ab8f-\
5c33c2e67f16"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,21,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565922888442*^9},ExpressionUUID->"cb6e936f-12ed-4b25-85f8-\
f1ec18e452c8"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,5,22,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565922918655*^9},ExpressionUUID->"7ccc264a-660c-4be6-a4c0-\
0f34f0804500"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,23,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843566199814601*^9},ExpressionUUID->"5b519005-4b67-4843-bc94-\
9a9bc79e262c"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,24,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435661998679867`*^9},ExpressionUUID->"3ec5c238-e721-40cb-8b0d-\
45f30596143e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,25,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843566199893402*^9},ExpressionUUID->"9f433a3e-80ec-4f9a-aaba-\
0af66723f3e2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,16,26,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843566199924115*^9},ExpressionUUID->"8e76e417-35f8-4b83-b711-\
1e5d9162acf2"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,27,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435662000690403`*^9},ExpressionUUID->"72a28bc5-8fa7-451f-a55d-\
761421e65f48"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,28,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435662000973015`*^9},ExpressionUUID->"10d17cb6-7983-4291-bb55-\
cfcbbc9b30a0"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,29,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435662001250772`*^9},ExpressionUUID->"637a42fa-dcfc-4d97-a79d-\
dea565e677be"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,16,30,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435662001532545`*^9},ExpressionUUID->"e597ee15-1038-4a1b-840b-\
fdab32ce31a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[CapitalOmega]0"]}], 
        "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.2"}], "}"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<counter_intuitive1.gif\>\"", ",", "gif"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.843259782082732*^9, 3.843259822112793*^9}, {
   3.84325985247757*^9, 3.8432598531877284`*^9}, {3.843260027133868*^9, 
   3.843260027236577*^9}, 3.843260071457158*^9, {3.8434127736804113`*^9, 
   3.843412793649506*^9}},ExpressionUUID->"387fe6e3-3431-4ac2-b0c4-\
09c9a5044eac"],

Cell[BoxData["\<\"counter_intuitive1.gif\"\>"], "Output",
 CellChangeTimes->{{3.8432598334314933`*^9, 3.8432598635724497`*^9}, 
   3.8432599972295227`*^9, 3.8432600336840053`*^9, 
   3.8434127840751505`*^9},ExpressionUUID->"158c4359-cf06-4f47-be11-\
58db1ca8fe8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Counter", "-", 
    RowBox[{"intuitive", " ", "pulse", " ", "sequence"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
      "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", 
       RowBox[{"-", "tmax"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<Classic STIRAP\>\"", "]"}], ",", 
         "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.843259031509108*^9, 3.843259032518113*^9}, {3.8432591062599835`*^9, 
   3.8432591063515716`*^9}, {3.843259168095916*^9, 3.8432591750256915`*^9}, {
   3.8432593369421215`*^9, 3.8432593654987164`*^9}, {3.843260973805519*^9, 
   3.8432609739556465`*^9}, 3.8434119395329*^9, {3.8434121175174427`*^9, 
   3.8434121336481457`*^9}, {3.843412342759514*^9, 3.843412348811722*^9}, {
   3.8434124937454123`*^9, 3.843412493829773*^9}, 
   3.8434857785135345`*^9},ExpressionUUID->"1b8a7669-2889-40f7-8240-\
d3606e65d566"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8432593471877084`*^9, 3.8432593658148923`*^9}, 
   3.8432600770064173`*^9, 3.843260974306026*^9, 3.843412129234115*^9, {
   3.84341234430908*^9, 3.843412349515603*^9}, 3.843412494222252*^9, 
   3.843412731818638*^9, 
   3.8434857796639633`*^9},ExpressionUUID->"bf9dce20-6c24-4590-8709-\
41ec2373f167"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$139201#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
Xw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$139201#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.9999997959183675`, 4.9999997959183675`}, {0, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8432593473883543`*^9, 3.843259366017068*^9}, 
   3.8432600770971937`*^9, 3.8432609744092565`*^9, 3.8434121293978276`*^9, {
   3.8434123443946486`*^9, 3.8434123496028767`*^9}, 3.843412494315836*^9, 
   3.843412731913904*^9, 
   3.8434857797471905`*^9},ExpressionUUID->"25925bb6-73a3-4831-85ba-\
5ca26e53d4ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GexmFg8m99GVF4pnruIW8D15sqNnH01yp4xVw33+yueicGwfPad7oVUIt9Ji
f8NO8D7KLL3Zs7GD948SghQ9h/bRdY69tCe4XSg+v3Vn2ked2GyOueJ+0K6q
wUrYR3MbPe7cxB1y3+a5+vgeGorpqyvizvmUylVWsIf+5vkNJLgnJQ4Kxajs
oalRpYGO2/OwQJHVJHIR/32alNB13Bvt4q6/z+yhfsqqUaq4qd31yshY9tCv
Rs0veHELlIQruPTsouO8ZEa/t+bhliS54RWnXbRyLSiGE7cj5cvNKatd9GQn
XysJbveOo4kBV3dR24yM7xOb+Hq5w9BX6V1UY9fqRynurJIH9mcpdtFujlfC
erj/SS4+onm9g1Llqp3w3JiHGUq/Y2/CdlCf8Svu13GvdDB+Rx7toJH3wt3k
cJN7nKX1tN5BNUO33clwHy+9FT0mtIOaf2oMDF7H812q/1119Taa0O348Nka
/r1+J3VNpXQb/cpaVWmD244rkqwuZxudjA8vVMbttK1o3hC5jfZft8onx+2D
ZrN1W2yjmeGuu76reL1Rve87t72FHlbzSbNemYe4soYzzvNbaM3hmUnA/fq0
QPfy8BaKkL4Z5MadStcjtlm3ha5WbnU2LuPfj0ZkkuzVFrr+7f64BO5aQ3oD
LvEt9MKLjwZLi/NQ99OGNPHUFqobe9DmJ+7fF9GPR3i20NgvG7zJuFt4XGiO
E7ZQnxec0Wq4BwY6K4WaNtEAlqeO8Qv4/t3KOK3ksIl230fyBOfnQdBTet8x
cwOdpPHeoZ6ZB6xPW3AkdgOduh98oXEazx/Fm1cNgzfQB7fCSGNwP2EMew+O
GyjDxTlJXtzdmX2GzBc20KXbcRxCU3i/0eyXX/BrHZXgPvVTfAKPd6mYnhOV
6yjXdqXp8jie74nZlK/z19FI3tcOBbgHb7WYPolZR9ed2jfO4Jba46fRt1hH
UZe+l9xjeH8p+MNyZWkNpRra5+kdwdf7RU/Y7X9rKKUphEXiZl2bL+3tXEN9
nt42VMEt942T8XvFGvo7n3/5w/A8xBjalccErKF/4lcW3Ibw/PFnYJPiXkO1
4t5fGejH61effo2X/Cp6RyvdhKYbr+ejoltt4qsoZTvPfHYXXo+nWEREBFbR
MDcXH3XcY+uNCWOMq6i1SbL9s058/Vg1XfV7V1C/Xm3ShXb8vK2idOycxwrq
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
q6Es/B9g6qJ0
          "]]}, Annotation[#, "Charting`Private`Tag$139282#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c8UO8Xlr23UiIiGdl73HtEkUgqozSUkCRJyJaRJHzJCpGVmZKVJPe1
R2Qme29l79XP76/7OZ/33HOe53mfcz738pk9umxBSkJCEkVBQvL/p8fkhaV/
/9jQj475Bg8FXHnC7eBq7w4b2soideqDLRU95sH1L5tsKC/T7M/bB1yqvEp2
u4+W2dDvCI6Q9r+YakXga+qhCTY08ETy0H+Zd1SpxX/zoCY2ZHsdWzlS9kL1
ccU7vrcNbCiEV/Tym2+vVHuMrASca9kQzfhQvRlbqGq216awZPl+v3wTAXHJ
SFW9Vi65xAI2VDkkm3/uXJLqF4sxBffPbKj0RM6dicspqrxbH5SvfmRDHtRC
TTwv3qsuHsfVmDP26zPUKZ5xyFKNcLit8yyODa25+DB4XshXVajxMVoIYUMi
jRVXD/J/U+059P7ObR82xLTzmz7ap0LV436tTYsjGwpyrs8pSqpT5f02/VTt
Phsqy7ihWUzforo06uqxYcaGGIyL2bSk21Qr6el9c2+woRc7fs2erzpUI+Ti
A6yM9vURddqy4vqtanlLPIRXnw212e5lCIx3qyq8IMK7tNnQfe2LvhOzfarU
ufoxoRpsqCr2g5n74SHV7ANPUkkU2FCYd2Bma+2oak3qsJWUJBvytJBxPkE+
oTqkpS9mJsyGvnUxd+XYTqluz5Qtvj6+jz/gaHs9zazqwRCxokouNsT5yNJk
8vdfVSmpt64r7Gzo0QPalPKHC6q6HbRwgpENHRbNy4qgW1L1OTJV60/Chmqw
1E/+iauq8d+Ngr5ssiLymZEco9h11eLb1fpTS6zIpaOHCC7cVG0jk+U4/IcV
6dONUEYvb6v+TUvu1h5nRW8qug+NG+6pUp9nSXAdYEVHRaN3N2xJsON/vcyy
f7Mi7/F22+6aAxgWOifY18KKBvqbRu7gZNhVmZuz9A2syKKdK3i1nxyb8Iu4
8L6GFcVVsuV//k6BPen88QmrZEXi19I4IjIosRAXZQfb0v1z44wy6yRqjOvH
407Kr6yIn1mlVC6XBss4mqn4rpAV5dN/Mu/4QYtVEod2mz+yon7aWM9rogyY
PstFU6tsVrTmf9NBzI4RGzDzLyfJYEWdynHcuZVM2AbF6nOpJFZ0/WHc2k1d
Fkxct40xPJwVVZOvTub5sWOl8TSPRUP38Qu7DdDc58C059XaK4NYkftgW8Jv
o4OY+etP0SvPWdHWoeRzpPqc2NLoxGaQDysajt49uXH9MOYlx3PjhBcrsk9e
Ko2yP4LFdgXxGjmzorx4j0Sm8qOYkEiVz5wDKyrlDdIJ2eTGCt22x/wfsyK1
Kycs9rBjWAuPdeYXa1aUGLeVSrHGi1FYaEkfvsmKgt6QK2kv82Ntt6SMZ6+x
okwjaU2OIgEs4SqX+3cjVtTGf676otcJTF53vvqOPivabpIP/3jiJEaq2T0j
c4EVFWFfXfjJhLCfUMlEeZ4V5Qw7HciYFMIsZaKvZWmwIhIPicMvakQwaTFv
T3c1VvTRjj1KvlwU2xN8kKKHsaIzYdQh7ypPYdFH4O+SPCtKHxEpuzAkjtUd
mHymIsKKeBW/MpITUljEdst7hpOsyPeV8JWim9LY7dWShkF+VtSRVSS+QyKD
bU6FsPtxsyIxC3EsxVAWqxlxVjI6woqq3tpaylHJYa/7zG4JHWJFZ1/I+JAR
cphIi3xGIzMresT00EZHUwFbq+dtSmBgRVS7IXlqBxWxikraJTtaVvS2Pm4A
zSli178MqHCQ79czzZiyKlHGghL8m2+us6CoFR65vkocu/rGbkVihQVxy2jk
JA8CJvDa5DDpIgs69hUzZ/dVw74/F7+bNsOCfps3nTcsOY0FenEGOE+yoP9E
R7KTb6ljRi6kOefHWNDqvcq5OWoNbM6mc22unwX1NqxcF7U7g5VYIq7yHhY0
pMxI/ljsLOZ/O0st/DcLMsv3f3l78Sx2zMAzUKF1v5/F3LWFYC1MX0WQ51kV
C2qvT6UY5dHBjsoxa1wuZ0HVD5uNfA7qYlPiW/cEylgQEWOLnz14AfM+/vNz
3RcWlGJD/otE4iKmd7S4M7aABU2eufVYUkAfO3IwedvmMwv6yyCffK1QH8uj
cTrLks2CDJo9Nn3GL2GeZLetR9NZkG7g8Yavfpex87va/xWmsqCvfqcO/xa6
go0scHdfS2BBD7S+v5N/ZoCxdVXbJIexILHUryeLbY0xJJoU4BfCgrbzX8To
yl7FbLzcUy1fsSCH7XftLv+uYjWCMn0iz1nQ5aWUhNxsE+yJK+MGvQ8LohEv
4hQPuY7x/pxmm/dkQe+Liv+quNzAXB0TdfKdWVDf8xzG3fu3sJP1bvciHVnQ
+UmqHDE7U6zjqLHvU/v9fIuw9ytwGxOvYvimYsOC2JnPrvjduoONsLqJVJmy
IOGk5ynFPXex/yyNNNNu7N+XKsdI8QtzTLVEyizgGgvKZ2OCaGULLOrOVIzu
FRZU+J7W2z/PEtMorCwU12dBlvrc9ONP72EL1O9amS+wINeDpQe+a1hh53MN
aX5psiCl0ovGbvP3sXUyqRNfNFiQ+G/tGwXN1liqMf3pGDUWdNivh4P+ywNs
b6/C+aYyC5JbutZcGfcQy7sgOTUuxoJYR64rHhy2w0yT6MjrRFhQRQaX1SG7
xxj96sSxrJP7erMwKt0gs8cs38Yb2/KxoLIQ1MKs8ARjW3B+os/Dgs7kPbb6
/PsJhjQM/pPmYkGPIxU01t0dsCOztLVr7Czotllcr99vR6wWnxjpYmFBnVm6
mq9CnDCH1+V7JYwsKDHc7bu57lPsp5KzvBc1CwoC3kn9fmfMJ2D8PdUOMzK/
f2rN75o7JtGHyqc3mJGa9efGcF0PrE/ibf+PVWZ0k/wjJdM5T0z+92WO0Hlm
xC4S0RNx6hk2KiIuZf+HGeERiSHxX55hoZ40FwymmdHnaTIrPS1vbOYE8uMc
ZUZL4Y9ajzn6YNEucYlbg8xokvQ/ZQ82X+xMk1NpXx8zsgyTcdsp8sUSHMRW
EjuZkdRtCBhkeI5droy9K9zAjMI7fzA37r3ABDrGBmprmNGn8/NpZ3sDsLUx
cRPLyn18tQtelMRLLIayUj+llBmdZs4A9vhXmPUhhsbTX5nRgv3v1e/RQZiq
kLHWUCEz6qbtCraKDcaGtGcx7k/M6EiF7x3v4v+wPBO5r9+ymZGeVdyYkHUo
5vvAS9YkgxmluVgUPtkJxQSD2USjk5jRw0buS1clX2MPW1Q4WSKY0ZODhSJ1
QxEYPvw8/FMoM9JwVSGhi4/EmJeaGfWCmVHAFnsOz+0orIDNnOKVPzMKe558
zHE7GvMX+PhM2JcZWX0fvsDZ8QYzltvYrvViRmdsAgUuFMRgW0ZBS+Qu+3zT
OxflguKwxnudD1McmdEPspUjl/zeYgnOvNOn7ZlRp6PtpUa/eOx0bMGg5wNm
lGtyMKnk3TssoL+vceMmM6K65yFXw5eMmcwJnos2YUYN1+h/X69Ixk79s6uU
M2ZGRpda1yisUrBmXooSe31mxBWnYP6iOhVLlLoox3KBGWWEXqw54fkes1eP
yf2kvX//VeWCUVgadtBcLP2POjMa+5q49aE1HZtyeHr8FTAjp8EAojAtA/v6
vDxeWJUZFdNUnDD0zcRupBtGWMrt5w80PxU0yMZSZjy8h04yI9th6md/rn3C
HLZrdzwFmBHfrn1imWIupknP6szNx4wUEVflqfpcbEYszdbkCDP6r/KDsN3G
Z6wUX5jeOLiv76lED+/oPCz4orJFNBsz2uIey89VycckH/+83kHPjBLKGyfG
wwswUh/O3/Y0zEi1ajZS9Fwh1vHa7DILJTNaPKY4KUFahM1Z/Q17u8eEdhJj
J7wCv2Bu85hN6CgTcjO8YOi8VIK9vaMwpdbPhE5VS9gUNH/DStslzRc7mdCl
tJgrZAWl2N4X/huXG5gQWfnTEP/XZdgxEe4u0iomNFN+hZ4tmMDU3h40yP/O
hHTuVBp/1kKYzzMaXfbPTChD8HXwAaNyLGWJtK4qiwmlL2QVXh0tx6rMdzQc
U5nQkzPyG3MOFRil9rxKZzQTUmCJJ1d+X4kFsvwSfePJhE6PsRwNUKvBsn1/
pp9zZkLVxm6lRqs1WONqLf/mYyZEUq9oSp9bizH2lHCZWDAhzhcntwiFekxC
tyCa1pQJBYoGHaahaMD0y3LYvl1lQv3u2S+buxqw18mJdEd1mVB49IrG44hG
LJ899kXjWSZEQULm89a9CevwDyfzACb09ErkxtiDn9jBB/7b/dJMqPfmaWpl
yRYsVsZm9t1hJvTgjA8l95U27Nt7i3v6bEzoWEzT7b3xNqzvkOkoCcN+3P8o
xs2jHePZudR7h4QJ4Wl+lPe+dWBgq2PMusWIRIq0aNjMfmG3h860Vywzojv6
CjoMjJ1YcpXCD/5JRsSi3vHtodNvrFJeSqtjiBFRqhvXcMh0YWMZIpV+PYxI
gTuv9r/Vrv355f423sSI6AipTZ+gHizTkCw7vYARFaw0emhQDmANtTuCVz8y
oug3Hw8brg5gM0prydQZjOju6zXkNjuIneKZjr0fx4gCEhLvDa8PYRdCRw4e
iWREbfainWJew5gtad/rhhBGRHrrt3Al7QiWO/EzUNSHEX2qatKWlBjFWq/W
Ufa5MaJTRQl7qnWj2FJDuU+QIyOKzIq/v2Mxhsl+KnD9a8WI8n0asw7kjmPF
T2OtP11kRDf7nCLUvKew4+aP33edY0SvL7AkPbkyjQXrnxs6oM6IPN8atsKp
GcxMeM3QQJYRZVIvNwmuzGKNHE2hHmKMKILn4trS6B9MnjT1R5ogI3KOLiSb
6f2L0fVeOr3JyYgG+B/4iY3PY061Qu7HWRlRmN9VrSduC9hQ/r8iHTpGFOS6
/quVehErCMo5lbDLgHgG2UP9pZawWzgNp8YIA5JlMtw5ULaC1YkMXbbpZUAM
nz9IHbNdxaQPfQmO7GBAV4W+Z1bwr2FUC+ZkUzUMSO3evE1Z4jpm36eCsyAG
1P6S6qKn1QbWV8fqovyVARkfP/fws/wmlpuE5oKy9/uZL+TqT25hR0KihYtS
GVBz1U6qZMM29tzV1nwwngHNWqz5PyjYwUyuHO2RCmVAb/XImv+828PIKJyr
Ox0YkNjzW+SSDw/gtot6JCS2DIjxy9a/tH8H8K7+EyrC9xjQpYrcvoEoUvxD
UXuu2zUGRBvnwyPeQYYfTMmaTb3MgKw7gz5HuZLj3v95C/7UYUDq7QUX7wpS
4EZWEm95cQa04d4g1BtCiSMDyt/aCgyI+eLjm8M6VLjI6X6WJ5IMSNlC1ZmU
iRr/d/jVi+rjDCgkkVf4WgYNnvFjwt6aigGd8nF12D3FgLMWf88JJ2FA3GcD
eJ7yMuIeqRFTpZv0aHfkZm4RFxN+2UP9FtMfekTmEyunGsmMl94/HKM4To9W
l2fsVI6x4IJGC+13BuiR3NfU1ZgcFnxbPEG7oIUehfCfJNn6zYpbcjn69dfT
o3L6cWk1Bza8hUqXoKykR3V7RVfdONjx1KFN2WuF9Kg9qH0z+B4HrvfakHcv
hh5FFgyWV+lx4q7STNpa4fToutJY8G+2w3haW93j0CB6FBQQrEM3eBjfY1Wt
PO5Fj1yLVx+FBnDhIvmrsw+c6ZFdfqaC+r2juNGVT+yFj/fPY/bKfuly4znh
xy21zOkR+feSG3Zix/Aumb6Q0Jv0KOwzmrRj58XJOyK/dBvRI9//MkfJo3jx
G+w0NDba9Ej49oC+5Hs+nD5yPjtUfB9/3e18yXV+XFEus6P7JD0SEzA6fyla
ADf/ZbZ7nI8eSVWHqNxRPYGXcnTqFbLRo6bN5OXxSEF8qvC/p3v0+3jCf/hn
nD+JsxtpJ2pR0qNLjrUH18iF8AdRpYvdG3QIFm83dgUK41HyTkf4l+gQD+XJ
/kojEbyiU0LDZpYOhYwF/hgXEsWPHEqJ2OunQ5Rnckn9h07hDdEvFfgr6ZDW
ZPkGfkkSX1PQuG1TSod833xT+9QmiR/v2gkoLKRDfHQ7M6RXpXBXTrserQw6
NBnTZP3bVhpPKxYmC0uiQ05lPzTekMjgbVdHRXti6RDr3cHCsigZXDjGyMMm
mA5RvdE+W90iixsoMacV+tMhqaf2B/84yOHPuut/7nnRIb982SUKHnm86zDG
G2ZPh5KeNIVneSngAbH8lYXGdGhUM7aP47kyXqDcP7unT4dMXkV1nDJUwYd6
otjPnadDqnar689EVXFFLlrLHlU69CZB80LsLIabf6sM4ZenQ38WtYWJXzge
et3ji40EHYqsdgodqgF8Km6B+h/ffv1eyWr7QTWcXTVL6hwXHaow/CR2+O5p
XK3vrkkYOx2KbnlTmz5zGn9z9Hc2PxUd6lHKerpKoYFrxX/XO/eHFklHebbU
2p3FF4L7dsgnaNHRLz2HGug08VjP7azyQVr0bKy7jy1bE/9jqkSl0k6LGjRL
+lfWtPDXxwsJsRJaxPVsR96w9jyuytbxcCafFt2KlcPWX+jg42TLXOk5tKjH
Id5z+IIurjgu6cybRIvO5Uk85Z65gA+kf5BkC6BF24WJJwQK9PGANz8Gmr1p
0cQZhhMJopdwqZczQUFutEgmJjvVOO0S7mctNE3xiBZR3DgpPvb+Mi4ilpq0
YUiLlv3FZnebDfAO7sqLhRdpkYBqgBaduSHuwTiy+1ibFglSpjw4umOIt8wf
M5lVpUX/2Rld+qJojDvlxbEO8NOiewwX9+YnruG8KSUolpsW+TsHtykkmOD1
4d22xodo0c+pn822Jtfxo46HfrTQ0iL6y9f6T43cwCsUwn0rF2mQzLvbgpcP
38ZthPKkns3SoL+9FY3BgbdxjsOtg6rjNOirJovSz73buNUWo2pRFw36LS2X
8HnhDs74PXAlg6BB//oZOe/s3MWLczKTLb7SIJo/Dh/4AszxOwl1+sfzaVDr
RPBqzCELvMCLMicujQYtmfU3s6tb4ibqPhYhwTRIyy3kBk2dFU4uk8Sm84IG
5ejLv77mcB/P4UflVN40aEf5dY38CWuchGKP29uBBnEt9p1ljHyAp9W6dD65
ToOU7zhEh+ba4jHSThqZBjRIT76zrDbqER4Ub587cIEGbWToqFeetsPtnzwI
1FajQSbqAfE5io9x7NhN/NgJGhS95p0ye+kJLhl4LduAhwYFNT74NzD8BD++
asgZeIgG8W3HXR9zdMCpf+gtrdDQoORd80NvshzxDie1tIY5asT1y99mXtsZ
rx1WZSOZokYaOBVNya4zXqKr9ExumBodanxC/1+RC554XNoksZ0avftj9WZE
wQ1/8JOf0amYGv06Wlst4OGJ31Lidcv+TI1URcuVZW564fqpR6eGsqiRyLL4
ainfM1zelaNCJ54a2XLaRX9i8cZJBamc+HyokXPkP8naI774aijZqJEbNVK8
Ju8unuaLT23/uxjkQI3UlcLYH8n54T9bN4TXLamR3rGA4HHT53iMx0x/ow41
im7+GZo9+QIPmpo4T3qWGrG3LJzsjwjAPa+MflHAqRHGZ8X0Q/Mlbi7cF5Ys
uc93/H7Nta+BuOSvprPOHPv57nO1/X3BOL9aQ14OIzV6bVgjFZQfgh/Mrjk2
SkWNnkaecqYL/Q/feUZsXtiiQkm9F44E54Titac+5/APUqE+7o/6uwmv8ZLo
nCPXuqjQSNcMYyd/OP6BNOtFSCsVwm2HZ9U+hOOvu5LvbFZSIdNXP7hF6yLw
W34RHM0ZVChijs/lgEQ0/hPWqJyTqdD1XEYDxrpoHLaNt3jfUqHzt6kfT5i/
wXntuQbt/6NCO9NUlYZZMfiIaXLGQScq1Jow3jpg+Ra/zEUeRzyiQv4a/jVz
vPF4ZadFsNV9KuRg7bn8ejAeT70gbF9ygwppcFjHUj54h1uq5Krc0qBCXz94
vxu6lYR3rrGIU2FUqKhQL6uhOQnXynvCmytPhWrPri04aCTjQsIKFKQiVAjI
7q+el0nBZw6W/XzPTIXKPj/n6ZR/j5u0HSvXo6VC9Jr+V2OJ9/iPYO/8dTIq
dDOviS9bJw3/QH72jfY6Jco48iqWxDYdt136cedvPyXqF2jKLujPxAdyxAyi
flOi8lbXc+y+WfjF+/9pQislenryq/a9U9m45NBl0bAqSmRg4/RT/dUHfKmp
e0U2mxI52puRWrl/ws1eqkz2p1Iizm2V9W2+XLz9THy3fwIlurgk3M4TkIsX
fLtd1hVGibxEEGRf/4w7ZU6+cHemROeraHQf8OXjE+barifsKVEJT8Pf8Jh8
3Jg32+bnA0p08wT/tVfsBbhitO0lXlNK1LfCt3yCrRDf8ls9UnWWEpmdKvjV
KfsFt1YzZngIlEiGpdhMrfoL3rtd/I9DiRJFWyk5/7tajJfau4/dO0WJQLsk
tTbwK+55m+wjHRslMm+7rxN5uBTPbdYK6aCnROzecfiFylJ8BA+yjaekRJG2
1eQtdt9xTW4OCYktCnT2aPizF7/LcMYewdzLwxSofEHOg3IW4WraD0K5einQ
fwGsMzL65bh98Se7sQ4K9DryDGP8l3K8M0pRyqmOAn3i7dC7FFyBJ1w5nxfz
iQKFGq32RRhW4S0VIa/NMinQ148lrYtNVTipdLu9aAoFWtP+7Pf3XDVuyXxD
5nsUBaI4lti9plmDizc9LBjyoEBXmF6f7TavwwnNsKKTuhRIMIrNbla2CV8q
/BW1cJYC9ZS32NAONOECJ448/QoUSEqo6/D3wJ94AFmKgo4MBbrfcS+cf74Z
10cFxbZH9uvxbExs2LfiPhKbbxTYKdCG8bhVR2crXpCAuZAwUiAnSnG6KtU2
nNOjRun1AQok+8W3gYqpHR9S6iopnCJHuferqtR/duCsmUfjPEfIUYa5d92g
xi/8DOcdN60+cnTr+Hud8W+/8Iy1aZXuZnL0hr9qzii/E7fL3y7dKSJHBz1O
9xwq78JJxI4RGs/JUZ9DclezWT/ufvD0reee5Gjix8ZJL9YBfP2f2W7NU3IU
+7L27FL1AD7XlqZy3pochSVpacofHcJ7ncWL9S+So5jBy+d70oZxIzN949fn
yFF5wXe/SsYRvE3Hfq39NDk6OufA1OM8gtfxFMkay5Kj6h1Xty9XRvGiKuzz
zcPkyJNnr8DoxDgu/dFU/x0rOarnEXJpfDeO50R7zw/RkaMO62nFqqMTeKp1
tZj5HhlKstXgsuSZxF8zX8iyHiVDe4Mbxz6ensYf3riR8jSHDDnTFP7OZ53D
p856qn9NI0OCD+6FVpTM4eYSicNb78jQL0YvNg7LedyEdOyY52sydO5Mnv6N
uwv4uYwHb/2ekiG31unvhV2LeFVYsEqNHRlKGbjE5ae8hIPbpx4qazIU8oZ/
XDhhCZfXW+Z8dWO//1X9rUMPlnGBFdfIsNNk6LLfEO25o6t4Yv9b2XZlMqRB
qygYF7yKc9WWtbPLkqHBu0Yl/0jWcNZYUtY3gmSIRE7+8+G5NfwfBIYk0JGh
UgZDsVsjG3jPq5gX2b9IUV7tkn+V0i7eXs374XYzKeJdGVkMqd7FG/+lt3DU
k6LBBOYrIVf28LInRYeflZKi8zyf3M84/cOTr7dnG6SQoqiZjd/xsyRgLcrQ
smtHikhpT968408Gdy0iVvKsSVHvsW1S00EyuPGO67CVOSkKFXZ+kq5EDnps
ImZtxqRIvO3lWYElcpDe1lxJw0kRuW3XR54nlLDd8IxTn54UtZPLmzh+oYEV
cmqMgpIUCQoe1rkvSAtz+H93Sv4dQF3JAm2tUbQwlBefJbB8ACVv7I3RuNNB
VWyJ6mb3AXTbsUbM4CoDBFmv3E5OP4AoV185zXxghuepbs+Nkw6gO0cLONwX
mMFzgDSLPu4AmpPgTvwlywJ2l1mWnUIOIIPd+bYRggUMlMWf6zgeQM6JHPdt
B1nhKK1V5or6AXT9fY2n2RkOuFXWGHRc9QBac1xLvhTHAUn2Unb6cgfQiapk
VrFlDhDs3ZL/cPIA8uUTCX7//iBIfAiuukt/AE0kaKn5cHCCul7+YNsvElRQ
Dx+6j3HB/dd7HJ+tSJBv8jiV4BQvfNC8uzlwhwT11n4U+8zLB3NbtX3010lQ
yD9dpqBrfGB/NyzF6gIJom45tHqykQ/cZQWkeKVJ0G1mUbb8guPAkxP+hmf9
H6Fy4kUAESoAD+REKHqP/iPkNY4JBt0SAnuKr+lOTP+Ivm9Qrx4rBK6/tM6z
kv4j4Ktg1vAvIQh0tPhPe3KPiMgrvVCnKwxZhYmHiz/vES7SjxjrFEVgWu6Q
eKTmHrF8ZPjPMsUpWKBIa5FU2iPeOJ97egY/BRu/ZJ80iu4Rzs7nuFWcTgG1
0+ViMpY9Qh4lO9OMnwKhomB1+95dQoc2ajD/uxjckyc3vmi3S3R/zB/LMJYA
W8rwzRmzXWLxvH2iZYAEOHXyvfU33CVMtnSOvCyWAH8nGP6uvEu4/mtHTnSS
kFbk+uAUxS5xe9zRY8JCEj760zDWre8QJtMfRlLdJKHI6E3u3ZkdIsNn9w5V
mCTUrBWuxjbvEN0UbP55JZIwLr/oRRO7QyznVVc50UjBH8pnx98H7RAfql5d
ET0qBSudjNVqXjvE3n8m8s7iUkD+9BSts/kO0WAiH9l5SQoEvtyLmBDfIYbZ
z4S+CJeCUy/W5H34dggbg58RQ8lSIGv8vJubfYfIdLwZWv9ZCs6sJ/MYbm4T
O8o6fNo/peCuwkBGZeU20eMSQL5wQBosMxSMNL9sE4NTRtxL9NJgfTiMrD5r
m2Dheazz3yFpsNvWuPUzbJvgbyy7GysqDU9s4ukuPd8mfpx1fUotJw1O/WvF
7c7bhEBwaR4LLg3uRCZbt+k2EfL9Bs+anjR4SZKVX7+yTST0OEa3GkmDT9IN
2wHNfTzvHOrP3ZKG56xFXHeUt4lOo83h6xbSEODLVD8qtk088nnBSWcjDa9W
rJws+baJkccMS0b20hBiUcE/zb5NXO1iE1BzloYILUfPue0t4uEzX/e/PtIQ
XfxT9PH8FjFq/ZAv/4U0xAoLdS+PbBHd5Rlch4OkIT7W29+pc4ugunlYhjdU
GhLpemU267eIsqU/0vXh0pDiLjvs9n2LKM/3nWaPloa0v8Ehe7lbBOnLyZPk
sdKQdWtSxTt1i5DLY1mJfisNOc1q02RvtggHR/Hs1gRpyFWLjfJ/tUX8OF2V
n5coDQWflzVovLaIAwYnn6omS8OX4xcWX9lvEXFcxnfsUqShJDwtgdFyi1iW
7hu6mCoN38lJdMOubRHZM2mWffsxcry2yXZhi1C1mrM49F4aKify0qLUtoif
xswGpPtxjTG9wWHZLYL5GXtGwn5+fZ3Fgbcnt4iB3oqlv/v1G5WIjzxcW4Sj
t53Q0n7/5izOG0mMW4T1xO/LOUnS0MZlTyNAukXcOsLvwbeP91fQj6K01U3C
saUqX3+fT9eugLnw9CaR7XWZHNvn22fryfKhb5PgjDX1mIqRhsHB32XiLZsE
ae81ccN9vUb0pWw+V24Sw9mWJ59HSMNEeeBh2S+bhEbiaRfXMGn4k4I5KCVs
Eut1Pv++B0rDPHs0X2nY5v6v/KIey/59LT1f+Ik/3yRGLMJaZHylYeNeivAZ
m03C8nPFxIKrNGx37XTWmG4SBxZvFoc6ScOetpGf9pVNouAYqTztvj/IT9EM
6ilvEvPEWnqElTSwLNhGXKPeJOgu9BsaGEiDiLPyP9vUDQJF2NqKCe/r268n
Mhq1QVz/eV7lEr80GGncNTR+uUF8KrH55s2971fGoGyw3SCwKv7cI6zSwOmQ
2Jl/e4PgSZagC9qfl4/dBQeErmwQFUeTJ7iopKE7td+YWXGD+Mc+25yxIwW2
tEs+fiIbxM5Zo4KP6/vzbEf5cePoBmHw4C7j+JIUxP460m3DtEEUuU9V6M9J
gaSKBPnwgQ2ChG+8cG1aCmoSNSQMV9YJB761+t5xKbhBedWkfmKdONuZMUQ+
IgVLD2yeY93rxJenv3qcBqQgoPVZ7ucf60TdFZIY+V4p4FGI7D1Rtk4ET5Vv
n+uSgoK3mZSxuevE+ojcWN4vKThPWibFmLJOmJE+lnVpl4Khe203fCLXCd2I
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
          "]]}, Annotation[#, "Charting`Private`Tag$139282#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
sw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$139282#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"Classic STIRAP\"", 
         StringForm["Classic STIRAP"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8432593473883543`*^9, 3.843259366017068*^9}, 
   3.8432600770971937`*^9, 3.8432609744092565`*^9, 3.8434121293978276`*^9, {
   3.8434123443946486`*^9, 3.8434123496028767`*^9}, 3.843412494315836*^9, 
   3.843412731913904*^9, 
   3.8434857799179764`*^9},ExpressionUUID->"5c4e0264-0b52-44e8-814a-\
68e44e550bde"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = -5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], -5, 5, 0.001}}, Typeset`size$$ = {
    360., {193., 198.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$139355$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = -5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$139355$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, -5, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {240., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8432593473883543`*^9, 3.843259366017068*^9}, 
   3.8432600770971937`*^9, 3.8432609744092565`*^9, 3.8434121293978276`*^9, {
   3.8434123443946486`*^9, 3.8434123496028767`*^9}, 3.843412494315836*^9, 
   3.843412731913904*^9, 
   3.8434857799936776`*^9},ExpressionUUID->"3cae3837-044e-45cf-90ae-\
ddfcc62d8d8e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,15,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659188012743`*^9},ExpressionUUID->"df2249d2-a729-4d32-abee-\
a51bd26fa9a9"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,16,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659188431177`*^9},ExpressionUUID->"17fad5e2-7748-4fde-9a2a-\
e705d8148dbf"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,17,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659188802633`*^9},ExpressionUUID->"6f350312-8411-4146-900e-\
9361e0fa29f4"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,5,18,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565918908951*^9},ExpressionUUID->"ac33c2c1-7bd3-4c40-a561-\
4ab66eb7745c"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,31,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435662028466873`*^9},ExpressionUUID->"9c14dc0d-3b55-499a-bae0-\
18aecebd0e34"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,32,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843566202882919*^9},ExpressionUUID->"4f67a12a-7c2d-4ba4-9f64-\
05d52d1d07b1"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,16,33,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843566202909704*^9},ExpressionUUID->"b9556da8-07c8-44e0-a897-\
050ab12fb414"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,16,34,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843566202935596*^9},ExpressionUUID->"3f3919e6-f98d-4c06-b97c-\
38e2bbe91ca7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[CapitalOmega]0"]}], 
        "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.2"}], "}"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<counter_intuitive2.gif\>\"", ",", "gif"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.843260087717947*^9, 3.84326011130365*^9}, {
  3.84341273661294*^9, 
  3.8434127625805864`*^9}},ExpressionUUID->"59eac2d5-8cf3-4cc1-8f05-\
fd4eb62dc699"],

Cell[BoxData["\<\"counter_intuitive2.gif\"\>"], "Output",
 CellChangeTimes->{3.843260093249157*^9, 
  3.843412748486418*^9},ExpressionUUID->"040c33c3-ae12-4abc-a095-\
6fd6904b3dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Intuitive", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"6", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
      "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", 
       RowBox[{"-", "tmax"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<w/ intuitive pulses\>\"", "]"}], ",",
          "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.8432587043900986`*^9, 3.8432587418230286`*^9}, {3.8432588153159046`*^9, 
   3.8432588153768034`*^9}, {3.8432589455706663`*^9, 3.843258945655137*^9}, {
   3.8432590166434994`*^9, 3.8432590225390444`*^9}, {3.8432590803975763`*^9, 
   3.8432590950563774`*^9}, {3.8432591262164955`*^9, 3.843259126366373*^9}, {
   3.843259192401531*^9, 3.8432591926731343`*^9}, {3.843259374207531*^9, 
   3.84325937579399*^9}, {3.8432601163249454`*^9, 3.8432601168637657`*^9}, 
   3.843411947499678*^9, {3.8434123654820533`*^9, 3.8434124016738377`*^9}, 
   3.843412447342079*^9, {3.843412609690152*^9, 3.843412609749276*^9}, {
   3.843485598857459*^9, 
   3.843485635534086*^9}},ExpressionUUID->"4e05d4c5-272f-4764-b9f6-\
df9e7fc48566"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.843258752816162*^9, 3.8432588158175955`*^9, 3.8432589460402517`*^9, 
   3.8432590181690598`*^9, {3.843259085641266*^9, 3.84325909547139*^9}, 
   3.8432591266171875`*^9, 3.8432591938064814`*^9, 3.843259377655038*^9, 
   3.8432601309038134`*^9, {3.8434123812666955`*^9, 3.843412402066861*^9}, 
   3.843412447743969*^9, 3.843412610071547*^9, 3.8434126714698133`*^9, {
   3.843485602081085*^9, 
   3.84348563572826*^9}},ExpressionUUID->"ac8f90d9-864e-4865-8aed-\
34723c7efb5f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
GQPG68PBaa/ZRxI7bcDfcS1XNTEciNZwn2O80w5iyr35x86HA5L1/TayeAeY
uHtnkjspDMzG861IlXYCrXGB9XCzUDBx7kxX/EInqLX40pusGAqGp7VKmIX/
Ag3itD0VMRR0K7r6jb/8CxIvHf7wvvItqGr/cyjhSheg+M73GJ5+Cz7gPeRZ
x7pBveLy8znRYBCb9+awF3cPuKm38vH0cBCIMkzcndTtAWpAmm3vfRAI/FJf
WZHVAy6aMSJy3EHAU0P4xmPPXsBGoR5eYQ8EBo+bPWZY+sHA67L/aHgDAI0H
Z5/V4UFAokeizQL8gaF5emuh3CBYG3hi1qrvD3LPgxq8/iDwCvXdqeb2BxZH
7Qq++w8C4f7M6rOfX4CyPyVvcSuD4LXaB3e2ej/wnM9KM6VxCKTlWZmUSzwH
fXSbKhtTQyCIihK0sOUL5BaCZPTohkHw9aCnoTW+YLTix9EVlWFwefAV9ylb
X6Bxn2XrXNowmKCv00lJfwZwv3OzRp6PgIamBqq5c0+BcYb2p7MfRoC1eE3e
HM9T8D2yL+5N0Qj4VCM0+qXvCbC6R/9adnEE/PJqSUyUewIqSYaWz01HgW6T
gmb/nDfwt6HmEVYaAyJnjioe8fMCDHj9Zxbz48CHx0XSQP4BuHXCEFNgmgAR
vVJPGNY9QLq61T7z8QkgdIub6dpPD3Dpoad33u0JoCDxuvor8ABR4x8f4ion
wM65nP/UrroD0d+LLqlxk4ANz/S+L8INePZt5zwqmAR+Zd+Z/zNzA7XrdAuX
WibBVaNLGSHibuC+FO/9dfopkKt5l+VymSsoiFO/p+M6BTSOVps3rbsATY9w
i2mdaXDebyxs7KEziAp9n1hqOQ1eNfQtI3rOYDLz82CYzzSY/l34jOmoMwgc
KTZV+T4NXP6b1J194wTa9UcNA4/OgGvqyzMkmfvA6pT8Vam1GcDPcEU4INUe
PB/sPOeaPAda9dj/mgrfBf9+XnD0LJkDDXvUQpljNkA5HIvy6ZgDm/Juh95+
sQELmulTAQzzgNVFqpfrtA0wzfAOSbafB4D6a9KOpjVQ9jje2y57cM/w2vXi
CrQEUZdjcL0H9/IOWu86pZuWYPEkm9TQwTk1dnTXaPCYJfjSu/50LpoC5EL7
83KLLQCXWp0o/cG9o2rn2LDe8h2wSaf0k89iAfBedVG2fGgOUl2XGxLuL4BB
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

          "]]}, Annotation[#, "Charting`Private`Tag$138644#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$138644#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.9999997959183675`, 4.9999997959183675`}, {0, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8432587530275764`*^9, 3.8432588160539536`*^9, 3.8432589462210064`*^9, 
   3.843259018361926*^9, {3.8432590858573484`*^9, 3.843259095660656*^9}, 
   3.843259126810398*^9, 3.843259194028412*^9, 3.843259377882122*^9, 
   3.843260131016238*^9, {3.84341238140788*^9, 3.8434124021650524`*^9}, 
   3.8434124478529434`*^9, 3.8434126101907864`*^9, 3.8434126715647554`*^9, {
   3.8434856022268085`*^9, 
   3.843485635831899*^9}},ExpressionUUID->"9f63b9f9-45c3-4cb3-b798-\
699bec2a83b2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c81W8btvc+DTOinyJJJQ3lVopkq4hQJAlJSLIqWVlZWVEke8sm38fe
e2TvzTkH2fM97/nnfK7PecY9nnPd13Xc6JXmMwoyMrJWajKy/387z6isHBzg
0P7+AelDhGnHI2sDuzj05lBn0C4Jq7KNbBRs4ZA21971FRIu+JW4HbyOQ3dC
TneNkrDAFau9V/9waJ1u93QdCXs1XyZTXsIhztA4niQSXjYkpzyFxyEsSObd
BxLWXa+npprHoYgP00c1SLjCO4hudBqHvqw/buAi4dP8jxhLJ3DoFYvN0/59
IoT8FmIJH8WhqOiFvCAS3lVYZLMdwiGOVxEhN0n42WAuTr0fh3xd1Dvm9ojQ
YuV8ROwvDl26Tn/Di4SlqOW56LpwKN2tMoOPhOnE/x5DzThk8ZCxRGyXCK8r
fhyPasAhmt/+/+J3iNCvZXrCvhaHquQPDA6T8M0FiZP3q3BImvp5g8M2EVLf
b4lIlOPQ91etFD1bRDh0qEKMqQyHstaPdgqTsFOS99nZYhx6fdeX4uUmqX7t
PBdjckn1kKD91rtOqt+zyUtO2TiUyyUatLdGqt922tWHGTh0Sz6H6igJLwvK
yLIl4dC9EG574X+kehXQyC3+wqHB57wUvCukeim13q6LxaGP345zUi+T6mP7
ROnDNxziCxyZyyIQYY9ORFUvHIcOMB9hGzwRTKKX1S9/JcV3Rmj55CIRLtW4
ai3545B136CE6RwRYnSVdJp8cMiEYerYvxlSfYg4vSQvHHquE+L3appUj6Px
hk9ccWjrrUiH9AQR5NJeGl97T7o/YYDbZ4wIabJSzzmdSO+FqrW+YYQIzi9q
Ldre4BCP2zpwD5LyK5l7K/sChzZivPiWO4nwWS3HgdcEh3jTWbVK2omwMuHg
vGlEys/e8LNNKxEqmZg+ZenhUNzf3z/TGkjxG4j7C6jjEPW4ctFlROrvynrA
rjIOLc/iml/8IeXjiQX3KuJQjvsjCY9iUvxZ6hEBcqT8XLbevc8l9Yvc5hfZ
JRwaKH0hYZZIhMv3UmgiLpDew5iZ0484ItT8GjM9J4FD26tNe4U/iDCqoH7G
SASHnnmHh4SGEeGI/5n8Sh4cEr1E0YJ3J8KvEWNOPU4ccvz53EXqIxHOnYty
WD2EQzfHFRUfOxFBuYsB/mMh9dMubkzVmgiu3LO1HmSkeGjwHKF6RGCz4Bfl
3+NAj3w3fFu1iBD9R8u3YIsDUcjwBE6qE6HwSbX67AoHSi/I7vx+iwj4hJ99
ilMcaPNl7YubokRw2OyTHh/jQDasJWXyQqR877J/dxjmQGWrF8OO8xJBEP/e
KPUvB8oTtVR/yEyEhxf0F5gaONAPDh9iPp4A024hKvE1HOiWxgKmN0UAm57G
zOuVHKjYJPFn5yAB/N9dtbUs5UDML18NnWskQCV2dK81gwP9t8LsERVPAHV2
tcemqRyILNz8SME3AgwbeZSTJXEgs5TW4ahAAmxSr7mfi+VALPkWjLVOBBBX
7mAJDuZASjVc5R/UCVAaTf/6dAAJCzIsjNwigCJRtrPSlwM9ThsTpbpCAOOg
zLBVdw700eGUX7gAASJ7fQW07DmQSJ9YZN8iHqifKZzn0udAn0/Tq1G/w0OH
wTntBR0O5GDmE2tghofvD3mc/mhxoHptixH7R3iQUiZWG6pzoAQ7Ry38NTyY
XAjTSZHjQP0xBFzl7iKcP/PRxUmWA4VfDnzBtrgI+8LmcarXORCl3AAl18Ai
hHEDfkWKAw0oP2DXKVyEOvKZD9KiHChQ5euTD68WIWSnLZ75JAdaOFoYFay3
CE/WihtGhDhQO5WStZ7iImzN+h9y4+NAxgHEU0yCiyDaJpXUxMaBnBxtWFpb
F8D3u0er/gY7mpzkULvNuwAPw61Wz66yowfXDKP0qRbgRJAuF8UyO5JUU7QS
WJyHP+7iTxPm2dFsgiZVXPE8ECx61glD7CiR3/2S9715UJcWPvahih0JWQRN
GdjOAe9FNjnNcnakGLIm/FdrDmbFt5+fKGNHDXbdhUuX5+CjYEt2XQE78qat
P6DenYUcervb7KnsKOSQbWy68yzgeqstfgayo4pnL4ajLWcAnY71cvNnR+J/
bMWylWbA4r3TLxMfdrQriXM0PjUDNcIXBkXd2dGP+DthKaPT4PAmRum3PTu6
8chNJEd5GsY5HEWrHrOjFXfzr7kcU5CjIjE7dYYdtd05mW77cBwexzJS1Ymy
o+kL5XcHRMaBaW2aP+UkO2oxTW/Bb4+BSVS0tuVxdnTbjrKLO2oMuBcYatcP
saN41z+Zef2j4Oo1FU+7y4YyA1snVUKGQbMy8qlIAxuy2/bJm9n7Cye6Jodr
a9hQrEXJTbzXX1ifFNc1qWRDH+jJKatxfyGCplI9rpQNvVqykWIS6YFRxYXr
fJls6Bo3h8iCZhe8bJPmZA9hQ2tx4UdOpLWBzJh7cGYAGyoSk7sSfrkN2FZa
WVT9SOsZ2RvXvVshF2dM7ePBhmYGgiYdypthW8t3heodG7p/z5WT5noDeA0N
Nm3qsyGLsw956N0rQZcgfCdMlw1R8v/HUVRQAWIHVpUXtdlQQtynU8uL5dAq
QF1src6GnF6lZlg/RnDE+Ezi4k025NU1ZnSmrRhmbd8K+gAbulOaLF5lXARF
7uXRItfYEH33YJY+WSHoJT4IMbnIhqjS3gf+UMmDuHnnj6Mn2dBjgft3IhSy
wHandtflBBvy+bruuCeVAfJMHPZ8x9lQUrzK3dWlVJg/k2Cpy82GFEef8ftE
J0KpzNLc5hE2tN0/5X89MB781K4+C8OxoadeAbayEXEg8brlURcTG/Ln82XJ
afsBFK6cf63p2VBDxhz13pMo6Aoy0mSnYUPtnK+ZTx2LgIS4tOZMCjbUbGl0
/yZ9KBBM8YFR+6yIXegUlb5QMAR6f/Tq22BFhMhTTp4vA0Ay7fD7I8us6Es7
jV50uw/0Nie/uTfPinSKnnM7iHmCI/G6RcAEK/p9vHEvF+8KUYaXZmWHWJFW
/rFHV1JdoLRTwni5hxUlLllYnpe0h6HboqOxbawoZJSeMvSdNewXCOlpNrCi
2ZvHj17dMwN+Ub5eiipW9AlXtbvuawSyUUfu//7DisirvINMNbTBkIWt7WkB
K6Lrefjym64iuH6gVz6UzYrwvPvnLsxIQtwKRV1VCitSFsshjznDBlXGu3Jv
frGiCul076dnumSmetaw/76zoouXGyLZGoSARpEo3RPGipDg67IUB1k4WTJb
4BHIiopXaFafmWvAnTPjFy75sKK3KRlnT7MYwIsfA5kzbqxIfGDoBDnnc/Bm
7z4d7sKK2rT+8ZbaWUHqp5bEO/asqLP3V+ApeTtoWqsV2nrNioqSWn5H7joB
/nn5j2RzVuT36+39U6quwNJfzKP7jHQ+VjFSGOwBZ5Vzwxges6K7Sx08tOo+
oF6Wjit5yIpWJx4for0ZAEE/Yxh5lVnRI+rLjC9Ph8LvQ5GeTbdJ/Rmlpot1
jIAuj2BKZ2BFSkeLKR7QR8MRc4+dofOsqL3x+Kr8q59waej9W38xUj2p8BL3
g3/BQ7V3/2SEWVEtpYhhfk8CRF6wWPjBxYp2eMTte0pSoST+2XN1HCtq/vvr
dr5+BgwefTxBxsyK0r/65YZ9yYJjuxoDhmQkTN1C+/7DbwBLJW2ObRbUxm+y
l8iWB09Gb3VW/GNBHrkxsRFZ+fCz6lKj0AwLuvZJgTeTvxgqpc4pdI2yoNWt
B+oFhBKYTBKtdOtnQe+yb1hqNP8BYT++kqlmFjT+ggVZDyJIfkCZmpjLghp3
0lblhKqhoXZX+GEGC/I/ZXgsWKEG5q+s/6RLYkF5ivl5p2xqQezYXOSLbyzo
/K8nNNUj9ZA13eJ92pUF3bagEc9hbIXCt5FmmWosiFk++P1nhW4QNH4d33uH
Bfl+lAwv5O0BP/U7o+Q3WZCOo2RJ2WoPGImsP7gvyYLMTjB/QWm9wDigcWOL
kwWV/hUeM7o8CAYy9Jxy48wox+9IW2PjGNSJjmpaDDCjmrIYyxty43D+aIHf
1y5mtOhBvva7eBxol4wpZ2uYkaLh28VjyROQFYsIvqnM6KYnT173hymgpLav
7rFlRqyNXbeiyebAclmVjMySGeWPvZJNfjEHvUP/SYs8Z0ZOBWabpW1zkJbf
meWow4zYdG7MvgmfhyNxKQu/NJlRBp3Vzd7Nefj45aNwixIzotwN6ijVWgAt
07NRAjLMiHoulM6LYRHQfZq/ipeY0V+MvVbsCWme3hhit5FgRrNv4snachbh
gMvHs1qQGc2cNhAJVMWDGY1RBYGHGTm3eRyzCsND18rlvaOHmdH44xWd1kE8
JDVOW5vRMqPkd77yX/UIwFH4Jz2YjBk9LbYJR6EEcP4VMlu6xYTMM4ZPrjcR
YDbAXGh6hQlFvJvx4z4ggKbzTQPWRSbUxujPhDtDhNIXXBGXp5iQTzdNZDVJ
3wlrLXUaDjOhoE2xRU6SPgy4Wcvi85e0f+u/lNUoIuyIf1fMbWNCtPBX9mYR
Se/yvHEbqmdCXDxmqottRGijVcZoKpkQh7yx4TBJf19dFdw+W8qEevbnKalJ
fuDX6JakTh4TqrASrVUh+RWW5rZXrhlMyCzh84dEkp96V5SYkprIhGIp84wp
SXgy3mWqK4YJeWZny90n+RXVoAcC+xFM6HmC+3F/kn9wOM+qqBDMhCbt1+7v
DhMhoaPudYAvE1I5ta36iqTHO6xdI/vcmVB+ybzbSBYR9jmuVQq+Z0KOFHzC
d4KIIPp7bcHcngm1n7C/l2BJBK17mYfyXjOhnGCdj5u3SXr4n+n1fTMm1EVu
816GkwjpwYImCsZMSITn7Md3JD3ae2HQP0CfCdU0nrmVlk4Aqq6vBX1aTOhd
i4TPoBUBJGzVRgXVmdBcrfx3jrME0DtET2+hSKoP88WbD2fx4JVbcS7vJhPS
VTleXBiFh9z7Trr70kyI/th0s6wyHpi+ElMDxJkQumtjQhW9CJcvJnf1nSTl
Z7+59ExmEYy7jfYEjzOhf2M8CVcGFqD0cI9qHo7U/43TU2G0C2AeWrrct8mI
Sv2yH4L4HIRK2XELrTAiwY+CU1czZqGi56ycxQIjGmO3TIsRnQXuo3Eh+0OM
aO+i0dxdrhloCPt8SaiSEeVbey6wdU7C+iW5JxaljKhCrxN3SXoSBHt3vfLy
GNGjDZyobOwEOHBa9SskMaKQ4kcWI8/HQSRCy9nCjxHtahGs4xpH4P4VtoQ8
D0ZkFH1un8lzGD701bfsv2dESp616qw3h6CX67pAoDUjSrU+GrxZ2A9ekUKV
edqMyD9cekujqBtyrw4t7KszohcpjCvvPnTBaH/ooTt3GZFT2i3tYKVOuMzD
YNJ/jRHJLTyJbCe2gXFJpb+QFCO6MEr2XjikFQIeORdYnGVE25jWLMWDZpj9
tkR3cJwRaTlkj18iq4dD11LO3eFhRKE8ka/KFmtAdvCpbuAhRnSWwJ6yNVcF
4bx/U4VoGZHQNOfHeu5yqCoN6LIgY0Rbvm8Yp2PKYEnv7l7eFgPS4Kklm79Y
AgrRf1TvLDKgy871r/Mmc2HJb3CXapoBta+UWKmez4FIl52U8hEG9M7jdwzu
QSbIveLWceljQCercsTColNg8fEVWulOBuSixiXVKpsAoeoP8zaaGFDRWqDh
zRs/AW68fZpbw4DqEkJkUm9Gw+y5UPbXiAE1pzjwh9eEQpBgHnammAGlfazW
+8oRCNdwXS/nfzOga7+CZu488IIpyn88iekMqFXMEzd74gP4r7I3PE1kQHr4
6A6HizZweUrCXiCWAZUnK7ep/TOC8W414aFIBiQRdCc8jU4RfGosuyJCGBCb
85c7I8EMIFng56rlz4DIXl3u/FZ8EoYT0yRwXgwoqfLVIWmae+AV3jjc+pEB
1TPx1bt4m8K5z/O+vo4M6Ki0bZe88lvof0cvrfiGAV35VHX12qIruJmdmqN+
xYDGivGN5Gs+IP5IIazClAGJW1zy63scDH+VTG6/N2JAZ2e/renFR8CHa+7/
pPUYkKuOXfm8cQyInvkVu/mAAeVrzsS1P/sFXXyVanlqDCgr6SuvXlcSOLOM
771WZEBCpeUidzLTQfiALE1cjgGVZfbj/RyyoY3Ir7twjQFJa7rz4zRzwWFU
hi5JigE5hgZMgX4BCLXr5xtLMKAP35ROU38rBrucbxzDQqR+q/HzVnchEIgr
RpF8DIic+P5eS0kF1Af3WWofZUBcf/QM3hZVAe+bo41tDAzogXru8RdrdVBx
KfhT5TI9imxwMeM43Q4Wp3LOfVigR4fCKXXsLDrgMFf7yLUperTp37sll9cJ
ptss1/J76dGnnFNtRbo9wPLHezUJo0fCBbVdtyYGoDA9+eezInrk84xa64Hq
EBh+r1MX/E2PRjKJIYElw5D7nib9WwI94pNUGmxvGgXdm67P/P3okTrZl4Ck
xAmguhCLU/KkR6bvbF0dH01CuhAqp/1Ij3QfHiM3Yp4CMup9vo+29Iji35Fz
Ey+mIaH2XY/NI3r09vqVVLadWYg4byeXfJ8e2ek8EY6LnQPfaOusYRV65OCu
6vLs5jxY25h7K8r+/3fx7kyrBXg2/HzD5Qo9snT5mq67R/KXisbGuefp0S2d
JkMX10W4zq8vw/8fPdoWP/U6zhYPEt46qfeP0SO3qNIr06N4EFx7wOl9lB5d
G+PwPUXy64efaLpjbPTo0jk2Tp7vBKBrVF1ZpadHDfG/O6wJBNi5qPRYlJIe
vV6I3J2VJAIhRqHp8S4dkvMqfy39mghjjLeufF2jQ8HB4CkRR4QuO9mEBgId
au2+Th1Omi+1Y9dwZLN06PYinldhhgjFylc+XByjQ2XbxSqcpHmVXnARb9ZP
h1QUd38tkOZZjOB53ZhOOuTmQtmRQpp/wX7itd1NdOjqrWNBdxeJ4LEpKslY
Q4fwLxa6q9uJYP/0ZKwsRoeSXK2d+NKIYN4ixGJXSIfiuQedHzoSweCKgGNq
Nh3KOXObwguIoP6Ld3Y0hQ79J74pX79JADlWrgdHfpHOW9HhkE0kgJTD4Qql
aDpE/++czBElAohMsZ/9GEqHQoI1Gxwn8cCrzhKV/4UOjfSoVaTY4IFCmNbu
uCsdEo133XWzXYS1AMoJLUc61K1daNk6vQCzOwdqvrZ0yLM3aVdAfQFa2jdF
NkzoEF+98nUz+nkov7YWKvaEDlV5ysbf0J2D3MRlSiMdOqQc6mTVG0d6H87z
Q01KdMg7etFAWmgGfGen71LcpkO07+VGOHWnweXeRMElGVJ+nNc5u32mwFhk
MPCnBB26S3wdcWN8AiS6m2/bHyb148UJGW2LURCSbchJZ6FDwnyz14ePjMCR
1Br+CVo69EVJz3b3/hDsfsC2VLZp0QW1sz1BPX1QK5adLjRCi0SyLMTLDndC
cVg6t04vLXrHHERN7dAOaRQpnv7ttKjIUbdAv6MVgnp/Gm5V0qI+k7esyf31
4C73o0X8Dy36N8P1OJ2+Fuwzvkkb59Oirquq8p8fVoGBW8jh1iRapHhYwX/n
Txm0wDqt/U9aVK3L9dblQzHAjva2QBQtKmA7pOj0OR+y8osW67/SomMbJ1i4
B3NAwJpnxPoLLSJrPe0YtJ4BAWec23k+06KsaIl2384kIJ8brqxypUVtd7Sn
Je7HgfUv2fyXTrRI7aTrbZXtKBh//DPpiB0tCitlbFWIDwFNHqpv2CtalD1D
ZffZ0Acqe575mb6gRcHvG0zt5D+AZFDte/antEj00IdUXzor+KUiYl2sR4uk
lvMibvM/gEP0PsZPtWiR2AWl9Wa+I+BetajFpE6LNPAi+vkykrD+XlUxT5EW
+Wl58HkfewIm0lnSBnK0iNP27+yNElvoWWcXp71OiyKKdWr5f34ChRwbgSwp
WhSw2r/P2v4FCl92c+hI0CLnlv1AnHUYnBK5RE0hSosk8j9/LZSMgfDJ8I0U
IVpUnF309KdxPNDHbM/d46NFazKKSj63U8Hhkd7g7hFSfInkId1zWTB/pKwl
no0WbZONMD50zwXdDv5yVQZapKSXxD9qXQiNfh9/b1CS3sNEScefzFJIo7od
rrhBg1gfpXiWUlcCL0rwXlmiQVzXPFWGAqvBz5HO+ds8DRJPGelnhjqwXGk0
xA/RoFCnmwFotRmG08/cD/1Lg5yzPTi9ndpA7cUXeWinQRvdGwLMjB0gMap5
OrCKBu2KtRWY3emGlea+VclUGvRRckwm5vggGH2Wnhn6RYO0RgK/bk0MQeet
6D6P7zSIiX32gVXSCOSWPCnrDaRBln9lD+EixsAuecbTyZ4GeTAMhnWwTcG0
saLDf9Y0KJFjtmptegq0BVItWsxp0IOq/GvRhdNwOcxSQ+Ax6fy39/S7lWYh
SbNNrv4hDWpUFlnmZJoDLpbzUtaaNEhKo2dKsXoOtt3WuKtu0yBb84FCHoEF
MJPVZn4JNGgt8IzTN7QAAzuFB4ev0CDJzQ9iNdqLoFzAvVJ2ngZ9Ep9e45xa
hFJrp8nnYjRIpe1cJZ8pHsTEh3vYhGlQgb1C8DMSX0fPQX0RPw36S19t4qlC
AJb42BIjLhpk98zso0AmAVyeUGYw4kjnaYqf+EtFhKxWBf8uJho0emrwIrMK
EcZlfC2jaWjQmaPn/DU/E+FQRpuqCRkNohZnC7Ui+RN5vsNnz25To8arn7Mv
DZH41FeHdfMfNXruG0H2cZUIKTvRRISnRm8OM32/SOLnQbPx1s8z1Gi16OfO
nT2SP+kXztIco0av+oyo80l+Q1bRPIBngBoRdh6ded9JBOvCTKvJLmok3C5o
kJlK8jcnV9XTW6gRBPY9NHxLhJ7Qy+fs6qgRl61KY4kUEehonNmhghol/9fc
szhHgKtvypdpS0n3P321LhJIAItJ6o62PGokWVaokyVGgO/37uZEZFIjkefe
+o2leGir8A8ySqZGnadScJ03SPx8vtP6dBw1os8zeShcuggmbHoX/oRSoxtv
VqSUghYg/H0MziOAGn3vk4k5IMxDA2Hyn6o3NcoNqBZsJM1f8eaXuaPO1GjN
j1q1rX0WnlzLCUl+S41GqAlqoiyzEJS6bmv9mhr1HrufOCw3A+uf31+kekaN
TvNmHyZGTwEmH5h/UpkaxW0ZkwXxj8NKXnfo0m1qpPbe++KXK2Nw4j/ut0VA
jeYTPEdfa46CF2XcJaUL1Gj509WkbNohUEe5hZbc1KjYYeFc1r9ucD27FX7p
EDUaUqNSloMuyP1+/R0ZCzWymDKQ0AjpAE7nmitB5KT+EaSEG1EL3F1k4H60
Q4VYb9ObXc1tBKdHattCa1Ro2WL34oPqOhi90lucN0uFlB4NGsLdSuBI5v3m
Mk6FErjviaVWILjFaeioMEiFZGat7xMrS8HOM/4RWw8VmioOeKRxvxCS1uek
+1qpUFq79nGZq7nQ/0yc92c9FaJ3JXc8+y4LmLqtd80qqZBW5rGm7FMpIHOr
YPDCHypUeSTljRLfL7D6vVO6m0+FQp6J3i9PiYafgrLR1VlU6It+zQXy1BDo
CnRz9k+hQoHckZx3PbyBhrxeX/sXFXL+rlDzY9oZLlsxywh8J8X3qPb1x2gz
MBvRODYXRoXOP/d7rR9zF6JUQ/ezA6mQLU3tyFG5testf/qHHXyoUDblOptA
7l0gO8OPyblTIavvFcOVqWbgdOSGgbsLFbIZqIv4nPEeNg6M9mreUiG/lCd0
98Z9wXrOLYruNRUKoM3NxI+EAqEjQfquGRViSOQ0+xcWAy9K6/p9nlKho82j
CyGpCSR/Pv+uWY8Ub9ox3o1f6fDkCxMXqxYV0hFV8U4uy4EBe/FCdTUqpPrs
sLnbkQLQMlLXDrpDhdglr5xo7S6BDiXr9c4bpPoOLnIsOyKoO5YvqS1JhXrX
+d9PnayBW3S9neFnSPWuM4uA6/WALW9Z9wtTIYPQMrph+ybIr7qerc9FhVI+
wd39lHY4n/FY/QcHFSoxnrqjbd8J6WEfiaOMJFxoEMai2Q2/zKrPGO9TotlF
jEpOqA+C2FRSzCYo0b9GxqqoT6PAsm2pmDZIiYbOvzt1++MYfJ4ImMV3UyKb
5/wRFs7j8CG/S/h1HSXarurHa7+chJd6enFv0ynRVrE+UmKfhdnbLjeLEiiR
QjPPrtfsLBifjRnb/kGJrpTY0ezlz8EIZ8WHaxGUSPW9Rne/4zzoUkzyuwRR
olZNjpv6UgvQs0CNYT6U6Ee7Z07b1AJodJ80IHenRJICX0z9Pi9CU5ni3k0X
SkRXQb71TwAPd5LMo9zeUiJdH4vkl6l4qAr0k66xokQ/l8OKrE4RABwz+2nN
KJHHwmHqz2EEKDZuf6f4lBJx9FjPqpL0oZTqP04fPUqUz1By5dldIuRcOlzY
9IASlfbkhr/zI8KZ45e0WdQoURX5yAulciIkMeisq92hRFJfojSypohwYtXh
a+ANSpTLNHXfe5ukb4eiJDuvUqL+t5cmakh8ylNb1nlIkhJ9e0lv/HiNCKFZ
o9ZaZyhRm/NxfaMBInBEUnCEC1Mirx+pUivZRPD7dCK7j58Sfbmz1H/tHYkv
X8qr83BRIoPrTrcdzxHBTcuUqMdBieZtt2tW+glwAN7+3xlJ+ZM5Ru2/IYCD
SNqZUSpKVLtX5U9PSYB1jpam4/sUqIbfUdrLFQ+vd4nmTzcoUP0N7dLN1UVY
nGJnjF+iQCJbEv+mdBfBtPVCyvQcBcJbP7yLz12AicIHiqcmKFBBM5VsHuUC
9PtEeKZ2UyBWn9Evd1znoLNaIO1JKwXK/ulASCmfhaaDxLbD9RSI5TPoNm7N
QJlNPteHUgo0f6/VbUlrGn4+6ky9H0eB4gfCDOJ7x+HbV902+mgKdLBPrhy4
PAYhrWOrZaEU6BFHxqUDujHwkFu6LuJNgWr5zo60WQyD2Wnmtj0r0v62t8Nw
4y88fRaymmNGgfLQHIeVezfo/eDhMjWmQKM6Wb0+HZ2gihM16tCmQMq2Nhs0
fm2goJLt4alBgSKeP/Pm3W4GWc/LqdeUKJA0mVL8j/UGOL8jv5ogQ4FMGVjv
hqpWw+mLLZx6lylQ0i2aTd+MCjjx6sF19vMUyIdP2nj3AgK+5EHDmtMUSOck
dWBmeQkcmXjq4fgfBXqe/5By5GUBsPItpEjwU6C71QOx469+A522desUJwXS
DKxaiPiaCRSBW/8iOSiQ95cw7VqKZNhp+MCpzkSBlg0xpWticbBKRXedmoYC
EfknzgWJRQFB5oth8QE5UnGh4pb+HAwz9kc8Xm2Ro3nBg22OOS8YzYlOOfGP
HAXL3FMWanaEvsUTrX2L5IiPsvLwHwVT6BBO++c/TY4s9OP8/2zKQ+OTC5y3
RskRWUPZmsanCpmqyOJrW33kSCbMZ67DQBn+dN0wzOgkR29+/OQtnjODfJZ6
96fN5AivlzWqk+0MmXfUUzhryVFk0UwMP6c3JLn+bWlG5CiUNtV+SioEYksN
/rkWk6O1JHcbwekoiFyfOno5lxwlS9B1ErziIFji5TV8OjnqamUxeP8wGXzN
Vp/8TCRHbymfDqUMZoL7L0d37VhyxMyM0c17/gaXYYoUpm/kyF+GfnH+TQFY
abL/s/MnR+eT3/O2CiB44Rt+VMyLHDndjhfY8akAoxr+a2MfyZFD7bgkHXc1
3L8q7q70hhytEzvbFUMbQMU2L5nsFTm6j1WdpPrQDPIZ11ryTMmRadPg3MCN
NrgsqHRUQI8cGSQmNaU97wReBtPk1ZvkyM5qNUyKsx8Mypp8Ba+RI4GLZFr7
6wMQa33OSv0iOfJmddls7x0C4YFtqbST5OjurR+Dr1pH4WyaX9VTJnLEhrWp
9LtOgvWTlcRAanJ0KWPXkeP5FOQe0vbB9slQieXbK7fkSXrVWUCTZ5kMMRwJ
ehC5MgMO59wvKs6TIbW3xtnaZbPwZ2qO8+0EGdLSETC4Svo/3lT9PdLRTYYo
J4uaJojz4EbBWUnWSoaeaw9pu4UvQG2+U4J4HRkKu3Sob11qERjMxz7rlZMh
9a+ndUsaSPqVX/6ldzEZsrifoKdzDw/+nSnqhb/J0FRBef3zNjy0e7JKTqeR
oSOp9sa+Nwhw6Jrt0UMJZOgRBeW5NwkE0Frq3b7xgwzlLXko9+4TIPzX9eFX
4WToohEruy2JXwce/iyPDiRDAZsnvA6R9OoxZtr4Rm8y5FgeHBZWTIQn5eZe
W5/IkJWSc8TkMBF+vmkzP+lMhv7Ohz9eIPHnpMhFtQd2ZIi5/NZ/v0j8Kjwc
cf7TKzIkO112jWOXCC+C9g9nm5L2Xz2voLRAhDT5p1vDhmTI43OhxqtmIhC2
aweZHpGhb6yrjxN+EkEiUwxdvU+GWJbjQMCcpGefBsaZqpAhnLit4eGTRMg9
uu4RKk+GhGqnD5p7CLDRqGtWBWSoWijbKtqBpF8/YCorl8lQlolc5RAHAZwk
T5wTOE+Gvr+vsyX+wEPZrNch1dNkSK+UyvyKIB7Io/EbjifIUOjMFTLxyEXw
oC4o+3uEDNVhVVFsLxegrojnJzUbGUrtzfWjrZ8HBssP7hfoyVA3rTBbMe88
HEsPDj+2cYBlWjMqx6bPQtxh/ccOcweY4kcTI5bFGTjlIizcM3CA7dfo88ee
mIFzakW//dABJtl9b73cYwpuLQ+37H4+wE4uMSS9PD4O5hdFqQd4D7Dac9s9
W949YE1dlGjHeoCVqGa5+S53gUO3wl0OigMM1/J2qOhJJ3i/efZFcWYf8xT7
8Oy4fhsE3V49N9W3j3WJ7/yp6m2GyMOfuj407WMXDVW9gtgaISUvhqswex87
MH4+dqmzGnLcz5be+7WP5TToBzw3rITiB2UGxNB9bKtHLyCAtRwq/lMh9/m8
j1FcGHK5XvYHGtYG4oSd9jHx8JM2NT+LoKPaTL7Cch+77Wc5LtyaB/1ft2b1
Dfex+hvj5QG3c2D8mZfP1r19jOuo2fcd1gyYu3hU/Kv8PvbEWy1LXyIJlqgT
2iSu7GPtukttD4g/YbNb0qbp9D6GL6PqXP0eBWQJlYdNj+1j90/yZvXFhwCd
nWYhJfs+NhX9m9cS7wNs8mO6Pyj3MS/qY++pT30EziNWe1fX97DpvVjZk3uv
QWB6/0fP7B6mH7Fvuhf0CE7l+920HtjDHM9kVJwwkAAJD94p5pY97JvZioUN
w1G4rJXqmYz2sD8PLcTXXO6BrPBV0du/9zDv4zK1GMNLuLNe1zQav4eJFehr
RMg4g3qN9iun8D1MQhbuTTh5wcPQaXZOnz2sYuWJk5dpEDwxeZP723kPY5Hi
nVmpjYDnUlTaalZ7WNLgaD7Z6ViwpAnemjfaw8xz4r9lUieAXc/xKI8He5g2
9YlmaqtUcEnIkhG8s4dNGulz/83JAg87GPtzdQ/7lS2jT7b8G/zlWz7pnNnD
lp29J6msCiD0iL7wGv8eFv2wrFXtTAkk5DuYi1HvYVbCEm4TqeWQ4UHPUrex
izW8nqb7OlIJ+VrhWU/ndzHyg7L1WLEaqFnPW4ts3cWO19XyuTE1wpTU8nv6
yF0MMvJyf/d3wCLNB8F4313sCn8f8ZhcF6z2sFTLvt/Fngx7eXpldwPVWzEG
e+NdjIVpdrA9qhdOFDwPmRbfxT4tPPL0DhmGp5eGkyord0jDo+fq9IkpMEm6
pCVfsIMFhJyf662fAjOuQMr6lB3sQmCI+W/zabDakTNoCdzBOL9ZBdHFz4CN
RTSjhvsOlmAr4bUjPQt2Q+uFnfY72Mr2e/a6lllwwpJxfY93MMZLNhpUM3Pw
XoKy/NG9Hcz0kb0GtcU8uMbqWQ7L72DarlWN5Ivz4PWJtX7izA5m0XRV+uTg
AvismtqZHN/BfJ8ljW8oLYL/swqhuUM7mKPu6C1c/iKEKLxxIexsY9M/p1ei
7PEQVthy+jVxG9MsG1ZqIPFxpMipvn/j29iMvq07EiRAdORHD7uebWwu+fDZ
55YEiGEcuLBVv41dYF5VSP1NgDgnyTHHP9vYa2khA6cVAiTg/fz3s7Yxeh8H
jSZRIqQYzEh//LWN/VbzVf6iR4T0Vtk5yvBtrG057k+JJxGyZCNDPXy2MWMF
Qau7aSR+zP4nR/9+G4vNily53ECEAkGVZR9r0nr/Bc3PY0QoDk74zmJCuj82
fAhWiPCHikw5UGcbc1gJ3Dci8TV6o7OFU9nG/iSdubhD4vPK6ZyEUFnS/VtS
dLg9ItRoM93nktzGquVGJAv+EaG+7hl51Mlt7MsX/PzmBBGarmAZx3i2Mc43
nbmLJH5vTeHUi2XZxrYJ34lJJD3dwWNNf4JiG7PVWCu4/YUI3b6N+QlrW9gn
4dD+QRMi9O6dMBaZ28KMXlBXf75MhEFLF/a0wS3sIlG6+QUVEUZG/paJt21h
nldP70Q3EGBc/ZxFduUWZo5J+Sn6EGC63JtLsmAL43quezhQngCLcddtr3zf
wn4FBPj6puOBeCjseGngFiaYa5f0RQcPK+5LLTLuW5jtZr9BMxkeNp/Hidyy
2MLC/jwkpNxYhJ3e3Z6ax1sYbcycX8LAAuwrarkp3tvCish8/wa/XgAqMfoR
1atbGE3x8XiKoHlgX7IM0aHbwi4Y3JCMSpkFUfurB5a/NjFn6UEW7PkkoCFV
0YnQTaxuKK9GpWkCtOSePtD+vIlpmHxYHTw7Aa4svqlgScItjHcOVseg79eQ
NtvlTQy90nlquTsMlgwrrm6im9jLbzqZRpVDQGVFk7HJu4nVit7TP+87CBLS
Z6nGyDcxOzWR6//91w9e7R+yshs3MDV+ri36D91w7NLXgf/KNjAT47rbEYZd
kBuVTBOZtYEtF1w4fPVOJ4w+79Bz/bqBFZWMNjMLt4Nd87TnuucGxn/z3JkZ
vjZgurCTY+awgWlZMjNcv9wCl/aF6O893sA0hQ/uBuo0QNPTy5K1GhvYUt5s
lsf7OjCqV34sfWsD80ZdY9q5NeAf8iZPSGQDw5gjEx8rV8KJ7c+jYTwb2FCp
gIR5VjkUP/7OyMSygRWfu5+0cwLBtGit4erKOta0LnmdzLUYnAIGfE2n1rGB
7upNro4C4FgnFgz+XcdeHbs3EHM7D5IeUU2oN6xj6oeLa+mGckCmnJOlunQd
c/goVZ4bngVdwmeuXMlcxz79/hG6upwGZr43jNNj17G7PS+/yu0mAdnKgy/H
Q9Yxpi7J3Sb1ePiqbVb81WMdKx2o/bdIjAXRPy5T9O/Wsez0c8/qf0cDEgxm
czFfx/QM/8vI4AsHLa9E6RX9dez87KBMFF8wLOJLTEzU17GHBgKyCyZ+4Hqv
LbD/5jo25aPGM/LHHTiLJktVL65joZe4P8u6uEDGsa2ZipPrmFuD5UFJhw3c
cmPGXeJex0R+XZz8vmAC/XPHZVKZ1rFnxSlHAv0egJWa1Av+gzVsXkfv2nmL
K0CTdzckeHkN02Wj3CWITcl8436M0U6uYdw/Ysve8p0EiQ828449a1gya0hU
Yp8y1Ex5Hl6qW8P8ZLkswu8bgp5SlKxxyRomYdFoTf/nFaxkZZn3pq9h5SYM
/Tln34HXkepQ5Zg17H6zll7oXVc45tRXjoLWsEgJ7ZUpis+QO4ZflHRfw6JU
Fmp29APgrgIFZ/LbNawpKRAeF4bAaNoROT6zNSwsOLPwwC8C7DhOWwbqrWF3
imS0xAa/Q+zQvap3N9Yw+7WXQe/M4+H85PntLsk17Gp0bcJLtySommeXkDi1
hgmfevR1pikVpjdav02zkPZzfaFOt8mGt/sZ7Tco1rD6mNoXho9I/o7anzZ6
bRU7e49STOFhHohyKNvcG1zFKqMs+7f9i6CE83RyRusqNslxTdKitoSktxlG
6CtXMeF7pcQHHGVgKVZ3FyWvYtoWReTGluWQI39L8MzbVezm5Wf/tMNrQE5F
6KGX2SrWLiktnb5aC133KPwn9FexVY+sj6+062H9CdqKuLWK/TIpWGoXbwJp
x2vtNByrGPWXE0ezmNuhKlPyw2jaP+yHZvzSL7W/8CAfly8d8w+rvHohLIe3
F6ZLVxZCg/9hbzlmo+7O9wJdQ5a2isM/TCGKZ/iDRz+oTIqdLVb4h/FuFZ+l
wIagh/O/4eDxFeyC/TdTDvpxeM5PdYjYvYI1xpkUppiPw+Z/E4p361cwfQ3L
UJfmceC+EJtHlrWCWdwzkY33nwADFT6/l84r2JfcqcZw6imY+Xj4mgLnChaj
zJcVXToDDM6ZxGCGFYwx4MFV3UOzIG6vGDe6u4wlu91VsDIjzWNLZwaHsWWs
Iizjqhf7HNA8mupNS1nGbO0FTCLvzoOo1nvfrahlzAcnjGmGzIOqBpes/Jdl
jEvY1U98cB6+KqgkjtgsY1Y6h7LAZAFOSOa94bi+jNkYPpw3eboId86qiTw+
u4z5XqGg+xu9CBaic4Opx5ex4p4CI82eRcgV4Lt1m2YZ65JOPfv8Bh56eQo2
AjeXsCs/3vUc2OBh94hG6vD8EpZ+4+x27C88yDG7c9i3LmGXbEU+UpERwISO
v6aqfAlz9XvgViNKAG/KonfsuUvY8HU52a/3CNCxtTiaEr6ErYgd3Hv8gwDr
qx4hG95LmLyG0IZBBQG4lwTu3HJewupZDYttJghgNH0/c8hwCaP7LQGz/ETw
GCMYid5fwsCP10RVmjTfB72OvJUnrbemse25T4SWv4INlZeXMM4zL0TcLIiw
0lHqzHZ6CdM+OOb0yJUIR1q0zunzLWGHH21GPAklwtX6pclk1iWsay+ePDyJ
CAZV3uHr5EtY5o+6+zRFRKB4rxjuMUvEbhU1GWTVEuHuG+cD/mYihlP7fvRb
FxECzbNNirKJ2IcqQmzjCGn+Gk41a4YSMeniD4oKc0QQeMh1cdGBiAltvvuI
WyaCqapKlPtjIvbRqGT84gZJf9z6SMl/i4jVbsuI5u4QYfNqnlnhKSIW2vAJ
QvaJAOfm2jWYidi5owacgyQ94XGS78rCMgEr+0KVF0jCLXwaMW49BCxV1f5C
CUlfHDnkTnushICZ57O2GGyT8mEosiz4QcD2Nw76XEl+M4EM363uRsBumC5W
nyESAb8ucH3elIAdxDlymswQQRJ//9cnFQKGXFcsz5P8qtOEFyPfeQImmtvg
FNFJhKq+Uuv8IwTMoz1pM5ZUD6a2pT61HTyGnQ5y0iT53fs1J27MjeAxDQqU
kZ1KhG+lD5Ncq/BYxHDe7ZpvRBjP8WXlTcZj9hNMtGHeRBBNRnZ5fnhswvxW
jag9SV99PXV7VguPeZn3N+SrEYHu0cxT8mt4jEKMc/e/q0TQEkhw5T6OxzQP
aV12ESL1N0UIKS8sYjTugqaU/wggazU+/KxtEcNyZVmu9xHA/2LsnkveIhb4
LVrmXRkBRNAx6ez3i1hd+9NBDg8C2LkP6TQYL2Jpk9nHnU0JUHU3yn5CcRFL
qX72g/IuAZ50c+UfPrSIvX1gsezCQPL/84fOOSQtYC/SJ3EDH/EwndmpFuy3
gD391C/arY8HyTdBlmnWC5gVsceT9woeWg9Y04avLWD31d2OpOIXgeYw40m5
9nnM7p9tibnaIrwBcj6m7TnM4v5NL+XteaigQtL/jcxhR4er1cqb54GtwUVX
pmoOm417bNEfMw9p93fDrPznMHfTrhQm+XmYfLHB0S04h51xzXBa9Z0DzRA8
3XelWewj5yYhgW0WJOb6Vs9GT2PKq29s/9FPge3SGZGjbtOY5XcNFZqhSSjc
+Ki/bzaNCcaXHRfPmoQbNKI1TZensX+HcvKrtCZBU8gh7EXXFFYn9FLzZvwE
vNHnvhrHOIWdDyB4LdwZh+J23fdHHCYwn4wCd1PTEdjvzfi992QCe/0ydjyA
awRujlLMTipMYEOJpe8uNA5DIyFF/ffhCYwm/XLK4tlhGGTcOa6ePY6lPHd0
VTkYhIPb36o+z45h4ralQ5/z++FW8QD9ntYoxsV/9VIQyc9npMRfqZUexabJ
bOlEFHqA89urF4ECo1hHxjXvJ1Q90LNBE6TUNYLZfb/zN4uk1/5z1GKL3h7G
/rv1trf1QxdUfFxjklUYwnACfAeR3zsg1OizRRfbECbex9zE/KwDXsjxNZn2
D2L9jGI2XGIdwEZ92yfw5SAmzJKYulnSDo+9QugnggewBA0fxfLxNtj1v0Dj
MdqHtT5hKTcJa4G2V7XPuFP6sDMulRI/pVogTv1RdYZNH5Zb6ln3r6cZ7nJ8
cvtL04c57Sq9aeduhoivHRQiZ3qxL35WIdKZjSAV9fqg8V0PFrIlo7FBV0+a
F9SPn8j1YB8y805HFdbBkH5E2SpTD7ZeuV138UUduPGXO/PFdGOckQNWMs21
0PmTbdeypgvjoau7aBpTA1bJmZvsuE4sn3yPXuZ1FUiwWH66OdqBFV7Rofe8
UAXL1mIsNukdmKyOk4vneiVYX0sW6lLowIZu73UnulTCm9afqqFO7djk8Uuy
UmEV8G/+tOLFplZM93HQW9wsAtvcJINQk1as/3ncAF0egnXn/2w3yFqxgLuq
i5GuCDbZ+H8UXWzBEiR7Yv35EexKcaxd/9GERTz3oGIrLwOaT5sx8tb1mJGI
U1THdgl4Kr/JT2Sqx1zdmDwGE0qA7shKI11iHWbKaphCuFcCDMkL6w0DtZi9
ugJOILsYWFuHldVu12A/wguWnr8tAk6e6k1tzkrsTq5eqeC5AoiYvMFSlFOB
5Sm9yDZczAfujDIhbpUKzPV35QXnpHzgu1GoOvixHEs59gMDoXyQa9FSLO/B
sPsXH1qnC+aBlolQbIdTETbM+x3PpvAbvF/beAXlFWKH90tomdl+wx+nylea
hAJsge5ZUmFfDpwIfirT8Tgf0xGQlz/yKgdWsLiB9pu/sc8p9VE5sdlw7MId
sZ/sKZiW4KrdnxNZ4K44u338UxL28q6BgC8xExYfe9XHriZg5mdFz2GhmVDs
W2cS+zcOGy0h33CazYD0psCbN6S/YaqKEkYb4emwFB5hvBxhhFEm8nLQnU4F
J4qQavnLipAmqHYzcSwFxCOf1h6SegUxX3zDJSNS4N6F3lKPG26wJ5BBycKY
Aq9NzOeqQkJh78jVLPMtkn4nyzt4WpYI5BTmm2b7CRAxd+jcpHIycBLte6Mr
EuB8p62R8UAK2ATxRgV7JoBxgmS18WY6vJnP5i3DkbCwbvV5rhyI2G+Lb5KM
h9qmPu8L9wqhn8E6uCMsDkzt+2sfnS6CYZYOVqqncUB3YoDKjbIYzB7ZBi+J
x8Fdx0GXrt8lEHB2w3Cp7ic0iYxYvzmEgemXUxG3qX+CqZx1+sB8Bdz+xbAn
GR0DlyNWGolalfCJzlp/zToG6IjW85SVlVDZyOqppBgDyZE2J8W+VUEUVWiV
IfEHzC/bxjop1cDng84F1fzvYBHz9itfWj2wRYg2S9lFwbX1jd/nOBsgKXHD
/fv5KGBStu+47dYANKPHt9eI3yB9w57VUq8Rvn9g+2Py8hsQVB0+lzE1wysB
E4Y160godCkry5Rqg+tLfwh8CeEQk7zfXGTRBk5SrWRMVuHg1SUzVPmzDbJ1
k7eLrobDQ1Fs5y9LO5gOHaJS6giDrW7sMtlMO1x/TU7cpA+Dq2fKc9TDOqET
b6hhEvEVLnb1hJbVdwK/3KFc2tdfQcJx0UFstxOoezvFzip+BeH6o3J0JF/K
cynAlX4nBHDPLDsx0W6ItqmrKDUOgcUonlXxsh54MnFDoEQ1GGbkzvVGLfWA
fCOr2O6ZYBifly9lEPoLzm9EPFOYg6HvsrXbtOdf+Bu0mKzYEgQ1XXWHvmv0
Qn1uwYr5/SD4wWR3kXmqD6LEhfcFbAIh8rcPl+PRfpjLIuRFPgyEUN3YvVnF
fviKZVa/lAkE36Sm6qqMfnB3WvHiYQwE+1tCWk72A9Dor+/zNikANJ3a7BYY
h+C0usZmyOQXUBGa1tWRGQI5wqhcYdEXuNOwI1NrNQS1WnQbL798ARnOk7Rx
3UPwkBsX9fnaFzid6xym+2MYrEKeH9OM9gcKu8ODxlyjsMLQGV/41g90n6R0
FEqOAu1/t4T1NP0g5y7UM6mPwmAd4vY74wdG/C/ycz1G4d6te2Nfpnyhoq40
gGp1FDSehOjMPPIF7t8ang9Zx+C0gvSbqqu+YB097ZwmOgYxFO5ix7l9QdCa
zfy+4RjUE0P2Nft94BOP8e1fLWNw5wk3l8UTHxik3pLenBsDt6Kn/VxyPiC5
5HdemXocLG9R1l0V9oHJqgL+VelxUHQYl2nDe8MtS8ZtueRxOJnpyHPc1Ruo
ynMyJj5NQIvfBt/Zss+gl6oQf+nHBKiEn/1ulkjyj18Hv/kUT8Bfba1bVIGf
wdiM5vOF5QkYCu69p/LsM1TjdJ9+MpiENJ8nD49wfIZj+wSdv+8m4a/5fKPg
vhfYzX5SP/11EtS/+qu7zXuB8J/0652Nk7A44fn8ZpUXeJiQcwpdmQKMnfL4
F0cvGFYPZXl7fwq8fBLZT5l5gZT0aerGV1Mw0fPmPIuOF0yzPlixTpgCnBTu
RtklL5AvSmqqwE1D+Huj9OBNT6BlUv9oRJgGLctidxVPT3h4UhdJ0c+AxaTb
OW8HT0i5aXzAcGIG3n89TEFl6Qmq7+ydf+vMgNpy2X9pDzwhdDrmHVX1DIT/
F61RfNITZslTC3tHZsA+f+BfI68nXOXL20jbngH3SERzmMMThu/Vv3kgMQvl
eQbDd/c8QLh8+XXCt1nI/CIacqHHA+wHd7Ic8meBolCzg9DkAQ0b1Euq7bPw
8nGl7WClB1iKc1tu0MwBQ/83O+UcD8j/dtPsjvUclMXRfLUM9AC6AuVkXr85
0DUUPJz22QN0O7RmlxLnIIRu9PxRVw/YpzM3iRiagxsivThbGw+4bRdsNH9n
Ho5f5LW/8tADQgOjY8uezsP57oLOLg0PmE1LHA1ymQf92Js+EUoe4DtRYiCd
Ow9mbIW7UeABXeqTur78CzA/Wx7sLELKx4IQ8eTqAjyy+2L74AQpH8/NXskH
C2A2V/RDk98DeMuYtIe8F8Ads14tPuwBxqcv3hNfX4C0GzU1UlSkfOQhiIJ9
ES7we+DEyEj5GCm295xehE9jTpRyu+6QFq6v9t5wEX4ulVF2rbrD/u/n/vec
FuFhiI2EyrI7qLe+bj4ZtghWuaevTOPdYZXaQ6mtaRH0G+Z57GbcQf54gPev
mUXYsfU8bDHpDuHXIuvtKfBQJCsn9mHMHa7ZZCgcv4yH533ch8kH3cHfv9Bj
TRMPJ9qWOF/2ucNockV1/Us8dIiQfV/rcYdPoz1y1nF4ILN9E6Tb4Q7DRUov
7UvxkCV3/oZumztcDUahLt14EM4yePy6xR2WbqfMedMSQGPOMHaywR2U+flx
gQIEKFoxPC5b7w6Jm8HXwq6QfGefQH12rTsYpDp/iTMngKgst2pPlTsUu60U
JrsRoP+cUqBXpTscNng+nhlNgGoWqWq1CnewujTImJ9PgLNc8P10uTs0sWlc
LG0lQPQEsY0HucOp+WqDilkCWK6tsQtgpPgrr3rVkRPhqe3xI5fLSPFHZWa3
cBOBvPNp0NM/pPjtTgx0XSDC4qcW6Z+l/2vhTsOp+t4+gB9nNkSGJCUykxSR
MrTupKQIhZAhQtFMREqpHEOGkiikEhIqlLGSVKaSoWiQZAj9Ko4pM/+1ep6X
n+vaZ++97nXf371enRAUb36d3mo6gETzL1cNPwlBg8qC6h3uA6hhZvK/Xdim
1PO7eoMGUNf647vflYagzNaxs38SBpDDtnPvbLDpBQezhnMH0OjUkSluSQhy
ju54P1EzgArpNcnJ2KX7bGbmOgeQ0A7aITts8Q1vFJnTA2g7K1tRCXvtPBll
Dh8X9Z1yucDA7gn4os+7kIuOa3+FkeIQFNcTZxkpx0WiH7vEh7ENd5p7CK3i
IqbKzhc8+Hruc97AWH0uSlkgPiWNnaL2KmaBCRcF5CqfMcM2vR6Uds2ai4Q2
xLMjsCcY60oWu3JR8/w3O5qxM7yH61IOc1H7vLbFK/F6rNrvdy4L5CKjSg25
BGyq6f6xtFAuakrWV56H65FbLCugHMdFq78F/ncJ20mhTSb7Fhd9GzyhIovr
yR+boK1+n4uKoyvSyrE9Dgg4a1VykYbc4+3yeD/EPlX6FDVxUaV8xnQfdoVR
cJhuOxdZGwf+KMH7J7X0bx6M4+cdcPQ8g/e7NiK38iV9EE12HIvwwf3gP+bV
ull4EL3otuB643750NBON1MdRNtjsxJjX4egcwaJixrWDKKInSb78itD0Kos
K/WdGwdR5e2JsK+4/y6er9ll5zCI+sx+tG7H/Wq45lGWe/Qg2v21Vi+9Htcz
9dDzvsRB5ODhpS3ciOsppPzhwN1BFFkf8ygEz8NEX/LMsfJB5M6wdQ5txvVI
4lgEDQ2i82bxLr2tIeiNKKdXiDKE1FsOFBW04f28GBJ0e94Qin5KpUW2h6Al
py7kvFIeQhMR6b7mXSEozOEcm995CO3leZKp+isE7ZEKKk94M4TCaJxbE1Mh
aP5N31V5acPI9eyNLdYyHLR8oW+VYf4wignfG58ly0GbY447fXg+jNb2njhD
UeCgU2d8Ise+DKPoZtf993F+9Tkf6zMQHkEepyaPM1dzULnMoVu1p0fQWb3n
JlGbOOhIqtv8bptR1ONcff7Dfg6KDrieHL13FJn4md2o8uKgBxbvlNcdHUWN
4SmsooMc1D+rsyE6fBS5ivP5RxzloIO7+b3XPh1FFYX6njz+HOQllv8+ctlf
lOQndGQph4MifvU466j/RRajD7TrQjkoq2Lx7w7dv0h0m6n8CZznP4+G0HWs
/iJ8kl3/NJKD9tfZandw/qJ8gQOr+K5wkAdnLl7791/0NmHer+wUDuI4asl9
H/+LUmhlNPYtDsrQ8nwYwRhD17STc5xuc9CPzqaq9qVjyEKw/vrUHZzHKGM8
3HIMSZw1sxzO5KAL4q0XtJzG0KaGIhe5LA5K+yMk3O41hsrSfbvNsjmoKylA
RevCGBqwokLsfQ5yHTe1/1Y4hkxij5l8yuOgc/XBPWEvx5DpvdM9rfh7lZpR
6L26YQxdOvNo9PMjDuqwkrkY9nMMLXRYE/i6gIP25A0/0Vwyjm54vL5hX8JB
Z8OUt7Qpj6MPCQs2aZZy0C1nxw+h2uNoAW9EMP0JB89h1e+v28eRtHrQ22tP
OcjJK1EqNHgcPQl/7R/8nIOmPvO+G4waR+ZOr5SXl3PQNZOAIIfEcSRsFNZW
j92obNuu8Wgc/T5x0JevAn9fr1XFJD8fRysiru2/hc3H1gHW23FkotlxVgN/
f416F9z+2j2OlAs7t256xUHfbUIsjQfHkazyX5Fq7NOVIzz5M+Oo13pu+ebX
+HuW/t41VHwCWXmWntaq5KCdCzaKDslOoLqqD2/TsLkX8l86rJxAL58WXJ9f
xUEqbpflNbdMoB3lBZ+/YFe+pzQnW00gi7TDbuuqcX03Hg1huUygZZ17blzB
TpY17/kaMIFmleIs9Go4aG1sWbwxZwK5XVTtCcNu5lE3zo+dQK0/0vY0YQt2
CGSGZk+gX3kUPbtaDsq2OGU7VDSBfPU3FsZjbyn/xXZ8NYHqPy43a8DuXrm7
pKphAqVrV89jvuGg4Ju1npptE+hrhiNrLfZSIV3JGz8nkP8JExMP7NKge7Ws
vxPoVFxf5yXsXf0Sgd7USXSIfb2rCHvEMWx5m+Ak4hsosW/FvlQ31mq8eBJt
9szeNYW9wmBfZL7SJPK8/O7nQnL+yWnRl9LCvz8SIqOB7bFk859QmETn/2jy
G2PTIgtuDJlOou+rzUvssG9NyW93tJtE3W9U9Dyx9Q/EzVa5TyKbg3y3fbE/
f6E91PSeRJGp0lNB2H5bfZxvBE2i23ev2YVgi5R2CrEvTqJS6/S3YdgPVXaU
eydMonApP7dwbNPrL4623ZlEu9RAIxS7j62xbEvuJMrjO7TxHHaI/63G/KeT
6PLlQ9knsWX7hM5J1UyiRY/uBxzFLtt1RjOseRLFVF4v24u9u6q/c6hjEkmd
SYmwwh5f43TFsX8SVXYq9xtix2XUbayenEQDfPcm1LE1xA1GNFlT6LvajWcS
2O9CctJuiE6h380OWynYXqOLrdkyU6jLUCf3B65n2ofJgra1U2hC7uSWLGww
8vLYsmkK7XkZnBSO3fbos/gjyylkK97N3octfqX4RJjXFPrEsfNZgv2Iqqw8
7DeFFCO1Lo3gfrDwTvjkeH4KLV9kxnqDHW7pt2518hSK4TzY6IMd+1b1YM69
KZQtHbR8A3aycXuKQtEUEsksPTwPO9dgC12iaQppGQ1Y3cb9+ElFsn6aNY3s
Pws8K8b9rEwtc6v0mUaCuYxthXg+NE97J6DgaZTaoFvija0/rlhbHD2Neg7U
p6tjW/THrMy+N41qPuHvEZ63E19cJmPap9E9Q6pYDJ7HynzGJbttM+iH9zwJ
VzzPDStKK5psZ9AD6/GDUthfMg+PbvOYQdeX/Vj2+QXO65SP9uuDZ9AO4cgW
S2zxi/cU5IpmkOQB80smOC9kmE62ya9m0OpxXX5ebNVgkYsLmmaQf9KrNTU4
b9afCOSy/swgb8pA+TZs971mT37LzuLzSTbHvgznyzeefvdVsyhGPGifDLa/
XaFMu8EsWp6epNX7DJ+vzaU5jbazSGiXdc4J7Md6gxaF0bPoT31QThrOt7LC
9PMrk2fRUaeQcG/sag37wsx7syjF1OTkBuyvSi8XJ72aRYxbeRmdOB/pYld7
zkzOoj1/Lbw1sUX6gwRFWHMowEZxnB97WfX+NWmicyh6JedMD87X9af0OdVq
cyhw0P9qCraZjeID+3VziEfhqvwpbIdV81t+b5pDrIG6QnvsgO4uBWHnOdRR
lf5DEjusrM7szoE5NO2Rf24a53f8tSJfbf85JGDaK9uO/dj04mu7y3NIlV26
/y52/2NN99SXcyhsyvvPRuyZ6CVRWg1zyChSn7MCW8CTWVD5dQ5FOPFISGCr
SH2h/xqdQ8U1wku5xbi/plzi1/NQQE1MOboN+06fTVYoiwK21Pr+N9j5FdC0
SIwCcbJG/tnYJQ+1e1wlKbDiFyQlY5cnq05my1Cg89SrO/ioj6rDpQVHFSkw
yW2KDsau9xOTXb+CAueOHbXzxW7Zy7smdDUFnq29TfHC/mYxa9KwjgKtDONg
Z+wfBsOOi4ACR5LrP1pj/1btO+a6mQKGs3EUM+yRhW0h2aYU0DMeHDPCnqI3
XR/ZQYGBW+tLDbCpQ5X3DewowG/4caMONl/7kxccZwqEHVpwWQNb+G1uc707
BUxT1FLUsCVK0n9KHKRAcD97nzK2TEbijIs3BdJmr/XKYytdiRHO9sfXB7xZ
LIutfvaCwkgQvl4kZk4ae82hgHUGIRRQbWyMXoptYH/YjHORAgpO7q+lsI2M
97rUX6bA4tmZFGJTLVtfiWsUSG80X0iu37nMLNwlhQJNc4Kq5H72goY3stIo
EFEw0CSD7Tq1Jm84iwJjqXfmyWF79i1/rZ9HgaH06mYF7KPNMp9DiihgWTeh
qILtX7Hgz7tnFLgg+X6arO/MQz4eiVcUkIvl7iDr5yTPibnU4vrq9cuvwY4O
H1HOaqDAW4b7YT3SD3u/Wei3UWBYZaWNMXaaxXu3kC4KCG2u+UXqn21Q7f/u
JwVYpXt6rbBLF+bf2vMX12Prwrm92C/odx/fm6bARv5EkYOkHwaTqoeoPPD5
dN/J49gf34RwLwjxwLA3Yx0HO279jU3W4jzQv7rA8hL2jrzHiQpSPOAV3VGS
iP0uvsuoUpUHQh5ZuuViV7psuM7azAMeZ39e+YZdODa9IeIUD2hpn9EyxP19
3Esswf48D1Q8X0Uxx9ZsW/5bNYIHFsPNxt3YDyrs498k8EC+b4WfL3ZGVPF/
Ao94QDKhzS2TzJvc8SsxP3ngr3Y3kw/Po1X8xT5nLg/wd8XdXIAtwnvHYNUY
D/x3onreMuzo/sbeBjoVuEtjXXWwOSUr9UVkqNC+vLbEBdtIzfhypyIVlilb
1B7Apt506slfQYUlgi9TfbGDLkRd2qlHBbPGqxlh2H7mv7rjbKiQd/hKWza2
VgVV192RCl0P/OY/xh7SkozRdqOCebMu/Sn2YUmTdS3HqBAvdlHtDbZa1J7o
DH8qjN5x3NOE/d/ciS6/M1SwuFa28zO2x4+MqIVRVJi2yPEneSVvW9bZe4UK
f54rZ/3G7qxt1ilOpIJh7MqkIWynXHqnbSZ+3/qrT2ewl8gt0VF5SAU3u1N/
qDj/vlxdHTlRQIVzK8TaWdjWga5rEl9SoUFEgSmMHX9DjDlWQ4Vf8bJjYtgt
zyubdzZQwedXVb4Etninf3puCxVYPanrlmDb0Jf7zmujAm/Thkhp8nvFNiOv
LioMrzDKlsX+uCVGrOonFYDPOUEB2zZq+NHZv1TY9aHosyr2tYfp59umqeCQ
66WxAvtT466dujQaBKpq263ElhjhlUvgpcExx35LDWw78adDw0I0KHI7tGQ1
duLawxUW4jTw14os0SLrs5eJvb+EBlvNtFXXYEuebnLhk6PBou+2R3Sw7W9e
0NinQgPGkt7wteT3L9bwvFpJg8irDSfXYbd29TXIrKFBqLTQRl3sJcykW6f1
aeD4Ob2L2EHZ7OgXQxrc3XrNUQ87eesc0jGhgffUzzzirwfzhOLMabAyKqWD
eEnM3nauNQ02bXj+h9gxb8FDMwcamO3a/ZE45X1VUJYrDTp/Bt8k/jYasJ3l
SYPvoobGxEsl1Ja6HaHBfm5WPXm+k+63P+W+NFCVrltHnOJw6ZnUKRq44sWS
928PMow6eY4G9OOcIrI+mdsjDh/DaGApAnVk/XteZqhpxdDg/raJalKfWz9s
py9dpcFA4stsbewOFv/bP0n4eSUP/Eg9XU2PHLibSYOKbLEaUv/Uw8v06A9p
sDc/fccq7M5L7/lcCmiQZ3ihWh17b7NOlmQFDUYWGJ5ejp029jPgRDUNPlUv
LVPB7l6UbPLhHQ3MH5sOKGG7OVF+RrXSQMUkVlEe26O3WolnFNdnVJNG+iuD
N3DMcYoGSnU7OhZh9y5fUVXKQ4c+q7VFC7H3H73scVyQDq71GWai2J4Tdum9
SnSYe75Qnw/7IP8v2Xf2dEiN+vJ6DM/Dr4BSOr8LHUbm3oaOYnv1hfcY76ND
T1K16TD2vtfKWS986LDj/tuOfmzXMx4aBZF0kBXfuYnMX8cfbdGhWDp0S9xT
68be48AYVb+O7/cjSrKTzN+6tOLMdDrEFp/n/4ZtN9yBksvw+24q2tqC/ckl
b9nnV3Ro2Zly5AO2TcNZmvgbOrSbeN8g8291X7oq5iMdFKLvi9VjW+xz3H6e
Swd2Sr5fNXZ9s9qq8r90eHFUqq8Se7vRtPDMNB2440/2vsbetiyp2Y+XAdK/
ZgIqsDe3fnLwkmVAdLGA/DPs1yaZ6+8qM4AzPdT3hORd8QmZbnUGbC/1LC7F
3nBVvNtRjwH09FG/YuxyWs/rxA0MaNzK41FEzkveBXc/GjNA/GaIcyG2vrnV
AUsrBvjxFBwjeffkmZxZtD0DDIXWRzzC1lUbVn+zhwHaOydz8rF1eGOHjA4x
IHZL5vw87MITLh+CfRiQ3udumUvys2dVYVkAft5cf9JDbM2X9QFrOQz4Hd5p
9gA7T+Pmbt9IBiiJ8xXcx15167BBfix+/mF/BeIHguulB64xoGiGdTMHe8Xp
eTxqNxmQcvzyMuKcX18796czwPjcnxyS16r2Oa/Ssxmw+c4IEN+rDszozGPA
soZTbVnYyjrbwqSLGXDQ1v4c8d10SS+HMgZMhLisJFYU+2/b9VcMUL3k0X0P
O/1cyYqWWgZMyerfJpYfDBMSbWTAbPgjd+I7zraD5h/xfrBSNIhl3ym9j2xj
wLdPb+nEt/THHtd0MeCJ5/z2TGzp7Mp45n8MOK23tpzY6mZxSS2XAc9irTOI
I65kfY0eY0Bc5sI44uehyXM7ZhlwnhfCiUcCo2UXMpjw+2dMCLGzm/f+myJM
eCuRHUtca2rzQEmGCXQnnxJiyoYtjb8UmXDQ8Wszsba27sjDFUyQPT86Ruyl
orbwuBYTHNWDpf+9r9RS3bV6TFCNMTQlbhGe7zi9gQmK7dOnifmZ1LPlW5gQ
6e3zmNiv/8frLTZMWLr9njqpX07nxz4BRyYsoYwcI+5oqeFv3MuEm4uFS4hN
n9+3tDvGhO+FXZZkf2Qv+bZ5RjJhm9Lfu2Q/bS/so6hfYYKn0Hca2f8ofzu5
oetMsHQfdiEe32PgefIuE+7rfJYj/VOnwRiNqGDC1P7EEtJfVMWxheY1TIhx
eLOM9N9ayZ+6og1MYAe+jCBOpdadTWpjQqO7txPpV//3cQI540xQbmpkk/6W
95WXr1Nnwa1Sse1kHuw9xY0va7OgZKv+I+IYR7aXtT4L+E9ZLCTzM7np98M2
ExZUyY62EjeIP9brd2PB/PwN1iXYTP4Mp/wDLJhI/fmQWG8uIdjPmwWGfnNs
Mp8ZvYFVs2dYkOe2qZA4sHjjTqEkFkRt2jRN5lnToYHrfJsFybO6Rk//nScc
onPvsiC/9XoEsb2xX43lYxasbbggQvJAtyUTxdWxYC7ihWAZOa8EaLd1v2fB
3pOPTYizpCpOan9hwawoz3niRe6tBS09LHhxLJNLPD48T20RhQ0hybuLn2Pn
JiTWeDLZoPjQoId4v57SvlIBNtTWh4qUk/w7B6m7F7GBstjVg/iSYh3KkWaD
ku5EFPGWWru2aQU2XB1kPiYuEvaRSNFkw4Oo61PEhwvmCvrXsiFJQ1nqBZk/
u8idCLEhtQsMiONvpUd/38YGyXMKAS/+5aOmmsYONlizZ+KImX1lNcG2bIhR
8n1I7LfyE13OnQ1V+U7fidXfu6X6HGDD6Jmvf4l7/AbRq2NssI8VFSB5miIZ
1Cbmz4aXjnwyxNZlfIHuQWyYta7SJBZwTZAovMCGb2xLI+JXDPlC5kU2lBg8
sCLWMjMYvJvAhhy72WPEaXE2aiZpbAgW7o8gFvt6ZN9/uWy4ue/xTeILcuGp
F5+x4VFiWC7xsFdqm1otGwx/3H5GnB/Gqs2bxvVqm2wgPppxsHDNSl5oE9xa
Qmw2UevTo88LfqGi94lVTVU04rfywpEFH1KIWTdD+zfZ8sLx3BfRxN2DP7JH
3XlB9qzwaeIXRkae6T68oPJo1PPf+hNSFa2DeYGtccOaeJeB8+3HybyQW/Wf
yr/1XXrm5JbFC3cYXSLE87sWLxEr5oWVCZumSD1rwz7F+7znBZuVTbXE6z9Y
Rmry8cHgX5v9xIuVck06F/JB6tNxc+LxAEFWrAIftKS06xDnS78JHgQ++LCv
nE0c462Cbm/ng/OanwdJfxx8HTpt4cAHeSI+rcQKB4xO5J7ggwFtm1xialmq
1p4QPpDdm5tE/G0+z5DQFT7gCXkYSnyt8NnBIw/4YB4lz4XYl3eJqvRTPvBt
KDUn3uFwsvddDR+smPNfTyxA1XFV/8EHv58vWErs8ad+Y8oQH+ybWCdEXP5p
v4IghR926grwEPs8TOz7I8kPyc8e/5sPRc7b7DptfnjJnnlH/MVh9vB9C364
oPS2hDh69SrNqAP8EOJAu0u8gc919CCHH8IdzsYTj3y/Umx6G99/XCqMOLPo
daDaU364alYQSOwnEhWWrSQAlfJl9sSbDlldVb0iAJQcXzNiddF11OLd80DV
vdacWKJE6sgmeUEoaZlzIG5esJPyZEYQMlp9PIljvcMur/ooBIMckWPE79p5
n0hazodqbsNx4h0c8xU3CudDbGO6H3EZ1/OFjKQwqEcGnCBW3X3BOu20MNCl
Pv4zZVnVVNJPYfD6RPEnbunhTb1iLQJ2WfP/uSltbHBHqQh80RH/53euPzaI
SIvC5R0S/6yYvkgyPEYU6uUX/fP//785pHn8n/8Hk5RGgA==
          "]]}, Annotation[#, "Charting`Private`Tag$138725#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$138725#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Y9Dbjyr+T40J/wNeK7a3
          "]]}, 
        Annotation[#, "Charting`Private`Tag$138725#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"w/ intuitive pulses\"", 
         StringForm["w/ intuitive pulses"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8432587530275764`*^9, 3.8432588160539536`*^9, 3.8432589462210064`*^9, 
   3.843259018361926*^9, {3.8432590858573484`*^9, 3.843259095660656*^9}, 
   3.843259126810398*^9, 3.843259194028412*^9, 3.843259377882122*^9, 
   3.843260131016238*^9, {3.84341238140788*^9, 3.8434124021650524`*^9}, 
   3.8434124478529434`*^9, 3.8434126101907864`*^9, 3.8434126715647554`*^9, {
   3.8434856022268085`*^9, 
   3.84348563604747*^9}},ExpressionUUID->"521bb4e7-a9d0-46a5-9cb5-\
411464f81ca8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = -5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], -5, 5, 0.001}}, Typeset`size$$ = {
    479.4, {14.1, 22.65}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$138798$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = -5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$138798$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, -5, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{531., {63., 69.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8432587530275764`*^9, 3.8432588160539536`*^9, 3.8432589462210064`*^9, 
   3.843259018361926*^9, {3.8432590858573484`*^9, 3.843259095660656*^9}, 
   3.843259126810398*^9, 3.843259194028412*^9, 3.843259377882122*^9, 
   3.843260131016238*^9, {3.84341238140788*^9, 3.8434124021650524`*^9}, 
   3.8434124478529434`*^9, 3.8434126101907864`*^9, 3.8434126715647554`*^9, {
   3.8434856022268085`*^9, 
   3.8434856361293583`*^9}},ExpressionUUID->"b589b73d-5abe-4f73-bd20-\
08016e426935"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,11,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659150605154`*^9},ExpressionUUID->"50a3c6fb-d0b2-4da4-85e6-\
ab1db6711b0e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,12,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659151133223`*^9},ExpressionUUID->"efed812d-cc25-4891-a752-\
96eb2401c8dd"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,13,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659151422625`*^9},ExpressionUUID->"66423f1e-ec1a-4ec9-9560-\
aef3d0e4d335"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,5,14,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659151718216`*^9},ExpressionUUID->"61daf986-bf39-4735-b14c-\
a0daf832865c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[CapitalOmega]0"]}], 
        "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.2"}], "}"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<intuitive1.gif\>\"", ",", "gif"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.843260137421753*^9, 3.8432601513272133`*^9}, {
  3.8434126770184407`*^9, 
  3.843412721275465*^9}},ExpressionUUID->"223e6f29-4b1f-4185-81eb-\
e112c6b0b40a"],

Cell[BoxData["\<\"intuitive1.gif\"\>"], "Output",
 CellChangeTimes->{3.843260147553011*^9, 
  3.843412705434619*^9},ExpressionUUID->"2e1d1575-0e76-4556-882b-\
2313e1a1af68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Intuitive", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
      "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", 
       RowBox[{"-", "tmax"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<w/ intuitive pulses\>\"", "]"}], ",",
          "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.8432587043900986`*^9, 3.8432587418230286`*^9}, {3.8432588153159046`*^9, 
   3.8432588153768034`*^9}, {3.8432589455706663`*^9, 3.843258945655137*^9}, {
   3.8432590166434994`*^9, 3.8432590225390444`*^9}, {3.8432590803975763`*^9, 
   3.8432590950563774`*^9}, {3.8432591262164955`*^9, 3.843259126366373*^9}, {
   3.843259192401531*^9, 3.8432591926731343`*^9}, {3.843259374207531*^9, 
   3.84325937579399*^9}, {3.8432601163249454`*^9, 3.8432601168637657`*^9}, 
   3.843411947499678*^9, {3.8434123654820533`*^9, 3.8434124016738377`*^9}, 
   3.843412469639544*^9, {3.8434125626268144`*^9, 3.8434125627014055`*^9}, {
   3.843412629173314*^9, 
   3.843412629252425*^9}},ExpressionUUID->"3ecf6e19-dfc4-42f1-9d82-\
761f6d3c050c"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8432588829209304`*^9, 3.8432588950895276`*^9}, 
   3.843259149148101*^9, {3.843259251057072*^9, 3.8432593103593483`*^9}, 
   3.8432601690720196`*^9, 3.843412563084735*^9, 
   3.843412629563264*^9},ExpressionUUID->"5161d156-7788-47f2-8130-\
cd784ab251e7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$126287#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$126287#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.84325665118006*^9, {3.8432588831065106`*^9, 3.843258895277294*^9}, 
   3.8432591493676353`*^9, {3.84325925127938*^9, 3.8432593105831413`*^9}, 
   3.8432601691868114`*^9, 3.843412563181636*^9, 
   3.8434126296613693`*^9},ExpressionUUID->"6f475e0c-7514-49e2-819b-\
b819fe7ad4ed"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
kmBv3fwc3b4lXrp+mIRo3Zl2tNw+4z6VcRIssrs60A5xE7d+/UCCcM2xTvR5
4eVjnV9ISPIY7Ea/eLLTxoCiwL9IvIddPymqkiJKQWbOZC/aUabs/YQkBen3
LvSz53NSSihYQkGO+dYhtFNW1GqfFRRMe8qNoHerWwZ1bKLAHn56jXYuXCS0
3E2BR3vCMLprKnSbiC8FV8VKB9n7NOh6UxlCwffF5uz+3RGb4sJ+o2C0wpx9
nz01OXzdeAqMu2q70Bf6Hb6cSaJgJqL1FfpvkfmNb9IpUCypZ8/rbrF/X24e
BUSaQxv6YuDSDbSQgo6kj8/Yep55JuZ2mwKvlv+w9+nRqndFvpqCulyLRnT2
9HDo4QYKylPOsvXoW5xh/ryZgmz/6jq0pwtnOO4vCpwVR9l6eg82qBFTFFTJ
hRWhc0TDp50/U1A2oF+IHlypWX+PoKFo65sC9N6gs96HFtBwK0knF+370fHy
oBoNZwZ3pKL9579Wbnaigfd7zFH069B79Hw3Gho7po6g/YZODmz2oUH41SME
7VOrfqXqIA2SqpsC2fNHeq++HUsDd5q3h63fxN+CjHIa6mQDTdh6uxUuffmA
BtF6njHbXy2/UjKPaZDRKt+Iti1QrI9vp2HaR0MPvcPHeduxcRo09N000GZ/
vdjtp8xAmE8YD11rnmeUq87AUbN8SbRJyWGlPi0GvNx6xNHGSTJ9zhsYcM04
KII23G67z8qWgSk36Vmc99L7KpannRjoc0r5hDbgT2g93sPAU51lM2g90YT3
JgEMkCVuE2idmj9D10czUKXsMoIuXJ21KySWAdXz64fQqy4EbryZwID+rMIA
WvMXCYKfxUB5oiibN+p6W08oljBgZ+7RgV4uPbI19QED5yJb2tCq705ISj1h
4O17HzavFK/WJXNHGFgVI9WEPpV45dXpaQas7w89RE+Gn1aWZbiQHjFah3b1
PLA3i8eF8EqFB+hHFvbX1ZS44HgkvAq9dq3BpFCTC3+eoCvQFxR+MFi/gQs/
CO+UoX8e66/dYs+FALWUEjZfKwqsHIO5oPuH5G208pmQTt9YLsi5yNxEz+zZ
6BuWywX3wxeE6KbVzNSpai4IyUsF7HlCVFWbtERgZntcPjq85EcbyXQRCG58
yXpmQoK/mDMPosK2XWOfr/2CVvGaBztjLrP7Tfhd7OQ/mgcnP8neQgfl+Bev
0xaFxvA1xWij51axOmJikJ5IlaLFST13rX4xkPnF6z46705tOL9sPujPmZSj
TQNskzQSxcFl02HWWlL6ZMkuCfBUCmQtd1dhv6nqAmhyd2TdusiGUzq7AF7q
mrFOOHDi7Kp2SThfps+6uVu0VN7qO1j0SYe1dfR2zczi76DBSJt1+bhvlZL8
Qhi21GStsSvKLvuXhZBowWfNWVr/OX14IVRUr2TdNiB6MdGOBwt+++an2dPv
rO/xINzrm5vd+415ilJwc+c3L7+8WP5kvBSk7/jm//+vDKItv/kfV9je4g==

          "]]}, Annotation[#, "Charting`Private`Tag$126369#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WajQvOItMUmFwqgFQMxpDlJ4Lhul9FEhVzNboZzH8xAVJtz8s50K3b+eIf9s
ah4CdwXFaZuoEP8Cx+2iuwvwuJOXwbmMClGZL2eQyiyC6RUu99xvVMjWWnkY
fVoEnQzO+YkcKuQsQnnsLvMSSLodq9NIpkL7gnMqHr+XQGCG+ZJPLBXSZFw3
rrmyDJw6DEklb6nQtyqTBuWYZSDhp3Tm9qVCFqdcfr1VWIGtCNIpfXcqxGyt
rsgcsQLzB0c3Q19QIYakc+o6wyswbPO3qvYJFXr1wU1NmAcHnT27Ajs2VMjK
w9QzzAoHtbJbsUL3qQj6P8p4Kw0HxZ/WSC0MqRAR7/VT94ZxkMWCc4jTpUIL
LgvH4gj+LMFzcbRdgwqtW0/azMnjIXR+9gbJdSrE0divKP0QD156U6VS8lTI
a66D2CkcD89qxvmeSBHqiU4SCMnHg5XAyLs0ESr0+Kq2s/UPPBhEDx7+EqBC
73pK/myNEfzQUf9jel5CfnxHzwU8HuQe9QwqclKhF4mM4/sEfyPys+O66zEq
FPTF5oEhwQ/xKrQW5jFQoV8D3ZeAEP+X23RmipIQn4i1zCTkU/9XH8pOTIW0
+gQSA3F4+OuN7WntU6Iue9bRsVE84Jcqbfw2KBHT/nRRbjMe/uiX9ZUtU6L0
mcD3K7l46K8tVsDNUKJYXbfW7BA8NAt9y+Mdp0Tyhj5npyzxUBGXd8JwkBJV
5n9mzZDCwxeSnNfhPZSo/PqU9yY5Hj4+ydqsb6VEwerxE2OdOIgcTDPfq6dE
XhOyIk8JfjlA6WOncDUlMpNX6ynSwYFr/nsZqxJKJJaR9QyjxoGpf/SxrmxK
9PRaLLu33Qp0wjalaxolKu5/XKXIuQJwYLDPlUSJLnO5ZjQ1LwOX48lxx7eE
+lgtcx+yLEPERc+ek8GUyF4Dkyj/tgTEC2P1Db6USDdVTFRIawn+mKVl/+dM
WK9IzHnddRF0T5K9x55SoroXdMJ+1ItQP2AdZvuQEk2duS1UGLsAGVoCjhUm
lChSKqPC4dM82MgUyJgqUaJwh4oen6xZGNhmFqaUo0RUGZ8MiblmQbXwOVeB
JCX6Ie3AeytuBs4LSJGTCFKiBQ96VSbvaVj8r6Yzk4kScV6+fZ0F/oD9epv5
yigF8gyc4bC7OgxjeRdvx/6iQFdeZIsksf6Gmw/fqkAPBeJT6znujRsEkQnd
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
1RbBOv0+j6jbdYh9l5xaY7kIMecCF2VrlGH+y6eJSK9F8GGzZfpJpgyhU5Wm
MsWLUKKaL9eRoAj9OtNGoWeWoEKt4OhrMwC/HS7h/tUlGOdYMPVxkwfX17uD
4neWwDCeLPjfZTngrKEzGA1ZAoMvtvbK36+C1QUJPeHtJfCfEXEBYkkoUYFI
EuZlYLzkIRs/JQ5UFuo9AxeWIdDF1BvaxeBL/L2br8yX4Syvek93gSgcFj0I
1/NYBlV3/mtzX0RAp+tZx7m4ZcAxHmSqm12CTfJAje72ZSh/Itk8G3kBVLgj
QjLmloFC28rhca0AxMsm/nAlWYE9ubn/iA/PgezzfFVu6RU4d0fe71waH/hN
DCg5pq/AhO3rxA6pUzBWrvHEtWoFds77Un3PPwFXo1Cs188ViK08N9CrwA6r
13MWQihxIJX1V4SkjJXAr2dY33HhgJWTFF+VzAyfdqNk467g4FQJ7yiRAiOY
5nq+TX+MAz21s9P4bUqo8F8v++yPA265HtzXHDI4Zvrgz9dkHNw86eErmkgM
DlIjtCUlONiTLmtRDv0n3850S6KqCwdLRvanLEx35c8vNprWzeNAOoLPguPL
hrxf/dWgFmI8KCr71Uav4OTHkr5+6yRwx/zj26O5r+bkrzrzDfeL4eHaQ2N3
eeZJ+dibCWTDmnhQNWMkunLjl/zaeQbh/3ONylGG4I3ddnlNEj+DOS88PDk6
fUllp0Y+e3jHeyUOD3L4w8CLWdnyZN/tcjYKCNzVdOC51eUtbxY+2bf3Aw9n
B8LO3n9xV77igf6/oz94SFQ1WNokSpb/71obP8VfPFj2Uc38aC2Rl6bnOh9I
swolxftBdm+a5Wdf/palPr4KH+OJjR8y9MtHz0bfCuVdBZEXNhFMkWPyino3
bRhFVsH0q4rFRs6M/CpG7R4puwqFZ6Itwy+tyH8Qanh7TH2VwG1j2iXL6/Ka
CV4Z8XdWQeEa65nwnzvye+RXyk9arALLDg1XlN4/+SzHjY4P9qvw31ZZHGkx
Mdwez/vD7b4KW8fZ6thoyIFE03Yn4/UqFGdW6b3/QgUFZTx056NXwUpAVEo8
iQ5Mz45y5aasgsf7co9qOyagjYyTEM5bBSE7kyn/QhaweUxnJt60CiTMDckF
xceBbbDpeWnvKhxjChzJeXYC6pR9gq6Or8Jb226VVf1TcOr09jeF3VWYpI+U
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
x300jQPhf+PxMu8=
          "]]}, Annotation[#, "Charting`Private`Tag$126369#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
NMXFiqq7EvH99vD//6+iGTfpcNSsPfwfvjMzug==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$126369#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"w/ intuitive pulses\"", 
         StringForm["w/ intuitive pulses"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.84325665118006*^9, {3.8432588831065106`*^9, 3.843258895277294*^9}, 
   3.8432591493676353`*^9, {3.84325925127938*^9, 3.8432593105831413`*^9}, 
   3.8432601691868114`*^9, 3.843412563181636*^9, 
   3.843412629809196*^9},ExpressionUUID->"dd8f40f9-1fdf-4c86-9765-\
061e3c5c8bae"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 5., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], -5, 5, 0.001}}, Typeset`size$$ = {
    475.4, {14.1, 22.65}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$126442$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = -5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$126442$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, -5, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{527., {63., 69.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.84325665118006*^9, {3.8432588831065106`*^9, 3.843258895277294*^9}, 
   3.8432591493676353`*^9, {3.84325925127938*^9, 3.8432593105831413`*^9}, 
   3.8432601691868114`*^9, 3.843412563181636*^9, 
   3.8434126298792496`*^9},ExpressionUUID->"4a355152-cace-40e0-83c6-\
53b09cb52f68"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1742,616,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843486274115947*^9},ExpressionUUID->"c040d024-97f6-4f6b-aa35-\
fe9a8480a9fd"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1742,617,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8434862741257744`*^9},ExpressionUUID->"154218db-b779-4041-bf1e-\
913b66e05af0"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1742,618,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843486274173815*^9},ExpressionUUID->"fc5d57b3-21e2-4ec4-abfa-\
4a21b00ddfeb"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1742,619,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8434862742064133`*^9},ExpressionUUID->"103de235-960b-4dd9-aee2-\
1d579b4ad9b6"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1776,636,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843486310554988*^9},ExpressionUUID->"32580f2f-ef26-46ed-b638-\
c9e5aa55e231"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1776,637,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8434863105869913`*^9},ExpressionUUID->"aa9431fa-70ab-4267-8c4e-\
72fc6fd54830"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1776,638,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843486310682153*^9},ExpressionUUID->"7af49785-cfaf-4a42-ab22-\
d63aa38dfcfe"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1776,639,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843486310748026*^9},ExpressionUUID->"34d056be-4467-4a0a-b9ae-\
c16fc7da177a"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1816,732,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843486516848725*^9},ExpressionUUID->"0eace289-68c2-4539-bd5c-\
1bd9e391cbb3"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1816,733,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843486516904147*^9},ExpressionUUID->"d7733ebb-7ef2-4831-9eb4-\
90d8d5d09b18"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5.`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1816,734,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8434865169359493`*^9},ExpressionUUID->"fbca3a83-7288-4522-8783-\
c6d209cc3dbe"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1816,735,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8434865169689054`*^9},ExpressionUUID->"a27f5d83-9b33-4b50-be31-\
72313be11abe"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,7,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565912161461*^9},ExpressionUUID->"82f556c5-ec6e-4ebc-81bd-\
64d0add93414"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,8,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565912230137*^9},ExpressionUUID->"84d29990-d0c5-4147-9564-\
8a75dc829d3e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,9,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659122622204`*^9},ExpressionUUID->"d3b93ad5-fc68-4d3b-aeb5-\
2722f08b031b"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,5,10,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659122944746`*^9},ExpressionUUID->"a4a36db4-b78a-46a2-8ce6-\
a4d9a05c3f49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[CapitalOmega]0"]}], 
        "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.2"}], "}"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<intuitive2.gif\>\"", ",", "gif"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.843260179137372*^9, 3.843260188001666*^9}, {
  3.8434126527323837`*^9, 
  3.8434126655082397`*^9}},ExpressionUUID->"14900515-ea65-4511-acad-\
b322798cb2fb"],

Cell[BoxData["\<\"intuitive2.gif\"\>"], "Output",
 CellChangeTimes->{3.843260184431874*^9, 
  3.843412663192785*^9},ExpressionUUID->"e42bd179-7118-495e-9f05-\
c4a8672f32fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["i"], "Input",
 CellChangeTimes->{
  3.843256625151123*^9},ExpressionUUID->"25fc7b6a-ffaf-463f-aba9-\
86af7c6d08c5"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.8432566254959292`*^9},ExpressionUUID->"d7ad0b58-698c-4ff4-8463-\
62e4ee786948"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.8432557961610703`*^9, 
  3.8432558067091208`*^9}},ExpressionUUID->"95efa697-dc13-48bc-93d4-\
4df6e5f2a96d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Raman", "Subchapter",
 CellChangeTimes->{{3.8435659548448553`*^9, 
  3.843565961514351*^9}},ExpressionUUID->"cd54f1e2-53f2-4fe9-aeaa-\
592a0e98aa59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Raman", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"6", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", 
      RowBox[{"100", "\[CapitalOmega]0"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
      "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]eff", " ", "=", " ", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", "0", "]"}], 
      RowBox[{
       RowBox[{"\[CapitalOmega]2", "[", "0", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[CapitalDelta]1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"\[Pi]", "/", "\[CapitalOmega]eff"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<Raman\>\"", "]"}], ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
        RowBox[{"Abs", "[", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "tmax", ",", "0.1"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.843259031509108*^9, 3.843259032518113*^9}, {3.8432591062599835`*^9, 
   3.8432591063515716`*^9}, {3.843259168095916*^9, 3.8432591750256915`*^9}, {
   3.8432609839650316`*^9, 3.843260984054989*^9}, {3.8433912027153177`*^9, 
   3.843391235234599*^9}, {3.843411420110826*^9, 3.8434114422214174`*^9}, 
   3.843411756039548*^9, {3.8434119960709457`*^9, 3.843412090519328*^9}, {
   3.8434121506521535`*^9, 3.8434122865773706`*^9}, {3.843566439953267*^9, 
   3.843566599459092*^9}, 3.84356688227462*^9, {3.843566999671974*^9, 
   3.843567002883794*^9}, {3.8435670420023746`*^9, 3.843567050852023*^9}, 
   3.8435671048326335`*^9, {3.8435671482155685`*^9, 3.843567151589654*^9}, {
   3.8435672226863165`*^9, 
   3.8435672320834775`*^9}},ExpressionUUID->"ebf1ee27-4942-4710-a1a4-\
d07841c33f3d"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.84356713575966*^9, {3.8435672086498137`*^9, 3.8435672334778147`*^9}, 
   3.8435673281809826`*^9},ExpressionUUID->"ce38df60-b3f6-4978-84e2-\
d793b3a2eddd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXPfH/26y8vsGMDgg337tufeH95fsYfzL6+/9+79
EzhfaO+nbVEXv8L5TfF6DVKmDA4w/t2Xi4TepLHC+fsetr0p5uSG8yssVi6+
rSoA51/edqwk4r8QnP/g5+Ga9tOicP5UDlPXKekScD7vuVjDP9bScL5e/K+7
jg9k4fyGqN0P5lgrwPmnEkJT3BYrwvkvfTRP3PukBOdnitzcuyROBc532vfj
3OHDqnD+e9+gAxcF1OH8vzvanXmrNBDu5fy+zPy0JpyvYuY0p99CG84/6PJ3
jcN8HTjfyPLT3AdvdeF8Fs7DCusi9OH8sPvPHLeGGiD42iqMB34j+Oyp/p0P
1xvC+YsmTm/8FW4E579bfdZJi88Yzk/bvnsi20EE/8TWYwG30k3g/NsL9984
ImMK599ouHph2VEEnzFwcZhpthlCPV/80lty5nD+/P3mKeXHEHyRuH+vtWos
4Pzi9w8fX1W1hPP/FdZm6p5B8K0ese2Y3WAF5ye4ri1j1LSG882nOf6rvY/g
W93oFV4+yQbOV+f9PuO4pS2cf1Tf7/m/dwi+r+uhpboz7OB8Jp93Hzns7OH8
dAcO9t8fEfzbk+XdPvk4wPm167tKz1Uj+PKnvy5ZtQrBBwAnnQGG
          "]]}, Annotation[#, "Charting`Private`Tag$15019#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXPfH/26y8vsGMDgg337tufeH95fsYfzL6+/9+79
EzhfaO+nbVEXv8L5TfF6DVKmDA4w/t2Xi4TepLHC+fsetr0p5uSG8yssVi6+
rSoA51/edqwk4r8QnP/g5+Ga9tOicP5UDlPXKekScD7vuVjDP9bScL5e/K+7
jg9k4fyGqN0P5lgrwPmnEkJT3BYrwvkvfTRP3PukBOdnitzcuyROBc532vfj
3OHDqnD+e9+gAxcF1OH8vzvanXmrNBDu5fy+zPy0JpyvYuY0p99CG84/6PJ3
jcN8HTjfyPLT3AdvdeF8Fs7DCusi9OH8sPvPHLeGGiD42iqMB34j+Oyp/p0P
1xvC+YsmTm/8FW4E579bfdZJi88Yzk/bvnsi20EE/8TWYwG30k3g/NsL9984
ImMK599ouHph2VEEnzFwcZhpthlCPV/80lty5nD+/P3mKeXHEHyRuH+vtWos
4Pzi9w8fX1W1hPP/FdZm6p5B8K0ese2Y3WAF5ye4ri1j1LSG882nOf6rvY/g
W93oFV4+yQbOV+f9PuO4pS2cf1Tf7/m/dwi+r+uhpboz7OB8Jp93Hzns7OH8
dAcO9t8fEfzbk+XdPvk4wPm167tKz1Uj+PKnvy5ZtQrBBwAnnQGG
          "]]}, Annotation[#, "Charting`Private`Tag$15019#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435673282692976`*^9},ExpressionUUID->"5601ba8e-961f-4ef0-9a85-\
07a470537bd0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JtL2fJp9lJODODtiuy11SpH2P3Rg5Og=
          "]]}, Annotation[#, "Charting`Private`Tag$15101#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$15101#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$15101#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"Raman\"", 
         StringForm["Raman"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435673295348077`*^9},ExpressionUUID->"c8da277d-8a47-47ad-88df-\
742c4214bc63"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 
      Rational[100, 3], 0.1}}, Typeset`size$$ = {360., {193., 198.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Tau]$15174$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$15174$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Abs[
          Part[$CellContext`soln, 1]], 
         Abs[
          Part[$CellContext`soln, 2]], 
         Abs[
          
          Part[$CellContext`soln, 
           3]], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0, 
         Rational[100, 3], 0.1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {240., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.843567329591735*^9},ExpressionUUID->"7a77cc61-c62a-4a88-8a66-\
13183fedc916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Raman", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", 
      RowBox[{"100", "\[CapitalOmega]0"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]eff", " ", "=", " ", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", "0", "]"}], 
      RowBox[{
       RowBox[{"\[CapitalOmega]2", "[", "0", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[CapitalDelta]1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"tmax", "=", 
      RowBox[{"\[Pi]", "/", "\[CapitalOmega]eff"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<Raman\>\"", "]"}], ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
        RowBox[{"Abs", "[", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "tmax", ",", "0.1"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.843259031509108*^9, 3.843259032518113*^9}, {3.8432591062599835`*^9, 
   3.8432591063515716`*^9}, {3.843259168095916*^9, 3.8432591750256915`*^9}, {
   3.8432609839650316`*^9, 3.843260984054989*^9}, {3.8433912027153177`*^9, 
   3.843391235234599*^9}, {3.843411420110826*^9, 3.8434114422214174`*^9}, 
   3.843411756039548*^9, {3.8434119960709457`*^9, 3.843412090519328*^9}, {
   3.8434121506521535`*^9, 3.8434122865773706`*^9}, {3.843566439953267*^9, 
   3.843566599459092*^9}, 3.84356688227462*^9, {3.843566999671974*^9, 
   3.843567002883794*^9}, {3.8435670420023746`*^9, 3.843567050852023*^9}, 
   3.8435671048326335`*^9, {3.8435671482155685`*^9, 3.843567151589654*^9}, {
   3.8435672226863165`*^9, 3.8435672320834775`*^9}, {3.8435672841150255`*^9, 
   3.8435672841812887`*^9}, 
   3.843567320328227*^9},ExpressionUUID->"993068bb-4fae-412b-bccc-\
b46c25137a70"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.84356713575966*^9, {3.8435672086498137`*^9, 3.8435672334778147`*^9}, 
   3.843567285581501*^9, 
   3.843567332025097*^9},ExpressionUUID->"7d000d0a-527b-49e1-beb3-\
a1009de510b9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXPfH/26y8vsGMDgg337tufeH95fsYfzL6+/9+79
EzhfaO+nbVEXv8L5TfF6DVKmDA4w/t2Xi4TepLHC+fsetr0p5uSG8yssVi6+
rSoA51/edqwk4r8QnP/g5+Ga9tOicP5UDlPXKekScD7vuVjDP9bScL5e/K+7
jg9k4fyGqN0P5lgrwPmnEkJT3BYrwvkvfTRP3PukBOdnitzcuyROBc532vfj
3OHDqnD+e9+gAxcF1OH8vzvanXmrNBDu5fy+zPy0JpyvYuY0p99CG84/6PJ3
jcN8HTjfyPLT3AdvdeF8Fs7DCusi9OH8sPvPHLeGGiD42iqMB34j+Oyp/p0P
1xvC+YsmTm/8FW4E579bfdZJi88Yzk/bvnsi20EE/8TWYwG30k3g/NsL9984
ImMK599ouHph2VEEnzFwcZhpthlCPV/80lty5nD+/P3mKeXHEHyRuH+vtWos
4Pzi9w8fX1W1hPP/FdZm6p5B8K0ese2Y3WAF5ye4ri1j1LSG882nOf6rvY/g
W93oFV4+yQbOV+f9PuO4pS2cf1Tf7/m/dwi+r+uhpboz7OB8Jp93Hzns7OH8
dAcO9t8fEfzbk+XdPvk4wPm167tKz1Uj+PKnvy5ZtQrBBwAnnQGG
          "]]}, Annotation[#, "Charting`Private`Tag$15414#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXPfH/26y8vsGMDgg337tufeH95fsYfzL6+/9+79
EzhfaO+nbVEXv8L5TfF6DVKmDA4w/t2Xi4TepLHC+fsetr0p5uSG8yssVi6+
rSoA51/edqwk4r8QnP/g5+Ga9tOicP5UDlPXKekScD7vuVjDP9bScL5e/K+7
jg9k4fyGqN0P5lgrwPmnEkJT3BYrwvkvfTRP3PukBOdnitzcuyROBc532vfj
3OHDqnD+e9+gAxcF1OH8vzvanXmrNBDu5fy+zPy0JpyvYuY0p99CG84/6PJ3
jcN8HTjfyPLT3AdvdeF8Fs7DCusi9OH8sPvPHLeGGiD42iqMB34j+Oyp/p0P
1xvC+YsmTm/8FW4E579bfdZJi88Yzk/bvnsi20EE/8TWYwG30k3g/NsL9984
ImMK599ouHph2VEEnzFwcZhpthlCPV/80lty5nD+/P3mKeXHEHyRuH+vtWos
4Pzi9w8fX1W1hPP/FdZm6p5B8K0ese2Y3WAF5ye4ri1j1LSG882nOf6rvY/g
W93oFV4+yQbOV+f9PuO4pS2cf1Tf7/m/dwi+r+uhpboz7OB8Jp93Hzns7OH8
dAcO9t8fEfzbk+XdPvk4wPm167tKz1Uj+PKnvy5ZtQrBBwAnnQGG
          "]]}, Annotation[#, "Charting`Private`Tag$15414#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435672856566453`*^9, 
   3.8435673321162815`*^9},ExpressionUUID->"3bd4d089-1aa6-4e52-bc9c-\
8635b4982c95"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8q8k0eD/X4KSzg==
          "]]}, Annotation[#, "Charting`Private`Tag$15496#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
TUhOJvpJ/ikWPVAU/w8o2SHN
          "]]}, Annotation[#, "Charting`Private`Tag$15496#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rJDwP9LgzBg=
          "]]}, Annotation[#, "Charting`Private`Tag$15496#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"Raman\"", 
         StringForm["Raman"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435672856566453`*^9, 
   3.8435673329987884`*^9},ExpressionUUID->"d29148d0-dd20-42d5-824f-\
4620b0fd4dbb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 
      Rational[100, 3], 0.1}}, Typeset`size$$ = {360., {193., 198.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Tau]$15569$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$15569$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Abs[
          Part[$CellContext`soln, 1]], 
         Abs[
          Part[$CellContext`soln, 2]], 
         Abs[
          
          Part[$CellContext`soln, 
           3]], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0, 
         Rational[100, 3], 0.1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {240., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435672856566453`*^9, 
   3.84356733308298*^9},ExpressionUUID->"3e701b5a-15cd-4957-b71b-\
4590fd93b818"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc graphics", "Chapter",
 CellChangeTimes->{{3.843486044746029*^9, 
  3.8434860493876853`*^9}},ExpressionUUID->"7be54343-b5ba-4552-b3d9-\
01972d0e2f08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Intuitive", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", "0"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}], ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
      "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", "=", 
     RowBox[{"\[Pi]", "/", "\[CapitalOmega]0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<w/ intuitive pulses\>\"", "]"}], ",",
          "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.8432587043900986`*^9, 3.8432587418230286`*^9}, {3.8432588153159046`*^9, 
   3.8432588153768034`*^9}, {3.8432589455706663`*^9, 3.843258945655137*^9}, {
   3.8432590166434994`*^9, 3.8432590225390444`*^9}, {3.8432590803975763`*^9, 
   3.8432590950563774`*^9}, {3.8432591262164955`*^9, 3.843259126366373*^9}, {
   3.843259192401531*^9, 3.8432591926731343`*^9}, {3.843259374207531*^9, 
   3.84325937579399*^9}, {3.8432601163249454`*^9, 3.8432601168637657`*^9}, 
   3.843411947499678*^9, {3.8434123654820533`*^9, 3.8434124016738377`*^9}, 
   3.843412469639544*^9, {3.8434125626268144`*^9, 3.8434125627014055`*^9}, {
   3.843412629173314*^9, 3.843412629252425*^9}, {3.8434861847900686`*^9, 
   3.84348623458817*^9}, {3.8434862740781665`*^9, 3.8434863323519373`*^9}, {
   3.8434865167324033`*^9, 3.8434865515373974`*^9}, 
   3.84348659996515*^9},ExpressionUUID->"28d47736-1171-4789-bfd3-\
8493d16d8e4b"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8434862359874125`*^9, {3.8434862750270576`*^9, 3.8434863328386097`*^9}, {
   3.843486518551592*^9, 3.8434865520315685`*^9}, 
   3.84348660035861*^9},ExpressionUUID->"b3b74379-86b1-41d1-8d0d-\
3231f3415a1d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF0HssFAAcB/DDNco6TsqOjp1O5RUTSioVizxqjibLa0K6XshWWk3X7iSP
ztpN5P2IuDjckbnziEuRRzqGjVO6GXlvzo2Wq7b6/X7bd999/vvuR4u8zYjW
JBAIfn/yt72jZ4c65pxOEv4d0d04bopi6Pbfh4ty8oUUOtinf7ShgOIIDopS
tT6neIAn7Z64Z1ICwcW7L6SkUaLALB3hgaeURPCl4BLByiobrKtmhXiacsEW
/kuzXek88N0BF7ectVywkYgs19AoAjdNu/cNHi8FdzILTIIXysHK/Sf0am5W
gjU3+PomFtVgZ3VEU0DtG3Af23Gg20oANsua36haqgPPq6bkI/YN4PIf4l7S
MyGYRK1cVihE4IxrjTHF9Cbw+im+Ijb5LTjRQSra09UMnqqVpg/RWsA/mcN5
lvfFYOvT2lsxYgnYs5R2td6oDf9FDTf/FtIOtlm4qDvq1wHepbeiI91EE9vz
BPvy34GvO4rHt/t0gvnnIovb1tHKeWP9mewucGOApxbPQwpO9uIUiWbQtEnv
sTLOe/CxI2wexaEbHGI6uKEhQyt7M6fjWB/AOcSwRAb9I+6XN5ZqStHbHrIC
XeJ7wISqMMG0QS844aUg06AT3WqdqkO+9QlM9k6weUzqA0/YfpYlSdB1hW50
RVg/OFTgTKZuoR9xSlgT1QPgmllqHsl3EJxawImQn0dHMRYtav3ReyWSOr8g
dBr3cndGJDrWOXd1RxLanG3opV2B3jr6YOfoa/T44vcvFXx0VpAw9Gw9Wm3F
uMORoCeGuIVaMnRziuqKbATNcw23LBtD+7w6JDojR7fc6+9hzaGzbZ24/gvo
+On8QNoy+qDvjamONTRRY7g8S4X+2ujKjNhES5hldva/0C/MdJVqNfo31po0
fw==
          "]]}, Annotation[#, "Charting`Private`Tag$152513#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6Z2DGDwwX6BqH9bl2SKPYzfyLFZvVOy
BM6PiFy4/sPHFjif+39jjLtcP5yvGvjuxeHuKXB++TlL+xlfZsL54lsE7zEy
zofztz1yPnPeZhGcfyhrrnTkmyVw/lc1W/61ucvhfKafqwWkVVfB+Wb/E7YF
r1sD559pMTl3TGs9nC8/4fXPle82wPmvv9+/d9VgE5y/5NXuU3x9m+F8Ptnl
75882QLn92RuTVugsg3O/+aw+klG/XY4v8ToyBaxwzvg/PvrjnRfVNwF5//O
ujJbs2o3nK/tyP4vbfceON99kWL6RvF9iPCSjVd6GLMfztd5E8p93fcAnC/M
/4HjyC8En2X/7PXKcw7C+dkmu29yeh+C81d7Ji3Y9w3B//paSuDZtMNw/tZg
d+YpLkfg/HqP1vlbniH4ine9bixuPQrnW5m3TJE0Ogbnx8id/8l4GcH/eqr3
UUHjcTh/BktcSZDKCYT7721dxHQEwWetbQyxLDwJ5zOsjFv/SOgUnF80a32v
0CEEf692B4dg3mk4X9CrSKeJ7wycf0f3wuXKPQj+hnn2Kk/izsL5sevNBGX/
IfgNrQsb76w6B+evfSE7m8/nPJyv1CLiwb4MwZ8uz/31/38EHwADHAsH
          "]]}, 
        Annotation[#, "Charting`Private`Tag$152513#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8434862360653286`*^9, {3.8434862751040745`*^9, 3.843486332913601*^9}, {
   3.84348651863166*^9, 3.843486552111739*^9}, 
   3.84348660043631*^9},ExpressionUUID->"548baea0-61e1-4886-b7b8-\
e95a384db74c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0HssFAAcB/DDNco6TsqOjp1O5RUTSioVizxqjibLa0K6XshWWk3X7iSP
ztpN5P2IuDjckbnziEuRRzqGjVO6GXlvzo2Wq7b6/X7bd999/vvuR4u8zYjW
JBAIfn/yt72jZ4c65pxOEv4d0d04bopi6Pbfh4ty8oUUOtinf7ShgOIIDopS
tT6neIAn7Z64Z1ICwcW7L6SkUaLALB3hgaeURPCl4BLByiobrKtmhXiacsEW
/kuzXek88N0BF7ectVywkYgs19AoAjdNu/cNHi8FdzILTIIXysHK/Sf0am5W
gjU3+PomFtVgZ3VEU0DtG3Af23Gg20oANsua36haqgPPq6bkI/YN4PIf4l7S
MyGYRK1cVihE4IxrjTHF9Cbw+im+Ijb5LTjRQSra09UMnqqVpg/RWsA/mcN5
lvfFYOvT2lsxYgnYs5R2td6oDf9FDTf/FtIOtlm4qDvq1wHepbeiI91EE9vz
BPvy34GvO4rHt/t0gvnnIovb1tHKeWP9mewucGOApxbPQwpO9uIUiWbQtEnv
sTLOe/CxI2wexaEbHGI6uKEhQyt7M6fjWB/AOcSwRAb9I+6XN5ZqStHbHrIC
XeJ7wISqMMG0QS844aUg06AT3WqdqkO+9QlM9k6weUzqA0/YfpYlSdB1hW50
RVg/OFTgTKZuoR9xSlgT1QPgmllqHsl3EJxawImQn0dHMRYtav3ReyWSOr8g
dBr3cndGJDrWOXd1RxLanG3opV2B3jr6YOfoa/T44vcvFXx0VpAw9Gw9Wm3F
uMORoCeGuIVaMnRziuqKbATNcw23LBtD+7w6JDojR7fc6+9hzaGzbZ24/gvo
+On8QNoy+qDvjamONTRRY7g8S4X+2ujKjNhES5hldva/0C/MdJVqNfo31po0
fw==
          "]]}, Annotation[#, "Charting`Private`Tag$152595#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1Ac0198bB3BpUMpKg0gyshIqSfq+E5VdRkuyy8hu2SskhL9kl7JKQpmJ
7JF8v98PoZJVipTxSWUk4//53XPuued1zj3nuc/z3HtFrFwML7CysLCMU/O/
VfvCSHvN9720j0v/DRIr1AVcB/j5kMTJfeU/705LTC3iF0N+ieriAuWvgmKB
1yXkEEzsif5HWYfxvvAe/x5EeMxKzFIWixTKWhLej4gPNxt/U57Xtk6wlKDh
xfYvDhOUfwR3NljGqyH+7ppNI5RP28y8iuXXwHrvxZZPlBvUBcrqU4/CQ7L6
xgfK8qIHn/0R1kK3gp4GQTmV1SJHPEMHbpM5HI2U2QeD0k9J6CN6vqu7nPLL
T28Z9cYnMNPVnp9H2fWEjbZpvAFaOe6HP6Dct+um+m1+Y0gt5py6QTkubXON
+LmT6OQaPXqZsjbXE9Wq1FPYK7l00Ipy6QR9Lyl8FgFE9qGDlB3NzApvWppg
0zKarhTl7UxSblvGObSz5ZvxUY7K45U0kDDDqJtg4rdFEkeEMjO/25rjzCfB
aoKyX1Myd62xBZarzI2VUt6jJHv7bLwlTKr+mgRRfrDheGg4vw1279aLWkfZ
m5HQcOqlDQR7bMbGF0icCvnEKnruAgRLbA0YlNdOuflXpF4EO+8++VuUPTrj
PMaE7UFOKatNzZMwiuwrfVFjj6HBoXcMynIaElPBlg74lht9OYvy16IyN6GM
S1AI+1JrQNngzkcHfQlnmCR3FN7/R0JWRzRHoNkZjLT8ABfK7Msdvw3buoCH
SDkJyubli8+rjV1xPeoFX+8ciQ1SMXJn4t0wqmEwsppyIHvRjlv8V7DC8uM3
pVkS0sf+F1boegWxdp1dv2ZIvA1x+d7TfAV/OHzT8iiLLZfNlbt2FSe6xxuF
KTctZMp1vr0G89Ie8+kpKt/f8XuFIz2R/OsZ3fE3iRKFq/GaXzyxtZfXYyNl
M1ejGTcVL3gJ+SxV/SJRMM5V3jDihc/8fulrKRuOhKk6HPFBz8Op/ck/SST2
eamXLPpBNORbkd84CTXBs5n9J/3x+XLw9o2Uf5jsW8me5w9GSajT0zESW8c8
rfN2BmBXdl9i1ygJF3slcZbeAAQ1txwR+EGC16bgcZZyENpy3FmchkmcOfuw
4OdkMIZbplSU+0mQPcZr0gVCwH5C6XFxH4lQM/YLRuohsPqgvlmecpG1i0Bp
XAgCdEZYxHpJcDofDPHeF4rjHVpTS90kGoO6TVb53kTToJx7WBcJxac8qwTZ
w7GLdWS+p5VEi1yjBUM+HHckdbuUKVs896jwOxsOm9zs53FvSNwuHXD9/CQc
jFW217RaSIzU5PVk60WAcFBQeNRE4n6X1nOFO5GYlZm+sruWBMdSoOmxrdHY
5/PLP7qEqpf9aTPZo9HgnmSrbium+tUpa8HjHA1Jbql1PJRpOe+te15FI7K2
/F1UIYnynPiSMrkYHPI7ts2/gMS40VilDjMG+pr0eMUcEicfJ7ReXheLwi/b
bIZSqPd9Pkj3okgseFVkUtgpD/I6Mc7sjUVR6JtB6WSq3r6HiYPnY3G4bynD
MZHELcPxt2x5sWhjMsmvcSRezR/+mKJ7B4q0S+WPb5MQN5gYqY+IQ6Llfi9f
PxIC/sdUbB/GYXrbgQQnXxLceQ8i1pTF4f3Ck1RTHxJz7EZyBoNxuL9T1HKf
F4m2mrLL/cp3cc0+5e3AVRJe8oGLs0N3ERDLYT/vSILJxccndygBnJfGJ21M
SFxn7kfinyREvy9eP6tA9U+uZKiFPRlqcSMV5fIkMm/LR/4TTMbFFtpVr10k
2nV3dJsdScbeiXtb/sqSkGnluywen4xtNcr7R3eQGGgmswv3pWCtxKqWdCES
x2qzOBleqVDJMmaas5PYVMzTv2xZGu5I6+3d2DOB0kF1OqGajkv8Sj7XHSdQ
53Bvy9mxTCQN7zJ+So5jSuIgV57TI2yRTnbTchoH699c7i3iT3BPui5StX0M
SksWpUb5TyH5YjHYUnEM9OA9zCbpAtwybTUaCR+FcMzo35yJZ3CvX1pqev0D
ozMD/V3yhRBJ4FhRwv4DmT8q3nBGFcHenyvNY+d3cAo9Ir9+LYbKjZypRZ0R
RNqXXHwgVopkiaqUS27fMH0o96udfxnMiiuytHyGcUWxoXhj/Qv875zEyu6Y
IQzkN0S0i7yE7NTaxeiIr/jn0Jki5VWBextX6Y+EfIGMGtvixYpK/GIZ/0SL
GsSxdBHb55uqoLl9bcQfv8+4LmS+/bNpNZxPp5/dFPAJsmMnOd7r1aCG67yM
L8cA1nP9ZG+Yq8E7IrnebrwXK6pTCkRTa3Fn78balOmPuLSnonu1Th22cdFN
dHs+IFfL6kHVdB1ShxjHOtrfYWpUgHs4vh4bZR1TYv90osTo2PI4jQZo0ix6
hf69hb9mSFrxcAPs55w778i3Q6RP+0NGSCN0Sy2jYuaYUNkXHMev2ATDgOzl
/k6tMN1K/F3W0QThqJtpkodfY+rN7UHXwGZwCJnpeiw2IHGF2RVDsdc43i90
LXhrHdb3l6SzNryGr7OO3pdfVVjpG2i8360F3DpvdoaklYMlx6xgkPcNfsx+
eKTBVQL35ILbvHVvUDMs9Vwq7hleyYSx8zi3ovKwcvThUzng0XaXDeKkY4PL
IrnyVzoe1HJxqPDQsYxtLEn9Qzrk9+d9n1xPR+PbuB2xVenQlxzJtuSn49Xz
i1OWEekIX2UmoiZGh+rxidt08XSsqNfayKJCx4DMoyPE+YeYPiDC4neBjqwe
FwO5kjT07mzr8Kykwzyxh12YKxlpozy+y6vpSHtWRbB8S4JVjpHE7Vo6fLiZ
dSzVSfgu9t7jQRMdzRVn951zScL0ln6h5jY65G/ypXm1J4JnzZgt3xAdvqpu
4RdSEnB0mG0+fx0Dgwwxz/kjd7E6UytLmZvyx7vOj0Xugm4ZoV/Hy8CTZZ97
3BfiYNTH+bBrEwMt3gsS1iVxsOjccHRehIFp4umr5xJx8K4TjdFSYsCJN7Ob
nesOnt2H2FczBrjsBL7nTcfgt9dvNktLBj7ZtZi0vYuB0ulHo33WDChaOJzi
LotBBRdX0Xs7Bm4GbPg9cj0GTQH9aq3uDHj62I3/nYpGj5WveWEoAwoJLyOt
10Vh1Y6K5IB8Bi7VZ2mW2oVDa7mL38IzBtguc1faUP985MB2K68iBvRe0Uv0
Z2+BJzFc6soLBlRVk7S6wm5BcLXJC9s6Bli7jI7nPQ2D4uhsl/47BlQ2SeVH
LIXifIESj9AiA+cMUjo3vb2BUpNZzjYWJnbsOPSI/94NcK56ufbGciYqycPL
rOxuoMb0IPt3diYalqRNmpaCsH2NxlLxeiYOVY6u7FcIwrCNwbiuFBMyf/jt
dDMC4Czg2OJjzMSYtWqH1zVvNDXubN51mgly7uXwzq3eEHYjGwbPMmHkETXo
3OSFtmb3Gk1zJkyy6LnJm72geNWzjM+BiT/6GXLJ9R6YIUKznvozEWbwS4y2
5xoCQh4G9j5hwjF7rbpagBvWXWfTtsxjgvH2/mkXmhuS7Zx4hwuYML7eGs+/
4Ioinf0ZZDETN1W/Zw56u2KYp72BtZo6z7h/b9SiM3Tus7BLdTAh9vgEf5XK
JXyIvtiW10XFE8vfndHkAJtAeqLiByZWPmQVDDRygJ9NopRqHxOvv+a673C1
xzNpeZ3j35hYtdn+79YSW2wsM4+6+o+J5pGOI9VONsh43HhqboEJt1CNS3tW
20A+WUbYn4WAcaP86/Qsa2j5zhSErSRw/EbzoUufreCjHt2ewkXgf5sedeTa
WGKQqOKrEyUwurmF7fPu83CpFes7KkFApSSxeOaWKeYLw7NaJQlIjwwFLxs8
hw3xp5S6dhKI5Jl4MZFgAk3TidMj+wis2/AyVH7LGeSNCKVw6hKwG5PeYOJv
hLB7IRb9+gRuvhmNzP5qCBvDcfF8AwJu77dVWeoaQrCy8pneaQJrRbd6i4ka
IDz6XFOkFYFe+xUK5T16uKhRH2F6gUBYd7LsIYYuDv+VNpC1IxAodkI7q14H
f63melqdCIi/ylZdU60FO6WkyTWeBFbnSguq/TwCjVGWso/eVDy169oV7Ecg
/MDO54kfAf3npop8Ehp4t1qZTTuYwKqq9MtWLodxpO+d4K1oAtdlDbmHPGjY
FksbPBNL5ZfYmPF6RhXzR7MfSd4lILxpMMch4ACKn11VfJ1MwOLkC/8f+crY
HsynyZZNgOdBmXpvwG4sKvuse/+YgJ7tDetSPUV0j395m51LwJzlZ+NxMQXE
nC46f/Q5AVERgbOBfTvhuHaL6MZiAhNHs8vkG2WgWRs0MlRKwNfrzTHzGiks
SRteDqkkUO3Sm6gyKY6PA+XKJ6sJHLrHl/lNQgylcSKLYnVUPZ96XuVz3Q7n
xZ9hDc0E0L2+v8dzK7SLzujHvSHAv/Zg7t7ALRC3q1lvwyDgnnphMbpgM3rb
o+8v76D27yngOha4Hi9CZ6w7uggkZXxSzBTjQdwBc6mMDwRsr9joruxfB9ef
TRPuPQSuFvhJNdashk6WXPHhfgLJbKf0wiZXQsIk3pP3M4G5DrAed2UFK9ci
bfALgaaLavy7vRZp/fUXVhQOE/i8oftkW8Es7aUHoyXwO+VFXZlrgb9p8Tv3
RhuMERggbixo9Y/T3AZTjUVIAn7bpg1fTg7RdBNWCExOEli4Z/fF26ufJqnr
OFDzh4CCsm/5k8AO2oplnZkxM9R9SNJcWP6rkfap5ICDxRyBP2NHbVcHFdEq
HTJ2yS8Q2G4sv6Mh6A4tQZhjammJwC0jZYek9n+q/weBp2DP
          "]]}, Annotation[#, "Charting`Private`Tag$152595#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0mk4lWsXB3DTwWkglCISNqojyYk08K9MhQZzhmQOFdGElMgmUyRTUoiE
MoUtosyO7L0fU1KmUqYMTxpQGd7n/XBf9/W7/h/ute61pB08jZ25ODg4Jqnz
/1vfebStekxVc684I3HXjfa9PFri5wbEVsMgQfnffIVozX9Tk1KKxWg4fURH
h6ZQoPlZghZ4WV4JfPJF2WP0Gk0D1ttn98V2YH7uRlOPPKFJi5R8tCS1CyO5
CzpHzbs15/UdE+3lNcFQFdZh0j9qfgnurLdP2I+RsMepme9GNC2cZqtixbSh
sN/Ar1Ce1KzXEi+rS9GF+4g2+zLju6ayrEbhD6lDqIwtbVE2n9NM4bLLkcsw
wPUsxZAg7wVN/sGgh+byR9CwtPUYg86Jig/trDrTY7i78r7z5RgenDvmpG+T
YITSun7r4Hd86NsWqhUlZooUjybDQHlBxKWuq5azNkN8lIq/erwQ9AVz975M
MUejp/13M4YIGFNMVVLKEocf6vJymq/DGVvbZ6H2Vkhvn1W41SkOGTaptDHD
GutL2Ir7vCVxK094k5G8LT7+WbYtjC4NHcnMzLFTJ2FrzqKJccviWmPyqhpT
O+zrVTPYE0PDDjXFKMsEe2zSeDOg+k4BaWuOhoSLOYGvKimbQ34brrAS680r
nBCuvzJRMEYZ5vQPXLLWzvDITggYiduOFT+9Al6kuKA3UoBruvRf+HTG+UxI
uYHX2v6bq5k6TCL7GM+r3TCVHxz5ImYXlLTlfwbbuyNVT31fV8dufC4u85LM
OA3RuR2PHL00YHTnvfsReQ8Eq6avmgreD0UD2RzxJg9MuF/JYOw/AH7uMyPD
pzzRvr1n0oFLCyfLF4temZ7DdoHlfi7R2lizOUbpeIIXxH35xdZ16yGQv1gh
TOwCxhXSp8VoR7FF7/bNZ+cuoGj6O8928WNop3uO9TRdwNXy5SX3M4+Bxq34
ROnSRYTkm3ccqzZC40KmUmf7Jcx4js5IiJhixfcEValIX5zmPX5YS94Spdsv
Jhz85As77tCwiXZL2J4zmfXa7YfZ7mJGX6AVCiYFy+tH/cBT1lGUOGwN49Gb
e911/JH7Pb3WtcUWSX1+WqWL19CZKVq9K9AB+yUsM/vNAmDcltb8eswBX6x2
/sWfF4ARhZoTASaO2DDh65i39Trur77IZ7LFCZ5uanIcvdfhS5sOzRhyhrBT
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$152595#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"w/ intuitive pulses\"", 
         StringForm["w/ intuitive pulses"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8434862360653286`*^9, {3.8434862751040745`*^9, 3.843486332913601*^9}, {
   3.84348651863166*^9, 3.843486552111739*^9}, 
   3.843486600539222*^9},ExpressionUUID->"e1f25d5d-ba43-4d86-844e-\
2c280a5a1291"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 
      Rational[1, 4], 0.001}}, Typeset`size$$ = {461.4, {14.1, 22.65}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Tau]$152668$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$152668$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0, 
         Rational[1, 4], 0.001}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{513., {63., 69.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8434862360653286`*^9, {3.8434862751040745`*^9, 3.843486332913601*^9}, {
   3.84348651863166*^9, 3.843486552111739*^9}, 
   3.843486600620098*^9},ExpressionUUID->"78395b74-dde4-436a-92fc-\
b3a4529b7573"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,3,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565899793275*^9},ExpressionUUID->"95c37657-a497-40f5-9931-\
c877bd3ca5e1"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,4,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565899926493*^9},ExpressionUUID->"9eec9274-d669-42e5-ad48-\
9eec5d575e54"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,5,5,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435658999725666`*^9},ExpressionUUID->"8150fd29-88cc-45da-9163-\
8b9e2ea00886"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,5,6,34018505674679954269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659000281*^9},ExpressionUUID->"c0f2ca56-52f0-4367-945c-c395aabefa62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
           "\[CapitalOmega]0"]}]}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0", ",", "tmax", ",", 
        RowBox[{"tmax", "/", "10"}]}], "}"}]}], " ", "]"}], ",", 
    RowBox[{"ImageResolution", "\[Rule]", " ", "400"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8434860506773124`*^9, 3.843486091639744*^9}, {
  3.843486134169012*^9, 3.843486148739348*^9}, {3.843486344671836*^9, 
  3.84348637362665*^9}, {3.8434864421282206`*^9, 3.8434864548027825`*^9}, {
  3.8434866138626623`*^9, 
  3.843486618008461*^9}},ExpressionUUID->"8399ffbe-4a66-4778-9279-\
88334c9266d9"],

Cell[BoxData[
 Graphics3DBox[{{
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[1., 0.], Complex[0., 0.]}}, {{0, 0, 0}, {0., 
        1., 0.}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {Complex[0., 0.], Complex[1., 0.], 0}}, {{0, 0, 0}, {
        0., 1., 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[1., 0.], 0}, {
        Complex[0., 0.], Complex[1., 0.], Complex[0., 0.]}}, {{0., 1., 0}, {
        0., 1., 0.}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[0., 0.]}}, {{0, 0, 0}, {0, 0, 0.}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[0., 0.]}, {
        Complex[0., 0.], Complex[1., 0.], Complex[0., 0.]}}, {{0, 0, 0.}, {0.,
         1., 0.}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.9876883219134552, 0.], 
         Complex[-0.15643444258930875`, 0.]}}, {{0, 0, 0}, {0., 
        0.9876883219134552, -0.15643444258930875`}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.9876883219134552, 0.], 0}}, {{0, 0, 0}, {
        0., 0.9876883219134552, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.9876883219134552, 0.], 0}, {
        Complex[0., 0.], Complex[0.9876883219134552, 0.], 
         Complex[-0.15643444258930875`, 0.]}}, {{0., 0.9876883219134552, 0}, {
        0., 0.9876883219134552, -0.15643444258930875`}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.15643444258930875`, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.15643444258930875`}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.15643444258930875`, 0.]}, {
        Complex[0., 0.], Complex[0.9876883219134552, 0.], 
         Complex[-0.15643444258930875`, 0.]}}, {{
        0, 0, -0.15643444258930875`}, {0., 
        0.9876883219134552, -0.15643444258930875`}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.9510564744239817, 0.], 
         Complex[-0.30901696020085, 0.]}}, {{0, 0, 0}, {0., 
        0.9510564744239817, -0.30901696020085}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.9510564744239817, 0.], 0}}, {{0, 0, 0}, {
        0., 0.9510564744239817, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.9510564744239817, 0.], 0}, {
        Complex[0., 0.], Complex[0.9510564744239817, 0.], 
         Complex[-0.30901696020085, 0.]}}, {{0., 0.9510564744239817, 0}, {0., 
        0.9510564744239817, -0.30901696020085}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.30901696020085, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.30901696020085}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.30901696020085, 0.]}, {
        Complex[0., 0.], Complex[0.9510564744239817, 0.], 
         Complex[-0.30901696020085, 0.]}}, {{0, 0, -0.30901696020085}, {0., 
        0.9510564744239817, -0.30901696020085}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.8910062004251961, 0.], 
         Complex[-0.4539903190562935, 0.]}}, {{0, 0, 0}, {0., 
        0.8910062004251961, -0.4539903190562935}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.8910062004251961, 0.], 0}}, {{0, 0, 0}, {
        0., 0.8910062004251961, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.8910062004251961, 0.], 0}, {
        Complex[0., 0.], Complex[0.8910062004251961, 0.], 
         Complex[-0.4539903190562935, 0.]}}, {{0., 0.8910062004251961, 0}, {
        0., 0.8910062004251961, -0.4539903190562935}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.4539903190562935, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.4539903190562935}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.4539903190562935, 0.]}, {
        Complex[0., 0.], Complex[0.8910062004251961, 0.], 
         Complex[-0.4539903190562935, 0.]}}, {{0, 0, -0.4539903190562935}, {
        0., 0.8910062004251961, -0.4539903190562935}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.8090169717872281, 0.], 
         Complex[-0.5877852047580735, 0.]}}, {{0, 0, 0}, {0., 
        0.8090169717872281, -0.5877852047580735}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.8090169717872281, 0.], 0}}, {{0, 0, 0}, {
        0., 0.8090169717872281, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.8090169717872281, 0.], 0}, {
        Complex[0., 0.], Complex[0.8090169717872281, 0.], 
         Complex[-0.5877852047580735, 0.]}}, {{0., 0.8090169717872281, 0}, {
        0., 0.8090169717872281, -0.5877852047580735}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.5877852047580735, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.5877852047580735}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.5877852047580735, 0.]}, {
        Complex[0., 0.], Complex[0.8090169717872281, 0.], 
         Complex[-0.5877852047580735, 0.]}}, {{0, 0, -0.5877852047580735}, {
        0., 0.8090169717872281, -0.5877852047580735}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.7071065084539642, 0.], 
         Complex[-0.7071064612616781, 0.]}}, {{0, 0, 0}, {0., 
        0.7071065084539642, -0.7071064612616781}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.7071065084539642, 0.], 0}}, {{0, 0, 0}, {
        0., 0.7071065084539642, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.7071065084539642, 0.], 0}, {
        Complex[0., 0.], Complex[0.7071065084539642, 0.], 
         Complex[-0.7071064612616781, 0.]}}, {{0., 0.7071065084539642, 0}, {
        0., 0.7071065084539642, -0.7071064612616781}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.7071064612616781, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.7071064612616781}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.7071064612616781, 0.]}, {
        Complex[0., 0.], Complex[0.7071065084539642, 0.], 
         Complex[-0.7071064612616781, 0.]}}, {{0, 0, -0.7071064612616781}, {
        0., 0.7071065084539642, -0.7071064612616781}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.5877852220708565, 0.], 
         Complex[-0.8090168934781288, 0.]}}, {{0, 0, 0}, {0., 
        0.5877852220708565, -0.8090168934781288}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.5877852220708565, 0.], 0}}, {{0, 0, 0}, {
        0., 0.5877852220708565, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.5877852220708565, 0.], 0}, {
        Complex[0., 0.], Complex[0.5877852220708565, 0.], 
         Complex[-0.8090168934781288, 0.]}}, {{0., 0.5877852220708565, 0}, {
        0., 0.5877852220708565, -0.8090168934781288}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.8090168934781288, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.8090168934781288}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.8090168934781288, 0.]}, {
        Complex[0., 0.], Complex[0.5877852220708565, 0.], 
         Complex[-0.8090168934781288, 0.]}}, {{0, 0, -0.8090168934781288}, {
        0., 0.5877852220708565, -0.8090168934781288}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.45399040895592485`, 0.], 
         Complex[-0.8910062431759065, 0.]}}, {{0, 0, 0}, {0., 
        0.45399040895592485`, -0.8910062431759065}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.45399040895592485`, 0.], 0}}, {{0, 0, 0}, {
        0., 0.45399040895592485`, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.45399040895592485`, 0.], 0}, {
        Complex[0., 0.], Complex[0.45399040895592485`, 0.], 
         Complex[-0.8910062431759065, 0.]}}, {{0., 0.45399040895592485`, 0}, {
        0., 0.45399040895592485`, -0.8910062431759065}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.8910062431759065, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.8910062431759065}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.8910062431759065, 0.]}, {
        Complex[0., 0.], Complex[0.45399040895592485`, 0.], 
         Complex[-0.8910062431759065, 0.]}}, {{0, 0, -0.8910062431759065}, {
        0., 0.45399040895592485`, -0.8910062431759065}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.30901682865293695`, 0.], 
         Complex[-0.9510558765759561, 0.]}}, {{0, 0, 0}, {0., 
        0.30901682865293695`, -0.9510558765759561}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.30901682865293695`, 0.], 0}}, {{0, 0, 0}, {
        0., 0.30901682865293695`, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.30901682865293695`, 0.], 0}, {
        Complex[0., 0.], Complex[0.30901682865293695`, 0.], 
         Complex[-0.9510558765759561, 0.]}}, {{0., 0.30901682865293695`, 0}, {
        0., 0.30901682865293695`, -0.9510558765759561}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.9510558765759561, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.9510558765759561}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.9510558765759561, 0.]}, {
        Complex[0., 0.], Complex[0.30901682865293695`, 0.], 
         Complex[-0.9510558765759561, 0.]}}, {{0, 0, -0.9510558765759561}, {
        0., 0.30901682865293695`, -0.9510558765759561}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.15643446688624224`, 0.], 
         Complex[-0.9876881027526876, 0.]}}, {{0, 0, 0}, {0., 
        0.15643446688624224`, -0.9876881027526876}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.15643446688624224`, 0.], 0}}, {{0, 0, 0}, {
        0., 0.15643446688624224`, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.15643446688624224`, 0.], 0}, {
        Complex[0., 0.], Complex[0.15643446688624224`, 0.], 
         Complex[-0.9876881027526876, 0.]}}, {{0., 0.15643446688624224`, 0}, {
        0., 0.15643446688624224`, -0.9876881027526876}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.9876881027526876, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.9876881027526876}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.9876881027526876, 0.]}, {
        Complex[0., 0.], Complex[0.15643446688624224`, 0.], 
         Complex[-0.9876881027526876, 0.]}}, {{0, 0, -0.9876881027526876}, {
        0., 0.15643446688624224`, -0.9876881027526876}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 
         Complex[-0.9999999766997332, 0.]}}, {{0, 0, 0}, {0., 
        4.653684309241265*^-8, -0.9999999766997332}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 0}}, {{0, 0, 
        0}, {0., 4.653684309241265*^-8, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 0}, {
        Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 
         Complex[-0.9999999766997332, 0.]}}, {{
        0., 4.653684309241265*^-8, 0}, {0., 
        4.653684309241265*^-8, -0.9999999766997332}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.9999999766997332, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.9999999766997332}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.9999999766997332, 0.]}, {
        Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 
         Complex[-0.9999999766997332, 0.]}}, {{0, 0, -0.9999999766997332}, {
        0., 4.653684309241265*^-8, -0.9999999766997332}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 0, 1.3}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {1.3, 0, 0}], Text3DBox[
     StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->20], {0, 1.3, 0}]}},
  ImageResolution -> 400,
  Axes->True,
  AxesOrigin->{0, 0, 0},
  Boxed->False,
  ImageSize->Medium,
  ViewPoint->{1.8611820147249178`, -2.3880002435406786`, 1.5111109637992022`},
  ViewVertical->{0.10916012446320827`, -0.1287273462132369, 
   0.9856537615025239}]], "Output",
 CellChangeTimes->{{3.843486131491096*^9, 3.843486149078062*^9}, {
   3.843486346843299*^9, 3.843486377021371*^9}, {3.8434864492445245`*^9, 
   3.8434864550775633`*^9}, 3.843486562688631*^9, {3.8434866051734476`*^9, 
   3.843486618744627*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvX94W9WV732ujiQnIQlJyC9hSEhwJvBSQJQ7KbdFhIYAIdBQMhhDEoip
RRrsgOrU+eWkVppRoXEIIqCSQdzG0yfq0IqZalzcybhlIqYjOqNxZzS9VftY
02Fc+jptnRIEwiRxcHve9V1r73OObId2nvf+OXmedaxfsaW9Pvu7v3vtfY4+
9XDb5kcee7jt0aaHL7t968Of2/xo0+cvuy2ylR4y/4dh/I/NFK2XGV66bRnG
uMOjhvHft//79n/f/u/b/39vP89H00zX109N1C9HGCYfvbNebLqtLrGBoolj
Ch0+ZZj00Kfw8KyD9bcZHnppvfwH/Ar+ZX8jv/kZ+c2TD9bfMDXRvByBFzbT
y+ccenhVMLHxVorVhhlMblw9PZgM3+2hW3eb9ODd9GBi3Wq8jH+/V/4K/Sr5
C/iXkR9P89Fbe/ihFXiPV7+w6Q76Vas9+H341eH6YBcCfxbHi+iwzsRj/KRR
Q3+znv4kx9XPraunj1ZfRx+N/9i35I98mY+TJh9srZdG4fhU3Ysc9fRH75b3
T7/WY/+tdcFUhIPu0dFPh43TgqnmjYaXnt3Ir1BBD4TX4Q2tMybhjSx9/jPy
RiQ+teCZ+rvQBmjjb8h7+hIf/XhPaFQE/a81+PCqLcP8NuTD448YeGvrPPZ7
uYAO4Rp6Q2F6Q3QTj+mg/xjZiNfzAZ8gSe+U3h+/R08wQUevNNu6u4PxdXfP
OVRfr2CwQcC/o/LjT/now7tFy0mLNd/NbeWVlNBfRUO10d9vCyPoiXRbeDId
mnErQocI32qm16Xp/dJdBL0dOtbgI+AD0xNdzYiN/IE3evGWPXivhrk0vr6+
9mD9ne63FuVjjfSA5voFL2y6C0ld+r8319NbFHToF0Wctxjht4c3hz/dFvYH
0+309zPtkSnBTFuEXkI3cYvveXDE6/AEvfnqt60+ijS/SgTedtiUxk+GNxIS
aPjExnVXP9e4TvjcUE9I1GskuuST7Kn+JIg5hx6rBw7cEZKaAW6mdSrX+BD8
R1Pqkxg+OkbkM0hYmzZtkk9lmLhNt9oQco+fofttbfwKvzxznjbwT/ChPSp1
qWadurCkDj1iI1K3kd4TYIuvo6ivB2zcP4/IB9+tpaaV+sDmNUgb/QI6Msac
MocqUwHVTm8oE41Q3qJt+mNF2xF483T0qY/arh/nD+u3X9HmNANe5cFNL5oB
9yMR+ogc/GEjDHMzvQE78K6aAT/h0KU/eTiMlIfpryQ3bsQH57QfXLeOJKm+
NnZn/f+WT7xTej9SveCZTehT+OQK2Mg68Erg08dFozd78GnxPqIRfGQEUkKf
23fflz/32MHPNzfriOx5vIXeFH/Gqjbx6M8da5fHY1E8RkdT33deh+aJciv6
0DReNI2pm4aYSBMrukOgaVL0mN00kWa8/WZjKjWJ0zRJRJhiY1jaZR11B7TL
hg00EjEOL0jbbHfaxu4C9JPbJtksbaOEQjMB+Jt192xv5uaiRosin9E2Tjlu
2Z81GpV7/Pl9zueXYE5U29AxZr8evyjqswGKClzt7TZAbW14D3yI4D3hEIlw
c7AoAOow6wEaAbGO+sQ69ImlcdEDNMRhaYhtogeqW9SLhFO/7+KgAUh9cu57
aHn1yU0cmXB8iDZJuv5wgCMWxROxMennj02frjOmm6QzJhGL6a7D/6kzxrek
+ezG8egmjbZXtwuDA475IO2CzhOhP9ZFfUwoaaaP18zNo3uQULKRGmjj1Qfr
19U9IY3zFWmcrXyc4vQgjJ+b16tG2qgbSCFCzU+tY9rN0yb9HyqBxuE2mcQf
D5+U3nFnp6eqJTp1aMXs7NRwyOPccp0+bhifq2Fi8iJpeGmgdgccj91Mbfyu
KABuextaibo396wuRCSiG4ulsVlTpEnihlpHFK3XDfWcNFSrOCxQpLrSOoQH
rUStzOOttJENUQraOr6p0ErtPoVPZ9SPBvLoloh3SkvFOw27+eKm3Zr4z3Fq
qHj8cOuWLQg/P+xXhHU6we0Z45Y8b5N5uaWoeejtUUPZ0dXWZqjuhjaaTG3U
TG3UrHobwxTsrF9HI9DDevQ1DklDRVwe5yC5wudapLuhnTzc2ai17BbiVuKB
lrOVjrbpQQX8x/h9xji1ne1oLQQaoTNag49Xg+bAIY62S+AQ96BZPHwLjefT
tzrNYA83cg81VU+Mg349HX3BnmjUG+yR0UuGMNXTgI8X7UGt0cboJKFEaBW/
ahFpFbRIvH7jgi/XP6ga4jFpCLTNrINN0q0Sze6G8E3UEDxAtcm45NXNoD5+
Oz40Y4OcxoFNvJNuJcBJgtsAh0ScXpdIMCyJI1u2fhaB23hpwh/sQYP0AK6e
zjg3SCc1A4fBT3jRKn60iqllmrBJc7QZulVSkXGtEqGZhOYkvjFMQ3YjDdkb
0CrsVGSeYmxxGFn0bLheNwsFW562ZmZSmkRHOqoGI2ka0900oKSznbHgThRF
4yCgIXHuNYlOtIsONBdUhm8l4/R8MuHjNsMxGfpSZtt/3vHVVf13vnAn7tOj
PQl6QU88geZKJNCECPrNdPRWt5lIuM+W8LSKlG47dK2IMYVUKII2oxaLOK22
LhzsJKn+cn0jBnTQ85Q0WrNMv7RUc8dKSKMFk8QRWOqCOqfYfsLlUGvZwZ0q
1jZRf/KjqXxadJyW4naLS7uYaCc0EwL/IwmaktQ04dv/dbl1Q/rjEKm/bXii
IdhDj1JrJJImbtpNF0crdsaFNv7Jt7kLdnI/RNuS0lMTIvCEbkzT3Zgs7e1o
yXZyR6xXtqzrBm1mSY/rBq3fuOhA/QYgeEAa81GHwKVx7pgbhcA2TSBZI4c+
Ji+i8Yu1iYg7boc7ZRymRnVKbkduzbhqOG7NZJxbDje7qCW7kjo83JamauCk
tGywpytp+MO3/0jal+Ls/3rpE2jnI1vaPkvNk+zyo4k9aGIckjadCc0qOj21
tJc7N9q3U7Uxa18U71YOUYxS7Sa36gWqVVXfRqsqROOIjUA0DEQv/DJ16k5p
0s3isy788ibVpOPYRDPyoJhSbYnpQKxNNSWH7ReBpvRjdO54zJwAT25eB0UP
GtUnrUktRx821eW04Qpqv0+g/SoXlGdYN7z8icNLfvFH9JoubkMcEklQmzCZ
VdPFqlJFPMYqGdOwivljlSFm0zpomE23tXNfb4fDbsMISo2Z1HhuRCM260a0
1VEKLMYmp6ZBA0cTdfRGacw2bkwPt6Rf0IxK2J091m7qDi5ccgdnOFkZY8o/
qKb02e2YsPs2Q2jqBmUoU2C0C2Fwi/ExiVtoY9J8OnrkifDtP16B1kVLG57u
2qEFhhna/8oueTG9gtq4KwVlUL8LAGvJcKMMZU3wCHXexudeGHPbZ1AFf4AU
pDjaq5LQ3ObogysJ++5unBW9rd6spyQ8IUl4xJk+2QKRUDQnYb+7eKh2JcFw
kG4fg7TyLDE9LNnDtt3+uttTe9ut7iiEPOZBIvDJKR3U4Nz0XtX06RQdUim+
68VdY0r4O5tXWhue/ASyAeYpFwtD+499Aa9DDigrX8B9/MIU+gk6S7KLlRva
E09qHZHoTEingFQrPfEquxkTh67bv8bV/hJdbe3aRLHvbkPtDKO8ykAwdvfG
OV9a9TBnQGp6Rlgk2qUnYZ0BEWeTW92nwXfaXRkCMUpaPRKsyTKm2bAj/Kpt
FZtdum1VU6a4ZbsmcaNSA6TTuMX3uN2NaQ0/Wbu2/+0Zc63U8k9Ye5s+YQV+
MdO64J2Z1BVWSmOnU2j8/kVvLehY+R83hZ4+9kX831Qarc6/NJlC0+tOkezi
kZPVSDTc9humEnOeCvRor8+NHxsPP0VbFMNZO7kNUSAJx3Go5qcB8k8/FUbz
x6T1m+zW36QEyGZfWt+jWj/lan2VAVfrsweld5eIKeXu1J4iKVLtlhIRFhZt
bvV0itubeSZ9zqQNzkL4Zytut/7f+TO5rZ/c8InUXzQuOfxHv7oitP/VL3iC
vZQSL5rbmvHObOuS8iXdH/3lNd5gbyptBnu5tXspJXSLAn+PjnSghvdJChKI
pIoE8sQyJJY57uOm98v0SrGfRlAK0u0xjG/wU9TsinkJ1fagHoUeUB9fx02/
IHrXJtXknzlfk7erJjdMpTVocVjg9ERK3xnTSi8NLsMk+1xudo/Nu8fW8pRw
mkrRe9dtX4O2p1uZjIm2p5aVQ4Ys3xsr77D+duVM63+9/Amr/ulP9J2afTGa
kjLkpwSkw3f89Pb+mW/Pq0xPbazMvOGHDevW/tiLJzzIg05BKs33vJwW+n/U
CSgPTiQQSfE13rF6hGyItTG4O7gz4kFK0BEoKSkd7aojoFqChEhSEtIZqN0o
J4Z59ZfXbVoQrd/EE9p9kpZGZzgm3/3g2N4gI0FNsEtlhiOm+0TU8TN8dMZf
jz1t49SM8X7sB712kjxq0BSFT5sqNemM105SDVJD7duTMfwdgx9dZueH7OJv
6g+uCD392pckfTW4eTzw1qWcoqmbk9bUi0+G77j9Z5xAH+UpgwwhWV1pzo4X
CTGRDeSOEtFLSehlg9nbmfCpLNBkmzOQlj4BOUKHiCIVXe0xan3VKSLtKJu0
Y65oa1FEDQXNZNTD7Ia+KM2/UWylGog/E4xjGGAnFEHPULayK8qChE7havzq
hu90GZ8qa57g5lbzGVMNumPtjtNFeKQ17Tz4kQemP0PRgwDTnIxMDzLSI2mZ
3ndqzsWcFkoJpeZGa+q7s5CHhnU/bsArQk/nvtS94K3FlanvzramVi46cWH2
9tWPv3iE08Z54a6TsbuOThN6LKUJB0JFxKyXSKKEuQIfsxdFkl49cbXnYZkY
KOQRPY0MRmO680DRYihCq1E8qTtPc7tkj+xU3Mke+dlNyN5eSd5DTg1k0YHw
BpU8GUU8LGw+mWbpjsOdh2d4qjzGgjbO/MsUanzKkCzuMJwx7ivIVsZjdxgT
zcgNig7T40d6jEmhf9q/n4bwedbf3jqLs3PlT2ZZH/vHWchE6/KBT0oCfXhx
313Haumpi44HTl2GjkRjEv0yL2fH686O3YU8etxxBA6ZSCBV0DfqUK7ETOHE
cF/i6FQZ6aTG6VRSFkN/gvCA7aTKSqIZ7UY5ga3ijESQkaX76jfTNG2TWuEz
HqxKSdhOSUKnBJ2J+5ESMjsfUndz6tnuSZnTlbz29IElrUvlJSXGn7tSGnlB
iAuyM8R4p6kB0z0INFK6ZzLSRA3b02t3pV6jJvzG7Xdb702dZQ1eLAn76ZV8
u681cTH9v2xvL40o2Z5eip6+t+fWWidqL+oufbQO9006IFd0M5jN2OFRfyjN
ia7OI9JomB+aRxZGk1XRh0Q6fYsizXNISiRNQlIxlcr2TpFF7llRymNU53Ki
PKJncR47JI8bXBWM/bYuurqW5NGv+xQHBqR0J0JWIKT0o8cklA91Ln26e3Vx
9+oSBVQJlGTaaVRSmJLOhUMP5LCH2iHTy1rYg6zpQMv3cvtnkShExy//58c9
yKfh5Wwis+9NvQiZMzmZ3tZPvnlL5fUb51jvTeOHJcfe0LO5/d0LT9U1PPiT
dUioVzKZTeMWZzJLhr037cokK/h5MmmYopU8xCVZL2kU7lV2g5LXo/qkLrOj
b+qEqmRyl4xiBwM6pfIYSGSnncgWJPILksf17v645bz9sWZMHtt1HjmNdolE
1ezcxTrui9wVWRntbsh5yyD4nowtPXbnQ0/o8ao+QWmkPGR6VZfKoov1ZE1O
pKkSycF9L2t4KUUXqyxy/0RyLzImVSrT5jT8bN2DwWy2t+HBnz1YmVaZY93w
T7Ot2756Xd9dV35Lsuo7fMXJq61p783un12uRXaRZaRS5ZcagxKM/DqRQsio
eB7RhYnsTcgxoR2M6C5yO0n5l7idV625XZzbqJPWKKc2rtLK/XNjZOn++s00
8rXK9gNjnWNbxsos25YkF4O7uGDQFW13MoshLy0e3i4YsFvkVQxVLdDJFY1N
suh26Smk2zDCwOncZnR+Dd1F072m3UUpfU4gvb1+zjTSm6O05DixJh/nUw4b
K5Wps/vLM+f3H791Pnfa3tsuOvGLRfPQQ8M/v+seynF29de/tu3EM5+bb11y
YrY17cTiEzMav7G69f+0Is2hZ3/4dPfC8pLKtPfmWtOGZ9NtkufeHpXmHhs5
kWeDezUONFZQuiEglPBslx0T9WqTe/Uk7YCccKoa1M7oI7G4bX502mPof3Cv
LM2cdk49TRbCUGfp0JGr99W3zIrWN3Hxot2dfj/qdwQK0t8s6efUR0xkHla1
3WNrMdeNx+R5zIQAhcbqPHNnRhlBRlFO85iOzKMoDhhAnY4sieZ7Wd2HkWhK
OUuzFzmXdM9AuiG69LMpfNfP7+F0h794Y/eD36qrvB6iLv1gYzCXzYV/cde9
1vC02dbt8eXW9PiuvsDc0/Q44ZTLsuJne1OXv3VF/5xKbd/cdxdwb+dUe/Ce
PLZ2O1nGgT4aZRf/nYagLCeXE+zl3HrH5pYLJvZ0RCINf0uJ5XpFTCl1DNlF
XjHcRqjbxdWY28aZja2jqA9PjdY366w+IJ269uBnP3v1wZZNKqt2hw4mo9Kp
sTgRw0pvqjPq1mlTr0bpcTbhKLSHi6CmSqyMtU4vVoItnVh1Z+nGSCyC78lR
d+Neg9vV1D06CwnlnOa8wVxvjtLSm6dPnMvmkT0d4bt/fo/BK/jGVOvjfxmq
TK/MbWj8WVMwl8t1lxcusYanU4anv2ZNn36uctP0vob/bOTn8H+RacIp9PwP
n21o7Cco2IjRkZ7gQT9HpivnNl1ZTJSybJ4xVHOfljCRcHqOu3E2oSsCKuVc
GJOSQIZnopRvFAOR7WhcmeVOnr3AKcdQAWuLUbpEvcktKwVHtjnjcMpQ8F2S
7Pv5OJ3LMe5kJ5xkoxcHu2JavaPufHvd3hh5Tqhppki2Xfb2qKIrPqokundM
ornzsjPlzmun19V5MznVeXNse3P0WI7uU451invzfuTZmKcyfC/y2z+nXIuf
3YvKS0LP/yiJTFbemz6XM5yffrP13elr8DP8i7vvRYYbGv+zqS/w7sKOG359
I73+2YZvP7i/+6uLdjU0Pvif3MVBFPGW60WX58GDsk755sCzPDfO8eCtQ8m5
b6yco6vjs6nZbFf1bDauAODEJ/R8iU12nCcv8THp91WlPy7pp+c6w5jsUGe3
J0qyq8xocBvsyGbOf9xlzOCthQFn9E6Jv2ZRtydH8Q8DoEsAMO2ezl0bE0lX
xnt11tFJuC9ncqbqyz15NDVnXLLNGffykR7LFlT3Vh3dMCn59yHplMgFSEmO
ngn96PnkgZPXfYwT/8tLKC6dQxIwPH2OMdlJ/ptNlQuH51nT359z4LqTHztw
3d4ua/qFH/QFAmcM7vdeO/Hc201Oupe7O1IuaacxKosPyAM2pZgz7GF/NpmN
d48rMp1JO73pTtZxLKvRcbpr/oTSUmx8etGzKWKi5Ugv3NgOd3Yn1x1sbpqw
Zycpq8hsF89+U1xLSiklT+u9Ou7uzVWkHlS1e8RpS3+GKUG9QeVUbDVrtqQV
o146W4OMKquVk+C+k0dW8+i+BU5mXiVU7hXMYD5b8ATzObofzm6TtL56N9Ka
R1rDJ+6+z3p/+hyOR47Msb63Cml9/8I5hjd84p77gvl8niLXd3Floce68P25
NP165JG7rQsvHEVW6beToOez9PZyMPXuzozgnkxvBMN0rkuGaS9yaou2qkGh
gqvXpzNxndKE9FbJp3RZsdqwu5RN7M2ifMbtfLarfLYhnwu+XP+4yqXss76A
d0Z8+XGodYv01HbktE3l1M4nZ9ODbGKlSvI5fgqcUPn0qKWYpFq65Ilvr4ST
XI/S6VRVh03zfCithFpkWvKsjnnkGCHZRrcpcMrRlQoelWlKMkURP+UeHXJF
nXfkGHmvBBYa8tiMjpMfvxlZtvqvmmO1PTPH+tWl8rPrkTnh7A7kvYDcNzS9
uenAvuQNJ7YmAtZfXSqJv/jiM/g1yHwuy+kn5SASgvleJ3K9Iu4TUGGCCo+i
gouUSsxZ0D0OH173oA46YH6hAjSeU04oYgkez1MIJehjCXFmY6DDJuTqfeta
amP1n5VdsMa9fJwNQuZ86bGHg522JXcT4qYkao/nKUVIejwhYwFRK3mojHS5
5qFV068UxkE6AgyY33TWr3DIuXDwVOFQYA9VxC0nGIqCF2QgSwUfoDCmh37y
/JEDb113A4/r7yy6Ao9SrovH3720rq9y8cL+9+Zewmz888fnWB/v+qR16fc+
2XHo0AoPoKAGJSzwMnrJXOt7FxISMxgJQqUplPzR84wG/iiNPQQCJTFPM38C
QYfXZoCVAZ+Lx/OUPZ5L+k1l5VjmOTjpkAS4dyfnrAoYwzvPl3OlCEv3rWf/
ts2dc/8C8m+Ub3vs1vn2INkeZBqTAtu7depcy5QbKaVcU5oRnOCkHrAxdukM
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
qWWpp1fsuJ/Pzxhw5FrtFRai4b5zeW1ZOIbYtBDjWHTMlyglJXCuNJu1Gkkc
MHxu5rVic6qH6NeODAxpy8Jh8USU0KfnLPEr9lZOeBaed3rYnOAxH3hn3Em3
FfDAXU8lATusCW6fyD64EH4D2FmBZAegh13hqaZRA7cCCeb4bO0rbugNoZ6t
EncKREcycGDjmyukomT4QLr8n6aKph0ddZBGMiJ+S/e1ox+B5elbMnp50Cq5
aUenL+YV7Bwe0G54Q6Ujr3R8beXhvvjl8bM7bt6pSkxgvPvQFc+Ev37vC3As
h7dv3So7/YG7efxAXbwhte5Fzjwua5vGdy9LmdtxK0l90RdeteQTxW0BZxFP
6stqeOTUxU7ZhELi3d7cPhVe/TNuiC8iPYfvjgjEziYSpxg4nmJWZFx3Ri/N
uL6dRX9ThHgPLozI5YwLDsYcJb40qAvl0sQos/dgy0G6nCt4mV7TTa7hsbll
i2GKTtNxN3hlZj1irwlUL3Nqaj9te+qRMbVrr63MXiZ1WjWpS2xS9e3WN/Zs
OL78rSsxLbRWPvxUx/41OUMwDcBe6Dkh5Lph717GNJTLnZNeYg0T1a/Sc3dp
XPt/tnJx5ap32G1D8sVO795G72vwQ7DF5yvSBy027H1ny4Fbz9zoYW694BbY
6qAWwXIkwXosnHngz7sTVx36zc7bFKw+cAt+O7pu/kroh8+/jBIg7+fpMbx9
By57qvLkxU91P33FM6Fj+1/iZUmClbfAur5XVq3R8L4p7J7iqaUWahFrj95A
JVodTMTsRRrDzS5xu4DEWrP7ST5OstdgzsMvioudZDCS/MV24/HtqcLXLcBp
Vc7mrghToagVY2E62PrGKfAgn2NfLb9DOvg6pRrgooaYAS7xtGeAJGQAJNs0
Q3AGeVa5W+nxbuivaYtuWfsOBmDYC5bZavhAMGutnwk2w4f6pby3I1VrsHM1
LgSN7jqH9sZwEKiD6OmhtgwHrFtvxX3mGgI7okog/Et+uLi+/6OLT5E7+drx
K60roZwitJMmshShXObNcEtjOXyoMe8JW43rybZat608YN10o9ZayGzojaOv
hr+tEN3lILrzZp7pdbc3boevQKHPkErfJDr2ONW+bE/q2aufaf3qrQnygqRK
WFPM83Y/+SIkXdWFePntXSKstVpvndpfSkutukBckpGVvX+d1f6ibmfzzmpi
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\
\>"],ExpressionUUID->"36e1fe7d-3f04-4d65-a271-2bf4cfb1d103"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Export", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8434863782698994`*^9, 
  3.8434864366086903`*^9}},ExpressionUUID->"285612c9-cff3-4420-b5c5-\
aad719b1f373"]
}, Open  ]],

Cell[CellGroupData[{

Cell["algebra", "Chapter",
 CellChangeTimes->{{3.843390046355116*^9, 
  3.8433900592228065`*^9}},ExpressionUUID->"9581d32b-6242-4aed-8bf2-\
7c9ae16a8cd1"],

Cell[TextData[{
 "Pulse area. just ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[CapitalOmega]", "1"], "2"], "+", 
     SuperscriptBox[
      SubscriptBox["\[CapitalOmega]", "2"], "2"]}]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2a98e731-e7c5-458e-b956-99974f167e25"],
 ", integrated over +- infinity?  "
}], "Text",
 CellChangeTimes->{{3.8432555370096493`*^9, 
  3.8432556646192317`*^9}},ExpressionUUID->"3cfdfb56-c1bd-4767-9fdb-\
aa4334317ee7"],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["w", "2"]}]], "]"}], 
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "+", 
         RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["w", "2"]}]], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843255412527032*^9, 
  3.8432554402660065`*^9}},ExpressionUUID->"b43e9454-f889-4f90-b60a-\
bf8d731fb34b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["w", "2"]}]], "]"}], 
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "+", 
         RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["w", "2"]}]], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.84325545095228*^9, 
  3.8432554522549224`*^9}},ExpressionUUID->"ee50a448-cbb6-4f6f-bd2f-\
5b335f8e1db5"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["t", "2"]}], "+", 
     SuperscriptBox["\[Mu]", "2"]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["w", "2"]}]]}]]], "Output",
 CellChangeTimes->{
  3.8432554526377773`*^9},ExpressionUUID->"45000358-d25c-4aea-89fe-\
d827e816939b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"-", 
     SuperscriptBox["\[Mu]", "2"]}], 
    RowBox[{"4", 
     SuperscriptBox["w", "2"]}]]], 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["t", "2"], 
     SuperscriptBox["w", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.843255482876628*^9, 
  3.843255525097032*^9}},ExpressionUUID->"ccf8c8ac-ee60-4050-8bcc-\
38725c007cb2"],

Cell["Calculate the derivative of R in the torque picture", "Text",
 CellChangeTimes->{{3.843390067901001*^9, 
  3.843390092076653*^9}},ExpressionUUID->"b8903e8a-f503-4e16-8665-\
abfb960c92e2"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Phi]", ",", "\[Theta]", ",", "R", ",", "\[CapitalGamma]", ",", 
   "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", ",", 
   "\[CapitalDelta]2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"{", 
    RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]", "=", 
   RowBox[{"{", 
    RowBox[{"\[CapitalOmega]2", ",", "0", ",", 
     RowBox[{"-", "\[CapitalOmega]1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cross", "[", 
  RowBox[{"\[CapitalGamma]", ",", "R"}], "]"}]}], "Input",
 CellChangeTimes->{{3.843390108421424*^9, 3.8433901366629267`*^9}, {
   3.8433901744502296`*^9, 3.8433902623121557`*^9}, {3.8433910273968744`*^9, 
   3.8433910366938095`*^9}, {3.8434116075922365`*^9, 3.843411608658715*^9}, {
   3.8434116504081593`*^9, 3.8434116600511904`*^9}, 3.8434117016321754`*^9, {
   3.8435029428108616`*^9, 
   3.8435029488711367`*^9}},ExpressionUUID->"5881b5b3-5689-4b81-af04-\
5ccfbaee8c0d"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8435030005244203`*^9, 
  3.8435030025050497`*^9}},ExpressionUUID->"c4819483-e8cf-4868-ac5b-\
cd3f7465c07f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"c2", " ", "\[CapitalOmega]1"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "c1"}], " ", "\[CapitalOmega]1"}], "-", 
    RowBox[{"c3", " ", "\[CapitalOmega]2"}]}], ",", 
   RowBox[{"c2", " ", "\[CapitalOmega]2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8434975987210183`*^9, 
  3.8435029496349926`*^9},ExpressionUUID->"bd273fa8-b482-44c8-b349-\
03c936220ba1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H", "=", 
  RowBox[{"(", GridBox[{
     {"0", 
      RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
     {
      RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1", 
      RowBox[{"\[CapitalOmega]2", "/", "2"}]},
     {"0", 
      RowBox[{"\[CapitalOmega]2", "/", "2"}], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.843497581990771*^9, 3.8434975963712163`*^9}, {
  3.843502936455367*^9, 
  3.843502961685624*^9}},ExpressionUUID->"38080789-2852-4598-b56c-\
fe7e77b84d4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[CapitalOmega]1", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[CapitalOmega]1", "2"], ",", "\[CapitalDelta]1", ",", 
     FractionBox["\[CapitalOmega]2", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[CapitalOmega]2", "2"], ",", 
     RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.843503007345214*^9, 
  3.843503223953579*^9},ExpressionUUID->"967593c3-957c-462c-ab1f-\
636f73eed639"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[CapitalOmega]2", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[CapitalDelta]1", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[CapitalDelta]2", "\[Element]", "Reals"}]}], ",", 
    RowBox[{"Eigensystem", "[", "H", "]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.843497601730979*^9, 3.843497607386834*^9}, {
  3.843503104406966*^9, 3.8435031854729624`*^9}, {3.843503262859121*^9, 
  3.8435032765053697`*^9}},ExpressionUUID->"11b9b13d-8f53-4441-bba8-\
0df65829cb21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
             RowBox[{"4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
             "-", 
             SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
             SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
             RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
             RowBox[{"4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
             "-", 
             SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
             SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
             RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
             RowBox[{"4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
             "-", 
             SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
             SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
             RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[CapitalOmega]1", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
            RowBox[{"Root", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                   RowBox[{
                   "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                   "-", 
                   SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                   SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                 "#1"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                   RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
                SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]]}], 
          ")"}]}], "\[CapitalOmega]2"], ",", 
       RowBox[{
        FractionBox["1", "\[CapitalOmega]2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
         ")"}]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[CapitalOmega]1", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
            RowBox[{"Root", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                   RowBox[{
                   "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                   "-", 
                   SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                   SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                 "#1"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                   RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
                SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]]}], 
          ")"}]}], "\[CapitalOmega]2"], ",", 
       RowBox[{
        FractionBox["1", "\[CapitalOmega]2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
         ")"}]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[CapitalOmega]1", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
            RowBox[{"Root", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                   RowBox[{
                   "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                   "-", 
                   SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                   SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                 "#1"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                   RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
                SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]]}], 
          ")"}]}], "\[CapitalOmega]2"], ",", 
       RowBox[{
        FractionBox["1", "\[CapitalOmega]2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
         ")"}]}], ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8434976079420123`*^9, 3.8434994173626647`*^9, {3.8435029640084934`*^9, 
   3.843503008286956*^9}, {3.843503159534633*^9, 3.8435031860866957`*^9}, {
   3.8435032208778954`*^9, 3.8435032323135953`*^9}, 
   3.843503276887766*^9},ExpressionUUID->"8ac3cc38-3875-4274-a811-\
67a0ba7c7efb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"#", "/", 
      SqrtBox[
       RowBox[{"#", ".", "#"}]]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[CapitalOmega]2", "\[Element]", "Reals"}]}], "}"}]}]}], 
    "]"}], "&"}], "/@", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "H", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8434994645759597`*^9, 3.8434994705905333`*^9}, {
  3.8434995172067738`*^9, 
  3.8434996154382763`*^9}},ExpressionUUID->"ed3c84ee-8e8d-4325-9819-\
9430856ceb55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], "+", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["\[CapitalOmega]2", "2"]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                ")"}]}], "+", 
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
             ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                  ")"}]}], "+", 
                RowBox[{"Root", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
               ")"}], "2"]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}], 
              "2"]}], ")"}]}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], "+", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["\[CapitalOmega]2", "2"]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                ")"}]}], "+", 
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
             ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                  ")"}]}], "+", 
                RowBox[{"Root", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
               ")"}], "2"]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}], 
              "2"]}], ")"}]}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], "+", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["\[CapitalOmega]2", "2"]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                ")"}]}], "+", 
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
             ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                  ")"}]}], "+", 
                RowBox[{"Root", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
               ")"}], "2"]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}], 
              "2"]}], ")"}]}]}], ")"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.843499591760067*^9, 3.843499616138421*^9}, 
   3.84350299691084*^9},ExpressionUUID->"c4a70b0a-ba79-4ebf-99f9-\
a1a06edd532d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8434982290350547`*^9, 
  3.8434982346212034`*^9}},ExpressionUUID->"da45838b-a899-4302-b230-\
1c1678dcf3d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[CapitalOmega]2", 
       RowBox[{"\[CapitalOmega]1", " ", 
        SqrtBox[
         RowBox[{"2", "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["\[CapitalOmega]1", "2"]}], 
           SuperscriptBox["\[CapitalOmega]2", "2"]]}]]}]]}], ",", "0", ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalOmega]1", "2"]}], 
         SuperscriptBox["\[CapitalOmega]2", "2"]]}]]]}], "}"}], ",", 
   RowBox[{
    FractionBox["\[CapitalOmega]1", "\[CapitalOmega]2"], "\[Rule]", " ", 
    RowBox[{"ArcTan", "[", "\[CapitalTheta]", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.843498949280168*^9, 3.8434990001940765`*^9}, {
  3.8434990446223717`*^9, 
  3.843499063304551*^9}},ExpressionUUID->"49e2e741-7619-4966-bc7a-\
f51317882867"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[CapitalOmega]2", 
     RowBox[{"\[CapitalOmega]1", " ", 
      SqrtBox[
       RowBox[{"2", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalOmega]1", "2"]}], 
         SuperscriptBox["\[CapitalOmega]2", "2"]]}]]}]]}], ",", "0", ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{"2", "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[CapitalOmega]1", "2"]}], 
       SuperscriptBox["\[CapitalOmega]2", "2"]]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8434990570765514`*^9, 
  3.8434990638439713`*^9}},ExpressionUUID->"9e2b3685-dd54-4deb-ba2a-\
9ac50b3e873c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], 
      RowBox[{
       SqrtBox["2"], 
       RowBox[{"Sin", "[", "x", "]"}]}]], ",", "0", ",", 
     FractionBox[
      RowBox[{"Cos", "[", "x", "]"}], 
      SqrtBox["2"]]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], 
      RowBox[{
       SqrtBox["2"], 
       RowBox[{"Sin", "[", "x", "]"}]}]], ",", "0", ",", 
     FractionBox[
      RowBox[{"Cos", "[", "x", "]"}], 
      SqrtBox["2"]]}], "}"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.843502409223955*^9, 
  3.843502463644005*^9}},ExpressionUUID->"caa0c9a9-e46d-49f9-a561-\
7859c0b144f3"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Cot", "[", "x", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{{3.843502459077724*^9, 
  3.8435024640234165`*^9}},ExpressionUUID->"f56d3f84-0201-4cbd-9074-\
b9aec19c8254"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 553},
WindowMargins->{{-7, Automatic}, {Automatic, 9}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 96, "Title",ExpressionUUID->"5203471b-a0f9-4fd4-be19-20bb20a7ec85"],
Cell[CellGroupData[{
Cell[768, 29, 156, 3, 67, "Chapter",ExpressionUUID->"4ddc9cf8-1dea-444d-8a3a-b1516558aa71"],
Cell[927, 34, 373, 10, 28, "Input",ExpressionUUID->"213d895c-8aa3-4ddd-8387-89c234e224ba"],
Cell[1303, 46, 7931, 193, 525, "Input",ExpressionUUID->"09dc086e-3399-4674-8cfc-9394b6dd7a19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9271, 244, 157, 3, 67, "Chapter",ExpressionUUID->"f505d7c7-7541-44c3-82e2-a5087de1edb5"],
Cell[CellGroupData[{
Cell[9453, 251, 156, 3, 64, "Subchapter",ExpressionUUID->"dac351e4-c2e3-401c-ad63-29c089c7f59d"],
Cell[CellGroupData[{
Cell[9634, 258, 2676, 71, 316, "Input",ExpressionUUID->"cbef7251-a162-4bcd-a510-380ba86d4fcf"],
Cell[12313, 331, 2537, 65, 103, "Output",ExpressionUUID->"fc76f637-10bc-4d3e-ac2e-a21e64b5fe28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14887, 401, 8768, 231, 670, "Input",ExpressionUUID->"8f3aee44-2e43-437d-963e-e52feec04cc9"],
Cell[23658, 634, 1042, 17, 22, "Print",ExpressionUUID->"bff3023a-84b9-405b-b1ff-ed5a8c2a0f5d"],
Cell[24703, 653, 45277, 797, 256, "Output",ExpressionUUID->"714fbf25-4507-45c2-8c30-485965e7acba"],
Cell[69983, 1452, 94108, 1616, 272, "Output",ExpressionUUID->"8c5ad21b-625d-44d4-8313-5dd49c3673a9"],
Cell[164094, 3070, 2799, 51, 505, "Output",ExpressionUUID->"3d7c1871-e4b1-42c3-b77b-8048f55b490f"],
Cell[166896, 3123, 398, 9, 21, "Message",ExpressionUUID->"e6d1fa0b-b8ac-459b-8f48-b8ae38302a1b"],
Cell[167297, 3134, 400, 9, 21, "Message",ExpressionUUID->"d7cdfa80-d5a1-4e89-ab8f-5c33c2e67f16"],
Cell[167700, 3145, 398, 9, 21, "Message",ExpressionUUID->"cb6e936f-12ed-4b25-85f8-f1ec18e452c8"],
Cell[168101, 3156, 397, 9, 21, "Message",ExpressionUUID->"7ccc264a-660c-4be6-a4c0-0f34f0804500"],
Cell[168501, 3167, 399, 9, 21, "Message",ExpressionUUID->"5b519005-4b67-4843-bc94-9a9bc79e262c"],
Cell[168903, 3178, 401, 9, 21, "Message",ExpressionUUID->"3ec5c238-e721-40cb-8b0d-45f30596143e"],
Cell[169307, 3189, 399, 9, 21, "Message",ExpressionUUID->"9f433a3e-80ec-4f9a-aaba-0af66723f3e2"],
Cell[169709, 3200, 398, 9, 21, "Message",ExpressionUUID->"8e76e417-35f8-4b83-b711-1e5d9162acf2"],
Cell[170110, 3211, 401, 9, 21, "Message",ExpressionUUID->"72a28bc5-8fa7-451f-a55d-761421e65f48"],
Cell[170514, 3222, 401, 9, 21, "Message",ExpressionUUID->"10d17cb6-7983-4291-bb55-cfcbbc9b30a0"],
Cell[170918, 3233, 401, 9, 21, "Message",ExpressionUUID->"637a42fa-dcfc-4d97-a79d-dea565e677be"],
Cell[171322, 3244, 400, 9, 21, "Message",ExpressionUUID->"e597ee15-1038-4a1b-840b-fdab32ce31a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171759, 3258, 1344, 34, 88, "Input",ExpressionUUID->"387fe6e3-3431-4ac2-b0c4-09c9a5044eac"],
Cell[173106, 3294, 264, 4, 32, "Output",ExpressionUUID->"158c4359-cf06-4f47-be11-58db1ca8fe8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173407, 3303, 8833, 232, 670, "Input",ExpressionUUID->"1b8a7669-2889-40f7-8240-d3606e65d566"],
Cell[182243, 3537, 498, 10, 22, "Print",ExpressionUUID->"bf9dce20-6c24-4590-8709-41ec2373f167"],
Cell[182744, 3549, 44773, 792, 263, "Output",ExpressionUUID->"25925bb6-73a3-4831-85ba-5ca26e53d4ff"],
Cell[227520, 4343, 92954, 1599, 272, "Output",ExpressionUUID->"5c4e0264-0b52-44e8-814a-68e44e550bde"],
Cell[320477, 5944, 2255, 44, 505, "Output",ExpressionUUID->"3cae3837-044e-45cf-90ae-ddfcc62d8d8e"],
Cell[322735, 5990, 400, 9, 21, "Message",ExpressionUUID->"df2249d2-a729-4d32-abee-a51bd26fa9a9"],
Cell[323138, 6001, 400, 9, 21, "Message",ExpressionUUID->"17fad5e2-7748-4fde-9a2a-e705d8148dbf"],
Cell[323541, 6012, 400, 9, 21, "Message",ExpressionUUID->"6f350312-8411-4146-900e-9361e0fa29f4"],
Cell[323944, 6023, 397, 9, 21, "Message",ExpressionUUID->"ac33c2c1-7bd3-4c40-a561-4ab66eb7745c"],
Cell[324344, 6034, 401, 9, 21, "Message",ExpressionUUID->"9c14dc0d-3b55-499a-bae0-18aecebd0e34"],
Cell[324748, 6045, 399, 9, 21, "Message",ExpressionUUID->"4f67a12a-7c2d-4ba4-9f64-05d52d1d07b1"],
Cell[325150, 6056, 399, 9, 21, "Message",ExpressionUUID->"b9556da8-07c8-44e0-a897-050ab12fb414"],
Cell[325552, 6067, 398, 9, 21, "Message",ExpressionUUID->"3f3919e6-f98d-4c06-b97c-38e2bbe91ca7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325987, 6081, 1221, 33, 88, "Input",ExpressionUUID->"59eac2d5-8cf3-4cc1-8f05-fd4eb62dc699"],
Cell[327211, 6116, 181, 3, 32, "Output",ExpressionUUID->"040c33c3-ae12-4abc-a095-6fd6904b3dc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327429, 6124, 9035, 235, 670, "Input",ExpressionUUID->"4e05d4c5-272f-4764-b9f6-df9e7fc48566"],
Cell[336467, 6361, 672, 13, 22, "Print",ExpressionUUID->"ac8f90d9-864e-4865-8aed-34723c7efb5f"],
Cell[337142, 6376, 49030, 862, 263, "Output",ExpressionUUID->"9f63b9f9-45c3-4cb3-b798-699bec2a83b2"],
Cell[386175, 7240, 121725, 2070, 272, "Output",ExpressionUUID->"521bb4e7-a9d0-46a5-9cb5-411464f81ca8"],
Cell[507903, 9312, 2427, 47, 151, "Output",ExpressionUUID->"b589b73d-5abe-4f73-bd20-08016e426935"],
Cell[510333, 9361, 400, 9, 21, "Message",ExpressionUUID->"50a3c6fb-d0b2-4da4-85e6-ab1db6711b0e"],
Cell[510736, 9372, 400, 9, 21, "Message",ExpressionUUID->"efed812d-cc25-4891-a752-96eb2401c8dd"],
Cell[511139, 9383, 400, 9, 21, "Message",ExpressionUUID->"66423f1e-ec1a-4ec9-9560-aef3d0e4d335"],
Cell[511542, 9394, 399, 9, 21, "Message",ExpressionUUID->"61daf986-bf39-4735-b14c-a0daf832865c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511978, 9408, 1214, 32, 88, "Input",ExpressionUUID->"223e6f29-4b1f-4185-81eb-e112c6b0b40a"],
Cell[513195, 9442, 173, 3, 32, "Output",ExpressionUUID->"2e1d1575-0e76-4556-882b-2313e1a1af68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513405, 9450, 8986, 233, 670, "Input",ExpressionUUID->"3ecf6e19-dfc4-42f1-9d82-761f6d3c050c"],
Cell[522394, 9685, 451, 9, 22, "Print",ExpressionUUID->"5161d156-7788-47f2-8130-cd784ab251e7"],
Cell[522848, 9696, 48804, 858, 256, "Output",ExpressionUUID->"6f475e0c-7514-49e2-819b-b819fe7ad4ed"],
Cell[571655, 10556, 105247, 1801, 272, "Output",ExpressionUUID->"dd8f40f9-1fdf-4c86-9765-061e3c5c8bae"],
Cell[676905, 12359, 2226, 44, 151, "Output",ExpressionUUID->"4a355152-cace-40e0-83c6-53b09cb52f68"],
Cell[679134, 12405, 419, 9, 40, "Message",ExpressionUUID->"c040d024-97f6-4f6b-aa35-fe9a8480a9fd"],
Cell[679556, 12416, 421, 9, 40, "Message",ExpressionUUID->"154218db-b779-4041-bf1e-913b66e05af0"],
Cell[679980, 12427, 419, 9, 40, "Message",ExpressionUUID->"fc5d57b3-21e2-4ec4-abfa-4a21b00ddfeb"],
Cell[680402, 12438, 420, 9, 21, "Message",ExpressionUUID->"103de235-960b-4dd9-aee2-1d579b4ad9b6"],
Cell[680825, 12449, 419, 9, 40, "Message",ExpressionUUID->"32580f2f-ef26-46ed-b638-c9e5aa55e231"],
Cell[681247, 12460, 421, 9, 40, "Message",ExpressionUUID->"aa9431fa-70ab-4267-8c4e-72fc6fd54830"],
Cell[681671, 12471, 419, 9, 40, "Message",ExpressionUUID->"7af49785-cfaf-4a42-ab22-d63aa38dfcfe"],
Cell[682093, 12482, 418, 9, 21, "Message",ExpressionUUID->"34d056be-4467-4a0a-b9ae-c16fc7da177a"],
Cell[682514, 12493, 419, 9, 40, "Message",ExpressionUUID->"0eace289-68c2-4539-bd5c-1bd9e391cbb3"],
Cell[682936, 12504, 419, 9, 40, "Message",ExpressionUUID->"d7733ebb-7ef2-4831-9eb4-90d8d5d09b18"],
Cell[683358, 12515, 421, 9, 40, "Message",ExpressionUUID->"fbca3a83-7288-4522-8783-c6d209cc3dbe"],
Cell[683782, 12526, 420, 9, 21, "Message",ExpressionUUID->"a27f5d83-9b33-4b50-be31-72313be11abe"],
Cell[684205, 12537, 397, 9, 21, "Message",ExpressionUUID->"82f556c5-ec6e-4ebc-81bd-64d0add93414"],
Cell[684605, 12548, 397, 9, 21, "Message",ExpressionUUID->"84d29990-d0c5-4147-9564-8a75dc829d3e"],
Cell[685005, 12559, 399, 9, 21, "Message",ExpressionUUID->"d3b93ad5-fc68-4d3b-aeb5-2722f08b031b"],
Cell[685407, 12570, 399, 9, 21, "Message",ExpressionUUID->"a4a36db4-b78a-46a2-8ce6-a4d9a05c3f49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685843, 12584, 1214, 32, 88, "Input",ExpressionUUID->"14900515-ea65-4511-acad-b322798cb2fb"],
Cell[687060, 12618, 173, 3, 32, "Output",ExpressionUUID->"e42bd179-7118-495e-9f05-c4a8672f32fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687270, 12626, 129, 3, 28, "Input",ExpressionUUID->"25fc7b6a-ffaf-463f-aba9-86af7c6d08c5"],
Cell[687402, 12631, 132, 3, 32, "Output",ExpressionUUID->"d7ad0b58-698c-4ff4-8463-62e4ee786948"]
}, Open  ]],
Cell[687549, 12637, 188, 4, 28, "Input",ExpressionUUID->"95efa697-dc13-48bc-93d4-4df6e5f2a96d"]
}, Closed]],
Cell[CellGroupData[{
Cell[687774, 12646, 155, 3, 48, "Subchapter",ExpressionUUID->"cd54f1e2-53f2-4fe9-aeaa-592a0e98aa59"],
Cell[CellGroupData[{
Cell[687954, 12653, 8631, 219, 632, "Input",ExpressionUUID->"ebf1ee27-4942-4710-a1a4-d07841c33f3d"],
Cell[696588, 12874, 353, 8, 22, "Print",ExpressionUUID->"ce38df60-b3f6-4978-84e2-d793b3a2eddd"],
Cell[696944, 12884, 14746, 298, 256, "Output",ExpressionUUID->"5601ba8e-961f-4ef0-9a85-07a470537bd0"],
Cell[711693, 13184, 95342, 1637, 272, "Output",ExpressionUUID->"c8da277d-8a47-47ad-88df-742c4214bc63"],
Cell[807038, 14823, 2200, 48, 505, "Output",ExpressionUUID->"7a77cc61-c62a-4a88-8a66-13183fedc916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[809275, 14876, 8746, 222, 632, "Input",ExpressionUUID->"993068bb-4fae-412b-bccc-b46c25137a70"],
Cell[818024, 15100, 377, 9, 22, "Print",ExpressionUUID->"7d000d0a-527b-49e1-beb3-a1009de510b9"],
Cell[818404, 15111, 14774, 299, 256, "Output",ExpressionUUID->"3bd4d089-1aa6-4e52-bc9c-8635b4982c95"],
Cell[833181, 15412, 91569, 1577, 272, "Output",ExpressionUUID->"d29148d0-dd20-42d5-824f-4620b0fd4dbb"],
Cell[924753, 16991, 2228, 49, 505, "Output",ExpressionUUID->"3e701b5a-15cd-4957-b71b-4590fd93b818"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[927042, 17047, 160, 3, 67, "Chapter",ExpressionUUID->"7be54343-b5ba-4552-b3d9-01972d0e2f08"],
Cell[CellGroupData[{
Cell[927227, 17054, 8528, 216, 606, "Input",ExpressionUUID->"28d47736-1171-4789-bfd3-8493d16d8e4b"],
Cell[935758, 17272, 405, 9, 22, "Print",ExpressionUUID->"b3b74379-86b1-41d1-8d0d-3231f3415a1d"],
Cell[936166, 17283, 15064, 305, 252, "Output",ExpressionUUID->"548baea0-61e1-4886-b7b8-e95a384db74c"],
Cell[951233, 17590, 28724, 546, 268, "Output",ExpressionUUID->"e1f25d5d-ba43-4d86-844e-2c280a5a1291"],
Cell[979960, 18138, 2183, 44, 151, "Output",ExpressionUUID->"78395b74-dde4-436a-92fc-b3a4529b7573"],
Cell[982146, 18184, 397, 9, 21, "Message",ExpressionUUID->"95c37657-a497-40f5-9931-c877bd3ca5e1"],
Cell[982546, 18195, 397, 9, 21, "Message",ExpressionUUID->"9eec9274-d669-42e5-ad48-9eec5d575e54"],
Cell[982946, 18206, 399, 9, 21, "Message",ExpressionUUID->"8150fd29-88cc-45da-9163-8b9e2ea00886"],
Cell[983348, 18217, 392, 8, 21, "Message",ExpressionUUID->"c0f2ca56-52f0-4367-945c-c395aabefa62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983777, 18230, 1344, 33, 104, "Input",ExpressionUUID->"8399ffbe-4a66-4778-9279-88334c9266d9"],
Cell[985124, 18265, 80125, 1396, 386, 22137, 446, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"36e1fe7d-3f04-4d65-a271-2bf4cfb1d103"]
}, Open  ]],
Cell[1065264, 19664, 184, 4, 28, "Input",ExpressionUUID->"285612c9-cff3-4420-b5c5-aad719b1f373"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065485, 19673, 154, 3, 67, "Chapter",ExpressionUUID->"9581d32b-6242-4aed-8bf2-7c9ae16a8cd1"],
Cell[1065642, 19678, 528, 16, 43, "Text",ExpressionUUID->"3cfdfb56-c1bd-4767-9fdb-aa4334317ee7"],
Cell[1066173, 19696, 689, 23, 57, "Input",ExpressionUUID->"b43e9454-f889-4f90-b60a-bf8d731fb34b"],
Cell[CellGroupData[{
Cell[1066887, 19723, 688, 23, 57, "Input",ExpressionUUID->"ee50a448-cbb6-4f6f-bd2f-5b335f8e1db5"],
Cell[1067578, 19748, 371, 12, 52, "Output",ExpressionUUID->"45000358-d25c-4aea-89fe-d827e816939b"]
}, Open  ]],
Cell[1067964, 19763, 462, 15, 48, "Input",ExpressionUUID->"ccf8c8ac-ee60-4050-8bcc-38725c007cb2"],
Cell[1068429, 19780, 193, 3, 34, "Text",ExpressionUUID->"b8903e8a-f503-4e16-8665-abfb960c92e2"],
Cell[1068625, 19785, 1081, 25, 86, "Input",ExpressionUUID->"5881b5b3-5689-4b81-af04-5ccfbaee8c0d"],
Cell[CellGroupData[{
Cell[1069731, 19814, 156, 3, 28, "Input",ExpressionUUID->"c4819483-e8cf-4868-ac5b-cd3f7465c07f"],
Cell[1069890, 19819, 418, 11, 32, "Output",ExpressionUUID->"bd273fa8-b482-44c8-b349-03c936220ba1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070345, 19835, 567, 15, 61, "Input",ExpressionUUID->"38080789-2852-4598-b56c-fe7e77b84d4a"],
Cell[1070915, 19852, 614, 17, 55, "Output",ExpressionUUID->"967593c3-957c-462c-ab1f-636f73eed639"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1071566, 19874, 652, 14, 48, "Input",ExpressionUUID->"11b9b13d-8f53-4441-bba8-0df65829cb21"],
Cell[1072221, 19890, 12965, 319, 520, "Output",ExpressionUUID->"8ac3cc38-3875-4274-a811-67a0ba7c7efb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085223, 20214, 693, 20, 60, "Input",ExpressionUUID->"ed3c84ee-8e8d-4325-9819-9430856ceb55"],
Cell[1085919, 20236, 57741, 1346, 1979, "Output",ExpressionUUID->"c4a70b0a-ba79-4ebf-99f9-a1a06edd532d"]
}, Open  ]],
Cell[1143675, 21585, 156, 3, 28, "Input",ExpressionUUID->"da45838b-a899-4302-b230-1c1678dcf3d4"],
Cell[CellGroupData[{
Cell[1143856, 21592, 989, 27, 82, "Input",ExpressionUUID->"49e2e741-7619-4966-bc7a-f51317882867"],
Cell[1144848, 21621, 709, 21, 86, "Output",ExpressionUUID->"9e2b3685-dd54-4deb-ba2a-9ac50b3e873c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145594, 21647, 846, 29, 64, "Input",ExpressionUUID->"caa0c9a9-e46d-49f9-a561-7859c0b144f3"],
Cell[1146443, 21678, 231, 6, 58, "Output",ExpressionUUID->"f56d3f84-0201-4cbd-9074-b9aec19c8254"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

