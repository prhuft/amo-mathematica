(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    969726,      18581]
NotebookOptionsPosition[    960227,      18428]
NotebookOutlinePosition[    960630,      18444]
CellTagsIndexPosition[    960587,      18441]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["stirap animation", "Title",
 CellChangeTimes->{{3.8431732595951905`*^9, 
  3.8431732694700165`*^9}},ExpressionUUID->"5203471b-a0f9-4fd4-be19-\
20bb20a7ec85"],

Cell[CellGroupData[{

Cell["functions", "Chapter",
 CellChangeTimes->{{3.8431738136149306`*^9, 
  3.843173817178313*^9}},ExpressionUUID->"4ddc9cf8-1dea-444d-8a3a-\
b1516558aa71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<\\\\images\\\\\>\""}], "}"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.843259965265293*^9, 3.8432599811512747`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"213d895c-8aa3-4ddd-8387-89c234e224ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BuildSchroedingerSystem", "[", 
     RowBox[{"H_", ",", "psi0_", ",", 
      RowBox[{"t0_", ":", "0"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hamiltonian", "=", "H"}], ",", 
        RowBox[{"\[Psi]0", "=", "psi0"}], ",", "\[Psi]", ",", "statelength", 
        ",", "eqs", ",", "ics", ",", "sys", ",", "P", ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"statelength", " ", "=", " ", 
        RowBox[{"Length", "[", "\[Psi]0", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Psi]", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
          "statelength"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ics", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"statelength", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"eqs", ",", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ics", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Psi]", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/.", 
               RowBox[{"t", "\[Rule]", "t0"}]}], ")"}], "\[Equal]", 
             RowBox[{"\[Psi]0", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sys", " ", "=", " ", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Psi]", ",", "sys"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "R", " ", "is", " ", "the", " ", "angular", " ", "momentum", " ", "bector",
     " ", "which", " ", "experiences", " ", "the", " ", "torque", " ", 
    "vector", " ", "\[Gamma]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TorqueVectorSphere", "[", 
    RowBox[{
    "Rx_", ",", "Ry_", ",", "Rz_", ",", "\[Gamma]x_", ",", "\[Gamma]y_", ",", 
     "\[Gamma]z_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Specularity", "[", 
          RowBox[{"Pink", ",", "5"}], "]"}], ",", 
         RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
         RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "Rz"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "Rz"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Rx", ",", "Ry", ",", "Rz"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", "Thick", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Gamma]x", ",", "\[Gamma]y", ",", "\[Gamma]z"}], 
             "}"}]}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\"", ",", "20"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1.3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", "20"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.3", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", "20"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.3", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.84317380154134*^9, 3.843173808789051*^9}, {
  3.843256256616705*^9, 3.8432562658772492`*^9}, {3.843256297845808*^9, 
  3.843256300094759*^9}, {3.843256460589281*^9, 3.843256472597183*^9}, {
  3.8432566942854614`*^9, 3.8432568865456114`*^9}, {3.8432571875285583`*^9, 
  3.8432571914299655`*^9}, {3.843257261939678*^9, 3.843257265337478*^9}, {
  3.843257334041218*^9, 3.8432574145898046`*^9}, {3.843257456666551*^9, 
  3.8432574753416834`*^9}, {3.8432575055404673`*^9, 3.843257578622681*^9}, {
  3.8432576155315104`*^9, 3.8432576194409795`*^9}, {3.843257763009717*^9, 
  3.8432578566415873`*^9}, {3.8432578938470078`*^9, 3.8432579099884377`*^9}, {
  3.843257978452303*^9, 3.843257980641626*^9}, {3.8432583623908386`*^9, 
  3.843258437324326*^9}, {3.8432598971839905`*^9, 3.8432599616903944`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"09dc086e-3399-4674-8cfc-9394b6dd7a19"]
}, Open  ]],

Cell[CellGroupData[{

Cell["simulation", "Chapter",
 CellChangeTimes->{{3.843173833814064*^9, 
  3.8431738348329263`*^9}},ExpressionUUID->"f505d7c7-7541-44c3-82e2-\
a5087de1edb5"],

Cell[CellGroupData[{

Cell["STIRAP", "Subchapter",
 CellChangeTimes->{{3.8435659461789913`*^9, 
  3.843565948056758*^9}},ExpressionUUID->"dac351e4-c2e3-401c-ad63-\
29c089c7f59d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"w", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]0", "=", 
   RowBox[{"6", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
   RowBox[{"\[CapitalOmega]0", " ", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"t", "-", 
          RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
      RowBox[{"2", 
       SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
   RowBox[{"\[CapitalOmega]0", " ", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"t", "+", 
          RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
      RowBox[{"2", 
       SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
   RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
      {
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
       "\[CapitalDelta]1", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
      {"0", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
       RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"H", ".", "psi"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.843165564929308*^9, 3.843165629054659*^9}, {
  3.843165761770397*^9, 3.8431657864577045`*^9}, {3.8431658302255945`*^9, 
  3.8431658363491745`*^9}, {3.8431734463439646`*^9, 3.8431735739235682`*^9}, {
  3.843255187867103*^9, 3.8432552300248117`*^9}, {3.843255283258112*^9, 
  3.843255285353894*^9}, {3.843255698023137*^9, 3.8432557304257927`*^9}, {
  3.8432558373748055`*^9, 3.8432558487070904`*^9}, {3.843255912312868*^9, 
  3.8432559141289487`*^9}, {3.843256066956253*^9, 3.8432561052243547`*^9}, {
  3.843256349027733*^9, 3.8432563556327496`*^9}},
 FontSize->14,
 CellLabel->"In[4]:=",ExpressionUUID->"cbef7251-a162-4bcd-a510-380ba86d4fcf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "c2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.2222222222222222`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.25`"}], "+", "t"}], ")"}], "2"]}]], " ", 
        "\[Pi]"}]},
      {
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "c1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.2222222222222222`"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.25`"}], "+", "t"}], ")"}], "2"]}]], " ", 
           "\[Pi]"}], "+", 
          RowBox[{"3", " ", "c3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.2222222222222222`"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.25`", "\[VeryThinSpace]", "+", "t"}], ")"}], 
              "2"]}]], " ", "\[Pi]"}]}], ")"}]}]},
      {
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "c2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.2222222222222222`"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.25`", "\[VeryThinSpace]", "+", "t"}], ")"}], "2"]}]], 
        " ", "\[Pi]"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.843165773290162*^9, 3.8431657867891083`*^9}, 
   3.843165836626266*^9, 3.8431738223713007`*^9, 3.843254901895709*^9, 
   3.8432552351628823`*^9, {3.8432557148421535`*^9, 3.843255758604006*^9}, 
   3.843255811987832*^9, {3.84325585058219*^9, 3.843255871963889*^9}, 
   3.8432559145404515`*^9, 3.8432561056662416`*^9, {3.8432563494662657`*^9, 
   3.8432563559826994`*^9}, 3.8433912084652805`*^9, 3.868143960015574*^9},
 CellLabel->
  "Out[12]//MatrixForm=",ExpressionUUID->"f379d7d4-e92b-4cc0-a051-\
c6fe02d645f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Counter", "-", 
    RowBox[{"intuitive", " ", "pulse", " ", "sequence"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"6", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
      "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", 
       RowBox[{"-", "tmax"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "psi", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<Classic STIRAP\>\"", "]"}], ",", 
         "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.843259031509108*^9, 3.843259032518113*^9}, {3.8432591062599835`*^9, 
   3.8432591063515716`*^9}, {3.843259168095916*^9, 3.8432591750256915`*^9}, {
   3.8432609839650316`*^9, 3.843260984054989*^9}, {3.8433912027153177`*^9, 
   3.843391235234599*^9}, {3.843411420110826*^9, 3.8434114422214174`*^9}, 
   3.843411756039548*^9, {3.8434119960709457`*^9, 3.843412090519328*^9}, {
   3.8434121506521535`*^9, 3.8434122865773706`*^9}, {3.868143985140745*^9, 
   3.8681439866796*^9}, 3.868144037261239*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"8f3aee44-2e43-437d-963e-e52feec04cc9"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8432552463222933`*^9, 3.8432552689082365`*^9}, {
   3.8432557391765943`*^9, 3.843255815286768*^9}, {3.843255860805763*^9, 
   3.84325587971325*^9}, 3.843255917037311*^9, 3.8432561083413134`*^9, 
   3.843256205077754*^9, 3.84325624323956*^9, {3.8432563246507735`*^9, 
   3.843256358082154*^9}, 3.843257172572596*^9, 3.8432585926777234`*^9, 
   3.8432586669185033`*^9, 3.843259032706847*^9, 3.8432591066068883`*^9, {
   3.843259168495345*^9, 3.843259175276205*^9}, 3.8432593190886497`*^9, 
   3.843259674362086*^9, 3.8432609843378515`*^9, {3.843391210347452*^9, 
   3.843391235725329*^9}, {3.843411425282866*^9, 3.8434114427335916`*^9}, 
   3.8434117714638095`*^9, {3.84341196925638*^9, 3.843412095889089*^9}, {
   3.8434122464033833`*^9, 3.843412290269232*^9}, 3.8434127694235353`*^9, 
   3.868143987475829*^9, 3.8681440380083513`*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"20dacbe1-8984-4e95-808e-6ce79875760f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6398#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6398#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 
                 TemplateBox[<|"color" -> GrayLevel[0]|>, 
                  "GrayLevelColorSwatchTemplate"], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8432552464634953`*^9, 3.8432552689982586`*^9}, {
   3.8432557392880187`*^9, 3.8432558153891554`*^9}, {3.8432558609253564`*^9, 
   3.843255879831044*^9}, 3.8432559171468782`*^9, 3.8432561085253215`*^9, 
   3.8432562052171774`*^9, 3.8432562433912134`*^9, {3.84325632478458*^9, 
   3.8432563582752404`*^9}, 3.843257172689002*^9, 3.843258592860937*^9, 
   3.843258667129422*^9, 3.843259032902144*^9, 3.843259106801689*^9, {
   3.8432591686918764`*^9, 3.8432591754758453`*^9}, 3.843259319291441*^9, 
   3.843259674451502*^9, 3.8432609844330654`*^9, {3.8433912105263195`*^9, 
   3.843391235875944*^9}, {3.8434114254413023`*^9, 3.843411442873974*^9}, 
   3.8434117715937195`*^9, {3.8434119694096966`*^9, 3.843412096029975*^9}, {
   3.84341224650338*^9, 3.843412290357162*^9}, 3.843412769517254*^9, 
   3.868143987746917*^9, 3.8681440380567594`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"bacc5366-be03-4b9e-b507-047514b12465"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"Classic STIRAP\"", 
         StringForm["Classic STIRAP"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 
                 TemplateBox[<|"color" -> GrayLevel[0]|>, 
                  "GrayLevelColorSwatchTemplate"], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8432552464634953`*^9, 3.8432552689982586`*^9}, {
   3.8432557392880187`*^9, 3.8432558153891554`*^9}, {3.8432558609253564`*^9, 
   3.843255879831044*^9}, 3.8432559171468782`*^9, 3.8432561085253215`*^9, 
   3.8432562052171774`*^9, 3.8432562433912134`*^9, {3.84325632478458*^9, 
   3.8432563582752404`*^9}, 3.843257172689002*^9, 3.843258592860937*^9, 
   3.843258667129422*^9, 3.843259032902144*^9, 3.843259106801689*^9, {
   3.8432591686918764`*^9, 3.8432591754758453`*^9}, 3.843259319291441*^9, 
   3.843259674451502*^9, 3.8432609844330654`*^9, {3.8433912105263195`*^9, 
   3.843391235875944*^9}, {3.8434114254413023`*^9, 3.843411442873974*^9}, 
   3.8434117715937195`*^9, {3.8434119694096966`*^9, 3.843412096029975*^9}, {
   3.84341224650338*^9, 3.843412290357162*^9}, 3.843412769517254*^9, 
   3.868143987746917*^9, 3.8681440381206803`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"97760bcd-c86e-47e9-9d4c-ef7470d2ecce"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = -4.739, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], -5, 5, 0.001}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = -5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, -5, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{626., {207.134033203125, 212.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8432552464634953`*^9, 3.8432552689982586`*^9}, {
   3.8432557392880187`*^9, 3.8432558153891554`*^9}, {3.8432558609253564`*^9, 
   3.843255879831044*^9}, 3.8432559171468782`*^9, 3.8432561085253215`*^9, 
   3.8432562052171774`*^9, 3.8432562433912134`*^9, {3.84325632478458*^9, 
   3.8432563582752404`*^9}, 3.843257172689002*^9, 3.843258592860937*^9, 
   3.843258667129422*^9, 3.843259032902144*^9, 3.843259106801689*^9, {
   3.8432591686918764`*^9, 3.8432591754758453`*^9}, 3.843259319291441*^9, 
   3.843259674451502*^9, 3.8432609844330654`*^9, {3.8433912105263195`*^9, 
   3.843391235875944*^9}, {3.8434114254413023`*^9, 3.843411442873974*^9}, 
   3.8434117715937195`*^9, {3.8434119694096966`*^9, 3.843412096029975*^9}, {
   3.84341224650338*^9, 3.843412290357162*^9}, 3.843412769517254*^9, 
   3.868143987746917*^9, 3.868144038136607*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"c2f163b2-daca-479f-be2a-60f1189f4b8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[CapitalOmega]0"]}], 
        "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.2"}], "}"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<counter_intuitive1.gif\>\"", ",", "gif"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.843259782082732*^9, 3.843259822112793*^9}, {
   3.84325985247757*^9, 3.8432598531877284`*^9}, {3.843260027133868*^9, 
   3.843260027236577*^9}, 3.843260071457158*^9, {3.8434127736804113`*^9, 
   3.843412793649506*^9}},ExpressionUUID->"387fe6e3-3431-4ac2-b0c4-\
09c9a5044eac"],

Cell[BoxData["\<\"counter_intuitive1.gif\"\>"], "Output",
 CellChangeTimes->{{3.8432598334314933`*^9, 3.8432598635724497`*^9}, 
   3.8432599972295227`*^9, 3.8432600336840053`*^9, 
   3.8434127840751505`*^9},ExpressionUUID->"158c4359-cf06-4f47-be11-\
58db1ca8fe8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Counter", "-", 
    RowBox[{"intuitive", " ", "pulse", " ", "sequence"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", 
       RowBox[{"-", "tmax"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<Classic STIRAP\>\"", "]"}], ",", 
         "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.843259031509108*^9, 3.843259032518113*^9}, {3.8432591062599835`*^9, 
   3.8432591063515716`*^9}, {3.843259168095916*^9, 3.8432591750256915`*^9}, {
   3.8432593369421215`*^9, 3.8432593654987164`*^9}, {3.843260973805519*^9, 
   3.8432609739556465`*^9}, 3.8434119395329*^9, {3.8434121175174427`*^9, 
   3.8434121336481457`*^9}, {3.843412342759514*^9, 3.843412348811722*^9}, {
   3.8434124937454123`*^9, 3.843412493829773*^9}, 3.8434857785135345`*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"1b8a7669-2889-40f7-8240-d3606e65d566"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8432593471877084`*^9, 3.8432593658148923`*^9}, 
   3.8432600770064173`*^9, 3.843260974306026*^9, 3.843412129234115*^9, {
   3.84341234430908*^9, 3.843412349515603*^9}, 3.843412494222252*^9, 
   3.843412731818638*^9, 3.8434857796639633`*^9, 3.868144066844453*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"b0d5897e-c0d6-4567-b710-a4e905a37716"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6813#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
Xw==
          "]]}, Annotation[#, "Charting`Private`Tag$6813#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.9999997959183675`, 4.9999997959183675`}, {0., 3.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 
                 TemplateBox[<|"color" -> GrayLevel[0]|>, 
                  "GrayLevelColorSwatchTemplate"], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8432593473883543`*^9, 3.843259366017068*^9}, 
   3.8432600770971937`*^9, 3.8432609744092565`*^9, 3.8434121293978276`*^9, {
   3.8434123443946486`*^9, 3.8434123496028767`*^9}, 3.843412494315836*^9, 
   3.843412731913904*^9, 3.8434857797471905`*^9, 3.868144066924655*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"e74dcdd9-bf22-4fab-baca-48e81154aa91"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt23c8Vf//AHCuPbLJqCgqlShEyfU69i6rjMgIFbIzUpKEzMhI2aRIWWVV
zgkRyiZCZvbe2+/cz/d3//F43nvW+/1+vV7n/frDYSsnPRsCGRnZGgUZGenv
gzHtxb09dozsv888xLhbaPq9YsfwL/HPHLwjd8skk2bH6v/fRhJmU4z1bNi9
/zeVjao4jxkbJrL7P4clBzaZrbFiUlv/M3vXd4f0KFZMcvF/LtQ+M/7vNCs2
3v0/61W9vHGingW7H/s/B/f1/lw3Y8E663f/s88c0eHZMDP2w2f7P7+UcJhK
4WHGHMJW/3Op50u7vMtMWOvi6H+moPL63um+D2M0KfvPl6KvCOwmMGLjny7+
5/r4p9KCVQxYGOvCDsmqSV8vqU3TY67lLzdJ/vsm9wx7MD0m5hy3RrJH4Su2
v4L0WMabxUWSK6WfP65aoMNE66vmSGb6GrL8FqXDvt/6PUXyx4fU719l0WEO
mSETJJso+NtEhNNhF6O3Rkkmo9o9+MidDvOtFhwhOavWu9PtGh3m/2t74L/5
S3LN/6tNh7UPCPaT7OpmH6KO0GHy3WJ9JBP5zeT4j9JhjPazXSQfWbnCHbKf
DutWTOokmbbh0uIyHR0WqnuineR2DySrfpYW8w5paSS5XOuC37lBWuzwykQD
yalHxE1S22ixMPauHyTbNwoyeZTSYr6TpytJ1sk8MD6QQ4vdYYiqIFnqHmel
ZhItFumKlpNMOEbjcdifFiN/5FxI8soziuGrPrQYS4BUPsnjW3uXw9xpMQnL
6fckN7asn1izpcVW1o5mk5zwYLLvpyYtNl9enfzf+MdHNQjKtNj5wp1XJPvq
D5dIy9FidAKCCSRbn+iNSj9Di7m/P/uc5DMdv5S9OGkxHWndQJIFkfrC90y0
GPZswJ9krnc1/MM0tFhDgeFDkrf90A3tTRrstPGmJ8m1IgXvBftpsO/p2zf/
m5/497zGXTRYfPKnGyTnEnKCIlpoMMaHOuYkR3elW25U0WDG28JXSb4eEMPZ
9JYGO3tJR+G/8cEqjVc6DSbOZk4kGbYMNwUSaTALz0vnSRZw5et3jaTBmJvq
T5M8ZJ7+lsuDBuNFD+3/Lx/4KF+hTjSYVCwXK8lVnTbht27TYBMqY/QkZ2qf
cC03pcFGvJh3d3HbXsy/eF2RBtMttxgiuXOVVZSGSIPxs1D1kKxa6CaQL0WD
yZbdayNZ+IQ0FeEkDSYv31lF8iRXReNrFhqMjeJMOskmrfzfLtHTYDM/IYHk
hvBHRWsUNFhsEdczknMplV+or1FjjpPsD0h2XGywnOmjxngDjhiQ/Pf9aYO4
39QYUi6vTvLl25Eq0EKN3ZU4IEfymQG9U1HV1NhJws4xkhd/dS9LvqPGsuOU
VnZwWz29ONaXSY0J23OMk9ymlNQdmIxfz/f5H5I/frao6IqixgrCYypI9sge
C7rvRY3p1Fv4kzxqrX7vqCs11t1r40qyocA7h0Z7amzjCI0VyefjHXUFzKmx
Fg5OhOTNgBXeamVqjIbv0No2bjvEcN8doMbUr1YPk9yzVbrHeYEa6zFZbiL5
i+v9kZsi1FhTyHgWyb4WFB8Y2Kkx/pXfl0jOb1KNaGfE71+3Jk3ykFyYYxI1
NUZ1P0KAZJWDnGJim1RY93H2+S1S/fhzLF9vkAozu3kgmGRE3f4ZXw8VlrwQ
60Cya2me80g7FRZXYq9Dcmfc+bMeP6iwtteHuEhO1tcoTMijwu50KCVs4m6u
jIi2yqbCbGgUvUgmiLe5nsqgwm6h/ldJtmUxlfgaR4XthuSzkCz6687HgQdU
2IKHlM8GbgvZwphsTyosIO2DPsnR71bdXV2osNkXcIrk1acPz1HaUGE5oi9+
r+NGVaKKj2tRYe9KE4RIXvzUETevTIX9Yry0soZb6CivZxlQYQkflqpJDqbI
kNaUoMKENbcsSNbBPpY68lJhBbPnQ1dx+4ttvJDmoMJsM1E9kj8mE73JmKiw
T6wEHpK5H9RciCanwtz+Jqet4B640FX+aZwS62ryTl/GzZZ94JXvECX2uYXf
nGQlbksf1V5KbPywJi/Jb1cnLnY3UWKWChxhS7idi7a+bBdTYss1N00Xcacf
QZK+51NiX90UGUlujwp4EJFDiTEuXitfIMWP8z45gWRKjHrnICvJZKf5UcUn
lNgvv4E3c7jvc8lff+JLif0ts0dIXtuz2qnxpMTMmkI6Z3HPtmZd1LCjxNxp
9LdmSPHlJVqqc5kS4/qhfXQa91UrHcNoNUoso67r7RTuVk3X1TZ5Sozb2+cE
yT8OFUsaSlJiHts1hydxF1cTC8x4KDFrnfzpMdziH8x1UtgoseD74oYkv49/
NDfAQIkdDdOoGCXVD7vvp613KTCt2YVH/0jry6KdYzdMgR0qK+gdIsXjpqN6
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
TF8NifB/OkWZuQ==
          "]]}, Annotation[#, "Charting`Private`Tag$6904#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c8l28XtvceLVmRZO/9PEeUEUoSpaFkhfwkRFZmEhpWZlYyUrKS1HPb
IzKSyN6r7D1f71/fz/nc55z7Otd9zvU9D7/Ff0ZWZCQkJDGUJCT///WeMFjc
22NH3zvmGr0VcZVxzwMrPdvsaDOHzK0XNlXPsQysfdpgRwXZFn8T7bnU+JSd
dv5bYkcNLzkjfv7D1CpDX9IMjrOj/vtSB59l31KjkfjNg5rZ0ZOr2PKRb4/V
7lW+5k9sZEfv+ESNXn15qvbHxFbQvY4d0Y4NNliwP1fL9d04KVXBjhiLzAQl
pKLVzrVxyacUsaOWQblCHZ1UtU9Wo4peH9lR+fG8W+NG6Wp8m+9ULr9nR6E0
ws08j9+oLRzD1Vmy2FEuY73SaZcctSiXm3qPEtjRnoc/o49BoZpirb/JfAQ7
km+qvHxA4Ivan4Nvbt30Z0dc278ZYv0r1bzv1Dm0urKjVPeGvJLUejW+L1MP
1O+wo6asa1qlDK1qiyMPvdct2NFR01J2bZl2tSoGhoD8a+woZjuwxedph1qU
fFKIrQk7qhF127Tl+q1mfUMigs+QHU057mYJjnWrKT4mIrt02ZGf7vmA8Zle
NZp8w7jnmuyoNf6dhdfhQbVc0vsZJIr79/uFZrfVjajVZgzZSkuxo+dWsu7H
KcbVBrUNxS1O7uPpYunKc5xU25r+tvDyGDsSCDn6s4F2Ru1AhHhJFRc7Ev/P
2mzi9z81aenEh8sc7MjTni694u68mn4HHRxnYkdCogU5UfSLav5HJuuCSdhR
B5bxIThlRS3pq0nYpw02xDI9nGcSv6ZWerPGcHKRDQV3/CHCizfU2snlOA//
ZUM36YepYpe21P5lpnXrjrGhzMrug2OXdtVozrImP+xnQwKisTvrjiTYsX++
Frm/2VDg2E/H7lpSDHs+K9TbyoYm+pqHb+Hk2GXZ6zMMjWzI+SdX+EofBTYe
GGXwppYNvaliL/z4lRK73/n9A1bFhpSuZHJGZVFhER4qLo7lbCjNNOubXSoN
xvX9XifVZzYkwaJaLp9Pi2UdzVZ6XcyGPjF8sOz4TodVEQd3Wt6zoUG6eJ8r
ooyYIet5c9tcNrQZfN1F3IkJ67cIriDJYkPtKgnc+VXM2DrlSpB0KhsyuZuw
el2fFZPQb2eKjGRD3yhWJgoCObDyJNp7os/3/U969tPe4cR059R/VoWxIceB
9uTfJgcwy5cfYpeD2NDMwTQdMsND2OLI+EaYPxtqjt05sX71MOYrz3PtuC8b
upy2WB7jfASL7wrjM3FnQ7FJ3inMFUcxYZFq/1kXNpTMF6YXscGNFXtujQbf
Y0NHLx632sV4sVYeu+xPdmzoacJmBuUqH0ZppS1z+DobcnpFoay7JIC135A2
nbmyf24io8VZIoglX+by+mrChj4K6NSc9z2OKejP1dwyZEPdzQqR74+fwMi0
uqdlDdjQc+yzhwC5MPYDqpipzu6/95AbadaEMGYtG3slR5MNdXpJHn5cK4LJ
iPv5eKmzIX8njhiFClFsV8g+/RzGhjhe0ES8rhLDYo/Av0UFNuQyLPLNYFAC
qyedeKQqwoYolT4zURDSWNRW6xvGE2zI6unJiyXXZbCbK2WNAwJsqCSnRGKb
RBbbmIzgCORmQ4xWElj6JTmsdthd2eQIG8pIdLSWp5bHXvZa3BA+yIaOPZb1
JyfkMZFWhawmFjZkwHzXQU9LEVtt4GtOZmRDY9sRBeoHlLDKKrpFJzo25NmQ
0I9mlbCrn/pVOSnYUIp51qRtmQoWlhzccn2NFT1c5pHvrcKxy6+cliWXWRGJ
rGZe2gBggi/NDpMtsCKOz5glR4A69jVI4nbmNCv6Ydl89lLZKSzU91CI+wQr
ChYdzk27oYGZeJDlnR1lRf9sqmZnaTSxWYfO1dk+VtTVuHxV1Ok0VmaNuCr+
sKI+FSaKe+JnsOCbOeqRv1nRzcLgJzcXzmC8xj6him2siN9q9sp8uDZmqCrE
86h6378hg3KERw87Ks+iaVTBitrutpj4H9DHJiU2bQS/7eOJc8TPHDDA/I79
+Fj/iRUVOVD8IpE8j507WtoZX8SK5k7fuCclaIgdOZC25fCRFa0xKqRdKTbE
CmjdzrDmsiLzFu8N/7ELmA/5TbuRt6zoSuixxs+BRtjZHd1nxRmsqCFQ7PBv
4YvY8Dx395VkVuSh/fW1wiNjjL2rxiHtBSvCMz6fKHU0xZBoakhgBOu+fj+O
05e7jDn4emVYP2VFQVuvf3rsXcZqhWR7RYJYkc1ienJ+rhl2/yHTOoM/Kzok
UXJIIuIqxvdjin3OhxUVl5T+U/W4hj10TdErdN/nMyiPaefODexEg6dNtCsr
ujFBnSfuZI51HDUNeODMivKtXrxZhpuYRDXjF1UHVsTNcmY58MYtbJjNU6Ta
nBXJpgall/65jT2zNtHKvMaKYtU4h0sfW2JqZdIWIVdY0Wd2ZohVscJibk3G
6V9kReVv6PyCC6wxzeKqYglDVuRgyM0w9sAGm6d53cZiwIp8D5STftW0xc7m
X6L9pcWKoPy8qefcHWyNXPr4J01WJPNb91pRix2WYcpwKk6dFfEG/uFk+GSP
7e5Wul9XYUWKi1daqhLuYgUGUpNj4qyIbfiq0oEhJ8w8lZ6iXoQVVWZx2R50
uocxrIzz5pxgRfasTMrXyJ0x68QkU0d+VvQtArWyKN7H2Ofd7xvysCKNgnu2
H3/fx5Cm8TMZLlb0X7Si5pqXC3Zkhq5ulYMVXbdI6An87YrV4ePDXaz7/ZOj
r/U0wg1zeVmxW8bEipIiPb9a6j/Afii7K/jSsKIw4Jsw7HPH/EPG3lBvsyDz
O2KrgVe8MMleVDG1zoJU7T42Rep7Y72SiX3fV1iQGcV7KmYdH0zhtxHn8zkW
xCYS9SdK7BE2IiIh7fx33z8qJSLp0yPsuQ+tgfEUC3o/RW57TtsPmz6OAg+N
sKC5yP/aeF39sViPhJTNARY0RPZMxZs9ADvd7Fbe28uCLF7Iem6XBGDJLuLL
KZ0sSOwmhAwwBmFGVfG3TzayoNDO7yxNu48xwY7R/rpaFpR1di7zTE8Itjoq
YWZdxYJM6uZ9qYgnWBxVlWF6OQtSZMkCjqSnmN1BxqZTn1nQhPPvla+xYZia
sKn2YDELaqHrCreND8cGdWcw7g8siKUy4JZf6TOswEz+85dcFqRjmzAqbPcc
C7D3lTPLYkGvPayK728/x4TC2UVjU1nQnSbuC5elXmJ3W1UPsUaxIKcDxSL1
g1EYPhQU+eE5C9J8qEpCnxSNsSy2MJ0LZ0Ehmxx5PDdjsCJ2S8qnwSwoMiiN
13UrFgsWfP/oZAALsv06ZHCo4xVmKr++VefLgnQdQgUNiuKwTZOwRQoPFlT0
tnNBPiwBa7LpvJvuyoJayZePXAhMxJLd+aZOObOgXlfHC02BSdip+KIBH3sW
VGp2ILXs9WsspK+3af06C2K08Zav5U/DzGaFdGLN9uOvMPy+WpmGie05Vcmb
sqBrF9pWKW3TsRY+yjJnQxbEn6Bo+bgmA0uRPi/PasCC3j0/X3vc5w3mrBGX
/0GXBR2qrhCKwTKxA5bib/9qsKDhzymb79reYpMuD449BRb030AIUZyZhX0O
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
WI0zizSUzN/nYUT4//+njGTV4TYzwv8D5WKk9Q==
          "]]}, Annotation[#, "Charting`Private`Tag$6904#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6904#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"Classic STIRAP\"", 
         StringForm["Classic STIRAP"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 
                 TemplateBox[<|"color" -> GrayLevel[0]|>, 
                  "GrayLevelColorSwatchTemplate"], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8432593473883543`*^9, 3.843259366017068*^9}, 
   3.8432600770971937`*^9, 3.8432609744092565`*^9, 3.8434121293978276`*^9, {
   3.8434123443946486`*^9, 3.8434123496028767`*^9}, 3.843412494315836*^9, 
   3.843412731913904*^9, 3.8434857797471905`*^9, 3.868144067004307*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"5568ef60-9be6-485d-80d1-1e0ea447c6fc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 5., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], -5, 5, 0.001}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = -5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, -5, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{626., {207.134033203125, 212.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8432593473883543`*^9, 3.843259366017068*^9}, 
   3.8432600770971937`*^9, 3.8432609744092565`*^9, 3.8434121293978276`*^9, {
   3.8434123443946486`*^9, 3.8434123496028767`*^9}, 3.843412494315836*^9, 
   3.843412731913904*^9, 3.8434857797471905`*^9, 3.868144067036809*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"1d80f590-971e-439e-aa64-67fd8adc1f9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[CapitalOmega]0"]}], 
        "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.2"}], "}"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<counter_intuitive2.gif\>\"", ",", "gif"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.843260087717947*^9, 3.84326011130365*^9}, {
  3.84341273661294*^9, 
  3.8434127625805864`*^9}},ExpressionUUID->"59eac2d5-8cf3-4cc1-8f05-\
fd4eb62dc699"],

Cell[BoxData["\<\"counter_intuitive2.gif\"\>"], "Output",
 CellChangeTimes->{3.843260093249157*^9, 
  3.843412748486418*^9},ExpressionUUID->"040c33c3-ae12-4abc-a095-\
6fd6904b3dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Intuitive", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"6", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", 
       RowBox[{"-", "tmax"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<w/ intuitive pulses\>\"", "]"}], ",",
          "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.8432587043900986`*^9, 3.8432587418230286`*^9}, {3.8432588153159046`*^9, 
   3.8432588153768034`*^9}, {3.8432589455706663`*^9, 3.843258945655137*^9}, {
   3.8432590166434994`*^9, 3.8432590225390444`*^9}, {3.8432590803975763`*^9, 
   3.8432590950563774`*^9}, {3.8432591262164955`*^9, 3.843259126366373*^9}, {
   3.843259192401531*^9, 3.8432591926731343`*^9}, {3.843259374207531*^9, 
   3.84325937579399*^9}, {3.8432601163249454`*^9, 3.8432601168637657`*^9}, 
   3.843411947499678*^9, {3.8434123654820533`*^9, 3.8434124016738377`*^9}, 
   3.843412447342079*^9, {3.843412609690152*^9, 3.843412609749276*^9}, {
   3.843485598857459*^9, 3.843485635534086*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"4e05d4c5-272f-4764-b9f6-df9e7fc48566"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.843258752816162*^9, 3.8432588158175955`*^9, 3.8432589460402517`*^9, 
   3.8432590181690598`*^9, {3.843259085641266*^9, 3.84325909547139*^9}, 
   3.8432591266171875`*^9, 3.8432591938064814`*^9, 3.843259377655038*^9, 
   3.8432601309038134`*^9, {3.8434123812666955`*^9, 3.843412402066861*^9}, 
   3.843412447743969*^9, 3.843412610071547*^9, 3.8434126714698133`*^9, {
   3.843485602081085*^9, 3.84348563572826*^9}, 3.8681440987361727`*^9},
 CellLabel->
  "During evaluation of \
In[63]:=",ExpressionUUID->"b8c77b12-5186-4a87-9ee2-c87f9b637303"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwtm2VUVd/Tx4lLX+LeKyGhIIKChFJS5+wNkoqK2LSUICD1A1EEFREVCWkJ
UUKUEBAEEZB7JKUbSemOS3f8edZ6Xp31WWfWmdnf2TOz94sjZOFkYE1DRUWl
QktF9X9P74mLS/v7JOxiTHDshE8qGPfiWu3dIWGiRUE0chmp4BLHwPqPTRK2
oiUQWvM3FQgqOe86LZOwHZu/fi1nPoOygDDGwXESditG87np1GfAKPX3CNZA
wqzzy+WKbdJAxH/mF57GkbBZiR8ZG/GZYJdR7JLxOxImtruqydOWCWzeL+or
RpIwdRs7w0Cmr+Bsle+NhWASxrnSbOH24Cvo4f50x9yXhNnxXWLRvpkFBIun
HkA7EobXxfWkk3JABrVbCtVZEuYjfXa+ni4XKF5Np4+RJWFhNFTqUCwXVKUM
2Z45TcK8tcLZZvVywaC2vqSFGAkT3D6zNxeRC7iCJQvK+UhY5TGB9MQTecCX
d7Lan4qE6Tw49Hn75ndwS9ZkBl9LxEwc5oKI4wVg3C/i4qcqItbQxHaLnvAD
uHXWZSPlRAwpm+5XUv0Bgh8q/3e/hIgR3nXumYf/AOVk7t2mLCJm8YC5JF+j
EEjptbKFhxOxWjX9/rS8n4DOWlvmsAkRG2YlZChVlIBW0zM3Z24TsUm2l4ai
KyUg4Rbf4183iBg9ecxT//gvoKBHqbyjT8SYGStSTV78Ajay0bfTzx2wJ07F
/Hwp+EM98VRFnIjRWlepiA2SQWCCf5PJOgHTeiVxZ+b9b3DrnfOK9AoBc3zY
5vnv529wPMzwMM0iAXumuJ281PEb/HohZZk6TcDMZCce+LCVgXmHzrX5fgJW
RukdEXlWBvRVRI88rSBg2sHlJb8dygGpq9IhKZSAKSz1pUWYVALsVOIrv2AC
ZtKjVi7iXQkcnjxOsXlDwGpvrph3xVeCKlHZPvEXBAzRcr6W1FcJHrl/vJDn
ScAiJhlhrUkVGCZ6iVeYETAVTulcV5tqkHvx9OSYJAF7EbsqZx5aAwzKYy3F
ajmwLKGf35ouNYLj7aP/qqs4MGvKeLnZo0awNiplaFPOgU0nUQXzpDaCGPpy
/eQSDswiOl0Rt9cIBnVnEIFsDky95ZRheXYTcGxW4SFEcGCGqcHhjkHN4FV/
X/2GCQcWq8pWGc3QCrwoiMPbEXZsID7f11+hAxQ+iL2XfZkNc65KLk0e6QWX
wq4L7sXgMQflwzV/loeA9vtfl3RmmTHaF0Q1d+pxkFr9sNPNiAkbSeJeCA6b
AjEyHufSrjFhKg1R90iJUyDwvWvOv4tM2LkxuY9B2VPA1c0+QBcyYUU5xFaL
+imAHDVBj4owYdJ6EzZBdNOg3QOm1s4zYv0iKqL17tOARpTBQ8iXEZv64lao
eHEGrL6lHbnhxYj9QJrj1QxnwOT2/uXA/xixWtuSLdW7M6CxZUNs3YYRm5Qo
LWV+NgNivKf76y8wYiZoZsZ+3gw43dGg6cnJiD1rNn6oxD0LTP0iOJu+MGBL
Kz3iGq2z4EBhBs8kBqxcKf9Hdt8sANs3twTjGbArwQND+IlZIOjKN+AawoAF
m7hVxm3PgmGzpC9cHgyYSOn1Fqbjc8BGJUfF9BwDxhv07ym36xzoXCNIMSAM
WMaCZUCE1xzQznUTzFFgwETNL/HQvJgDJ8XO0tGIM2BVS/I+WdFzYJqrtPET
BwPWH9ySeL5kDtxfqrsz10+Pqf8N5PSlmQf/vkpei/pLj4k/oi/eZ54Hl+1C
tEALPdbV8XPEgTQPTg8anAqtoMe4C/G+nMfnwVJD94pcBj3GxsJyOUFjHnik
Tbx87EmPLbt533vmOw98zGmzWEj0WBXf1BvJxXmQ06Qd3I4/sC+kjTRfnwfD
aOD99/T0GKJsd8J3dx5oCXBKS2/RYfL15JK3TBTA1iOaYzBEh2kpVz3tEaSA
hKvnc2Oy6bCAKa0Abj0KaC4LDrNIo8P2mSUMpK5QAI1Mm+upZDqsXPYbrewN
CrDhMJb9FXVgnzq2T2dOAVINjt8HvemwqjdDdi2uFEDWCi04oUeHrbYPta1F
UMBSfkfUgiYdFiIooTP5jgKOi/A+OOgy2JZAjkh1PAW8ok0+e0GWDqP2K6S6
mEIB+tj3wvu8dFhssfZjz1wK8JXefHf2EB32RWfdpz2fAr4nIA+p2OiwExeH
CwR+UgCPd5VSGDUd5q42kvWATAGDSl1F+ZM4bC9e5phuHQUQ0/jjfIZxGJ+2
x2m2RgrQ4Lnjpd2Hw1Yt9HWwZgr4sjal0t2Ew2J1Hjyb6aCAHmsp/qQaHHau
yDnGqosC8B2uO/fKcZgjk+GX2h4KcM7bLtkpwGHfUutjTAYoIOkYfF+Zg8ME
0kn/BQxRQHuon3dwOg6LYquSSxmhAEVnVlQwAYcNp90xTJiggHsDV45MReMw
0TN8hT5TFBB/KWrvWygO22wanLswQwFUkkfJ517gsENCme2Z8xTwmEvN9IUP
DvM9rzd3Z4EC1vctdqse4LCiXNF7VEsU4DrlF8/ogsMi//7RfrVMAfOtqSrn
7+GwLs0F380VCrAr+dPzxhKHNaYE8Fxbo4DRT9MPG4xxmMzvfLp36xTQ6ylV
qH8Zh1GMRft6NynghoX+zTCdAz1ev8N6tyig9YLrWpsaDnMfWFmq2KaAi/IR
kZwqOOyp63mX6B0K+HOkQO6mHA4LyO5Surp7oC9jV9s7SRzmZsF+YeOAyYub
rj2iOCyzODjZf48ClHv5iPyCOEz4+gn1vQMuqEC+mRzGYfcVekTM9ilAJstM
/wMRh9l2dV1MO+Cv0c8ogywH+px48bPvgE8+Sw4+RofDrr1ysd084JR7lZJW
e7SYd7u54f4BC16bqP+0TovxmGuFzB9wHMLkMLFAi6WsazJUHzDXiVMsYtO0
2MJAXtmrAw7juJh+b4QWW2s/VCZ7wGxb93Uz+2gxGsYj9H8O4ns98nZyroMW
kxLID9E8YFxD7kvpJlrszMkFs8yD9T0taBd1+UOL+X3h9Nw50GP7w1pl7m9a
bMQvvlv+gD1e81ivFNFi1PQS/rcO9FtyVcYpfKfFKpvjnlgd6OtobJz84Cst
ljWwXH37QP9JTR/1n6m0WLKXwx3FDQqwkv44tPWBFsPL3b9EdZCvAZ6yp6ox
tJhWZ2jot1UKMKQZPeoTRou5Wn2U1DvId+cMHZn8hhZ7zhIu0nywP650nDCl
fkGLVfCEP0YWKUDni3283wNazHJD/3r7HAVUhAapVDkf6Jdw5d/uwf4DXtk9
DPdoMS/FsXaOaQpQuLTM88aYFqvfv823PHZQvyuPIkPVaLHgT7tv0voo4GN/
vFybMi1GZKzdO3JQH3zVpW2H5Gixq8XidD5/D+ovlob4TpQWk7l7emSjhQL2
QUBwAgstBvmuBg5XUsAjsUzJQRwtxi32WP1TGQWsERvrhfZoMALGUXrloJ5n
xwgsnxZosO2Xw0K2hQf1+SbmZUYHDbaTxO/4Jo0C2ioFM82baLDPT54cH/pE
AfX7n5s5a2iwI7r/FQgnUUCpW8HhpyU02ER6xQun2IN6NWrLuJZMg7FW3407
FnBQj6dYm3edaTDDNmfTXWsKsLSOWMm9R4PF8DVrHL9DAcYf+A7bWtFgKgYM
forGFHCJJG7RepMGs98UPyNmcLBft7VWUlEaLOr3r/MSyEH+a5/y6ONpMHPv
caYydgpYwTEidPQ0WNWZvr2yg/47j4bcKdqnxv4WCs1+oz3oV7nv048vU2O/
2v723j7o3xWxRaqb3dQYl7SJXlv/PAi8t2Ke9JkaKz5R9NPj8zzgZ7ZNW1Gn
xurqpY52Sc4D09L6wGOq1Jhfp0vm/sH8SHQ946wvT40JsJ6bJ/HPA9HeLYXM
E9TYByOrHpqD+SOdGVRhiafGbuVct90ZnQPql/IGWjuoMCW/sw5OB/PMLmyP
85stFZZyVe3Z6PwsyNSy3Px3hwp7V+hoWzMyC+a3qvvwRlRYTclw7PuuWeBq
GZpse5EKO7bmq3qobBY8ljt+RlCGCjuq+3ZFNWIWHPka/u7I+j7Z/gh8/1Z+
FtjLi9P18u+TlYWalycdZoAr3c/PHuz7ZKO9Nclj5jPgUYf2eSLNPplTnuvs
paszIMDdOkR3Yo/8gKqP64nSDEjP/3i48Nse2Tb8ynctuhkwJc8tFam1R7af
U+n0jZ0GdxVwNy8775K7PocPGJdMAcuz/76Ul2+TH6pIyJ4cmQDinsr791M2
yOYC0ofZT4+CxP6rFQ/VVskuFppX3PkHwcQzTlVtniXyBbxP/hFiN2D2zqaE
My+R5yuR2rKVLiDlqZs8uLNINmJKZ3rwtwt43PdmfjS0SBb90nyX430XoDca
68pMXyR7NppLMYl1geNy+e5EZJH8dZT3sajGX2Axfi27/84C2a8D9nx42QGK
Ik9qTt6YIzf3makD7VbAaDRhSa06R2644KG7KtUKbgim+vIKzZFfXXJrLOVq
BUvpwpjezCzZv/STa+B4CxDDjqh8ezJLvlkksUN82QLeTR868+jLDPnkXQHJ
trpm4A6oBfBbU+QZEV+2oD+NoAyHqYgMTJF15LxjFuIbAUetjyFaMUXmWpO1
e+zSCDKv7UQ7B0+Rg//8HcfzNYJRu3Vix7EpcnqF2g+CcwMwiJhjTLgwSY5g
bb6XKVQPTk91r0i/HydPR3rYHUuuAf8tSIpx+42TWbrGhEWe1IDC9Wcme/fG
yfqveerOG9UANXrxqnrFcfJYAWvdHung/Cz8KNqufYwcpvBzmfHlH+Buwquc
zDJG9t7i1froVg2KWgyfcD0aIU89bltLsqkEe11ZebvmI+QlyzVkVasSqA/S
TI5qj5D7UW8buxOVoG4+XT+Pc4R8P9BS8sdkBehj2RbS/zZMHiA805hwqAD7
mnEVryeHyIeGnr0L9ioHGkW9TLs3Bsnj4d3WMd9+g6z0T0rVKoNk7193936F
/wY8cU52oYKD5LH89FuMHr9B5zp92IX2AbJCh/Aeq8pvIOJ1g+P91j/y9K2q
/J4qDJQ9W8VD7X4y8aL20YZaMtgJlqX3H+wmv/xFqT3vVQKanaqtedO7yWjI
g6xMnRKQrG9UmeXWTebSUle8xlUCzhOf+/2l7yabeXxzdsstBjGRrTRikl1k
qxvdVbNzRUAh3mW/7mEneWZqbjTe5SdwTsveIJDayEPSUf0P0gvAabb7z9UH
W8nkZdu0Zd8CsOgqweb2tZU8R/RXTzUqAK6qacLt2q3k/tarwtmsBcC9KelS
1OMW8vjFx6/P/5cPlqdP6crXN5HPK89t+lz4Duifb3zUcq0hixkPF4QL5oKX
eu4Fn/E15MqjvwWC978BRq6lOsbPf8jDQn9tf/77BpjTZtZqe6vJvYf6ZxLf
fwPsTf/0LmtWkb05Z63zBb4BHr7KjZs85eQXpg0nSkRzwA0b4cTWxz/JvHFP
FhbzM0GAi9ursPxCMpdSvu6Dp5ng1+NyJ4P5H+TCznv8ly9kguPhlmirWQHZ
9EZT9cpQBlgiJ/e2qOeRfz1ncGQjZYAjsjoSSYR0cpSG6KyEXxpYeBdjtRhj
QU5Ka+rI+JAKHtNEVGop6oLnFjT/tbulAqlYy+pDCk6Al7/7pYZOKrgq21Xi
r+YHKrmvFW4ufgIuNvZTFRFRoHhQrC9L5xOgosrftyz9DEJDTb9t0qSA6vru
ANmrhaDXT/9V1ZdEYOvZU2106ifgdGicUPRNBIzHe3F+tEXgUT+euGyUCM57
9fm05xWDks3vEghHIqgXG3B1P0QGl6Torwk8/ghsz7l+7Z0uA2aTslfv/U4A
ijFLdZQb5cAw9+uTqccJgJHiOk1bXg6m6b5+n1FMAGmxbick4ipAUROXuEfu
ezC9+F/i4wtVoGE9jCY4Ix44fHwQKZBZA3K5xnyE8mOB6tp63hmeWvCp80qP
h2cswOt5tmr61YIMfufL51Rjwdd1T/b7xnXAvagmEa2MAfOXHr0uxTeA979c
a9L73oFCn9LSbIVmwNuKcywSjAbKkr9z9aPbgPDbhcNjG+FAvr0zqrSmDVDS
GQPG68PBaa/ZRxI7bcDfcS1XNTEciNZwn2O80w5iyr35x86HA5L1/TayeAeY
uHtnkjspDMzG861IlXYCrXGB9XCzUDBx7kxX/EInqLX40pusGAqGp7VKmIX/
Ag3itD0VMRR0K7r6jb/8CxIvHf7wvvItqGr/cyjhSheg+M73GJ5+Cz7gPeRZ
x7pBveLy8znRYBCb9+awF3cPuKm38vH0cBCIMkzcndTtAWpAmm3vfRAI/FJf
WZHVAy6aMSJy3EHAU0P4xmPPXsBGoR5eYQ8EBo+bPWZY+sHA67L/aHgDAI0H
Z5/V4UFAokeizQL8gaF5emuh3CBYG3hi1qrvD3LPgxq8/iDwCvXdqeb2BxZH
7Qq++w8C4f7M6rOfX4CyPyVvcSuD4LXaB3e2ej/wnM9KM6VxCKTlWZmUSzwH
fXSbKhtTQyCIihK0sOUL5BaCZPTohkHw9aCnoTW+YLTix9EVlWFwefAV9ylb
X6Bxn2XrXNowmKCv00lJfwZwv3OzRp6PgIamBqq5c0+BcYb2p7MfRoC1eE3e
HM9T8D2yL+5N0Qj4VCM0+qXvCbC6R/9adnEE/PJqSUyUewIqSYaWz01HgW6T
gmb/nDfwt6HmEVYaAyJnjioe8fMCDHj9Zxbz48CHx0XSQP4BuHXCEFNgmgAR
vVJPGNY9QLq61T7z8QkgdIub6dpPD3Dpoad33u0JoCDxuvor8ABR4x8f4ion
wM65nP/UrroD0d+LLqlxk4ANz/S+L8INePZt5zwqmAR+Zd+Z/zNzA7XrdAuX
WibBVaNLGSHibuC+FO/9dfopkKt5l+VymSsoiFO/p+M6BTSOVps3rbsATY9w
i2mdaXDebyxs7KEziAp9n1hqOQ1eNfQtI3rOYDLz82CYzzSY/l34jOmoMwgc
KTZV+T4NXP6b1J194wTa9UcNA4/OgGvqyzMkmfvA6pT8Vam1GcDPcEU4INUe
PB/sPOeaPAda9dj/mgrfBf9+XnD0LJkDDXvUQpljNkA5HIvy6ZgDm/Juh95+
sQELmulTAQzzgNVFqpfrtA0wzfAOSbafB4D6a9KOpjVQ9jje2y57cM/w2vXi
CrQEUZdjcL0H9/IOWu86pZuWYPEkm9TQwTk1dnTXaPCYJfjSu/50LpoC5EL7
83KLLQCXWp0o/cG9o2rn2LDe8h2wSaf0k89iAfBedVG2fGgOUl2XGxLuL4BB
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

          "]]}, Annotation[#, "Charting`Private`Tag$7375#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$7375#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.9999997959183675`, 4.9999997959183675`}, {0., 3.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 
                 TemplateBox[<|"color" -> GrayLevel[0]|>, 
                  "GrayLevelColorSwatchTemplate"], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8432587530275764`*^9, 3.8432588160539536`*^9, 3.8432589462210064`*^9, 
   3.843259018361926*^9, {3.8432590858573484`*^9, 3.843259095660656*^9}, 
   3.843259126810398*^9, 3.843259194028412*^9, 3.843259377882122*^9, 
   3.843260131016238*^9, {3.84341238140788*^9, 3.8434124021650524`*^9}, 
   3.8434124478529434`*^9, 3.8434126101907864`*^9, 3.8434126715647554`*^9, {
   3.8434856022268085`*^9, 3.843485635831899*^9}, 3.8681440988054028`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"a08d6d8c-e35c-4460-b8c4-7f92f72a77c3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$7466#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$7466#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c8l98X52OPbFKSmaRoUeTzPFdfWxQNI3skIaGSrErILtkZIQkh2Unu
NbOy99577+3n99d9ndd5n3Pe5zznvu774TN5cvsBgYSE5AElCcn/T9cJteWD
A1bkT36hufNVusS4M8dazy4rqmBkyDzSMiZ5k2lgI3+LFVn96g17/lRIilfK
du/JCivSpV48Ps9mIVXq+5F6cJwVta2MCKQ1fJeiFus4if6xouJnT6dOJC1L
hTwzuvE6ihU9U3oH5dZkrn0nfZpIcpUVbYTQ2uTLxVyjeKB46Zg+C5rKcVY+
OM0vzdpZYZ0QxIz4mR261394SN8u+2R6poYJ9ZhblYUmdks7L2DWH0YYUWCF
ye8EblFiwYtPlj9uMSD3dsvuJMyKePPjPd79SHokeu6oT1FBANHpEqOyYjA9
Uqmn+JQWGkBMaq6y++BPj0JjeWR+mQcQ91mIZfyv6NFEstNo3og/MT2Y31zR
jB59E51YkZPxI9KHLnz/IEaP5KQ1hj889CTWhPtcFSijQ37nZxbDnPWI61dl
jayL6JBOMK3sXal7RP7OXe/cXDp0VMbBQ8xPjejEadutmEyHntzjKfIJuUw8
E6npah1Ah+6lr2g7ZfMRvT8JlOVq0aH5FzX1JnKuxJxrfTP76nSo6M2SQkCA
O3GwO4xNSYUO6ekvKK0dfUeU5KI17ybSIdbjiS0lPEHEyahF6gM+OtRV7SxZ
HRNHZCOmXlTiokPd+Wpf14lfiDK9pveD2OhQX2+zv6xAEjHiRMd3Aar/841V
MuhMIyrG/LmpNEuLGCWWjly+lk9cDOjdJR+nRTwjlyue/vlF/OS2k1oyQIsO
eKunROyLiLOGUlTSLbTIi7eIfptYQgxT187dqDvEx/tLH50qJYLrL0xzKmnR
7amTpzizy4kf+XOhaCEtkq/U+qGUVEUcI1vh+pZOi45yn1BL4PtHlBy74Mgb
T4v0RpnVZTmbiH6VNq2RIbTob/uxRP2FFmL/t7QLrN60aIjznhXhRAfxos+0
v78zLQoxOmZGndhN9LAUnqJ4QosGj3IIqAf0EztumMu/MqFFZRj4UGgzRBQR
TYzfvEeL7mdKL87WjRBdGYb37JRpERnm2ddsOk5sXOC5P0OkRdlZ78i+S0wR
HbKiWPoFaNHZoedxm0ELxOrgLhuto7ToWJFPR/z7JeKJ50drG2lp0YWH5ylC
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
3HGZIvlPnQn/A3J6wHs=
          "]]}, Annotation[#, "Charting`Private`Tag$7466#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"w/ intuitive pulses\"", 
         StringForm["w/ intuitive pulses"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 
                 TemplateBox[<|"color" -> GrayLevel[0]|>, 
                  "GrayLevelColorSwatchTemplate"], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8432587530275764`*^9, 3.8432588160539536`*^9, 3.8432589462210064`*^9, 
   3.843259018361926*^9, {3.8432590858573484`*^9, 3.843259095660656*^9}, 
   3.843259126810398*^9, 3.843259194028412*^9, 3.843259377882122*^9, 
   3.843260131016238*^9, {3.84341238140788*^9, 3.8434124021650524`*^9}, 
   3.8434124478529434`*^9, 3.8434126101907864`*^9, 3.8434126715647554`*^9, {
   3.8434856022268085`*^9, 3.843485635831899*^9}, 3.8681440989340467`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"d2505872-f639-4ca1-8b7c-b7704ce45918"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = -5., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], -5, 5, 0.001}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = -5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, -5, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{626., {207.134033203125, 212.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8432587530275764`*^9, 3.8432588160539536`*^9, 3.8432589462210064`*^9, 
   3.843259018361926*^9, {3.8432590858573484`*^9, 3.843259095660656*^9}, 
   3.843259126810398*^9, 3.843259194028412*^9, 3.843259377882122*^9, 
   3.843260131016238*^9, {3.84341238140788*^9, 3.8434124021650524`*^9}, 
   3.8434124478529434`*^9, 3.8434126101907864`*^9, 3.8434126715647554`*^9, {
   3.8434856022268085`*^9, 3.843485635831899*^9}, 3.868144098950099*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"27c9e8e0-bb5a-4f72-89ce-c253ee4e850c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[CapitalOmega]0"]}], 
        "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.2"}], "}"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<intuitive1.gif\>\"", ",", "gif"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.843260137421753*^9, 3.8432601513272133`*^9}, {
  3.8434126770184407`*^9, 
  3.843412721275465*^9}},ExpressionUUID->"223e6f29-4b1f-4185-81eb-\
e112c6b0b40a"],

Cell[BoxData["\<\"intuitive1.gif\"\>"], "Output",
 CellChangeTimes->{3.843260147553011*^9, 
  3.843412705434619*^9},ExpressionUUID->"2e1d1575-0e76-4556-882b-\
2313e1a1af68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Intuitive", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "+", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]0", " ", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["w", "2"]}]], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", 
       RowBox[{"-", "tmax"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<w/ intuitive pulses\>\"", "]"}], ",",
          "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.8432587043900986`*^9, 3.8432587418230286`*^9}, {3.8432588153159046`*^9, 
   3.8432588153768034`*^9}, {3.8432589455706663`*^9, 3.843258945655137*^9}, {
   3.8432590166434994`*^9, 3.8432590225390444`*^9}, {3.8432590803975763`*^9, 
   3.8432590950563774`*^9}, {3.8432591262164955`*^9, 3.843259126366373*^9}, {
   3.843259192401531*^9, 3.8432591926731343`*^9}, {3.843259374207531*^9, 
   3.84325937579399*^9}, {3.8432601163249454`*^9, 3.8432601168637657`*^9}, 
   3.843411947499678*^9, {3.8434123654820533`*^9, 3.8434124016738377`*^9}, 
   3.843412469639544*^9, {3.8434125626268144`*^9, 3.8434125627014055`*^9}, {
   3.843412629173314*^9, 
   3.843412629252425*^9}},ExpressionUUID->"3ecf6e19-dfc4-42f1-9d82-\
761f6d3c050c"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8432588829209304`*^9, 3.8432588950895276`*^9}, 
   3.843259149148101*^9, {3.843259251057072*^9, 3.8432593103593483`*^9}, 
   3.8432601690720196`*^9, 3.843412563084735*^9, 
   3.843412629563264*^9},ExpressionUUID->"5161d156-7788-47f2-8130-\
cd784ab251e7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$126287#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$126287#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.84325665118006*^9, {3.8432588831065106`*^9, 3.843258895277294*^9}, 
   3.8432591493676353`*^9, {3.84325925127938*^9, 3.8432593105831413`*^9}, 
   3.8432601691868114`*^9, 3.843412563181636*^9, 
   3.8434126296613693`*^9},ExpressionUUID->"6f475e0c-7514-49e2-819b-\
b819fe7ad4ed"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
kmBv3fwc3b4lXrp+mIRo3Zl2tNw+4z6VcRIssrs60A5xE7d+/UCCcM2xTvR5
4eVjnV9ISPIY7Ea/eLLTxoCiwL9IvIddPymqkiJKQWbOZC/aUabs/YQkBen3
LvSz53NSSihYQkGO+dYhtFNW1GqfFRRMe8qNoHerWwZ1bKLAHn56jXYuXCS0
3E2BR3vCMLprKnSbiC8FV8VKB9n7NOh6UxlCwffF5uz+3RGb4sJ+o2C0wpx9
nz01OXzdeAqMu2q70Bf6Hb6cSaJgJqL1FfpvkfmNb9IpUCypZ8/rbrF/X24e
BUSaQxv6YuDSDbSQgo6kj8/Yep55JuZ2mwKvlv+w9+nRqndFvpqCulyLRnT2
9HDo4QYKylPOsvXoW5xh/ryZgmz/6jq0pwtnOO4vCpwVR9l6eg82qBFTFFTJ
hRWhc0TDp50/U1A2oF+IHlypWX+PoKFo65sC9N6gs96HFtBwK0knF+370fHy
oBoNZwZ3pKL9579Wbnaigfd7zFH069B79Hw3Gho7po6g/YZODmz2oUH41SME
7VOrfqXqIA2SqpsC2fNHeq++HUsDd5q3h63fxN+CjHIa6mQDTdh6uxUuffmA
BtF6njHbXy2/UjKPaZDRKt+Iti1QrI9vp2HaR0MPvcPHeduxcRo09N000GZ/
vdjtp8xAmE8YD11rnmeUq87AUbN8SbRJyWGlPi0GvNx6xNHGSTJ9zhsYcM04
KII23G67z8qWgSk36Vmc99L7KpannRjoc0r5hDbgT2g93sPAU51lM2g90YT3
JgEMkCVuE2idmj9D10czUKXsMoIuXJ21KySWAdXz64fQqy4EbryZwID+rMIA
WvMXCYKfxUB5oiibN+p6W08oljBgZ+7RgV4uPbI19QED5yJb2tCq705ISj1h
4O17HzavFK/WJXNHGFgVI9WEPpV45dXpaQas7w89RE+Gn1aWZbiQHjFah3b1
PLA3i8eF8EqFB+hHFvbX1ZS44HgkvAq9dq3BpFCTC3+eoCvQFxR+MFi/gQs/
CO+UoX8e66/dYs+FALWUEjZfKwqsHIO5oPuH5G208pmQTt9YLsi5yNxEz+zZ
6BuWywX3wxeE6KbVzNSpai4IyUsF7HlCVFWbtERgZntcPjq85EcbyXQRCG58
yXpmQoK/mDMPosK2XWOfr/2CVvGaBztjLrP7Tfhd7OQ/mgcnP8neQgfl+Bev
0xaFxvA1xWij51axOmJikJ5IlaLFST13rX4xkPnF6z46705tOL9sPujPmZSj
TQNskzQSxcFl02HWWlL6ZMkuCfBUCmQtd1dhv6nqAmhyd2TdusiGUzq7AF7q
mrFOOHDi7Kp2SThfps+6uVu0VN7qO1j0SYe1dfR2zczi76DBSJt1+bhvlZL8
Qhi21GStsSvKLvuXhZBowWfNWVr/OX14IVRUr2TdNiB6MdGOBwt+++an2dPv
rO/xINzrm5vd+415ilJwc+c3L7+8WP5kvBSk7/jm//+vDKItv/kfV9je4g==

          "]]}, Annotation[#, "Charting`Private`Tag$126369#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WajQvOItMUmFwqgFQMxpDlJ4Lhul9FEhVzNboZzH8xAVJtz8s50K3b+eIf9s
ah4CdwXFaZuoEP8Cx+2iuwvwuJOXwbmMClGZL2eQyiyC6RUu99xvVMjWWnkY
fVoEnQzO+YkcKuQsQnnsLvMSSLodq9NIpkL7gnMqHr+XQGCG+ZJPLBXSZFw3
rrmyDJw6DEklb6nQtyqTBuWYZSDhp3Tm9qVCFqdcfr1VWIGtCNIpfXcqxGyt
rsgcsQLzB0c3Q19QIYakc+o6wyswbPO3qvYJFXr1wU1NmAcHnT27Ajs2VMjK
w9QzzAoHtbJbsUL3qQj6P8p4Kw0HxZ/WSC0MqRAR7/VT94ZxkMWCc4jTpUIL
LgvH4gj+LMFzcbRdgwqtW0/azMnjIXR+9gbJdSrE0divKP0QD156U6VS8lTI
a66D2CkcD89qxvmeSBHqiU4SCMnHg5XAyLs0ESr0+Kq2s/UPPBhEDx7+EqBC
73pK/myNEfzQUf9jel5CfnxHzwU8HuQe9QwqclKhF4mM4/sEfyPys+O66zEq
FPTF5oEhwQ/xKrQW5jFQoV8D3ZeAEP+X23RmipIQn4i1zCTkU/9XH8pOTIW0
+gQSA3F4+OuN7WntU6Iue9bRsVE84Jcqbfw2KBHT/nRRbjMe/uiX9ZUtU6L0
mcD3K7l46K8tVsDNUKJYXbfW7BA8NAt9y+Mdp0Tyhj5npyzxUBGXd8JwkBJV
5n9mzZDCwxeSnNfhPZSo/PqU9yY5Hj4+ydqsb6VEwerxE2OdOIgcTDPfq6dE
XhOyIk8JfjlA6WOncDUlMpNX6ynSwYFr/nsZqxJKJJaR9QyjxoGpf/SxrmxK
9PRaLLu33Qp0wjalaxolKu5/XKXIuQJwYLDPlUSJLnO5ZjQ1LwOX48lxx7eE
+lgtcx+yLEPERc+ek8GUyF4Dkyj/tgTEC2P1Db6USDdVTFRIawn+mKVl/+dM
WK9IzHnddRF0T5K9x55SoroXdMJ+1ItQP2AdZvuQEk2duS1UGLsAGVoCjhUm
lChSKqPC4dM82MgUyJgqUaJwh4oen6xZGNhmFqaUo0RUGZ8MiblmQbXwOVeB
JCX6Ie3AeytuBs4LSJGTCFKiBQ96VSbvaVj8r6Yzk4kScV6+fZ0F/oD9epv5
yigF8gyc4bC7OgxjeRdvx/6iQFdeZIsksf6Gmw/fqkAPBeJT6znujRsEkQnd
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
1RbBOv0+j6jbdYh9l5xaY7kIMecCF2VrlGH+y6eJSK9F8GGzZfpJpgyhU5Wm
MsWLUKKaL9eRoAj9OtNGoWeWoEKt4OhrMwC/HS7h/tUlGOdYMPVxkwfX17uD
4neWwDCeLPjfZTngrKEzGA1ZAoMvtvbK36+C1QUJPeHtJfCfEXEBYkkoUYFI
EuZlYLzkIRs/JQ5UFuo9AxeWIdDF1BvaxeBL/L2br8yX4Syvek93gSgcFj0I
1/NYBlV3/mtzX0RAp+tZx7m4ZcAxHmSqm12CTfJAje72ZSh/Itk8G3kBVLgj
QjLmloFC28rhca0AxMsm/nAlWYE9ubn/iA/PgezzfFVu6RU4d0fe71waH/hN
DCg5pq/AhO3rxA6pUzBWrvHEtWoFds77Un3PPwFXo1Cs188ViK08N9CrwA6r
13MWQihxIJX1V4SkjJXAr2dY33HhgJWTFF+VzAyfdqNk467g4FQJ7yiRAiOY
5nq+TX+MAz21s9P4bUqo8F8v++yPA265HtzXHDI4Zvrgz9dkHNw86eErmkgM
DlIjtCUlONiTLmtRDv0n3850S6KqCwdLRvanLEx35c8vNprWzeNAOoLPguPL
hrxf/dWgFmI8KCr71Uav4OTHkr5+6yRwx/zj26O5r+bkrzrzDfeL4eHaQ2N3
eeZJ+dibCWTDmnhQNWMkunLjl/zaeQbh/3ONylGG4I3ddnlNEj+DOS88PDk6
fUllp0Y+e3jHeyUOD3L4w8CLWdnyZN/tcjYKCNzVdOC51eUtbxY+2bf3Aw9n
B8LO3n9xV77igf6/oz94SFQ1WNokSpb/71obP8VfPFj2Uc38aC2Rl6bnOh9I
swolxftBdm+a5Wdf/palPr4KH+OJjR8y9MtHz0bfCuVdBZEXNhFMkWPyino3
bRhFVsH0q4rFRs6M/CpG7R4puwqFZ6Itwy+tyH8Qanh7TH2VwG1j2iXL6/Ka
CV4Z8XdWQeEa65nwnzvye+RXyk9arALLDg1XlN4/+SzHjY4P9qvw31ZZHGkx
Mdwez/vD7b4KW8fZ6thoyIFE03Yn4/UqFGdW6b3/QgUFZTx056NXwUpAVEo8
iQ5Mz45y5aasgsf7co9qOyagjYyTEM5bBSE7kyn/QhaweUxnJt60CiTMDckF
xceBbbDpeWnvKhxjChzJeXYC6pR9gq6Or8Jb226VVf1TcOr09jeF3VWYpI+U
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
x300jQPhf+PxMu8=
          "]]}, Annotation[#, "Charting`Private`Tag$126369#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
NMXFiqq7EvH99vD//6+iGTfpcNSsPfwfvjMzug==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$126369#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"w/ intuitive pulses\"", 
         StringForm["w/ intuitive pulses"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.84325665118006*^9, {3.8432588831065106`*^9, 3.843258895277294*^9}, 
   3.8432591493676353`*^9, {3.84325925127938*^9, 3.8432593105831413`*^9}, 
   3.8432601691868114`*^9, 3.843412563181636*^9, 
   3.843412629809196*^9},ExpressionUUID->"dd8f40f9-1fdf-4c86-9765-\
061e3c5c8bae"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = -4.739, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], -5, 5, 0.001}}, Typeset`size$$ = {
    360., {178., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$126442$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = -5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$126442$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, -5, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{626., {207.134033203125, 212.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.84325665118006*^9, {3.8432588831065106`*^9, 3.843258895277294*^9}, 
   3.8432591493676353`*^9, {3.84325925127938*^9, 3.8432593105831413`*^9}, 
   3.8432601691868114`*^9, 3.843412563181636*^9, 
   3.8434126298792496`*^9},ExpressionUUID->"4a355152-cace-40e0-83c6-\
53b09cb52f68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "\[CapitalOmega]0"]}], 
        "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "tmax"}], ",", "tmax", ",", "0.2"}], "}"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<intuitive2.gif\>\"", ",", "gif"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.843260179137372*^9, 3.843260188001666*^9}, {
  3.8434126527323837`*^9, 
  3.8434126655082397`*^9}},ExpressionUUID->"14900515-ea65-4511-acad-\
b322798cb2fb"],

Cell[BoxData["\<\"intuitive2.gif\"\>"], "Output",
 CellChangeTimes->{3.843260184431874*^9, 
  3.843412663192785*^9},ExpressionUUID->"e42bd179-7118-495e-9f05-\
c4a8672f32fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["i"], "Input",
 CellChangeTimes->{
  3.843256625151123*^9},ExpressionUUID->"25fc7b6a-ffaf-463f-aba9-\
86af7c6d08c5"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.8432566254959292`*^9},ExpressionUUID->"d7ad0b58-698c-4ff4-8463-\
62e4ee786948"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.8432557961610703`*^9, 
  3.8432558067091208`*^9}},ExpressionUUID->"95efa697-dc13-48bc-93d4-\
4df6e5f2a96d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Raman", "Subchapter",
 CellChangeTimes->{{3.8435659548448553`*^9, 
  3.843565961514351*^9}},ExpressionUUID->"cd54f1e2-53f2-4fe9-aeaa-\
592a0e98aa59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Raman", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"6", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", 
      RowBox[{"100", "\[CapitalOmega]0"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]eff", " ", "=", " ", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", "0", "]"}], 
      RowBox[{
       RowBox[{"\[CapitalOmega]2", "[", "0", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[CapitalDelta]1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"\[Pi]", "/", "\[CapitalOmega]eff"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<Raman\>\"", "]"}], ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
        RowBox[{"Abs", "[", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "tmax", ",", "0.1"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.843259031509108*^9, 3.843259032518113*^9}, {3.8432591062599835`*^9, 
   3.8432591063515716`*^9}, {3.843259168095916*^9, 3.8432591750256915`*^9}, {
   3.8432609839650316`*^9, 3.843260984054989*^9}, {3.8433912027153177`*^9, 
   3.843391235234599*^9}, {3.843411420110826*^9, 3.8434114422214174`*^9}, 
   3.843411756039548*^9, {3.8434119960709457`*^9, 3.843412090519328*^9}, {
   3.8434121506521535`*^9, 3.8434122865773706`*^9}, {3.843566439953267*^9, 
   3.843566599459092*^9}, 3.84356688227462*^9, {3.843566999671974*^9, 
   3.843567002883794*^9}, {3.8435670420023746`*^9, 3.843567050852023*^9}, 
   3.8435671048326335`*^9, {3.8435671482155685`*^9, 3.843567151589654*^9}, {
   3.8435672226863165`*^9, 
   3.8435672320834775`*^9}},ExpressionUUID->"ebf1ee27-4942-4710-a1a4-\
d07841c33f3d"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.84356713575966*^9, {3.8435672086498137`*^9, 3.8435672334778147`*^9}, 
   3.8435673281809826`*^9},ExpressionUUID->"ce38df60-b3f6-4978-84e2-\
d793b3a2eddd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXPfH/26y8vsGMDgg337tufeH95fsYfzL6+/9+79
EzhfaO+nbVEXv8L5TfF6DVKmDA4w/t2Xi4TepLHC+fsetr0p5uSG8yssVi6+
rSoA51/edqwk4r8QnP/g5+Ga9tOicP5UDlPXKekScD7vuVjDP9bScL5e/K+7
jg9k4fyGqN0P5lgrwPmnEkJT3BYrwvkvfTRP3PukBOdnitzcuyROBc532vfj
3OHDqnD+e9+gAxcF1OH8vzvanXmrNBDu5fy+zPy0JpyvYuY0p99CG84/6PJ3
jcN8HTjfyPLT3AdvdeF8Fs7DCusi9OH8sPvPHLeGGiD42iqMB34j+Oyp/p0P
1xvC+YsmTm/8FW4E579bfdZJi88Yzk/bvnsi20EE/8TWYwG30k3g/NsL9984
ImMK599ouHph2VEEnzFwcZhpthlCPV/80lty5nD+/P3mKeXHEHyRuH+vtWos
4Pzi9w8fX1W1hPP/FdZm6p5B8K0ese2Y3WAF5ye4ri1j1LSG882nOf6rvY/g
W93oFV4+yQbOV+f9PuO4pS2cf1Tf7/m/dwi+r+uhpboz7OB8Jp93Hzns7OH8
dAcO9t8fEfzbk+XdPvk4wPm167tKz1Uj+PKnvy5ZtQrBBwAnnQGG
          "]]}, Annotation[#, "Charting`Private`Tag$15019#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXPfH/26y8vsGMDgg337tufeH95fsYfzL6+/9+79
EzhfaO+nbVEXv8L5TfF6DVKmDA4w/t2Xi4TepLHC+fsetr0p5uSG8yssVi6+
rSoA51/edqwk4r8QnP/g5+Ga9tOicP5UDlPXKekScD7vuVjDP9bScL5e/K+7
jg9k4fyGqN0P5lgrwPmnEkJT3BYrwvkvfTRP3PukBOdnitzcuyROBc532vfj
3OHDqnD+e9+gAxcF1OH8vzvanXmrNBDu5fy+zPy0JpyvYuY0p99CG84/6PJ3
jcN8HTjfyPLT3AdvdeF8Fs7DCusi9OH8sPvPHLeGGiD42iqMB34j+Oyp/p0P
1xvC+YsmTm/8FW4E579bfdZJi88Yzk/bvnsi20EE/8TWYwG30k3g/NsL9984
ImMK599ouHph2VEEnzFwcZhpthlCPV/80lty5nD+/P3mKeXHEHyRuH+vtWos
4Pzi9w8fX1W1hPP/FdZm6p5B8K0ese2Y3WAF5ye4ri1j1LSG882nOf6rvY/g
W93oFV4+yQbOV+f9PuO4pS2cf1Tf7/m/dwi+r+uhpboz7OB8Jp93Hzns7OH8
dAcO9t8fEfzbk+XdPvk4wPm167tKz1Uj+PKnvy5ZtQrBBwAnnQGG
          "]]}, Annotation[#, "Charting`Private`Tag$15019#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435673282692976`*^9},ExpressionUUID->"5601ba8e-961f-4ef0-9a85-\
07a470537bd0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JtL2fJp9lJODODtiuy11SpH2P3Rg5Og=
          "]]}, Annotation[#, "Charting`Private`Tag$15101#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$15101#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$15101#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"Raman\"", 
         StringForm["Raman"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435673295348077`*^9},ExpressionUUID->"c8da277d-8a47-47ad-88df-\
742c4214bc63"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 
      Rational[100, 3], 0.1}}, Typeset`size$$ = {
    253.64286107644438`, {62.74842191104777, 14.35205078125}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Tau]$15174$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$15174$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Abs[
          Part[$CellContext`soln, 1]], 
         Abs[
          Part[$CellContext`soln, 2]], 
         Abs[
          
          Part[$CellContext`soln, 
           3]], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0, 
         Rational[100, 3], 0.1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{619., {66.134033203125, 71.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.843567329591735*^9},ExpressionUUID->"7a77cc61-c62a-4a88-8a66-\
13183fedc916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Raman", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", 
      RowBox[{"100", "\[CapitalOmega]0"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]eff", " ", "=", " ", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "[", "0", "]"}], 
      RowBox[{
       RowBox[{"\[CapitalOmega]2", "[", "0", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[CapitalDelta]1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"tmax", "=", 
      RowBox[{"\[Pi]", "/", "\[CapitalOmega]eff"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\n", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<Raman\>\"", "]"}], ",", "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
        RowBox[{"Abs", "[", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "tmax", ",", "0.1"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.843259031509108*^9, 3.843259032518113*^9}, {3.8432591062599835`*^9, 
   3.8432591063515716`*^9}, {3.843259168095916*^9, 3.8432591750256915`*^9}, {
   3.8432609839650316`*^9, 3.843260984054989*^9}, {3.8433912027153177`*^9, 
   3.843391235234599*^9}, {3.843411420110826*^9, 3.8434114422214174`*^9}, 
   3.843411756039548*^9, {3.8434119960709457`*^9, 3.843412090519328*^9}, {
   3.8434121506521535`*^9, 3.8434122865773706`*^9}, {3.843566439953267*^9, 
   3.843566599459092*^9}, 3.84356688227462*^9, {3.843566999671974*^9, 
   3.843567002883794*^9}, {3.8435670420023746`*^9, 3.843567050852023*^9}, 
   3.8435671048326335`*^9, {3.8435671482155685`*^9, 3.843567151589654*^9}, {
   3.8435672226863165`*^9, 3.8435672320834775`*^9}, {3.8435672841150255`*^9, 
   3.8435672841812887`*^9}, 
   3.843567320328227*^9},ExpressionUUID->"993068bb-4fae-412b-bccc-\
b46c25137a70"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.84356713575966*^9, {3.8435672086498137`*^9, 3.8435672334778147`*^9}, 
   3.843567285581501*^9, 
   3.843567332025097*^9},ExpressionUUID->"7d000d0a-527b-49e1-beb3-\
a1009de510b9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXPfH/26y8vsGMDgg337tufeH95fsYfzL6+/9+79
EzhfaO+nbVEXv8L5TfF6DVKmDA4w/t2Xi4TepLHC+fsetr0p5uSG8yssVi6+
rSoA51/edqwk4r8QnP/g5+Ga9tOicP5UDlPXKekScD7vuVjDP9bScL5e/K+7
jg9k4fyGqN0P5lgrwPmnEkJT3BYrwvkvfTRP3PukBOdnitzcuyROBc532vfj
3OHDqnD+e9+gAxcF1OH8vzvanXmrNBDu5fy+zPy0JpyvYuY0p99CG84/6PJ3
jcN8HTjfyPLT3AdvdeF8Fs7DCusi9OH8sPvPHLeGGiD42iqMB34j+Oyp/p0P
1xvC+YsmTm/8FW4E579bfdZJi88Yzk/bvnsi20EE/8TWYwG30k3g/NsL9984
ImMK599ouHph2VEEnzFwcZhpthlCPV/80lty5nD+/P3mKeXHEHyRuH+vtWos
4Pzi9w8fX1W1hPP/FdZm6p5B8K0ese2Y3WAF5ye4ri1j1LSG882nOf6rvY/g
W93oFV4+yQbOV+f9PuO4pS2cf1Tf7/m/dwi+r+uhpboz7OB8Jp93Hzns7OH8
dAcO9t8fEfzbk+XdPvk4wPm167tKz1Uj+PKnvy5ZtQrBBwAnnQGG
          "]]}, Annotation[#, "Charting`Private`Tag$15414#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfXPfH/26y8vsGMDgg337tufeH95fsYfzL6+/9+79
EzhfaO+nbVEXv8L5TfF6DVKmDA4w/t2Xi4TepLHC+fsetr0p5uSG8yssVi6+
rSoA51/edqwk4r8QnP/g5+Ga9tOicP5UDlPXKekScD7vuVjDP9bScL5e/K+7
jg9k4fyGqN0P5lgrwPmnEkJT3BYrwvkvfTRP3PukBOdnitzcuyROBc532vfj
3OHDqnD+e9+gAxcF1OH8vzvanXmrNBDu5fy+zPy0JpyvYuY0p99CG84/6PJ3
jcN8HTjfyPLT3AdvdeF8Fs7DCusi9OH8sPvPHLeGGiD42iqMB34j+Oyp/p0P
1xvC+YsmTm/8FW4E579bfdZJi88Yzk/bvnsi20EE/8TWYwG30k3g/NsL9984
ImMK599ouHph2VEEnzFwcZhpthlCPV/80lty5nD+/P3mKeXHEHyRuH+vtWos
4Pzi9w8fX1W1hPP/FdZm6p5B8K0ese2Y3WAF5ye4ri1j1LSG882nOf6rvY/g
W93oFV4+yQbOV+f9PuO4pS2cf1Tf7/m/dwi+r+uhpboz7OB8Jp93Hzns7OH8
dAcO9t8fEfzbk+XdPvk4wPm167tKz1Uj+PKnvy5ZtQrBBwAnnQGG
          "]]}, Annotation[#, "Charting`Private`Tag$15414#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435672856566453`*^9, 
   3.8435673321162815`*^9},ExpressionUUID->"3bd4d089-1aa6-4e52-bc9c-\
8635b4982c95"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8q8k0eD/X4KSzg==
          "]]}, Annotation[#, "Charting`Private`Tag$15496#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
TUhOJvpJ/ikWPVAU/w8o2SHN
          "]]}, Annotation[#, "Charting`Private`Tag$15496#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rJDwP9LgzBg=
          "]]}, Annotation[#, "Charting`Private`Tag$15496#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"Raman\"", 
         StringForm["Raman"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435672856566453`*^9, 
   3.8435673329987884`*^9},ExpressionUUID->"d29148d0-dd20-42d5-824f-\
4620b0fd4dbb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 
      Rational[100, 3], 0.1}}, Typeset`size$$ = {
    275.0852438889444, {62.74842191104777, 14.35205078125}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Tau]$15569$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$15569$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Abs[
          Part[$CellContext`soln, 1]], 
         Abs[
          Part[$CellContext`soln, 2]], 
         Abs[
          
          Part[$CellContext`soln, 
           3]], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0, 
         Rational[100, 3], 0.1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{619., {66.134033203125, 71.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.843567135751089*^9, {3.8435672086411276`*^9, 3.8435672335513563`*^9}, 
   3.8435672856566453`*^9, 
   3.84356733308298*^9},ExpressionUUID->"3e701b5a-15cd-4957-b71b-\
4590fd93b818"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc graphics", "Chapter",
 CellChangeTimes->{{3.843486044746029*^9, 
  3.8434860493876853`*^9}},ExpressionUUID->"7be54343-b5ba-4552-b3d9-\
01972d0e2f08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Intuitive", " ", "pulse", " ", "sequence"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0", "=", 
     RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "[", "t_", "]"}], ":=", "0"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]2", "[", "t_", "]"}], ":=", "\[CapitalOmega]0"}],
     " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]1", " ", "=", " ", 
     RowBox[{"\[CapitalDelta]2", " ", "=", " ", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], "0"},
        {
         RowBox[{
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", "2"}], 
         "\[CapitalDelta]1", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}]},
        {"0", 
         RowBox[{
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", "2"}], 
         RowBox[{"\[CapitalDelta]1", "-", "\[CapitalDelta]2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}], ",", "0"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "start", " ", "with", " ", "atom", " ", "in", " ", "ground", " ", 
     "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", 
     RowBox[{"\[Pi]", "/", "\[CapitalOmega]0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "sys"}], "}"}], "=", 
     RowBox[{"BuildSchroedingerSystem", "[", 
      RowBox[{"H", ",", "\[Psi]0", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "/", 
        "\[CapitalOmega]0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[CapitalOmega]1\>\"", ",", "\"\<\[CapitalOmega]2\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"2\"},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"3\"},\"Ket\"]\)\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plt", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "^", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", "\"\<w/ intuitive pulses\>\"", "]"}], ",",
          "Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"TorqueVectorSphere", "[", 
       RowBox[{
        RowBox[{"soln", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"soln", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
        ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
          "\[CapitalOmega]0"]}]}], "]"}], "/.", 
      RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "tmax", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843254872519724*^9, 3.8432549370779524`*^9}, {
   3.8432550443911943`*^9, 3.843255045976348*^9}, {3.8432550883006806`*^9, 
   3.8432551794194803`*^9}, {3.843255238006387*^9, 3.843255274121599*^9}, {
   3.843255725684619*^9, 3.8432557901818933`*^9}, {3.843256202008388*^9, 
   3.8432562045027933`*^9}, {3.843256241426007*^9, 3.8432562428920975`*^9}, {
   3.843256316183221*^9, 3.8432563232941895`*^9}, {3.8432585905467834`*^9, 
   3.843258591415764*^9}, {3.8432586403057795`*^9, 3.843258660116952*^9}, {
   3.8432587043900986`*^9, 3.8432587418230286`*^9}, {3.8432588153159046`*^9, 
   3.8432588153768034`*^9}, {3.8432589455706663`*^9, 3.843258945655137*^9}, {
   3.8432590166434994`*^9, 3.8432590225390444`*^9}, {3.8432590803975763`*^9, 
   3.8432590950563774`*^9}, {3.8432591262164955`*^9, 3.843259126366373*^9}, {
   3.843259192401531*^9, 3.8432591926731343`*^9}, {3.843259374207531*^9, 
   3.84325937579399*^9}, {3.8432601163249454`*^9, 3.8432601168637657`*^9}, 
   3.843411947499678*^9, {3.8434123654820533`*^9, 3.8434124016738377`*^9}, 
   3.843412469639544*^9, {3.8434125626268144`*^9, 3.8434125627014055`*^9}, {
   3.843412629173314*^9, 3.843412629252425*^9}, {3.8434861847900686`*^9, 
   3.84348623458817*^9}, {3.8434862740781665`*^9, 3.8434863323519373`*^9}, {
   3.8434865167324033`*^9, 3.8434865515373974`*^9}, 
   3.84348659996515*^9},ExpressionUUID->"28d47736-1171-4789-bfd3-\
8493d16d8e4b"],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8434862359874125`*^9, {3.8434862750270576`*^9, 3.8434863328386097`*^9}, {
   3.843486518551592*^9, 3.8434865520315685`*^9}, 
   3.84348660035861*^9},ExpressionUUID->"b3b74379-86b1-41d1-8d0d-\
3231f3415a1d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF0HssFAAcB/DDNco6TsqOjp1O5RUTSioVizxqjibLa0K6XshWWk3X7iSP
ztpN5P2IuDjckbnziEuRRzqGjVO6GXlvzo2Wq7b6/X7bd999/vvuR4u8zYjW
JBAIfn/yt72jZ4c65pxOEv4d0d04bopi6Pbfh4ty8oUUOtinf7ShgOIIDopS
tT6neIAn7Z64Z1ICwcW7L6SkUaLALB3hgaeURPCl4BLByiobrKtmhXiacsEW
/kuzXek88N0BF7ectVywkYgs19AoAjdNu/cNHi8FdzILTIIXysHK/Sf0am5W
gjU3+PomFtVgZ3VEU0DtG3Af23Gg20oANsua36haqgPPq6bkI/YN4PIf4l7S
MyGYRK1cVihE4IxrjTHF9Cbw+im+Ijb5LTjRQSra09UMnqqVpg/RWsA/mcN5
lvfFYOvT2lsxYgnYs5R2td6oDf9FDTf/FtIOtlm4qDvq1wHepbeiI91EE9vz
BPvy34GvO4rHt/t0gvnnIovb1tHKeWP9mewucGOApxbPQwpO9uIUiWbQtEnv
sTLOe/CxI2wexaEbHGI6uKEhQyt7M6fjWB/AOcSwRAb9I+6XN5ZqStHbHrIC
XeJ7wISqMMG0QS844aUg06AT3WqdqkO+9QlM9k6weUzqA0/YfpYlSdB1hW50
RVg/OFTgTKZuoR9xSlgT1QPgmllqHsl3EJxawImQn0dHMRYtav3ReyWSOr8g
dBr3cndGJDrWOXd1RxLanG3opV2B3jr6YOfoa/T44vcvFXx0VpAw9Gw9Wm3F
uMORoCeGuIVaMnRziuqKbATNcw23LBtD+7w6JDojR7fc6+9hzaGzbZ24/gvo
+On8QNoy+qDvjamONTRRY7g8S4X+2ujKjNhES5hldva/0C/MdJVqNfo31po0
fw==
          "]]}, Annotation[#, "Charting`Private`Tag$152513#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6Z2DGDwwX6BqH9bl2SKPYzfyLFZvVOy
BM6PiFy4/sPHFjif+39jjLtcP5yvGvjuxeHuKXB++TlL+xlfZsL54lsE7zEy
zofztz1yPnPeZhGcfyhrrnTkmyVw/lc1W/61ucvhfKafqwWkVVfB+Wb/E7YF
r1sD559pMTl3TGs9nC8/4fXPle82wPmvv9+/d9VgE5y/5NXuU3x9m+F8Ptnl
75882QLn92RuTVugsg3O/+aw+klG/XY4v8ToyBaxwzvg/PvrjnRfVNwF5//O
ujJbs2o3nK/tyP4vbfceON99kWL6RvF9iPCSjVd6GLMfztd5E8p93fcAnC/M
/4HjyC8En2X/7PXKcw7C+dkmu29yeh+C81d7Ji3Y9w3B//paSuDZtMNw/tZg
d+YpLkfg/HqP1vlbniH4ine9bixuPQrnW5m3TJE0Ogbnx8id/8l4GcH/eqr3
UUHjcTh/BktcSZDKCYT7721dxHQEwWetbQyxLDwJ5zOsjFv/SOgUnF80a32v
0CEEf692B4dg3mk4X9CrSKeJ7wycf0f3wuXKPQj+hnn2Kk/izsL5sevNBGX/
IfgNrQsb76w6B+evfSE7m8/nPJyv1CLiwb4MwZ8uz/31/38EHwADHAsH
          "]]}, 
        Annotation[#, "Charting`Private`Tag$152513#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalOmega]1\"", "\"\[CapitalOmega]2\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8434862360653286`*^9, {3.8434862751040745`*^9, 3.843486332913601*^9}, {
   3.84348651863166*^9, 3.843486552111739*^9}, 
   3.84348660043631*^9},ExpressionUUID->"548baea0-61e1-4886-b7b8-\
e95a384db74c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0HssFAAcB/DDNco6TsqOjp1O5RUTSioVizxqjibLa0K6XshWWk3X7iSP
ztpN5P2IuDjckbnziEuRRzqGjVO6GXlvzo2Wq7b6/X7bd999/vvuR4u8zYjW
JBAIfn/yt72jZ4c65pxOEv4d0d04bopi6Pbfh4ty8oUUOtinf7ShgOIIDopS
tT6neIAn7Z64Z1ICwcW7L6SkUaLALB3hgaeURPCl4BLByiobrKtmhXiacsEW
/kuzXek88N0BF7ectVywkYgs19AoAjdNu/cNHi8FdzILTIIXysHK/Sf0am5W
gjU3+PomFtVgZ3VEU0DtG3Af23Gg20oANsua36haqgPPq6bkI/YN4PIf4l7S
MyGYRK1cVihE4IxrjTHF9Cbw+im+Ijb5LTjRQSra09UMnqqVpg/RWsA/mcN5
lvfFYOvT2lsxYgnYs5R2td6oDf9FDTf/FtIOtlm4qDvq1wHepbeiI91EE9vz
BPvy34GvO4rHt/t0gvnnIovb1tHKeWP9mewucGOApxbPQwpO9uIUiWbQtEnv
sTLOe/CxI2wexaEbHGI6uKEhQyt7M6fjWB/AOcSwRAb9I+6XN5ZqStHbHrIC
XeJ7wISqMMG0QS844aUg06AT3WqdqkO+9QlM9k6weUzqA0/YfpYlSdB1hW50
RVg/OFTgTKZuoR9xSlgT1QPgmllqHsl3EJxawImQn0dHMRYtav3ReyWSOr8g
dBr3cndGJDrWOXd1RxLanG3opV2B3jr6YOfoa/T44vcvFXx0VpAw9Gw9Wm3F
uMORoCeGuIVaMnRziuqKbATNcw23LBtD+7w6JDojR7fc6+9hzaGzbZ24/gvo
+On8QNoy+qDvjamONTRRY7g8S4X+2ujKjNhES5hldva/0C/MdJVqNfo31po0
fw==
          "]]}, Annotation[#, "Charting`Private`Tag$152595#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$152595#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0mk4lWsXB3DTwWkglCISNqojyYk08K9MhQZzhmQOFdGElMgmUyRTUoiE
MoUtosyO7L0fU1KmUqYMTxpQGd7n/XBf9/W7/h/ute61pB08jZ25ODg4Jqnz
/1vfebStekxVc684I3HXjfa9PFri5wbEVsMgQfnffIVozX9Tk1KKxWg4fURH
h6ZQoPlZghZ4WV4JfPJF2WP0Gk0D1ttn98V2YH7uRlOPPKFJi5R8tCS1CyO5
CzpHzbs15/UdE+3lNcFQFdZh0j9qfgnurLdP2I+RsMepme9GNC2cZqtixbSh
sN/Ar1Ce1KzXEi+rS9GF+4g2+zLju6ayrEbhD6lDqIwtbVE2n9NM4bLLkcsw
wPUsxZAg7wVN/sGgh+byR9CwtPUYg86Jig/trDrTY7i78r7z5RgenDvmpG+T
YITSun7r4Hd86NsWqhUlZooUjybDQHlBxKWuq5azNkN8lIq/erwQ9AVz975M
MUejp/13M4YIGFNMVVLKEocf6vJymq/DGVvbZ6H2Vkhvn1W41SkOGTaptDHD
GutL2Ir7vCVxK094k5G8LT7+WbYtjC4NHcnMzLFTJ2FrzqKJccviWmPyqhpT
O+zrVTPYE0PDDjXFKMsEe2zSeDOg+k4BaWuOhoSLOYGvKimbQ34brrAS680r
nBCuvzJRMEYZ5vQPXLLWzvDITggYiduOFT+9Al6kuKA3UoBruvRf+HTG+UxI
uYHX2v6bq5k6TCL7GM+r3TCVHxz5ImYXlLTlfwbbuyNVT31fV8dufC4u85LM
OA3RuR2PHL00YHTnvfsReQ8Eq6avmgreD0UD2RzxJg9MuF/JYOw/AH7uMyPD
pzzRvr1n0oFLCyfLF4temZ7DdoHlfi7R2lizOUbpeIIXxH35xdZ16yGQv1gh
TOwCxhXSp8VoR7FF7/bNZ+cuoGj6O8928WNop3uO9TRdwNXy5SX3M4+Bxq34
ROnSRYTkm3ccqzZC40KmUmf7Jcx4js5IiJhixfcEValIX5zmPX5YS94Spdsv
Jhz85As77tCwiXZL2J4zmfXa7YfZ7mJGX6AVCiYFy+tH/cBT1lGUOGwN49Gb
e911/JH7Pb3WtcUWSX1+WqWL19CZKVq9K9AB+yUsM/vNAmDcltb8eswBX6x2
/sWfF4ARhZoTASaO2DDh65i39Trur77IZ7LFCZ5uanIcvdfhS5sOzRhyhrBT
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$152595#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox["\"w/ intuitive pulses\"", 
         StringForm["w/ intuitive pulses"], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8434862360653286`*^9, {3.8434862751040745`*^9, 3.843486332913601*^9}, {
   3.84348651863166*^9, 3.843486552111739*^9}, 
   3.843486600539222*^9},ExpressionUUID->"e1f25d5d-ba43-4d86-844e-\
2c280a5a1291"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 
      Rational[1, 4], 0.001}}, Typeset`size$$ = {
    322.0706254732013, {43.72132230167277, 14.35205078125}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Tau]$152668$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$152668$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ReplaceAll[
        $CellContext`TorqueVectorSphere[
         Part[$CellContext`soln, 1], I Part[$CellContext`soln, 2], 
         Part[$CellContext`soln, 
          3], $CellContext`\[CapitalOmega]2[$CellContext`t]/$CellContext`\
\[CapitalOmega]0, 
         0, -($CellContext`\[CapitalOmega]1[$CellContext`t]/$CellContext`\
\[CapitalOmega]0)], $CellContext`t -> $CellContext`\[Tau]$$], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0, 
         Rational[1, 4], 0.001}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{626., {56.134033203125, 61.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8434862360653286`*^9, {3.8434862751040745`*^9, 3.843486332913601*^9}, {
   3.84348651863166*^9, 3.843486552111739*^9}, 
   3.843486600620098*^9},ExpressionUUID->"78395b74-dde4-436a-92fc-\
b3a4529b7573"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 5, 3, 34018505674679954269, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565899793275*^9},ExpressionUUID->"95c37657-a497-40f5-9931-\
c877bd3ca5e1"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 5, 4, 34018505674679954269, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843565899926493*^9},ExpressionUUID->"9eec9274-d669-42e5-ad48-\
9eec5d575e54"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"soln\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"3\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 5, 5, 34018505674679954269, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435658999725666`*^9},ExpressionUUID->"8150fd29-88cc-45da-9163-\
8b9e2ea00886"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 5, 6, 34018505674679954269, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8435659000281*^9},ExpressionUUID->"c0f2ca56-52f0-4367-945c-c395aabefa62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"TorqueVectorSphere", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"soln", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"\[CapitalOmega]2", "[", "t", "]"}], "\[CapitalOmega]0"], 
         ",", "0", ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[CapitalOmega]1", "[", "t", "]"}], 
           "\[CapitalOmega]0"]}]}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0", ",", "tmax", ",", 
        RowBox[{"tmax", "/", "10"}]}], "}"}]}], " ", "]"}], ",", 
    RowBox[{"ImageResolution", "\[Rule]", " ", "400"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8434860506773124`*^9, 3.843486091639744*^9}, {
  3.843486134169012*^9, 3.843486148739348*^9}, {3.843486344671836*^9, 
  3.84348637362665*^9}, {3.8434864421282206`*^9, 3.8434864548027825`*^9}, {
  3.8434866138626623`*^9, 
  3.843486618008461*^9}},ExpressionUUID->"8399ffbe-4a66-4778-9279-\
88334c9266d9"],

Cell[BoxData[
 Graphics3DBox[{{
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[1., 0.], Complex[0., 0.]}}, {{0, 0, 0}, {0., 
        1., 0.}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {Complex[0., 0.], Complex[1., 0.], 0}}, {{0, 0, 0}, {
        0., 1., 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[1., 0.], 0}, {
        Complex[0., 0.], Complex[1., 0.], Complex[0., 0.]}}, {{0., 1., 0}, {
        0., 1., 0.}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[0., 0.]}}, {{0, 0, 0}, {0, 0, 0.}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[0., 0.]}, {
        Complex[0., 0.], Complex[1., 0.], Complex[0., 0.]}}, {{0, 0, 0.}, {0.,
         1., 0.}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.9876883219134552, 0.], 
         Complex[-0.15643444258930875`, 0.]}}, {{0, 0, 0}, {0., 
        0.9876883219134552, -0.15643444258930875`}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.9876883219134552, 0.], 0}}, {{0, 0, 0}, {
        0., 0.9876883219134552, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.9876883219134552, 0.], 0}, {
        Complex[0., 0.], Complex[0.9876883219134552, 0.], 
         Complex[-0.15643444258930875`, 0.]}}, {{0., 0.9876883219134552, 0}, {
        0., 0.9876883219134552, -0.15643444258930875`}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.15643444258930875`, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.15643444258930875`}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.15643444258930875`, 0.]}, {
        Complex[0., 0.], Complex[0.9876883219134552, 0.], 
         Complex[-0.15643444258930875`, 0.]}}, {{
        0, 0, -0.15643444258930875`}, {0., 
        0.9876883219134552, -0.15643444258930875`}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.9510564744239817, 0.], 
         Complex[-0.30901696020085, 0.]}}, {{0, 0, 0}, {0., 
        0.9510564744239817, -0.30901696020085}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.9510564744239817, 0.], 0}}, {{0, 0, 0}, {
        0., 0.9510564744239817, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.9510564744239817, 0.], 0}, {
        Complex[0., 0.], Complex[0.9510564744239817, 0.], 
         Complex[-0.30901696020085, 0.]}}, {{0., 0.9510564744239817, 0}, {0., 
        0.9510564744239817, -0.30901696020085}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.30901696020085, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.30901696020085}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.30901696020085, 0.]}, {
        Complex[0., 0.], Complex[0.9510564744239817, 0.], 
         Complex[-0.30901696020085, 0.]}}, {{0, 0, -0.30901696020085}, {0., 
        0.9510564744239817, -0.30901696020085}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.8910062004251961, 0.], 
         Complex[-0.4539903190562935, 0.]}}, {{0, 0, 0}, {0., 
        0.8910062004251961, -0.4539903190562935}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.8910062004251961, 0.], 0}}, {{0, 0, 0}, {
        0., 0.8910062004251961, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.8910062004251961, 0.], 0}, {
        Complex[0., 0.], Complex[0.8910062004251961, 0.], 
         Complex[-0.4539903190562935, 0.]}}, {{0., 0.8910062004251961, 0}, {
        0., 0.8910062004251961, -0.4539903190562935}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.4539903190562935, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.4539903190562935}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.4539903190562935, 0.]}, {
        Complex[0., 0.], Complex[0.8910062004251961, 0.], 
         Complex[-0.4539903190562935, 0.]}}, {{0, 0, -0.4539903190562935}, {
        0., 0.8910062004251961, -0.4539903190562935}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.8090169717872281, 0.], 
         Complex[-0.5877852047580735, 0.]}}, {{0, 0, 0}, {0., 
        0.8090169717872281, -0.5877852047580735}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.8090169717872281, 0.], 0}}, {{0, 0, 0}, {
        0., 0.8090169717872281, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.8090169717872281, 0.], 0}, {
        Complex[0., 0.], Complex[0.8090169717872281, 0.], 
         Complex[-0.5877852047580735, 0.]}}, {{0., 0.8090169717872281, 0}, {
        0., 0.8090169717872281, -0.5877852047580735}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.5877852047580735, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.5877852047580735}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.5877852047580735, 0.]}, {
        Complex[0., 0.], Complex[0.8090169717872281, 0.], 
         Complex[-0.5877852047580735, 0.]}}, {{0, 0, -0.5877852047580735}, {
        0., 0.8090169717872281, -0.5877852047580735}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.7071065084539642, 0.], 
         Complex[-0.7071064612616781, 0.]}}, {{0, 0, 0}, {0., 
        0.7071065084539642, -0.7071064612616781}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.7071065084539642, 0.], 0}}, {{0, 0, 0}, {
        0., 0.7071065084539642, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.7071065084539642, 0.], 0}, {
        Complex[0., 0.], Complex[0.7071065084539642, 0.], 
         Complex[-0.7071064612616781, 0.]}}, {{0., 0.7071065084539642, 0}, {
        0., 0.7071065084539642, -0.7071064612616781}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.7071064612616781, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.7071064612616781}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.7071064612616781, 0.]}, {
        Complex[0., 0.], Complex[0.7071065084539642, 0.], 
         Complex[-0.7071064612616781, 0.]}}, {{0, 0, -0.7071064612616781}, {
        0., 0.7071065084539642, -0.7071064612616781}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.5877852220708565, 0.], 
         Complex[-0.8090168934781288, 0.]}}, {{0, 0, 0}, {0., 
        0.5877852220708565, -0.8090168934781288}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.5877852220708565, 0.], 0}}, {{0, 0, 0}, {
        0., 0.5877852220708565, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.5877852220708565, 0.], 0}, {
        Complex[0., 0.], Complex[0.5877852220708565, 0.], 
         Complex[-0.8090168934781288, 0.]}}, {{0., 0.5877852220708565, 0}, {
        0., 0.5877852220708565, -0.8090168934781288}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.8090168934781288, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.8090168934781288}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.8090168934781288, 0.]}, {
        Complex[0., 0.], Complex[0.5877852220708565, 0.], 
         Complex[-0.8090168934781288, 0.]}}, {{0, 0, -0.8090168934781288}, {
        0., 0.5877852220708565, -0.8090168934781288}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.45399040895592485`, 0.], 
         Complex[-0.8910062431759065, 0.]}}, {{0, 0, 0}, {0., 
        0.45399040895592485`, -0.8910062431759065}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.45399040895592485`, 0.], 0}}, {{0, 0, 0}, {
        0., 0.45399040895592485`, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.45399040895592485`, 0.], 0}, {
        Complex[0., 0.], Complex[0.45399040895592485`, 0.], 
         Complex[-0.8910062431759065, 0.]}}, {{0., 0.45399040895592485`, 0}, {
        0., 0.45399040895592485`, -0.8910062431759065}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.8910062431759065, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.8910062431759065}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.8910062431759065, 0.]}, {
        Complex[0., 0.], Complex[0.45399040895592485`, 0.], 
         Complex[-0.8910062431759065, 0.]}}, {{0, 0, -0.8910062431759065}, {
        0., 0.45399040895592485`, -0.8910062431759065}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.30901682865293695`, 0.], 
         Complex[-0.9510558765759561, 0.]}}, {{0, 0, 0}, {0., 
        0.30901682865293695`, -0.9510558765759561}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.30901682865293695`, 0.], 0}}, {{0, 0, 0}, {
        0., 0.30901682865293695`, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.30901682865293695`, 0.], 0}, {
        Complex[0., 0.], Complex[0.30901682865293695`, 0.], 
         Complex[-0.9510558765759561, 0.]}}, {{0., 0.30901682865293695`, 0}, {
        0., 0.30901682865293695`, -0.9510558765759561}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.9510558765759561, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.9510558765759561}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.9510558765759561, 0.]}, {
        Complex[0., 0.], Complex[0.30901682865293695`, 0.], 
         Complex[-0.9510558765759561, 0.]}}, {{0, 0, -0.9510558765759561}, {
        0., 0.30901682865293695`, -0.9510558765759561}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.15643446688624224`, 0.], 
         Complex[-0.9876881027526876, 0.]}}, {{0, 0, 0}, {0., 
        0.15643446688624224`, -0.9876881027526876}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[0.15643446688624224`, 0.], 0}}, {{0, 0, 0}, {
        0., 0.15643446688624224`, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[0.15643446688624224`, 0.], 0}, {
        Complex[0., 0.], Complex[0.15643446688624224`, 0.], 
         Complex[-0.9876881027526876, 0.]}}, {{0., 0.15643446688624224`, 0}, {
        0., 0.15643446688624224`, -0.9876881027526876}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.9876881027526876, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.9876881027526876}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.9876881027526876, 0.]}, {
        Complex[0., 0.], Complex[0.15643446688624224`, 0.], 
         Complex[-0.9876881027526876, 0.]}}, {{0, 0, -0.9876881027526876}, {
        0., 0.15643446688624224`, -0.9876881027526876}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}, {
    {Opacity[0.1], Specularity[
      RGBColor[1, 0.5, 0.5], 5], SphereBox[{0, 0, 0}]}, 
    {RGBColor[1, 0, 0], Thickness[Large], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 
         Complex[-0.9999999766997332, 0.]}}, {{0, 0, 0}, {0., 
        4.653684309241265*^-8, -0.9999999766997332}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 0}}, {{0, 0, 
        0}, {0., 4.653684309241265*^-8, 0}}]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 0}, {
        Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 
         Complex[-0.9999999766997332, 0.]}}, {{
        0., 4.653684309241265*^-8, 0}, {0., 
        4.653684309241265*^-8, -0.9999999766997332}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 0, Complex[-0.9999999766997332, 0.]}}, {{0, 0, 
        0}, {0, 0, -0.9999999766997332}}]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{0, 0, Complex[-0.9999999766997332, 0.]}, {
        Complex[0., 0.], Complex[4.653684309241265*^-8, 0.], 
         Complex[-0.9999999766997332, 0.]}}, {{0, 0, -0.9999999766997332}, {
        0., 4.653684309241265*^-8, -0.9999999766997332}}]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"3\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 0, 1.3}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"1\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {1.3, 0, 0}], Text3DBox[
     FormBox[
      StyleBox["\<\"\\!\\(\\*TemplateBox[{\\\"2\\\"},\\\"Ket\\\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], StandardForm], {0, 1.3, 0}]}},
  ImageResolution -> 400,
  Axes->True,
  AxesOrigin->{0, 0, 0},
  Boxed->False,
  ImageSize->Medium,
  ViewPoint->{1.8611820147249178`, -2.3880002435406786`, 1.5111109637992022`},
  ViewVertical->{0.10916012446320827`, -0.1287273462132369, 
   0.9856537615025239}]], "Output",
 CellChangeTimes->{{3.843486131491096*^9, 3.843486149078062*^9}, {
   3.843486346843299*^9, 3.843486377021371*^9}, {3.8434864492445245`*^9, 
   3.8434864550775633`*^9}, 3.843486562688631*^9, {3.8434866051734476`*^9, 
   3.843486618744627*^9}},ExpressionUUID->"36e1fe7d-3f04-4d65-a271-\
2bf4cfb1d103"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Export", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8434863782698994`*^9, 
  3.8434864366086903`*^9}},ExpressionUUID->"285612c9-cff3-4420-b5c5-\
aad719b1f373"]
}, Open  ]],

Cell[CellGroupData[{

Cell["algebra", "Chapter",
 CellChangeTimes->{{3.843390046355116*^9, 
  3.8433900592228065`*^9}},ExpressionUUID->"9581d32b-6242-4aed-8bf2-\
7c9ae16a8cd1"],

Cell[TextData[{
 "Pulse area. just ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[CapitalOmega]", "1"], "2"], "+", 
     SuperscriptBox[
      SubscriptBox["\[CapitalOmega]", "2"], "2"]}]], TraditionalForm]],
  ExpressionUUID->"2a98e731-e7c5-458e-b956-99974f167e25"],
 ", integrated over +- infinity?  "
}], "Text",
 CellChangeTimes->{{3.8432555370096493`*^9, 
  3.8432556646192317`*^9}},ExpressionUUID->"3cfdfb56-c1bd-4767-9fdb-\
aa4334317ee7"],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["w", "2"]}]], "]"}], 
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "+", 
         RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["w", "2"]}]], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843255412527032*^9, 
  3.8432554402660065`*^9}},ExpressionUUID->"b43e9454-f889-4f90-b60a-\
bf8d731fb34b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["w", "2"]}]], "]"}], 
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "+", 
         RowBox[{"\[Mu]", "/", "2"}]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["w", "2"]}]], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.84325545095228*^9, 
  3.8432554522549224`*^9}},ExpressionUUID->"ee50a448-cbb6-4f6f-bd2f-\
5b335f8e1db5"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["t", "2"]}], "+", 
     SuperscriptBox["\[Mu]", "2"]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["w", "2"]}]]}]]], "Output",
 CellChangeTimes->{
  3.8432554526377773`*^9},ExpressionUUID->"45000358-d25c-4aea-89fe-\
d827e816939b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{"-", 
     SuperscriptBox["\[Mu]", "2"]}], 
    RowBox[{"4", 
     SuperscriptBox["w", "2"]}]]], 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["t", "2"], 
     SuperscriptBox["w", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.843255482876628*^9, 
  3.843255525097032*^9}},ExpressionUUID->"ccf8c8ac-ee60-4050-8bcc-\
38725c007cb2"],

Cell["Calculate the derivative of R in the torque picture", "Text",
 CellChangeTimes->{{3.843390067901001*^9, 
  3.843390092076653*^9}},ExpressionUUID->"b8903e8a-f503-4e16-8665-\
abfb960c92e2"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Phi]", ",", "\[Theta]", ",", "R", ",", "\[CapitalGamma]", ",", 
   "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalDelta]1", ",", 
   "\[CapitalDelta]2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"{", 
    RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]", "=", 
   RowBox[{"{", 
    RowBox[{"\[CapitalOmega]2", ",", "0", ",", 
     RowBox[{"-", "\[CapitalOmega]1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cross", "[", 
  RowBox[{"\[CapitalGamma]", ",", "R"}], "]"}]}], "Input",
 CellChangeTimes->{{3.843390108421424*^9, 3.8433901366629267`*^9}, {
   3.8433901744502296`*^9, 3.8433902623121557`*^9}, {3.8433910273968744`*^9, 
   3.8433910366938095`*^9}, {3.8434116075922365`*^9, 3.843411608658715*^9}, {
   3.8434116504081593`*^9, 3.8434116600511904`*^9}, 3.8434117016321754`*^9, {
   3.8435029428108616`*^9, 
   3.8435029488711367`*^9}},ExpressionUUID->"5881b5b3-5689-4b81-af04-\
5ccfbaee8c0d"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8435030005244203`*^9, 
  3.8435030025050497`*^9}},ExpressionUUID->"c4819483-e8cf-4868-ac5b-\
cd3f7465c07f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"c2", " ", "\[CapitalOmega]1"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "c1"}], " ", "\[CapitalOmega]1"}], "-", 
    RowBox[{"c3", " ", "\[CapitalOmega]2"}]}], ",", 
   RowBox[{"c2", " ", "\[CapitalOmega]2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8434975987210183`*^9, 
  3.8435029496349926`*^9},ExpressionUUID->"bd273fa8-b482-44c8-b349-\
03c936220ba1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H", "=", 
  RowBox[{"(", GridBox[{
     {"0", 
      RowBox[{"\[CapitalOmega]1", "/", "2"}], "0"},
     {
      RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1", 
      RowBox[{"\[CapitalOmega]2", "/", "2"}]},
     {"0", 
      RowBox[{"\[CapitalOmega]2", "/", "2"}], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.843497581990771*^9, 3.8434975963712163`*^9}, {
  3.843502936455367*^9, 
  3.843502961685624*^9}},ExpressionUUID->"38080789-2852-4598-b56c-\
fe7e77b84d4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[CapitalOmega]1", "2"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[CapitalOmega]1", "2"], ",", "\[CapitalDelta]1", ",", 
     FractionBox["\[CapitalOmega]2", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["\[CapitalOmega]2", "2"], ",", 
     RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.843503007345214*^9, 
  3.843503223953579*^9},ExpressionUUID->"967593c3-957c-462c-ab1f-\
636f73eed639"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]1", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[CapitalOmega]2", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[CapitalDelta]1", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[CapitalDelta]2", "\[Element]", "Reals"}]}], ",", 
    RowBox[{"Eigensystem", "[", "H", "]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.843497601730979*^9, 3.843497607386834*^9}, {
  3.843503104406966*^9, 3.8435031854729624`*^9}, {3.843503262859121*^9, 
  3.8435032765053697`*^9}},ExpressionUUID->"11b9b13d-8f53-4441-bba8-\
0df65829cb21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
             RowBox[{"4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
             "-", 
             SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
             SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
             RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
             RowBox[{"4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
             "-", 
             SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
             SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
             RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
           SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
             RowBox[{"4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
             "-", 
             SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
             SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
             RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[CapitalOmega]1", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
            RowBox[{"Root", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                   RowBox[{
                   "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                   "-", 
                   SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                   SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                 "#1"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                   RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
                SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]]}], 
          ")"}]}], "\[CapitalOmega]2"], ",", 
       RowBox[{
        FractionBox["1", "\[CapitalOmega]2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
         ")"}]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[CapitalOmega]1", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
            RowBox[{"Root", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                   RowBox[{
                   "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                   "-", 
                   SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                   SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                 "#1"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                   RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
                SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]]}], 
          ")"}]}], "\[CapitalOmega]2"], ",", 
       RowBox[{
        FractionBox["1", "\[CapitalOmega]2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
         ")"}]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[CapitalOmega]1", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
            RowBox[{"Root", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                 SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                   RowBox[{
                   "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                   "-", 
                   SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                   SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                 "#1"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                   RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                 SuperscriptBox["#1", "2"]}], "+", 
                SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]]}], 
          ")"}]}], "\[CapitalOmega]2"], ",", 
       RowBox[{
        FractionBox["1", "\[CapitalOmega]2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
         ")"}]}], ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8434976079420123`*^9, 3.8434994173626647`*^9, {3.8435029640084934`*^9, 
   3.843503008286956*^9}, {3.843503159534633*^9, 3.8435031860866957`*^9}, {
   3.8435032208778954`*^9, 3.8435032323135953`*^9}, 
   3.843503276887766*^9},ExpressionUUID->"8ac3cc38-3875-4274-a811-\
67a0ba7c7efb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"#", "/", 
      SqrtBox[
       RowBox[{"#", ".", "#"}]]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[CapitalOmega]1", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[CapitalOmega]2", "\[Element]", "Reals"}]}], "}"}]}]}], 
    "]"}], "&"}], "/@", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "H", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8434994645759597`*^9, 3.8434994705905333`*^9}, {
  3.8434995172067738`*^9, 
  3.8434996154382763`*^9}},ExpressionUUID->"ed3c84ee-8e8d-4325-9819-\
9430856ceb55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], "+", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["\[CapitalOmega]2", "2"]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                ")"}]}], "+", 
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
             ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                  ")"}]}], "+", 
                RowBox[{"Root", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}]}], 
               ")"}], "2"]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "1"}], "]"}], 
              "2"]}], ")"}]}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], "+", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["\[CapitalOmega]2", "2"]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                ")"}]}], "+", 
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
             ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                  ")"}]}], "+", 
                RowBox[{"Root", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}]}], 
               ")"}], "2"]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "2"}], "]"}], 
              "2"]}], ")"}]}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], 
          "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
               SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                 RowBox[{
                 "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
                 SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                 SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
               "#1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                 RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], ")"}]}], "+", 
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
               RowBox[{
               "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], "-", 
               SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
               SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", "#1"}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
               RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
             SuperscriptBox["#1", "2"]}], "+", 
            SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{"\[CapitalOmega]2", " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[CapitalOmega]2", "2"]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                 ")"}]}], "+", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
              ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                   ")"}]}], "+", 
                 RowBox[{"Root", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
                ")"}], "2"]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                   SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}], 
               "2"]}], ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["\[CapitalOmega]2", "2"]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                ")"}]}], "+", 
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
             ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]1", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], 
                  ")"}]}], "+", 
                RowBox[{"Root", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                    SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                    "#1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                    SuperscriptBox["#1", "2"]}], "+", 
                    SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}]}], 
               ")"}], "2"]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalOmega]2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"2", " ", "\[CapitalDelta]1", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{"2", " ", "\[CapitalDelta]2", " ", 
                   SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[CapitalDelta]1", "2"]}], "+", 
                    RowBox[{
                    "4", " ", "\[CapitalDelta]1", " ", "\[CapitalDelta]2"}], 
                    "-", 
                    SuperscriptBox["\[CapitalOmega]1", "2"], "-", 
                    SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}], " ", 
                   "#1"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[CapitalDelta]1"}], "-", 
                    RowBox[{"2", " ", "\[CapitalDelta]2"}]}], ")"}], " ", 
                   SuperscriptBox["#1", "2"]}], "+", 
                  SuperscriptBox["#1", "3"]}], "&"}], ",", "3"}], "]"}], 
              "2"]}], ")"}]}]}], ")"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.843499591760067*^9, 3.843499616138421*^9}, 
   3.84350299691084*^9},ExpressionUUID->"c4a70b0a-ba79-4ebf-99f9-\
a1a06edd532d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8434982290350547`*^9, 
  3.8434982346212034`*^9}},ExpressionUUID->"da45838b-a899-4302-b230-\
1c1678dcf3d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[CapitalOmega]2", 
       RowBox[{"\[CapitalOmega]1", " ", 
        SqrtBox[
         RowBox[{"2", "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["\[CapitalOmega]1", "2"]}], 
           SuperscriptBox["\[CapitalOmega]2", "2"]]}]]}]]}], ",", "0", ",", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalOmega]1", "2"]}], 
         SuperscriptBox["\[CapitalOmega]2", "2"]]}]]]}], "}"}], ",", 
   RowBox[{
    FractionBox["\[CapitalOmega]1", "\[CapitalOmega]2"], "\[Rule]", " ", 
    RowBox[{"ArcTan", "[", "\[CapitalTheta]", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.843498949280168*^9, 3.8434990001940765`*^9}, {
  3.8434990446223717`*^9, 
  3.843499063304551*^9}},ExpressionUUID->"49e2e741-7619-4966-bc7a-\
f51317882867"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[CapitalOmega]2", 
     RowBox[{"\[CapitalOmega]1", " ", 
      SqrtBox[
       RowBox[{"2", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalOmega]1", "2"]}], 
         SuperscriptBox["\[CapitalOmega]2", "2"]]}]]}]]}], ",", "0", ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{"2", "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[CapitalOmega]1", "2"]}], 
       SuperscriptBox["\[CapitalOmega]2", "2"]]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8434990570765514`*^9, 
  3.8434990638439713`*^9}},ExpressionUUID->"9e2b3685-dd54-4deb-ba2a-\
9ac50b3e873c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], 
      RowBox[{
       SqrtBox["2"], 
       RowBox[{"Sin", "[", "x", "]"}]}]], ",", "0", ",", 
     FractionBox[
      RowBox[{"Cos", "[", "x", "]"}], 
      SqrtBox["2"]]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], 
      RowBox[{
       SqrtBox["2"], 
       RowBox[{"Sin", "[", "x", "]"}]}]], ",", "0", ",", 
     FractionBox[
      RowBox[{"Cos", "[", "x", "]"}], 
      SqrtBox["2"]]}], "}"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.843502409223955*^9, 
  3.843502463644005*^9}},ExpressionUUID->"caa0c9a9-e46d-49f9-a561-\
7859c0b144f3"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Cot", "[", "x", "]"}], "2"], "2"]], "Output",
 CellChangeTimes->{{3.843502459077724*^9, 
  3.8435024640234165`*^9}},ExpressionUUID->"f56d3f84-0201-4cbd-9074-\
b9aec19c8254"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759., 499.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"28d4c1aa-acd8-47c3-a3cd-133b7c0995b9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 98, "Title",ExpressionUUID->"5203471b-a0f9-4fd4-be19-20bb20a7ec85"],
Cell[CellGroupData[{
Cell[768, 29, 156, 3, 69, "Chapter",ExpressionUUID->"4ddc9cf8-1dea-444d-8a3a-b1516558aa71"],
Cell[927, 34, 391, 9, 28, "Input",ExpressionUUID->"213d895c-8aa3-4ddd-8387-89c234e224ba"],
Cell[1321, 45, 7953, 192, 517, "Input",ExpressionUUID->"09dc086e-3399-4674-8cfc-9394b6dd7a19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9311, 242, 157, 3, 69, "Chapter",ExpressionUUID->"f505d7c7-7541-44c3-82e2-a5087de1edb5"],
Cell[CellGroupData[{
Cell[9493, 249, 156, 3, 64, "Subchapter",ExpressionUUID->"dac351e4-c2e3-401c-ad63-29c089c7f59d"],
Cell[CellGroupData[{
Cell[9674, 256, 2699, 72, 288, "Input",ExpressionUUID->"cbef7251-a162-4bcd-a510-380ba86d4fcf"],
Cell[12376, 330, 2489, 64, 100, "Output",ExpressionUUID->"f379d7d4-e92b-4cc0-a051-c6fe02d645f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14902, 399, 8844, 230, 658, "Input",ExpressionUUID->"8f3aee44-2e43-437d-963e-e52feec04cc9"],
Cell[23749, 631, 1136, 19, 22, "Print",ExpressionUUID->"20dacbe1-8984-4e95-808e-6ce79875760f"],
Cell[24888, 652, 40002, 702, 253, "Output",ExpressionUUID->"bacc5366-be03-4b9e-b507-047514b12465"],
Cell[64893, 1356, 10395, 222, 263, "Output",ExpressionUUID->"97760bcd-c86e-47e9-9d4c-ef7470d2ecce"],
Cell[75291, 1580, 2790, 50, 439, "Output",ExpressionUUID->"c2f163b2-daca-479f-be2a-60f1189f4b8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78118, 1635, 1344, 34, 75, "Input",ExpressionUUID->"387fe6e3-3431-4ac2-b0c4-09c9a5044eac"],
Cell[79465, 1671, 264, 4, 32, "Output",ExpressionUUID->"158c4359-cf06-4f47-be11-58db1ca8fe8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79766, 1680, 8861, 232, 658, "Input",ExpressionUUID->"1b8a7669-2889-40f7-8240-d3606e65d566"],
Cell[88630, 1914, 564, 11, 22, "Print",ExpressionUUID->"b0d5897e-c0d6-4567-b710-a4e905a37716"],
Cell[89197, 1927, 39472, 696, 259, "Output",ExpressionUUID->"e74dcdd9-bf22-4fab-baca-48e81154aa91"],
Cell[128672, 2625, 85329, 1461, 269, "Output",ExpressionUUID->"5568ef60-9be6-485d-80d1-1e0ea447c6fc"],
Cell[214004, 4088, 2216, 42, 439, "Output",ExpressionUUID->"1d80f590-971e-439e-aa64-67fd8adc1f9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216257, 4135, 1221, 33, 75, "Input",ExpressionUUID->"59eac2d5-8cf3-4cc1-8f05-fd4eb62dc699"],
Cell[217481, 4170, 181, 3, 32, "Output",ExpressionUUID->"040c33c3-ae12-4abc-a095-6fd6904b3dc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217699, 4178, 9063, 235, 658, "Input",ExpressionUUID->"4e05d4c5-272f-4764-b9f6-df9e7fc48566"],
Cell[226765, 4415, 740, 14, 22, "Print",ExpressionUUID->"b8c77b12-5186-4a87-9ee2-c87f9b637303"],
Cell[227508, 4431, 43751, 767, 259, "Output",ExpressionUUID->"a08d6d8c-e35c-4460-b8c4-7f92f72a77c3"],
Cell[271262, 5200, 114148, 1934, 270, "Output",ExpressionUUID->"d2505872-f639-4ca1-8b7c-b7704ce45918"],
Cell[385413, 7136, 2387, 45, 439, "Output",ExpressionUUID->"27c9e8e0-bb5a-4f72-89ce-c253ee4e850c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387837, 7186, 1214, 32, 75, "Input",ExpressionUUID->"223e6f29-4b1f-4185-81eb-e112c6b0b40a"],
Cell[389054, 7220, 173, 3, 32, "Output",ExpressionUUID->"2e1d1575-0e76-4556-882b-2313e1a1af68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389264, 7228, 8996, 234, 658, "Input",ExpressionUUID->"3ecf6e19-dfc4-42f1-9d82-761f6d3c050c"],
Cell[398263, 7464, 451, 9, 22, "Print",ExpressionUUID->"5161d156-7788-47f2-8130-cd784ab251e7"],
Cell[398717, 7475, 48882, 863, 253, "Output",ExpressionUUID->"6f475e0c-7514-49e2-819b-b819fe7ad4ed"],
Cell[447602, 8340, 105348, 1807, 270, "Output",ExpressionUUID->"dd8f40f9-1fdf-4c86-9765-061e3c5c8bae"],
Cell[552953, 10149, 2254, 44, 439, "Output",ExpressionUUID->"4a355152-cace-40e0-83c6-53b09cb52f68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555244, 10198, 1214, 32, 75, "Input",ExpressionUUID->"14900515-ea65-4511-acad-b322798cb2fb"],
Cell[556461, 10232, 173, 3, 32, "Output",ExpressionUUID->"e42bd179-7118-495e-9f05-c4a8672f32fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556671, 10240, 129, 3, 28, "Input",ExpressionUUID->"25fc7b6a-ffaf-463f-aba9-86af7c6d08c5"],
Cell[556803, 10245, 132, 3, 32, "Output",ExpressionUUID->"d7ad0b58-698c-4ff4-8463-62e4ee786948"]
}, Open  ]],
Cell[556950, 10251, 188, 4, 28, "Input",ExpressionUUID->"95efa697-dc13-48bc-93d4-4df6e5f2a96d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557175, 10260, 155, 3, 64, "Subchapter",ExpressionUUID->"cd54f1e2-53f2-4fe9-aeaa-592a0e98aa59"],
Cell[CellGroupData[{
Cell[557355, 10267, 8641, 220, 602, "Input",ExpressionUUID->"ebf1ee27-4942-4710-a1a4-d07841c33f3d"],
Cell[565999, 10489, 353, 8, 22, "Print",ExpressionUUID->"ce38df60-b3f6-4978-84e2-d793b3a2eddd"],
Cell[566355, 10499, 14824, 303, 253, "Output",ExpressionUUID->"5601ba8e-961f-4ef0-9a85-07a470537bd0"],
Cell[581182, 10804, 95443, 1643, 269, "Output",ExpressionUUID->"c8da277d-8a47-47ad-88df-742c4214bc63"],
Cell[676628, 12449, 2265, 49, 157, "Output",ExpressionUUID->"7a77cc61-c62a-4a88-8a66-13183fedc916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[678930, 12503, 8746, 222, 602, "Input",ExpressionUUID->"993068bb-4fae-412b-bccc-b46c25137a70"],
Cell[687679, 12727, 377, 9, 22, "Print",ExpressionUUID->"7d000d0a-527b-49e1-beb3-a1009de510b9"],
Cell[688059, 12738, 14852, 304, 253, "Output",ExpressionUUID->"3bd4d089-1aa6-4e52-bc9c-8635b4982c95"],
Cell[702914, 13044, 91670, 1583, 269, "Output",ExpressionUUID->"d29148d0-dd20-42d5-824f-4620b0fd4dbb"],
Cell[794587, 14629, 2291, 50, 157, "Output",ExpressionUUID->"3e701b5a-15cd-4957-b71b-4590fd93b818"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[796939, 14686, 160, 3, 69, "Chapter",ExpressionUUID->"7be54343-b5ba-4552-b3d9-01972d0e2f08"],
Cell[CellGroupData[{
Cell[797124, 14693, 8538, 217, 593, "Input",ExpressionUUID->"28d47736-1171-4789-bfd3-8493d16d8e4b"],
Cell[805665, 14912, 405, 9, 22, "Print",ExpressionUUID->"b3b74379-86b1-41d1-8d0d-3231f3415a1d"],
Cell[806073, 14923, 15142, 310, 250, "Output",ExpressionUUID->"548baea0-61e1-4886-b7b8-e95a384db74c"],
Cell[821218, 15235, 28825, 552, 267, "Output",ExpressionUUID->"e1f25d5d-ba43-4d86-844e-2c280a5a1291"],
Cell[850046, 15789, 2246, 45, 137, "Output",ExpressionUUID->"78395b74-dde4-436a-92fc-b3a4529b7573"],
Cell[852295, 15836, 404, 9, 28, "Message",ExpressionUUID->"95c37657-a497-40f5-9931-c877bd3ca5e1"],
Cell[852702, 15847, 404, 9, 28, "Message",ExpressionUUID->"9eec9274-d669-42e5-ad48-9eec5d575e54"],
Cell[853109, 15858, 406, 9, 28, "Message",ExpressionUUID->"8150fd29-88cc-45da-9163-8b9e2ea00886"],
Cell[853518, 15869, 399, 8, 28, "Message",ExpressionUUID->"c0f2ca56-52f0-4367-945c-c395aabefa62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853954, 15882, 1344, 33, 94, "Input",ExpressionUUID->"8399ffbe-4a66-4778-9279-88334c9266d9"],
Cell[855301, 15917, 23494, 484, 386, "Output",ExpressionUUID->"36e1fe7d-3f04-4d65-a271-2bf4cfb1d103"]
}, Open  ]],
Cell[878810, 16404, 184, 4, 28, "Input",ExpressionUUID->"285612c9-cff3-4420-b5c5-aad719b1f373"]
}, Open  ]],
Cell[CellGroupData[{
Cell[879031, 16413, 154, 3, 69, "Chapter",ExpressionUUID->"9581d32b-6242-4aed-8bf2-7c9ae16a8cd1"],
Cell[879188, 16418, 495, 15, 39, "Text",ExpressionUUID->"3cfdfb56-c1bd-4767-9fdb-aa4334317ee7"],
Cell[879686, 16435, 689, 23, 48, "Input",ExpressionUUID->"b43e9454-f889-4f90-b60a-bf8d731fb34b"],
Cell[CellGroupData[{
Cell[880400, 16462, 688, 23, 48, "Input",ExpressionUUID->"ee50a448-cbb6-4f6f-bd2f-5b335f8e1db5"],
Cell[881091, 16487, 371, 12, 46, "Output",ExpressionUUID->"45000358-d25c-4aea-89fe-d827e816939b"]
}, Open  ]],
Cell[881477, 16502, 462, 15, 43, "Input",ExpressionUUID->"ccf8c8ac-ee60-4050-8bcc-38725c007cb2"],
Cell[881942, 16519, 193, 3, 35, "Text",ExpressionUUID->"b8903e8a-f503-4e16-8665-abfb960c92e2"],
Cell[882138, 16524, 1081, 25, 86, "Input",ExpressionUUID->"5881b5b3-5689-4b81-af04-5ccfbaee8c0d"],
Cell[CellGroupData[{
Cell[883244, 16553, 156, 3, 28, "Input",ExpressionUUID->"c4819483-e8cf-4868-ac5b-cd3f7465c07f"],
Cell[883403, 16558, 418, 11, 32, "Output",ExpressionUUID->"bd273fa8-b482-44c8-b349-03c936220ba1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[883858, 16574, 567, 15, 61, "Input",ExpressionUUID->"38080789-2852-4598-b56c-fe7e77b84d4a"],
Cell[884428, 16591, 614, 17, 48, "Output",ExpressionUUID->"967593c3-957c-462c-ab1f-636f73eed639"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885079, 16613, 652, 14, 28, "Input",ExpressionUUID->"11b9b13d-8f53-4441-bba8-0df65829cb21"],
Cell[885734, 16629, 12965, 319, 397, "Output",ExpressionUUID->"8ac3cc38-3875-4274-a811-67a0ba7c7efb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898736, 16953, 693, 20, 37, "Input",ExpressionUUID->"ed3c84ee-8e8d-4325-9819-9430856ceb55"],
Cell[899432, 16975, 57741, 1346, 1901, "Output",ExpressionUUID->"c4a70b0a-ba79-4ebf-99f9-a1a06edd532d"]
}, Open  ]],
Cell[957188, 18324, 156, 3, 28, "Input",ExpressionUUID->"da45838b-a899-4302-b230-1c1678dcf3d4"],
Cell[CellGroupData[{
Cell[957369, 18331, 989, 27, 65, "Input",ExpressionUUID->"49e2e741-7619-4966-bc7a-f51317882867"],
Cell[958361, 18360, 709, 21, 66, "Output",ExpressionUUID->"9e2b3685-dd54-4deb-ba2a-9ac50b3e873c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[959107, 18386, 846, 29, 54, "Input",ExpressionUUID->"caa0c9a9-e46d-49f9-a561-7859c0b144f3"],
Cell[959956, 18417, 231, 6, 50, "Output",ExpressionUUID->"f56d3f84-0201-4cbd-9074-b9aec19c8254"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

