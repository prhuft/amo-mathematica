(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    657704,      12204]
NotebookOptionsPosition[    650780,      12105]
NotebookOutlinePosition[    651157,      12121]
CellTagsIndexPosition[    651114,      12118]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["qubit rotations", "Title",
 CellChangeTimes->{{3.8350140506299047`*^9, 
  3.8350140530905385`*^9}},ExpressionUUID->"4876905b-648a-49d5-8165-\
a882f8035fd1"],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.8350428197281413`*^9, 
  3.8350428322639785`*^9}},ExpressionUUID->"02a93783-c838-42c4-ba79-\
b5d3de9104b4"],

Cell["\<\
The math here generalizes to other qubit platforms, but for concreteness I\
\[CloseCurlyQuote]ll use the language of lasers or microwaves manipulating \
atomic qubits. \
\>", "Text",
 CellChangeTimes->{{3.8350140667185225`*^9, 
  3.8350141035261445`*^9}},ExpressionUUID->"4d0354ca-98cd-4cf5-9125-\
1dbd887c8d12"],

Cell[CellGroupData[{

Cell["functions - run first", "Section",
 CellChangeTimes->{{3.835017129202883*^9, 3.8350171605143223`*^9}, {
  3.8350173445190353`*^9, 
  3.835017345667758*^9}},ExpressionUUID->"019d1a89-06e5-49f8-8489-\
c722c4fe69b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BuildMasterEq", "[", 
     RowBox[{"\[Rho]0_", ",", "H_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dim", ",", "rho", ",", "eqIdcs", ",", "comm", ",", "linblad", ",", 
        "rhoPruned", ",", "eqsPruned", ",", "rhoICPruned", ",", " ", 
        "popIdxList", ",", " ", "cohIdxList"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "The", " ", "junk", " ", "below", " ", "just", " ", "builds", " ", 
         "the", " ", "eqs", " ", "to", " ", "be", " ", "passed", " ", "to", 
         " ", "NDSolve"}], ",", " ", 
        RowBox[{
         RowBox[{"removing", " ", "the", " ", "redundant", " ", "matrix", " ", 
          RowBox[{"elements", ".", " ", "The"}], " ", "derivatives", " ", 
          "could", " ", "be", " ", "worked", " ", "out", " ", "explicitly", 
          " ", "and", " ", "typed", " ", "in", " ", 
          RowBox[{"(", 
           RowBox[{
           "just", " ", "the", " ", "optical", " ", "Bloch", " ", 
            "equations"}], ")"}], " ", "but", " ", "this", " ", "can", " ", 
          "the", " ", "heavy", " ", "lifting", " ", "for", " ", "higher", " ",
           "than", " ", "2"}], "-", 
         RowBox[{"dimensional", " ", 
          RowBox[{
          "systems", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\"\<Pruned\>\""}], " ", "variables", " ", "refer", " ", "to", " ",
           "the", " ", "eqs", " ", "which", " ", "have", " ", "had", " ", 
          "the", " ", "redundant", " ", "element", " ", "removed", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Args", ":", " ", "\[Rho]0"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"the", " ", "initial", " ", "density", " ", "matrix"}], ";", 
         " ", "H"}], ",", " ", 
        RowBox[{"the", " ", "Hamiltonian", "\[IndentingNewLine]", 
         RowBox[{"Returns", ":", " ", "eqsPruned"}]}], ",", " ", 
        RowBox[{"rhoICPruned", " ", 
         RowBox[{"(", 
          RowBox[{"the", " ", "pruned", " ", "initial", " ", "state"}], 
          ")"}]}], ",", " ", 
        RowBox[{"rhoPruned", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "the", " ", "pruned", " ", "set", " ", "of", " ", "variables"}], 
           ",", " ", 
           RowBox[{
            RowBox[{"i", ".", "e", ".", " ", "elements"}], " ", "of", " ", 
            "\[Rho]"}], ",", " ", 
           RowBox[{"to", " ", "solve", " ", "for"}]}], ")"}]}], ",", " ", 
        RowBox[{"popIdxList", " ", 
         RowBox[{"(", 
          RowBox[{
          "the", " ", "indices", " ", "of", " ", "the", " ", "population", 
           " ", "terms"}], ")"}]}], ",", " ", 
        RowBox[{"cohIdxList", " ", 
         RowBox[{"(", 
          RowBox[{
          "inds", " ", "of", " ", "the", " ", "coherence", " ", "terms"}], 
          ")"}]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"\[Rho]", ",", "t"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "H", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rho", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"#1", ",", "#2"}]], "[", "t", "]"}], 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"[", 
              RowBox[{"#1", ",", "#2"}], "]"}], "[", "t", "]"}], "*)"}], 
           "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "enforce", " ", "conjugate", " ", "relationship", " ", "of", " ", 
          RowBox[{"\[Rho]", "'"}], "s", " ", "off"}], "-", "diagonals"}], " ",
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eqIdcs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"dim", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "dim"}], ",", 
           RowBox[{"j", ">", "i"}], ",", 
           RowBox[{"j", "--"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"rho", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i"}], "]"}], "]"}], " ", "=", " ", 
             RowBox[{"Conjugate", "[", 
              RowBox[{"rho", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"eqIdcs", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"generate", " ", "non"}], "-", 
         RowBox[{
         "redundant", " ", "eqs", " ", "and", " ", "initial", " ", 
          "conditions"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"comm", " ", "=", " ", 
        RowBox[{
         RowBox[{"rho", ".", "H"}], " ", "-", " ", 
         RowBox[{"H", ".", "rho"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"linblad", " ", "=", 
          RowBox[{"\[CapitalGamma]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Sigma]m", ".", "rho", ".", "\[Sigma]p"}], "-", 
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}], ".", 
                 "rho"}], " ", "+", " ", 
                RowBox[{"rho", ".", 
                 RowBox[{"(", 
                  RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"rhoPruned", " ", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqsPruned", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rhoICPruned", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{"dim", "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "<", 
             RowBox[{"dim", "+", "1"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "<=", "j"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"eqsPruned", ",", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"rho", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "t"}], "]"}], 
                  "\[Equal]", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], " ", 
                   RowBox[{"comm", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], "]"}], ";", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"+", 
                   RowBox[{"linblad", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ";"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"rhoICPruned", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rho", "/.", 
                    RowBox[{"t", "\[Rule]", " ", "0"}]}], ")"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "==", 
                  RowBox[{"\[Rho]0", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"rhoPruned", ",", 
                 RowBox[{"rho", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "generate", " ", "indices", " ", "for", " ", "population", " ", 
          "and", " ", "coherence", " ", "terms", " ", "in", " ", "pruned", 
          " ", "eq", " ", "list"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"popIdxList", " ", "=", 
         RowBox[{"{", "1", "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cohIdxList", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"last", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"elems", " ", "=", " ", 
        RowBox[{"dim", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", "+", "1"}], ")"}], "/", "2"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "elems"}], ",", 
         RowBox[{
          RowBox[{"i", "++"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", 
             RowBox[{"last", "+", "dim", "-", "j"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"popIdxList", ",", "i"}], "]"}], ",", 
              RowBox[{"last", "=", "i"}], ",", 
              RowBox[{"j", "++"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"cohIdxList", ",", "i"}], "]"}]}], "\[IndentingNewLine]",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "eqsPruned", ",", "rhoICPruned", ",", "rhoPruned", ",", " ", 
         "popIdxList", ",", " ", "cohIdxList"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "graphic", " ", "for", " ", "creating", " ", "a", " ", "state", " ", 
    "vector", " ", "on", " ", "the", " ", "Bloch", " ", "sphere"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BlochSphereVector", "[", 
     RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Specularity", "[", 
           RowBox[{"Pink", ",", "5"}], "]"}], ",", 
          RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
          RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
            "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*TemplateBox[{\"0\"},\"Ket\"]\)\>\"", ",", "20"}], "]"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1.3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", "20"}], "]"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1.3"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<X\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Y\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.3", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SingleQubitRhoPlot", "[", 
     RowBox[{
     "\[Phi]_", ",", "\[Rho]00_", ",", "\[Rho]01_", ",", "\[Rho]11_"}], "]"}],
     ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"opacity", "=", "0.75"}], ",", "cf"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"cf", "[", "x_", "]"}], ":=", 
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "Blue", ",", "Green", ",", "Yellow", ",", "Red", ",", "Blue"}], 
           "}"}], ",", 
          FractionBox[
           RowBox[{"x", "+", 
            RowBox[{"2", "\[Pi]"}]}], 
           RowBox[{"4", "\[Pi]"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SquareBar", "[", 
         RowBox[{
         "xmin_", ",", "ymin_", ",", "width_", ",", "zmin_", ",", "zmax_"}], 
         "]"}], ":=", 
        RowBox[{"Cuboid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "ymin", ",", "zmin"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xmin", "+", "width"}], ",", 
            RowBox[{"ymin", "+", "width"}], ",", "zmax"}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Graphics3D", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", "Blue", ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"0", ",", "0", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", "\[Rho]00"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", 
                RowBox[{"cf", "[", "\[Phi]", "]"}], ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"0", ",", "1", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", 
               RowBox[{"Abs", "[", "\[Rho]01", "]"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", 
                RowBox[{"cf", "[", 
                 RowBox[{"-", "\[Phi]"}], "]"}], ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"1", ",", "0", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", 
               RowBox[{"Abs", "[", "\[Rho]01", "]"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", "Blue", ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"1", ",", "1", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", "\[Rho]11"}]}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*TemplateBox[{\"0\"},\"Ket\"]\)\>\"", ",", "20"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", 
                 RowBox[{"-", "0.3"}], ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", "20"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.5", ",", 
                 RowBox[{"-", "0.3"}], ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*TemplateBox[{\"0\"},\"Bra\"]\)\>\"", ",", "20"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2.3", ",", "0.5", ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*TemplateBox[{\"1\"},\"Bra\"]\)\>\"", ",", "20"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2.3", ",", "1.5", ",", "0"}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"BoxRatios", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "1.5"}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
           RowBox[{"Axes", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", 
              RowBox[{"Text", "[", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<|\!\(\*SubscriptBox[\(\[Rho]\), \(i, j\)]\)|\>\"", ",", 
                 "20", ",", "Black"}], "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"Ticks", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0.25", ",", "0.5", ",", "0.75", ",", "1"}], 
               "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", "2.3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", "2.3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"cf", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "\[Pi]"}], ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Phi] [rad]\>\""}]}], " ", 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "convenience", " ", "operators", " ", "for", " ", "grabbing", " ", "the", 
    " ", "two", " ", "qubit", " ", "elements", " ", "out", " ", "of", " ", 
    "the", " ", "solution"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]00", "[", "soln_", "]"}], ":=", 
   RowBox[{"soln", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]01", "[", "soln_", "]"}], ":=", 
   RowBox[{"soln", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]11", "[", "soln_", "]"}], ":=", 
    RowBox[{"soln", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"qubit", " ", "angle", " ", "operators"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta", "[", "soln_", "]"}], ":=", 
   RowBox[{"2", 
    RowBox[{"ArcTan", "[", 
     RowBox[{
      RowBox[{"soln", "//", "\[Rho]11"}], ",", " ", 
      RowBox[{"soln", "//", "\[Rho]00"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phi", "[", "soln_", "]"}], ":=", 
   RowBox[{"Arg", "[", 
    FractionBox[
     RowBox[{"soln", "//", "\[Rho]01", " "}], 
     RowBox[{"Abs", "[", 
      RowBox[{"soln", "//", "\[Rho]01"}], "]"}]], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8350158580106945`*^9, 3.835015895414342*^9}, {
   3.8350159260350294`*^9, 3.835015993351922*^9}, {3.8350160899382915`*^9, 
   3.8350160944819074`*^9}, {3.8350163878331795`*^9, 3.835016445804765*^9}, {
   3.835016489302936*^9, 3.835016531223361*^9}, {3.8350166360449095`*^9, 
   3.835016809842594*^9}, {3.835016939424097*^9, 3.8350170940224*^9}, {
   3.8350172551612997`*^9, 3.83501728217809*^9}, {3.8350173250726986`*^9, 
   3.835017331923233*^9}, {3.835018177893467*^9, 3.83501821769398*^9}, {
   3.835018249750198*^9, 3.835018285691367*^9}, {3.835025009194661*^9, 
   3.8350250518057313`*^9}, {3.835025169192734*^9, 3.8350251828649235`*^9}, {
   3.8350252875298595`*^9, 3.8350253561705756`*^9}, {3.835035724979285*^9, 
   3.835035807888835*^9}, {3.835037068274298*^9, 3.835037121125121*^9}, 
   3.8350397801638002`*^9},ExpressionUUID->"0eafdb81-3529-42ff-a249-\
1baa9f165b49"]
}, Open  ]],

Cell[CellGroupData[{

Cell["single qubit gates", "Section",
 CellChangeTimes->{{3.83501543697373*^9, 
  3.8350154458301334`*^9}},ExpressionUUID->"8f03b258-0f37-44e6-9117-\
1ed1aa4ff83f"],

Cell[CellGroupData[{

Cell["Rabi oscillations - resonant", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835042413463442*^9, 
  3.8350424168678756`*^9}},ExpressionUUID->"d4ae9ccd-f219-4c49-8622-\
853cedc80230"],

Cell[TextData[{
 "Population transfer between ",
 Cell[BoxData[
  TemplateBox[{"0"},
   "Ket"]],ExpressionUUID->"a345818d-40e7-4fae-ac04-2bbc33f8e5dc"],
 " and ",
 Cell[BoxData[
  TemplateBox[{"1"},
   "Ket"]],ExpressionUUID->"9b95b538-d64d-404b-92d3-e3366478a904"],
 " by applying a constant laser or microwave pulse on resonant with the qubit \
transition. It is clear from looking at the Bloch vector that the Hamiltonian \
is performing a rotation about the X axis. When the rotation is through an \
angle \[Pi], this is called an X gate. This can also be seen just from \
looking at the Hamiltonian, which is proportional to the Pauli matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "x"], TraditionalForm]],ExpressionUUID->
  "39e01c34-14f1-4921-8797-dff617540780"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8350362044024034`*^9, 3.835036267954064*^9}, {
  3.8350363230918264`*^9, 
  3.835036491716954*^9}},ExpressionUUID->"56eb7a86-9a4c-45ad-a4a2-\
29773f43fc74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", " ",
      "approximation", " ", 
     RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"evolution", " ", "time"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.8350362743759365`*^9, 
   3.8350362745025606`*^9}},ExpressionUUID->"44aeb708-6546-456b-b5ea-\
e6782b7eadc3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.001", ",", "1", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 
   3.8350358854817686`*^9}},ExpressionUUID->"b3d60264-8e12-4071-af39-\
f71814e76093"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.015625`"}],
  SequenceForm["Time to run sim: ", 0.015625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350362774249263`*^9, 
   3.8350372242021976`*^9, {3.835042384029936*^9, 3.8350423887852516`*^9}, 
   3.8431730500457687`*^9},ExpressionUUID->"8d8ac5d4-5596-4902-a97a-\
43d0ccd96499"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mllplEJJ7ZtbdfRX2Ij+PBYUX4r6+FV73FO+4mOJV/xWnTJM65qGThR9hfqF
rYavTMqhXPhbv+rbV4wd6LJ+WfMZPb77Blz/a8eq+oL9T+qqwLvpNTE62o72
xqFaXZMGHDPyHfg20Y4+5t873Y8a4Bhq2TDCasdu6f4jvmUN6GTf8Jo61w7v
8z1Gx3c04sV4gEX/6g4UCHYFms01Qjb3atNXhQ40LAb2tyc2Q0dV9k2FXwfe
9K6Z/sDRimC795cTJTqRJM87OxzVjt/H3ozaenbh6SfF02Y9/XCSr8oXquzG
m9tl9rHWIxjKrnrUuq0XbmoT9ULe46AwORjyO3pxc/BHml/YOMpl1LUjZXrx
pdx031TCOBIzqlcbK/VCceDyQlLpOKxf1Tzu1+5F2+Ux//zFcYzH14XSnHvx
c4OLsKUTDczgxoi/Tb3gvLKO29iSjsWr7c933uvDhEZjidqGSRgong+X9ewD
bYN/k5vEJDLZx/33+/Wh/sktzvS9k7CInr11NKQPG3U6y8dOTuJztehJveQ+
PPJN5aK5TOLh1gs/Xer74Hzg87mlzkms72Rq14n248pOm2tyj6ZwLemuStOW
ftj/4PwjEDWFqmv/lNok+jHrpaJDJE7h7nK+7f2y/RDz4uTxKZhCz16FeUKl
H+7HDFo3D08h4dG9l8L2/RAxjb4jo8DA7uNcS5c/9kOg82nlmVYGcjPe7Ogu
74fGfunvvn0MKAjo6p2q6UfxC9L3YwwcoUWn7m7th3f1D7m6eQZOP96l9X28
HwZGcSn625hw7NGJduUfQFWyUWu0AxO/VWY+TwoP4MDR3oX+u0y4ZUZNnds0
AIN7p+r4vJjw8xxSVpYeQA571nadJ0xESd4aW6Y8gNiTXVkrC5govhUpH2w3
gIpoudiwBSaU+w6a/70+AEq9y3TPMhYq1AYeXHcawE8ueZX1PCzUC0v16HoO
QP3X1RzDjSz0fyr0FHw6AOVu+Y4Nh1lgW9XX+KJ8APuS/siFO7NwInnblbfC
g4jUfriPb5QFhWheqRqxQYjLD7RRJ1jYGrI42rttEDU1N2KSCBYWXDusOWQG
oX27xe33AgtZeoEWxscG4RI0OMhYR2A9+7ThX9tB+F5GKdchAmyzAwL81wfB
ke20gaZMgMGo/yp1exCqI09OFKqS/Xl3qp6uxyCkWfbrd+kQcM010UkJH0RG
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
3A3GUxdUdYzuWUygYd3bY42me+7Coof9xM4MGh7+EDi4/OMtqImeasrPpCH8
S0CXwrub2H0uTP9YDg3Nli+Op1rfwFz/ZivjfBqk5R83p4XYY3DT5fGRAhpa
tll7OpfYodoi69r1Yhr2clZ8l1q4gifUw64PSmn45cvts++lDVy2+f5b95kG
PS5rk3D+i7C0rn8QV0lDgL6MeV/oBciMmjzJq6Ph538zb687nQe/ZOIGNNBg
yj2wLq7ZDPOXaC/qm2goXHcnNfekCWpod94Mt9EQOPLqbnycPjKlP+1z6KCh
89FhGee7eoiw4yia66Lh9eaWSTfqadzL0FL266Vh5Dbr57f1WrCaelK1doCG
8lyHWqmHJ6Ah06v5fIiGKvuxd2qH1LDHYVur1AgNXYdZXMp7jkMg29b43SgN
7U7HZaXKj2CBlTNwlEbDMvbd1gEvlUCVm734ZYKGpVP12imr9qP2pvKkAYMG
xp/EzcTgHmS/fXCTyqLhe+LAU540KUTONP62n6bBZSTzePzNrXDbL+Ax+4Mc
/2+kTvOWEKydzi33/U2DVZP8sqdsq3HyfXIg7zzpN6V1ld8PLinL/Z5YG7tI
sqHSGH8PXVlIaV+U5BLJYt17p4eqlP84u4i9ZaODzURaYPNUmvK3orLkI8tJ
fr3iaeiHPuX6ec6ddSvoKHfnFZ7g+6Wce+h0jj43HV7Fj7VjolfgmdvTA0Or
6Njb/SJBXJ8f90v6P15dQ7JuWMFS90bY/N2u8nstHQfZvhdOZ2+HprJ9nTc/
HVZGO9Mmbu7CPs93p9cI0rHqxG4lBZF92FA+3x4tTEfUModXha4HsMR2/JyE
KB0zPDyV/0wPYfR4wHCOGB2DkYqyaz4ADT4tVw5vIcevhKl9b1RBNIeF01kJ
OpZWun1xuHaK7K+ED7RK0RF03JM+xq0Dm0rKrzM76aCn/ky5eEsXe31UnXVk
yXjYy89bvzZA1PAfpca9dARc2lNk/90If44VzGnuJ+Ofebtsm4kp6v5J3zt5
kNRnQLz1vq8FZC1HDtUeIufvp/iFplghsvT5ovpRUq+iNzpZAtaw8uD1UFWh
o0iuPuaLxCXMLvzwVNb+f37xPFp/7GFulnXs02k6fi4Wu5/udkBF8WX2I3p0
SPBGLQ+tvIEQlx6f/4zoOKsf4jv07Rakfpc+ULCi4xsz66qu6l0EG7po5FmT
+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
          "]]}, Annotation[#, "Charting`Private`Tag$2445#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
cuELBbmX54NOkX7Z5YV9BW8Ouf/nq7crkn5aYyL1gXgB2edPe6gxpwhwnfi+
U66UAt7p3i8PSD9em6U8plpFQbx7UcQvkn/8xB2jtOsoiJAp/6dH+vlTj76c
Nmmm4N6cV6sn6fcl+3+suthBQZV8tEQEyT8DWjurHbspEGpPpwSRfBAX5/T4
CUHB2NqTvE4kP9ityNjty6SgR2Z9hgLJGyoOv9jhoxQ486e2VpN6rm1XTNIE
BQf/RdoeJvmkRM3ZPP8XBY2ivi4fSO39PlOodpaCxLsiHP/nG/3FqW/UvxRY
69Rz/Pk/H13c7Ta8hAqPGOMH/+cjatXtPTPLqAjNhEM7qSO2Zk9yraRCJWRH
nz+pbV7PxAoLUUE4l9XtIPXWn6qWG9dQseWaz64v5Hq+m94V3SFJ/v97RTFB
Umd9zamHNBVV2zTuG5P7ub9u1sNQlgq1A2fPOpH71XTbs89iGxX3f0p+vUXG
g3vQ5ed1ZSrW2UkHmZLxqj/6Nf7+biqSW5dMryHj6Z/0x+r5XipyDp1ryyPj
fVpgr1gwqPjWV7NTg8wHk5LnnaVLjr/j6N0hklcT9s0fqDCkIkXujQUfmV+H
D/umW09SYU09Uy1A5n/hcsHF7xZUpI91bikk+aesdkFi0ZqKa/6lG2zI8/NM
6UDryqtU+D8MDmeRfC0yU6i5zYmK69F3FcNI/u4+8++3+l1yPplszUqSzyML
NVKPPqQizsGgt5HkdwWv4nWXvalIm/+Z4kHy/c+RxXbnl1TQAi8OK5E8lKuv
+crDj4rRJZXJeSQPaYmUzkWGUhFsPDB/i+QhXhfO9NQPVIzw3fONKiPQ3HPQ
tiiGHJ//c01qEcnfH8soPSlUtEQ+PmyXTcB5Z0Xm6nIqjhHCnM4x5H1UkYp8
U0PFR+FrRvhAxkv14csVjVSctJ1aNhRCYN9eFeslXVTYpzU1VL4msORQzKqJ
CSoCdtU8bbpDYOowx/zVKSpiZodYdxwIDGqfG2L8IfNl+Hrqjy2BGl2Rwi6u
LigwIwUDzhHwNfa8VinRhfgDfw2ENMn7frLP9P8+e5D/WXzQHpL3TfcfzN/c
hRN9k4OzyuT9ODO15otyFx7nP9lwXJq8HxdsKsN0uiDV1XhVj4PMn4OWlLNT
F555Ni88z6EjzCmSb/JuF84E6q5oSabDx3lhxvZRF1b8N/ty6iMdDi6ZDeef
ke+H6gm3+NKh9mTTA72ILqzx21bZf4ms575cnRtru/DgblHzTZKHst9YlYY3
dUEpKv28O8lDcQEFSWIdXQhxVN3vTPLQyyBnD/6+LqwOPiz6vZuGEx+YynPT
XWiZbqnVjaOBSKl42SLdjb1VKZZv9tPQPM7F3klyyAYiULJciYYSBW39QIVu
PA9NPNAuRUNkQuUKM7Vu2D9boAVy0WAdW+XTq9+Nd7VSlm9qezEUXuM7fLcb
Mvmhzk+NejH+qj7gb0M39LS5MarVA3rdiinLtm5cUMpNkt/Vg0ZeA5MSajc4
j44X60n3IOVZg4gHoxtX5Yuldv/thoNn41ueP92IvSHSEpHRjakHzUHCm3oQ
0dq2lJDoxvy19vfy98lxtM8HprdRYaJq8UbJtQfVV+IqSoqpSOIc8t7l2YNf
5ue+ZydSYRn82/EA2efLVWa9zD2oKK2UOGoc3QPef58Ln+6g4qnUhSmX2h5s
CNu68JCs28Kd4/o1JOdxV5/Zc1WuE9sOLvt3Ob8XSS9j5mW2tJH+O3ELtaQX
BxJv3M8kfZqKiJGxblUvQpZLqG//3or9w8Ex21pIXzDCP8vIbYWhz1a970O9
2PLz23JD3VY4dRkE3xMi43q9bljzcgu+OgbufGVLg6f5leblMk04Ei195csa
OpapNmrX2VZDJZhftkqSjiOstIMnlaoh9Xqe2S1Nx/zSH5srflZh7l6HNZcC
HUqHnV5feFCFZOPnlmaadJQrFx5487ISwpw/TP9epeOUlLfBn8/lIM6XaOnm
0dEyGd6r/KkY9abJSy2L6XAavDluI1+MXL3QMqcKOi5I+i3eSy6Cv5qzZlgj
HV6TqwV1swqhvUpu/yTpE9KDcexZeT4Si3x3veUj0LQ5WnGmOwd3153f2E/e
qxmq09npH6mwNlI+1XuBwOxPxRcuf1Jg6MH5gnKZrBPK8xvoHCmQHf34o4G8
p0XFTBWTVUlozxwpyfMk6/hI5H/c2+KgrO90PjCJrDtTG42MLCMh6Xo4wPcL
WZdraxJbayKwLF2k+gVZR/4Z7d4/3B4G+pocJbcSAk9jFs4Us4PxijH/9yZZ
x2rVkkPPr30Dl9UNO2y7yDo94bWYYfAaF3UjLtmQfVrEbVn7S5sX2Juq2fD/
3yFtluzx+/XGHbIDgpynyD6ctvwPQ9T4EQRFGSrGZJ02cveMkXt8GwtHMq/q
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
0Zo=
          "]]}, Annotation[#, "Charting`Private`Tag$2445#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
G2VDcg3nhT8aEm1Q76KGryT5z7FKoczNbVgf1/cwhbR/VwTPTv5tbRANMYmX
I9n5i9lRX/k2nPnzO/MZef5EsWS7r3vaIKL1qpKd5C82jKuqym2YVTlLPUn6
jzdNOSZZtQ11eRv5o0j/akwE5S/XaIOKX83Ryr8E/BVaGt2PtmGtjVZULxmf
/PNiY20GJKvFskbI+NFKHZeUTrbhz2i+TR8Z3w2LeWJPLdpwRTZwtIqMv5nm
/F62/9pg3TsfGP2bQOhdHUMn+zZYNK85aE7my5zQQNAujzY8rR6fT50m89dS
NjHatw02rnd4d0+R50k8/2buUhv2PY1UzSbz88s2HsaHoDYIT2XwnP1O2qOq
bGYZS57XwT9s1ShpT2CQ1/vENty6xBzkJ+tjQ33zvS2pbcjOsbWbo5DfP+FY
wcghz98oyP60j4Cr88NtgR/I+HRvHObuIPP/Zf+R8YY2mK6Q+HGplay/qW2n
9VvaoD2Vo9FF1rPW1YpIkZ42/Nxnk2NF1vvGyO9zWaw2ZJgkUSPfEqiwC8gq
/Ena8zpnV2YpmX9715x6+6cN1a08G/KLyf7WrVLatKwdlJdS9Id5ZD+SvH+R
WNuOBdZiYmIKgTcsSZk/69sRvOeliUoSAfOqgi62ze1w4w2rr39K4LFDzz6h
He3I/+E4VxRNQChb9uc+tONFaNj0txACBVffpahptSPrjgDXP7IfGh83Pqlz
rB3Vv17+FrxBIGLqUoGFSTvCovKu81wkwKdc73XFpR3CveyP9ZwIcNU6MSoj
2lEWLKTx9zCBtMdzTxui21HpMzQjT/ZrLZcw/fa4dmjfjv9orEwgiKc4ezi1
HXsfqX90J/v9ojHnWa7Sdvy3ZbqUECXzdSBlTI/aDgHuctN9TBa+z1IGu3Z3
4FHjh+re+yyUuETU6O3vAFd50OVXt1i4+VX9ReWhDnAkTN/xuMbC2jeJHlk6
HfjWUtr63oMFjYvW/66d7kCqELX3iREL8b+6xaTudmDFnVNlB8j5qTvdbOpL
6YDuHtlDPiFMrLG7foA22gEDsy2HcY2JwTZ5idOTHXijsap1wZeJC/kPRrR/
d5D3q6YiA1smkryO+YrxdmJq7WidogoTM8zaiKr9nfirG7tL7jsDaZNvGwXC
O5G7oJXPq8GA5xOjrW6POrHFrPjXXmUGlLVGrtbFdqL42tAbQ3kGGhN5dl5L
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
          "]]}, Annotation[#, "Charting`Private`Tag$2445#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, 
   3.8431730505397325`*^9},ExpressionUUID->"22a6d569-ed7f-423f-b661-\
9b52bec04ea3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6F4=
          "]]}, Annotation[#, "Charting`Private`Tag$2671#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0nssFAAcB/A7HErhyPvVcSqvkjymkch2nmt5jRFmESrV7ZrSirNTIdWa
MI9CVh5xrGOV6oyb7CbvPIqTczhchxZ2Hqf6w+/3x2+/ff747rf9fj9K3NWg
eAUCgRD5r/53v3hxf9t86Cl9O++QTYqMW65z9l6OActj10zVt4ezDfLB4REV
7OWVKrDaDjOKZsoGW56TijtyOeDUHlePoj/vwXocsoBI5IJbhGe6e93awe3J
ZUYREh549ZC7Rv2VL2AFWZ2mkSUf7LwT2xLc0A0mtvt55Um+grtZjj2d1r3g
k6Niuj4TXW1Tppc8gtZtORHgKESzTvMz5BL0b35sc9c6urF2k+FL7Nu1h6nT
0xrtfehc7hHBhC46YSiURrdFe81nNip7oRvdXELDi9BmTxZlNVI0iRcv4T7u
By+uTwq+2Q+AqxZa+eqPBsHqJq+XRKIh8MOk5oRy6jB47XSdKDF9BMxw4HF0
O0bBkw283H7Kd/Bm8lCJVdoPsI2nijyhdRxMq6RcbNITYD6mzdv3AzrVJMZ8
KmoSbB9Aj8l/gxanZZXSttALYTaJFYSfsO/YZW0FM0X0cPZWSSkJ7W8x42So
inYOa0nS2Y82z75fpqmFlkmtSCrG6L6Q7svblui7B8luC65oW0mo2kggunzb
PCewCq2tsazK20ArcUvYFqVT4EuOrWN7/IXgOt+48s9r6NVFQ83ZgmlwczBN
Md9bBE73yXrBmUVTJvxGX2bN4H+7sPINHGbBUaa9MuIguppxNMXVeg7n8fOE
15jo6DEizaoW3Tl3o25qAL0hZU+4z6GPrc1rFG+idV2OF1jK0VupN42bCGK4
5/Q7bqWbIpovU7bqIqELbz9zmtyLvrBt4bWmgZYTPCOphugipWhGEBUdtpKd
a81AawuaKxV4aNIdZojr9XkwoSaaLdRaANOL2Xla7ehPNg9UySmLYLIf3TZT
XQIet+sbvPUR3fjcgyqK/gU+z3Ymm8jRGVkVzPFaKbhebFKiHrAENmcd8FF5
hS40U1vd2UH/BVQzqFc=
          "]]}, Annotation[#, "Charting`Private`Tag$2671#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, 
   3.843173050612734*^9},ExpressionUUID->"299afa2b-ca65-42e5-82da-\
656fd316f955"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.044000000000000004`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.001, 1, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$2738$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$2738$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.001, 1, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {276., 283.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, 
   3.8431730506235123`*^9},ExpressionUUID->"5c6684cb-d42c-4ec5-b464-\
5254608dc0dd"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,126,94,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843173215409824*^9},ExpressionUUID->"3f9baca9-240d-46a1-958c-\
604dffe0af82"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,126,95,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843173215409824*^9},ExpressionUUID->"04572787-ca46-4190-8e29-\
16346a11cb09"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,126,96,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843173215425667*^9},ExpressionUUID->"d740c1d1-a83c-4f66-bae9-\
7a564bb5b9e4"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,126,97,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732154538665`*^9},ExpressionUUID->"1551c186-85c4-40ab-9bfd-\
a6b08c03f199"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,126,98,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732154696264`*^9},ExpressionUUID->"80ef9e5e-0c54-4be7-87af-\
50dadf2f7832"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,126,99,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732154988513`*^9},ExpressionUUID->"81f91199-8140-4fc5-b12d-\
b1bc163e52af"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,126,100,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732155644474`*^9},ExpressionUUID->"16197ff1-9793-43b6-ab09-\
f6d07e27565e"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,126,101,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732156293173`*^9},ExpressionUUID->"93a8d000-660b-4b7c-b17c-\
56223090b37d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rabi oscillations - constant detuning", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835042413463442*^9, 
  3.835042440620765*^9}},ExpressionUUID->"02c17e97-d820-48f8-b087-\
763bfbf6f259"],

Cell[TextData[{
 "Population transfer between ",
 Cell[BoxData[
  TemplateBox[{"0"},
   "Ket"]]],
 " and ",
 Cell[BoxData[
  TemplateBox[{"1"},
   "Ket"]]],
 " by applying a constant laser or microwave pulse off resonant with the \
qubit transition. The oscillations are faster than the resonant case and the \
population transfer is incomplete, which is a good diagnostic for laser \
frequency in the lab. The incomplete rotation is not very obvious for small \
detuning, so it is helpful to generate plots below with large detuning (of \
order or greater than the Rabi frequency)."
}], "Text",
 CellChangeTimes->{{3.8350362044024034`*^9, 3.835036267954064*^9}, {
  3.8350363230918264`*^9, 3.835036491716954*^9}, {3.835042456252944*^9, 
  3.8350425292047763`*^9}, {3.8350426131536193`*^9, 3.835042698075835*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", 
      " ", "approximation", " ", 
      RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", "\[CapitalOmega]"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.8350362743759365`*^9, 3.8350362745025606`*^9}, {3.8350425379361563`*^9, 
   3.8350426033011312`*^9}, {3.835042675257586*^9, 3.8350426757641683`*^9}, 
   3.835042706788735*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.001", ",", "1", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Time to run sim: ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350362774249263`*^9, 
   3.8350372242021976`*^9, {3.835042384029936*^9, 3.8350423887852516`*^9}, {
   3.835042545386286*^9, 3.8350426055221767`*^9}, 3.835042677895819*^9, 
   3.8350427087805963`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
q9l8i4CQ/lWF2wJs0KzKxt+T83N8ueCyPUJsuNm225x/SUB597ux78JsPHUM
XSuYQMBYdjTZUZQNImLg0mZy/g5eZLfpgDQbGZW3a2+S87vorel/kzJsXBrU
408uIvDmd0RflhwbItMZLp8+EagZaoneqMTGM2bf3Xxy/l9QqSfCs4eNPQcu
v2qqJ/Bsz8ivD/vYKLXvv3+xiYBkdkCLC9h4d1HO+2cLgf2vSkP7tdhYUSR2
tq6TQMPaEy4vdNjIzNluJ9FDwC50yshEnw2+JRNm9r0EfHzVlpWakOurOUmn
fiHA/6d5zNOcjX2V12ezBwnEOF+pVTzCht56kdo0JoGiE2/vxh1jo/tFkYzT
GAG9Nl0nqxNsBLop5m1mEeg0HD4o4MBG6D0e+TY2gYm9m3hunSb3UxP+8f/7
mbs5JX1q58j9pFY3e34nsGrr8U+cC2z8U1H4/P99TuLrv9FJl0n7NWcf/3/f
s2PdC+8TV9jgfeOi/P99UMUTVZvVbmww9AsTkiYImC9pVq/zYKNo3oqRyj8E
rkzy/953g416ieJmyl8C/1zSWn75sKG4z8fj/RSBRyM62el+bNjOSfYGThMQ
t2eGOt1hQ3173OL/77PS22+7iAWycWPlkt9TJO813mjcGkTmce5gUuQsAern
TwohD9gQks9Y9/992TEN22Vaj9gwuztq8f992lju5Nh0KBtNnSvN/79v81II
r815xsYS9Xer7UjmS9yRcjGcDZds9ZevSH6xvumuVCQbXidUiGaSZZ45O/VE
sxGrL77oB8l5S/kPPYtjwzzEa2iOZK3bqZsMXpH+VKsK/ktyy19tnvmJbBhY
+/39QvJJ16G+omQ2vBdu215A8vdR/09XU9lYba6vcpNkPweJGPl0Mj4mR2e3
kbyis9j7awYbTis6ntaR+39pcswm6j0bC1O0fx4jWbHmj7p5LhvszVsk2kn7
SzSfiyz9wMbDl5MiINkoX+V3eSEbDjJ7e56T/mJsa2y5XsxGD935Ujfp35cs
IZ/5pWxYTQvMX0/yyVQLmYflbCyXzfxkQMZD5uzzBpEqNqSCP8RcIuM1Jt3h
FV9NxvNoaLzPJBmPr2sl5Sls/KS+otz6P77xx2g5NDK/1liuvULGf2J9n3hN
IxufNuyTlSL1UtQlUWPaQvpf++D4EKknnxeOV7rb2FCWCW4JJ/W2QJhZwelm
Y1FBrziNS+b3UvbZVUw22jdNNHiMEmit2SYUN0Lac5IzVzBMIOKuS9GWcTJf
3JXPsYcIbOD9yb+XYGOVbMdvKTJfFCb/vnf8S+ZfvLlFO5lvRN5eW9Y0G1Xq
lmnR7WR9cvNZ4DHHxofu9ZZmrQR2EzzWQfM5eOK4J/1hA1lvhhfPZCzn4N1+
hyr9zwSWJOol7VrBARZoLn5WQdY7xwfGFSs5uChwPI9WSsCiV+BV2xoOvgmH
2wuQ9cOhdbX2zCYOdN6/O9D1joD0U2virjQHB6/tVk0i68+ISWSE4BYOnpf4
pjmmkPWPJsaSVODgFddLMT2ewI0KqVC9nRwk/z7z7d5TApp+p3e37OJgmZLA
yc5HBOZppnw9vpcD5duDXqIPCAQVyqtd2c+BzKfo9Mt3CIRnbe8O1+fA73oX
xc6NQFYcpIfsOLBJO1B7zpTAT++fix0dOVjMP/Om14DATusUVu8pDmpsTmzQ
0iHwUVAwp+McB3Gf9BlMDQLVfn0HaFc5CKrU3+0jT6DnpI99diAHeZlZ63l4
Sf9j+yGl+xzcUTxWGTrNhcN6pkz6Aw6YYhZWwhNcDLcYcpNCOZBa8+o4d5yL
b1piPpFRHPC/e14608LFoi0fo/wyOPhRKBnon8CF3nyXW7NZHNyY1nNTjeUi
pF/ypHcOB+6rLn7uCudCKCJYzr2AA2GxhR+m75P9a8mxgrMVZJ9955cY68KF
Cmuyzbidg4kdHSYOu7g4kblTSHyOg59LRmfWlnGQf2xSoJGHi/Pnagu8P3Ag
sKiI/858Lhb2hGbXkfsoO67BN8ZH9lHhsCc6sRxILtX6lyvMxayHt03IdQ6G
ncw4hnJcyAve/O6kxIHzukuUm5ZcHAlenvSWrDN+d1/5M9K4kLs1XlqkwMLy
a4v1Hd+R6z0uvJawiYWoc5dXDmdyYXv1+K3bIizkGOxOIHK5cOowzpTiYWFY
qKlqHtmn3x/XlPzVPA6DOB4+OdJP/duX2nd5kuehD/aPPEg/v1GTui9SMIZ3
o+LRAoYErplz56KlRhEUe9ehz5jsi5IHvRasHoWTOWdzhhmBP/Ei/qcXjUKs
uDjLyJqs82vLo4XGRhD82LY65CSZ53MvnFdljODczsjvS6+TfWmzolXnzhFI
BqzSXZxMoHmG3fvn0DDmdt1c3vGGgK+Qzv44co7o4gw2J78lEDnqL7B/8zBC
rXNOaL8n8CXUxdCTnGP+yZu73S0m62zGvP7MWiYYTY/j5pN9cWm47thFQyYK
Av+camkjECLkzN+6j4mwvfZyCWTezhKFq3ZvY8IgSTH3YB+BtiAV1anlTBR5
1VH8yT4nvyJF37ZhCOHb1B6bkX1t5f1/Ku9Kh+D6NcZyE9nXVGg2pTOZQ5A1
vNRfRtahLXb+Us9Dh7CAtzUxlKxbD4MWbu3zG8JA3t4LDmTd01b6q7bZdQjF
FxKUlMk6KlaqfvyC4xBeSCz7/f//cfcmxuS9MxvCf0btsNc=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVmXc4lW8cxlValFIqREJTQkpKcZdQUVE0VLS0lIwUDUkiO0XDJiN77z0j
exzjHGdwOBxbOyu/5/eX677ex/s+z3c99+c6klfNT12fy8PDUzOPh+f/v9rX
uU3FA6fVQsTm1PcoOajxHhK1YInsglzG1q/CPpewM+RjYJqIBk7tHA8oe2sO
nbr21CARA+wa2NR66a09zpr8KXgrYgIX1/NXj755DYb8q0OeItaw2iMsL+sZ
gtBVus5uIi9xy18thPo0CQ6L0ja7ivjieoSAffe+IpwzDEsa/xaBN25OCSnX
GjDWacD3STQSjsLlr2j+DXA2XnRd/1AkrP9dtmA3NSDtmrlopm8kXrPealdK
NELgnqrTE+UoLF+ssyHGoxEVL6jnF9h9xpL9butlrzVBMV5wgdiiWDju2/Tr
4dwWfJWruFynEItNKs5zv65tweUU27xnhrFY9XjHuYVKLfDMZFl0x8aCetra
9sjNFnCLEzqjjsehaCeHQq1uQXDr0ZQdPvHYc0ZQYqMXBfyzDhcPr0uC6XEt
vhLeNny8fdZYVisJ3p816TOibdhAkb0seC8JSWXfF2/c0Qa1mPZrnQVJmBd2
VEHRqA05Me8zsuSSYbleMkUzvQ0j+sP5OvXJCDFMqT9o3I7T0R9q7i9NxWv6
jNGKsA4EGr04dkMyFQ67m41s0zvAXmFWd04pFfoiHX5fKjtgbqfeoGqUijmt
XR5rRzvgemqkeWFCKqJfBNZG7qWiYFqdFnAsDQMrX8vJ11Kx8eQot8w9Hc3x
QY2ZTBpE7Q+r3AxLR0lf3R/TcRqWJ4S682Wlo8lq/OicuZ2YXKQvd5Kdjqms
H3spGzrRWJx1n7knA3yrp9oEb3fisYLDv7+cDFzaURrZNdQJc2OabuBUBpiV
qRYpU50w8dgZBsFMGFy+Hn2Nnw5dLueQ8/5MMFRuqd6VoWNDqLbrSp9MHLz4
T3TpTTrqlwkJyR3IAs/SX9HONDrKVM2uN53OgizDxs6US0f2nS+Z1neykLSC
54D8bzrCK20N895nwVqu0uKCIAO29ozgIyNZYCZTc1S1GJAai9p6zT8bZ+L9
4zbFMrBGnOfJguRsUIc75q7JZGCJjmFtTEU2FlTXLuaWMPAnit98fDwbc/Ll
1slSGag1tki3O5wDZbvmTfsXMGFTvxcff+ZAAWuFHp9nQkAug/N1US5GvDfx
1VxjIsJTwWNKLBd8+83jecyYaDq2mWqsmQuXowpzRO2Z2FYjdH/j+1xcCUxW
nf+JCVblWFSqch48Z6XSi9lMPNx853ivTh527f5ENRpkYsmrvh+rLuchelEk
g/WNib1ajAOPXPKw6pna67c8LPiUV9NAzcPFLxEzqWIsHC6JFKh7nI/N+U+k
e3VZYK6XzPjnlY8/FYqXmk6zYP088IJCeD6q5nzrCL/AQhh8on1q8rFXSDXm
7w0Wpgqeq58XKwBta2Pq1acsvBWf5rorFGBhrSzlsQMLW+xsXhdoFKCoSfOx
rTMLp/ffo683K0Ah34ztBm8WknIvPOwvKMCqo5kHD3xiQUu0XUykuQBiGxtd
naJYoD86VabdV4C28PTQ5FgWFu89ujxRoBBR26cvZ6eyEPqxPJMlVQgv63fi
7zJZ2P0XRoLKhTA/faPhbC4L17J2x1pfKoTIxdq9r0tYmFydqhd1vxB7zDQW
8law4P1w+5/2V4WYp0H9bVzFQoHSBo19yYVIzvtsU1nPwpp0QeacOUW4fXH+
JxMaCxc9pgx6VxfhTFgi8xCDhU8mnJovskXg/5N7ZH4XC7KrcnLczxWhpanx
uxyHBauRTwr37hXhaOeE4Yd+FrIqPD7rvSyCaFLFfvYAC+oPL79blVyELaU2
5RKjLLic0F7yt6IIeSsU3qwYZ6Fu0y5HWmcRhPkVtnK/sbBiVnwy/1sRPK4H
hIb+YCF+yDG7YV4xDs5L5N//i4X69r8/igWKoXAi/1nubxa+lZnJp4oUwzxw
p4DYXxaEktmm4RuKwfL1r788QeIVeDbKV74YO969obhMsmDoUtvtpFKMayIt
u3ynWHhqfVDcRrMY/ht28TpOsxB8OfPcLb1i2MVFnD09w0LJsW2+hheK8W1W
XoP/Hwu9e0IbtG+Q76nNMCOIXrBxFf9+y2JYiripSs2ysFXQTWv702K8ysqy
dST62Mw/h3WvihFg+Suuiuh7A/cLlr0txrI06vdvRL9p5f7lCSqGreDK27NE
p5cY7fr+uRjLI27J/P+8LaHZvCe1GPsv5p6qJHrC73AcpaAYapfm/HMgWsw5
v6+iqhhzrugdkSRazWqHVFZLMfh5KMcjyf6uGEcZRTPJ96VaZASIfqm91s9v
oBjTBklTF8j5onZ7U9x+FmNiC4fuRc7/VWr+8qezxfB5v2QoisRnWOCxjhlf
CYaMqOoRJH4CU6POxqtKcNV07ZxXJL47+q+V6q4vwRzlInVdEv+HRcf3Ku4u
wTE583Jvki+/uFJr6YMlcM/sU+P7yUL+B+VkoWMlaHP/kHL7OwtzLCQ3/7lS
gniHr79opD42XHx/lXu3BKr1sXNHhkm/HOEPptqU4GSg8zPOIAse638J5XuW
4KXriX1ufSwkLjHVS/hYgoOmQdm7e1lo+st0Dw4vwRHlBPHqbhZWN1XNdcgp
IffkxnVRdBb2FqiqWZWXoPBKIM8YldR7TOqjaw0l6Nv2+LREO+l/h8BxTU4J
9E51D+xuYqHcTFBWebwEP9Ms768j/dJn6HxzyxTZb6zNvNFq0g+KFkw+wVJM
ymrVapazkMk+VNuwvxQ8z9+I0zNI/o44fPM8XArhd4v5RUk//04sXH3sVCnE
XqvOHkxkQfnJ3itVN0tRXL/SU4/Mg+yV8r+L35ai6t5WtbvvWMjREF2fyi3F
UbWcK4XmLNBiz2pa/CjFium0hYmmpN+XvzOV+1eKn06xy92us6DCWJYRu7IM
ZZGGkwvJPMt9MF87XK0Ml6QtpiQ0Sfyjxu/7+pZhY9WJ9/2ryPxZIud3KqQM
3oMysqnLWJi2ulO4PLYMX9Zqjd1ZzIIq+hZ5FpWBed4pPWGaicL2ziCnwTLo
FSpomZP5XLSosvLhgXLY3B2zWBnHRKlp0FrD4XL4LRLzPqTIRNrAnTvGv8vh
LX6zv1OG3Ae3VPKu8VTg3YPYjXekmXC60X7+nlAF9GYW8pkLMXHkqqC/4/4K
tCaqXhT8zUCDoZNwokcFJMRNV3KzGKAfMVs1b/sXnFm8+8lOZQZ+bVJdlmBW
iaqFD5Nvy9OhxlavdLOtBCehRM57Ex3OQUfsbzlW4hTvnMV54nSsFjIYk/ar
RMPN2v51S+jYPedOg395JSKbZ/o2DXTCtvPja5e1Vfh8auFN64hOFL8PPnxj
UxU0m59vmRPYiUWnImYP7ajCm2aV8Pc+nfCrSjKf1arCa89TPfQXncjN+KL7
0KoKKncsDZlXOjH9+ucyk69VeOz4I+S7ZCc0dCYrD1KqEHppSkBWtBMeC3ie
S7Cq8KtWztdqRSfE7fjHaT+rYNN4fGTzvE6omUo1nlz/FevH7onu49Bgr6Hn
DZuvWFh+ZsH+eBqqZk8fEX/xFVst3W2vRxK/kneBZ8rjKxZ9s+cPDaYhdMdN
i8xPX3HbN+7N0Tc0FK97pre9/iv2pNwYt7ahYe5E3PK1G6vx58/ph1cO07C2
Tv0H5Kvhz+c1X0Sdhl1h1FaTvdXYIfk1nb2fhutHFwYkHq+G556XEgmK5Pt+
VzeqP6yGoH1SrpQEDd1mEwtvPq/GzThftrkoDZMHvQfd3arRNHjlfuMqGmQH
C5Jag6vR4Xn+Vu0SGl6riKjcrqxG3raYz2lTVEQLJIt5NVUj+qKJdOgfKorZ
WrOpndWwuPVQJuwHFd/drMunx6qhmdx9q3uIijOdDSe8hWuwsb7vijGDCvOk
GzsypGog1nPh73cqFS6OMytpsjWIC3WVDmqjImfbNqr0wRqsyDBJVGykQuyp
87Ws2zVI4NhHXS+nQklPXIt+vwaiS5/+jSmh4sSG9C1zntWAV0gji7eICvva
7hHttzVwuNnTPpNDxcdQ20bzwBpIB85cD8yiItl6WZpvVA28K27knMyggi2m
asvMrUFa+b1ZnhQqpsZbzs+rqEHvmrdrphKpEKowVd3SUIPAOfwHliRQoWX2
ca5VTw3KvHznWcdQcemgPOf9SA3McjQLqj9TYbvqS2XenxowPriX74miIqbg
h8f8JbUY0bMdOx9ORekbN3OZ1bWISMqXWfaJCtp1yVO662thrdXApoVS8WNv
9i5rmVr89T8sWRhCxRIB3TV+u2qx/CV3NDuY+GE2Z6JArRbdm1gGNUFUqGU+
pbOP1OLFgsyLvwKpOOu2smihfi3U16xbpky0hXFsmKxRLaYUuu97B1Dhqnjw
5cmbtbjyuvvNHKI/Lei48dCyFn8ui5i7+VORS7t3NOBJLX6Y+C/fRnRL4nzZ
YqdazP/o+bjHj4rhF4ECnNe1EB5XTE4jmvfszm+L/WuxenN3WgDR4tuqW+Qi
alHsO//V/3r37OVM/cRa+K3ZIPP/+mPHi19oZtciyEX8fjfR1wIkdJVLa+F2
bTJwE/ne44Fna7fW1uKka0zkC6K9lZn9om21OHpX3e0X0VFOqulLumoxqjb/
sD3Zf35L4PN/A7UYkr/QLkHO2yw5fWz8B4lnWptSO9ED5hdE2DO1YFB3Xowk
8eIpzOW0LKzD5bRzh9xIPFcvEU2tEKwDT8npHicSb9nzj55lra2DvdWNnR9J
PtSjO7RjNtZBJeXb1pIwKs79Vl4TIF+HHzZu+Twkn+YaH3o89tbhnM0460wE
FYFdp59aHK+DSMSCaC1SD6lyGUeunq1Dxl4xxa5oKqqeCq0yuFIHoUc1a7xj
qfgl3JKg/KAOM2PNWYqk3pbcVHy81b4Of9esPrkxmQqpjDdaa13rsL6mep5c
Kqn3k3qsf4F1eDRbYuqQSYVJSFLceFQdWuvvTtRkU/FkRMCWnVyHau8VZ2Xz
SL+61i3/Ul4Haa1NinLFVMwp1Vb3HK5D79mI9btqqBBeHitg/7sOGpq1HJl6
KuSMF3da8NSD0vC9ZncTFecnK+8bCNXDPnX9e892KtIVNSPX7q/H7OVvSrs4
VFQ/j7BcqlWPMDEZsSYuFV3189RmdetxMi5M68UwFUvvlLaxr9VDd3Pq8Pqf
VNwIx6JY93q83RfyW4eXhqffgikB7+rBCBx4+moRDT74F+oZUo9NH/jQRuZP
cWf+Xsu0ekzfvNkXT+aTiJDKnT2d9aC1Xo9X2UJD7ctd9V9kGnCwuCUhQ48G
lWU1c98oNWBWKNXK5QwN0X5XlC8caMBRg4Hv9y7S4JjoFTp2ugEM+x3HH94i
6zu4VsIODdDm6Tl/y4Gs3xa0xrS9AT+ZF4w+Z9KgPvAieYF6I2SWsbd0yXbi
kVx99Z3Djdi6Ljc6c1cnku+LcBqPNcK3rkjab38n1v1LEgk42wi7Z4K8Dsc6
MbGC8ULerBEXvGplWu+S9fuVT5/72AjXeltxg6ROSHgPTcSMNkJyiDP1dS+d
+B77mNQfjbimVFbIq06H8c6Vhnl/GxHe72mrrk1HYJtKdu3cJozvWzBRcZ4O
YXG3h2Orm9C0bZVm/xM6VsRu+bELTfjz8WHBtUI65pdfHy563YTUkXKFanUG
It5NBFT5NkHZv2b3lDYDGjc9dZr8mnA//IrNFn0GXvBlxLLDmxBwoL354TUG
/unx3p6f3YQeUX1JhiMDfxmfONpdTVjw6vKSiDIGhv6wmK0KzRCVcj9Rp8pE
5s3Xpdq7m7EIHvvKNJl43q4WVbSvGXEZZ0MSjjOxOivILEarGQHzpruNjZiE
Py5MP73YDJXeqgnZp0z4/2wT2eDSjOHLHBHNLCaumzjPfPRshlaPtfnNQiYU
KErdS32akZggm/m4gokvab7Rf4KaMVD94uT9Fia+WZ1SrklrxqrHXVc+jxK/
8q3OwIrVjO8bDe3HJVlYecVuT39vM+Zsaxbi30J4s1FW7OJgM5ZEPf6wUo7w
ZrJ7j+avZhSZxUaP7GUhxPyolQh/Cz6tLe8q1mPBlPX3tNfyFgROjpVrnmFh
l2703nmrW/AkOkQqi/i5armFc0bWt2B2wtDHmPDp75Hy18W7W3A021w37zHh
FSPr+0r7W/B01995IfbEL9dJn4092IKEk6KVZi9ZkEp4sc73WAvi8+S/1Hiy
cPzugYSbV1sw7Nsx1ymEBWH6mDf9ZgsKdO+654ezwNYJsT5p1oKJwJRuxmcW
bLf927fPtgVzQ/9eZySxEDGYVy3g1QIeu7X0mkLCNx90pU19WkA57xSjWkr8
rUbPk4qPLegzev3vI+HR6iC+7U/DW7C1bkcufy0LvtrBTu3RLVC8Ys6UamDB
+M8OpmJiCx7HvZ8v3Uz4Ts/w9UB2C46E76cyiD/PnRnu1yhsQc74KY2PhFdf
xj4/EFrWgld2DvL7CK8K80Z/O1PfgoCM97wqbLL/5H3aqS0t8F4ynfCO8EGc
UcOnpdQW7NJ5eIZK+EEt67d+eU8LjJvaNwgPsbDIxC1eYqAFCiwR/pUjLDQv
Xzf/yWgLPudstPxF+CSwIMWo7UcLSgZMlYsIv1431czcMdGCCzQrNQvCM3Jr
qAKe/1rg+arrxiLCO3/L7t7kzqNgRM7izSvCQx7ivsIhAhTYN121UCG8dKZ6
s+XkSgri6nL6zAhPSdjkfT0tQsErWdGeV4S3uNK6UinrKKBvrdRyITyW2sh+
vGQDBQOO7F/3CK89tXvYcnMrBcp8lR37CM9pyfDJlslRwKuk3jFK9PL2oJfr
dlGwKVSN8YrwH9VxB+PRXgrqQ8oaFxBe/KRQodSqRkFC28+AO0TfZZzzUtCg
4HGd4JZMone7Dfe5H6Wgxv2BcR/RPMrP0X+CglOK77dME13ds/KjugEFxu95
Lf4Q7eP9eTzIkIIU5p11HURfVN13dMKYgjDJN+LBRG8arA8zMKHgEa/+2aNE
j7+/Opl0m4L1F2MyqGR/uYd+n+I3p+BvfYSU7v+8Ou4ad8Oaglmbey4x5DzH
g8R5Sx9RIOx+uIlLzr9aO+WiuD0Fbydd+pcQ3fVbI8P2JQWt4uEZq0i8YsM7
llJcKdhnKL5pHomntd7dG/KvKVhe+U66lcRfbWa20M2Xgvju4o/uf1hYGOuz
ps+Pgiy52xabfrPQeGazxcEQChyH7r2LJPn0n5dXFRhBwYPcyu+LfrBgknxC
8m8MBV4nn93X+0byb8R+pJ9EweTW1LlPx0g/Zi7expdLgaztg4lnpL7crgU5
Xi8i9TAYrXxmgAWD5TvoxeUUnJ8N3SHYT/J9+5ynTQMFXczpBYqkflNXD3Oa
KRR0JAfnfGCx8KTMXk2ORoFl6PO2LsKzAuKfx3p7KTBbq/1PjPTHgTOOjJ4B
8lxC0UyTwoLV60s17FEKZr7I5xkQnm2bI/y56y8Ft6aHvmyuYSG4z8WYvqQV
Mr5lzsEF5LwS1491CrZi3SKFmukcFuYaHlShrW5Feurc4IOZLNyomVjVsb4V
SYVvq54RfpVLNq1r2dWK+OyMLV+CWLg8oJXXvLcVdAHV9rN+LLyVko5pUmvF
vEPiXxt8ybzy7XzZcKQV5hctTlm5s1D46Nj+moutSA7knX1uQ/J7SC6u9GUr
4jS9FxRos/DsKZ9fiWsrwtdvKUrUYCE5o8+52KsVYTNcOWc1FoS2hFwt/NiK
Hcfvrujb8T/PLhfNjW/FIh+TObfXkHpu++aSQmmF5EA2/wMGE8HL6h8mU1th
JMmsL2xlovFIrEkSsxXvH6aMjdQxsSvv6oEEbiuk6JxD0wVMTIe0/ImeboWf
4id+aiATHrczboRuaENDwwLOm9NMDB5IcOGXacOErOMjEx0mDgtHxj6Ub8Pq
rxqhaw4yMbfSd/SYShvOyQSESMgy8WiD9cMJ3TYoD6lrZvIwcYOl6HzqSRu8
KvadmAlnoDxTJrrgeRt0d+e7dHxgQMpLqnqLcxum+l5o+bozwNi/QmDWuw3G
6jtPJlgxYOD/7V1cVBu6d1LO3QADB08nR/I2t+HVkXOPJ5vpCJaNrjRvb4OD
VnFRVzkd0/NCB2j0NrSk1P34nElHdurr7Sn9bRg/fU2L6keH3HLzDKOZNkh7
XzOrMqZDrGZ7ReaWdtTrfQxhsTvx+0Bc7y37doyk3EqVpdCQHzEUYPOyHVXL
77feL6PhxSJZfWfXdkg6ZfOEpdIg0BhfEu7TjpeTtWEJ3jRsupQYzPzcjs+F
hnff6NBwxi7lnEFjO2K1DTd75VORkZNVC8kO1HRXv8lw78Bj8b+OJzZ1IMGo
/1GbTQcOOOzZZ7StA4ZSOmtZ1zpQeyQn5rFSB/a8L2j8vK8Dve25zhlHO7Au
WP2P8GA7hH4XHNhm1QEr6txqV/V2WCuWp68u68Dokqnl0uxW3Ni1PvRNVQco
Phv9HnxtxbndT92X1HfgtE6UTmJyK/ap7Lo6l9oBqQvCYc3PWjFXPWLZ6GgH
HmkIbx0UacXrky9NK0QJV9bF+5vpUBBrobHe2oqKfZZ2F7wCm8FKLHdvkqTB
S/ggNWeqDlOmlICtjzux3P4so98hHwa7jd7I2XeiKThdcfnCfMTP6XPe+bIT
BiuWJaz1yIPxxz+Wql6dKL6nMMt4l4uSCtEjJz91wvKaQYR4dDZerb/y07a6
EyJFwcl/K9PRNTQwYNfQicXBv2y8dNKxJ8uK9YLSifLjvmeXNaRh8PjLag9m
J7kvmVcorak4/uRzaOj3TgRo9qY+YidjZdvIsSpROn7px4Yd+haDu2EP1esk
6PDZuf+r9u9olN+dVW7eQEeyuqjSnqnPeDhPUJouR8e4Ww3zK28UqAq7JsaI
r7xfHRfYu/oTFKfzR38epqPRVX+xytowuFVq9k4co8Pm6O8yO4lQ7Dc+2zDv
LB1W+4oMo3UDEeL+OHLNHTqW1tLd0sx98ffMvAAxCzpKFCs8n9q8hZ6Uh7fk
Azru2Fs4Ktp7Y25O0JNt9nTsWh/QQBNzxYWXmywVXtJRv5i3fnibE9J1k24o
udIh8OjvD66KA673FZ+EDx0KK3b8uJRihcKUo4c1PtKxQElzmD/4OlbbNe8/
GkTHqg3trguuH4b5kQuKJz7RIbvM2ke8XR9VK3s363+mIybe6odB8m1Isu6K
n4unI7WKof881xqPY3+tMEohfaZi2Fgc+BTbDi78dyOPDvfqDh8LBWckx8Zt
7igmvjv8ltGxh27YJaR38ugXOu76ya5YlO+F/f0fI7Y10RGWYXLQKdwHJzxl
dMb76GgdZCid3h5I6vj4x0crGGjbO/HgR2AUcix9FT1uM9C75/O4/Nc0HP4k
eTNlDRMj/qXxp3aXwkb8klT3ReJjNrnudL3QiKt6CmfoV1jID29ZsOlhI044
znFrJz7y1YcAy1TvRmwaCP9WZ8HCgKR8jF9FIyjp3OJc4httn/t3B8s1QeGY
1SXfeBaC3iq53JtpAvexU+Bhcu8m/h1f8tCzBYNntt0K4+mC87nVgm2RLbg8
vnKuxLwucONkU6WIb9OR5iiJLupCa2+utQPxVVKur4KWr+givrQk+BTxFY0G
tXdnNnZhA//vGAW+VsgOn+ZvP96Fx4MJp7Ss2pBtcKzITa8LB7WDVg64tuFQ
gfp9Nf0uuErazFqGteG8l3xn5LkuXF6Q80+psQ2uCovjrK91QVP497aXsu3o
s87XXvGoC8ESWS0bu9oROiPldjyiC+F/f33vVSR8fkNEbc7nLkSF9+dKHaYi
q37Z9/SYLtAkd67WuEAlvmnaUCypC4n7JjV3OFIxc7Bt61BOF0TemVSk/c+z
zq5fXRq6UBBdLa9zm4aVy8YXlU92oWHzAuPTLzrRXOD26uhMF05tNk6tfdOJ
t3c3LmiY7cIcsYmUrWGdWFF9fh6NtxuG6zR9fYuIdqqYGRPoRv6ow7LtU2Ru
TPl/XyvdDdclylpXzUhfxShZhm3shgVPfokC4TPvc41jm7Z045ysmUWvCx3L
MueP7NjejWt/VLSnwkkfWFr0H1buxm6O68a+DjqW9GvS7+t0Q+nG96OxqgzU
vus6P3G8G18N1uVUHWXAQ+MJ9ZleN9wWO8/WnGaA/1Nym+vpbjzSk1zqYMYA
n9HappBL3aRPovkiAxhY1DJeUXO/G989rEJavjNQ5eCucfJhN+RLq2fUZhhw
UdhU1mbbDZV/i6VfL2RiodeF4m67bkjN1yhirGViwdEvuX9edcPHkLZt1yEm
eIsCkqQDu/Htq+OlCg8maPs1jrCCyX5VJdJ2v2ciKXe4yz+MnCfnyzyXECbO
Z6quWPG5G32zlIDqFCZSEljWPKndGN/GaGigMOG8zWVpfno3DP6+PHCQ+IGL
MQpRNlnd6L6W3fCWw8SiSIf20fxuHHrGMW37xYRxoLQKo7Ibe/2V7buECI+J
1jZ/rO5GErOsXl+MhcUfre8Y1HXD0c7x+WdpFtJ9KgJrmrsRcu759nHiR/jd
b87mMLpR9YA/cuFxFrIfxZW//9ENj+uSM2fsWPD6o2906nc3bkuuiaa8YOHa
g+lfSye68Tfm7JGdLsTfWR7f7PSvGxHlPN4+bwlv3Bpzvb+YjSmumX53JAsq
fR+k5Jew8aQ3ruhmLPH7JgfyBgXYeHOVa9lA/Fn+pTfDV4TY+OTNpKhnsbDi
7E5dPQk2DIUXmOV9IX6T0tnPL8WGREh/5vFqFgpOvXxeuYGNquj39SV1LNw6
0ZqiJsMGjZmQpkv8pFqtnfakLJvw2r3Pt4nfXKm9qSdDno0/qQkZ1wmPFWra
CG1XYuNu8E5z3i7Cd2USCVxlNiK7rA5+Jn729sEqzQgVNiaHpZ7Kcoh/UxWx
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
UsEjzafNwZLqZxIm0VRkdvawnI5xsNmwJ60piorF378EztEl39/hE386koqL
i2IN7U5y4M3ru3o8nIrEdZ6rJ/Q5OLpi7b/QT1TwKFm0WJ/hYI2Zx71bYVTo
6+h7j5/jYErjsZVWKBVRV3Yfv3uBg8MHI1buC6Hir40IH9eIg7C+3+e1gqnQ
9pr+cu0yB0WL3fVuBVERFMFyZF3lYOJE5FRoIBXjuaUHLlznICcz4+p4ABXq
TZEzbTc5+LX7rPsZon37XXJPmZL8XNF93OJPRf/MHZv6uxyYCnvtvEm0ipDu
Lm1zDjSPb88VJNpDRvFbhSUHQY0Wy1v8qGAeWJV40JoDc9kvynFE7zj717Tg
IQdfPcoV/Il+ada5ee8jDt5myE6FEN3mWNib/oQDz/kD7/KJ3uofFqbwjIM8
56WzY0Q/TX5pHP+cgxH+jp0q5Hv1X26u3eLIQfyFZIUAoiUZ2h3hThwsM9D6
toLs3610X9JpFw60eGVCEon+/lnWeaE7B9se5gpeJ+c/7ylulOPJQUa16KHd
JD6lVgK77nhzwO97WFaKxE/m3CyfuA953/k1FVtIfH1Ux7vr35F87NrHq03i
Py3Vnf38IweRNmA5kfyYLGp+rRjAwaKnHtp0kr/akdIbvUEc1Frd3Hs8ggql
ljTV96EcJBr8COog+V8Q/G5oIpKD2Xxed7UYKu45OpfGRXMw6Cr3XZjUU/st
Gz+jOA4KlQw8lpJ6i95peLgkmQPpbf58milULBfRXnc/jYMm+pPyV6ReH/1T
+bUhk4OraqyLvaSetb+KhbvkcSB3PL5qMJeK1MSlj1UKSTxfbrjtW0Dq2/ef
3nAxB7tW4MXZYiqGjLv+6X7hYOfusvitX6gw0GhqnfOVA5UXJS/2fKUif2tp
fFoNB/eiXp+/XEvy/TP8/JomDiLm3vKcbKZCzu1mJrOTg7Tty/ec7qbivfk5
T28mBwucRy5u4VAxa3DURL2bg5I+w9srB0g/SmxbEdVH+vvegQiFb1RYZoya
mX3jwIupZOxI5gnNn6Uh8ZMDkYbNLwTJvFF/3ri26TcH28vSj2Xy07BCJ/Xr
rmkOxL+d3nBoFQ3pXQ82Ti/og2WPT6vJVhrEvtyYTljch0MZ52XD5Whwijvb
cmlJH9ZoB6X83knDmYd7HcoE++Bw9dxTuhoNf/hn6G5ifRg502UYROalivJL
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
pBr34n8wYf1h
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 6.572850581794162*^-14}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.8350427089371495`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ByMpTK8=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.835042709072136*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.442, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.001, 1, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$113255$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$113255$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.001, 1, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {290., 297.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.835042709413729*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Adiabatic Rapid Passage (ARP)", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835036115299939*^9, 3.835036136362033*^9}, {3.835040972288479*^9, 
  3.835040974316441*^9}},ExpressionUUID->"b4ba170d-356c-4b17-92ee-\
1bf05a755de4"],

Cell["\<\
By sweeping the frequency of the laser or microwaves through the qubit \
resonance, we can drive a transition adiabatically. This occurs when the \
detuning at the beginning and end of the sweep is much greater than the Rabi \
frequency, so essentially no population transfer occurs at those times. The \
population is transferred rapidly as the detuning goes through zero. Note the \
small oscillations at the tails of the sweep: these are at the frequency of \
the detuning we are in a frame rotating with the qubit. \
\>", "Text",
 CellChangeTimes->{{3.8350361386073995`*^9, 3.835036197901415*^9}, {
  3.8350405830435624`*^9, 
  3.83504077964559*^9}},ExpressionUUID->"cd06af36-9211-4b63-8f24-\
01ad9a4509ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", " ",
      "approximation", " ", 
     RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", 
     RowBox[{"10", "\[CapitalOmega]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"t", "/", 
         RowBox[{"(", 
          RowBox[{"tmax", "/", "2"}], ")"}]}]}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", "5"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"evolution", " ", "time"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
   3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
   3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
   3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
   3.835039939334324*^9, 3.8350399397512007`*^9}, {3.8350416380711875`*^9, 
   3.8350416595123973`*^9}, {3.8350417073066025`*^9, 
   3.8350417081577168`*^9}},ExpressionUUID->"04d5dff9-8db1-4a27-9a14-\
e974b7155cd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "Rabi", " ", "frequency", " ", "and", " ", 
     "detuning"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<|\[CapitalOmega]|\>\"", ",", "\"\<\[CapitalDelta]\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", "\[CapitalOmega]", "]"}], ",", "\[CapitalDelta]"}],
       "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Frequency [arb.]\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Qubit addressing parameters\>\""}]}], "]"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.01", ",", "tmax", ",", "0.001"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}, {3.8350397592112246`*^9, 
   3.835039761382015*^9}, {3.835040460604765*^9, 3.8350404696549473`*^9}, 
   3.8350405102213683`*^9, 3.8350415787140055`*^9, {3.8431731235932193`*^9, 
   3.8431731249146347`*^9}},ExpressionUUID->"f7d9a044-65d7-4698-8990-\
c375b47fbaed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Time to run sim: ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350394989227295`*^9, 
   3.835039559401267*^9, {3.8350395984673443`*^9, 3.835039608307582*^9}, {
   3.8350396611331615`*^9, 3.835039686522111*^9}, 3.8350397628761225`*^9, {
   3.8350398379321194`*^9, 3.835039859700087*^9}, 3.8350399416329975`*^9, 
   3.8350404703716164`*^9, 3.8350405110810575`*^9, {3.8350415814387646`*^9, 
   3.8350416727697945`*^9}, 3.8350417101078377`*^9, {3.8350491081998186`*^9, 
   3.8350491225072813`*^9}, {3.8431731158732767`*^9, 
   3.8431731253592625`*^9}},ExpressionUUID->"8eb36a1b-a27f-48fc-b936-\
af97ca2d96fb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdpOQtcl5LeipAP77Ufqb+VX2sP4C0/N
L3wtvxPOX7e+83aO3ik4P93+4sw3RZfh/Lynmo+3rLsJ53Mptqjft3gA5/cJ
nNZamPAYzk+6HbKf+cwzOL/waEtSvvorOH9jAU+whOdbhHuqs18ZhH+A85vm
/wn88uYjnM9w+YHDnqrPcL5aSVpFiNZXOP/J1+lh3Hu/wfleT7NqJxX+gPP9
nkzQlpP7Bee/OpzUcGLtbzhfT/CarHP8X4T/7L8m3vn8D853fxv1XSmUwQHG
v3EohTFKhxHO39pxJE7hK4Kfxlr64Nw5Jjg/uah6K88sZjhfP137nE8iC5x/
XkiHu9SSFc7fva5ptg4zG5xfzagVcOYugs91p8ojbws7nP90meKU+TUccP4U
DUmWnaGccP6EWWnHExW44PyoKbHneJ4j+D9clv6cv48bzn/81KniUDsPnL/I
1lD6bCIvnL+2tVQwXZcPzm8PTfZm/orgm95ZuLL9LD+cP0Nz9tqz3gJwfv2B
3hneOxF8X+nQpadUBOF8x7zj0YKdCP58mSSVM18RfJXDy6f5RQsh/Kd7SOvS
PgQ/7TPLxZNawnB+0sZPCp39CP6ESzy9R44j+Ps+q/38/x/BBwDRHzU7
          "]]}, Annotation[#, "Charting`Private`Tag$8834#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1PtXk3UcwHHuyhjIeLJCHBvzMsChqFGKwvcDE3CAzyP3mBEwBUwRggS5
GYoCTg64kttAwnnjIAFSUM0LfkGUhDHFiVqbxuGixylHCSaMUVTn9MP7vP6D
t5MoNTTBxMjIaMe//Wfd1yKL9XtyvevUg0TOPgp6VOzgKHY0Eo/U8koSKFi4
03mMzf4CZb5M8DsTR0EdLmWZs7NRyIw+szOSgmSvjAMzLDEyJzi/m/ApUBn2
lr9lSVFqYPrZEgcKFqlHuBOsRuQjt3OrU5Ag66tPe8WSo7HKMH+8loSWVrE6
eW0fKhXLHx96EgxJaFD6Ol2FturYnGfVQZAy7jLa3vIbupYy9Jk4NhBoTse5
f2waRrWslHcXrQRQZtvvKosbRQWCxYI0ZQCI1OE3TRXPUf/lornmTH9Iu31c
lMrVolH70DPrVvlB25f0sA8FE8jYhDUTq+WDLHe/1j3qLcp3un/FuMIXCurn
Q6ZfTyLzqwUrQiN9wEg1DNdzptCuuIKiF0yA1QcTs8JddYiTp5BoKrxgTFcV
aXXjHTrrUlUUwNwCgeP7Dn+bNoue+rl6VqRuAnJMssbRcQ79cjhKmaz0AO0t
0ZFfmw3oQkPxQ5lwI6xlPGLyY/9CO+FItbzNHWhIF6+Z+hstrZw5E5PMg4AJ
4QwnwghsxfnHra248KR7j7GQZwz8H7e4DXY7QceJns/ZOmPYcMzwVf1le0g0
zxhWKk2gq8PXknpnDbvTczvoNaZg9yooo8JsGq1LWqMMjjeDWHWQ49CyqZv3
7HhWGZvNQSVs0VrescHXWgpqeaYWcLt2ifqZwB7nGrvuVDy1gNNc1VilCQfT
NDnbU9oXwYJAW+MawMXjl5zK6/MWQ8gJQ7Lpeh4ud7Y3k0dYwqnpG/El3e5Y
UpPYG8+mwasNhppP0EYsLI9R0l/Q4FzEd1PRrR54dttFfX2nFdRYZpdJwzfh
0XHfrO5iOoj7d/6cq/DE57zWOwzEW0ObYxwnN9sLNxdmMJLcbOB+frIDU49w
ccTuIFOdDVwSvZEu+9gHe2hkjcUDS8Cc3BbgcdIXV7vUNg8E2UIMrtoi6+Xj
fFxaHSS3hRCDxWAtyw/vcIi42LeSAVnOLpkhaf7YJ6V3F0PMgAqNQPTp9wG4
frlopULHgNDoojcTxgK88lZDJbnLDmgxXbceQiCWuHW7Pui0g8nQ1obM7CCc
OGU2eNeVgCyGnNegCMaitj/Z4lMEzEZ2zTpbkji5IGw+8BsC6FI3rxYbEmeE
tT+mnybAUS09uvE9Ep/QZZRJKgngx6bTvFkkbtmsN1TVEVCWtGJ5mAeJ9V0L
jy41EcDJKkSH40kseUAv7eklIFAqKBqUk7jm/IG9RXcJiFN39EXeJPH5g0r+
9n4CUpmcJZoeEv/0vmSuX0lAhWyu6vk9EmuExF7VEAHDjU2NhnESc0ft+SOj
BKRftR5YZUdh9/YcxwvjBBTOZzOaPqCwZ6Fan/CCgGrv5xHuTAoHc+uuvNQS
cL2785mnM4XT97MdJycJWNSf+pbypnDe1qP6H6YIcLDWfDTEp3Ch9cjDgzoC
eNT2bKGAwtWt50tmZwkIVbFNEsIpfO6IWdLVOQISl5b6a6Mp3BSS4Js3T8Ch
KP3J1FgKt3PuML3/JqBYmnBveg+FO6dW6xcWCPj/X/gfwd44sg==
          "]]}, Annotation[#, "Charting`Private`Tag$8834#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Frequency [arb.]\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit addressing parameters\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"|\[CapitalOmega]|\"", "\"\[CapitalDelta]\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9, {3.835049108346554*^9, 
   3.8350491226518917`*^9}, {3.8431731159519*^9, 
   3.843173125426646*^9}},ExpressionUUID->"b1950c5d-3e4a-406a-bcfe-\
59787c6419a1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JhkLmXQ9OaQ2BEyv46+a3SZjc0LNhfknh2D2fApvpQ0Z+xNqwj96eAh6GnN9
gu6SsYwV3BXjH4L6gGKVJWcy1nJP7IjjtiEo1q9cMXclY37uT6SnNw1BQmfr
3cMeZMwpMj5ujkGBsPCeQyHPyZiLudM910kKvLk2MLT8koyVcN46qj1Egbv/
6Jer35CxC+IagkQbBSxiZrcfeUfGDkg7KhTVU8DQYqUuNJCMtW1blO2rpIDi
6BbsVjgZS/6nu5U7nwKHk7Yt10SSsUvPDgWKfqeAyB2+bNlPZKzG1vuMZxoF
eKT3OIbFkTF5VvFbR5MosAnfJ7H+Ga2/bfakTDwFFjMkKZbJZKzD/kflw2gK
UO8djapLJWP0eksOzggKNM8pc//3nYyRDV1q+IIoUJ6rUbuRQ8Zmeqo0Xr+j
QM4jHS+rAjL2W2TKU+0tBZKUDJQbishYUTOHp7ovBSLXri4eKyVjAv31B956
U+DdrxtZERVo/aU4ab6XFHj+wtqeqZqMuTZwGQw/p8B9NceDNnVkbIM10Gj2
KQWsNj0YaGwkY6IGKVPqHhQQ2FvTtdJCxgq+Jl+ffEyBxpN7miQ6yJiPe9Vs
lTsFPPXv/TbqJmOHDh7J7nlEAQX7yiLPv2Tss/0+j72opnrz/8j4R8b0LAcE
wt0oEP3JIbV3kIxt8cq/rIpq/fzSeLYRNL8qeV0I1axtOyMVxsnYuV1c3QdR
XUCzDbo1Scb+c5PNNEO1I2vx6wCcjAX3FV4sR7WYCM+LomkyJjRK8jJA63We
snKjzpIx/pc+bFxof28MCu7uWkTfF2x7M41qZQcua/UVMtbMw5O6is4z88rC
7N46GSO2b+aTQef9HJNjFM3EjEkoWzt6ofu4UsCuW8fCjKXv+Xp9/RkFtrab
qS9uZsa+K2h7RbyggMvmzcf0uZixxq5PQvLoviVEr0s+286MXdd8WSTjQ4Fe
xQzR1B1oXPTsusZrCqg7XuZmFWTGakI5gyv8UT/4fN18TJgZ85r4RzoUQIHU
2I11c1Fm7I2IjGoCev8dHV/o+eLM2H4yy72eMAoMKy3WOsgzY3E2uT93oH4K
N9IpizjBjA3lpJ5jTaSAzt2Y/CpFZkxs0+Uf5GQKZMedSxJVYcZ0ea3382VQ
wIvtP+8OXWYsRLww4clPCpzcR39CvoTWn6+MiiimAO20issRQ2Ys2LNJLbcU
4cFpwuL1NWZM4Yn8y9EqCuzvOoWdsWbG9CXJgjMIP91T/ifu3GHGpJ69oP/p
pIAfO0UmzIEZUz/IeiGnhwKzZ97smb7PjCXhr/KV+1G/Xv63Q/ghMzb4N/7X
+CAFTO7JbdV2Z8ZETASvPhumQEXCn+WE58xYml2gh/0EBdyKZWZaXjJjmUXa
+0sQnqW7PSfWX6H1d3eHLtMpMDDdOSD1hhkjTHbcEJiiQAiHVPcVf2ZswP4f
t/AMBc4deNbkHcCM9WR4KrDMUmBVue13VjAzFvYhyb5ujgKZV8SL+z8wY6It
j686L1DglvPjH1sjmLHVOsP4hUXUz3L/fhz6yIxV32k2MFimAPsMlqMZw4zR
tbWF/VYo0PctPudWPDMWK7PzfxRYdzzX3xdW+FifTSpJJE0hKZrnVERSRhGS
1UBJiGRlZGVlZMvee2/ZOyp8iVBGSikjDQ1+79+f5/W+n3uf8zzPOefeT23C
X2I/K1K5axorCvY6f3r8bwIe7jMrf5rJilMHfhpor0yA1kJXeVUOKx6y/DX6
i4h3FUpUDOaz4qjR5uOWqwQ+y+CKpSJW/K3fpVdLxC+klioYZaxYXW3C/5aI
k+a1KiUqWVHl+SXFfiK+V1BZebaGFf+bYnkeQ8RnLAWrTOsIPXXaXWWIWFDK
pcqzkRXdH/CefEqcNz83XpXUwop/0hVn+wl8Tfny1XXtrMjLM6I3TOAPv5Ne
PdJF+Mv96KMcIj8zSe6a5R6iHmRVHZWJ/I/Omdfw97Li10iPY8UEP/T8FzX7
/2PFUxvODb//MQGTFtK1aq9Z0Vpso944wXeZRFjt7Tes2Cal051C6OH79Wet
7xgrPs5ylpMk9LqSp/ssfZwV17P+THch9JSyqH3WPMWKWVkHtod9mgBWCeG6
8Q+syF+k1mjxgajvL+51K59YcUxAIY+H8Etm7vu6TV9ZsTlzZvetdxPgdFup
Xm6BFW9rb7b3H5kA1b3Z9ZpLrOgkXDdk8ZroF18oDdY/WTHsT24Ao38COsz7
GnL+saLtq6+LTzonIFb8YGMHCxt61a2I2RD933I2snGalQ1lVvvz6fUTwG+u
3yTMzYaKm7ZscymZgJk9DU3HKGy4kX57rVreBNR8Fm3WpbPhgX7dH2/Sifly
a6b5CT8bxtxMXi9K9PcDe1RaCjeyIZmicGKUqG/Oz3ktPYJsyL+Fz16N6Of5
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
6X2wweEfD+YGR8PEhQpo/Sd1Np6FjF6DF0mmxP32jM2e/5pYybhGtCegZL4C
1IyEZ8jcZByPdqSzOVVC/6DA3X0UMtqevmdRUVUJ2ufX/dOkk3Gzpsrv8KVK
GGmmeTvwEt9ThvpcdlWBwRFuRjw/Gd9xqwhr6VTBRCFbTNNGMg4YXeT897AK
buxc3fZRkIzqOFlyKbMKPsUt55GFychRHzJ3tqMKLNYtye0TJaPU1Xaztskq
WPT72qi5nYzOTqEqlb+qwHbtjIrDLjJG6LM20Dmr4df9yYE4cTLe07q+s5ZR
DU5zo4ZNkmScURwrKCbu8yw3Xn/6IE3GR6zvk+d4q8FjpNeGfJCM+6Xbg83J
1cB5oXtF6hAZKc9DKdtXq8Cvo81H8ygZJ3+yzArMVgEVG5kOQMZC/8o+9b4q
CCmriY07ScZI/8zg3pIq4N9bvr1JgYydyzWLKUFVEJ1cWPBBiYymtJuOvTeq
QEgg5zBZhYz/Rb7rN5etgsSgtGYpVTKmbUhm+Kytgm0ciec1Nci4MHZWXq69
EjKcY17ba5LRpnWNbIhPJYgvhRnHaZOxQn1DW+GpSii4GTTbeJmM58ZfDJYt
V0D5JU8WsjEZWyStzRe0KuBwj4uv1HUy/h4Pu2a+Ug7P5B34NE3J6GJWM6eX
WA6t++7sjLMgY+sNOxfl4TJQzjArarQiY6BZe0CCZRl0C107+sGGjMdlCrdu
Yy2Dfh4dNSlHMm4dem3ktbkUJt+fvN/oTcaCG9OJL/cWw8n4nqTdfoQfgvJC
4xKKIEFbtzskkIzvQzSFNzKKQL/LauvVMOL3og7/bswWwHBBwnPWZDLmHlcW
KduTC4duiv+8lUZG8p7PFmtXsyFStEKkP5OM7Uu8X7b1ZYFW+It7KQVkdE/1
eVnnmgG9jivCCs/I+JWTzrPIlgL7DviezW0gY+2bCpnHi0kQ9HXdvXUtZDx8
LFj60XQinDfa2/W+i4wld3liVdrjIVeg8vu5F2RchK/Fm8eeArlfXrisl4yf
DeSzUtljofO0nq3XEBlT/uqqmAdGwi6Wj/FfR8joH8I/9n4hHHwq73ZqvSPj
2rUaf8xvhcEH69WlZ5NkFCs92bv0JxROi/tt2fGB8MeK1xnLlBBIfc+v/PgT
GQdrO8dqrgcDW3ySzc8vZNQoE0t/gkFwVVsi3mCBjI2N0lN6twKhkVHV0bZE
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
ITk=
          "]]}, Annotation[#, "Charting`Private`Tag$8917#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mwh6rllqyZ/DgTPT0QlHtotgzrTTU/l6Dri2HxSq1BdBj74kQ/ZHDlzOlDir
aEisB/9tTiU1wvW7ve2BxiL4hCf7vUGxEfzORG+eMBXBi1WPHPfsa4Rgo4Nx
/5kR/Z7UuSFytREeKEmQCyxEcN5Vktr1ohFsjqx+/sGK+P5P28v3Q42g8EDD
iGEjguOh2hLKi5og99+e0ON2IiioOyFZfLMJvDZaa9y1F8FHAxEyeeVNoH/a
sfu1owiWd7k17uBvhs5unxWMcyK4IetHppN/Mzykhb7Z7CqC7Ktrdqc3NcMJ
vUd2xy8S9WXYwR1LWmD6RX7y6ysi+LE5/bdKWgssuvVN8/htETz770lBpWsr
9BX+4QYHiuCmx8PLtsW2QuIE5crruyJ43Oj4CmpVK6jbyJbTw0XwjGx9i+XS
NjDTsNzzOkEE137KGftc1AZh797Y04tEMPdTwXGphXY4JN4kvLlUBLcN4uYY
hQ6Q29OXZlcugtzpDLEgow7Ifj09mV8rghmeCcLpDzqgPUT5ml2nCO5/s/zt
hEwnxFRryQZzRVDhx5ENa/U6wW52R1V+nwgK0H/oxdp1wpTDESr9HeHvTS9T
yAmdwNa9H5E/JoJGh6SdbRZ1QY/b4y3vJ0RQ78s2tWfruuBxyosB2rQIel98
+mfWoAvUltTJ2f0VwUCHMysK3bvgt1FXddC8CGoo/TgjGdwFZdffO+bzUdEq
38rbI7EL9n2by6AJUdHvjXXk8oYuWCZHNdtEpWKD48g364EueHtA/KctnYrC
+qSewLEuSA5WiApiUfEspkqnzHfB+coNW/MXUfH57/nmLFo3bP6jO/RuKRWl
aYkxTyS7gW+9yQ2aJBV3fRHiXVHshroTBxU2raRieUFg/CaNbgiNcai1laGi
dmuzbue2bvBw93Hzkqei2eb0U/K7uuGIWZx05GqiHlVi3npvN+xULeRkKVPx
IH2VvJdlN6hQuz0aVai4IX9H9A2bblj0eVJ+eD0VFR+qFpyy7Ya/5fRWfg0q
Hlcze6lu3w3vHyl7rdCiEvnn+qL/ZDfUX96ptGkLFbOMIjyPn+qGTAvbzv06
VPxFCbSpI3DUhqvXzwAV3aXviAsT2JsereKvR8UE3/2KMsT3DqO5PQk7qWi4
bZ0t80Q37KluvVlsSEWTQ/w/O492g2bCNzWuMRVX5PHdOneoG5ZfFR6cNCX6
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
nJibo/k0mI+9H5vg/y3opaM=
          "]]}, Annotation[#, "Charting`Private`Tag$8917#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
A8D6TdY=
          "]]}, Annotation[#, "Charting`Private`Tag$8917#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9, {3.835049108346554*^9, 
   3.8350491226518917`*^9}, {3.8431731159519*^9, 
   3.843173125555582*^9}},ExpressionUUID->"9e21034f-5ba7-4345-9d4c-\
30fc74c1ff33"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Dvh/W397fR0ZeT0uhDt6Z4O2mUzLeAsZDy2pH+C4mAXpAkU/tN6Q8VlXhe+d
qgwgdx8Rye8k490knSKvtjRoVjO55fmeqN+hwJJgqWTYxjIV/W2QjEdcq8cd
7ySCV5F986mPZMxMSL1bNJwAk3b/FsvHyNjIl960wSwe1KR9NktNklGlk+R8
/k8cJIzzHfP7TMYdOmzr/suOBbbouJs/vxL6yeySPeEeA4Vbb7IqzpNRoM+D
cfZXFFQzipsaFsmIS8KtmgvPQbRFdVFumYy303wDvxyMBFePt8Jhv8nIYqNM
zaoJh+GDZ4+y/CPjf+ZH7xzxCINDP6fsrdZSMHxgvPW0ayi8yLoZ1cFOwccl
Ry1PFYbAn8ssTfu4KdhRvTP4hnQIGIv7fo8hU3Bzrqve6GAwFA/yC3PTKSgs
uSN2uCkYNoa81LixjoJO+KL/2PdguKsjZ/+ej4I2moedRw1DoJer5MVhAQpW
Nb0iX/sVAnuq1RqThSjode1zb3xvKAQ7dS4wRCk4orSdPjAbBouKpkKOEhT0
0F1z3EQlAvS/TauPSlFwseTeiGN7JGQn3rI7toOCcR94JoyevQCG2ZoX2bIU
1BSPGW31i4brAk8aBBQouKVxbllvJAbedG1YcNtNQRPn9Ezj9XEg+yR+05d9
FOQzOTulavESnqjtVNc/QMGZu7RI5eZ4mPlXcqMEKMhy5cCU5dFXkGLXVe+j
RsHRMv3hat9k4JY+N//9KAVtD+rP92mngtX4Z0ETLWK/mNJcvi3pIGm49ob0
SQrq9TV2JXhkQdxBecE2MwpupG45H1KXC9XaJPffFyg4tmmKXPY2D0bPjX3e
ZkXBs5m9Lb0j+SDuFlzsaUtBP9Su38lTBPH1K0boROTLLWnhZlsGtb2dVbb3
KTgxMKx137McPk2lbnvxgILa9013vnheARI8pisrjyhYn+Lis/5jJSToVIfl
BFHwfUtrjvlkNdSfj2QZDSXitdhrx2tWAxM3blrRIyk4y9KYXP2uBiSDJPfZ
xFJQ9liCaFxuLagl/IuOjKegz1N9XrFNdWCZ38fZnEjUV36vzZ77dfCqz7tX
MoOCSVc3673fWQ/10xZg8JqCH8f87Dpd62Hi14FE91wKOtLf/pRprgcOMh8t
u4CComb3d6eQG0BKaPb2x2IKLtS3qtE0GkBDtnGIWk7B/hklZ0nnBrCCWLWD
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
          "]]}, Annotation[#, "Charting`Private`Tag$9005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c8lt8bfl8vMiIrIV8hRQgZpZT7oRAhCQlRIjOjKVLKSMnMCtkVUmZW
6th7e197vPbee//8/no+z+fc5z7XdT73ue774jO11zanwOFwpAM43P+/X16Z
Up8xc5Gn8TVan+HbQGWtvOq3eG9DVf1xl2yjdbRX8c+dl9cK+lsdrwSHraEv
Rb7HqHhfQF9wR6kvwyqyvfT04dqx9/BdtI3KZWMRtW5ZBs8f+wzCvguNX0In
0LNKHom5jAhoqGkx0KQdR1yfiLUzl6Mg4Up68ieXUWQqjBGmLGLAqKP+0pjx
EHJKpc9fbI+HV5qn5HcUu9CB7kHBmWPJ0OV69Vu0djDqKPr7dHo8GXzDT6lJ
eX2BlG/hpVMZKRCQWEqyb80CzUeaJpOXU0HlP0rvgJsVEEpbEDpmkQamJ7Xc
tlzbIfu52qPHHOlwxvDJuK5vF0RNnuNcepkOd7/im7Y/94JdE4vFolIGRHoZ
2R0nDQBLVBXFQnsmGF9PvZjaOAZbjDnJDhezgEHO16X26gQMv0nQmo/Ngp1K
ivazaBJyLF5Fz1llw7sn73eC42cgpstGyb4hGy7hkg57Mc6Bt8bt6VnJ3/Dm
eLNZ/YV5MJCSvjC79Ruk1qN/yIcvwOVvfAMP7+aAxMqR+dPYIohyHvKeKcsB
Q0qvSfWBRTj8cVvs4alc8PrzUz/BaQl2dydI07650Cw4spKDW4Yxx/aXtou5
cK2l98Ix+2VoGi47Pq2XB24lEktqqcuQdyuzxuZPHtB65556/3wZ4mpiHKeO
5UNTWVnHuZpFWA7/Ldz/MR9Ot2wpXQ5tAGWL2qGWjXzI7zvOtzW4gD7LDERV
PCgARb08B+d7y2iasKZb0FoA+ZZc6Tm/lhG0HDz0C/sD3h1VVQJ2yygolr8q
7ucfMK4ed5dfWUIjdrJvQrgK4eqRJ+Iud5eQ7CXNC+/fFQIbn6J6xZ9F5ENv
tvRyuRC4jz8PFGVYRH2dL1Id7v2FzI82pUO3FpDHs688+nL/4NhCtvhG0Rxq
StumEJxDIFX5oYM/ZQKxAK0xg1gRPFVkNLr43ziSOxl84Z1ZEbD6eT686TeK
/JaTl5ybi4Duzim5TzZDSDqQZG76oxjqXKom5sW70OsaUbUzJqXwU1KD9Jro
hZIyck/+CCmFtdv0O3E5CdASrkg4UVcKG7ZXSrJ9ckDAQr+Q43wZPBNxOe8w
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
HT+yBWtd5VLvXxPB79aYqiDPFryn/HolMYsIDDEXlswFtgDLVWIXGiDCx1Hf
qEThLSCE+vkOHCABndiA0pDEFlg+Z+aNECSB91PpOb5zW2CgLOZ+BCMB9d93
4XcvbQHn+VPZR2+QwIOyWyHm8hZ8Gf7z3cqABAR1sale1S1QEUl0rzYkwdtP
b4K5tbaA90HLVbwuCXDdxEuGeltgvjdziKhEglf8QmOfjbbgx+l7ZynESLBt
5RLQYboF+oeCrqgzkMA5o+H8EastuP3wi4DzEBE21vmGdO338VhnuOikE8EJ
e/ox+OkW8Ij/PJLwmAir76pkWl224IJpqv3p00R40ni0n/ntFnQM/PIt7GmF
JXZ7by3vLZBpdiAcf9sKj4xLzvj7bQGHEn+S7H+tMP/1cHd98BaM/UlU7/jZ
AnYzlh4HI7dgkS0riSzVAjPShaevxW0Byqt/cjatGSZLTd2qfm6B662NxijP
/XoI7LD2y94C/LeuRafERtAx1tTV+bMFyq7CQyECDfBv/bwwuWoLUqSNVlFX
DSyVp7F9a9wCZ563hGnmahD6dGLPpm0LgvgCd05JVkLQaWbi2tAW9LKE8U6d
KYXKTa9/fye3ILxw7cg6azFsV24nuS9swSEWU0qVqr/wwHTc9dDeFmguRBv9
+ZENcmFIUJBrG8y8Tmk3HXkODmYyLDO823CUf0zoGPJB38782M4U3AbDbv+P
sWWxiKkutFleZhuMCw6+GDuZiZQ+HyykvLi9n/e5WORaDnJ+8PZbjeI2iHFK
BQbm/EHDODsXPa1tqPYfErJ7XoI4G4bMuW9twzJrKrt+ehnSjLytNXhnG2Ra
lCsnOypQnozSCTubbXg99THBb6kGzVD8OST9aBv4ZdwP6g3VIf4mic0Np23g
XvS+LfqvAX205m709NqG5wl36s9wNqPic0H513y3gefC6IenI81olZImkTl4
G0or3P4afmtBIi2ufu0R2xDr2/6WZNiK7sYsOX2J24b3zPeyBqmIKMTW6v79
pP38jqxFYYlEVHO+X+NU2jbsVmQ2sMmS0B61ruzc721wapu7/aaIhKSJNfy/
C7fB2uBNDZ18G7KKwxhcSrdB7tFw1VB6G4q2y1nDarahvtnFXI2zHbXKiQ5S
N2/DUL3OLY/n7YiGNr6urn0bhL7cvd5R244utR3JDerbhnyrd6y+7B3oUYJv
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
F32bFV/694+jj/OGKzXj3eh/G2RUEA==
          "]]}, Annotation[#, "Charting`Private`Tag$9005#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9, {3.835049108346554*^9, 
   3.8350491226518917`*^9}, {3.8431731159519*^9, 
   3.843173125653284*^9}},ExpressionUUID->"6dd54809-ab86-471b-87c8-\
8764a0e524fd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.01, 5, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$9072$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$9072$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.01, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {276., 283.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9, {3.835049108346554*^9, 
   3.8350491226518917`*^9}, {3.8431731159519*^9, 
   3.843173125668467*^9}},ExpressionUUID->"b3ecf2a2-e54b-4ac2-98ed-\
7996698a4336"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,126,86,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732147474604`*^9},ExpressionUUID->"11fe0e1e-9660-4154-bf0b-\
a79f57330a13"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,126,87,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732147637806`*^9},ExpressionUUID->"7105d263-21a7-4da2-a55f-\
c39ea8d047e2"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,126,88,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732147913675`*^9},ExpressionUUID->"9606628d-fa33-4813-9cf4-\
936fb93ff79e"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,126,89,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843173214807266*^9},ExpressionUUID->"bbf4471a-22d5-4b97-82f6-\
32731c2b5653"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,126,90,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732148375273`*^9},ExpressionUUID->"546a22b7-5c76-47bf-aebe-\
791f0e099982"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,126,91,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732149023323`*^9},ExpressionUUID->"58692e78-bf61-4e07-8ea8-\
4d2e03aec25a"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,126,92,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843173214957264*^9},ExpressionUUID->"b50c40bc-0c45-4fc1-a9f3-\
59e2ccf5d513"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,126,93,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431732149892387`*^9},ExpressionUUID->"8430fbc7-05ca-4494-b824-\
f170e1f86a79"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time-dependent Rabi frequency", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835036115299939*^9, 3.835036136362033*^9}, {3.835040972288479*^9, 
  3.835040974316441*^9}, {3.835041178847898*^9, 3.835041186175006*^9}}],

Cell[TextData[{
 "Ramping the microwave power (i.e. the Rabi freq.).\n\nOne way of doing a \
rapid X gate is by simply applying a very short but high power Rabi pulse \
such that the integral of the pulse is still \[Pi]. For a Gaussian pulse ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalOmega]", "peak"], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "a"}], " ", 
      SuperscriptBox["t", "2"]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the time integral is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalOmega]", "peak"], 
    SqrtBox[
     RowBox[{"\[Pi]", "/", "a"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so we want ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[CapitalOmega]", "peak"], "2"], "/", "\[Pi]"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". For tmax=10, ",
 Cell[BoxData[
  RowBox[{"\[CapitalOmega]", " ", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "50"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"tmax", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}]], "Input",
  CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
    3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
    3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
    3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
    3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
    3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
    3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
    3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
    3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
    3.835039939334324*^9, 3.8350399397512007`*^9}, {3.835041047675274*^9, 
    3.835041143093012*^9}, {3.8350412022616234`*^9, 3.8350413033955727`*^9}, {
    3.8350418641059284`*^9, 3.835041907622984*^9}, {3.835041996312902*^9, 
    3.835042174768655*^9}, {3.835043464621416*^9, 3.835043465074932*^9}}],
 " approximately satisfies this. "
}], "Text",
 CellChangeTimes->{{3.8350361386073995`*^9, 3.835036197901415*^9}, {
  3.8350405830435624`*^9, 3.83504077964559*^9}, {3.8350409903245263`*^9, 
  3.835041040811996*^9}, {3.8350411472184086`*^9, 3.8350411598650036`*^9}, {
  3.8350422158357077`*^9, 3.8350423134230366`*^9}, {3.8350429681392603`*^9, 
  3.8350429915841527`*^9}, {3.835043486972205*^9, 3.8350435819270077`*^9}, {
  3.8350437153746996`*^9, 3.835043831798624*^9}, {3.8350852229266453`*^9, 
  3.8350853098255243`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", " ",
      "approximation", " ", 
     RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "50"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"t", "-", 
           RowBox[{"tmax", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"evolution", " ", "time"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
   3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
   3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
   3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
   3.835039939334324*^9, 3.8350399397512007`*^9}, {3.835041047675274*^9, 
   3.835041143093012*^9}, {3.8350412022616234`*^9, 3.8350413033955727`*^9}, {
   3.8350418641059284`*^9, 3.835041907622984*^9}, {3.835041996312902*^9, 
   3.835042174768655*^9}, {3.835043464621416*^9, 
   3.835043465074932*^9}},ExpressionUUID->"64db0458-3539-4318-943b-\
7a08992faf73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "\[Rho]", " ",
      "elements"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "Rabi", " ", "frequency", " ", "and", " ", 
     "detuning"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<|\[CapitalOmega]|\>\"", ",", "\"\<\[CapitalDelta]\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", ",", "\[CapitalDelta]"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Frequency [arb.]\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Qubit addressing parameters\>\""}]}], "]"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.01", ",", "tmax", ",", "0.001"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}, {3.8350397592112246`*^9, 
   3.835039761382015*^9}, {3.835040460604765*^9, 3.8350404696549473`*^9}, 
   3.8350405102213683`*^9, {3.8350413399798746`*^9, 3.835041513400248*^9}, 
   3.8350415608082085`*^9, {3.8350418107868867`*^9, 
   3.835041812454124*^9}},ExpressionUUID->"961f9d86-f519-4a5d-b416-\
1db5ff395f6d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Time to run sim: ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350394989227295`*^9, 
   3.835039559401267*^9, {3.8350395984673443`*^9, 3.835039608307582*^9}, {
   3.8350396611331615`*^9, 3.835039686522111*^9}, 3.8350397628761225`*^9, {
   3.8350398379321194`*^9, 3.835039859700087*^9}, 3.8350399416329975`*^9, 
   3.8350404703716164`*^9, 3.8350405110810575`*^9, {3.835041212730671*^9, 
   3.8350412641240807`*^9}, 3.835041305950017*^9, 3.8350414166264553`*^9, 
   3.835041515167165*^9, 3.8350418132730255`*^9, {3.835041883426692*^9, 
   3.835041909817813*^9}, 3.8350419995122194`*^9, {3.835042055568327*^9, 
   3.835042175801793*^9}, 3.8350434681102476`*^9, 3.8350442647501116`*^9, {
   3.8431731735741177`*^9, 
   3.843173179904084*^9}},ExpressionUUID->"00ab9b55-2153-47f9-9edd-\
753306d891f8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$15630#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

          "]]}, Annotation[#, "Charting`Private`Tag$15630#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Frequency [arb.]\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit addressing parameters\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"|\[CapitalOmega]|\"", "\"\[CapitalDelta]\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}, 3.8350434682259083`*^9, 3.835044264867798*^9, {
   3.843173173634698*^9, 
   3.843173179954929*^9}},ExpressionUUID->"619ce94e-8931-489b-9769-\
b41093fac01d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$15713#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$15713#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Yb/Afw5qXB5QWvHPhSMbJ+fm/vk/fnQZRQ==
          "]]}, Annotation[#, "Charting`Private`Tag$15713#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}, 3.8350434682259083`*^9, 3.835044264867798*^9, {
   3.843173173634698*^9, 
   3.843173180048724*^9}},ExpressionUUID->"5d48219f-00fd-4336-8379-\
2efc8bd5c307"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,124,46,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843173180099829*^9},ExpressionUUID->"8ea7c7df-9078-4907-89db-\
8432347e7b8c"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,124,47,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431731801275043`*^9},ExpressionUUID->"703cfa47-65bf-4149-aefa-\
df9a16052fa9"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,124,48,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843173180143264*^9},ExpressionUUID->"0255ccb9-81a0-4c7e-8a0c-\
33388ba9f227"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,124,49,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843173180159397*^9},ExpressionUUID->"238e029a-1f64-4659-9b95-\
5aac745333f0"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,124,50,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431731801767435`*^9},ExpressionUUID->"51051eab-06a7-4da3-b548-\
112e2c8b9a2e"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,124,51,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431731802082305`*^9},ExpressionUUID->"d0da0438-7508-429c-b393-\
525d1c0131ec"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,124,52,
   34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.84317318022436*^9},ExpressionUUID->"a432fe22-bd55-4ba7-98bd-d41bb0384306"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,124,53,34016292872386718062,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8431731802723513`*^9},ExpressionUUID->"49275471-5118-4eee-a081-\
cc71f431acbe"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF1XlcTN//B/CZSTVt1Nx7p0V7EZVKEqI570iipKQikQpFOyFEG6UoIe0q
yUdI6EP7QvsupQUtlLRS2lX0u/P5+eaveTwf986c9+t93ueMjK3r7iM0CoVi
RaVQ2J93LtpyrT58lSWySnfPrAwPcH/sUvgmlY3+57tVCe6DUpULTnsa9NFJ
5cOC7dHb6KET3Qt26VnZ/SKtf8G8MpcUOtePLDhUsFrx7qGxBdt+3FPIUTO5
YPfSS7auCjMLfu7Gbyqy/dffes47DqhZUOB/9kuYMxkfoi6Y0vgJ8s5xLHi5
x1HPPYqcC/4yEWnOl8+14B09xy/cdKcv2OhLmJKkJO+CB4ptfSqe8C1YRahZ
You1wIJ50YRN29jiBW/7Zjklaya44Naiw1RLZaEFl93H1fLDhAD/45dXSg5K
TwiBqNL/u+uB2vxVJQZcFd3ynxeXxyVM2TDANLTalO3xHY+wUgcGCH90+8/v
6zIDb7oy4Hhe0262C3aXzlqfZkDv8loTtpObG1xXXWAAR42AMduRUe9Xhvsw
gNFUZsR2sOWn7hl/BozWS+1k20u8945NIAPctKgGbLt2fLOoCGbAu5Kt+v/t
V+K4kGooA/aXluiyvcd2tvr2DQbwVWyF//LL0wLmwhnQrROoxbbWVzrYRTGg
TVt9DdurUpbMVMYyQOT5x5VsSx9nvlBLYMDhCqok2wxlCZfIJAbclJ5czDbn
d7kVv+8z4Jr85OwM6emnil2HHzLg/Y2RbrYH3FfHVaeS72vklbLdvma9ufoz
BhhKFCewXT/BEoz+lwGbCnnd2C7O3Fo1n8GAKypeGmxnnDW8dDSHAZqd/AM/
SadsNGXV5jNgzF0hhO3YX/um17xmwC6+z6JshxYeSo8pYcAHyajgadI+vvZO
1AoGWFmKv58ifXKLy3KHagZ4+Kv9niR9lPPUp7o6BqwVLByeIC0mVdky+5YB
ZQl2ueOk69ZLvFnRxIBDcYZ6Y+x53u1eZtbKgFu6jn4/SGs6leb7fWTAoNxO
m2F23suiL592MODsyT1vh0jHJzintn0m8xfty+0nvTv79T2eHgZE8iVxfyXN
1UjEavYxwPhsZvRn0jlDx27aDTJAcY+eQRv7vHIVBIV9Z0BLetV4E2lZaYZv
/g8GfLnG4VRHunnDUc+BcQYkSX33KGXPi2mOq/A0Awpj3WpySLOcF9vrzpK/
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
P6Sk/K8Lxpb/nJ//6/8DDmUkcw==
          "]]}, Annotation[#, "Charting`Private`Tag$15801#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFz1tM0gEYxmEIdQ6pwCQxhMCYJIcOF2114aBk64A5LdAFHeCv4qbNQ8Xm
tGZzNnLNco4F0y1GzVwLbW554TRU1JEJtKS1trDcktlIWolkqER10fddvPvt
uXz5RN2Zyi0kEkn+d//KLEiZDaR+l7GkCtUGPzb2MbT5rZCOtva9Jfs56JIK
R8Y5MZrKbxN+Ooz2WIV5454f4Lv0WZFdFwETH1RjFM9PcMN0G1EnXAcP1tPO
sk7GwfbmmtCBMpL8v1ttmyWry2Qwyb8gH22igHOvGRpVomTwYtRSmvYiBXwq
WH2jqyEVXLTYKeZyqeDQJHHzZX8aeB/jHafg0lYwVRbVByLbwMfDmrUcNR38
3lVB1kgY4KHbUxd5UbQh2bjg86WDy680D9G6d4BnLvsnHHH0/iqxr1CfAc7s
qpkvtaATo0+XdV701TnlauUX9NLS141qChOsCPvzJVS0fWWkJUxHF0ef8Yoy
0L/XHk0MZKId6xZiOxutjd+h1HPBMmbqedOKGP06XZJmPIKe1pX5ix+gRwZa
eySUneBmsqjYM4+mBppO1D7PBAcf88226yyweW9W0rA6C9zZbXDrebvAGvMF
H20J/UvRG7M52eDPwWONLlM2+GH+QbZXzwH33zIyqqRcsEldrqRE0YcC9icm
726wNa+n36vkgVvGO6zKYfRptrr3lYAPPlrr1jLa0bZsQuCJogWTffeLtDn4
T+oSzTnRhkjSmxnRHjAxuMJrv4funKN1TLnRzkhuLJFA/wE28b6c
          "]]}, Annotation[#, "Charting`Private`Tag$15801#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}, 3.8350434682259083`*^9, 3.835044264867798*^9, {
   3.843173173634698*^9, 
   3.8431731803207045`*^9}},ExpressionUUID->"db35e40a-7a9f-4d3d-98fa-\
06bfe4bea2a0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 5.411, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.01, 10, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$15900$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$15900$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.01, 10, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {276., 283.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}, 3.8350434682259083`*^9, 3.835044264867798*^9, {
   3.843173173634698*^9, 
   3.843173180356985*^9}},ExpressionUUID->"f9f4dafb-372b-4043-9f8e-\
1d78eb27bb06"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1284, 681},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 107, "Title",ExpressionUUID->"4876905b-648a-49d5-8165-a882f8035fd1"],
Cell[745, 27, 153, 3, 39, "Text",ExpressionUUID->"02a93783-c838-42c4-ba79-b5d3de9104b4"],
Cell[901, 32, 322, 7, 39, "Text",ExpressionUUID->"4d0354ca-98cd-4cf5-9125-1dbd887c8d12"],
Cell[CellGroupData[{
Cell[1248, 43, 219, 4, 73, "Section",ExpressionUUID->"019d1a89-06e5-49f8-8489-c722c4fe69b8"],
Cell[1470, 49, 25881, 632, 1979, "Input",ExpressionUUID->"0eafdb81-3529-42ff-a249-1baa9f165b49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27388, 686, 164, 3, 73, "Section",ExpressionUUID->"8f03b258-0f37-44e6-9117-1ed1aa4ff83f"],
Cell[CellGroupData[{
Cell[27577, 693, 229, 4, 59, "Subsection",ExpressionUUID->"d4ae9ccd-f219-4c49-8622-853cedc80230"],
Cell[27809, 699, 984, 23, 94, "Text",ExpressionUUID->"56eb7a86-9a4c-45ad-a4a2-29773f43fc74"],
Cell[28796, 724, 2209, 60, 269, "Input",ExpressionUUID->"44aeb708-6546-456b-b5ea-e6782b7eadc3"],
Cell[CellGroupData[{
Cell[31030, 788, 7041, 176, 627, "Input",ExpressionUUID->"b3d60264-8e12-4071-af39-f71814e76093"],
Cell[38074, 966, 590, 11, 23, "Print",ExpressionUUID->"8d8ac5d4-5596-4902-a97a-43d0ccd96499"],
Cell[38667, 979, 60338, 1057, 296, "Output",ExpressionUUID->"22a6d569-ed7f-423f-b661-9b52bec04ea3"],
Cell[99008, 2038, 30510, 554, 298, "Output",ExpressionUUID->"299afa2b-ca65-42e5-82da-656fd316f955"],
Cell[129521, 2594, 2486, 49, 580, "Output",ExpressionUUID->"5c6684cb-d42c-4ec5-b464-5254608dc0dd"],
Cell[132010, 2645, 321, 8, 50, "Message",ExpressionUUID->"3f9baca9-240d-46a1-958c-604dffe0af82"],
Cell[132334, 2655, 506, 11, 23, "Message",ExpressionUUID->"04572787-ca46-4190-8e29-16346a11cb09"],
Cell[132843, 2668, 321, 8, 50, "Message",ExpressionUUID->"d740c1d1-a83c-4f66-bae9-7a564bb5b9e4"],
Cell[133167, 2678, 508, 11, 23, "Message",ExpressionUUID->"1551c186-85c4-40ab-9bfd-a6b08c03f199"],
Cell[133678, 2691, 323, 8, 50, "Message",ExpressionUUID->"80ef9e5e-0c54-4be7-87af-50dadf2f7832"],
Cell[134004, 2701, 401, 9, 23, "Message",ExpressionUUID->"81f91199-8140-4fc5-b12d-b1bc163e52af"],
Cell[134408, 2712, 509, 11, 23, "Message",ExpressionUUID->"16197ff1-9793-43b6-ab09-f6d07e27565e"],
Cell[134920, 2725, 406, 9, 23, "Message",ExpressionUUID->"93a8d000-660b-4b7c-b17c-56223090b37d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135375, 2740, 236, 4, 59, "Subsection",ExpressionUUID->"02c17e97-d820-48f8-b087-763bfbf6f259"],
Cell[135614, 2746, 813, 18, 85, "Text",ExpressionUUID->"0ab389db-ad58-445c-a8f3-7102d6ac19d2"],
Cell[136430, 2766, 2262, 57, 297, "Input",ExpressionUUID->"65d1da59-8810-4533-8396-1e6690ad7571"],
Cell[CellGroupData[{
Cell[138717, 2827, 6984, 175, 666, "Input",ExpressionUUID->"aac28c17-70e1-4946-bd83-e9526d0e3ac5"],
Cell[145704, 3004, 595, 11, 25, "Print",ExpressionUUID->"850cde38-5695-4c92-bccd-b96ddf14650d"],
Cell[146302, 3017, 65220, 1134, 322, "Output",ExpressionUUID->"c53caf3a-09d9-47a2-9a63-2538378b0e93"],
Cell[211525, 4153, 36371, 647, 324, "Output",ExpressionUUID->"a5eacced-18ac-4f6b-b21d-83c74e550c58"],
Cell[247899, 4802, 2491, 49, 665, "Output",ExpressionUUID->"55d94a38-1f59-4d8b-9a5f-6b3577b465c7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[250439, 4857, 274, 4, 41, "Subsection",ExpressionUUID->"b4ba170d-356c-4b17-92ee-1bf05a755de4"],
Cell[250716, 4863, 721, 12, 115, "Text",ExpressionUUID->"cd06af36-9211-4b63-8f24-01ad9a4509ce"],
Cell[251440, 4877, 2798, 71, 269, "Input",ExpressionUUID->"04d5dff9-8db1-4a27-9a14-e974b7155cd0"],
Cell[CellGroupData[{
Cell[254263, 4952, 8683, 215, 759, "Input",ExpressionUUID->"f7d9a044-65d7-4698-8990-c375b47fbaed"],
Cell[262949, 5169, 938, 16, 23, "Print",ExpressionUUID->"8eb36a1b-a27f-48fc-b936-af97ca2d96fb"],
Cell[263890, 5187, 14813, 294, 295, "Output",ExpressionUUID->"b1950c5d-3e4a-406a-bcfe-59787c6419a1"],
Cell[278706, 5483, 157054, 2643, 296, "Output",ExpressionUUID->"9e21034f-5ba7-4345-9d4c-30fc74c1ff33"],
Cell[435763, 8128, 101114, 1710, 298, "Output",ExpressionUUID->"6dd54809-ab86-471b-87c8-8764a0e524fd"],
Cell[536880, 9840, 2805, 54, 580, "Output",ExpressionUUID->"b3ecf2a2-e54b-4ac2-98ed-7996698a4336"],
Cell[539688, 9896, 323, 8, 50, "Message",ExpressionUUID->"11fe0e1e-9660-4154-bf0b-a79f57330a13"],
Cell[540014, 9906, 508, 11, 23, "Message",ExpressionUUID->"7105d263-21a7-4da2-a55f-c39ea8d047e2"],
Cell[540525, 9919, 323, 8, 50, "Message",ExpressionUUID->"9606628d-fa33-4813-9cf4-936fb93ff79e"],
Cell[540851, 9929, 506, 11, 23, "Message",ExpressionUUID->"bbf4471a-22d5-4b97-82f6-32731c2b5653"],
Cell[541360, 9942, 323, 8, 50, "Message",ExpressionUUID->"546a22b7-5c76-47bf-aebe-791f0e099982"],
Cell[541686, 9952, 401, 9, 23, "Message",ExpressionUUID->"58692e78-bf61-4e07-8ea8-4d2e03aec25a"],
Cell[542090, 9963, 506, 11, 23, "Message",ExpressionUUID->"b50c40bc-0c45-4fc1-a9f3-59e2ccf5d513"],
Cell[542599, 9976, 405, 9, 23, "Message",ExpressionUUID->"8430fbc7-05ca-4494-b824-f170e1f86a79"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[543053, 9991, 263, 3, 59, "Subsection",ExpressionUUID->"4fec7236-9193-4731-a426-8714d8bf8791"],
Cell[543319, 9996, 2751, 62, 119, "Text",ExpressionUUID->"d4eb061b-d5a4-4d8f-a540-24ea866f179f"],
Cell[546073, 10060, 2977, 74, 273, "Input",ExpressionUUID->"64db0458-3539-4318-943b-7a08992faf73"],
Cell[CellGroupData[{
Cell[549075, 10138, 8531, 210, 759, "Input",ExpressionUUID->"961f9d86-f519-4a5d-b416-1db5ff395f6d"],
Cell[557609, 10350, 1128, 19, 23, "Print",ExpressionUUID->"00ab9b55-2153-47f9-9edd-753306d891f8"],
Cell[558740, 10371, 25400, 469, 302, "Output",ExpressionUUID->"619ce94e-8931-489b-9769-b41093fac01d"],
Cell[584143, 10842, 40185, 725, 296, "Output",ExpressionUUID->"5d48219f-00fd-4336-8379-2efc8bd5c307"],
Cell[624331, 11569, 321, 8, 50, "Message",ExpressionUUID->"8ea7c7df-9078-4907-89db-8432347e7b8c"],
Cell[624655, 11579, 508, 11, 23, "Message",ExpressionUUID->"703cfa47-65bf-4149-aefa-df9a16052fa9"],
Cell[625166, 11592, 321, 8, 50, "Message",ExpressionUUID->"0255ccb9-81a0-4c7e-8a0c-33388ba9f227"],
Cell[625490, 11602, 506, 11, 23, "Message",ExpressionUUID->"238e029a-1f64-4659-9b95-5aac745333f0"],
Cell[625999, 11615, 323, 8, 50, "Message",ExpressionUUID->"51051eab-06a7-4da3-b548-112e2c8b9a2e"],
Cell[626325, 11625, 401, 9, 23, "Message",ExpressionUUID->"d0da0438-7508-429c-b393-525d1c0131ec"],
Cell[626729, 11636, 503, 10, 23, "Message",ExpressionUUID->"a432fe22-bd55-4ba7-98bd-d41bb0384306"],
Cell[627235, 11648, 405, 9, 23, "Message",ExpressionUUID->"49275471-5118-4eee-a081-cc71f431acbe"],
Cell[627643, 11659, 20071, 381, 298, "Output",ExpressionUUID->"db35e40a-7a9f-4d3d-98fa-06bfe4bea2a0"],
Cell[647717, 12042, 3011, 57, 580, "Output",ExpressionUUID->"f9f4dafb-372b-4043-9f8e-1d78eb27bb06"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

