(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    648506,      11992]
NotebookOptionsPosition[    645809,      11909]
NotebookOutlinePosition[    646182,      11925]
CellTagsIndexPosition[    646139,      11922]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["qubit rotations", "Title",
 CellChangeTimes->{{3.8350140506299047`*^9, 3.8350140530905385`*^9}}],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.8350428197281413`*^9, 3.8350428322639785`*^9}}],

Cell["\<\
The math here generalizes to other qubit platforms, but for concreteness I\
\[CloseCurlyQuote]ll use the language of lasers or microwaves manipulating \
atomic qubits. \
\>", "Text",
 CellChangeTimes->{{3.8350140667185225`*^9, 3.8350141035261445`*^9}}],

Cell[CellGroupData[{

Cell["functions - run first", "Section",
 CellChangeTimes->{{3.835017129202883*^9, 3.8350171605143223`*^9}, {
  3.8350173445190353`*^9, 3.835017345667758*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BuildMasterEq", "[", 
     RowBox[{"\[Rho]0_", ",", "H_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dim", ",", "rho", ",", "eqIdcs", ",", "comm", ",", "linblad", ",", 
        "rhoPruned", ",", "eqsPruned", ",", "rhoICPruned", ",", " ", 
        "popIdxList", ",", " ", "cohIdxList"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "The", " ", "junk", " ", "below", " ", "just", " ", "builds", " ", 
         "the", " ", "eqs", " ", "to", " ", "be", " ", "passed", " ", "to", 
         " ", "NDSolve"}], ",", " ", 
        RowBox[{
         RowBox[{"removing", " ", "the", " ", "redundant", " ", "matrix", " ", 
          RowBox[{"elements", ".", " ", "The"}], " ", "derivatives", " ", 
          "could", " ", "be", " ", "worked", " ", "out", " ", "explicitly", 
          " ", "and", " ", "typed", " ", "in", " ", 
          RowBox[{"(", 
           RowBox[{
           "just", " ", "the", " ", "optical", " ", "Bloch", " ", 
            "equations"}], ")"}], " ", "but", " ", "this", " ", "can", " ", 
          "the", " ", "heavy", " ", "lifting", " ", "for", " ", "higher", " ",
           "than", " ", "2"}], "-", 
         RowBox[{"dimensional", " ", 
          RowBox[{
          "systems", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\"\<Pruned\>\""}], " ", "variables", " ", "refer", " ", "to", " ",
           "the", " ", "eqs", " ", "which", " ", "have", " ", "had", " ", 
          "the", " ", "redundant", " ", "element", " ", "removed", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Args", ":", " ", "\[Rho]0"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"the", " ", "initial", " ", "density", " ", "matrix"}], ";", 
         " ", "H"}], ",", " ", 
        RowBox[{"the", " ", "Hamiltonian", "\[IndentingNewLine]", 
         RowBox[{"Returns", ":", " ", "eqsPruned"}]}], ",", " ", 
        RowBox[{"rhoICPruned", " ", 
         RowBox[{"(", 
          RowBox[{"the", " ", "pruned", " ", "initial", " ", "state"}], 
          ")"}]}], ",", " ", 
        RowBox[{"rhoPruned", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "the", " ", "pruned", " ", "set", " ", "of", " ", "variables"}], 
           ",", " ", 
           RowBox[{
            RowBox[{"i", ".", "e", ".", " ", "elements"}], " ", "of", " ", 
            "\[Rho]"}], ",", " ", 
           RowBox[{"to", " ", "solve", " ", "for"}]}], ")"}]}], ",", " ", 
        RowBox[{"popIdxList", " ", 
         RowBox[{"(", 
          RowBox[{
          "the", " ", "indices", " ", "of", " ", "the", " ", "population", 
           " ", "terms"}], ")"}]}], ",", " ", 
        RowBox[{"cohIdxList", " ", 
         RowBox[{"(", 
          RowBox[{
          "inds", " ", "of", " ", "the", " ", "coherence", " ", "terms"}], 
          ")"}]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"\[Rho]", ",", "t"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "H", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rho", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"#1", ",", "#2"}]], "[", "t", "]"}], 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"[", 
              RowBox[{"#1", ",", "#2"}], "]"}], "[", "t", "]"}], "*)"}], 
           "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "enforce", " ", "conjugate", " ", "relationship", " ", "of", " ", 
          RowBox[{"\[Rho]", "'"}], "s", " ", "off"}], "-", "diagonals"}], " ",
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eqIdcs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"dim", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "dim"}], ",", 
           RowBox[{"j", ">", "i"}], ",", 
           RowBox[{"j", "--"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"rho", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i"}], "]"}], "]"}], " ", "=", " ", 
             RowBox[{"Conjugate", "[", 
              RowBox[{"rho", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"eqIdcs", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"generate", " ", "non"}], "-", 
         RowBox[{
         "redundant", " ", "eqs", " ", "and", " ", "initial", " ", 
          "conditions"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"comm", " ", "=", " ", 
        RowBox[{
         RowBox[{"rho", ".", "H"}], " ", "-", " ", 
         RowBox[{"H", ".", "rho"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"linblad", " ", "=", 
          RowBox[{"\[CapitalGamma]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Sigma]m", ".", "rho", ".", "\[Sigma]p"}], "-", 
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}], ".", 
                 "rho"}], " ", "+", " ", 
                RowBox[{"rho", ".", 
                 RowBox[{"(", 
                  RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"rhoPruned", " ", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqsPruned", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rhoICPruned", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{"dim", "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "<", 
             RowBox[{"dim", "+", "1"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "<=", "j"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"eqsPruned", ",", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"rho", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "t"}], "]"}], 
                  "\[Equal]", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], " ", 
                   RowBox[{"comm", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], "]"}], ";", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"+", 
                   RowBox[{"linblad", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ";"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"rhoICPruned", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rho", "/.", 
                    RowBox[{"t", "\[Rule]", " ", "0"}]}], ")"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "==", 
                  RowBox[{"\[Rho]0", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"rhoPruned", ",", 
                 RowBox[{"rho", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "generate", " ", "indices", " ", "for", " ", "population", " ", 
          "and", " ", "coherence", " ", "terms", " ", "in", " ", "pruned", 
          " ", "eq", " ", "list"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"popIdxList", " ", "=", 
         RowBox[{"{", "1", "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cohIdxList", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"last", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"elems", " ", "=", " ", 
        RowBox[{"dim", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", "+", "1"}], ")"}], "/", "2"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "elems"}], ",", 
         RowBox[{
          RowBox[{"i", "++"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", 
             RowBox[{"last", "+", "dim", "-", "j"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"popIdxList", ",", "i"}], "]"}], ",", 
              RowBox[{"last", "=", "i"}], ",", 
              RowBox[{"j", "++"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"cohIdxList", ",", "i"}], "]"}]}], "\[IndentingNewLine]",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "eqsPruned", ",", "rhoICPruned", ",", "rhoPruned", ",", " ", 
         "popIdxList", ",", " ", "cohIdxList"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "graphic", " ", "for", " ", "creating", " ", "a", " ", "state", " ", 
    "vector", " ", "on", " ", "the", " ", "Bloch", " ", "sphere"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BlochSphereVector", "[", 
     RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Specularity", "[", 
           RowBox[{"Pink", ",", "5"}], "]"}], ",", 
          RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
          RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
            "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*TemplateBox[{\"0\"},
\"Ket\"]\)\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1.3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*TemplateBox[{\"1\"},
\"Ket\"]\)\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1.3"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<X\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Y\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.3", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SingleQubitRhoPlot", "[", 
     RowBox[{
     "\[Phi]_", ",", "\[Rho]00_", ",", "\[Rho]01_", ",", "\[Rho]11_"}], "]"}],
     ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"opacity", "=", "0.75"}], ",", "cf"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"cf", "[", "x_", "]"}], ":=", 
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "Blue", ",", "Green", ",", "Yellow", ",", "Red", ",", "Blue"}], 
           "}"}], ",", 
          FractionBox[
           RowBox[{"x", "+", 
            RowBox[{"2", "\[Pi]"}]}], 
           RowBox[{"4", "\[Pi]"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SquareBar", "[", 
         RowBox[{
         "xmin_", ",", "ymin_", ",", "width_", ",", "zmin_", ",", "zmax_"}], 
         "]"}], ":=", 
        RowBox[{"Cuboid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "ymin", ",", "zmin"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xmin", "+", "width"}], ",", 
            RowBox[{"ymin", "+", "width"}], ",", "zmax"}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Graphics3D", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", "Blue", ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"0", ",", "0", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", "\[Rho]00"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", 
                RowBox[{"cf", "[", "\[Phi]", "]"}], ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"0", ",", "1", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", 
               RowBox[{"Abs", "[", "\[Rho]01", "]"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", 
                RowBox[{"cf", "[", 
                 RowBox[{"-", "\[Phi]"}], "]"}], ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"1", ",", "0", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", 
               RowBox[{"Abs", "[", "\[Rho]01", "]"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", "Blue", ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"1", ",", "1", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", "\[Rho]11"}]}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*TemplateBox[{\"0\"},
\"Ket\"]\)\>\"", ",", "20"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", 
                 RowBox[{"-", "0.3"}], ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*TemplateBox[{\"1\"},
\"Ket\"]\)\>\"", ",", "20"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.5", ",", 
                 RowBox[{"-", "0.3"}], ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*TemplateBox[{\"0\"},
\"Bra\"]\)\>\"", ",", "20"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2.3", ",", "0.5", ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*TemplateBox[{\"1\"},
\"Bra\"]\)\>\"", ",", "20"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2.3", ",", "1.5", ",", "0"}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"BoxRatios", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "1.5"}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
           RowBox[{"Axes", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", 
              RowBox[{"Text", "[", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<|\!\(\*SubscriptBox[\(\[Rho]\), \(i, j\)]\)|\>\"", ",", 
                 "20", ",", "Black"}], "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"Ticks", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0.25", ",", "0.5", ",", "0.75", ",", "1"}], 
               "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", "2.3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", "2.3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"cf", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "\[Pi]"}], ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Phi] [rad]\>\""}]}], " ", 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "convenience", " ", "operators", " ", "for", " ", "grabbing", " ", "the", 
    " ", "two", " ", "qubit", " ", "elements", " ", "out", " ", "of", " ", 
    "the", " ", "solution"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]00", "[", "soln_", "]"}], ":=", 
   RowBox[{"soln", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]01", "[", "soln_", "]"}], ":=", 
   RowBox[{"soln", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]11", "[", "soln_", "]"}], ":=", 
    RowBox[{"soln", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"qubit", " ", "angle", " ", "operators"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta", "[", "soln_", "]"}], ":=", 
   RowBox[{"2", 
    RowBox[{"ArcTan", "[", 
     RowBox[{
      RowBox[{"soln", "//", "\[Rho]11"}], ",", " ", 
      RowBox[{"soln", "//", "\[Rho]00"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phi", "[", "soln_", "]"}], ":=", 
   RowBox[{"Arg", "[", 
    FractionBox[
     RowBox[{"soln", "//", "\[Rho]01", " "}], 
     RowBox[{"Abs", "[", 
      RowBox[{"soln", "//", "\[Rho]01"}], "]"}]], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8350158580106945`*^9, 3.835015895414342*^9}, {
   3.8350159260350294`*^9, 3.835015993351922*^9}, {3.8350160899382915`*^9, 
   3.8350160944819074`*^9}, {3.8350163878331795`*^9, 3.835016445804765*^9}, {
   3.835016489302936*^9, 3.835016531223361*^9}, {3.8350166360449095`*^9, 
   3.835016809842594*^9}, {3.835016939424097*^9, 3.8350170940224*^9}, {
   3.8350172551612997`*^9, 3.83501728217809*^9}, {3.8350173250726986`*^9, 
   3.835017331923233*^9}, {3.835018177893467*^9, 3.83501821769398*^9}, {
   3.835018249750198*^9, 3.835018285691367*^9}, {3.835025009194661*^9, 
   3.8350250518057313`*^9}, {3.835025169192734*^9, 3.8350251828649235`*^9}, {
   3.8350252875298595`*^9, 3.8350253561705756`*^9}, {3.835035724979285*^9, 
   3.835035807888835*^9}, {3.835037068274298*^9, 3.835037121125121*^9}, 
   3.8350397801638002`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["single qubit gates", "Section",
 CellChangeTimes->{{3.83501543697373*^9, 3.8350154458301334`*^9}}],

Cell[CellGroupData[{

Cell["Rabi oscillations - resonant", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835042413463442*^9, 3.8350424168678756`*^9}}],

Cell[TextData[{
 "Population transfer between ",
 Cell[BoxData[
  TemplateBox[{"0"},
   "Ket"]]],
 " and ",
 Cell[BoxData[
  TemplateBox[{"1"},
   "Ket"]]],
 " by applying a constant laser or microwave pulse on resonant with the qubit \
transition. It is clear from looking at the Bloch vector that the Hamiltonian \
is performing a rotation about the X axis. When the rotation is through an \
angle \[Pi], this is called an X gate. This can also be seen just from \
looking at the Hamiltonian, which is proportional to the Pauli matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "x"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8350362044024034`*^9, 3.835036267954064*^9}, {
  3.8350363230918264`*^9, 3.835036491716954*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", 
      " ", "approximation", " ", 
      RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.8350362743759365`*^9, 3.8350362745025606`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.001", ",", "1", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.015625`"}],
  SequenceForm["Time to run sim: ", 0.015625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350362774249263`*^9, 
   3.8350372242021976`*^9, {3.835042384029936*^9, 3.8350423887852516`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mllplEJJ7ZtbdfRX2Ij+PBYUX4r6+FV73FO+4mOJV/xWnTJM65qGThR9hfqF
rYavTMqhXPhbv+rbV4wd6LJ+WfMZPb77Blz/a8eq+oL9T+qqwLvpNTE62o72
xqFaXZMGHDPyHfg20Y4+5t873Y8a4Bhq2TDCasdu6f4jvmUN6GTf8Jo61w7v
8z1Gx3c04sV4gEX/6g4UCHYFms01Qjb3atNXhQ40LAb2tyc2Q0dV9k2FXwfe
9K6Z/sDRimC795cTJTqRJM87OxzVjt/H3ozaenbh6SfF02Y9/XCSr8oXquzG
m9tl9rHWIxjKrnrUuq0XbmoT9ULe46AwORjyO3pxc/BHml/YOMpl1LUjZXrx
pdx031TCOBIzqlcbK/VCceDyQlLpOKxf1Tzu1+5F2+Ux//zFcYzH14XSnHvx
c4OLsKUTDczgxoi/Tb3gvLKO29iSjsWr7c933uvDhEZjidqGSRgong+X9ewD
bYN/k5vEJDLZx/33+/Wh/sktzvS9k7CInr11NKQPG3U6y8dOTuJztehJveQ+
PPJN5aK5TOLh1gs/Xer74Hzg87mlzkms72Rq14n248pOm2tyj6ZwLemuStOW
ftj/4PwjEDWFqmv/lNok+jHrpaJDJE7h7nK+7f2y/RDz4uTxKZhCz16FeUKl
H+7HDFo3D08h4dG9l8L2/RAxjb4jo8DA7uNcS5c/9kOg82nlmVYGcjPe7Ogu
74fGfunvvn0MKAjo6p2q6UfxC9L3YwwcoUWn7m7th3f1D7m6eQZOP96l9X28
HwZGcSn625hw7NGJduUfQFWyUWu0AxO/VWY+TwoP4MDR3oX+u0y4ZUZNnds0
AIN7p+r4vJjw8xxSVpYeQA571nadJ0xESd4aW6Y8gNiTXVkrC5govhUpH2w3
gIpoudiwBSaU+w6a/70+AEq9y3TPMhYq1AYeXHcawE8ueZX1PCzUC0v16HoO
QP3X1RzDjSz0fyr0FHw6AOVu+Y4Nh1lgW9XX+KJ8APuS/siFO7NwInnblbfC
g4jUfriPb5QFhWheqRqxQYjLD7RRJ1jYGrI42rttEDU1N2KSCBYWXDusOWQG
oX27xe33AgtZeoEWxscG4RI0OMhYR2A9+7ThX9tB+F5GKdchAmyzAwL81wfB
ke20gaZMgMGo/yp1exCqI09OFKqS/Xl3qp6uxyCkWfbrd+kQcM010UkJH0RG
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
3A3GUxdUdYzuWUygYd3bY42me+7Coof9xM4MGh7+EDi4/OMtqImeasrPpCH8
S0CXwrub2H0uTP9YDg3Nli+Op1rfwFz/ZivjfBqk5R83p4XYY3DT5fGRAhpa
tll7OpfYodoi69r1Yhr2clZ8l1q4gifUw64PSmn45cvts++lDVy2+f5b95kG
PS5rk3D+i7C0rn8QV0lDgL6MeV/oBciMmjzJq6Ph538zb687nQe/ZOIGNNBg
yj2wLq7ZDPOXaC/qm2goXHcnNfekCWpod94Mt9EQOPLqbnycPjKlP+1z6KCh
89FhGee7eoiw4yia66Lh9eaWSTfqadzL0FL266Vh5Dbr57f1WrCaelK1doCG
8lyHWqmHJ6Ah06v5fIiGKvuxd2qH1LDHYVur1AgNXYdZXMp7jkMg29b43SgN
7U7HZaXKj2CBlTNwlEbDMvbd1gEvlUCVm734ZYKGpVP12imr9qP2pvKkAYMG
xp/EzcTgHmS/fXCTyqLhe+LAU540KUTONP62n6bBZSTzePzNrXDbL+Ax+4Mc
/2+kTvOWEKydzi33/U2DVZP8sqdsq3HyfXIg7zzpN6V1ld8PLinL/Z5YG7tI
sqHSGH8PXVlIaV+U5BLJYt17p4eqlP84u4i9ZaODzURaYPNUmvK3orLkI8tJ
fr3iaeiHPuX6ec6ddSvoKHfnFZ7g+6Wce+h0jj43HV7Fj7VjolfgmdvTA0Or
6Njb/SJBXJ8f90v6P15dQ7JuWMFS90bY/N2u8nstHQfZvhdOZ2+HprJ9nTc/
HVZGO9Mmbu7CPs93p9cI0rHqxG4lBZF92FA+3x4tTEfUModXha4HsMR2/JyE
KB0zPDyV/0wPYfR4wHCOGB2DkYqyaz4ADT4tVw5vIcevhKl9b1RBNIeF01kJ
OpZWun1xuHaK7K+ED7RK0RF03JM+xq0Dm0rKrzM76aCn/ky5eEsXe31UnXVk
yXjYy89bvzZA1PAfpca9dARc2lNk/90If44VzGnuJ+Ofebtsm4kp6v5J3zt5
kNRnQLz1vq8FZC1HDtUeIufvp/iFplghsvT5ovpRUq+iNzpZAtaw8uD1UFWh
o0iuPuaLxCXMLvzwVNb+f37xPFp/7GFulnXs02k6fi4Wu5/udkBF8WX2I3p0
SPBGLQ+tvIEQlx6f/4zoOKsf4jv07Rakfpc+ULCi4xsz66qu6l0EG7po5FmT
+Y4qOO687oyZ/H1c8pfoEIiUKY5OdEHp7dQAuat0bM0tGDog5gaj6cBHu5zo
qPwTXSml5IUSXVXt9Lt0CF/a9Hlg0gviuX9WS7uSepQlF51L9gbr+o0Qyft0
1Ee2+2SI+eIBwyB8awAdYS1t//yU/TGpxXs2IYgO3hgT5UvrHkL3TS3/5sd0
KE63jXGNP4TY1UORG5/Q4fSXTyUsLhD5tC3PhOLoeBE3wQpVfAzREz3GT1/Q
wZDrV7gsFQKvV082CCSRev6QC/gtEgrtSyti+V7RYaQcEbnVPwyjI5Nxq3Pp
aOgsC8wNeYL1g++Tl1XRUZD49vPNuSiErPbwKKyhg/KPwysz9hlWHVYzufaF
jrtJS3FrEY1l0W1rOpvp+HTx4MlTITGY0SNc0nvI+Bhri5014kCplj6jS9DR
eEExL5I3Cdo/iZ0rZuhQsRU/WnUzCXXihRwfftIRzMy9wt6ehDJP9Q/bF+iQ
ibiUmhyfjOz/rCVnOSYA8aVvjkdTEZz1fDFedAIvOW9/6Mt+De5+686zmybg
E7FrPn1bGvxW7XrLtXUCnKLqhMfTNLhdKbp8S3ICQfL6XAe80nF1W0er2t4J
nLJL5W278AYnn/KmTalPYAUXX6GJYQ5WeHgb/HdrAhGcy763/8lD/jRjvuz2
BHoDMw7uPp4Pm8smCRp3J3CjSdF+6kE+qs7ITeq7TUBol5Fn2rr38BMf8LxO
7gtttPb9XbO7ABx1B9+kxEwgtfTCRq3bRVi2/js7b8UEvBJo6q/PfAJbukXO
CP8k2oM5kuTXV6GG0XU9QXASBbWT6wzVqxC8V0/WfMMkFDW7+TKcqyBcpJrV
sWkSXJqKbZP9VZCtlX5TJz0Jl30LceXp1TAfm3mVrTyJES/v3ofatSje9vDF
vauT8JR9/LM7vx6OsTmP+Ssm8bh3mfhp9lZ82h3AzXd9CnOd3lXXxrrBp+ko
48PLwLN57wypc1T076F8dS1hQEnf1bExdBS5LyAxasGEx1reQ3Xkdfzj3g+u
CxeY0NS5u33vcdKnxq+nBi4ywRY7tyeMvA4/rl2b12XLRKLFw9sH7eio8Ro8
3uDIxP6gW+elSZ/2WXtYvvNnYkQwOvweJ1m3HR9jvbKZZB++djiUQtZp+Y37
f3OZiP+Q6/KtfwLBQ+LW9/KY2HFh+OWeiQnwRQftdCpiIvXFt4iX7JMQW2lW
dKWCCe3olb7i8pOQn5rrON3JRLjDlzaN8Emcz1Hk27TERGHvQ8vJE1MoMJvj
pbCxcNw5d2ZSfwq8nB9W+y5noUttQ+2g5RTKzY9yT3CzYGLJvpDgPAXxVWr/
8tez4Hy2TvDhqymM2+gxtXeywHjQ5TjAzsB10Wtf3A1YGF7a7myYzUBN9Z5a
OWMWUp9EMF8WMbDlFlE1YsrCzJNSEXoFA5Rax/KTliwk/hdofbyLAfk7roUC
V1morvhspfGPgdkW/5eZniwYpalkhGoz4fUgybs/g4XD+/d7dfcxscaZS/NC
FguSED/34RsTsbYO/OM5LAjUcaWETDGRp/VfCpHPgtIrLTPeRSbG+VqrlpWR
fR+9IchOhAWtF2zcO7+yMCppKhCgz0J36GVKVgcLrkty6x6bsWDj3Rgt380C
Pe3sou8FFu7bRO88MsCC9u1krxM3WMjdtVfrDI2F8eKu5xJBLAgVWobcWWTB
VNBKRv4TCylp1UYLf1kQ7Es9rl/Jwt7Y3Vs82QhI6XnTL31h4ZTHbE4A2ceW
uES3W5LruquGtj5fS4AxeCHwJYOFkZZSgYrtBCi6jvdvbyBw47PEgIYU2RcL
Tqx+s4nAn3dBLxukCVxRMPj6VZyAYJSRYsceArxvXkzPkf30SXOWMV2JwP6X
Ul1hxwhk0Tc959UmoHVP13XGhjxP/AOrwdME0qPcHhXbEbA5y5TM1iPQ9PgT
xeE6AbGSklwdYwIqfH3D8c4EgkLP1QRbE6gKaXm+MZDAZbXKR+aXCKimcFRp
PSbnze/Sk7ElcDhuYd42nMC89UJfgwOB68fuu1+NIWCrGDO9ypVA920l08A0
AmpTbIW9bgT4mmuubcsksCXR1j3jPgEnoc+2r3IIdK48yKXpRyD2rhaXcwEB
9YFOscBQArpRq8zlKwlsfaI8YvKEQK+v2t59NaQeGq9eSz8l59lF1Ip9IZCf
e0e+LpZA+NZqmQ/NBMT9BE5yvSLQqOFxYU0PgaWD7mu6yDjsKOdHb/UR6GF+
a3v1hoDjPR3+ygECYcZ55zXeErCS7bq0e4TAtdUbtwvlE3hcmOOvMkrq+9mH
PkbG9dFS4JTGOIF/u87eflBC4BXPv7T1k2RcQ8UHDcsIZIdUHh+YIlAQuW1J
ooLAKblwxwgmqcvS94CqWgJfaqueVH8noJlncjqynsCssp3H8RkCkrbl622a
yPltEb/TfxDobw19sfwrqfuC3qNjvwkU+c9e/NpBgBU2nHJ9lkDkYcud/3/P
jtCoVQucI3Dzew3LkcyrpUnJIWyerPtL2XyVQXK884qY3wLpQ7MoV/5hMq71
wXo2iwSWrV1SHvlG4OGBHp59fwgMVl7ieEfmVc301Zwk+YNL0xfvCQIdzPLV
YX8JRO05EKrHILCRVqUnvkTg1kicwTaCwEJQ1YYkkrWfcYhOT5N1DPpptfof
AWnta0PlP0mfRgfutPn/+5zs7alhZNwbbIpupZFMfX/4qhUZl3ri+4M9JJdc
TZHbS67DtvTe4zfJz7bw/Pr/e6BGwrNb2Ni+43/vVWim
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
cuELBbmX54NOkX7Z5YV9BW8Ouf/nq7crkn5aYyL1gXgB2edPe6gxpwhwnfi+
U66UAt7p3i8PSD9em6U8plpFQbx7UcQvkn/8xB2jtOsoiJAp/6dH+vlTj76c
Nmmm4N6cV6sn6fcl+3+suthBQZV8tEQEyT8DWjurHbspEGpPpwSRfBAX5/T4
CUHB2NqTvE4kP9ityNjty6SgR2Z9hgLJGyoOv9jhoxQ486e2VpN6rm1XTNIE
BQf/RdoeJvmkRM3ZPP8XBY2ivi4fSO39PlOodpaCxLsiHP/nG/3FqW/UvxRY
69Rz/Pk/H13c7Ta8hAqPGOMH/+cjatXtPTPLqAjNhEM7qSO2Zk9yraRCJWRH
nz+pbV7PxAoLUUE4l9XtIPXWn6qWG9dQseWaz64v5Hq+m94V3SFJ/v97RTFB
Umd9zamHNBVV2zTuG5P7ub9u1sNQlgq1A2fPOpH71XTbs89iGxX3f0p+vUXG
g3vQ5ed1ZSrW2UkHmZLxqj/6Nf7+biqSW5dMryHj6Z/0x+r5XipyDp1ryyPj
fVpgr1gwqPjWV7NTg8wHk5LnnaVLjr/j6N0hklcT9s0fqDCkIkXujQUfmV+H
D/umW09SYU09Uy1A5n/hcsHF7xZUpI91bikk+aesdkFi0ZqKa/6lG2zI8/NM
6UDryqtU+D8MDmeRfC0yU6i5zYmK69F3FcNI/u4+8++3+l1yPplszUqSzyML
NVKPPqQizsGgt5HkdwWv4nWXvalIm/+Z4kHy/c+RxXbnl1TQAi8OK5E8lKuv
+crDj4rRJZXJeSQPaYmUzkWGUhFsPDB/i+QhXhfO9NQPVIzw3fONKiPQ3HPQ
tiiGHJ//c01qEcnfH8soPSlUtEQ+PmyXTcB5Z0Xm6nIqjhHCnM4x5H1UkYp8
U0PFR+FrRvhAxkv14csVjVSctJ1aNhRCYN9eFeslXVTYpzU1VL4msORQzKqJ
CSoCdtU8bbpDYOowx/zVKSpiZodYdxwIDGqfG2L8IfNl+Hrqjy2BGl2Rwi6u
LigwIwUDzhHwNfa8VinRhfgDfw2ENMn7frLP9P8+e5D/WXzQHpL3TfcfzN/c
hRN9k4OzyuT9ODO15otyFx7nP9lwXJq8HxdsKsN0uiDV1XhVj4PMn4OWlLNT
F555Ni88z6EjzCmSb/JuF84E6q5oSabDx3lhxvZRF1b8N/ty6iMdDi6ZDeef
ke+H6gm3+NKh9mTTA72ILqzx21bZf4ms575cnRtru/DgblHzTZKHst9YlYY3
dUEpKv28O8lDcQEFSWIdXQhxVN3vTPLQyyBnD/6+LqwOPiz6vZuGEx+YynPT
XWiZbqnVjaOBSKl42SLdjb1VKZZv9tPQPM7F3klyyAYiULJciYYSBW39QIVu
PA9NPNAuRUNkQuUKM7Vu2D9boAVy0WAdW+XTq9+Nd7VSlm9qezEUXuM7fLcb
Mvmhzk+NejH+qj7gb0M39LS5MarVA3rdiinLtm5cUMpNkt/Vg0ZeA5MSajc4
j44X60n3IOVZg4gHoxtX5Yuldv/thoNn41ueP92IvSHSEpHRjakHzUHCm3oQ
0dq2lJDoxvy19vfy98lxtM8HprdRYaJq8UbJtQfVV+IqSoqpSOIc8t7l2YNf
5ue+ZydSYRn82/EA2efLVWa9zD2oKK2UOGoc3QPef58Ln+6g4qnUhSmX2h5s
CNu68JCs28Kd4/o1JOdxV5/Zc1WuE9sOLvt3Ob8XSS9j5mW2tJH+O3ELtaQX
BxJv3M8kfZqKiJGxblUvQpZLqG//3or9w8Ex21pIXzDCP8vIbYWhz1a970O9
2PLz23JD3VY4dRkE3xMi43q9bljzcgu+OgbufGVLg6f5leblMk04Ei195csa
OpapNmrX2VZDJZhftkqSjiOstIMnlaoh9Xqe2S1Nx/zSH5srflZh7l6HNZcC
HUqHnV5feFCFZOPnlmaadJQrFx5487ISwpw/TP9epeOUlLfBn8/lIM6XaOnm
0dEyGd6r/KkY9abJSy2L6XAavDluI1+MXL3QMqcKOi5I+i3eSy6Cv5qzZlgj
HV6TqwV1swqhvUpu/yTpE9KDcexZeT4Si3x3veUj0LQ5WnGmOwd3153f2E/e
qxmq09npH6mwNlI+1XuBwOxPxRcuf1Jg6MH5gnKZrBPK8xvoHCmQHf34o4G8
p0XFTBWTVUlozxwpyfMk6/hI5H/c2+KgrO90PjCJrDtTG42MLCMh6Xo4wPcL
WZdraxJbayKwLF2k+gVZR/4Z7d4/3B4G+pocJbcSAk9jFs4Us4PxijH/9yZZ
x2rVkkPPr30Dl9UNO2y7yDo94bWYYfAaF3UjLtmQfVrEbVn7S5sX2Juq2fD/
3yFtluzx+/XGHbIDgpynyD6ctvwPQ9T4EQRFGSrGZJ02cveMkXt8GwtHMq/q
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
0Zo=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVmHc4le8fxwkls0QhmoiSSkkJ77ISQpnRVzaRWSotEU0rSYhkZZQZQmVF
JFuUeY55Dp1zHhok4ff8/uF6Xde57+dzf+b7vjfbe510WsbGxpZC/vn/fz0n
envVhJk6G5vUks1NRTVOTXFvitg+XDEvpVpZtqrvTYpNeC2mhYV8NvrRvYT6
qIRU4CUZQ5ym7lSbvMsO/eavhYlippjMKeSokxOEVKhk+tLGU+Be05eTbSGK
f3oOT+xkbJAp11jofHszJoO/1NrF2KHBRsB6Y+82WDjOvo8Sc4TohZmc3zK7
UKsp/uZDgjNsrSic3iV7sXurWv6vjWfxq/iE86TZASQss82STnWHra/39jEf
NXAPB6WYy3jiWa981c6QIyindjR/MPUGX8dj/bQILXgbO+qdjvGBruKyVpNv
RzGw645mmNgFPBdbL2EqZYToJNEqaWs/HJop/ND66AT0BLNVKxIuolU2P+9B
kQlKWE1KxEZ/9NMvjR0yscQ5G5vCO3ZXwHcxnW9HuxW2tBAKm1KvouPzlJSM
538IzxGSPSFzA1qundPxQXbQlkxLm3AJQCzKX6cs2ePGx/hV1aY3wfwbpb8j
1BH79suHnYoJRGamU0NZpwueixjdvi8WjCbNaJEECS9cbX5Sa14eDPmFsPSK
+94wD6Eu22odgisrr2fSw33A99sn4G3CbVQM0ASdcs/j8pfoy4yN97BWpUxs
9NhlmIQOlJRW3QPLNGMNZ7A/FLRkfgfb3cfu8K3tX+quYPT1Gx/J1Ac4Xid/
4ZbtdZx41OtmKBOOuEfbiv5cDoS8/tYs8fpwWD9Q+1i2LwjcHOdo4y4RWGqT
EzL8FYQzZYsFlaaR0HC+cIh5IxgicpEKljEPUVzkaEVU30Eg9+tt98SiIbvX
7rLRYji2H314t9A7GkWJKw//44pER4jXRF99NGgcfHu4IyIhxSH/UuHiY5S/
uvb2Q8ZDfFxIU/jSEQNx96eib34+At/PGKWNoXHINF8u9e9XLIr3+MXojsRB
yGvvqz/P4mDjbTLroxKPJufAts368chjCpbV0uOhWpn+aCbrKU7S76q6aSeg
KFk0IirwGWIHrmgWLz5Dd5PfKYZ+Co5InEobNEtCxcFGFcnCFExaKXNx5ySh
Mv5KyX9iqdjA8HfI2fkcEVvk83i/p8Lr7H5ptv7nUJ8rucP/NB1CjnmZ6QdS
ILTVaZ3yzixYnkrOm5pOw2mu2+l4kA+iz5QnRTwdRwxmekwa83HbhtvJRDMd
kikJs90rC/DawUu8JDod+3VlZ2XvF0DAUy3kqvILaEuEaP6OKERdUI/V8usZ
GBUTkZrJK4Liq9XLJbizMWMYOZiLMnxSqLNt3p2Nxy3PxDaElsG24PLbG6ey
oTgxHvLzWxnCSijeQ9nZeNG1trT1fDnoVTl9L46/hP3XOIZW7ls86zpWsOfR
K0gOGI4MKFWAdynw9NENebBinIv/9LEasWctbOR18vBWlt9G+Uc1pL7I2672
zIP9w1zNdskaqGd9deh7nwf/8czWu341KMuKKX6jkA/zWBenZds+gGnCeKff
ko+fem4G8w9rYZb55PN5/kLEKQX/brldD+kTLPqHB0VYZfJivmeoGZdaDiL2
VxkSllKietK6sa5o9SA7eyU6Bp/veeY1iJJhzaZW1RqIP/ZmC7s2ghq3xPWn
GLV4FaARG+FFw+sJd3ebmVp0tk9OXb1OQ5qrylsHtjoEr3PlsXtAQ4jzVytP
4Tq4BA/piWTQoGu/Ov6Wah2ChNvCpQZpaD0VIpobWgfHyMT7HXp09Ot6iHDs
/Igee683ghsm0Fx/yIlb+SNSceXx3+0TqNDhKeY/8hF/t6yM7leeQJJWhqmo
2UcczZSuCTkxAfvDQ492Xv+I41bXwt2DJ0BXNhOybP6I1R+Kda/QJ/BbRk0w
x6MeLXY3TY2yJqE+rFF//3I9+EOdLThKJnE7UTfA9VY9lt++JfuyZhJrhU2J
rXH12MNSW+zqm8R+dvfW+Np6BBeW/o7h/47LfbERd9c3QFmKxlnu+R3/In4J
On5qgGw1t6zUNga09P/WH/nSANvjjtrKigyELme7uZHSgLtVugGqagxIXued
6v3VgECRFjFJEwbU3ba0ndj0CX/DS5KVbjAQoGUciUufcMLlzLuydgaWzb1c
tV66ERk0EdF3Hkysb9b4iV2N2Oswt+/MRSb2Jfd0OR5sRI1u2fSvG0w4HVvx
NPd4I7h1LeX/RDDREGcvrXGxEeMc/R2nC5iIUBFTOVvfiIjuI/qx00xkCuRL
hLc3YlOdTp/dHBNVwzpLhX2NONX5X5QkOws/7l+o/Uc0wnDwsYX7KhbM+1oN
I0U/YzZ+xu2MAgsS1247vDn7Gd+Fa9anurCgZCyp03/+M1itrx898GTBUKpI
lv3GZ5TSucqd/FgIaBpi6kV9xvYPz36yglgYllC7PFj+GewZYUdNE1nIev8z
lIuvCemNRp8cW1moeXjfa/vaJtxkFP917GKh12nzSaNNTch8Tblo3scCn4DR
urh9TfhmPnOQn8aCt012svx/Tdj187LppwUW9i/ZlpjkNuHvk/XSl2QJGByv
CtIubcK5rabrvHcScHi60Ui5pgnxO82irRQJRCoP0sS7m5Db4SLOqUpgwsta
bHihCRpEW0OmIYEEqtk17+PNOJVrc2SfD4FChWJde4tmmEqJ3tb0I9BwTVjE
1K4ZjOImHi1/Ar9FO3OU/ZrhV32pQTSQgOEJY8piQjMORK78sCqSAHuNnkYY
oxlOle9kDrwkILoqWyBgphlZ5+P4rHIJKNis7PNma8HFuNccHgUErP7WnzcV
bsG21ikx5zcEihS109ertuDIXE10Wg2BxptpPvw6LdhhXFloWEeA2sKhvmTU
gsea8Y0T9QT43Wu6hx1acOaxav+PJgLOqeDOftAC+XlnJeNuAtemn315+rgF
Zw1C2wK/EXiExedhSS1Y77THMK2XQFXfu4M+r1tgHqQ/9naQQLecxHKH9y1I
aKf/yacSYFy62mFa34Lii54jMcMExIRV3A/0tcBUvERZaZzAbvs45e1jLbh8
juc5k0ZAJ/8PhwTRAoZieF/MBAFfgzcJS8tasdb/xKe3DAJ349eeneZrxa8X
264oswgk0f2URta2wjvdaj6VINAUvK/l4/ZWPPbmPGf0g4CK4OdlD5Va0SHE
8yHzJ4HMODtl68Ot4BRdUpr6RWCt1B93af1WsFf8+yA9Q+BWbvhzwqwVzzUk
zh2bJTB1QLqrzLYVZSMXd1r/IWDz4e3KYPdWbKFIr7CeI/f/RvcVDWwF+seW
pObJ/e0DMoYfkOtPyUkSJK9livS/imlFjqyMUcY/AsGXXq26lNyKQ3d+Rx9f
IDDNrql95FUrtr7OZw6RbBPa48/7phUqk96WjovkedZ653ZVt8LSzejLF5JV
kpePJDW14qSPk+3eJfJ7OxLXuX0l7Vdrmg8geW3JXoN9w+T+vInp5SQHH268
uchoRbfY9OkRkn802hY3zLYi68XQpr8k52fPXzjG3oZQ4s7UIsk0Qicid3kb
zBQXGqdJ3qAUlbWGrw19r6zyOkg2vTLw4fLqNvxOKEtIJvlBpezgwNo2+B/e
G2VDcg3nhT8aEm1Q76KGryT5z7FKoczNbVgf1/cwhbR/VwTPTv5tbRANMYmX
I9n5i9lRX/k2nPnzO/MZef5EsWS7r3vaIKL1qpKd5C82jKuqym2YVTlLPUn6
jzdNOSZZtQ11eRv5o0j/akwE5S/XaIOKX83Ryr8E/BVaGt2PtmGtjVZULxmf
/PNiY20GJKvFskbI+NFKHZeUTrbhz2i+TR8Z3w2LeWJPLdpwRTZwtIqMv5nm
/F62/9pg3TsfGP2bQOhdHUMn+zZYNK85aE7my5zQQNAujzY8rR6fT50m89dS
NjHatw02rnd4d0+R50k8/2buUhv2PY1UzSbz88s2HsaHoDYIT2XwnP1O2qOq
bGYZS57XwT9s1ShpT2CQ1/vENty6xBzkJ+tjQ33zvS2pbcjOsbWbo5DfP+FY
wcghz98oyP60j4Cr88NtgR/I+HRvHObuIPP/Zf+R8YY2mK6Q+HGplay/qW2n
9VvaoD2Vo9FF1rPW1YpIkZ42/Nxnk2NF1vvGyO9zWaw2ZJgkUSPfEqiwC8gq
/Ena8zpnV2YpmX9715x6+6cN1a08G/KLyf7WrVLatKwdlJdS9Id5ZD+SvH+R
WNuOBdZiYmIKgTcsSZk/69sRvOeliUoSAfOqgi62ze1w4w2rr39K4LFDzz6h
He3I/+E4VxRNQChb9uc+tONFaNj0txACBVffpahptSPrjgDXP7IfGh83Pqlz
rB3Vv17+FrxBIGLqUoGFSTvCovKu81wkwKdc73XFpR3CveyP9ZwIcNU6MSoj
2lEWLKTx9zCBtMdzTxui21HpMzQjT/ZrLZcw/fa4dmjfjv9orEwgiKc4ezi1
HXsfqX90J/v9ojHnWa7Sdvy3ZbqUECXzdSBlTI/aDgHuctN9TBa+z1IGu3Z3
4FHjh+re+yyUuETU6O3vAFd50OVXt1i4+VX9ReWhDnAkTN/xuMbC2jeJHlk6
HfjWUtr63oMFjYvW/66d7kCqELX3iREL8b+6xaTudmDFnVNlB8j5qTvdbOpL
6YDuHtlDPiFMrLG7foA22gEDsy2HcY2JwTZ5idOTHXijsap1wZeJC/kPRrR/
d5D3q6YiA1smkryO+YrxdmJq7WidogoTM8zaiKr9nfirG7tL7jsDaZNvGwXC
O5G7oJXPq8GA5xOjrW6POrHFrPjXXmUGlLVGrtbFdqL42tAbQ3kGGhN5dl5L
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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 6.573035283614884*^-14}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV0Xk01Pv/B3DbmM+ULKUylpCle6srLUx86fm2VJKQFEoiVJLoSgplKSoh
FYprzS5b1si+jZiZIqVSWW66Kl0huhR+8/vjdZ7ncc7rvM7znJfyUU8rVyEB
AYFm/vx/mrqOdDV82r/t2zpj65/KDCJiJOvVz9wCxz6W2w++N6fcSyxlGoMl
fKv6C98f5FWDfdXNwepZbfiK793c3pIkpjXkDrIXavhWjVDIXFC0g+F7k8l4
vn+ZOt91UnfA+IyBvCffn6/0tDjFOYHh6Oqnx7eNy4/a20wXsExPLRHiu8VI
trI58RjKtGZ66pUYRFNFv/i7ohvGh+4+8+E7UcgxVy3dHUPWtQsqfFNDIfcP
qJ8G7ynbqUORQaoHurnN1l6o7J2fOsG3l6WLqX3cGVhr3Hm8sIpB3m24ahTJ
PIu676q9y/mOSZFpUDvkA+E6lXWxCgxiKpGnV5d4DrsDavLF+K74l6M1pngB
pbHzWz7IMcgpB4eSq05+KLoQrWPM92remIZSuj/SHSOPJ8oySFTB0t/2ql9C
BT1FV4vJINsVMjI+HQ/E/ww+vvWRYZBLbQmSjdZB8HCbu1+4kkG2aK+PtIsL
RnW9eAy1gkFSl1uEhTOvIPqf7LeHlzKIP/duy4HqKzC7l+F5RIpBDoQOCKkc
CsVH3VcydpIMIjZ1JvBxYhgWbajN3CLOIOd7Ys6PKl5HSMcr9wgGg+yLeFfx
qOE6Ih2VzppTDKJhrD51xSkcyn7/BVF0/j9LK88opN+AQUpOsosIg+y98+ak
uXoUot5pptXMU2T9bpVcWXYU7r9rDt02RxFK+NQ/H4/fBCdf3+7RT4ocqZp/
WG8djcGn3o13/qPI8t+jNWzjbsG70cjo0zhFgqnSNdeZMejr8FQR+5sia3fe
ulbiFYM1OirT/QMU6Q71/NTHjsHpNBnxvPcUURVe/0DjXCz0GkNmld5QpG0u
Q6OnOw7nN0ew4p9RRGwyTksxIh6qRb97FD6mSPlGnziTv+Nh7HNM6sMjijh4
7ftxRjcBrjVjqRIVFCn6KlHVMpKADOleN5NiiliNXNM7uT0RM1Itk8igyL13
fkbl88nYkS3EMAiniIG8Xcb7/SlouM607A6jyOeDLBpVkIL+KG1pu8sUWTV6
wbngj1RkjfO+7wigiKebtprA21Sww3g70j0ostSlKCdz631cOBOxx8acIrZ2
aUXfxjNg2egf5EWnyFif9aL7splIMB62nRSiSJgD5brPKBM3wvKXn5qnk1Jn
T9mKmEwcS8qTwxSdiJ/WD/VnZeH6FgOvk0N00hry+qDoxWxwfDkfeNV0Yk+L
LK/MzMZPq1S5/HI6mbhKJN142RjZVVV8qZhOlCKzWzsVczBC1XYLZ9FJwF0f
zVtNOSgqMpqLiKaTTflSovJUHmJl2ydvO9PJE41WR65mHuYkfHsbD9OJ48Pz
jy/Z5YG5pePasA2dRFb0ew3m5SFga9eGxWZ0MtJQ0Je15wGOX82J4G2mk+QX
ux5uvJOPc761hn8I0snihWD7nauKcNT3/AD9jii552bjsH5HEXYmC08P3RAl
qj3rHaVOF8F55tGakiuiZFtur3NfbRFylqFm/TlRUpUbV16pUYzdSTMPb9mK
kq/7Rmt284oxta+euUxOlOzPudvpvaQEcT0lQdVxNJJ4OMTsmHIJ4kNNeFQU
jQwt9eDaapWgY7ZZ2zSURjwvGj7VP1yCG7cf62V508h1q6/d9IISHBjzOtJk
QSO1vwzf/GVWih/7rPxCaTSitvffkeYbZXBN/BErfVyEyAbu1D2eVgbFDcHH
3hwSIZIFqTcWVZbhXpW8fbSlCJml9mnsHSrDWamLBRwdEfKsodL7/dZyaDif
qApbLEL8NIPn/xsuB+vfNieBfGHCk5CW1iCVSNqar71qUIj48nRw73sVaOP2
x1auEiTiGuXDT6hqSC9pKZKRFCQZkZoRP+WrEVx14aG4kCDpMlvz2mF7NS4J
zuu/HhYg6zqlvdXiqlHX/lLrS74A6WePZZWwHkP4tORXpo4A2dmYKc71q0Fc
XrX6SMw8VpZJvRcUrMdtwT/TF5fMomLIiPNUrwm3fWdUDxlP4KVJ8Hjkzia8
U2Y/nFSdwHRh3QozqyZEral0S6NNgOWv49R+vAlCn92v6bPH8WjZhumG2004
KPIqKGj3OKqMZZVKRprQ0eSS5WH7DTVZ37xjYprxZShlVnrxV7wV04i3SmkG
KyQz/Xr3KH796V4nmdeM3EJbMVbCKPTxkYqsb0aF7K7d+mtHUdfblxT6uRne
UrV7Fsy+oJ5is8+RFtj6ylC3kj6h6WSSnN1oC46njZqQUx9R+snd3WG6Bat2
al4O2fYRGSd0HzsLtGKpZtzPWcmPCD3We/C0dCu+vvDpjqoYhslRqYTLeq34
LSZsiZHIMJ7ahcoURrRikjY3P5j7N96aeCwX/qMNb46Gdn9WGASX/T9XitWG
g7SPej+mB1C3Y1H5EoM2lCd3uug8G0CKcba1zP423LE8kupweQBHyeCdPy62
4ZKE1Kr9r/oxwtq/1JbbBl6CTZ/bzXeYUteXKPBgIzBXZrZ192tsGzJkh59n
4+eyVtlA2muEJZkEnrjMxtyFwc+F9a+wQtp6TCWejYiF3m1ntF5BW9D9aUIL
G+vSlX73Ve/F+b57N6/JtWOEntylu+oFGuKSdx5Tb8dP5s1arf4eUFYZC0Yb
21HzOuB5WmoP4tuLPBd2tCNBYLsMR7UH1eVtFuf+bIfziXfGRzY9x6+b3yVc
nrTDnplzZtPRLhjvnmUb9LSjFrS1K9Z2IUJUIEixvx3Rng8dXSeeQeHi4m9v
vrfDbXlgm/GVZ9h2cvWzvUpPQDeVmpqxe4pAY8to+D7BLbGKIEFVDoRmHkjK
qXVAvM3PsN6iDXJcw0ls6MDj4KTfGuZbsSXt9QsXnQ5IKfisditshesu+l+F
ezrw9cuE2EOJVrTHH1UzPNeB+So5KcabZtzUZeq6sTsQHiF10zGyETnixfJR
XR1QVQ1fSN3RiIahHQslfR0INmuZCRJoxET42ZZfYx3QvXMqVuFcAw70PTWP
lunE3evzY75ddZAPCHOudOvE5jkTG7OX1dCyVNjx1rsTXkYHNc3tq2GuWvab
4KVOTDBlkoL+rkIgZ/Cr6e1ObFO5+6/31CMMyeuff1/dicprLzUvralEbu1k
BE2Mg/0GASPHm0vRdCvcc+0KDrSgfEXSvhRvXJWtLJQ4GFa28387VQIxcYuV
8Vs4uLVoqV3f+hJ4OeSlrT/MwfSkysUjOcXQXnCs2FfIwVIBxayG3Acw29MQ
sv0RBydDdRJUhR7A+S9FC1YTBzSlNQLp9nmIZr3/R/YlB65dbrGfV+bik+ch
5tAcB3HBLL2w7CwI1FUPP6dzQaZVvyVLZmGFmGxJqxQX1Tlx1574Z8Iw55Vp
rhoXI72PQy1tM5A4sD/Aaw8XTgeCDi1eex8lGuUmR224eHvoB+teehraA6SX
WztxUbWpeUxDMQ1TMs8LWD5clLUuS/ORT4X5Xsv++UQuxBrWKMc5JEKwydQw
cpSLwI3pgsEnYyEjmSceOM1FsYjTns9JMdBwYPR5CfBwU+1n164Xd3Bwlu1t
Lc2DNXs8a9jiNso2bc+U0+MhQMIr9vlIFGJub3knvp2HXWqeNnPFkRjgCW9b
sOBBcN1/NH+9CEzLOy8at+Oh06dOV2IiHEZ2m9wHXXhQj/UvTbt5HapVyuk9
HjzMLPmVXXD2GnTpwZ5tvjx8uOpUX2pwFQueWw/rBvHwqNw65x/DMBiumjAK
Dedh0NDsE5EOhcDSQpXsOB7qdKTHtKsvo1Bb+4tYKg8X8mvUVleEIC/ysEdg
Lg9lGxVo+ZXBaOir0TlTyoOI89Rr59IgvPxdXtS5ln9/5exEjUcguoKMrr1o
46HLj1lrmXgRW8tMN2/v5uG515qCZH9/MKV13bf28WCq4rsvqf8Clrs7fc37
wN9vvmtjrnseAckn7sl+4+FGqaHMpPk52M/bPFsyw+/rs9kt4+1Z2OwPtAoS
egpVP/XT5s7e+D9Cx5ma
         "]], 
        LineBox[CompressedData["
1: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
c9OFMEFyRONE6Hr3VvRuDuteGS1I0ng5vqrerTifdTasOlGQWESNO+4IbkWC
cs0kf5Yg+Vwsq3/wSSs2OF6tqmgQJHfkT426lrWiMrtlanKhEJFu6DcslW0D
d+ez5ZP3hIhdwpVdFcvacKs699yKKCFSZDerWbOyDYJiO7MQJ0Su8EuuaFvf
BgdrsVtH0oVI80a1icFdbRiy76wbLBUicXevPV14oQ2zeotu/JkWImt3Cs+c
yWtD8fu219cshcnrlNRVTQVtePGO3vDKRpiozTtw0KCkDfJ9Cv81XRAm27lR
SWur20Af/sfmcxUm+4KU9w5x2lBwb4HE5xBh4tRsFOUm1Q6loJD0nx+Eydiu
kc8/F7ZjLNls1LRQmFxPi/x1bEk7Vh9uW5P3VZh4uzO1tFa3Y5p1MuBYjTCJ
VHTs4dNqx+BRtx1zuMLkvWPE5sBz7cj68H1yuziNaLX+d3zavh2+zWm1A1I0
UqjT7mPv3I7qq/Xq9xfSSNlCpeYD7u3IXC1e+EmeRto+vnOff78d8UVy0kGb
aYRHpPV7bEE7DPUDZiWO0Ij3ZfexuSXtSGufFpcwpRF6+wp5z3Jqfl8yBI7T
iNRru8unG9ohefWk0vfTNLLy6IzM6r52zNwqGGhxohG9Jwq2GQs7sPVkufpk
MI2oRYkrlch1oIEpVrkwjEbkgye7WxQ6kBL6w3jtfRr551ZvJaDSgcCZLgPN
aBpJP+hvYUI6oFlhZ9z1jEakeYeNp892IA3Xxu99oOIdb58nZd+BRQOK8ss+
0UhfX1mt0uUOyJ9TCE36TCMlTUkHD9zsQO1Wj5P3S2jE7bWpUWJoB5an9GnN
ZdAI07JAxyC3Az/5S6ds2TTy3Tid3+JTB/JslZl2XTSSs/dRoVNRB1iWvw+c
66GRME1n8riyAz7Pdg7r/6AR3bmrtw92dkA72toncYhGNgvOn+Tv7cC5FnUd
mxEaWTrJm7uovwNzvsumLx2lkb+cVs1d4x2gPXrn5zpOI6n5Iar3RZmYTFbL
LJ2mkajMGyPJEkzYyGpL689S+U85l5E/n4nnfz3VPvHQiUWk9obeZUw4SCiX
R/DTiaT9uPI2NSb6nwslttPoZOZ094/9W5hI+aFov1iETn6aVb+w1mLCcYnq
vIOidFKkm6oUrM/EiaS0ycQ5dHJ1ieVy9nEmem6N3uiVpBOrAxuPtp1i4oG0
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
XAZ36eMIZiEXJP/wKneaE/4HJI2v6g==
         "]], 
        LineBox[CompressedData["
1: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
TgO9gF8c/w/o34Nr
         "]], 
        LineBox[{{0.2532396419027004, 0.0008291053191789857}, {
         0.25337135412108336`, 0.0008979281059766131}, {0.25365124258514776`, 
         0.001053297014579336}, {0.25397311431882197`, 
         0.0012473070285302227`}}], 
        LineBox[{{0.7437312291537406, 0.0031058782633996084`}, {
         0.7438710311500351, 0.002968746820874891}, {0.7439642324808977, 
         0.0028790535547456213`}, {0.7440698606558758, 
         0.0027790717148930793`}}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF0nssFAAcB/A7HErhyPvVcSqvkjymkch2nmt5jRFmESrV7ZrSirNTIdWa
MI9CVh5xrGOV6oyb7CbvPIqTczhchxZ2Hqf6w+/3x2+/ff747rf9fj9K3NWg
eAUCgRD5r/53v3hxf9t86Cl9O++QTYqMW65z9l6OActj10zVt4ezDfLB4REV
7OWVKrDaDjOKZsoGW56TijtyOeDUHlePoj/vwXocsoBI5IJbhGe6e93awe3J
ZUYREh549ZC7Rv2VL2AFWZ2mkSUf7LwT2xLc0A0mtvt55Um+grtZjj2d1r3g
k6Niuj4TXW1Tppc8gtZtORHgKESzTvMz5BL0b35sc9c6urF2k+FL7Nu1h6nT
0xrtfehc7hHBhC46YSiURrdFe81nNip7oRvdXELDi9BmTxZlNVI0iRcv4T7u
By+uTwq+2Q+AqxZa+eqPBsHqJq+XRKIh8MOk5oRy6jB47XSdKDF9BMxw4HF0
O0bBkw283H7Kd/Bm8lCJVdoPsI2nijyhdRxMq6RcbNITYD6mzdv3AzrVJMZ8
KmoSbB9Aj8l/gxanZZXSttALYTaJFYSfsO/YZW0FM0X0cPZWSSkJ7W8x42So
inYOa0nS2Y82z75fpqmFlkmtSCrG6L6Q7svblui7B8luC65oW0mo2kggunzb
PCewCq2tsazK20ArcUvYFqVT4EuOrWN7/IXgOt+48s9r6NVFQ83ZgmlwczBN
Md9bBE73yXrBmUVTJvxGX2bN4H+7sPINHGbBUaa9MuIguppxNMXVeg7n8fOE
15jo6DEizaoW3Tl3o25qAL0hZU+4z6GPrc1rFG+idV2OF1jK0VupN42bCGK4
5/Q7bqWbIpovU7bqIqELbz9zmtyLvrBt4bWmgZYTPCOphugipWhGEBUdtpKd
a81AawuaKxV4aNIdZojr9XkwoSaaLdRaANOL2Xla7ehPNg9UySmLYLIf3TZT
XQIet+sbvPUR3fjcgyqK/gU+z3Ymm8jRGVkVzPFaKbhebFKiHrAENmcd8FF5
hS40U1vd2UH/BVQzqFc=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423890691175`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.044000000000000004`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.001, 1, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$108809$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$108809$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.001, 1, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {290., 297.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423893576083`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rabi oscillations - constant detuning", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835042413463442*^9, 3.835042440620765*^9}}],

Cell[TextData[{
 "Population transfer between ",
 Cell[BoxData[
  TemplateBox[{"0"},
   "Ket"]]],
 " and ",
 Cell[BoxData[
  TemplateBox[{"1"},
   "Ket"]]],
 " by applying a constant laser or microwave pulse off resonant with the \
qubit transition. The oscillations are faster than the resonant case and the \
population transfer is incomplete, which is a good diagnostic for laser \
frequency in the lab. The incomplete rotation is not very obvious for small \
detuning, so it is helpful to generate plots below with large detuning (of \
order or greater than the Rabi frequency)."
}], "Text",
 CellChangeTimes->{{3.8350362044024034`*^9, 3.835036267954064*^9}, {
  3.8350363230918264`*^9, 3.835036491716954*^9}, {3.835042456252944*^9, 
  3.8350425292047763`*^9}, {3.8350426131536193`*^9, 3.835042698075835*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", 
      " ", "approximation", " ", 
      RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", "\[CapitalOmega]"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.8350362743759365`*^9, 3.8350362745025606`*^9}, {3.8350425379361563`*^9, 
   3.8350426033011312`*^9}, {3.835042675257586*^9, 3.8350426757641683`*^9}, 
   3.835042706788735*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.001", ",", "1", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Time to run sim: ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350362774249263`*^9, 
   3.8350372242021976`*^9, {3.835042384029936*^9, 3.8350423887852516`*^9}, {
   3.835042545386286*^9, 3.8350426055221767`*^9}, 3.835042677895819*^9, 
   3.8350427087805963`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
q9l8i4CQ/lWF2wJs0KzKxt+T83N8ueCyPUJsuNm225x/SUB597ux78JsPHUM
XSuYQMBYdjTZUZQNImLg0mZy/g5eZLfpgDQbGZW3a2+S87vorel/kzJsXBrU
408uIvDmd0RflhwbItMZLp8+EagZaoneqMTGM2bf3Xxy/l9QqSfCs4eNPQcu
v2qqJ/Bsz8ivD/vYKLXvv3+xiYBkdkCLC9h4d1HO+2cLgf2vSkP7tdhYUSR2
tq6TQMPaEy4vdNjIzNluJ9FDwC50yshEnw2+JRNm9r0EfHzVlpWakOurOUmn
fiHA/6d5zNOcjX2V12ezBwnEOF+pVTzCht56kdo0JoGiE2/vxh1jo/tFkYzT
GAG9Nl0nqxNsBLop5m1mEeg0HD4o4MBG6D0e+TY2gYm9m3hunSb3UxP+8f/7
mbs5JX1q58j9pFY3e34nsGrr8U+cC2z8U1H4/P99TuLrv9FJl0n7NWcf/3/f
s2PdC+8TV9jgfeOi/P99UMUTVZvVbmww9AsTkiYImC9pVq/zYKNo3oqRyj8E
rkzy/953g416ieJmyl8C/1zSWn75sKG4z8fj/RSBRyM62el+bNjOSfYGThMQ
t2eGOt1hQ3173OL/77PS22+7iAWycWPlkt9TJO813mjcGkTmce5gUuQsAern
TwohD9gQks9Y9/992TEN22Vaj9gwuztq8f992lju5Nh0KBtNnSvN/79v81II
r815xsYS9Xer7UjmS9yRcjGcDZds9ZevSH6xvumuVCQbXidUiGaSZZ45O/VE
sxGrL77oB8l5S/kPPYtjwzzEa2iOZK3bqZsMXpH+VKsK/ktyy19tnvmJbBhY
+/39QvJJ16G+omQ2vBdu215A8vdR/09XU9lYba6vcpNkPweJGPl0Mj4mR2e3
kbyis9j7awYbTis6ntaR+39pcswm6j0bC1O0fx4jWbHmj7p5LhvszVsk2kn7
SzSfiyz9wMbDl5MiINkoX+V3eSEbDjJ7e56T/mJsa2y5XsxGD935Ujfp35cs
IZ/5pWxYTQvMX0/yyVQLmYflbCyXzfxkQMZD5uzzBpEqNqSCP8RcIuM1Jt3h
FV9NxvNoaLzPJBmPr2sl5Sls/KS+otz6P77xx2g5NDK/1liuvULGf2J9n3hN
IxufNuyTlSL1UtQlUWPaQvpf++D4EKknnxeOV7rb2FCWCW4JJ/W2QJhZwelm
Y1FBrziNS+b3UvbZVUw22jdNNHiMEmit2SYUN0Lac5IzVzBMIOKuS9GWcTJf
3JXPsYcIbOD9yb+XYGOVbMdvKTJfFCb/vnf8S+ZfvLlFO5lvRN5eW9Y0G1Xq
lmnR7WR9cvNZ4DHHxofu9ZZmrQR2EzzWQfM5eOK4J/1hA1lvhhfPZCzn4N1+
hyr9zwSWJOol7VrBARZoLn5WQdY7xwfGFSs5uChwPI9WSsCiV+BV2xoOvgmH
2wuQ9cOhdbX2zCYOdN6/O9D1joD0U2virjQHB6/tVk0i68+ISWSE4BYOnpf4
pjmmkPWPJsaSVODgFddLMT2ewI0KqVC9nRwk/z7z7d5TApp+p3e37OJgmZLA
yc5HBOZppnw9vpcD5duDXqIPCAQVyqtd2c+BzKfo9Mt3CIRnbe8O1+fA73oX
xc6NQFYcpIfsOLBJO1B7zpTAT++fix0dOVjMP/Om14DATusUVu8pDmpsTmzQ
0iHwUVAwp+McB3Gf9BlMDQLVfn0HaFc5CKrU3+0jT6DnpI99diAHeZlZ63l4
Sf9j+yGl+xzcUTxWGTrNhcN6pkz6Aw6YYhZWwhNcDLcYcpNCOZBa8+o4d5yL
b1piPpFRHPC/e14608LFoi0fo/wyOPhRKBnon8CF3nyXW7NZHNyY1nNTjeUi
pF/ypHcOB+6rLn7uCudCKCJYzr2AA2GxhR+m75P9a8mxgrMVZJ9955cY68KF
Cmuyzbidg4kdHSYOu7g4kblTSHyOg59LRmfWlnGQf2xSoJGHi/Pnagu8P3Ag
sKiI/858Lhb2hGbXkfsoO67BN8ZH9lHhsCc6sRxILtX6lyvMxayHt03IdQ6G
ncw4hnJcyAve/O6kxIHzukuUm5ZcHAlenvSWrDN+d1/5M9K4kLs1XlqkwMLy
a4v1Hd+R6z0uvJawiYWoc5dXDmdyYXv1+K3bIizkGOxOIHK5cOowzpTiYWFY
qKlqHtmn3x/XlPzVPA6DOB4+OdJP/duX2nd5kuehD/aPPEg/v1GTui9SMIZ3
o+LRAoYErplz56KlRhEUe9ehz5jsi5IHvRasHoWTOWdzhhmBP/Ei/qcXjUKs
uDjLyJqs82vLo4XGRhD82LY65CSZ53MvnFdljODczsjvS6+TfWmzolXnzhFI
BqzSXZxMoHmG3fvn0DDmdt1c3vGGgK+Qzv44co7o4gw2J78lEDnqL7B/8zBC
rXNOaL8n8CXUxdCTnGP+yZu73S0m62zGvP7MWiYYTY/j5pN9cWm47thFQyYK
Av+camkjECLkzN+6j4mwvfZyCWTezhKFq3ZvY8IgSTH3YB+BtiAV1anlTBR5
1VH8yT4nvyJF37ZhCOHb1B6bkX1t5f1/Ku9Kh+D6NcZyE9nXVGg2pTOZQ5A1
vNRfRtahLXb+Us9Dh7CAtzUxlKxbD4MWbu3zG8JA3t4LDmTd01b6q7bZdQjF
FxKUlMk6KlaqfvyC4xBeSCz7/f//cfcmxuS9MxvCf0btsNc=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
gfp9Nf0uuErazFqGteG8l3xn5LkuXF6Q80+psQ2uCovjrK91QVP497aXsu3o
s87XXvGoC8ESWS0bu9oROiPldjyiC+F/f33vVSR8fkNEbc7nLkSF9+dKHaYi
q37Z9/SYLtAkd67WuEAlvmnaUCypC4n7JjV3OFIxc7Bt61BOF0TemVSk/c+z
zq5fXRq6UBBdLa9zm4aVy8YXlU92oWHzAuPTLzrRXOD26uhMF05tNk6tfdOJ
t3c3LmiY7cIcsYmUrWGdWFF9fh6NtxuG6zR9fYuIdqqYGRPoRv6ow7LtU2Ru
TPl/XyvdDdclylpXzUhfxShZhm3shgVPfokC4TPvc41jm7Z045ysmUWvCx3L
MueP7NjejWt/VLSnwkkfWFr0H1buxm6O68a+DjqW9GvS7+t0Q+nG96OxqgzU
vus6P3G8G18N1uVUHWXAQ+MJ9ZleN9wWO8/WnGaA/1Nym+vpbjzSk1zqYMYA
n9HappBL3aRPovkiAxhY1DJeUXO/G989rEJavjNQ5eCucfJhN+RLq2fUZhhw
UdhU1mbbDZV/i6VfL2RiodeF4m67bkjN1yhirGViwdEvuX9edcPHkLZt1yEm
eIsCkqQDu/Htq+OlCg8maPs1jrCCyX5VJdJ2v2ciKXe4yz+MnCfnyzyXECbO
Z6quWPG5G32zlIDqFCZSEljWPKndGN/GaGigMOG8zWVpfno3DP6+PHCQ+IGL
MQpRNlnd6L6W3fCWw8SiSIf20fxuHHrGMW37xYRxoLQKo7Ibe/2V7buECI+J
1jZ/rO5GErOsXl+MhcUfre8Y1HXD0c7x+WdpFtJ9KgJrmrsRcu759nHiR/jd
b87mMLpR9YA/cuFxFrIfxZW//9ENj+uSM2fsWPD6o2906nc3bkuuiaa8YOHa
g+lfSye68Tfm7JGdLsTfWR7f7PSvGxHlPN4+bwlv3Bpzvb+YjSmumX53JAsq
fR+k5Jew8aQ3ruhmLPH7JgfyBgXYeHOVa9lA/Fn+pTfDV4TY+OTNpKhnsbDi
7E5dPQk2DIUXmOV9IX6T0tnPL8WGREh/5vFqFgpOvXxeuYGNquj39SV1LNw6
0ZqiJsMGjZmQpkv8pFqtnfakLJvw2r3Pt4nfXKm9qSdDno0/qQkZ1wmPFWra
CG1XYuNu8E5z3i7Cd2USCVxlNiK7rA5+Jn729sEqzQgVNiaHpZ7Kcoh/UxWx
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
UsEjzafNwZLqZxIm0VRkdvawnI5xsNmwJ60piorF378EztEl39/hE386koqL
i2IN7U5y4M3ru3o8nIrEdZ6rJ/Q5OLpi7b/QT1TwKFm0WJ/hYI2Zx71bYVTo
6+h7j5/jYErjsZVWKBVRV3Yfv3uBg8MHI1buC6Hir40IH9eIg7C+3+e1gqnQ
9pr+cu0yB0WL3fVuBVERFMFyZF3lYOJE5FRoIBXjuaUHLlznICcz4+p4ABXq
TZEzbTc5+LX7rPsZon37XXJPmZL8XNF93OJPRf/MHZv6uxyYCnvtvEm0ipDu
Lm1zDjSPb88VJNpDRvFbhSUHQY0Wy1v8qGAeWJV40JoDc9kvynFE7zj717Tg
IQdfPcoV/Il+ada5ee8jDt5myE6FEN3mWNib/oQDz/kD7/KJ3uofFqbwjIM8
56WzY0Q/TX5pHP+cgxH+jp0q5Hv1X26u3eLIQfyFZIUAoiUZ2h3hThwsM9D6
toLs3610X9JpFw60eGVCEon+/lnWeaE7B9se5gpeJ+c/7ylulOPJQUa16KHd
JD6lVgK77nhzwO97WFaKxE/m3CyfuA953/k1FVtIfH1Ux7vr35F87NrHq03i
Py3Vnf38IweRNmA5kfyYLGp+rRjAwaKnHtp0kr/akdIbvUEc1Frd3Hs8ggql
ljTV96EcJBr8COog+V8Q/G5oIpKD2Xxed7UYKu45OpfGRXMw6Cr3XZjUU/st
Gz+jOA4KlQw8lpJ6i95peLgkmQPpbf58milULBfRXnc/jYMm+pPyV6ReH/1T
+bUhk4OraqyLvaSetb+KhbvkcSB3PL5qMJeK1MSlj1UKSTxfbrjtW0Dq2/ef
3nAxB7tW4MXZYiqGjLv+6X7hYOfusvitX6gw0GhqnfOVA5UXJS/2fKUif2tp
fFoNB/eiXp+/XEvy/TP8/JomDiLm3vKcbKZCzu1mJrOTg7Tty/ec7qbivfk5
T28mBwucRy5u4VAxa3DURL2bg5I+w9srB0g/SmxbEdVH+vvegQiFb1RYZoya
mX3jwIupZOxI5gnNn6Uh8ZMDkYbNLwTJvFF/3ri26TcH28vSj2Xy07BCJ/Xr
rmkOxL+d3nBoFQ3pXQ82Ti/og2WPT6vJVhrEvtyYTljch0MZ52XD5Whwijvb
cmlJH9ZoB6X83knDmYd7HcoE++Bw9dxTuhoNf/hn6G5ifRg502UYROalivJL
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
pBr34n8wYf1h
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 6.572850581794162*^-14}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.8350427089371495`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVmnc8lW8UwO37XkmZmUlKJUmIEp0naRiFUimZiVS2hKyEqNBAiFIoZJWR
Ucjes8zLvbj3WteelfF7f3/5fD/vuec971nPec6HpKXDhZssTExMeqxMTP//
1b452lY2dun4zH5Nw3+SRMR2UsSRLKwEbPmltss4K76LjssR1oRuEZHiCZyp
Yrse3pc+D5YiXzS6cdZp6voaL2wI7d43mH7gvOuZePKGxFVQOLw+H4PzqvaN
1xbSpqBruF3cAefxgF+VFlEWYNz0/IEazlesln+8FLaC1S7xLSw4V54U+VYR
Zw0H5ty6SncQkbyUevaChC28pij/uodzHIt56u7EO2CWOci2C2dsyP/DZWl7
CEun3qqXIKIiSntThaEjcDpFbdzC2VHfSvt6lBPs+q1cu7GdiPoPPj4ZKuwK
i3o9EwI4R7wTKtttfA9eFKieihQnIu0taWolcW4wfsG8iQvn/KnGw9MSHnBE
9Ls1VZSI7pqafn1s4Qn6caJumjjvbJ6W25H4AEQWXmTHiRBRWAbvXgNpHyg2
E/twWJiIToknJY3Z+IL4laTLbkJE5FMdu/WnoR/cKZM5lLWNiJSUZUOvRj0E
7fJvF4iCRJQgoBf0RDgAJoWKdprxEtGDpteVl4sCQPlBMcWch4guB1JYpIwD
IWkTS+G1rUTEtejkWxwXBN8tmb4ocxOR+68Id4ZECCgKOoWEE4no4rP+/IKy
ENj5RIxmgBGRnKb0YoDFEwjR7tbhIuDxzPnmJJ74FPqfDx6yZSMig1e9t89L
h4HTyc0SFesYktWRShWpCQNCkNCrU2sYwljvjtBtwkE3wXej9B+GzArXv5Qa
PocsroBvcSsYEtj3XM4o6gUoiXteW5zF0EMsZ0+IcAQI5/P37xjGkMyZF8Ff
HSNg858M6SUKhtoDHcb6aiIgVudT3c8BDO1ilf0s5xYJXC71nGq9GKpeS5L7
1R4FmXJpq8WtGOKajzos8SwGJlZZbtCKMZR36F7U2eEYSDn3jH97IYZMHS8u
O6nGwv0/Mh26+RjKmtxSWDkaC+6OJZbPsjF0YTRY7fapOEgJ81J4lYSh6H7P
k3nrbyGva79b0RMMnRC7mjRw6R28jhcyMHiMofFrKuxYxjvwMLIk9T/C0HaG
x42MAwkw8NRtossLQw62yruZSAnwUibsqJ49hnitslKSj3yA63fHMzT1MGR0
9X3WzGwS2PK5FwoTMTTdZ8j5QSQZtiTL66exYSjIFLt58WQyDMipSx1iwlDO
DQeR/IhkELBJvSm5TEDc9uqBD1Q+gq1w4eenVAKq8u+5xuH9Cbr9b4c8/EFA
Cuk8HGJYGqwKtLtW2BBQnVyVeZN8Glz9cauf25KAzL+4F/tcTQOnoO50vesE
FJpPdhxMS4NlD9KNL/oENFqW0ffx3Gc4Krp6d+EIAb39rfXl0Kt0MJm8dtSF
QECbNh5eP7M9CyrVr3TvjuNA0bZXTGVPZ0FWQR9FKZID7fola85jnwV2asyz
R8I40PHUrht9P7KAW1aQb4cfBypMjcr7JpcNKcunGm1vcKDJi4zvOs3ZoKI4
HE/fw4EupbxucNn8FQRe2xdapbCjOBN/XWvJr/BvKurapgR2NMRr12R0+CtU
yJDvf3zNjhy8NVrUTb6CjvstsaIgdhRyYbKdkPEVOk1u1F+2Ykc/VjV63+jm
wMXwR0xW4uxot8HUaMXTXLA9faG3JogNifieUbV5nwu5Sobm0l5saGtGwlPO
b7kQ+/7PuftObOgvdlHOYCgX+Ive2s8Ys6HWsm8uA0fyYLvA7FEkz4Y85R+u
r9DyYEhdNfpaJytq3sLPL4e+wVFaZESOECu633wUohcKYY/XvTkuD2a0LZdn
gJm5FL61CuvFHVyF68/+GVIFS8GjZ6LZmmcVPljRGqplS+HCRg/Tofl/ICtQ
WPjUqBQelEqwV+f/Aw0380iB7FKQPLh4bU39HyjHXfkYcbAMrmyNTV/W/QsW
ph9NUgbKIGXfX/lahxXIHzrZ2KJWDrfgpMUEaQE6zz6cDT1TDgfN87ewly/A
UmaJoO6Fcvi2WJiu+GkBVB4ctai1KYfFeZfPrU4LUMB3cKnsZTmIq/CYbcUW
oFBTZMfX0XI4NPRRqufIPHz/OOMSEVEBzX/cs+bTZ4HEJRdz4V0FyFwICuCL
nIVV5zslW9MqYMmMceO89yyoAx0LLa2AX6PkRoHzs1DS1RcfOF4BldUljKmZ
GSjFamrcUCX8FclRph2bgfLb8aJXGZWQgDbe8bZMQs7YnTumS5Xg/YREP5w6
CUm3VItvMFWBkkm+QuijSQi07rpmz18FgtZob/eRSThryRP7SK0KCoU7nwwm
M6DlaqBQ5rMqEKht/NASMgGks3YCrAeqYU5qllfHYwyaao7dxFSqgUXc6g7b
tTEoOc2Zt/lENR7f08lzqmPwTvOTodClamjcuT3Hbm0ULNHgqwPe1WCzaaW/
P2AURlUu8Ro1VYNf0aN7H+JHYFFafUuGXQ30CuYfdlmiwfEhjZon7jUgNZVy
+GMfDYLiz/reelQDP4KlRwV+0kCQ33BaKqYG5o8FbP/8jAbKzHdaYitrYP29
Ij1NmgbufdHhwaK18C8qK3HmJhXKot6esZauhZf7XvvRz1MBu5C0cfJQLSQf
UhnYdoQKMbVZDhuna0E0vDdfdhMVivKq9dyca8Fybts+sdxhWA1f2GJVh8sL
bdZY2zoMmjp/a078qoX6zMSBd2tD8IyDyU+CXAtUm9Ygr/EhEPfeNNO7UAtc
0pyfhiuH4Pjtna0GO+qAR5NrydprCHw19Z/D/ToYvSXvdGhpEGo3Lp0V968D
BYm+gjv0QdhabMz071kdPPgp1z7QOQgJh2wc8z/UgU1BsbBDwSCUbffRP9Bc
B9wfVd0O+wwCy5/PW0V314NN3aa60/yDINqkMQ8H6+HRjuWSdmwQlN73/LY6
Wg9KP1rFwtcocFOL8CbzXD3c7izuix6hQG2M5W4Nt3pg31zPNf2DAoN2fwg2
fvVgrVhGW82hwN8Tz8efPqmHM6GzNappFJAd/5H1+209NIjc8Tv9mgLhqsKq
tjX14HO+pSLOhQIp3NliYW31wJzmRNt3hwJlQ6c3vvbVg2j8u2q6JQXmnrhW
rk7Xw0cfsbDpCxS43Ndy/rlQAwhfv/jt2GEKOGRZH8rb2QCvnA4bnZKjQPCj
Nb5e2QaoWBUz8NlDgcL9+3ukTjRAwoMGCR8RCoh5Bd34ZtsAmqq/RXNZKHBY
X/w0yaUBxpsb6uz/kuH8rty9zD4N4HJxwa1jmgy+jYOT2i8bAFvRGsvvI0N0
gnurQ1wDBI6oRxxuJ0O265aciI8NkHivZjdvHRmGxNTdB4oaoPa5cTv1Gxn+
zXRcY61qAL6YmN7eLDLwV91W39vSACmcvxPlUshw2i6axXm4AZip0ybTMWQw
O3GQFjXZAEzfvE5ef0UGd4HqmuJlnN9adkiHkiH1x/wzdq5GWPKZoP16SIby
F08cZAQbYUC4wqrAiwy9NyUv6O1oBAuKSdCf+2SYP1qg5CrTCLWFijrRLmTg
4tbbFqPUCOmstrkRDmTYPUT78+N4I9zaVP596g4Zjud7kYbO4tzMbfTxFhmu
POErJVxsBL/obM/im2RwNE17L2vSCKkO68JyN8gQonAiwMCmERSXNGXXzcnw
gaPb2s2pEYzPVafsNyNDUa+91psHjWCzUvg434QMHZnssmWBjcBeplv+9joZ
GP5x3LTwRtCPSrhANSYD2xXFWWJsI0g9aFR8jLP4/voOuaRGmDInWfzPyhvm
+RczG4GHt63nf3ndc2X+pwoaIf41heMNru/GGwk9lfJG2E9w7U7D3+c55iO6
r7ERnI/cPM+P2/NcZWBEpLMRsDoH2y7c3o+B6rlcFPz9HIf2L1iS4XtHnN/6
WCOUde2Juo1/b7vkqu7MfCPEpuZmqOL+GHMwFh5aa4SFK8JuVri/mEqKaB2E
JpAU8VgYsSeDIJfI1yqeJvC275arciaD7DUPn2+iTeDLIS676kYGjZRu7dTd
TSCXs3nh2QMyGC2pbHtzsAmqDS6E3/cjg4Pm6+FnR5ugpMCF8D2QDHGUS16O
55pA/dOvggsvyPBVLu+s5ZUmaOd5Qkx+TYZaL34BQ4smMKATrA3ekmFRqCND
5V4T/O6Y9ixIx+Nto+C5z7cJIot+GbjkkmFn3ovToiFNsOR/3yn4O57vBvrk
9bgm6N+v1vqziQxW77I+z3xsgrNs6XvpnWR4MMntPpTdBGsGaX+sKGRICWna
Wl3ZBBk3usWdF8jAXK6tEcpogsWb/Mk3t1JAaGsat+9SE2gfkdhuKUgBOVNi
nyNTM9h9Wlp6KkaBa39rXAz5m4F/oXbQZh8FchVOJYuqNcP0UTubE6coUO+X
5LT5dDOIupt/StWlAKWZ9fiGXjN8CDYLBEMKbL5T3jl0oxmutzhoLNyggHUi
YGlPm+HZ1e2j/oEU8Jp9++tNZDMonu9SuxpGgVewnhD6rhn4ojYem+D9p6zv
+1GnnGbQrXA8PJNKAWF+1TtH+ppBSrfODtoo0Big1Fwt0wLOthW8L/cOguqW
BpYXh1vAcDqnQe/wIKTEWKgYoxaYKCa81tQYhEeZYQnTl1qghSCf0HEdl+8e
dRZ62AK/wgKVQyJw+f3x2253tQBh4GqtBfcQCOYr6ioNtcDmXRkvo7cPQQCq
91tntIBswZ6XhINDkJ32z1WLuRU6V2KDw/SH4Gnp3oF+wVbwagtt14gaAo0x
/2wOjVbY53dq4KrsMHjINdffOdMKMvEav7ejYch2Eaa16rZCB/mflbjhMGxf
zxJ+c6UVXvfYRtd4DcMf3n7/g3atUPgn17K9FZdXU7lkFN0KaXMrU+2PqCDx
fOJP6lQrhD4KdBUQpEOJhW/q1/lWqOtJq7I8SAdTRb6rxSut0EPv8aSepUNc
p2pBI0sbKCkFqAV60UFI/InbtGAbFJa3nFGn04E3be+8ErQB/ZtV8POKEWCv
vMkoDW+DeJea02wfxyAp8s+b2og20KUsF89UjYGmTahOW0wbfOXb/omXPgb+
nHlpQ4lt4ClWMLMkPQ7r+my27AVtIDwsnX3i8zis9H+gaVPaYA+y4+//MQET
y+SB3/LtcEtNvYvOOQX5NuHl2srtsFNkj2i+0hT4dR3/WHqsHbY7v8ouN50C
wW/xdqmn20HqaM71VzlT+DxovOp1vR28KkIMt5hPQ+xCp/Cu4Hb42VN7ZZ/l
DJydbTJ0JrdDZilWZ0iahaTx4nrusA7QKDQXXJBYBPvXelK3X3WA38OZp9zH
FkFFc/hBVXQH2I0XfVW7vAj18ZwHvBI7gCmrgtDxbBFm9a+GjxV0wEPHGX3K
30U4/m3pYuVwB1RpMwlA7xL0PDrU73H0F8RIjR5eSVwBbvFP01TqLzA3kBco
0l+FZ7Z51gm7OoF28RhTli8zGkcZwZtkOuHkYvfypVBmdEYoOc3tYCcoBIbN
z8UyI5aaiCld1U6QZxgHcuczI49drm5/9DphMdqdu26CGVmTFYIuPOgEODXC
c/gSCzpxKTuZrb0Tuqo7l3QkWNFb2ZQah65OiNlLXgrYz4pWWRPGekmdoNb1
8vwXFVZU8DX8wJeRTriamtc0rMeK5LY65Jms4fp+98Zn+rIisYYDVfl7uyBC
ssC4jcSKltBn6i3fLmCpzZ3iCmVD35Mm3twP6ILtefJ2Y1FsyB+TvRgU0gWn
W71YihLYEHdr+s/EV13g33XptkouG5I2y3w78KkLWAmnCIm9bOiy9xcjw9Yu
sHaObVLbzY7yCr81gmQ3/BguzPD+wo48xVcenZfuhhamyZ+kQnaEHh45ZrK/
G7bbnOWQL2dHjWcLUz0Pd8Nc2le5nHZ2RO0qCsrT6oaO4C92svPsiH/pB9rv
3A1SfkTzqUMcyFWhMlewohsOZ9+Ato8cyFppR8KL2m44tOt69YVMDmSk7PWU
q7kbgvQZUjV5HOiYqpIlS083JLx6GRBcyYFYNJK2TE11w/fUhFr7QQ4UbhBw
u0qkB7R2pfxsFSIgv4uUS2hHD4QE1X16JEFAzpfUThTv7gGjYbuJfdIEdPnq
wrYv8j0QNfg8XV+RgMQsrKriTveAlTvvOuEcAaU5au5wde4B7MMYy24fAopz
Ttg0fb8HaBfOxPAE4PdV19UlW+8eCBgr5Z4LISBH99wms+AeuErLLAyLJCAV
v10PdN72QHZsHM+RdAKqDGfr3FnfAxtbiIkXugiInFn5tE2yF7wkuBWHdmGo
dZKNobCnF+7SN16f3oehMtlTuhGyvdDSx6mVcABDCWlVXFdUemHwzY9URWUM
WX6sDiXp9kI35weVvtMYosfXho/c74WVxA0RJWsMdZKwmbPevTDT3ZwxY4uh
GlEt/TT/XvgzRN74YIehlJi6rXahvVDC6Ps36oqh25H1L+Y+9MKWzENs//wx
NPms8dVaUy+wr7uHqMVjaKCBa8G0oxdCmZ+MXUnAUDPnOcOy7l4Ydva5aZuI
oczgJv5Hw71QGJFaaZ+KIceA5kjsD25PgVwGax6GzCu4l2zXe6GD/ZhX6zcM
GbDoXW5g7YPUSxEvXxVhSMGvRTCMuw8eM1V+Xi3F0MKD1td8u/ogZP/kHuN6
DFGLtq647usDZW6m+t5GDP3+o2/UKdcHLG6J/fotGMq/3yYUc7QPQsXf3t3x
C0PuLu0x2/X6oHVGIeVcP4b+3f71Zp9nH9jyJctRJzFkqGzyQs63D+ihTbfS
pzGUzkwPUgzoA/gYEnx3FkOm0ctO6mF9cO+jrf+vBQz9rBI5a/ChD5yaVt+e
/IchkReJ6pc/9eHzCPV0wyqGnK/LKhqn90ER78FR7XUM7ZpX334zvw/ehO6R
UmAmosc7LBbc63H9CVcaEjiIiDIxNubd0gfbWj6EjxKI6Mg3Z7L/rz6oUvW6
sZdIROPnAuqfDfQB7yuNk883EdFJ4c1lL4b7wPLt54sFXEQUR43Mixrtg0uy
b7y6NxPRuQefEhLm+uB2DfcO5q1E9PG0fFTych84yhm/JfIQ0TpP4dO01T44
0VaixslLRNkp9W65HCT4W3CTMs9HRHydk7q1IiQYOOHHuLWNiO6+d9NokiDB
7FenSAUhIqq8u6HSvosEcR42tgs4u7HySJHkSHC+SDbKXISIWppjhAYVSfDY
O22GU5SI9sbu5KYfIUHarhCPDJx75JX+TGuQ4FpHs1CfGBEprH6fWjhDApGn
8vLW4kT0pOYU9Y8uCX77jt4fw3n4ZXPPugEJTjUfm7HaTkRqpldaWK+QYITH
IaYb58h9lErsOgk2Ffm4akoQ0dTCraLNFiSQXyzzT8H5dNlsFq81CV4jtyq2
HUT07qln8rY7JLhjUKt+FeeVy6xvxBxJMCNSz0jGWX/ns+eS90ig/et+xzjO
qZP8QdKeJKhZy5/bI0lELIXxD/b7kqDp5mUdE5yNA6Sd5ANIoHWAe+AJzrl6
WdaHQ0hQ2uD7ORtnLtEj11XDSEDhVc5txvkmvcwAXpGg4FDyChXnki9aZzSj
SeDwTcZjHmdB73Y1rXgSxEZuVv6Ls8NZY4XzH0ggvtPn4B+ca/moey5+IkGi
UNTNGZwlyXfFjdJJ8OGNUTcZZ8+0RV6TLyRYU/r6uAbn9ns+mGU+CWQ63V0+
4bz/BGHdupgEC1133vjinJ32eU93GQmsCgU/6OCsxK9voFWNx+eu8GNunAu8
FzyLGkjg61GjVYv7Q20kOml/Gwn0914ac8e5TF+9Oa4T//2DLqsdOJ8qGlze
TCIBu6xmcQnu/3qpIEnfQRLwJztNXMT5fKiMzgydBCfXBBfIePzal5pdLRgk
CJ9p6LDE+Yq5y9v2WRJs78FCSHj8zRW/z+au4vnVY2qXi+cLNc5cVJqlH2Kc
GqJ5cbblYD/1mtAPpyatX9rg+eXccy7ag7cfWJUOjy0KE9GSxtzP8W39UOZZ
rHkQ5wfpURPG4v3gxpi0NcPzN8CXfPz43n7Y32K2OUmQiLCxR7eyDvSDtvTl
kAIBIgq9sPflDsV+YPa2rq/gJ6Ko3U40luP9QJ6fiizB60ckXGCL68l+4P4p
LZ6J19e7lcIjtLP9sHNi2TICr7+UBpZnNRf7wYTwcucpbiIqdIpQeGaL62MS
VFLB6/t435Hra/b9sGJs4ULC679csz/Q3hW375anqTveH+q3Sffo+/bDCXMr
2QhWIiL9+OYrENkPhTfczxuv4f10z/XUoNh+sDl6OyIP70e050wdy+/6QYrr
/R2OvxiauqEl3ZvWD7QP2iVPlzDExNnX+LasHzbHJz3chfe7ABffpS3V/RDE
u2NIAe+HxH6pHQ8b+uFQbFqeygSGeLPvutzo7IehFrbUXSN4P7u8LryXgfu7
fMbs6QCGznyQtPmybQDIRMmPwQ0YUormlq4WGwCec52EvXUY2hH2j9orOQAv
on72l1Rj6K/Hb0s22QFYWvr2u/0nhjIMQkyvoAHovJnk/Qo/D/iYZy+t3cLl
t9155/Iet3e5n5/XfgCUC1n2BL/FEINR3yHtMgCtIgbdr95gqLo7yUDfewCw
SMVPzyMx5JFtdC7xxQAIBDk+kAjBENmsTFOraACqyKq0UHsMNV7KYDUtHYBU
RZdh3jsYKtCJLXeuHICs8MiSMBsMvVRxRXHNA9CIxS/eNsfQqS171aaHBiCm
x7U21wBDn0vCFSM3kcHnyURTsAKG7oub7RzE781xBQNEwiQBWerLXyZZkIEw
/zfJZZSAzj9iftJlTYaKjc8lncMEJD2WONvkSIZtaV6X/HoJ6FfuaFlRABm2
7Pp8w7yGgOR1nc0i8Hunv6Sl3fl3BDTqGRh3ZpUMV6fsRHLPEND45f233jNR
QFRoz07qCQIyn+FjkWClQKuYRT9RjYB0pGiHRTAKgPOLS8ryBLQz5HH8Vl4K
vCu1ecuLz0Otho1313ZT4EXVXp4OGgeSZVza1HWOAuN7ZO3OeHCgAkPd0if6
FHDRWBcMcuJAJ39ouBy/SIG1jp7Sb7Yc6FrYwb5kIwokBssszl/lQCHyxM+u
+D1yLj/ieMtRDkR3/a7N60GBm5EdrFzL7ChhbeeTc0kUGOFISHS3YUey1sLH
mT9RYDBw4DKXKTv61rxlLhe/R0YvGzi8NGRHze9Wr4plUWDL3bjaeyfY0dqJ
zn0ThRTocWddiBZhR9eCQuqCWygQo+D5WL+eDfFtmcEq/1Jg4ZbV0hMJNtT+
48ljrTUKkFlHLWUE2NDLu7s5WjYocOXDLekSTjbEW3+NtZdtEGB0sLZ8kRXx
BlatTXMPgnDXjPSJBla09V/snKjUIKwpN7kJubIirpFTJBedQejRzN7l9IMF
sZW+yZKKGwSm39ujew4xoztKxT1EnSFoS+H362T+B2Wtv9MLzg3BrKzWwEnq
XxCwm/G1we+hd+vnEnOr/0Jp8m7pqktDkMFW0PP+6V/g2/bc2c98CK6p+Qjk
CfyF4j9Wm5bvDcHLwgHXLfv/wKZSbnVqwhDwmN36STBZhs9algklS0MgKqwp
8Gt6HpRkJY/jwxw4fjfk9uiahxJuSl/pvyF4wVb591DpPLR2mGz7yTQM43qm
xpSweVgwuRpWwTkMsqnPehQPzsNxZ32v2u3D8LM8trrbZQ5aY48btZ8ehpZD
+bf5uGfhqvfa4gWtYagbSqrwXZmBIbPvrzp0hoFjw86MbXgGFnaptvzSH4aH
oTXfLhfMgHDW4dNd14aBza9XYafVDFhWyCqR7IfhUybHSJ3fNCxOiGylRw3D
sTmPR5uFJiEifqQmLmYYjigocO2YYYCiXq7vxbhhaH1vgDnWMsDp67npsvfD
YCesk1nrwYBJd7/mN+nDcJ3nXI0peQJo7PRnBuXDEFC610smfxwCvn3VxKqG
odnjn7Hoy3GQsvVdLanBn8ttuqJtPw4WjUJ3ZZuGQSrxzxvLPePQ/1JHh9A9
DO/STA94xY3Bb4kvxB+Tw5B3UkZa/+UouLZ5/3SZGYa4ktbzks6jwPdI20Nm
fhgSWfTOyV8YBQP68OjrlWEgFzGlE/hGoSldsNaZlQoGEtJMb16PQNVRr6C9
wlTY+n44WSedDnkXz7BGaFLhWINi1h1WGgTrFASKnaGCXRN7vA+DCtdP7sOS
tXB2VEmv+k0FFsVNm/PPU/H6cBmfTqHCed4WwW4jKlzrPMWdY0CF0dbLMmJ2
uL68A3E03C/FtTXpSQ5U2Lz2lKyA+zWs7MjBA85U8M3cp5ETOAxK2SJKx+9T
oUZZU+acGR638AF184dUOJu9Z3aYfxhEzlsbJEVSQaZHveVZyBBMnurqkI2m
wphV2xirxxCUqZ+9nBdLhZ1HMv+l3xoC6wMyxtXvqJDQa1sUcXYIcrimrEZT
cTsZyqkFnEOg23DPXbaECuvO0/4nowdBooL+N7eMCiNP7yy0PRmEuaIr3uoV
VJCu5r3ywnsQYtKO+p+vpYKT6dGiDzcGgR6y9tSxnQrOz10juBUGwfds4Ltc
OhXqDw9f3+iiQLvprevyY1RYTAlIrm+iwK57OsLpE1So3LosWllBgfr3PK8S
Z/DvjXt07UQ2Bfj/xQe9/IvLT93IuPGUAtY8D09yr1FB7RDH7Ft/ChTusWJ6
skEFswSWNYInBUwNZTwfstEgKKNa44YtBVIy8u0cuWlwKH7lrro2Bf5WxMgw
ttJgM3V3N02DAud6vUZs+GhwoyOstPgY3hc5TlqYCdGgSDubOn2AApri0tv7
RGhg7aLGf34PBV4rEvsui9PAUyY9sWcHBdTMWwzP76SBsbplvTs/BcLcvvLU
76LBbaGay8+48b75LLL51B4abN157kAT3ueDCo3Pqsvi9jQJ6WX8I0Mr7+gx
WWUaOHefubP1Fxl27mtY+XSEhuddwyBnAxnuQWae1DEalEWHepqVk0HkrutB
UUQDi18dbYJfyXDX/wojSoMG1XvYnT3SyFAarZrKe4oGjlqty4cTyWBVxSTF
qU0DvUCRh98jyZDfN0wO1KUB55ajdkHhZCDOVccx69Fg7bn81rQQMlzH0q56
G9BAP8LbfA9+zmVuDxX8c5EG+xIeXFr3IQPTYccO18s0CDe7OSLnSYaLOhef
zxjRILbGcEvhPTJ8tFA+d9eYBi3qJ2vinMiwcl+Yc9QEt7+EyNlrRwbtsNXq
G+Y0mGOz6HC8TYb4JPIjsiUN+LIHJSxsyDBTVI6Mb9Ig7C7bZJoVGTTaktc6
bWhwSXTn0fOWZIgYCS66cJsGe/66sOqYk2Fk7c795rs0kGnk031vSgZVfj0l
bQcaDLCs8hmYkOGZjMJslRMN/EYIJtfwc38ACWSecKVBXeX8vh/GZDh0ZeX2
Dzca7OIx8fHAOcCub89RDxpATLlpOM6dj0qouQ9owP85oHUd532x79/L+9BA
+wStpwbX55UdYJruRwPJg5j/OP6+5mob0b2PaJChO99qbUYGyX7t7sRA3F7m
pmY1fM54Un4s61IwDSj+0icSbpBh7pNsEOEpDcYiz561w+eOa6HiJoWhNBDe
HExJtCVDuTO30p3nNDgu6UTQxP0nY7TBKf4K179RXXwO9+8r9ZnB5kgavLz6
aK0M9//qzsECv2gafJ7/3RSPx8cKaw9XeEODT8q7DlJ9ydA4WW5NjafBcim2
OyKQDIc7ctSjEvB6mL+Qm/GUDBxvIyf+JNMgX9a4QDyGDPaPgso/p9BgdKVY
zTWBDF237seYfKYBQaLGQymFDCmKV8/8zKaB1IyB9lwBGbYKa293ycH9eZe4
PP2TDB7rqou78mkwQ+wNu4Lns3adWGJwMQ2K3S6WWpHJ8DVzs6dqCQ24vIs9
Ocfx/I5Y12eU4fV4pMhaZJEME6aUdb1qGvCc9X+hxkEBQ82238x1NFh8XLnF
iosC3/eVp+c00GAj8kl7GT43PVtIvLatDZd/fdlIBK9PuSc2+QN9NChkJI2e
V6dAlINR6PMBGogphHHsPEWBDUMtK41BGiCL960y+FzVKrGf9yMd/31TYEi/
CQWc8qbs7GZpsDAtHF77kAK9sWRNiQUauHYrb9LG+5GGX6to2xIN3scY+TNH
UoBX52ud0ioNVrndXvHic1Iu5d7uVQ46xBYmF5d0UECs2no1g0gHxtHUoNkB
CgR+vtJhxkWHLTclS66NU+Cy29GHFTx0uF23K6+VeRCWN62RnojRIa7weI6u
4iCoqgRECCvQQbX3t2BUwiB0WgorxyvRQSBR/9exzEFwCcvs2qFCh2P/BFl5
vw9COq1bZK8aHew/W9L1ugdhe8SB98qn8edbtyny8Q0By2xnxsVrdAgrsrSq
fDEEb8Xu6nVdp8NgysW8+x+G4NhZ5tlrZnT4gVYsr+cMgeu7/UqWVnTwLLgh
XPR7COjn/Ioc7ekgZl1LrRUbhoa0fTWh/nRwD1w20swdhludJbd4AumgsLWZ
V7AWnzNYDDkjH9MBaZy8JkIahuNXfc7FPaPDZckUShEbFbIJHR1pUXRoG1m+
Y4KfmxFWXpSaNDpUZEmcPUykwfXtLX+YO3B9gbEP3rygA7ewc17xbzpcYpW6
yp9Jh598Ak73uumgo+0+Xl9PB2mi8ehoPx1af0i7z7KNwPQ8vbNlFOfP+dLS
XiPgX7eeE79OB+NWOWMVt1FIcZWzPyozAvdaQ1LlY8bhmkPbvnnZEZg99uWh
649x2HzblZZ+cATclfezLQ+Og7NZ0fUdh0dAsMmerWD/BBzTPq1DQCPgS/vs
ua98ApolTPf+vjQChmYGkqV/GbBYHzrk+HAE7NzVpPfGTgNp0+9bq49GgMns
xFeVimko1xWbfhw0AlQntscPGNPwvDnt39unI8D1L6qiRWIGZNpr+Jsicfmj
G0EyrjNg2sN8Zl/aCCzbVZukSM5C9ci9z4PtI7CU8RM2hc9BNJup64Vdo8Ae
8SE04vMi8A3kfWCpHIUirb72bOtVCOPy9v5WPQrp4dUyLwJWgfOYptHdulHo
+DVb7fBhFVii2zd3No+CSvo9femBVZgzmHZP7RmF7bYlhvaX1qC1aq+e/vQo
eA+vBQidXIdnGW/+xYuMAakweEGOiwmxez80POo0BqXakzbOjcwod5bxp9Rl
DFquP5Rf7mZGVtZG7067jcGJUo4qZxozqtQ7OH7xwRh8F3u6fm6dGQXs7Pe1
DxyDcn4O35cH8Xm+9sjnxJgxuP4P5E4+Z0EsfDPM3OVjYHxo1adVixV9fWz8
KaJyDJ7WGxdxXWJFlqvVuqI1Y+Cf/LFe3ZwVldPiX+9tHAOvhjcaPm6syL9A
58DJzjGoclB+dv8DK2I2/WTkPj4GvMxz5zVXWBFTqmnWEO84cKX4Woi8YUPV
jC77dwLjYD7KqpibzIaeyRvIXRcaB7axeAxls6FtBSczfouPw94DlIIDVWxI
rmbv59q94/CrTI7HYooNXafNfcw8Pg56orl+e46zo0LJx289b4/DzRAnUfUO
duRzk8lUxW4c9mWejhIisSPNVA/xBYdxYLkvqUWnsqNW+btxdvfGofeB2B2j
JXaET7Sx5n7jsDJmqxktxIEETUWjTkeNQ9iCZ8HTaxzIOTYrlLd8HHipXiGO
vzjQt9XYx+WV4/j50Ljk3ceBVk2DHjrXjIN4U9WYzxAHeixlcq+9cRym2CJ8
jGc4UFw6p8nLrnF4UEPR8dtEQFUlN2V5J8dB+dLWr75AQJySBtLl0+OQ5las
VXeKgPQfqe1wnhuHGQ7/MQ5dAuo9w8ffvjwOSQMOFqZGBDTVWvbvBcsErPgf
5fF1JCChYdEGHqEJ8L8QrBH2loBMThGqfopMwIHU3USxJAL68GmuxEl8Aord
bS6+TSUg2bt1X9t2TkCvX/Bzv1wCOrHoFvviwAQ49T98/b2OgG4T2m15Tk7A
+2NHFETmCOjH/mCMx34CeCQUPT6oYkj517aml44TwOv/5EXwcTxkXp9e8LtM
gLAah89NDQx9aKoWEXKfgPT9QyOs2hgKdmA/IOE/AcklWGyHEYYu5PgbHIia
gBKHx4kVrhhqMOYVzIqegDqvzx+E3TGkyfahV/7NBGTX17dYP8CQyqWfN5QS
JiBU52Mt/SGGxJY37h1Lw/UVyf70DsPQiKp3rFbJBDwbU53e9BFD5sNcZg1l
E2BkKMTTlYKh3qdxUucqJsCjKz4t5jOGGknF6fq1EyCyoWfI/gVDX33+llxp
n4A1AmXCrRhDXuX3h2/SJ+B35P2G6mYMLd4mpIyMTsDH9A3dTW0Ysud7fdd2
YgKkOGWCz3RgyMIqf/HuzARY6PWofurC0GmORYLr3wl4dGHTH1YKhni0nWX9
uRnwZ7Kl8fA0hhJ+btmkysOAm6SXguKzGJI/mjE2y8eAW9Ziw3/nMHR+7+hH
C2EGWLke44ldwtATDlPJE7sYEJAlyW+zhiFhn38bK9IM6Hp4o4ZlA0Mpi9ED
2fsY8NKRxBfJREQ11I43Ow4yIGGiJjCelYjYKrQEmVQZUB0voXicSESvVEcW
vqkx4M3GU55wTiLa+TWgwwEY8E9LN6lzExGh96XPyZoMkAq/OafFTUQtQiYO
r88w4JMF5NzbQkSmz/+e09NmQE2PvWL0ViLy9j28qVSPAX5XHzz4yUtEXMvt
Y24XGCB5dvBMLR8Rxdk71spdYoBATiapip+Iikw+B769xoDYJ+o2yYJEpPX7
rNVlEwaE3H9u/ngbEXXr0jW4zRkgSLPbZy5EREvHJJl8bjLgksXrg0vCRBSY
UzJw+BYDHpR7O+SIEBH//us/Jm8zwP+MVMD/+9CkD3/eJNsxILHrsf3/+1JF
kdeeJo4MEHd4dvD/fWr5C6WrAi44i83X6IoT0QViu0rTPfxc+Wt65P/9q+MK
16LaAwZUjqsk/r+v3XBI61jwZkC6nv7b//e5YSNnvqb7MeDsq0rn//e94ma0
51aPGFB66e+O//fB6Z3+DmJBDOBc1037f1987PyO87+CGbAlfP/W//fJ9VU/
ZJ89ZcBCHu3i//vma+rGmzTDGMDc8dnt/330WO7K2L/nDOhkDvf4f1/tLhtV
m/OKARM7Hpqk4YwlKX66E8UA025DqUacX4u2BUrF4PoTfjT8v1+XfmVv1feG
AVur9K4s4JzHyXXy1VsGGNn7Vf+/X9f0T5XUec+AxoRk4RWcO/6cZmJNwvNB
Y0mfgbOlE3Wg6CMD+sSf3O3CeXb04Q/nVAY8Grp6txBnP3OJOJl0BnzeA/ov
cd7a/d1zKBOP992FbZY4v9O7djX2CwNOCwpU7MVZrmZZ5UIuA066iBvQ8e8v
OR4pyPmNAY/zbv+MxflcvsLiz0IGvJ5T5TuNM+lAa4fHdwYc2pFxahT377sJ
Hm/WUjwf/0zdC8bZMvWidOhP3H4VevYOnKVtIlsEKxnApfxyMRuP19iuLveE
agaYvOnVOIpz+pDQTpk6BjgYhb8u/D++CdcachoYcP7DrblDOC+JDojXtDJA
hT6Xy4nnR1GPRI1+BwPk7eOF7+D55P3awrH3NwNWXpj5VOD5xsZHK5/sxesp
8/SJ63g+8nAybPhp+PdffxR+AM/nXzUHeN6OMAAz/dJ+ToCIogMdivaMM4BH
2GizNZ7/25nnuY5NM6Cq3NzKB68X2ZU/Xyz+4PX93tPlPF5v03nHjCf+MaD2
64FzcpuJ6KuLN9u9dQa4vo/j5eAioqPTTFeCWSfB4Dj/1Xi8nk/TCauZmyfB
l0ck9jYbERGTtJKPbJ2EiKn110S8/hstnp4v550E1wwuxwRmIrrYz/3+97ZJ
SGIST8pbx/vlL4HTq5KTkGl4psl7BUO7Xl6ZDtw1CZfOnTvfh/efEb2Y6C17
JsHLkPul/CLe/xrEJnbKToJTtI5hOd6/HpRLPddSnoSte3Ju+I9j6LjfzaMd
RyaBKlcXHz+KIZbjn4auH5sEy8iRh9l0/DwolDnsiCbhUOg+9R9DGIrKPtQb
pT0J21h0Dzj34ufJW9hFNZ2EkdMFgmdqMTTvOU+wsJgESanVwpEq/Py58mmi
/8YkKDfyS/tVYKh4y5acrluTcCBqi1Z0CYaq/QZONDhPAsPx65mbuRjqs/Q2
+xo0Ce5MBH37txjaDodOHgyZBNMLn3xC3uDfL0qTTn86CV2XKXJx0Riid+hO
JT+fhN/dsmwpLzE0oynmHRM7CcZUe+6rQRji2FMc65c5CdZhhVVidzGkxerg
s5Y9CQ73QrHMWxh6Rt5p6ZkzCdMvMgKUb+L9P/rJPteCSVD9o8h/wBQ/v4jX
CmzKJ+GLC8tqlh6GFCZWfp/vxPVxaW3FDmHIJEuZR3x9Eqpm4i50Mwgo/9oK
dyvTFDhYNKwOjhAQN0cR1yPWKWg4S35AGSKgsuvq2Bg2BarkPz3F3QS0k1Nz
I5dvCnw081QnKgiIbmUwqbsPf56EeeyOJiB7kbt1XoZT8M3UVq9JhYCqqw7U
HLwyBWdKvXssDhGQhNN05dDVKUi/b6U8LkNArTXOZWfNpuC9kYBWpzgBKdzz
+MZ/ewrYEpvnRVgJaLklKDnddwr2224212vgQH6B7x+S0qbgmLDDtwMXONDm
+wRti4wpMJsbpedrc6DYW3a89Kwp+HWwIFPpJAfK0TmaOJ2LyysUzm9W4kB0
nrZKltIpYOxtblQW4EA6b5mwfR1T8PsUe4HJb3Yk+M0s7N6/KWD/htKouuwo
MaXq8t+1KfAQ2Nq+cpIdycful/BlmoZDl5EU8zF2pOW9nBXMPg30mFfqU3vZ
kdfJ8LY3W6ah9GySmiobOxpqKeEvl5qGbBGFIzEFbChjVPwNt+40VJ3o7PAU
YkPB8YHmA+enYZ+/98IAFxuyujC5O9MAlx9vi1ViZkNi379nn7syDdskCTG5
Y6zoSbhx9TPLaXDwKjXEiljRLeWYWU6PaTi2VDRIMGJFOwP4zxI+TsOmsYmO
6hAWtH7Ea3NXyjSkh3255uLFgnomh9s/fp4GxX5XDT4HFvT8So7J6S/TcEBz
9sUBQxa0IXPBJfD7NOjEXO5uFmdBpLbwt6wd0zAt836hN5MZFQQt3+j4PQ31
okaBdQnMKOKY2b7E7mlgBH3dm/GSGekky+VqDExDA9eqtKEbMypyb6p7ODYN
Z/xz43apM6OoA4fDDfB707+H6VdL5ZiR01CcoeQ0/nyLqLL+Dma0V/cuuWxh
GhxlQ/oNWZkRG/OvpOfL+D2rb2i2doEJUfKO3Tb/O/3//20VKNKZ0PfbiQfl
16ZBsmL9cmQXE3otsWlxY2MaclmEFyZrmdB//zNHBQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ByMpTK8=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.835042709072136*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.442, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.001, 1, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$113255$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$113255$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.001, 1, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {290., 297.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.835042709413729*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Adiabatic Rapid Passage (ARP)", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835036115299939*^9, 3.835036136362033*^9}, {3.835040972288479*^9, 
  3.835040974316441*^9}}],

Cell["\<\
By sweeping the frequency of the laser or microwaves through the qubit \
resonance, we can drive a transition adiabatically. This occurs when the \
detuning at the beginning and end of the sweep is much greater than the Rabi \
frequency, so essentially no population transfer occurs at those times. The \
population is transferred rapidly as the detuning goes through zero. Note the \
small oscillations at the tails of the sweep: these are at the frequency of \
the detuning we are in a frame rotating with the qubit. \
\>", "Text",
 CellChangeTimes->{{3.8350361386073995`*^9, 3.835036197901415*^9}, {
  3.8350405830435624`*^9, 3.83504077964559*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", 
      " ", "approximation", " ", 
      RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", 
     RowBox[{"10", "\[CapitalOmega]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"t", "/", 
         RowBox[{"(", 
          RowBox[{"tmax", "/", "2"}], ")"}]}]}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", "5"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
   3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
   3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
   3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
   3.835039939334324*^9, 3.8350399397512007`*^9}, {3.8350416380711875`*^9, 
   3.8350416595123973`*^9}, {3.8350417073066025`*^9, 3.8350417081577168`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "Rabi", " ", "frequency", " ", "and", " ", 
     "detuning"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<|\[CapitalOmega]|\>\"", ",", "\"\<\[CapitalDelta]\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", "\[CapitalOmega]", "]"}], ",", "\[CapitalDelta]"}],
       "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Frequency [arb.]\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Qubit addressing parameters\>\""}]}], "]"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.01", ",", "tmax", ",", "0.001"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}, {3.8350397592112246`*^9, 
   3.835039761382015*^9}, {3.835040460604765*^9, 3.8350404696549473`*^9}, 
   3.8350405102213683`*^9, 3.8350415787140055`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.015625`"}],
  SequenceForm["Time to run sim: ", 0.015625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350394989227295`*^9, 
   3.835039559401267*^9, {3.8350395984673443`*^9, 3.835039608307582*^9}, {
   3.8350396611331615`*^9, 3.835039686522111*^9}, 3.8350397628761225`*^9, {
   3.8350398379321194`*^9, 3.835039859700087*^9}, 3.8350399416329975`*^9, 
   3.8350404703716164`*^9, 3.8350405110810575`*^9, {3.8350415814387646`*^9, 
   3.8350416727697945`*^9}, 3.8350417101078377`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdpOQtcl5LeipAP77Ufqb+VX2sP4C0/N
L3wtvxPOX7e+83aO3ik4P93+4sw3RZfh/Lynmo+3rLsJ53Mptqjft3gA5/cJ
nNZamPAYzk+6HbKf+cwzOL/waEtSvvorOH9jAU+whOdbhHuqs18ZhH+A85vm
/wn88uYjnM9w+YHDnqrPcL5aSVpFiNZXOP/J1+lh3Hu/wfleT7NqJxX+gPP9
nkzQlpP7Bee/OpzUcGLtbzhfT/CarHP8X4T/7L8m3vn8D853fxv1XSmUwQHG
v3EohTFKhxHO39pxJE7hK4Kfxlr64Nw5Jjg/uah6K88sZjhfP137nE8iC5x/
XkiHu9SSFc7fva5ptg4zG5xfzagVcOYugs91p8ojbws7nP90meKU+TUccP4U
DUmWnaGccP6EWWnHExW44PyoKbHneJ4j+D9clv6cv48bzn/81KniUDsPnL/I
1lD6bCIvnL+2tVQwXZcPzm8PTfZm/orgm95ZuLL9LD+cP0Nz9tqz3gJwfv2B
3hneOxF8X+nQpadUBOF8x7zj0YKdCP58mSSVM18RfJXDy6f5RQsh/Kd7SOvS
PgQ/7TPLxZNawnB+0sZPCp39CP6ESzy9R44j+Ps+q/38/x/BBwDRHzU7
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVxX0803kcAHCyqBnh57pUtnGyQuhBtYrvx0OEaZjtV3oyNPJQ0fTgIaEp
VzRRiZyT4tWrQw9TL7n4pgeXGNKpkLyw81CKWEzi7v54v94mgQd9981RU1Pz
+s//558I1FwVHOcQQYnSjQ3jwtNWJodk7kCG6ZGR3GAuzD6vTmEy96NHP4U1
mO3hQj5OZ8xlHkc6rKBfm3y4EGEfEznBSEPl7nzNZWwutH4PzR5hXEFjGeyZ
Ji0uaHX0sIYZN9Fxozmfl93YBoX1BVEfGZUo1TqrseWDF5SVp3VEWNejt/m+
zhNrOBCCWq58im5F4j4e8+h1DzigWNErK3uHePEVKxqXugPV5BTrw4ZuFL5D
Njhy2A0y9F5aFAb0ogYdpd7B/i0Q2OFXo9HwDxJptX5+yHaBqGenAg+yhpCL
r76qM8sJ7hyi8Ra5D6MwcWbYDqojFMaFD9mSI0j6YPcytxoHSC6Y9hn/NIq6
1i51kV7bBGqt3fBn7Biq8MurklzcAOZi0TE/CyWamfH7faGrHfQpLwu0H31D
78gLvF02q8FDEZZwIWoScY4YDsT+sRK29Ukt6fQp9DVJ0n7RiAVDTwJP/lX6
HT0a+rF/8SQTrPXbjJ33/kBvmttKbhUZAhUphZ1jM2iWlhT+8bAauA37T5jy
1YATWmbsoRiveVsbrO5vpQ7nbC8KByMNcMWZp3uYSnV4SLutXlpDx6K5Md1y
+RzI3HvoSJKOOQ6Kjqug5WpAwU71plp3K2wTYinnCCngnTavir9mFW4ysNKO
Yc+FgHZ+ofWptbiqLDnPSkMT3sczKn2vrsdx6hbeDe81YSC7LKjj20ZM7Yzd
ekCmBZHUhIoHjg5YUWySXRA/D8oHgq5+uQk4e7kRpZI/H0Y0I0rs/JywNFdU
J2RSYdBrtadJjzP2z94tp/VT4apzTu260C140uWGqqBaG34eD0g5scAN9yqc
jtWepoFnY39neO5WfM1+1ZJGoQ64ClsSz7p64FJJjH7ISl2YMD5e5d3miU/z
gzw1lLogSsP1aI8XtussvHm6cQHklYf9ItTi4pwVeaWNnnqwJXE/1dDDGyfi
9BzPSj1gUJpK9Ex8sNcS/o16M30QBFBsTMd9sOOBup36afow0JyTrFnpiwuW
Bpo1KPWh67euqZQMHjZ7UnJp204DWJ2Ugl7z/bB0Za3Fq2oD6N04Gck24mPR
GKXlhQUBEz70x+uH+Tjwzldm2nkCQhKKuufdE+CIZN60RyYB98xDLOPvC3AM
T/aGlkXATJPFkS+VAnxGGZMhvUTAJdO72m1YgMvYqu+X8wl4VofXFckFWPV4
tq34FgFMg65z9kMCLH1FS39aR0B78SJ2tAmJc4siQ1NfEGDu3ZmiMCNxkVju
vPUlAVGqAvn25SS+v1A69VJOwHwOKxjZkLjTnwht/ZuA9aN252n2JGb1Gjn3
9BKQtYmnKN5OYltZLP26goCuvoW2i3eReKOkQ7WvnwDLjPbY9L0k5rDybw8O
EYC7hXpiEYmjw5n00VECvkgObXIUkzh+c5Lq7hgBm23WpsqOklii0/NarCQg
9e1EMyuOxDnlRWcnJwmgWyaKdJNJfO0kJeThFAHhr53uJElIfMtnn1P8NAEV
CZrT42dILDN9buwwQ4Aaq9419ByJq8fMVbOzBHg1p2d2nCfxv7SZP1Q=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Frequency [arb.]\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit addressing parameters\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"|\[CapitalOmega]|\"", "\"\[CapitalDelta]\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
tATk34RdmDGjYMVs6uPm3mK4cyKYjWJJwSyn9boxS0Wg9DAgbJcVBckDafbk
zUXQqu67wciWgvPmOr4+0oXQu9tFItOZgkNX1mWX7skHrWK7mk43CtruMZs9
L5kHDwTPq8x4UpARMpazwMOqP/mk3i4/Cl5u76ctDWbB23dqPp2hFNTq2KmZ
MpcIalkPc6XCKfjNO9Ji3814yDY59SA2ioIWY0sl3YdiwWzQTeRcAgUPm5sP
6k2HQ0vQH+3BZApav7AYbh4LBX7VG9570ilowl8+EMkIAr+fG3LTslj5T2wo
S7jB+n+pyr7PnsfixxnfH1OpvrDfXvqnQyEFb90sgT9dnpAs2iA8XELB1AD1
4WQ5F/g5/p+2yi0KBofPrCMcsQbjxEcX8qsouEpOr7GtPwO3dU/nUOoo+Ckx
8KL7F33YQJwZ9LxDQa929s30PDXw6HRfGm9i3ae55raXiywM+f0V0miloPz9
c7xrXvPD7r1hR291UPD1MQVPnVviEDO/8cLGHgqO5Ambn4o8AF+KcrIv9VPQ
t1HUOpfvGByz2Dn4bpCCP8XiVFPen4RbfI0/dB6x+C9cQLX/dA4ow+pC9UMU
LDC7In3KyhEcIh9rCT5n8dtxsLppuwcMaJp6hbykoHNX1faP/T4gyTabNT9O
wcbU/TyBtAC43ugxYPyagsMuzy4k/rgKmtLhW8VnKKjoNNsimBoGBe82aUV/
oGBLz/Pz3h1RwJGV6/nzMwXTl+nbnMNvQiez6V7fdwrmJCk7TW5IBOFBje+y
v1h6o08IN9gnQ2DQE8HkFQpGzjX/edeTCqo/Zz1s11Ix0KblZsbFLMio8sx8
zEnFXVNB5o7T2bBqx3ZvH5GKkS8PXHPgzIWmcR5BIoOKuw3eGWdI5QNvYt5h
t/VUfC/0XSdAqgB8dGU9Xm6iogZYbJLfUggvCHczDvJRUaRuMXrwdyEodGr2
lwhQ0WAwYiSkrwgS/IYWmcJUrI/9yNsSUAzf5c0EfMWo6C1P1/0hXAKG83OH
psSpyJ9vwzlVzuqvRV7uWjuoeHeoO9lkaykwLdZk1MhQ8crUrUp3n1Jw5Yvs
45OjYmiLXrDlnVJ49HTz4tW9VOSYyE8pHmP168h8/o/7qKh456zc9HQpRGru
OmSoQsWPb3RcV4dK4dO/u253gYqUJGENjsJSONp4KF30P9Z9crv5j5iVQqn7
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
V94vss6Guz83/J6bo3io+yHtHMyB/wEj/3OR
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Y30C1VA+tGx0cpLlhfSq7U2XquF/vKxEmw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
FiAKPdkFYpn4/dunm7q2n8b1Ut/QOvyMQNbBz04UBeP76YdeCcL7C517KDn/
vCjIiOUd9cTnKwjNeuobLgpiztqHi4oJtPdCyu7OS/h85tsarYsIxIq48ntl
lChsnb+jyzKfQKWXz6fEx4iCDTumMzeLQO5X/A1/xonC64PRvEM3CSQZe/id
bSKu/9F49YhkAtVe2xf0JFkUnHKfnhePI5Bf4g65RWmisNbSMlYskkDtqWud
3mSKwrw03XtrThLobLqWsEG2KDQtvNIccpRAmreUbifnioLzR6fLG10JFJnF
/LynSBS4uXrvN1ni+uXMhZU/FoX7YjLeVzYSaDTvu4pMiSikuweVu6wm0Kai
t+4Dz0ShP+TUjToZAs2V507sbxGFyinZRdRhASp4lh71og3v73qOadojQA5V
cZqKnaJwWG+zONQLUEndqWNDfaLQ/miH4ol7AuTbYT7lOioKSyqDLt47JEAj
I+N/PETEgMidEdcamUAJX96nNlHEYIkpK1C5ZwIZC16v02CIgTjN8hfUTaCb
k2XBAp4YxH4obGFmT6A9/yJFjsmKwZ+9BT/zPCcQQ+hsZpuCGOzxtBDKcJxA
T4X9Nmkvxd+37T77zWoCLaQ5XJhcLgazNVYxDXoTqIZhtWyHlhg8WK475aA+
gXzYxg0PdcSg8l3uLnfZCfRKXIN5fA0+T/aRr/+oE1h/joylGIqBdZKh3IbZ
cVRQV1BXhcTgjtJrBaEf40hW8eudMSMxiKw7fBxNjKPo09qhPBMxCHgWQBP5
NI5mu32cV5uJgS5dcHFb/zg6ov0IHC3EINk3PHNp1zjqj/whG2YpBhdbhOmX
W8eRxbDev1xrMeAf2O4cVj+OyiHgbYeNGLTqbppcUD2ONFJKSmbsxCD4gJrj
uspxlPrjd6K8gxgkoMVoXuk4YloZnjDdJwbhC/U1DxSPo8CcMzu9nMXgmc6N
GteH4+iL6DOdeFd8vuZBX2bhOLLfJ8QvdxeDrRfl39rcH0eNJRvIwcNioPUj
fadJwTgyWHC+hX5UDAazMg0G8sdRjldN7gofMVi6ymdEFj+XbhCL2HVcDH7n
5tyn4/cvKZm6BwWIwfqVDmbpD8bR9JmLJndOiYHMu8rS90XjyL23Qbk5SAzc
rk4JNT0eR706TJHvIWIwvlZOyqlkHG2OsvgoFSYG7U37hW5VjKOnI1HP4KIY
BKW2+UVVjSNVo1c3DkaKAf2k9gZFXJ+EVN7p6Gh8f1ryD0dcP8ov7JOu4vtM
yisa4fqe2B6n339NDKze9ds24voP53ZKiFwXA5szs4t+4v683L/rtVWaGOQQ
g7Wav8bRyrLrhf43xWBG6/HsqnkTKHNh35W0TDG4W93yp4s5gUIbHSwmcvD5
fCO8OxUn0JRymvr8AjGgaThkLNeaQAeC39MMCsXg9J7ArWzDCWS00vnlhSdi
MLSq8ca+XROoKPr27YJSMegJlr9Q5zqBFMc+hXRViIG3xOaJLL8JNC/t4Hql
GjH49nSjS0XcBHpOPfKksg3Xlx7UdLMb65NzQfzn12Kw7GTmtO7oBMooJ31Z
PWLQ/LUqnfd7AgV7+6ywfycGTkJF26NlBWj9W/97P8YwXkz1Uvsw/soKzqVo
iFBA4DcotFeEQBQLG+lECgU6KOd9OiUJtH1MNWkegwJdcfMjpTQINKLUktDN
o8DqpTkWwzsIND9JMvasLAXG3tLszqUTyFHvC29cgQKTUg9/OxYS6N7r8is2
Sykwr1zy8DPMt4jjHKWuQQFrLfV9X4YIFJG7khWvRYEDQS/WZn4nUNdmauSc
DgUsVxQqvRAm0eHzeRc71+B1EHGFKkeiYvlgKlpHgZyns+8UNUg0r3J7+D2g
ANWkTjhMn0QWe5TFFhhToG2Hte4yYxIlTv88H2RKgc85yl8oliQajG8QHttC
AZUF1TcX7ybRf7qpITu2UeBG5Lf3+51JFNDmJVS5nQLrW/+T6vAgUfWRDcHL
bCiQ6zB567APiTjMBbOxdhTQqjd/q3aSRLuzh0//20OBM1dM5OnBJMrcVPLn
4D4KiLq0rKGEkogcjAzscKbAC8f5u+UuksjgrOOMoRsFwpq6/1hHkihMRjsg
6xAFlH52padHkaitVOQX/wgF7pewukWukGixXffx08coYPos/EAwXrv9yJ4a
9sX1+0SIzsfrwthTvtv9KXDnzMSZZ/j9v1rbJssCKaC9wzw2DH/ftEXeWyWI
Alf0iCg3vH+sx3cyJgSf/6+hkSs+3ztqrdefUApknht4GYrPv+zOdYHrRQqE
ZJ/Uqsf38zU67NkWSQEJBZf7Or4kqny/btzgCgXEbDeU1x8mEf0Mz+NOLAVa
33fnXTlAop3SQ6PcBArYt5n1X7YnUfqTxwcDkyhQkRx+96UVib7svDj8KZUC
8UvmUcCERKsm7V0tMyhgZ2W/UmQtiZo0hA4oZ1HAzdvqaIgiiSQaOz5G51DA
S9071XwhiZwO3tk/k0+BEnOdr2eoJPp1c4tj6yN8Pl05TfSFQEqS8bsDqihw
/IN+KwYxOjVP3ar5HQX+VW9xLsD6NWzM7FX5SIFFQhNPFVkEsro4sS/kEwWS
RY9/y/stQMrc+0f1xikQc1/u6YpeAYq2jvkVQ1BgPDhRfkOdAE3HewePf6PA
mhrat2vFAtS8ZOWVjGkKPNyU/kMnQYD09i+U/POHAuX2JmvjwgUo4/bPNJs5
CtwlHDKd/QXouHpJAYNCBaFrzZn+9gL04UiyniudCrYjS661WwjQlsJTlc9Y
VGDfWN1QhQRIVn99q998KiwRrc2IVhWgi6fkbF9JUEHzMHc2cIkATVYKDahJ
U6EjVtpDQRzrr/Cga6gMFSTcQe4STYDqNlULBuSpsLnl1+aSuQmkcynz+Bpl
KrgVUDglvyZQanPYvzhVKogfoLyI/jqBKLyDYYQ6FaTvLoxDXybQsR2b2Waa
VEj06clo+zSB+hLU4m9rU6H76zVh0w9Yn/sYMrMrqXDROPDL3f4JVCAzkWmn
TwX7IKU1399MICmnFo2Ha6nQuffoI81ezJeZBY/YiApJaldlHbC+EyNXDN2N
qCBlEL/1DF7bLfeuqdpEheBFLRmx+PdVXtYWMmb4vnI7bVP7JpBGkW6nvwUV
TE943kt+h/3CjwUOHZZUOL/5JHH54wQSWvNzSGMHFb5uODtxbHgCHT7dc/iC
LRUCqzdtNJ6YQN3Pnn7/uJsKfPPQGNHvEwhEkk8Z7qUCx8UruQDzZY7JKZHE
/VSYmGi8tk5EgBZEOER+O0CF9V32F/JYAhTUsm6+xUEq+HleDPgpIUCjPLmU
ux5U2B7XUrBQUYAqEj/m7PGmwpuJtXXFBgK07G2VTrEf7t/b2ja1zQIUK5tZ
yguggthKf2KHrQC53XFrfBlEBdnGK4VZfgLUNmpqLX+OCtm7olFlqAAZaKj1
BYbh/X12/3WJFyDuw/ExrctU2NJisVrvqQA9fX6MnpxEhXMjYt8yhAnE6A/c
7PUI7xeTl7QH87Ge/z32lSdU+PK2OPL/fOwk3ttxv5QKBx817NfAfvjp5lV7
vz2ngo5x5oO/nwn0aeiAongNFWJ+m4aO/cT+Pjh2RKeOCg+cplVOYLy5PSa9
/VqoILxIDjapYj6xkl0d30YFQeXGTF89ElWMW/x9/JoKdavW/JLaRKIFijnh
v95QwVqydC57P4lQRa/5ondUOHt6u+zZIyTysKPy13yggu6tM2vzMN+8iHZJ
CRymQsioZ98Q5rcJtbj9KWNUiP0O8h+TSLTo5Yul5RNUeDyQMk/yNok27v/6
pZ+kYn08tjU4l0Ref2Qf/JukgnIJ12jBQxIlJ2w9LvuTCin0tafaS0j0Uvu0
AZrBeLgW0lv0jERfm3Pm9v2lwhBYGDyqIdES9zc1Z+fweaaPqHXUk2izCC3i
pjANwvoPpzGaMR+m6VlWidFget/yqj2tJEpb47pgiEaDR0/sXlS/IlFjZ9wb
ERYNltEL8ze0kejn0ao0ZS4NDoap/evCzxWY3w5sEqfBjMtJ4xD8vsVdOTW3
hTSYF7VF0Rh/P2DDNiJ8EQ3a5ztsl2/AetJ/+mHWYho43VvUtOgliV755wbU
y9LgaterpBXPSfRbvG/dmAINdi16+dajlEQqBTQRxlIa5L0tmWzC999utrpe
fRkN8n2vmOzOI9HpT65R5stpcL8lz2RRJomyg69Ze2ri8z3uO89JIdFr6WrJ
KG0aGJxX/Wh0lUSzj7/156+kQf2TE2IV4SRS3y5/q3U1Pv+kUHLoKRKdvXBG
g7eeBsbm92qWYP7PU8z7tmIDDTTErrGFbEnUU9FXvN0Y32+2cnznZhJpTq3e
ELeFBpcK9imeXk4i+ytulEdb8e+nKmJclmA9VI9v6rSigavvjvIxFon690/a
SOyiAWyvsp6ZwH6hJc8j6QBe57t+CMf8Xuz+VqvUjQYLxphGuUkE+ijC+NF3
iAaqeu3b2y4SSN/gYPCSYzSg2U99sjpIoM93Fa6ln6ZBhPyw33UVAk2EfpwR
OUsD26A1FZ8XEmjS+eY+9/M0yMzx+Z0vhvOenMJy7QganMl95TCO8w7l34eY
+CgaeEXcWhuE9YH9NuPnTAwN1MRbj9U2CpB0onxVVSINUvLl5ucWCpDC8Q+q
qik02HarJX3/XcwHOzKiItNooNfTcexvigBpau//Tt6kwVQCV+NSrACt4srv
3nkHn5/W/oEXIUCGgveVT7NpMKjz90XKOQEyakpXlsmjQV+W4R3t0wJkdm9f
RMh9GgyUHZPoOyFAVhfkvn4uokHB29/JyT4CtMv1vc2WYhrwHpb0+R8VIMeN
6WUFJTR4P7rY5cQRAXJR2KcwvwLPTwVPNMlTgA7PyV7wf06DN0kacx/w2ufd
wMTbahoorTa7ZOklQAFladZQRwNvxr+MT8cEKDjJ8WlmIw00t51dmob5K9xf
VpbeSoMMDaLy5EkBirIZOH+kHfe3wcDPL1iArummjbV30sDKZJS8iPUxme9o
qddLg5Gp19sKowXoJinzOPkt7ofStqMjiQKU3fJOem6ABg/+k16sdAvnzdwb
Zw8M0kCHps7dky9A5QdlLDTGcD/FH4sl1QpQ9aZ3hTETNGjwUZm60ClAjUo3
JH+Q+LxPjx80GRKgnvdLhip+0mCzqXfsH8yXk7uWBFqK0uErU18k1YxAM6v6
3z+k0iFKRqzJxQH3f0HqpkVMvD5/aOAMztPstsX8j3w6UA3C7HclEGjZ5sXZ
PnJ0SLjcJ0j8RCAtlbfsHkU6kKM7V3f/wvwrmuK7VoUOS6/fu93CwHz1XBqJ
/keHh0Hj0je0SLQlrS/TfQUdRi+q3LbaQCKr08mMFl06pE6/5PlZk8hRX7o7
3oAOsO2sWx32n64SfWt/r6MDJf+FVXcIiTynkm46bqDDvWNp/gtiSOTTsZta
bUyHgz3zAn1vkOjkA6kjqpvpYPXPZM3nexiv0W86Is3pkLmu8dDexyQK90zS
/7qNDnvP619ow3wYtWV32k5rOrzK6DLVxfxzbZmUaIkNHVY+Cj90up1EDo4q
WUN2dHA5GbhQt5dEytd0t3Ac6CAdfzN7+B3m6wYQ6O+jw6+OG1qxgyR6NLc1
5oAzHU7+KJrTHsb8s2qPbrQrHZDZ4lNVoyQyPuze/dSdDjYrti3d8IVErJvH
Tw4dpsMuHU/3fLzu7D63hHOUDnID695R8DqVFfNM34cOT6L+K9qK33cxuuF8
4DgdOq48MQv9TCKNgByx6AA6ZIwYRuZ/JNFU/pPsp6foYHD0QXxzP4nKh2rM
h4LosPz2iZDhbhKFSnUQ7HN0SPyV5DcP87WF5fur+mF0eLB96rYS5v/5YRMr
D1ykQ7v7ibs7cX36Smd6oiLpULdQ7OYNXL9bXymnnkbTYa5Xs5WK9UfHQeEF
O54OsxlDDofiMD9f1XTRv47nI9nIOwDzZ1XdWuqBFDowExmZ3QEksta13fr0
Ju5/p5bw0z0kkj504OtgJh1CGja277LAeSXtWBw7mw4LnciLZw1xfxmRb5wL
6NDZ3dSctxjr78dnruwyOlhIJusZ9RDIXrKFpl9Jh4+1M/XTLwmkuLUv1/kF
HXaOXSh59ohARU+nvj2po8O7rgyJl7EECiTmxQ820iFGWs9G5RyBjJS5+uxW
3I+3DY/eeROo44pakHMnHbK+h/ZctSZQ8ks9hageXG+2Obq/kUDOfzbWPOmj
g6z4CzmXVQRS195+cPAdHQ5/earzTBXjy82Rwf6I8fWXz30lTaDS1MP5qz/R
wSlSW3CTQ6BzHQFWziN0uDIv7Kgxzp9baOHfL3+hQ3KRV2vVtADx18clPBHQ
ITBqJUONFKBe34w1g1/pMLlXc18I5uOMe/n9rCk67KDc1OoaECD396XBq3/R
gT8z+OA/zM8rFtYrOv+mA2EI62M7sH/f0vXy8j86tAkV8uitAvT87KD7EyEG
2HeP6F/H/H2xmGQOijDgkrDWu431mE8n/hawqAzYkPClioP9/yJFhvVqBgMu
CxGRfzDffNgl+cOJzYB1QdumGfj32VHK1y/zGNDu+GqFIf7esWrttU/mM4A+
HbkuukWA9GfWD3yUYICGvoLLbLsACWlZhLCkGTCiLVC/2CNA9S67lVfLMGD0
lvS0Cr5PTLJbnZM8A1bM68zo/CxA/ifO+Z5WYkBddGydPYH53DpNLlGFAYSC
xnDXLwHapFnaVKjGgEUK+mrrML9pMLr9mzUYEJY3+TeMjfP68DelES0GrOIy
su9IEej3C3bbPF0GbG28lhaD9bDh5KZlq9cw4Cbll1mcEYEe2Dh1bjdkgBQr
MunKdgJd1z5z1hMxgK1trC7nRCC3sUe9NzcxwHVxs1xJCIGEdytfYlkz4Er3
a5pQHYHGVsIqVRsGfH8b11fdS6A2nsPHDXYMICfVP8bgvJZeH7fG35EBiWuW
nvnLxnyUef/zVScGrFE3FD+B877X2aareS643uZ+9PsrSGSoL/LlowcDXmxK
WiSJ+VFpgVzC3yMMmE++rFLE+Z3x1cBI0psBairk1SxvEvVm+SRb+DPgg/gt
975oEj07H21yMJABG59ZxB1KJdHdfTmTIWcY8O6g63FdzI/HJQe3PDnPAPH+
YdMN2F85fP/3sz0cn0fn4HXPRsxXr6RuT1xiwNtLvq8yXpNoee4qS2oUA+b+
Vl/ofEsi8Qvb/yjEMED0nl3iLOa/GecjWYZxDFi6s+SjxBiJPqy/tGNXAgPK
BNXukgSJ6qTvzHknMSBC9Jr3728kKvj5PPdyKq6/R9rhsikSxXf078pKZ0Ds
t+Msu5+YPwumRapuMUBvW7FlK167RCx40H8Hf29O5YgMXpu7rXD4lc2Ah2eW
T5ng93WMLGjieXj+YlGpBf6+tKz7I437DMh8/KRbW0Cieb/P7zctYoBLkmfR
nxESjXals5wfM+ClyPWZ+5g/XxWWPT39lAGGfPU4mz4SFUf1uCSW4Xo3JyX9
wHpw49B3XlElA/yNdromYb4M3cStaH7BgIR86+PmlSQ6rLD80EgNxlfDS5NF
2I9a/zNZKFzPgJTSocusLOyHHwcdWd3KgCXR0pzMyySiXU2Wsm7H5zF32uoW
hP25Z/FLz04GbKc/14o6SqJKZULmVh8DijY8XmBlhf3jtb2trBEGrF5ZO/oY
z8+Sh4zFh79gfPEnhXT+EOh9+5ODDQIGPN++9L+CUQK5cMXnhU8xoP/x7qXc
GgKpaD7b+ukXA2oNEKFahOfVwjPZ6A8DKDecHbIzCOQVUas7N48JhrZWBRuD
CbTinu/ZvWJMOKPQnhmN/cD3OvmWMhoT9OQlOTf3Yz863CIlzWKC2yqWyP/5
MkDslFsAlwn//XWL8dlEIAPlZQ+7xZmwzUt17+41BPpn1DW3UoIJV3QLzuzS
JNBzp3MWcVJM6N3s0HpaGfPjWa2kb0uYwN+9t6l3MYGM0/s/W8rj/Y+s2R2w
gEDUyks6BUpM6NEZvuGG+bSxXy+YpcqEA0uT2vPpBLr8Z6jJQ50J8Ye0Puyk
EGib9NVFDf8xYVZIcdBJlED8NetdVbWZwPI0uteL+bdz13hh2EomqBEbTEvx
84QT12eHVjOhed4eRSqVQHbxm8yN1jLhWJKOTjmDQIsfTSZmrGdCEf/cbCeX
QAMd6Z9mNzDh46Xhk+YSBMr4ZqG9dxMT3lbusJKQxXrB+32mbDMTHozHXF2O
9UFZK6tRyoIJkcIXooO0CTS8dadkgCXeP680TWgdge55znPptmZC17FSuIX9
mWdkwYOVtkyQqIj/bbWLQJo5e/7F7mZCyH5G4owr1reRxwmW+3F9BjbKDIUR
qNzZo6H+CBPsWIMOgS0ECgqRlFD1ZsKmK1a/3D4QaENGjXOYHxNiu080h30n
UO072b8bTjFBtOtH9KgUidrsXmuWXWRC3IkjI8ouWG/9z56SusyEZfPl7l86
TiKbhP/q/a8w4Vaz08oNWN8XPe5b0B3LhJt8mT06CdgvvL7gtDKBCVxPsVHj
O9i/TK4siE1iQvbH7cFOGA/7+IO/v6YyoVs2bYkv5hvFFVdMLTOYsOBH5DpX
nAc/bTO8ln+bCc/2WWcv7cF8dWTsAzOLCftP+ahmfiDRocsJ/3nkMEH8udq+
duyHNHI3Btbn4+dbV+y7SZKIaPhaq1LIhGFavwH9B4kejN6YH/YI18co7JTQ
DM6zVPP9Q0+Y8MS6MDzkD4n0VKbzNpQxITpdtPDCXxJNG9+ZSa9kwufT5/8T
x+vTZenna14w4epfStS23yQS0klmj9Xg+T8QxN74C+M/+1oiux7Xy2dj6tQk
iahyVxR0mphgq2ud4I75JiL+Uq5tKxOEzkpTs7Af5LBCV51qZ8LZm02FJQO4
vueCnqV3MoGgNDNyu0gkMRNgVtPDBIUmyUMXm3CeP+r7erSPCeFGFHIfrpfM
8JG97AEmRBy9K7bhEfajr529bT8xYW0pg30wCedbs71/AkeYMF4lWt0egevz
fFdY+hd8HtgWE4vzq26+RdLoVyZ81xY6fQT7r2IlUyX2FBPWrZ/99ngLiQyS
N+Rr/2KCIOH0wgdrSGR0Qe9F4D8mKIJZwBJJEtX+W2GeLsSCly02T56LkcjM
b3lXtQgL1NodbgVOEcjKSX6MxWBBg6u/xrUOjK8eaV9tNgta9Y/tXVqF8bRt
4T8bHgvUE/v8tDD/7FvL4KdLsKDqQ74u8xqBBgtFU6qlWKD4yZigh2O9XTan
PLqEBU6s9959AQT6kjZTwJJnwZK2uz9jPDFfLZzS11ZiwU/Z3YMI6/NkJFFl
o8KChMUnudO2BDouPGYRqMaCokXWnQ1bCTQdMNSdpsECX+OflVWYn06T7/ZX
a7HANO31LnI9zj9uvV9GdFiQ4bWywx7zVWh/hx9LjwUqHwgXNvZ7tB0tsyvW
sOBiQVMBR4dAkQ11F20MWfA372bSgRUE4kCVeCBiwb2KpxQuXscWl6emGbFA
Q3H7a3GMd4n/nqhUb2LBUh/HY0d0sb+8XfhgZDMLHFg/ji9ZTSBZ6TwDlgUL
igfPyy02JNDNmLs1KyxZkNlULOOM/Yky9eY2G2sWfLyldXAM80P2mZTekzYs
mJjXXXoH86/GVLxzmh0L1oT8VxmB89wDj5iJqj0sELTc8ow4SKCVHyNOjDiy
wGv7T51rvgR6sitMiOXMArkGzp+Es5ivW4MjVriyYPdGW7PgaAJVGgcusHFn
wR+1PQH6NzBfaB9dlubFgv6eWZuX5di/Zh8qqvLG/VsSWHgI802LrIvhiB8L
Ek0Hf5wdwP1n7rZacYoFUyWXLDPmkWjos1FA1QUWEFdbVz3cjOcrvfWWeiQ+
77XvhifwPGbY2bfERrNA1uxB34sjOA82eSseiGfBqXMd5V4471WE/rNous6C
lIAC1tUMrH/rL/nrprLggmVXfcV9Ep36teBWSjoLTuftuPemAvPRg4xmkdss
WMdcaNCI/cwaD41fh++yoCvvrFgAzkPXlZ4qdN5jQUDZ8oMtmF9+9W+0MMxn
geciwa9i7F9sE16dyHzAgsnCu03K2E88ttxzk/WIBXmo2oSG8b+APtLk94QF
tLk1hrswn/hW+fzsL2XBp/uZNPosiTpOzcpvqmRB38pfc4vmSKS9KsI8/wUL
rpUvWx6Gn8cQC08sfMmCmsWPdm7DfENm3cw4U88Chr/brpPTJNrm9F/T5yYW
uBXvf8j6TqJ86ZIfW1+xoMd+Mn7+BM6PncbyxR0sSA56fSd5CPuPqLYtst0s
kD+UGlH0hkSNJg7Hw9+wwCetSM2rlURqQqPpRD/e73L73OALEl0s8W20/cAC
gxzlu2qYT0w0IuVUR1hg7EgLS4wn0Z3PEluufGHBYKan4u9QEomm3/L7JcDz
fLYnOtMX5zt+aUPdFAsMlRJEd1tif9O0aUprmgVB3G/rc3B+OxvaLnv9Dwvy
F4m3tamRaP2vUV93YTZULPCZryuK/dQDv7Q2MTZ0F1INSr79///3EGrQp7PB
SbHZ9N57nJ/6JWXpPDb05FxVt60gkFTC7c3e89kwXiHPtMvHfsNSy/eNBBso
E0mVFmkE6qGV3dggzYannUKmO2IIpFdlUn9Phg2bdP1jL5wnUPypjkm+Ahte
mThpimI+mVrpKBOozIaHLG7uhyME2kGMmQ6qsqEk7N577f/ra9Zxny3L8e+L
fE8wHLF/cJp3o0iTDR0KYl0BdgQ6Jh1VJ63DBsWpnJ5LOwn06vWiyXOr2CBd
5HpiE8ajZlTmknF9NlyYelNeiPNElMkK0x2GbHir8Ee/DT+fmCvzLkNsuDSc
X5ZuQyDzEtNUpY14vwlDr8X2BMrxeV0bacIGkXO5TQbYb9E19n37bsaGgU6h
3EmMZ/fPXxY7bGXD7pEl53Rxfq1LO2FSY8WGkAkmOX4K+z07YW+NnWzo8pSd
T7lIoDB+dMq1Xfj5BdNwj3gCfWqUqv1rz4aVtTPzZm8T6NY67cUtTmzQIiSD
12K/WLWNcf6PCxtmLyiv9e/E/Lxv6IuaOxt04hNsLD4TSOlcfGm4FxvWIyFv
MxqJMmtndsMpNrS5378phf1qTU/HC68gNjy+u5f20Anr+2iu2o0QNqRka/8e
8cH6xXScmbmA+1Uc1JAVh/PGktVOyyLZcN/107+ft7Df/4/XYBvNhv1WwUEe
hVhv14+tCLuK94vuZY1iv33Hsur6w2tsEDeD3bZYL2v3pwgNJrLBMVVcPB3j
e9jbz52Xwgbh8eKuPIxvyvmtbevT2JA999fuCMa3yjUV/SM32RBFzXFu+4rn
/85cekom7o/+ntd1OF+4FfdSG7PY4K6/Za0Zxnd4XeHR6Rzcz42GzuYYv3d7
I3pUCthgNk/LqQHju3bsALIpZMNx5TLyGV4P/zbMOv+IDeVRNju18O8pLAlu
0RM2GOywyZLG31OVIU98KGVDc16x2QW832bN+gFOJRtcHTyuBuHzuKObJute
sKFx6+IVTHzei1aBBYdr8PeIA2KG+D7ZTjskkuvY8JUNDgr4vvU+GkH1jWx4
IjRX0Yr5bvS82PDPFjxPnPLB3bhey+4+ebyjkw1/fhoWeOD6bn4SI3Ouhw3R
3/JYKrj+7vWHwh70seHvHenD6udJdO/LYhv2R4w3XUPXCNy/xj9T5Ws/sWHQ
eOCY6v//+yarVdljhA2rmqedr6wnkbrW2alaAa6n5vwxs8Uk2gK7HX7gw20z
oCR8pJPIY7tOjdIUG2w/d0q0TuP59v0Ud/Y3G/gnb1gux3m5MbTiT8E/Nlyc
vDrQX4/1Pj7hwDshDlje/I88UEogRtbRJqYoB04fo7x7l0eg5U836xpQOTC+
c3yjK84vFg0KKe4MDpTy2c3z8Xx79v0WTmRzQEP95PRcBM4H4689XvI4wDdq
Dlx/jkB5f/M6vs/nAPHC0P1jIIGa2eEGipIcaDuQE/XLD+NTdt8tK2kO0Nf0
ikQfIxBrhT4jWIYDRW5lrvmYLzQ28H3y5TmgAxrvHbAfsbD+8uatEgdi7qqp
puO154HqDQxVDhRvDS/388L7+6Xe01fnwPMM93N9GK/5Ycf5B//D398+/F/j
Cbyf4d5zYSs4YOBEHZc48389N/5+Wxffz5+e3BBKoMO5Gi5VehyobV6a2BmF
6+e8oOvDGg48qg1Yp3Id10vq76Y5Qw6IPiq+mYvxrNY+VCwDHLC9HB+07QH2
C+jhdXsTDlg1KzyIaCbQ6M9k+kkzDqS462QL3hJIteBcYKIFB1a28g8JTxDo
7hJrh05rDpzIefyhCufNzJmvctv2caD7i438nx0Yzw96YzydOXB94ddX211J
pOT+fF6kKwfWZHc93HqCRLe6rwzVHeZAYq3J6fs4H3yM8t857IV/P7tVrQvn
A/lN+16K+nBA5fPdtfJYf/b/NdFTOs6BdT7DPD+sT+kPNbM2BHCAdvLSvOIW
Eg14SCzaf4oDJgc761t6SSSrOHsxKIgDMtfn3fv/vzu2983nmdQQDjSkip1X
Hcf5I6bFoyyUAyO71wcaY3/eb/r47ZsLeL+nd/sEWL8Xz6VaTEdwIPz8iVJJ
rL/2xaEVEtG4fgzTnhKM1+QjnpqrrnKA7Kj43Yrx3Ke8M33HNQ6czM4N2onX
Uv1reT6JHDDzVJkx/0ciuzilkJhkXF+TgPanOG9c38KcLLjBgf8cjkjdniJR
z7zvzi0ZHPiYJBq6gMB+v6Tv9fhtDmRTvy1ajPOB7bEqY0YWB+5einpb20+i
eNWcx8tycL1X7V6xvINEnQNXVUzzOdAv+Y3mWIv9R8LJRNcHHHj3YDDRvwTn
CVGzk7eKcf2vySY0p2L/Ubbiy/MSDqyVjcnaGEUivu+iPe/LOfA4oW/VojPY
f3wcMVxSzYEf18M6nLH/arv+Kt+glgPRNbuC5XAe4Fo9kd3dwAElXs6jWn0S
RVeGCyW84kBHjtS8gxIkaj3u5f2ogwO8xL3fsnEeYP9nO9jRhfFW2G/k9gPP
e8rSGm4/xsPSlrf93Rhf1uxVmu85EOw9GNqD8c1k/LhjMcgB5dl3916VYT/5
ol/i8GcOBCpq3ft4n0ARATUXLo3iei+2R6p3CNSglTedNc6BAtW5h09SsB8f
iTtUS3Dg06LVP7LiCLQ57VTfp28cEBy6b0HH+Lhgc8Bc5AcH/DaMLxm/gPXN
st/BdZoDCXlhy2QwnsrNbLzq/mB+mb/Adznmg56NrcFqcxxYNVnTIY3Xk+tM
r0YKc6Gq14orwP6Bpf/8lkCMCzWjUZE38PdUddY8sqRzQd/J30cZ72ekUfSy
kMWF+fJalb44zzioLO+Zz+PCWac35oHYP/vLZ44en88FYst5BYVsnA+kZX73
SHDB/tlf922PMB8tSGAaSHNBMXwfa+gF1nMOVyZVhguzv176V7Rh/aVd1JyV
54LCJch6gvP8X+F5sF+ZC1+PbLt6D/snnV+TzsrLufDmxuU1LxeSaOu3w37h
mlx4f6itNXYZ5vfxT2Gj2lxIXh13OGMt9l/vu7Pz9LkgpNKm8wTz+9M3lqUc
Qy4ES3+QcfTD8/O6vukY4sITkVUoBOd9Wn0psdKEC3ObHLpCsjHeq3SFEs24
EPo3/wXlKfZ35Xn8GQsuDE6P+u3C82lXvFRpjxUXfAWF5LbX2B8/SFtZsYML
cRkHrjTi/BudI2kit4sLUS/qS/Nwns/OjNkVYs+FarvGB31Y/6rT6IeG9nJB
fepwOMJ4Hbh+LnCTExc4Ly9dbMD6ORP7JzLLhQvPk5d6HMF4XRDld4Pujs8r
et1GCeNT84Kg4PBhLrxsV1n2BePTLMTteYsXF7at3mZbg/O8y6n37Vo+XFgf
d+R36Q8SBR23G7p6nAssVd93fRifSUfbp74HcGF1/zrmaozPR4e2UGxPc6El
4evS4bckenWgWvJpMBccNP4eF23DerjXUE36PBeuvLVKLKzCftnuscHpcC6M
L97+nY/5Tc5a02LgEheW9Fa/scjEedsiay9EcUEiXsspCuvvThP5o7di8H7C
LIHQORJFGIjHuiVyQbZBp9BoL/Y7KyNv1ydzwW/HyPHjGJ/PNUUfq6dxgc4w
9ri9mkQ/FH/2EJlcyKRafHgmTiKezNExq2wuuAyxHRbg/KUuOfq7KJcLv6WP
tWt+JdAmvhNr4X0urLgucF+P52k/s0/Gv4gLBu1/vI+2EyhQbIfWm8dc+Gk8
dm+8GvvnuSZYW4Lv9yW3ovcJzpczxtY3yrnQGWe+Yjf2443fKw7MPePCyilf
m4hMAn0W6B13quaCmpuqIAzPv9Do/fDqWi7ofB5O3If1Snpw2fWljVw4yJ9S
UMV6var/5r0LLVx4dAouf8Z45mm6T99vw/PcTOSfx3iaCNY07X3NhduOT+73
JRCovn0qXqiHC9+EHq0eTiZQplLZp2V9eB7322xLxX7g7PEQ3e3vuLBPUkT3
axbGY53puZMf8HwG+I++wnqoL8VpvznEhcu/ratUMP8sONwp1zjMhf001T1v
awn0tTzZa3KMC+VNvj3trzF/cZwqpAUYb8NaNl8+Eii0SGB/+DsXzIs9Fv0U
wvol+uhe3E8u/Jl/YvMNPokMbQOny2a4cOaG/cZXiiT6fVrEnCLEA+btic1q
Jtif3XHzSZ7HA61Ct/aZXSTqbm1I0hThgYTxMbWsQyQqko8ZtaXw4P58ncnR
SJyPzb5zx6k8WBY/2q+K+T3ax3Z1MJ0HQwt9zyTlkuh0SonjfCb+3r9WgUQp
9ls1S8KzWDwIzUHjp+owHgXB+Ws5PHi8rvHyXYxHE4mhzldcHgjKcjYHYDyu
RCZ/D/B5oCOemdA1QiJF93tK0+I8yImjDt0l8TxdZZlfXsCD8uOHNXoxXmZL
jvrIS/DgmNORV7sxniYGO5IeSfLgYanxf/IYb2+Yei82S/Eg+vZRpIzxWbsy
abRfmgdSZ1y3H8DPH+39y/VewoNVibes3uP3b4XvWy0my4PFP+My0rAfjrlf
5Zgkh+8zWS+Xh/kgqHdp+H8KPBhYf4snif2w57xL+S8UebDWKXly8j3Wb/WJ
ThtlHuz0DbLe1YX97Q7Lv2NLeRBMU0/c10AivdNFSkGqPCihMIvVy3H+uLPQ
XFyNB+s+t5J9+SQS+vU2yUCDB5k2en9DojEfJruvjtThQc+c4tdwM+z3q5sc
5VbyQNzOSHsO4+3ahGb4w1W4P2TgiWIVEh1b/6PzrT4PFvxxr0nEeuh40O7v
UQMebLt88qbUT+wPY8qURA15cOWVl/qlEQIZlMiaX1/Hg0Png9zYfQRaNhji
o4F48HVR3brGFgJJMD8nPQceSLu2DnyoIpDoys0vdhrxQLky0MerBOuTQ+7o
6EYeNIg+H71cSKAPYRzemU080I5Jd92eS6DWAu/VfFMebLV/crrlLta7nk7H
O5t5sGHip/3///5CjpB++JotPBAayfGSwn7xulpKfos5DzTrLOyn8Hrqu8md
81t5UOqimf8Fv29ZOZm6xpIH81jrvvzA38+5mHaNtOIB+8CBVOpDAlF2bLl8
xxrP58db0fRyAjnL/Dy/ZycPbtsTUR8wnipHbp7i2/LAY4CZ7IHxJF201bdu
Fw8ct6zuPIvxdPz0jMeZ3fi+8rOyvzA/tZnccdbdw4PRF7eaUzF/afC32485
8KAu52fauvnYf97JNrPZz4NFuxY0RWN/Yv1q17L/DvLA5RcP3oeSqCBJRH7I
nQcxQzmKY9h/0l3uSyZ54Pl08TMUx/rlormHa+nJgz3BH6hKWL+eT1OoYl48
CByRoI9i/VpSXTRbepQHw3/iFmh3kiggyvHnMW+MJ0/xoNd43jp3MQgVXx7o
Hnmnfw/Po5Zi8ed+Px68urrMNvYb5u8Jp3exJ3gwXqqofhzr13Axu2tzAA+m
2yr567F+GYWUNM+exPNn267xEfvPNHPXmkeneHBQsNHJDq9/L+SXe5zhQctP
H9pd7CdtPpQ/lA/mQcHU6/0d2E8+yHHP7T7Lg3hn33iBgESs4wtuXz7Hg44X
d1ZyPv8/Pz5PNgrF8753uf32PqyndM/Y6TAefBEP6urDflq2UzKi4AKux7rP
/q+fkSgwrTrE5RKePyGrTR4PMB+5Hz0pHcmD6vKixR3pJNLRXezddpkHj7RU
LhlhfIzV+ew3jOFBrNLtaTXMV8axsnaTV3kwmDxlLmOL+cqh0TI7jge/8uw4
vI2Yf74poAWJPGirW/TxuwzGf1mLXuN1Huztk3V0ZmG/GX5S82wyD/I30i80
/CGQh9VSFb1U3MuTloNOOI/USrfLTNzgwfd1eU37Bgik+Pn0wlvpPIg7KZLy
HevVmfvL2HY38TyWzb9sWkeg3pOdopzbPDCLmZk8W0mglcZn/1ZnYj4S65+p
wPoVw9GYOnkX42fYwk8Cz+94b8+4VjbGg0SfSgrWB5Pb54c+3+OBqadt/068
vnVE621KLua77R1Dm4oINLv6bcf2fB5oGCY8OVhMoN3CFxqp93mwPW3YLx/P
/6NmnaqKBzxIOpBGE36J9SxxoMS3iAe+Jg9izV7hfOgUUaj2iAeUR7synXD+
ql+ud+/9Yx5U2O3qlh8jkPLPjxnxT3jgL9nRbIfzcvDzqOvmJfg+otPqXTTs
N949vzZTyoOIlvstdGmcH/58j8kqx/VvXviaqoHxomd/SeQ5D2R1GPOObidR
4o6osMIXPFDckRe6x4VEwt7PQ/ZV82CLzPHHUv4k6s1VCSyr5UFTShDwU0i0
sWH3iUP1mI8DEm63Y30pGL7sI9nIg5dai9J9y0gkLfrc62UTDwK+FktWYX4N
U/ju4dvCgzLVX/Oiukn0db3KQYVXPHjLfx2Z/ZFEDg67D7xqw/Xr+c+U/EKi
upOX953p4ME+5Q/HN+B8ppP4bM/yTh7IXL7zMwzj5cajyV1vunjgU1++JBfr
A61j6c4LPTxwaygPuYPx40faWa16wwOF+oZdPvj5e9Zli6E+/HyiSWEhfn+L
+rPNV/t5wDtadi8J47HYdNIYDeD7ydUUiuP9FVyXbhC8x/wyeLM/6QOJLp+z
W5fyEeuvnvUaK6wfv9Ij15gNYX3qfmLsUE8i54rKVb8+Ybxm7zEax3lrzbSy
5o5RHswqiG90TML5eKGd+rwvPLjaz818eAHrpW6kyv1xHoylOt7yPI7xf+Sb
LJPkwZJ++2cMKxJtj1ReXPIV88sX5RGfdSQqz94leXCSB3ZmddIbl5NoWW3E
/IVTWD9s2VfKpEgUN1TBrf7Bg09n9GnSdKy/Qt+Y3pjrLoyKlibNYLzIKtPk
ZnhwMbPA3XucQF1rd4m2/OaBGL/++WuMF9gdIXTqLw9qTrR0CDD/5p6o+Lts
lgcb66tjhhux3lz7Ot09x4PVCzWE32O/d65Q6UfoPD70NN3Q/YrxI2i1/aYj
woeOC3YdGni+7SYuCT6I8uHibV+ZdOyfaugVY9EUPlwb+vzUrIJAWqpfPxvS
+GDs/vWFKs4zycZKg1/ofChlrElcjvEp5mw7cJ3JB93k0mnAeDgWfKnPhM2H
6bN71pq/IVB/ann3FIcP8z2dtFU/E8i0lOy4xeMDbe43I3eSQEU9iq+sxPkw
MCcXchfrg+wPm6bZ+XxYer097hP2X1Na5dX2knzQmWybWLuKRPu2ks9oUnyQ
TT+Q0m1KokYPxfJiaT782kxQntpjvrpz8ZG4LL7vVemc9WdJxKwue/Bcjg/a
wywlh1gSnfhA5Hkp4P07H9YV3SbR4D+Fe0uU+NBZllcigv391sU2dxqV+VC7
LHXD/Gqc/z9pPt+jwoeUkrv9La+wXuXT3k6o8iHLJuDgIpwfVvgP/jijxgdB
jkD81Sfs36Ccx13Oh+r9Fq0dEySqpycsz9DgwzKuch39O843r4+aaGvyYbPl
Btf9eL73p5o5VWnx4XBC7PJ6rA95rkqnd2jzodfb48sajIdpzX8Jn3TwfhPu
4Q+nMT9PdxceX8mHSxouuwywf4t58aCZoseH7pd8lTfY372NiBhJXM2HtRrj
jjdxHlPZ6SKstoYPiRs37snBeucjs16m1IAPzc+6WngYH5XDkvrmhrhfhZYe
vzA+GA++Wfev48Nwud9cKOYH25NNR44gPry93pf9OQ/7O6M7F2eBDxP7TjzY
fAPjp8uuUt6YDxk7K0s/nSJRaJrOm8JNfGj6c+5dhAeJ2g6ypoxM+VC+wzCc
tRvr2e9naq5bcD8++ilc1MP6UZ1k/NOcD7Z9R99/X4r9W5Tvvgtb+RAat2SB
jASJLGy3Bi6y5MP69142+lTcDznV+HtWfPhu+prlj/HyaVTogYE1nselMSRF
QKAVRX2NTTv4cDI37iV/kECnTz367GDDB6MnOe/LenEeN44WImz54Cc3vXQp
1htxjvviYDuMh64zzW5NBHLs2aDHs+fDUXpk3TU83zkZi7ff3IP3X/5Apxzz
/89DPw7r7OWD6symrCG8NtJ9FV7tyIcd2YWRzHoCRf/NvrlzPx8ezcWXazQT
qO/lufLPTvi+0tQ4gw4CqVxx6DlxAONN7nKPPPaLPnZ6k1RXPsT6rf/zcgj7
KwUeO8mND2iVPo1BEogxPqaq7s6Huzt/pNZhPbV5VG1UdogPXhHSqZ2YPzLO
3NhrcZgP1zfz3s/D/DJh4h/wzhPX2yTk7xI13I836gVzR/Fz83t9G8xxP26J
NsR48+Emw+ZrrwP2R54DQwq+fJD+c/z5SS8SPZy9KmV8gg/U6b/klxjMT3WH
V3b588FtZnG6yU3Mx1c3Wbqd5AO7QGNfDfYXCfZyHr8C+dDH1j6ohf3HoNJM
6MXTfPhm1hhl24zzu6AjXSqID/EdbkvYvdifFOeV5gRjvMczstQHcZ4IDu9a
G8IHGd+o6cuYz8XN9n9tPseHXRVi3RKY7x3FDZiOoXwgNRsZRXjec97OVyHD
+HCwdF7GNoyHn5kCOHsB42V17dYhvN7gVbeHf4kPrvYvj3hhfP3uHTOpieBD
WNDl+bEYf482snT8L/NhnfivT67Ybx0p0JRRj+ZD9MPdNcLYb6lIbae9u8KH
tFjx6Ajstz6c9/1+5Sof7gjv3LqslURJRPyAURwfNL2PIs5z7Fd3P234cY0P
NX35qidwPVg1fY+yE/hwYNM4PwP7rVrNf+l7rvOBK3z7c1sUiYKT5CI5yXyI
6N0rbo3xMunl4uR3gw+St62n/W0w/t+EW6im88Gs7s7yEiMSuRrfW92XwYe4
C94LQ1ZgfrzfpBh1C79/7WnwYjms91IEGzL5cN5f/34bh0SxobyZyTuYr7/I
Dn6aI5A5qfPpThb+nnaubwLmW1F7m1d29/hQJ/ZEXgbnl8oa/1JmLh+Wb/PK
uPeOQAFayXcq8/D32q9mH+gmkHZyeYx3AR9mIyU2eGC8fBF9f0r5AR9Sfwav
ed2K8/rReQd7CvlQuHQg5x5eO/YpWUc8xPzZvkibbCOQ5CaTdese88HFtkgx
pQvngfvuy74W86Gl0UMzuZ9AEdKR828/5cN++rNvr7A+GIflz9qU8uGzi7Kh
xDcC/SNfjdHK+XB5YZFg3SyBiu0nO8sq+ECk1Hjw2DivvVzw3OsZH86WvnCz
xH5UfcXqXIUXuD8/5pKLNUk0lLw7obOKD2WpSSN/4f9/PpvmaVDLB5/99Uak
G9b3t893Cer4UFmaUPD7JIkaNg0ZZTTwIcc53u3uZZz/Fy+TorTwIZO6K/32
fTxvYVtES1rx+Xd/GN2H5/3+V0/ycBsfHF1P7byG/bj7nit9sh34/hm6P0Xw
/CjWFr5sf43rmf0i4yTWh/4VnQ9Cu/B87DebqcP6EJ/yM2V1Dx/6/fLNmrB/
2kaRuvClF/enSLjmEM7PNO+1Pjf6cP2aZTfE4Xmuert3r1U/H5SZmz8Z4een
TM5uFhnA/Thyf08Qfn9l4S3d4vd4Xs4997fB3ycWv5Q99BHjX8hFf2iIRNnh
I/QlQ1gfBT36Fm9I5PSN/qP1E+5/yGa9SoxXaQeNDyHDmB9WhOgdq8T5qHZb
08pRjMeXzy9lFJAoWtu7eGQM48/MVOca5n/T1LibyeNY35lZ8xMiSVTq3esv
RGI8l9T8Esb19e3/7fzwKx8W7VV0mb8D+1lTmW1uk3ywP+X35iTuR/oSZ+Xm
H1jP3w6gK7h/BrrLNZ1/8UHN8VZVL57nTrOp1dPT+Huuo9rHsT/w2l+xIfo3
H4JMY05f/0Egmn+4ufJfPpiqaJj/3y/dirK0Kf3Hh4BfNBFVzKeGmYv2Wc3x
oT7FyL8Pz1t36Uf3YSFx4B2YeZKJ9eBYe47PaWFxcNFmWybgeWeM+p4WFxWH
EL/3Rk/xOnPWMDxbTBz0s5ElA/uZ9QspMeup4kD+Npw5j/HSu/xVUidNHLT0
igsXfMJ8bnT9tgdDHCQ2iX29hfMOa7dTvhBLHLwXqctwfhHo7lH1JwlscbD7
Vz34nwiJIPz7cw2uOAQtYbNe80jUl1reWMUTh+QtqR31GN9+D8M67cTFYe5H
TGqnFu7fB8nR0IXi4O8zAyuscf789eGbtKQ4dHyLtZs5gOeLnfPnwSJx+HQs
TKcF+1X+WkPuu8XicO3kOZEz1zG/bBeT8pXB93+R+uUVzs8m7q2KdDl8nm1P
X8rg/PwhKFEjXR6f/619mxrOz4Hx+/VWKYqD9L5u6fIO7F/y1KBJSRzWrHs8
dusdzhNVk2ZOS8UBOaYfLBom0eY3ZTt+qYhDzrXA+FrMr4Nk6N6oZeLw8I29
XjWez9OUbQeV1MVh3/8qOvNoLrMwjjeKUKR7UUrIaBEtJoTK+whlLNmKUvbs
KZXKFkK2kKYiS5SkQpHsS5SSUrJFspRMSZnfa0u2mKc/7+H3nvve+3m+C84h
3NB5CfVcdMWSYyVyBISXFCWtR55zN3/0MVxPwCNcqjQa+7Gu7t2QzxsIXNxs
ebb09/+hsTke47uJwN1694Rq9Av/01uvLv6LgFFFelAV+snSmHlptzcTeDHz
7VYj+k1e+uus7UoE7P01JSRxPvXL4gqalQmcEyiub8P5/dJoXemiQsD3vlCh
wgPkf3ao6cpWAhFS+Xml6H/B+0Un/9MgMNRxIShGF/XX48PcEE0CsobR26JU
WaY49I7AMm0CHV3darvRb02uHVuSu5NAXd9OhSXY5wYeqq3cqYPv62cxsAr7
cejLuXKdf+P5VppmPkR9lup5pXhcjwBvR/Oa0VEOU/rzijqvAQGFXRI/KPKz
R9BaJ2U3AbG1tHUL6iNHZq2JohGB4saKIb+PHCZ869CBl8YE/ug8x/MTeZQ2
KXWwMSXwtNl9NhfX5c7BR8f2EOBY9Qxkf+AwZgH63lFmBNpyRx59wvkYvCIS
LL2PgLus5zONb6jH2d1RxfsJOGp9NcxFv5Cpvh23+wABDZlLsQt+cZh6+fH0
zoMECjZVG33F/uoVp/PQ1YqAeezd+bswr0nPSXg8bo3Pd/seOCzDMnUu/W9C
bQkEiQWl5Coiz82q3cL2BKyqDVx2aON5bo8cSDtEwEx38RMHM8ynQnJ8lU4E
ujM2HzNAPRb38V1i4EJghrsn91wkyzzrrVvV4Yq8SVkHq2K/PWIgruhymEDw
zfKSVdhvlxYd3vHTnYAed2EnXynqpVSF0bmjeJ4l/368+5xlDkcKWNNjBPjC
5FLrm5G/UUv3G8cJtOtNXtrZzTKVlvd9N3oS8F7BXOpDnp2fz0RUnCTQm5im
GIM8EwXDq3qncR6LBU0lkefyxNSMdi8CW8AvPBx5dZw3mO/kQ6Dh5CuvSlwL
HYHqH74EVmcUefzmv6QttjH4DIGbh7RCkjnYRzV6PiwOwO//cEDtAOb1hVkK
nNRAAtekT4WJYZ8tFA6aXh+EejT0lXcC87qNfxN/eTABnZ2ycn++xLz+VVpM
9xyeb53y+9pyzG/GJ9a8CyWQze38Qgr1+mBZtZJjOOrVty+BTiksw7NKWGs0
goCAHs9sF+YRi/F8G6Fo5MNEiuuIG8vMs+M+mhJDoHBukKUo9qn7dXvPyMcS
SNJqruL7m2X2KWWcL72I+zsSsOSCCsv8kTqWoHOJwKpIF9nvazGf8e6603qZ
gHzeSldr5H/P8fjCQ3EEbDZURq9Fv57p6Hs6HI/Pd3Ux9kc9v6Ot0hyYgPs3
qMu5iPpokhPeI5hEYMMqR9cozL9TS9vZ5GQCWSN7+2P7UY+DZGfWpRDoV91g
XYzzsHvAe2FJKupdrosPRf0d3/ty2a4bBN6JBA3dxXVa5TLZt2kEJEZtXL0x
7+jLum2xT8f7455tOoXz9eOfMu2hWzifuetfRo9wmJTpBXsCbhMYXaGddH2a
w+g4HrQTuEvgvK/jiwjsH8Nvsj2SMgks/Vx4Y7kwyySr/vKXzSYwJV6kvVIa
9fSmQXTRPQLanGtcNgoswy5MSdLOIdBpRk7Ga6Bef1Qvts0jIN2RfrMD9Xrg
7ws17EMCkUElJuao13EPP7ScKUA9+G8FzQ5Ff1ixqXdBEYGvnPcysfEs0x8a
OJRQTAAmeArKbmPeG2yYXVNK4L5S17P+QswrFisFC8vw/otO2Lc/RX2rPiau
VUGAPzZc3rAR++L6J+uaHhE4ZVkQLNKJ569ygC+oikB+UnjSHcy/lZqjfQpP
CNhedjRpx/zQuju6pqeawH+VSyeCMI9z9q++dfEZ3sdr3oJozNPcDpXBGs8J
zJe+ZsQi3+Ie++yGalHP5SIrM7GPKvoOwY2XOB8lc1Ua+llGLzRS0vgVge/X
5NLO9CD/F/+cmVOPz9/pZNfVin6TXN6Z+wbvi8/XfhXyffH23jKbRgIO8s9T
4rCP3snjJAg1o98Zx+X44rxXVYR5VbUQsFCTmV6dyDJttVLmHq0EeM6NOA+F
Ie8fTIQb2gl0PRqTtrRjmRXfvg8HdBD452WKSJUh7u9HSOPGLgK151MfPd6O
/jBHIvdDN4H3xqYKlfIsY7+gKObCRwKVfx2vEMJ84iNq5M58ImAwyfDyLsLz
X9mvx/aif7Sa8XG4WOaufNC61M8EPG3ezuPCflq1ZTmfYR+BgWOShl6YZ9/t
yO+b+Yp5wvuetxfyxxoY1Nz/hv40pr5oBeovz/4v6VYDBGL3NiidwLXEoYBg
QQ7OR+xMtzf2W6WjS+0esZgXBAIyVyKv+j4P4MgQgXKVNc8MsB8eOqcrKTGC
+r9sn04LN+bD2N5fr0cJiNSWnfEnuN8kv84zY8jLW8MA/pU4rxkiZevHcR48
9qTKI6/vynd5RU/hvEdskejYwzKDzz+abf+F+vdXvkO2E8vMb/ZW+m+GwJ5Y
F98bPiyj3J81rM9F4f1qngZn7DsGo1qN03MpVH8J6/PCPnRotisnm5vClrQU
S3nsS378p2MOzqfwx6YY0U3Ypy6JCLkv5KOg0St9VxXzcqbUXb1yfgoFeYOv
eTEvP5Hbse7wQgrh6rX7XL6zTLtyB6+4IAVjJ8KjiHlgUMOzr24Rrr+2DO9G
/ngNBGp8F1PoDnyWeh95ldyXkS5HKZQtSws0Q71VtmeCO4QpCI8tttiHerv7
yDvb86IUZkUeDv7+fYCD9zHYupRCfnfT2FgL7jeEX/K7GAUTrsvdU+gfly/c
/JW4HN8v2MhsbQnLZCVu69RdQSHo3aT4K8xTT269LZ2UwP20fE9k4n///eqR
hEwpCoxCaVpPCO7v+XUzfhkKPwxOmGtYs4xUk6pS6SoKj/T/Va/TZ5ktXU3U
dQ2FzZ82Zi3Zivv76jYsJoufz2KVwtahv4zMa3yxjsKQm5eZ53Lsx5la9Qfl
Kfw92ntiHvJoZhtSx66nsF/itdKhefj5pU9rgzZSUJ5+klGDfOx8M7dGRIGC
5/mgkT2Yn9VDNavv/EWhuWrKcwPyqbw9uGqrIgW/vatuOKH+bhh9UlGvRCH5
qfk6vkEOszqLq8x2CwUhftMHQsifhN2O4lEVCrmpf57xGOcwomJBBWFqFLaL
/y2waA7LCDY8zlu2jcI7HSu3Wj6cx7A/cu9tx/ML33zviAj6wXaNe8BQEP3W
JvkS9XNsNDCzGSiQruGJROTxs92cWxOaeJ8+MT2+mHc7xSAtSpvCZ/bKXA7q
Z0tDQKrkLgryjzPmXUP9fBVWmZynQ4FbyTJ5M87/U/XZBG1dCkoLZ9mDmH/L
f6jHv9OjcEQwc04N3ld+tv9lNwMKaxdc1pTE/Jtt/+jizG4K1zcWH5XA/Ju+
bCbmohEFFcEVvgGYf5Mbt0fJmFBYcJwzw43593L4mYgiUworNz3h+KN+RjEV
obp7kQci86UKeQ0Zmw7uMqMwkjo2lY166Hdv21mPfRTq6oWUNiGfnof8/Oda
UFDVixDWRJ4PLy/3jTtAYVVvVVE/6u+hpikvWUsKFm8iExT70M8jtp4qt6JQ
xZ1VwSCve8D3hKENPl/crFsB84H+z1KPT7YUvp5ttN32gmW07k+6n7TH81r5
BhJRP7c5qLnxOiBf8xu8Y7JR/8R9nJMcKZTqWG21T2YZmcgJu8cuFA6GOOgP
/85fGqo2e9woHPZyXWzujPl/3Muy7zCF+wZcwMG8tjCn2MLnCIXzVNREcCfm
B8dxcwEPCukNJQ4LlFlmWlxl7/VjFNaonjBVWsMyo82nTTafwPeNPizV+vvn
VZFFhjWeFPbVuX3fhH2vV+On/v5TFDra5qgFIr/vx5V1B05TSOPJuz6KftyU
c2pXgDeFe3PFXfIxL7x0LNQivhQUM3+Evcf8/GTFmMYtPwrWYhG+J3/n6RYl
RsUf+RS0qQ8b4zB5509uqwvA9z/X3Dcf5yFzR4Gq1VkKmh75gR8wj6RNjCoP
BSFP2kevD/CzTGKuomJICIV/ZjQ9uTDf/uPkqbAklILUh+q4fuQ1UiJ/Q2YY
hYlMFU1b5DXo7Yjc9gjk96jalBT6vU/UZtmGSAqct4sT240x32qeWG0fReGA
zoZnysiv3YNhqYgLFJY1Fj72R78/HGQ6rXuRQnx/xOp7CSxz0jS/beElCjmL
vaZ70e/8ZUQe1l/G+7d6IJiLeS/8x8mY2Djcj5hVW0Yd7q+m1cXkKn7ev1bf
BftPUvwWbeFE1JcBL9sM7EfpzlelWpMoROx681kc+9N91Ymp+GsUnur+kryG
+ljMb9G2P5WCwhwPQX7k8XFHad7yG3g+izr9LPDrL7OXx3SlUfhv8ppkAvp5
yxk/l9R0Cjr2X9T+RT/v2t2lZZtBwXzg6fDhNswfkupSf96hELlIQOUU+vng
YMrUv3cpGC2aMTJFHicez7ZmZOE8ZQtccshkGa5LNnnO9ygIajoPi+G8Ljz0
OHpdDoVtfA9tvqB+SvAEa93Po2BgevxqqSXLrG3rlfTIp7DzFz+pwn6mcEdr
SqGQQlS6a0wT5lM171utI0UUjl/hq3DEfKqly5NXUEJh8oFlWR/yt3u5U/Tp
MgofNy5Rysd8aj7w3Fm1Audf3ZCII382FWu1ph5RcNvvcdoK+49rTIRkRRWF
rnx5mTvo757W3yb9nyDvzwyECK7PbNJrhacUTn36fPc68hX6R/YDrhoKee5J
/ZrIV2zTwuinzyms7tTJaEM9TLzp7hz6Au+LW+CIDOrhTc96TZ06Cnf0Zss/
Il/Z2hsl+V9TeLhWpS3vL+wDorGTdfUUtJwubdmshfmnb/BtdAPqw/zbq1mc
xxfFxg8MmygE9PhccXNFvbSgzs1vKcSJ6n5Lu4j3IeepeaWNwq0XX3gPpGM+
nW6RMG+n0DS8+FlLAcuMv1aaXNpBobykQjv5Gd5Hatzb950UnMXnV+lgX1rg
8TM3uZtCfe2YeQD2JWGNfVFWH3Eeq2+4/sC+JEFKnKQ+oZ/eqvU5jvq1pldM
81MvBV3bsZxG5GdTvo9E+mcKrdezRrhwrXauY8KhD/Vjpih+AfKoabbt7Zp+
1FvHC/N5elHP1lzL7f+G81J+QWplO/rb+K/zWQP49dxH/KmvWMb6hZWTOwfn
O54rubkC+1pi5Y6NgxQGTkkaSN/DeXOTkhgaorCnRD1wCvOh37azE3kjeP7J
Eefb0R/OCXxq8fzx+zzcr2z3ZJmY7h25yj8p9HSKQLYNy1zNuXl+fJwCW3jh
z0wD1IfAeU6lkxQCwwW2FaM/Zxk77PCbRr87PPeskRz6iXTNCvUZCq+M+0o+
ibPMo5HVE7OzFOxKbE83CrHM/yt3Rtc=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.633651067135419*^-12}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417104640384`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1:eJwVkHs01QccwO9S58bva2cKnZmZVw3TvFqnK8f3m17YPeaR98ijhIo5zISS
pVyXML2IcVFyj8e8783jt3YzcqRa7opIqunGGqWLmFtrf3zO56/PPx+jsFjP
/Ss4HM729/zv1eNrZC3dDE0W6Ut9V4Viwv2b6bzfGbIy7nOtdwzDjOqzFzRv
MJTx2kxxyCgaZ6KU6oP9DKUc8v/DbiIeheeyanxuMfRkSD113eEj6Jh4dR/v
DkObHnRMBqw9hvw/Lyz2yhlaSs258zDjJOouJrl032folIt5rSpCiOP6AUXX
HjAUqKX+NdOdh58+OxykOcaQpF5qP6R/Bk0Hw+J8/mLIvcd2zmyxCKtdgv5N
VjDUtyVHPCL5GS2v+Z4sm2LI4VHlzN93RWhXxy96/pKh6Z15epmqS9hmsttE
U8mQ8ICLieCLK2h/cVudzQJDG417tq+LEKNT5ubfklUMFX9rquGhrEP3UMNJ
0ACKj3ReFuQ0o/y+XryNJtCCs8U/OtUt6Oemo/L+CCj39uL6M52tuHerhlaZ
LlB+YXyuuE+CTxpXFl//GEhnbl34a1aKEWbvTJ/rA+2Qz5yvqrqKU6WL9WAI
FMip8N2a1o4xOsotNiZAtsFBnznv7sDZ7GmZ9wag5vOTb4+qOvD7FZP8ZHOg
z9dEJV4QdeKbpKf3Si2BRHtfSNOtujB15mHIdSugVB+dY47iLuREDE0pbIH4
8b4HpoDFjNG7CbAZaPnHuwdG/Flc7TXw1poHFN2r6k7MYzG7r1fg7QCUpbv0
nW8dix+SbE0yAjkEH493amaxoK2zpNQJSMDKZ7TLWdTdKNlwfSeQmD/sP5PI
4sXKxgaFM5Dbq7U87lcsGujV2gMfyOBmzUrZSBeW51d1W3/z/t/z0DHJwS40
5Za7eXsCxY5tyy6Y6MTqo8VDR7yBiqZFRjzXTrRUngsr9QPS/2TWR3yxAxui
81/IAoEaWa9SzlA7bnosTFQEA9XaFgwK1dpR4nuSA2FAzl4aEyUGV9H+VprQ
ej+QeSHNtlhIkd2RrO0dCRTWqu0Tbi7BHptYs9IYoNEPmgXaq1rRtTqqSRYH
dGNtFJ6eaMYBg30OigSgpBOCPcm/NqGc8Xe3TgEy3NU5/yaiAZ9OOCXJMoHK
mma5AzFX0KnsVoVFNpCeR0h6+PIlFPkFDBTkAoXOa2q4lVTgO61nC0s/AR0a
rXAXeYowuD/OOPwcUPrNMwFxu0qwK0PF7y8Emi+/5xNnUoj6jlk/2JUATa5w
lW/afhZTFrQrisuAXlpIA5U1+TiCt8tOVb7vhYbWJ4azkBdtuXCwCujFq/Ep
7qMMLDSRGsnFQNPB3Fe6Hmk4xz67vLkWSK1t+njx4yTktBjo2DUAbV0/WLVH
EIvML7eHwluADvKWIitmQ1BbXdGfIAEa40Zxey57Yq+aMPPLdqDjMMxVqpzw
P8on5a4=
         "]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAQSjqQk7WDECGI/yrUImDPyCm0Kzd
2QxAfSGXQMOKiT8pAOif7twMQGHmDVUWS48/iLlzylbgDEAPsaUKzCKTP0Ys
ix8n5wxAZvCOLVjzmj+l5RZKj+oMQJZE4qDjOJ8/BJ+idPftDED3ufU5Q9mh
P8IRusnH9AxA43WRz4WQpj8hy0X0L/gMQAN7fv4hAqk/gITRHpj7DEDLWQrZ
N3yrPz736HNoAg1AocC9Xi07sD+dsHSe0AUNQHmD+E87drE//GkAyTgJDUBA
qY8Gm6uyP7rcFx4JEA1AuLxsXUn7tD8ZlqNIcRMNQG/PYjKoELY/eE8vc9kW
DUDVcAUwkBa3P9cIu51BGg1AywuJGLUKuD82wkbIqR0NQJV4qn/86rg/lXvS
8hEhDUB+wQYfYrW5P/Q0Xh16JA1ADHnzDRZouj9T7ulH4icNQFbxFyx6Abs/
sqd1ckorDUBM7ExTGoC7PxFhAZ2yLg1A0vylHtPiuz9wGo3HGjINQFFA3xKj
KLw/z9MY8oI1DUBNAlZa51C8Py6NpBzrOA1ALz1lCShbvD+NRjBHUzwNQMac
ckhGR7w/7P+7cbs/DUD2poxkXRW8P0u5R5wjQw1AZxad5NLFuz+qctPGi0YN
QAPUnWZWWbs/CSxf8fNJDUBiNB49ztC6P2jl6htcTQ1AecyV7HQtuj/HnnZG
xFANQC9V/LyqcLk/JlgCcSxUDUBXH1KNIpy4P4URjpuUVw1A48Cw2Kuxtz/k
yhnG/FoNQBOMopBZs7Y/oj0xG81hDUDg8PRUBYS0P8JOCoP7ZA1AN0zzWAxs
sz/iX+PqKWgNQCELTsHoSrI/I4KVuoZuDUCS5tg5V+uvP0STbiK1cQ1AMkPJ
rMOLrT9kpEeK43QNQBYx/m4QK6s/pMb5WUB7DUD9ND42Y3emP8TX0sFufg1A
+J8EusQspD/k6KspnYENQOroHrKo8aE/JAte+fmHDUDqvbmtkXKbP0QcN2Eo
iw1AoNo8qmKGlz9kLRDJVo4NQBuP1D7u1ZM/hD7pMIWRDUBi2pkERGeQP5fb
XeCKlA1AJcZXVn/Nij/01WQJ
         "]], 
        LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAFIB6x9q3DUCX7V/B015UPycd73bg
ug1AlhGqCQn3Yj8sRv9tvb0NQJG2z2amum0/WFnMexDBDUBUKjL9lZJ2P5bE
3maUxA1ABwve3BIvgD+oYVMWmscNQC3JzAzOCoU/yHIsfsjKDUAUHx65B8WK
PwRszlZIzg1A9IiWWjzgkD8Ild5NJdENQIgeQ0Cn+pM/KKa3tVPUDUBOWr55
RaqXP0i3kB2C1w1Aafnz8d+Tmz9oyGmFsNoNQBu/DPhgsJ8/qeobVQ3hDUCa
Oh9fDDKkP8r79Lw75A1ARVbW7pV1pj/qDM4kaucNQDP9t0SLwqg/Ki+A9Mbt
DUB4a+hd5GatP6pz5JOA+g1A3r/rq1Qssz/KhL37rv0NQNI4/poMNLQ/6pWW
Y90ADkAp0FC2TS61Pwqnb8sLBA5ASbPHfPMYtj8ruEgzOgcOQF5lhxUF8rY/
TMkhm2gKDkCosirMl7e3P2za+gKXDQ5AbCom9/ZnuD+M69NqxRAOQIYEC5eO
Abk/rPys0vMTDkAI2KnW+oK5P8wNhjoiFw5AgnTjchXruT/sHl+iUBoOQOqf
JlbbOLo/DDA4Cn8dDkCTLZzgnmu6PyxBEXKtIA5Az4gV8tKCuj9MUurZ2yMO
QDkD9dpAfro/bGPDQQonDkDBkLs04V26P4x0nKk4Kg5A35t2YvQhuj+thXUR
Zy0OQJ8o+aj6yrk/7DxdgoUwDkABb1ohIVy5Pyz0RPOjMw5AUatsKejUuD9r
qyxkwjYOQIhLMcRhNrg/qmIU1eA5DkDYhNW+6YG3P+oZ/EX/PA5A0gG/W/S4
tj8p0eO2HUAOQKJymxEx3bU/qD+zmFpGDkBMVuTGkvSzP+j2mgl5SQ5A0kcn
lbbrsj8nroJ6l0wOQH9RtgH117E/phxSXNRSDkCZvY8HXzGvP6T58B9OXw5A
LbxUhND1pT/ksNiQbGIOQF3GJBZptKM/I2jAAYtlDkBCQA07LoGhP6LWj+PH
aw5Ak7JOTIWrmj/hjXdU5m4OQMv4+USxypY/IEVfxQRyDkBoVpDtMSWTP2D8
RjYjdQ5ARPAog2eDjz+fsy6nQXgOQEHvSZSsTIk/6NQKLDh7DkD6RdzzG/WD
Px4i/oh+fg5AwSp0CVZ2fT9nQ9oNdYEOQM5+eoEwS3U/Fjy1lGeEDkAFMa/X
8d9sPysejuM=
         "]], 
        LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAAwy0KOx2hDkDdt2owc7JyPxa52tPr
ow5AOYkNa+b5eT9g2rZY4qYOQAfNoBHIb4E/gVPBjXiqDkBLwNMXXJ2HP9Te
kSZHrQ5AZ7HR8B8FjT8KLIWDjbAOQEom1mfy9JE/U01hCISzDkAVgVjWU1OV
P5IESXmitg5Axpgo8VoamT/SuzDqwLkOQJzAY3XkFp0/EXMYW9+8DkBV7gL/
n6CgP5Dh5zwcww5AEQojRur+pD/QmM+tOsYOQOqThp8wP6c/D1C3HlnJDkAR
qqOOtoSpP46+hgCWzw5AEHBgAVQMrj/OdW5xtNIOQBYzDJ5VIrA/DS1W4tLV
DkCMfQG+bzexP4ybJcQP3A5AcNBrO81Csz/MUg01Lt8OQJdMvfVoNLQ/Cwr1
pUziDkBArP4sshW1P0rB3BZr5Q5AInxpC5PktT+KeMSHiegOQCKx3kohn7Y/
yS+s+KfrDkD2VfYQnUO3Pwjnk2nG7g5AX4Yg4XDQtz9Innva5PEOQKIi1fBJ
RLg/h1VjSwP1DkDTpSBa+524P6JP3Fxl+A5AU+CatrrguD+8SVVux/sOQDVz
I8XcArk/10POfyn/DkCFJ429AAS5P/I9R5GLAg9AGtYZ+gbkuD8MOMCi7QUP
QPALqaVLo7g/JzI5tE8JD0BGgSR5bkK4P0IsssWxDA9A5zkbyoXCtz9cJivX
ExAPQDY3Wv7mJLc/dyCk6HUTD0C25VgrVGu2P5IaHfrXFg9AI+RHlcWXtT+s
FJYLOhoPQN8kso2QrLQ/xw4PHZwdD0AN28alNKyzP+IIiC7+IA9Ai7NlcHqZ
sj/8AgFAYCQPQB9bpu9Gd7E/MvfyYiQrD0Bc7zoFvSGuP03xa3SGLg9AiS7A
pBumqz9o6+SF6DEPQJE/0N78JKk/nd/WqKw4D0BRvmgrOiykP7jZT7oOPA9A
F7sN70LBoT/S08jLcD8PQC8gcyUm1J4/CMi67jRGD0BebOylxRuWPyPCMwCX
SQ9AvflpqAQnkj8+vKwR+UwPQEeo4ON1CI0/cEN51S9QD0AtjEfiVMeGP3Ow
njS9Uw9A+/rRgv+rgD+OqhdGH1cPQEKCfwZOZHc/wDHkCVZaD0BzA8QwsBVv
Pxi4b1U=
         "]], 
        LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAn0kcsw6AD0CYmGauWsaIP+pdPCka
gw9A2n5RLznijj8EWLU6fIYPQAKmehvVKJM/H1IuTN6JD0D11/q/+C6XPzpM
p11AjQ9A3WrTEll5mz9URiBvopAPQGo23l8Q/Z8/ijoSkmaXD0D/RGeRfMCk
P6U0i6PImg9ARkPHEPUzpz/ALgS1Kp4PQNEGGJrxqqk/9SL21+6kD0BJshZi
IYiuPxAdb+lQqA9AWfMmtkdwsD8qF+j6sqsPQAdgbzmRkLE/RRFhDBWvD0AE
tbBFm6GyP2AL2h13sg9AnYlHpzqgsz96BVMv2bUPQAqJb/ZoibQ/lf/LQDu5
D0CkYgNeYVq1P7D5RFKdvA9AVibqS5QQtj/K871j/78PQM7qt63NqbY/5e02
dWHDD0Cgou0cHCS3PwDor4bDxg9A2cGP+f99tz8a4iiYJcoPQCXwqc9Ftrc/
NdyhqYfND0AFjvPuO8y3PxAuaPiv0A9AOor4LG/Btz/sfy5H2NMPQB0bBPWJ
mLc/yNH0lQDXD0B8xGlf5VG3P6Qju+Qo2g9A1AF9oUXutj+AdYEzUd0PQM1M
LJKnbrY/XMdHgnngD0ApCNT1adS1PzgZDtGh4w9AB/xRNh8htT8Ua9QfyuYP
QDChLbquVrQ/8LyabvLpD0BPHkdfK3ezP8wOYb0a7Q9Ab068JOyEsj+Esu1a
a/MPQIpJzARLcrA/+nwDSwYAEEChxXPkyMOnP+ilZnKaARBAn65zx49wpT/W
zsmZLgMQQFREXIB7JKM/siCQ6FYGEEDSoH3VC3CdP6BJ8w/rBxBA7ZPhgYxE
mT+OclY3fwkQQMqESlipUZU/fJu5XhMLEEB+Wd8Xq6CRPxAgSLu7DBBAC95K
a08hjD9Y7X+tOw4QQHZ2L3uRS4Y/Rhbj1M8PEEBQp9YEedWAPzQ/RvxjERBA
IlcyYrI8eD+m0/cPLhIQQJT3VYiVG3Q/+rZBAA==
         "]], 
        LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAJDRRu0EhEEBGyISKsmV3P2wBia3B
IhBAptyOep4WgD9aKuzUVSQQQKG7AibfcIU/SFNP/OklEEBFvlK9CX+LPzZ8
siN+JxBAuC0g9ncZkT8kpRVLEikQQGbqfMhVvpQ/APfbmTosEEBX+aDMD8Wc
P7iaaDeLMhBA7rLyeSBTpz+mw8teHzQQQMLNH7Hlnqk/lOwuhrM1EED77VgU
4eSrP3A+9dTbOBBAdjfTvHkjsD9eZ1j8bzoQQHEBWDp5K7E/TJC7IwQ8EED1
PdzFjySyPzq5HkuYPRBA6AGn+/MLsz8o4oFyLD8QQBIYUJ0M37M/FgvlmcBA
EEDWhfFQbJu0PwQ0SMFUQhBA/8u2m+o+tT/yXKvo6EMQQGAMLK+Yx7U/4IUO
EH1FEEDnt+of3zO2P86ucTcRRxBAhKl2uWqCtj+819RepUgQQIq/N0JOsrY/
qgA4hjlKEEBsgTEU58K2P5gpm63NSxBAGcfUuQG0tj/080alg00QQD3gzbBu
gLY/T77ynDlPEEDWb9QMsyi2P6qInpTvUBBAfMLiwuuttT8GU0qMpVIQQP+I
D7PHEbU/Yh32g1tUEECAmevzVFa0P77noXsRVhBA6g/+xhx+sz8ask1zx1cQ
QEry2E3+i7I/dXz5an1ZEEBIggT8MIOxP9BGpWIzWxBA6g8RvjRnsD8sEVFa
6VwQQBVSIf95d64/5KWoSVVgEECma3TxDIypP1LPVygtZxBAXTeysdA/nz+u
mQMg42gQQDnaS7i7nJo/CWSvF5lqEECCpyd0RjiWP2QuWw9PbBBAWiOmDtMf
kj/A+AYHBW4QQL6rU8Emv4w/HMOy/rpvEEBRHmO9jQWGP3iNXvZwcRBAB14I
b3gmgD/UVwruJnMQQFZnqaFmZnY/LyK25dx0EEAEoe5wWuhsP2wiZvd8dhBA
2PwMCe2XYT+ki/HnS3cQQLfMUORVwVo/l6Y9dg==
         "]], 
        LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAVeC8syB/EEA+Qp1mD2NmP7CqaKvW
gBBAPL3GJqMccj8MdRSjjIIQQL+i+iOICHs/SnXEtCyEEECuNnzjxKKCP8MJ
bJL4hRBAPZIndAg6iT8e1BeKrocQQPUKcKF5K5A/ep7DgWSJEEDf7SA2PBeU
P9Zob3kaixBAzifewk5UmD8yMxtx0IwQQG81+cNe1Zw/6cdyYDyQEEAaJPGX
tzSjP0SSHljykRBA2CjtaKKupT+gXMpPqJMQQGcc/gKUK6g/WPEhPxSXEEAe
tNRXyAytP7S7zTbKmBBAy5hpLCBgrz8PhnkugJoQQFcz+upyyrA/alAlJjac
EECItXYdk9GxP8Ya0R3snRBAKRe0zbPBsj8i5XwVop8QQDL21kdWl7M/fa8o
DVihEEC2zbVhYk+0P9h51AQOoxBA6AEoNBbntD80RID8w6QQQNUYHEoxXLU/
kA4s9HmmEEBRsywu6qy1P+vY1+svqBBAR4+5+f3XtT9Go4Pj5akQQBKUSIXC
3LU/om0v25urEEDs5+HGDbu1P/4329JRrRBAB/znyF5ztT9ZAofKB68QQE57
afGxBrU/tMwywr2wEEDKpxHDnna0PxCX3rlzshBAeXyu6DzFsz9sYYqxKbQQ
QEEpTGgc9bI/yCs2qd+1EEAuNxKASAmyPyT24aCVtxBADForciAFsT9/wI2Y
S7kQQIfNbLrJ2K8/6t3AlPm6EEBh2lRaNZGtP1b785CnvBBAJkVJEo8xqz8s
NlqJA8AQQMB3m/bZSqY/l1ONhbHBEEBg49uzYtSjPwJxwIFfwxBAIFhxic9m
oT/YqyZ6u8YQQEG3Qvzti5k/MW6K9lPIEECcFKEwb3iVP67mjHIXyhBArBSS
ZgJIkT8aBMBuxcsQQHDoxMogTYs/hSHzanPNEEDq5ZhWbtSEP/A+JmchzxBA
WQgsRUt0fj9KAYrjudAQQLWcCH49inU/ed1ISw==
         "]], 
        LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAAlKBOTY3aEEBcxrIyuSlgP98MjEzj
2hBAVp5qqrXaYT9KKr9IkdwQQHKD7RGm2Ww/pOwixSneEEB+5u4RYY91P42H
AUBu4BBAy0xQnrNfgT+Mglg9m+EQQEPf/j91dIU/rzNOOvPiEEDJ3v3HO6KK
P2K9vjX35BBAARnwH8arkT/O2vExpeYQQAuaos0vrpU/OfgkLlPoEECxCgW4
afuZP6QVWCoB6hBAUnP4nEGFnj8QM4smr+sQQIb75GVHnqE/5m3xHgvvEEDx
N0NmVHmmP1GLJBu58BBAs9AeG9TnqD+8qFcXZ/IQQJBcL+t0S6s/KMaKExX0
EEAirvXKjZutP5PjvQ/D9RBAgBXkKqXPrz/+APELcfcQQPmQiVK977A/ah4k
CB/5EEDZ1MLHpuGxP9U7VwTN+hBA7fyfx+y5sj9AWYoAe/wQQAbj0ahJdbM/
q3a9/Cj+EECLTqGi4RC0PxaU8PjW/xBAaw9/rEOKtD+CsSP1hAERQGV6qhWR
37Q/7c5W8TIDEUBp3a8XZQ+1P1jsie3gBBFAYT454PoYtT/ECb3pjgYRQEvF
VsUg/LQ/Lyfw5TwIEUAnXCY8N7m0P5pEI+LqCRFA931EJEVRtD8FYlbemAsR
QJfoWCbRxbM/cH+J2kYNEUDxsnDq/RizP9ycvNb0DhFAsLfhdGVNsj9Huu/S
ohARQD3P7wUXZrE/stciz1ASEUAfJhaFj2awPx71Vcv+ExFAJoTZ8S2lrj/0
L7zDWhcRQO0wzVLC+6k/X03vvwgZEUDFnbYUpIunP8pqIry2GhFAv7EhPyQV
pT+gpYi0Eh4RQCTZY8WVOKA/C8O7sMAfEUCbW4iat8ebP3bg7qxuIRFApWf8
Ol1Wlz/i/SGpHCMRQGmEro50LJM/TRtVpcokEUA3M5MeqLCOP1RnCrJHJhFA
0WIT0KyLiD/krQjb7CcRQJF78HEkiYI/ZP90y0EpEUDDfmZhYKR8PzZwar+b
KhFANoyD6CtbdT8iE1yr
         "]], 
        LineBox[CompressedData["
1:eJwVknk41Hkcx0crd5vvL9Y5ruwS0qV0qM8nUtGxaVMJFQ8lhMGTHjxa55Zb
xjWIcuzQaMyMo6RSORZhYhbryMzqyVVoOler1v7xft7/vZ/X83rehp6BR72X
0Wg0l6X83/Zy0wdXJhFspXXJ1Nb4wqTcTMDdZIL0iGm/L80hcPGOJd0slaDt
+vo2ZbUI+EnLSWE0jaBP2kRtnTAGjHOjrMIzCOplhlupP7gKebNZL2wzCQb0
VoUk66ZD9sWnSmImQYfa/Sy7sUxQaR6qYWcTfLqA7nSPXGi1XCxyzSWIHP0e
prQAruTpJ33PIpihF5IEw8UgDfDyCC0kSG0Kt1/bXAacvxIOmhQRPO3uy3m3
hQ3eeyqsh4oJKn1sgb9ZlTCoNbsCSwlGG76py13Bhetxqv9IywhON75gh8VV
w4G5jS/LficoNEwevnSeB7KnnHtOVhD0puwkHeZ8eNgc1qB8m+Bilo7x6y4+
XF7HKnvIITiVHe8kdRTABlZjOuMOwepZOsUsFsC07FiEcTXBy2/qqq26BFAa
KHN+gEewSML9RhMK4PTQ6qOJAoIjGfMyI2wBaNjv3bmzluDooEem/0kBCLk+
pvN1BA1l/2AZifmQqJ20quQuwfWiwU5NWz7sia/66txAcGe/izE9mgeLcz1T
Co0EQ5oi6wuKq6HulFR0/wFBc861RUUHLgS1qDUFPCKYrHwiMcaoCszWW982
fExQ1U1GajlQCeMsl2zRE4LrCo4E6TPYcDzohv/2VoKKpn0eTVEloDrcdOJN
G8H9fheZOfI3od1+3La4naClVsGJX6AQbHRMteS6CJosjzsldmDCx3hH2Xvd
S/v53sze/enAnfef8xMSlDjy/e+6XwMf17QhvV6ClU/lFW+pxYJRK6/leR/B
ikOiVq0bEeDlMr3R5U+CUWFuefAtBLLyP+ZbDxDsY9YsOIf6QgCbkWYzSJAb
eeU+xHqDAmNHcOEQwdTSGvPZ0bOQqnnFYOUIwQbiPqvf4QkaSr9i0SjBMcnx
wmPjPjBfkCPtHCP4W39WbKp6KMzqtOhdkBB07vo+8ermSGAnTCjqjhO0lj00
6c6IBY+3ih+6XxJMgYRuesc10HazEEe/IsiYHnlVE58O6Xy7RMdJgi+ih9v6
HjMhdQOjbmJqiUf7OxmbiVzYV5B5kzVDcCKrwdAtvhAaGINhtDmC7W71Eb6F
JRAysuApmCf4rrlsWE6tHCz20Q+fkxKMPBGT7xDDhiJdT+NnHwhm5hzbs0q7
CrZvMrf0/LTkXzpflKDCBZHDe+vPn5d4rFVoAxeqIeDsg92pC0u+LxqY/GDF
A4WwhAPG/xIU8V80sSU8uJXys3PDIsFHscvEgkA+2JRqnjnyjeBxobJT7zAf
+hskPq9oFD5LvjpjYSyAoOeVwZHLKPRTlp9J3CcApcmQSEqWwi3Gg0Jb+6V/
f7VJYC+nsPi1l8EpugB2qcul75Kn0LW+Qhgs5MOgeU+eSIFCOYXRtrYzfAi2
zS3xVaJQoLp9YlsXD1RcPKpoKhS+z9zWa67Dg/JAs/rsFRRS7w83XTtYDZjw
rsliJYVzXz/X+rXfgaGCxo4nqhS6HaUahro5ECqIF52kKOSckUSl8yqBLdaY
jFOn0CCNea5sQznYfhK/1dagkM7qlzGSlMDIisov1ZoUam+qsO7MuAlkh83K
UR0KK5tnZ003s4DjtFwrhE6h+uhAiUg+G/b6dBsp6lOoq3wvZY3hdRBH5VgU
GVDY6llMz9dPAZ+SylgHIwq9NdhqWy4lgBpnDXauppB3ea5deXc09Jaf5m79
kcKHGxcWyqzCQTuHq2thQmFvvonp1igGXLLbvVZ+DYVJrlN+p918IFLu8PnV
ZhQyWapiMuYF/wHRJHzn
         "]], 
        LineBox[CompressedData["
1:eJwVlHk0FQgUxilKkdGlSVI9olKUKSkp90ZPFJJwCidbXnljr1BoIS/kIUU9
69iy85YsY8mZkmSZSjEtTqXdWJ4lcpLMmz++c//+vt/3XQ0PfzuvOVJSUg4S
/X8r4myDa/WBmE18+W9Hg/FciPHNxZuBDD54GFo6RaBqgkxu4RYg3fHVJrsq
o1CY31m6ayvQxhY5A0VeLFrVp1Y9NQTK1z4Y57o+CT89cW3y3g5Usdj8OevD
NVSbHe1KMQZaY7rq+dDmDIw68uv3od1AC0b79Sr1C3FlwJu5l8yAfB8VW7Sz
i7GWU7RIjQkUvIozzeaWol1m4FK+OVDTQIVeQGI5Dop2aJhbALlpFX7ROlGJ
nLa5G3otgUwaXow0XuYjo6/DIGg/EHtAdocCCrDuW4qJnDVQovOMqLVHgPaK
rhZZNkCHo6u1LKyEOKy1zs7AFsjh891Z70whxhiPOrcdBEq7vXyorlWImnZ1
Xm6HgLJtL8b7dgqx4USU/6Q9UGA4+7RLqRAdz1udiXcEUpJusGB4CnEkZUmU
5mGgJwNlHV8nBBhX9jq+9giQzJaAmQYvAWrdK0y1cZb4ne93UrqKj3/rTuX3
ugA59usOmvRUYmiqhYh9FEhQs3JbolIFakrx/ppyBYrx80wLZpRhu3f/I447
kLi7nKuoWIKnnhq9VvEE+sicDf/RJ8lzV9xg7jGgTQ+tkn4rKMAgpQ0Lmo5L
/L5MV5lakYPqZ8OWWntL8hkevOXbnon337drv2IDqfK3Lsy8yEM/a3UDbx8g
Bv4xZOCfgqo1PqbffIHkmaXNM3lX8S6j0TbaHyh1k/rAW5d49Ilb5KocCKS+
u5Bru42DBg7E4QYBNTv1zs/UvYg5P9o9zE4BHQpP2r+mLRRPPPgZ23gaaHlC
nkJgeBD62E+++yUESMT4mMD+7INZRo3coVAgPs+opaOHhSyZkdvHzwKFDSyV
+h7DQit92YnOMCD/A/5NqQPeyDUdGfSNAFo7G/9sdnUgBpzOLjU+DzTMbFrc
GRGKw5YHukUXgKqU//EUm1zAapXIH3qRkn43s17qropGt3NdCxuigCbHzOeO
Lb+CC79oLtsXDbRuIk9gPpqEooMn1z7nALmb3Zm+VHYdXervbWXFAHVtf/yO
IbiJ87RV9nyNBbIKOn3fUJyBTlO33ZS4QBm3ZHOj+nNRxkPWPytBwlcusH3j
+gKsaHeI0E0C2uesChGehXh4660rdVeBpqzV/p0TX4zS2ZM8i2tArcZXekLS
SrFEbm9Rz3UgvfgDHe+jy9E+6Eb1sVSgb8n6wT3MSvz56nPz2A2gsa7RcmNv
PhYxtz+9wAPSvis0ZoEA7Spj+hTTgdqPy81jpwtwWvWFOCMD6IFW1caH0kLM
j9T5uT4LyCY2vKfMTIg2g2cU/swGUjHozul1FeKUQ5va3hygEGWoa3UQYm6T
mk53LlCEdmh2prYQrXR+3+aZD8TLNGzRfSzAieR65mgB0E0hS33CUYBZP+Tt
zxcCeb+GMEYDHy1YLh6LioFWL2nx85rDx7FHZQHpJRIe+TfGlZ0qMMNo5pxO
mYSfsjuPd74MzfOsuTXlQHZ7T/UlR5SgWCErnVkp+Q9HPzHeuRSh6VuTWnch
0MnpwtiZD3k4aJnYIhZJ+mmX3SWXk4OpojfPIqqA9myZqln5MAtphf57+Rqg
eOcdVp8C07Cfc2GUVyvhsZslcrNJxeSRx7Nr6yR7E+8MiPVPxp1OGorV9UA5
4+EDO9u4+OleoPqeRqBl4zqTaWcvY4eY41JyB2je56BjGnGR+B8HumMo
         "]], 
        LineBox[CompressedData["
1:eJwVlHk41AsXx6WFylvu7+BqsXSjVakwVDiHlJ6xtqJbYizl2rPEiLFWJFGT
ZZTKMhhkprRZuqWF0nWllIpCi/K6KSaU0p37x3nOc/74nuec7/M5Zx4ncLOX
vJycXKQs/st1eb9kqjUzpCy98+XNSCJyT9V2iP9miKWR+Wvr7COYUbytxu0h
Q5PS267MxQwsufAxR/kRQzHqOqlWLifxRt2hiBuPGfLT7G4absjBp43aTkFP
GGrkZF3cEZaHU15tVml5xtDgmvX+ZWqFqNH3/0HeC4b2OvkdYRKEaPgl8aF+
J0Oz4xSzYzpL0FZOU/zqJUPzu1lb/GaVocf0K2nHuhiy8KhpvrekArlqjv7Y
w1BP95i15ZRKPD7vg83Aa4bSolbubnQUY6le/JIzbxmaKq6we/ZVjDeM50x1
6GUonB3Tms6VYLtlVe/4e4Y6V2skKbdIcMDO7u75PoYeZKq7+YxKcIrLu0LX
foac+9nOwkEJanryEmZ8ZCinL9i747oEjQLVOdcHGCpMmrBBz1WCtlwJBXxm
SO/Ny0/iVjF6JrG1NIdk+stVSaFaYoxKf/3jLylD1uMj+++nn8fjuQc6oocZ
6l6hPuBRWI4ioWrNslGGsuR83LYmirC91jri6BhDcV2DZnntRfipoWu72Q+G
DFSu67O8C1DhUaTRP+MMyS1+/0Fp8CyyPpQN2soDRe9ZoGUZmI12UquH3ycC
nTOaz44DPnr+7KwsnwyUXxiZ+04lHef9ODy8QQFIv+6LWo9HMvrGxupdmwpU
VyEf2PI8FkXapTa104DiSrjvxDMP4JuoJ9f+UQKa0b97VVvfPnzGeqE4dwbQ
NvMlgoziQCw/Z9PYKKsP7Dk27ufgj8Xf5kfzGaD+zxtcco2DUMtZWLgUgCSK
NkctLwaj7tqwGoEK0HeFulan4nAsjbr79awakIPDyGpnr1j0igymteqyfiUd
FWnnkvBpxuhludlAYr03dQvTUpF/rOCHYA5QT4/rSZfODCwTmHawNYB8DD9t
/EsxE+uL2qq/acrmX1SqmnZQgM/FATkibSB57yFXAzyDig1nt0/TAQrZG96k
GlOI2q2rjap1gfjmLoqv3grRuLMV/lgI9Fq0Z1o/qxTt3/sOzloM9P5WXsQq
zzL0Hpr08N4SoALngw82ulegq8iqeace0Oki21s1Mh63uyc2DSwDUjFKCvhg
LEZ79duN8fpAGhW8oYL7Ytzw98S7qiuB2jqljlkmEjQ/uO5WySqgpftTNHg8
CbLMEm6sNQS6MtI989VpCS6X1tc1GwFtHd8xpnJCggvK5GvcjYHO1nMs7XfL
+ORYXpWaACWPzqTUiRJUmxV/6dAaoJKAXZGlcWKc0XLzwmxToFGFvjsxVytx
yqEJ4gozIKFVJ3/lsvM4bmZRQQj0JE1t1WafchyWxooeEdCb16mBrWEifMuR
K/q6DkjZTz+1caEQO2ZRfup6oFc/Qy4JegrwcQvvjJY1UGbYcPfk7HP44NCf
py5sBOL5D5iaCPPwtvnPnPVsoEnY7sYxE2DtF/OsdhsgP5X0hp3TMrGqPIbv
awcUEKPr3ah9HLUNo3z77IH2vRDeTIg6ioWzx9MyHIFy33W1V3cdROX8b17K
m4GUxlMcJzfHIf9wdPKVLTK/2gLm/ZLFRTllrhtrG1BsdD5vd1ooipgCg4vb
gdKCbyfvLgnC9DBMHnMGysro8Pl4yx/Vh9Z/xh1AL+wjK9w1g9BvTm1U5u8y
vj7stKmcF4KerWMRi3cB6QSvOix8GYFWSy4t5rsC3dtoXB06xsOuwOs5Hm5A
MTY18glNSWg7Uh3U4w7U0LFpvCv9CFqd/+Yf5gF0Znm8zQrzDDT1WuOr6AXU
qyt/VRdOouFc7t5cb6BlwQssnIxyUCflK+emD1Ct8M+75YrncK7FaretvkAf
A4LtGMcCVBmN2NXrB9TCxCf5nChCpcqrO7gBQMz57U0ODcU4yXvU6X9BQFKF
Uo2ErlL8Ptdk29lgoCrvZ8WLHpeh9NH+zQYhMj/tDXjTsiuwP+WKw91QoE0h
KQcafqvE1xYjti7hQDd7y5qUWGJ8Pspi9+8Hsv9d4H74shhbK8OteZFAsHxn
gaqyBO97X7ZiooAiHtW33iQJ1msMWxQdADLLenaMZy3B6sdGaBIDdOr0Azdt
HQleOBJm2sST3ZPbFBPnp2IUWV5a7RoHlCNo07/DEWP+VynrczyQKnSfuJxR
iQKxoWFiIlAkP4+XP0v2P/eErvz1IJD//IbYpV7lmKJZtVx0CCiJfaRmb7QI
49uGlpolA61xcO/z8itBbqrB4pYUIKP8tpRBUyHuWxeywCMVKPu3dde8vxUg
RzKonXxMto/n8k33H+ehX/yW7+wMIHMHH+mK3hwM21L1VOkE0IRFBvFC85MY
o6N6sZkPNKd/vP3ESDoe/hKWlp4JFGb92Y3vlIJWNrH+utlA040WhLZwEzE3
y3i9ikDGp8nCPYLQaKysVBMezwWyqy+cmdoTjg3BbA77NNCi6VqbVL8H4786
+WND
         "]], 
        LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAGLz56C42EUCLh1ClldNwP9uKiueX
NxFARhBhg7pvdz8mVGQCKTkRQFYG3nYzO4A/Too9gEY7EUDLqjarbKOHP77m
FzhLPBFAbJPH29Oziz8KsPFS3D0RQIaYeI2XQ5E/VnnLbW0/EUBK6PRd5/yU
P6JCpYj+QBFAxsbZJZL6mD851Vi+IEQRQHeWPFtQyKA/hJ4y2bFFEUAxCC1z
9QajP9BnDPRCRxFAyzMtYcpMpT9o+r8pZUoRQIv+bkAi0Kk/tMOZRPZLEUAe
rAGlh/6rPwCNc1+HTRFAm2x9eBwWrj9MVk16GE8RQMJjjy7OB7A/mB8nlalQ
EUDuxA/WDPKwP+ToALA6UhFAU3Et2IrGsT8wstrKy1MRQAjY2oVHgrI/fHu0
5VxVEUDbyLDEniKzP8dEjgDuVhFAp5CJfjqlsz8SDmgbf1gRQPnFtmE9CLQ/
XtdBNhBaEUCOyZXHLEq0P6qgG1GhWxFAncnwkg5qtD/2afVrMl0RQFl1PQNl
Z7Q/QjPPhsNeEUCjSGEvKkK0P478qKFUYBFANUMfIef6sz/axYK85WERQMM5
GQKQkrM/Jo9c13ZjEUDXUEjMpQqzP3JYNvIHZRFAirbkjA1lsj++IRANmWYR
QOWpIqofpLE/CuvpJypoEUCJoCmOk8qwP1W0w0K7aRFAq5f2h+C2rz+gfZ1d
TGsRQAS5EcQbtK0/7EZ3eN1sEUBkqDOT55OrP4TZKq7/bxFAJelT1EAZpz/Q
ogTJkHERQEvSRPo9zqQ/HGze4yFzEUBj9DT/e4SiP7P+kRlEdhFAQ9iJlokm
nD/+x2s01XcRQIObptv79Jc/SpFFT2Z5EUBQhkzeRACUP5ZaH2r3ehFA5JTR
cCRVkD/iI/mEiHwRQJRDNcuZ/ok/Lu3Snxl+EUALUH4sdhKEP74z0ci+fxFA
j8bvWUN6fT/Gf4bVO4ERQDXMg3ZugXU/ik4X1KSCEUCGp1uuQwRvP8EWSJ8=

         "]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAhIwIw3emE0A/X5WbyK+EP+YfPiAj
qBNAHLrQSN/xij/w8J775KkTQDLnV9k4UJE/+cH/1qarE0DiiU0lQaCVPwKT
YLJorRNA0vOAxI9Omj8MZMGNKq8TQDiJfJ76PZ8/HgaDRK6yE0B/0zJr5LCk
PyjX4x9wtBNAgevFeTUqpz8xqET7MbYTQAGNnHIog6k/Onml1vO3E0AUeKED
6qurP0RKBrK1uRNAhoXZlraVrT9OG2eNd7sTQEdwgxFRM68/V+zHaDm9E0D7
uDvEtDywP2C9KET7vhNArSbhknyvsD9qjokfvcATQL2OMHHH7rA/dF/q+n7C
E0D/9tyTx/iwP30wS9ZAxBNAWCv6mivNsD+GAayxAsYTQPNmVQ8ebbA/kNIM
jcTHE0CDbLo8ebavP5qjbWiGyRNAs5fQgwU3rj+jdM5DSMsTQOs+q2xWZqw/
rEUvHwrNE0AsTHloCVGqP7YWkPrLzhNAJ0n4iHgFqD/A5/DVjdATQJ8X/nlL
k6U/ybhRsU/SE0DB6BmpAwujP9xaE2jT1RNAIcAgbEj3mz/mK3RDldcTQJOk
5mtYK5c/7/zUHlfZE0B0n70sC7aSP/jNNfoY2xNA6G5ESmNnjT8Cn5bV2twT
QMumnxv7eoY/C3D3sJzeE0CZmyHy6dGAP2K8roiL4BNAfjFhwKhteD8eErln
IOITQBg7S5V8mXM/ziBFwfjjE0CMW30keS5xPzC0eh6k5RNAu3mkzCwHcj+T
R7B7T+cTQFGXKZJ7vXU/6pNnUz7pE0CMlwbht4J9P0wnnbDp6hNAjU+rhx6H
gz9W+P2Lq+wTQNq8PeDl2Yk/X8leZ23uE0AaZJH+fa2QP2iav0Iv8BNAef+b
327tlD9yayAe8fETQKNItsmAkZk/fDyB+bLzE0C9/B9/f3ueP4UN4tR09RNA
s5GzGXjFoT+O3kKwNvcTQFM71x7qTqQ/mK+ji/j4E0AwmvNbxMimP6KABGe6
+hNAvJrlaN0hqT+rUWVCfPwTQBWvdkuxSas/tCLGHT7+E0DXTK4e3jCtP77z
Jvn//xNACpWXVaHJrj/Yw4GB
         "]], 
        LineBox[{{4.691455698188644, 0.003464262088072967}, {
         4.692938404527451, 0.0030433071222758295`}, {4.694421110866258, 
         0.003150301682079644}, {4.696142697670761, 0.003934786366152734}}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.835041710683917*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 2.493, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.01, 5, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$93519$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$93519$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.01, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {276., 283.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.835041710710744*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Time-dependent Rabi frequency", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835036115299939*^9, 3.835036136362033*^9}, {3.835040972288479*^9, 
  3.835040974316441*^9}, {3.835041178847898*^9, 3.835041186175006*^9}}],

Cell[TextData[{
 "Ramping the microwave power (i.e. the Rabi freq.). The ramp is much much \
slower than the Rabi frequency itself. \n\nI figured out a weird way of doing \
a rapid X gate by simply applying a very short Rabi pulse. In case I play \
around more, it was ",
 Cell[BoxData[
  RowBox[{"\[CapitalOmega]", " ", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "65"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"tmax", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}]], "Input",
  CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
    3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
    3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
    3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
    3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
    3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
    3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
    3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
    3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
    3.835039939334324*^9, 3.8350399397512007`*^9}, {3.835041047675274*^9, 
    3.835041143093012*^9}, {3.8350412022616234`*^9, 3.8350413033955727`*^9}, {
    3.8350418641059284`*^9, 3.835041907622984*^9}, {3.835041996312902*^9, 
    3.835042174768655*^9}}],
 ". I get a bunch of divide by zero errors when it tries to compute the phase \
in the region where the transfer happens. "
}], "Text",
 CellChangeTimes->{{3.8350361386073995`*^9, 3.835036197901415*^9}, {
  3.8350405830435624`*^9, 3.83504077964559*^9}, {3.8350409903245263`*^9, 
  3.835041040811996*^9}, {3.8350411472184086`*^9, 3.8350411598650036`*^9}, {
  3.8350422158357077`*^9, 3.8350423134230366`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", " ",
      "approximation", " ", 
     RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "65"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"t", "-", 
           RowBox[{"tmax", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]", " ", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", " ", "=", " ", "10"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], "\[IndentingNewLine]"}]}]}]],
  "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
   3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
   3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
   3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
   3.835039939334324*^9, 3.8350399397512007`*^9}, {3.835041047675274*^9, 
   3.835041143093012*^9}, {3.8350412022616234`*^9, 3.8350413033955727`*^9}, {
   3.8350418641059284`*^9, 3.835041907622984*^9}, {3.835041996312902*^9, 
   3.835042174768655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "\[Rho]", " ",
      "elements"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "Rabi", " ", "frequency", " ", "and", " ", 
     "detuning"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<|\[CapitalOmega]|\>\"", ",", "\"\<\[CapitalDelta]\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", ",", "\[CapitalDelta]"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Frequency [arb.]\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Qubit addressing parameters\>\""}]}], "]"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.01", ",", "tmax", ",", "0.001"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}, {3.8350397592112246`*^9, 
   3.835039761382015*^9}, {3.835040460604765*^9, 3.8350404696549473`*^9}, 
   3.8350405102213683`*^9, {3.8350413399798746`*^9, 3.835041513400248*^9}, 
   3.8350415608082085`*^9, {3.8350418107868867`*^9, 3.835041812454124*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Time to run sim: ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350394989227295`*^9, 
   3.835039559401267*^9, {3.8350395984673443`*^9, 3.835039608307582*^9}, {
   3.8350396611331615`*^9, 3.835039686522111*^9}, 3.8350397628761225`*^9, {
   3.8350398379321194`*^9, 3.835039859700087*^9}, 3.8350399416329975`*^9, 
   3.8350404703716164`*^9, 3.8350405110810575`*^9, {3.835041212730671*^9, 
   3.8350412641240807`*^9}, 3.835041305950017*^9, 3.8350414166264553`*^9, 
   3.835041515167165*^9, 3.8350418132730255`*^9, {3.835041883426692*^9, 
   3.835041909817813*^9}, 3.8350419995122194`*^9, {3.835042055568327*^9, 
   3.835042175801793*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF2Xk8VF/4OHBbRNHcWe6QfcnegpKYe88jFZVSlkQqlDVkbUGRqCwpKqSy
JkRkSWQXKUsLKZUoomTfshXf+S3fj/lj5vV+vWbOuc9znmfOua8rbXvS2I6L
g4NDmP32fz7vnbflVTseTnL8/1dtq5ShuZQT+l8vvqi4KCV19j/fq7oquUwq
9D+7ED6u05K3/3PrvOPNUcnM/8z3pVthSLLkPyc3JHoMSL76zzm5oV9c1n3+
zw7o3e1Bz57/7Nar1FOY0/+fBaSDFbq0Rv9zJKVROdl64j/bfjGt5G768589
6oJtTyrMocSj/8957itNhHf+Q76Z5QVOI5rLkv1O/N5gzgFHBPK6ny60rQxK
/Lt/cpATNBQrts6fP0vjaP0GZb7ccPLY+Q2aIqEi8t72Z0yVlwGcsbSq3XBP
8sdU7IEV5bzgkLIho6burdyuXudz0R7LwTzb3fdT8ajS3h/XVSQkBCCf61pU
j5HXut/PbQNfPloBeRa/dtaFqquvwz6I6x0VBI+nzaJe1dWbBNCUTceEEHxq
LRno1YnX0h+ynJYxowBXQOvmk9tVdRLoF1sDDlKAkSYsfvvHRp1JnazcjkMU
oEoqfbL4QOokhc07xNhS4GvYzg9HSvbpzCncbed3p8Az06FOLgsvnWzbryWj
YRRIFOL5E7SpWIfSftS/oooCNYk9pmZTLJb94uWDorUU0HIZ+E6c2sYqk3+8
8Uw9BZr4nvcYfDNkOflwDKm9pkB4ujLQUqxYNdTkw2lfKMBHhLX9zfFjCWu/
2sLVRQH5HUnCTeYXWW42Y4yj3RRw9dTiF18IY4k+1n0t3E8BNfOPv2dV4lme
H50e+gxSwKHdjLZpfQrr5ULUpZYRCjyeShnu08lkScg/s10/QQG/nJprbX55
LO893WTEHwqUSU2V31YrZjV4C4j2z1LA/FPLx71Pq1hSd9Wnt/+jgKzSoS4M
q2edem7ZmsKBgazvVXHKqzes5t9BuYvcGKxZnDUI6GxjyVGzwq34MHA6lsfD
LdjJ8t3S6lAigME91tdyxYQfrLfW83q4EAZR+fRjITDIkr8iK+WFYWDevfDa
2HSC5Z+7++8bOgabpkMko53mWC0fvNpVhTGQVJ3WV1zGRSgu3CkMFcWgsWoF
bfTqciJgTe31PgkMrLbHF90vpBAfDAdd9GQwaPEMOsMowAlVb/rOpDUY6HD2
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
Qn52cXHJ/wNWZzd/
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Frequency [arb.]\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit addressing parameters\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"|\[CapitalOmega]|\"", "\"\[CapitalDelta]\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
R4fwsw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
md+zs3/9P1UkoZ8=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF1Hk4Ve3XB3ASFdI5e4ioHEPGUiQNzj73EpWiQookiWSoY65UikSGIk0U
CiFpUHmKSChThoyRQomMcUiUqbzb87w/7X/29bn2cK/9XffaMjYuJnYz+Pj4
zvHz8U2db562EVI/cJ7D9/9HQS3L0IzliP7nyaKcsyzW8WnfzAuVFmQFT/sw
dYT7S/rGtGvHHa4OSKdMe1Zjq2KfdOa040tj3b5Jl0w79VFw42G1j9O2R9U3
et3bpu3crtz2NLV72sIy/oqf1wxMO4xRphJv/WPaNo2muQLlP6ftVuhv46I4
Nu0nrqI7JDb//lvPyUM9K8z44H/2i50wHurlnzZfbQtknxCYtoLnQS9TFcFp
fx2O3CXyUmjaW9qdTl12mw182u+MvE9ckt32NVx18WJhyJvXPCHI/Sjbk2/j
++ahCOidK6UwbEhWjVm/SHffXNDhLhlMPyIoJ4yG9zf9EIPPl97/0Jlkym3q
s/glu5MB+rN2+raVlGvdIs7W+pgzoEqZmdelUqk1pH3/UdMeBlwYtt0zt6ZK
Ky5k3D7ChgEtSZcP+LnUao0pxjTMcWXAu/zKPC/tD1oPbJozB0IYYOp1wKjs
fJsWo2Gfd04eA4wKHuYuGRnUOjgZaC5VwAD5oou6o4k/tLIVHmt6FTPgq5Sx
VY3pkJbjEb4+9QoG7M93M7/2cljrNRa/N6mRAev5VfdZ/TOi5bm1lXPhJwPc
155Kn1g+qVXqKSzVPcqAOZTKu6tCfKtZMRq/NvxmwPbAAInUo3yr3/b4PZoU
YNL5MWKWiSizFYLkWB5M2o6uVYvigtnejwwmKgnav76f+ip8hV1T79GwVIIJ
vrfmNab4RrF9lhSEdyxmQp7Ri+EzYXfY9Ya9h3Vl6et/9m0vl3nAXupJbI5b
Ql/ftmfjJuUn7IbXB/gtljKh5QN7N7XxOXvWq+2acRpMsK7eqOQ9I4+tlbvO
vmMNE+LCbni0OxWw7V4uiVqK6OcTI8IsLEvYV18w3rpvYEI4zjneWF/Bzs8c
n3xuwIS7fcULNLk17MGMDo1JYyZ0/S608v2njr39afb181Z0/Qk6cffmNrNP
pyWXVR9ggmbMvm0F4S3sB48v/xE/xISCiSD4md3KFn7ocCDxGBOUzkTzyXl3
stfe3xHZc4p+f6J/xaJ5PWyHFE7pCn8mWFqZh+8p6GUXJRErXoYzYUXp51+V
W76zhxMmbQQimWAelLKxtmGQLX+759rmm0y4fslh3sixIbbfrbzxuhQmOAUU
id3p/sV+EnNfbeFjJoy62G1Ynj3KbomK2G+TzoTbSaPDH2LH2ZzIw8W810zQ
GeQvvBI1yeZeMxvTLGFCzMwXbtUNfFTMlfXLTlYyIfFZ/8vuXn5q7KLElVlN
dH2zN4eWq82klMMEira2MkHkHpcRaSlImV/gjVzpYoL+9wtGg5eFqGdBBVas
YSZouL6YtWfBHCpKtKamb5wJb+4u/S5xTpjyDf+88cUMDAYou7QdM0UpD5MO
PlkhDEYG/JZkfZ5LHST6soLmYNDSdbCXeYNB7a7/4dkvisGnUufq5FaMMrw+
praLgYH6qPyy009IClnwd2fjGIRvq3Py7JGgNBbOTpATxyAzqWzY0X0hJf9J
bG+IJAZyvSkLpcVZlHgcKf59EQZaojdvxonLUsI2C6vNZDCQQgk6ugZLqAk5
ufM58hgElWwbD9ygTPW3K29YokTXY1a46HmqGtWavGLyvCoG5rcYeyOjNag6
x9WZg2oYfOsYcErXXE29UeV47NbAQD/g7JpMWYrK6tNblrcKg42PY+t2vVpP
PXxk0KmwFgO22XsJ3359Ks7NJD6UjUEHSve4EGZEXV65e88QwiAxXiq2ffUu
KmB4H7lHF4NhzyXMrW1WlFfGwcpXGzG4rVQnq2xsRx06zg1W2oKBtZvuyB0m
l7LS9tS9uBWDS4pSRuv2eVJGv0/8HjbCwKla99ijBm9KN/dMhqUpBj0bPFep
bPKntM4EueWbYZAn3ajKkb9AKeleVFXZg0FqpWL1uhlXKSnBiPZwKwy2yw09
kiiMocSKY2J/7cfAYZIR8u5EIsUfnLDbyg4DYl638o3IB9TQlnt4oQMGmz+7
W34Z/4fqEH3yVvUwBl58R7OCV2RTHyoyAi+7YDDaPGO3VH4+VR6eozPqTn+P
kLPk5ZQyKsekcHzfUQxYpOZj8aBa6glR/qzoOJ1nVGahulMjlVhf47LsFAan
GEqMn8w2KvL6B+WrvhjYdVbrqCX0UCEWLW1jZzFYV7vOQ8Z/kPJe2HlzfyAG
MZWp0iMFo5TLpz6zNyEYfBz78kizh59jEzfEXB6GgZtcuKRS0WyOqc142bVL
GNxKd30QrMLkbJKfcW7iKr2/tnBPD94R56zrmA221zHgma183wsszrK788ZK
ojHI9zK0bNmkwGE5zX+6IhYDb8kJoWg/NQ62dJFz5G16/XMV87bUaHIEeXJK
f5IwOMvgG8zZz+aMPFJpPZCCQevlgLsuG3U5PW7qMWUPMHC+nJ4ltWQLp3nl
ml0aj+l+3ZGxE7pnzKka5jBu/IPBzp3Pb/+uNOPkZ2wonUzHYNXq5G8l/Nac
9OOG/gezMLAIsl+8/5gd5672Ds7blxj4T4SaOmYe5kT/3j2y8hXdv19GYVuV
PThhudZpUQUYWF6cKXXX5zjH94z9Yf43GPS/CxsU6fHleOg6KziUYfT/m688
2+Yc56DgkZaKCgyUHHU1vUNDOZLSJe/HqzGw2rU4pFXyCqdizaJKpToMXDu1
WQvvXOf4mbgV7WzAwHZIv986M5ajdbjwpV8jBnM+mAfXWSVyegIWPHv0CQN3
yXMPX0nc49yK5T5o+oLB47MZ5v0PH3NMMl8lzGnHIC6Z63Bb7xlHqJaM1uqi
52dgD9df7AUnq9fxsu03DGZcDM+yXvaK4yyUExzOwyDKhI+Syi3kyLKwMy+/
Y7BpTCj++vEyTv3ag149Qxh8/nK26bJxNSdkR5aL+AgGsoZV+qFFdRwOV8xe
bxyDEJ8Owc87GjmD52ys3P5gUJBck3FJ8gsnKS595y1+HGLWryNVLNs55lnC
W8tm4hAqVuogENvDEX1npTcyCwfWDyzn5PkBTl5fmvYSERzWHB+TLw0Y4njO
mrXSRAyHeRvrZUUOjnKUZPao+DBx2GZbEHzPYpLTtO6RzAMCh0TSYdLZSACF
mwos+CCOg1nGCj2z7FlIz9mMISSFQ9CkRa6T5Fw0Enh/1srFONTyR8zbX8FE
D+In/+yTwcHV7bNWxAsSWb/Y8fOCPA5bGT9WmR2TRERdcl+mIl2/SCoaJ1jo
DW/8a4cKDnP7hZWrT8sh79lGTbgaDgrLPK5+uKqIVsgm1oI6DvaHjbtzjixF
X7VHSrma9Hp7v6nulFVH13cavo5ajcPyP8I31SM0kaFLXGbxOhxa11zRXfNw
DeILHno8ROHw/afIja6zFHp6W/+ujA4OKT+39J+M0UEO2TGx2/RwaKlo9VYd
0UML6wciTm7CQdRV0qO9Wx9V9euF3d2Cw2D+lm4iaCvyn3MjoG4rDh+2HHcS
O2aM1sj1ec8wxqEov6n6cIwp6mXreC43xWFHkewmxQ3mKG7XtUOWZjho2u5T
WeZviUxdu22CLXBYqeisPj/DGs0OoSzS9+Kw7+f1iKBQW5SdcMm4zRqHofOZ
0SY1B5Hry3Z9xgG6Pz+e9SpedULy79cCZY+Dw5m6pLpWZ9QwELrayQkHpxjx
+6wuN3RBuFUtkovDAMtrfkGGJwJ5LYUCVxziWjvasG/H0BAVsui7B93fgmeO
nqEn0V2zT8TiYzgY15vH37rvgyzdNEQNTuCQt/HS61PKfohx/pyA1yn6e57O
FFAr8UcFiR/HEn1xENu64HhSdiDyylEbrD6Lw4+Xg/dtRc+jpQ1+3X/O4VAa
0P9e71UYavle36IagkOqRbm0i/sldFVEtcE8FAffQmZJWN4VpL/EpzIgHIfs
MMll240i0ASntijtCg5q9vOjFRVvoMfmijmfI3C4lsv1rN0Sg2zdTz4TjaL3
94TylbWvYpGWxqdnyjdxeGLheHpFTjwSHoT0jXF03nK1my1LElDzk4R02wR6
Pjpk9EnBO+ixm1CG7x0cPFdftNrleRedVXfMuJmCg8invUYSkvfRru9lGVkP
cHBzvKW8dfQhmnC99HwoDQeJFEnV3NVpqHLF0HNmOg7F/ksejAg+RbcHdmWq
ZeIQ7fls9+6fz9DRx5mZBtk4HP91T0xE+Dna7LowyyEXB7/+ETGJ9Vlo4Qqf
rIDXOMil2WpxY7PRQP+XrNuFOMwOFm4uk81FES7JL5rKcBg+Fn2kf9tr5Lhc
OHu0AoecpP4eibJ8xO4/nD2/Boemzdqu7RaFqM1Z46VRAz2Pcvt3Vz19g1Y4
v8wp+IqDUVG/brhcFRJQY+V+6cThKGu9tapqNarv88v900PPyzfGnEPrapA3
Vz9vzXcc0hQsrkVx36GSw7WvHvzGYa1U2uytxAcUs1TrdQkfATdkKT3mpo/I
tff66w4BAnSebrvQcrIRzT9slc8SJqDRFq837mpGNoe6C67OJ6D2j+TqXIsv
aJWqYeGTBQRoWuWZfxr4gmZ/Sy2sWEjAr+aXKxv8W9EjJ8+i2XIEnO+yFBVN
akMTjpPF3ssJOKfUNS8xpx1VKtu8uaFBwKaJLcsTtTvQ7e6CN+mrCNCWn6l/
4WkH2uwYUjKgTQDlc8Yg/kYnWqjcVzIXEeB/KPv9HcEuNNC1vVRlPQFh+qeV
N3C7UIQDWXZAn4BP8bGd65d3I0clr7IzBgSIXVz84kFwN2J3fSy7tY2AjQbc
iNefu1GrfVx5gykBeayw49o+PeiZosDbYTMCJqKyVcrf9KCgTru32B76/qU3
pA6IfUPL7VUrDPcTIO/WHCcX9g19cpR2eXiAgHsBlPvut9/QhcM4Q8yBgB7z
vA1nZveidS6znjgfIoDP28qiBPWibrdx40pnAtauFnti7dGLrnv2Dy53JyDg
SUTQ0YRetPFY25XwIwTIKJY3rq3qRQneZXXG3gRcXFsu68fqQyY+uUfTfAj4
qHVg1X69PsTn9484fpaA7y6Wd+Pt+lCqf/Jzj3ME5HdFSXL9+9DewOjd74IJ
4D9oWfwtrg+Jhlwc0wwlIP1OX4vuiz6UdeFs9LVwAuz/PF4XVduHxC8fat4V
SUB/isG50j99qOjqvtMZUQS8V9gf/pXJQ56RO6QlbhFw0z+OOiXHQ7JRm/K8
4ul+VKGkRyt5qDpGe/+HRAKw1BnSEet5yDd2+Yx1dwkYW95bpW/EQ2q35RKi
7hNwjdeOPlny0PlkkfY9aQR0Pnh/TdCDh9bdmwzIfkb3W3FmxEtvHup68ENh
USYBTpk3ZZMCeCjiUWfxqWwCoipymeWhPLQhrdHhUy4BpfYaF3Wu8dDQ08o5
KJ+AmUOFc/EYHrqdkX8vtoiAwIOcW1tv85BRVoYBXykBS64YMH4n89Bk9v1e
67cEJO0sNF36kIdSc2NDX1UREHOX70v7Ex6yfH1FTfYdASJK0YMa6TwkXBhY
6feeAFZok9/CLB7KLD7p2vaRAN3ATcn3XvKQQ6kLU+8TAeb8Rxu/5vHQ/Le2
aYlfCBhxVjCsyeehgkqzHYLtBFy2s1p5vIiHPGoMhuy6CBDq2x79+Q2dZx26
VvSNgOMM6VUiZTxU9X6llmI/3a801Mb3lodOf1R8HzhIQLnnV6fCCh5a1izl
1TVM13fqj97eKh5q+jxvweZRev932G0or+ahkFaBrJQJAkIKQGV+LQ+taf9l
IcxHwvZjFa6cdzzU2flt3EmAhL4zg5h+HZ1vz+eYMiESFgR5j62q5yG9vlpq
qTAJnyK0Pwq/56HB/uJPF+aSULKG//cb2vGDL3z6GCTIdBTGuzfQ+Q4/Ym0j
SNAUMf0w5wMP/fmV8CpVnIQA62qbcNoPxiJt5kmREFj4dGjWRx7a8/u8gOti
ErrkpKTdaQvz+SZWyZDwhZWhUUX7+QzPDepL6Pd1fDsu18hDBwUdOi4pkSD3
4aE0lzY52zJwUJUEaQXjxam0C4SNlHYsJ+HEu55DnbTd5+qV/KNBgq709c4F
TTzEYqxxIrRI0K5P09tIuxJbKnJkLQlcoVfqXNocLrc7mk0CFL3XDKWdWpxa
/BqRECIW45tCe7HsQFL3ehJiFQQ9X9MO81b3Z2wkIbOyjdtA+0+9u83qzSSs
0XlV+o02V/0pWBmSMKzzpWaCdtP54cUB20m4tsy2QKSZhww7tH7fNyHBKtCy
WYJ2Nng11uwkQSyyZbc87aXRmZmj5iQ0cpLt1WjHDI9FsixJqPvorbaatogR
++imfSTIJqrVc2ifuHfK1NmGhK8Z1f4baPfMzNW4ZkeC4pfbuwxoW+zjY2Y7
0Hltv3nAiHZppk5/6yES4oRzi01pryPOvp3jQoJ7dVSkOe17zgX3V7iT4MnU
bt9DW7JEMMTsCAmh0T9zrWgHy21yOO1FgsP4ktX7aY+cCtqYdJKEAWvB3ba0
HRpK5MtPk6BK3F1uR7tBQ0TgxxkSpEY2FBykrR9q+GVBAAm9XHGWA+3nnaG5
EETnMc/HwJG24vrKm/bnSZD/aWLoRDsihuEdFkbCMf5JxUO0hX4ZWzy7RILH
JK9tykeNr6xpukrv5+1D/odpd9x/N1/gOgnqzvvEuLR3Cc0fVo4mwV94+9kp
F1qb1Rrdop+nWjumrPni+pNj8SSsNhRhO9NOJD9evJVIQmvSNf8pE65SzoXJ
JFDskVdT9i+1NOy9RwKT/97wlIfkb6ngqSQod8jIuNC29fk8e90Tet6a6zdM
ueYDq9P6KZ3PTGW7Ka/XtCkMzCBhJn+1z5TTwhISUrNI2HHUKGLKst1fz9S9
JOHksErKlC/rKlhP5JGwaN7X51Pmv2XPkSsgoWHHZOGUXUfuLtxSTILkWb7q
KbeY9Iy5lpJwOnHvxykbPVT9EPmWXu+RYeuU82ZxM3Kq6HlbPNw15RU2qdfa
a0kwcD3Nm3Jcdr+H6HsSjkozfkyZIa5usvIjCZF3q39O2cfNfYVFM51nzODo
lHll/4idaSFhn+TtiSlbKQz3JreRYHqu58+UK3y1yio66P164h2fK21O47GU
4W76f3DRYcaUJ/ROyV76SddrYSI05RepftFLBeZDMnfb7ClLmdcf8XadD/52
rsJTPsmvYlTePB/ejY7+69fOJoaLNotD7ZX/LNx0Qt/5qTgI3Rz8114623jn
JCRA0633X7ffkbka6y0BlQtq/3W2/SLDpd0SsFmq9F9fVVowM3PnArjj8epf
X/6Sazf3xQKYeJH3r8OjDhbvZ0lC4IX/fES8dUvGWUlQOv+fLa7urRDt/OuU
w/wH6k2kpj2ilzQam/PXbe3rvV4HLpz2bUpd6u3+RdN+GHCEab9s8bQDd9oa
CAz/9aqm+JTAt9LTvq4c/fCtAWvaPnmh1w0y/3qr1M6kUnmZaes4F+9hBv91
7EIb+fLhv5bPT47Ytkd22uHLXqvU5Pz1wR8zq0tU5KZt82SQFXzxr8NrREML
iv8654fC6OTkX/8f82fqhA==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.835042176049677*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1675,810,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.835042106709088*^9, 3.8350421761293936`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1675,811,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.835042106709088*^9, 3.835042176161267*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1675,812,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.835042106709088*^9, 3.835042176191186*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1675,813,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.835042106709088*^9, 3.83504217622111*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1675,814,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.835042106709088*^9, 3.8350421762540183`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,1675,815,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.835042106709088*^9, 3.8350421762839403`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1675,816,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.835042106709088*^9, 3.835042176311864*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1675,817,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.835042106709088*^9, 3.835042176356207*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
WPzXeWNLp+bm/vo/SQ/8lg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQLerMdvoOxwd7CV2XkN+KP/ffe/XnnY8Agj9j+RXG
y7IIfmDKGpFIbQSfS7FF/b4Fgn9mhrrmgTMf4fw+gdNaCxM+w/lJt0P2M5/5
BucXHm1Jylf/BedvLOAJlvD8C+cvrM5+ZRDO4ADjN83/E/jlDSOcz3D5gcOe
KmY4X60krSJEixXOf/J1ehj3XjY43+tpVu2kQg443+/JBG05OS44/9XhpIYT
a7nhfD3Ba7LO8bxwPpf918Q7n/ngfPe3Ud+VQgXg/BuHUhijdATh/K0dR+IU
viL4aaylD86dE4Lzk4uqt/LMEobz9dO1z/kkisD554V0uEstReH83euaZusw
i8H51YxaAWfuIvhcd6o88raIw/lPlylOmV8jAedP0ZBk2RkqCedPmJV2PFFB
Cs6PmhJ7juc5gv/DZenP+fuk4fzHT50qDrXLwPmLbA2lzybKwvlrW0sF03Xl
4Pz20GRv5q8IvumdhSvbz8rD+TM0Z689660A59cf6J3hvRPB95UOXXpKRRHO
d8w7Hi3YieDPl0lSOfMVwVc5vHyaX7QSwn+6h7Qu7UPw0z6zXDyppQznJ238
pNDZj+BPuMTTe+Q4gr/vs9rP//8RfADyAW0Z
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.83504217645993*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.01, 10, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$107976$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$107976$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.01, 10, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {276., 283.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.835042176508681*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 102, 1, 111, "Title"],
Cell[685, 25, 93, 1, 32, "Text"],
Cell[781, 28, 262, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[1068, 37, 159, 2, 78, "Section"],
Cell[1230, 41, 25648, 625, 1908, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[26915, 671, 104, 1, 62, "Section"],
Cell[CellGroupData[{
Cell[27044, 676, 169, 2, 53, "Subsection"],
Cell[27216, 680, 789, 21, 58, "Text"],
Cell[28008, 703, 2120, 55, 270, "Input"],
Cell[CellGroupData[{
Cell[30153, 762, 6984, 175, 606, "Input"],
Cell[37140, 939, 505, 9, 23, "Print"],
Cell[37648, 950, 59976, 1048, 293, "Output"],
Cell[97627, 2000, 29494, 538, 295, "Output"],
Cell[127124, 2540, 2405, 47, 605, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[129578, 2593, 176, 2, 43, "Subsection"],
Cell[129757, 2597, 813, 18, 78, "Text"],
Cell[130573, 2617, 2262, 57, 270, "Input"],
Cell[CellGroupData[{
Cell[132860, 2678, 6984, 175, 606, "Input"],
Cell[139847, 2855, 595, 11, 23, "Print"],
Cell[140445, 2868, 65220, 1134, 293, "Output"],
Cell[205668, 4004, 36371, 647, 295, "Output"],
Cell[242042, 4653, 2491, 49, 605, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[244582, 4708, 217, 3, 43, "Subsection"],
Cell[244802, 4713, 661, 10, 73, "Text"],
Cell[245466, 4725, 2721, 67, 270, "Input"],
Cell[CellGroupData[{
Cell[248212, 4796, 8576, 214, 738, "Input"],
Cell[256791, 5012, 785, 13, 23, "Print"],
Cell[257579, 5027, 14496, 286, 288, "Output"],
Cell[272078, 5315, 165167, 2772, 293, "Output"],
Cell[437248, 8089, 104955, 1795, 295, "Output"],
Cell[542206, 9886, 2649, 51, 577, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[544904, 9943, 263, 3, 43, "Subsection"],
Cell[545170, 9948, 1902, 34, 99, "Text"],
Cell[547075, 9984, 2836, 69, 274, "Input"],
Cell[CellGroupData[{
Cell[549936, 10057, 8466, 207, 738, "Input"],
Cell[558405, 10266, 967, 16, 23, "Print"],
Cell[559375, 10284, 24117, 445, 299, "Output"],
Cell[583495, 10731, 37433, 679, 293, "Output"],
Cell[620931, 11412, 289, 6, 50, "Message"],
Cell[621223, 11420, 472, 9, 23, "Message"],
Cell[621698, 11431, 287, 6, 50, "Message"],
Cell[621988, 11439, 471, 9, 23, "Message"],
Cell[622462, 11450, 289, 6, 50, "Message"],
Cell[622754, 11458, 367, 7, 23, "Message"],
Cell[623124, 11467, 472, 9, 23, "Message"],
Cell[623599, 11478, 369, 7, 23, "Message"],
Cell[623971, 11487, 18930, 360, 295, "Output"],
Cell[642904, 11849, 2853, 54, 577, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

