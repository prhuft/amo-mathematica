(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    643573,      11954]
NotebookOptionsPosition[    640355,      11859]
NotebookOutlinePosition[    640728,      11875]
CellTagsIndexPosition[    640685,      11872]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["qubit rotations", "Title",
 CellChangeTimes->{{3.8350140506299047`*^9, 3.8350140530905385`*^9}}],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.8350428197281413`*^9, 3.8350428322639785`*^9}}],

Cell["\<\
The math here generalizes to other qubit platforms, but for concreteness I\
\[CloseCurlyQuote]ll use the language of lasers or microwaves manipulating \
atomic qubits. \
\>", "Text",
 CellChangeTimes->{{3.8350140667185225`*^9, 3.8350141035261445`*^9}}],

Cell[CellGroupData[{

Cell["functions - run first", "Section",
 CellChangeTimes->{{3.835017129202883*^9, 3.8350171605143223`*^9}, {
  3.8350173445190353`*^9, 3.835017345667758*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BuildMasterEq", "[", 
     RowBox[{"\[Rho]0_", ",", "H_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dim", ",", "rho", ",", "eqIdcs", ",", "comm", ",", "linblad", ",", 
        "rhoPruned", ",", "eqsPruned", ",", "rhoICPruned", ",", " ", 
        "popIdxList", ",", " ", "cohIdxList"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "The", " ", "junk", " ", "below", " ", "just", " ", "builds", " ", 
         "the", " ", "eqs", " ", "to", " ", "be", " ", "passed", " ", "to", 
         " ", "NDSolve"}], ",", " ", 
        RowBox[{
         RowBox[{"removing", " ", "the", " ", "redundant", " ", "matrix", " ", 
          RowBox[{"elements", ".", " ", "The"}], " ", "derivatives", " ", 
          "could", " ", "be", " ", "worked", " ", "out", " ", "explicitly", 
          " ", "and", " ", "typed", " ", "in", " ", 
          RowBox[{"(", 
           RowBox[{
           "just", " ", "the", " ", "optical", " ", "Bloch", " ", 
            "equations"}], ")"}], " ", "but", " ", "this", " ", "can", " ", 
          "the", " ", "heavy", " ", "lifting", " ", "for", " ", "higher", " ",
           "than", " ", "2"}], "-", 
         RowBox[{"dimensional", " ", 
          RowBox[{
          "systems", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\"\<Pruned\>\""}], " ", "variables", " ", "refer", " ", "to", " ",
           "the", " ", "eqs", " ", "which", " ", "have", " ", "had", " ", 
          "the", " ", "redundant", " ", "element", " ", "removed", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Args", ":", " ", "\[Rho]0"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"the", " ", "initial", " ", "density", " ", "matrix"}], ";", 
         " ", "H"}], ",", " ", 
        RowBox[{"the", " ", "Hamiltonian", "\[IndentingNewLine]", 
         RowBox[{"Returns", ":", " ", "eqsPruned"}]}], ",", " ", 
        RowBox[{"rhoICPruned", " ", 
         RowBox[{"(", 
          RowBox[{"the", " ", "pruned", " ", "initial", " ", "state"}], 
          ")"}]}], ",", " ", 
        RowBox[{"rhoPruned", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "the", " ", "pruned", " ", "set", " ", "of", " ", "variables"}], 
           ",", " ", 
           RowBox[{
            RowBox[{"i", ".", "e", ".", " ", "elements"}], " ", "of", " ", 
            "\[Rho]"}], ",", " ", 
           RowBox[{"to", " ", "solve", " ", "for"}]}], ")"}]}], ",", " ", 
        RowBox[{"popIdxList", " ", 
         RowBox[{"(", 
          RowBox[{
          "the", " ", "indices", " ", "of", " ", "the", " ", "population", 
           " ", "terms"}], ")"}]}], ",", " ", 
        RowBox[{"cohIdxList", " ", 
         RowBox[{"(", 
          RowBox[{
          "inds", " ", "of", " ", "the", " ", "coherence", " ", "terms"}], 
          ")"}]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"\[Rho]", ",", "t"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "H", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rho", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Rho]", 
             RowBox[{"#1", ",", "#2"}]], "[", "t", "]"}], 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"[", 
              RowBox[{"#1", ",", "#2"}], "]"}], "[", "t", "]"}], "*)"}], 
           "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "enforce", " ", "conjugate", " ", "relationship", " ", "of", " ", 
          RowBox[{"\[Rho]", "'"}], "s", " ", "off"}], "-", "diagonals"}], " ",
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eqIdcs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"dim", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "dim"}], ",", 
           RowBox[{"j", ">", "i"}], ",", 
           RowBox[{"j", "--"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"rho", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i"}], "]"}], "]"}], " ", "=", " ", 
             RowBox[{"Conjugate", "[", 
              RowBox[{"rho", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"eqIdcs", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"generate", " ", "non"}], "-", 
         RowBox[{
         "redundant", " ", "eqs", " ", "and", " ", "initial", " ", 
          "conditions"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"comm", " ", "=", " ", 
        RowBox[{
         RowBox[{"rho", ".", "H"}], " ", "-", " ", 
         RowBox[{"H", ".", "rho"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"linblad", " ", "=", 
          RowBox[{"\[CapitalGamma]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Sigma]m", ".", "rho", ".", "\[Sigma]p"}], "-", 
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}], ".", 
                 "rho"}], " ", "+", " ", 
                RowBox[{"rho", ".", 
                 RowBox[{"(", 
                  RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"rhoPruned", " ", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eqsPruned", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rhoICPruned", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{"dim", "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "<", 
             RowBox[{"dim", "+", "1"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "<=", "j"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"eqsPruned", ",", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"rho", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "t"}], "]"}], 
                  "\[Equal]", 
                  RowBox[{
                   RowBox[{"-", "\[ImaginaryI]"}], " ", 
                   RowBox[{"comm", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], "]"}], ";", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{
                  RowBox[{"+", 
                   RowBox[{"linblad", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ";"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"rhoICPruned", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rho", "/.", 
                    RowBox[{"t", "\[Rule]", " ", "0"}]}], ")"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "==", 
                  RowBox[{"\[Rho]0", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"rhoPruned", ",", 
                 RowBox[{"rho", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "generate", " ", "indices", " ", "for", " ", "population", " ", 
          "and", " ", "coherence", " ", "terms", " ", "in", " ", "pruned", 
          " ", "eq", " ", "list"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"popIdxList", " ", "=", 
         RowBox[{"{", "1", "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cohIdxList", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"last", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"elems", " ", "=", " ", 
        RowBox[{"dim", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", "+", "1"}], ")"}], "/", "2"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "elems"}], ",", 
         RowBox[{
          RowBox[{"i", "++"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", 
             RowBox[{"last", "+", "dim", "-", "j"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"popIdxList", ",", "i"}], "]"}], ",", 
              RowBox[{"last", "=", "i"}], ",", 
              RowBox[{"j", "++"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"cohIdxList", ",", "i"}], "]"}]}], "\[IndentingNewLine]",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "eqsPruned", ",", "rhoICPruned", ",", "rhoPruned", ",", " ", 
         "popIdxList", ",", " ", "cohIdxList"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "graphic", " ", "for", " ", "creating", " ", "a", " ", "state", " ", 
    "vector", " ", "on", " ", "the", " ", "Bloch", " ", "sphere"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BlochSphereVector", "[", 
     RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Specularity", "[", 
           RowBox[{"Pink", ",", "5"}], "]"}], ",", 
          RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
          RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
            "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Thick", ",", "Dashed", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*TemplateBox[{\"0\"},
\"Ket\"]\)\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1.3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*TemplateBox[{\"1\"},
\"Ket\"]\)\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1.3"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<X\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.3", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Y\>\"", ",", "20"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.3", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SingleQubitRhoPlot", "[", 
     RowBox[{
     "\[Phi]_", ",", "\[Rho]00_", ",", "\[Rho]01_", ",", "\[Rho]11_"}], "]"}],
     ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"opacity", "=", "0.75"}], ",", "cf"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"cf", "[", "x_", "]"}], ":=", 
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "Blue", ",", "Green", ",", "Yellow", ",", "Red", ",", "Blue"}], 
           "}"}], ",", 
          FractionBox[
           RowBox[{"x", "+", 
            RowBox[{"2", "\[Pi]"}]}], 
           RowBox[{"4", "\[Pi]"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SquareBar", "[", 
         RowBox[{
         "xmin_", ",", "ymin_", ",", "width_", ",", "zmin_", ",", "zmax_"}], 
         "]"}], ":=", 
        RowBox[{"Cuboid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "ymin", ",", "zmin"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xmin", "+", "width"}], ",", 
            RowBox[{"ymin", "+", "width"}], ",", "zmax"}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"Graphics3D", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", "Blue", ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"0", ",", "0", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", "\[Rho]00"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", 
                RowBox[{"cf", "[", "\[Phi]", "]"}], ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"0", ",", "1", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", 
               RowBox[{"Abs", "[", "\[Rho]01", "]"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", 
                RowBox[{"cf", "[", 
                 RowBox[{"-", "\[Phi]"}], "]"}], ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"1", ",", "0", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", 
               RowBox[{"Abs", "[", "\[Rho]01", "]"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "opacity", "]"}], ",", "Blue", ",", 
                RowBox[{"SquareBar", "[", 
                 RowBox[{"1", ",", "1", ",", "0.9", ",", "0", ",", "z"}], 
                 "]"}]}], "}"}], "/.", 
              RowBox[{"z", "\[Rule]", " ", "\[Rho]11"}]}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*TemplateBox[{\"0\"},
\"Ket\"]\)\>\"", ",", "20"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", 
                 RowBox[{"-", "0.3"}], ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*TemplateBox[{\"1\"},
\"Ket\"]\)\>\"", ",", "20"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.5", ",", 
                 RowBox[{"-", "0.3"}], ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*TemplateBox[{\"0\"},
\"Bra\"]\)\>\"", ",", "20"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2.3", ",", "0.5", ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\!\(\*TemplateBox[{\"1\"},
\"Bra\"]\)\>\"", ",", "20"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"2.3", ",", "1.5", ",", "0"}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"BoxRatios", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "1.5"}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
           RowBox[{"Axes", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", 
              RowBox[{"Text", "[", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<|\!\(\*SubscriptBox[\(\[Rho]\), \(i, j\)]\)|\>\"", ",", 
                 "20", ",", "Black"}], "]"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"Ticks", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0.25", ",", "0.5", ",", "0.75", ",", "1"}], 
               "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", "2.3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", "2.3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"cf", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "\[Pi]"}], ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Phi] [rad]\>\""}]}], " ", 
          "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "convenience", " ", "operators", " ", "for", " ", "grabbing", " ", "the", 
    " ", "two", " ", "qubit", " ", "elements", " ", "out", " ", "of", " ", 
    "the", " ", "solution"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]00", "[", "soln_", "]"}], ":=", 
   RowBox[{"soln", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]01", "[", "soln_", "]"}], ":=", 
   RowBox[{"soln", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]11", "[", "soln_", "]"}], ":=", 
    RowBox[{"soln", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"qubit", " ", "angle", " ", "operators"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theta", "[", "soln_", "]"}], ":=", 
   RowBox[{"2", 
    RowBox[{"ArcTan", "[", 
     RowBox[{
      RowBox[{"soln", "//", "\[Rho]11"}], ",", " ", 
      RowBox[{"soln", "//", "\[Rho]00"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phi", "[", "soln_", "]"}], ":=", 
   RowBox[{"Arg", "[", 
    FractionBox[
     RowBox[{"soln", "//", "\[Rho]01", " "}], 
     RowBox[{"Abs", "[", 
      RowBox[{"soln", "//", "\[Rho]01"}], "]"}]], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8350158580106945`*^9, 3.835015895414342*^9}, {
   3.8350159260350294`*^9, 3.835015993351922*^9}, {3.8350160899382915`*^9, 
   3.8350160944819074`*^9}, {3.8350163878331795`*^9, 3.835016445804765*^9}, {
   3.835016489302936*^9, 3.835016531223361*^9}, {3.8350166360449095`*^9, 
   3.835016809842594*^9}, {3.835016939424097*^9, 3.8350170940224*^9}, {
   3.8350172551612997`*^9, 3.83501728217809*^9}, {3.8350173250726986`*^9, 
   3.835017331923233*^9}, {3.835018177893467*^9, 3.83501821769398*^9}, {
   3.835018249750198*^9, 3.835018285691367*^9}, {3.835025009194661*^9, 
   3.8350250518057313`*^9}, {3.835025169192734*^9, 3.8350251828649235`*^9}, {
   3.8350252875298595`*^9, 3.8350253561705756`*^9}, {3.835035724979285*^9, 
   3.835035807888835*^9}, {3.835037068274298*^9, 3.835037121125121*^9}, 
   3.8350397801638002`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["single qubit gates", "Section",
 CellChangeTimes->{{3.83501543697373*^9, 3.8350154458301334`*^9}}],

Cell[CellGroupData[{

Cell["Rabi oscillations - resonant", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835042413463442*^9, 3.8350424168678756`*^9}}],

Cell[TextData[{
 "Population transfer between ",
 Cell[BoxData[
  TemplateBox[{"0"},
   "Ket"]]],
 " and ",
 Cell[BoxData[
  TemplateBox[{"1"},
   "Ket"]]],
 " by applying a constant laser or microwave pulse on resonant with the qubit \
transition. It is clear from looking at the Bloch vector that the Hamiltonian \
is performing a rotation about the X axis. When the rotation is through an \
angle \[Pi], this is called an X gate. This can also be seen just from \
looking at the Hamiltonian, which is proportional to the Pauli matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "x"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8350362044024034`*^9, 3.835036267954064*^9}, {
  3.8350363230918264`*^9, 3.835036491716954*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", 
      " ", "approximation", " ", 
      RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.8350362743759365`*^9, 3.8350362745025606`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.001", ",", "1", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.015625`"}],
  SequenceForm["Time to run sim: ", 0.015625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350362774249263`*^9, 
   3.8350372242021976`*^9, {3.835042384029936*^9, 3.8350423887852516`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mllplEJJ7ZtbdfRX2Ij+PBYUX4r6+FV73FO+4mOJV/xWnTJM65qGThR9hfqF
rYavTMqhXPhbv+rbV4wd6LJ+WfMZPb77Blz/a8eq+oL9T+qqwLvpNTE62o72
xqFaXZMGHDPyHfg20Y4+5t873Y8a4Bhq2TDCasdu6f4jvmUN6GTf8Jo61w7v
8z1Gx3c04sV4gEX/6g4UCHYFms01Qjb3atNXhQ40LAb2tyc2Q0dV9k2FXwfe
9K6Z/sDRimC795cTJTqRJM87OxzVjt/H3ozaenbh6SfF02Y9/XCSr8oXquzG
m9tl9rHWIxjKrnrUuq0XbmoT9ULe46AwORjyO3pxc/BHml/YOMpl1LUjZXrx
pdx031TCOBIzqlcbK/VCceDyQlLpOKxf1Tzu1+5F2+Ux//zFcYzH14XSnHvx
c4OLsKUTDczgxoi/Tb3gvLKO29iSjsWr7c933uvDhEZjidqGSRgong+X9ewD
bYN/k5vEJDLZx/33+/Wh/sktzvS9k7CInr11NKQPG3U6y8dOTuJztehJveQ+
PPJN5aK5TOLh1gs/Xer74Hzg87mlzkms72Rq14n248pOm2tyj6ZwLemuStOW
ftj/4PwjEDWFqmv/lNok+jHrpaJDJE7h7nK+7f2y/RDz4uTxKZhCz16FeUKl
H+7HDFo3D08h4dG9l8L2/RAxjb4jo8DA7uNcS5c/9kOg82nlmVYGcjPe7Ogu
74fGfunvvn0MKAjo6p2q6UfxC9L3YwwcoUWn7m7th3f1D7m6eQZOP96l9X28
HwZGcSn625hw7NGJduUfQFWyUWu0AxO/VWY+TwoP4MDR3oX+u0y4ZUZNnds0
AIN7p+r4vJjw8xxSVpYeQA571nadJ0xESd4aW6Y8gNiTXVkrC5govhUpH2w3
gIpoudiwBSaU+w6a/70+AEq9y3TPMhYq1AYeXHcawE8ueZX1PCzUC0v16HoO
QP3X1RzDjSz0fyr0FHw6AOVu+Y4Nh1lgW9XX+KJ8APuS/siFO7NwInnblbfC
g4jUfriPb5QFhWheqRqxQYjLD7RRJ1jYGrI42rttEDU1N2KSCBYWXDusOWQG
oX27xe33AgtZeoEWxscG4RI0OMhYR2A9+7ThX9tB+F5GKdchAmyzAwL81wfB
ke20gaZMgMGo/yp1exCqI09OFKqS/Xl3qp6uxyCkWfbrd+kQcM010UkJH0RG
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
3A3GUxdUdYzuWUygYd3bY42me+7Coof9xM4MGh7+EDi4/OMtqImeasrPpCH8
S0CXwrub2H0uTP9YDg3Nli+Op1rfwFz/ZivjfBqk5R83p4XYY3DT5fGRAhpa
tll7OpfYodoi69r1Yhr2clZ8l1q4gifUw64PSmn45cvts++lDVy2+f5b95kG
PS5rk3D+i7C0rn8QV0lDgL6MeV/oBciMmjzJq6Ph538zb687nQe/ZOIGNNBg
yj2wLq7ZDPOXaC/qm2goXHcnNfekCWpod94Mt9EQOPLqbnycPjKlP+1z6KCh
89FhGee7eoiw4yia66Lh9eaWSTfqadzL0FL266Vh5Dbr57f1WrCaelK1doCG
8lyHWqmHJ6Ah06v5fIiGKvuxd2qH1LDHYVur1AgNXYdZXMp7jkMg29b43SgN
7U7HZaXKj2CBlTNwlEbDMvbd1gEvlUCVm734ZYKGpVP12imr9qP2pvKkAYMG
xp/EzcTgHmS/fXCTyqLhe+LAU540KUTONP62n6bBZSTzePzNrXDbL+Ax+4Mc
/2+kTvOWEKydzi33/U2DVZP8sqdsq3HyfXIg7zzpN6V1ld8PLinL/Z5YG7tI
sqHSGH8PXVlIaV+U5BLJYt17p4eqlP84u4i9ZaODzURaYPNUmvK3orLkI8tJ
fr3iaeiHPuX6ec6ddSvoKHfnFZ7g+6Wce+h0jj43HV7Fj7VjolfgmdvTA0Or
6Njb/SJBXJ8f90v6P15dQ7JuWMFS90bY/N2u8nstHQfZvhdOZ2+HprJ9nTc/
HVZGO9Mmbu7CPs93p9cI0rHqxG4lBZF92FA+3x4tTEfUModXha4HsMR2/JyE
KB0zPDyV/0wPYfR4wHCOGB2DkYqyaz4ADT4tVw5vIcevhKl9b1RBNIeF01kJ
OpZWun1xuHaK7K+ED7RK0RF03JM+xq0Dm0rKrzM76aCn/ky5eEsXe31UnXVk
yXjYy89bvzZA1PAfpca9dARc2lNk/90If44VzGnuJ+Ofebtsm4kp6v5J3zt5
kNRnQLz1vq8FZC1HDtUeIufvp/iFplghsvT5ovpRUq+iNzpZAtaw8uD1UFWh
o0iuPuaLxCXMLvzwVNb+f37xPFp/7GFulnXs02k6fi4Wu5/udkBF8WX2I3p0
SPBGLQ+tvIEQlx6f/4zoOKsf4jv07Rakfpc+ULCi4xsz66qu6l0EG7po5FmT
+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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
cuELBbmX54NOkX7Z5YV9BW8Ouf/nq7crkn5aYyL1gXgB2edPe6gxpwhwnfi+
U66UAt7p3i8PSD9em6U8plpFQbx7UcQvkn/8xB2jtOsoiJAp/6dH+vlTj76c
Nmmm4N6cV6sn6fcl+3+suthBQZV8tEQEyT8DWjurHbspEGpPpwSRfBAX5/T4
CUHB2NqTvE4kP9ityNjty6SgR2Z9hgLJGyoOv9jhoxQ486e2VpN6rm1XTNIE
BQf/RdoeJvmkRM3ZPP8XBY2ivi4fSO39PlOodpaCxLsiHP/nG/3FqW/UvxRY
69Rz/Pk/H13c7Ta8hAqPGOMH/+cjatXtPTPLqAjNhEM7qSO2Zk9yraRCJWRH
nz+pbV7PxAoLUUE4l9XtIPXWn6qWG9dQseWaz64v5Hq+m94V3SFJ/v97RTFB
Umd9zamHNBVV2zTuG5P7ub9u1sNQlgq1A2fPOpH71XTbs89iGxX3f0p+vUXG
g3vQ5ed1ZSrW2UkHmZLxqj/6Nf7+biqSW5dMryHj6Z/0x+r5XipyDp1ryyPj
fVpgr1gwqPjWV7NTg8wHk5LnnaVLjr/j6N0hklcT9s0fqDCkIkXujQUfmV+H
D/umW09SYU09Uy1A5n/hcsHF7xZUpI91bikk+aesdkFi0ZqKa/6lG2zI8/NM
6UDryqtU+D8MDmeRfC0yU6i5zYmK69F3FcNI/u4+8++3+l1yPplszUqSzyML
NVKPPqQizsGgt5HkdwWv4nWXvalIm/+Z4kHy/c+RxXbnl1TQAi8OK5E8lKuv
+crDj4rRJZXJeSQPaYmUzkWGUhFsPDB/i+QhXhfO9NQPVIzw3fONKiPQ3HPQ
tiiGHJ//c01qEcnfH8soPSlUtEQ+PmyXTcB5Z0Xm6nIqjhHCnM4x5H1UkYp8
U0PFR+FrRvhAxkv14csVjVSctJ1aNhRCYN9eFeslXVTYpzU1VL4msORQzKqJ
CSoCdtU8bbpDYOowx/zVKSpiZodYdxwIDGqfG2L8IfNl+Hrqjy2BGl2Rwi6u
LigwIwUDzhHwNfa8VinRhfgDfw2ENMn7frLP9P8+e5D/WXzQHpL3TfcfzN/c
hRN9k4OzyuT9ODO15otyFx7nP9lwXJq8HxdsKsN0uiDV1XhVj4PMn4OWlLNT
F555Ni88z6EjzCmSb/JuF84E6q5oSabDx3lhxvZRF1b8N/ty6iMdDi6ZDeef
ke+H6gm3+NKh9mTTA72ILqzx21bZf4ms575cnRtru/DgblHzTZKHst9YlYY3
dUEpKv28O8lDcQEFSWIdXQhxVN3vTPLQyyBnD/6+LqwOPiz6vZuGEx+YynPT
XWiZbqnVjaOBSKl42SLdjb1VKZZv9tPQPM7F3klyyAYiULJciYYSBW39QIVu
PA9NPNAuRUNkQuUKM7Vu2D9boAVy0WAdW+XTq9+Nd7VSlm9qezEUXuM7fLcb
Mvmhzk+NejH+qj7gb0M39LS5MarVA3rdiinLtm5cUMpNkt/Vg0ZeA5MSajc4
j44X60n3IOVZg4gHoxtX5Yuldv/thoNn41ueP92IvSHSEpHRjakHzUHCm3oQ
0dq2lJDoxvy19vfy98lxtM8HprdRYaJq8UbJtQfVV+IqSoqpSOIc8t7l2YNf
5ue+ZydSYRn82/EA2efLVWa9zD2oKK2UOGoc3QPef58Ln+6g4qnUhSmX2h5s
CNu68JCs28Kd4/o1JOdxV5/Zc1WuE9sOLvt3Ob8XSS9j5mW2tJH+O3ELtaQX
BxJv3M8kfZqKiJGxblUvQpZLqG//3or9w8Ex21pIXzDCP8vIbYWhz1a970O9
2PLz23JD3VY4dRkE3xMi43q9bljzcgu+OgbufGVLg6f5leblMk04Ei195csa
OpapNmrX2VZDJZhftkqSjiOstIMnlaoh9Xqe2S1Nx/zSH5srflZh7l6HNZcC
HUqHnV5feFCFZOPnlmaadJQrFx5487ISwpw/TP9epeOUlLfBn8/lIM6XaOnm
0dEyGd6r/KkY9abJSy2L6XAavDluI1+MXL3QMqcKOi5I+i3eSy6Cv5qzZlgj
HV6TqwV1swqhvUpu/yTpE9KDcexZeT4Si3x3veUj0LQ5WnGmOwd3153f2E/e
qxmq09npH6mwNlI+1XuBwOxPxRcuf1Jg6MH5gnKZrBPK8xvoHCmQHf34o4G8
p0XFTBWTVUlozxwpyfMk6/hI5H/c2+KgrO90PjCJrDtTG42MLCMh6Xo4wPcL
WZdraxJbayKwLF2k+gVZR/4Z7d4/3B4G+pocJbcSAk9jFs4Us4PxijH/9yZZ
x2rVkkPPr30Dl9UNO2y7yDo94bWYYfAaF3UjLtmQfVrEbVn7S5sX2Juq2fD/
3yFtluzx+/XGHbIDgpynyD6ctvwPQ9T4EQRFGSrGZJ02cveMkXt8GwtHMq/q
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
0Zo=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
G2VDcg3nhT8aEm1Q76KGryT5z7FKoczNbVgf1/cwhbR/VwTPTv5tbRANMYmX
I9n5i9lRX/k2nPnzO/MZef5EsWS7r3vaIKL1qpKd5C82jKuqym2YVTlLPUn6
jzdNOSZZtQ11eRv5o0j/akwE5S/XaIOKX83Ryr8E/BVaGt2PtmGtjVZULxmf
/PNiY20GJKvFskbI+NFKHZeUTrbhz2i+TR8Z3w2LeWJPLdpwRTZwtIqMv5nm
/F62/9pg3TsfGP2bQOhdHUMn+zZYNK85aE7my5zQQNAujzY8rR6fT50m89dS
NjHatw02rnd4d0+R50k8/2buUhv2PY1UzSbz88s2HsaHoDYIT2XwnP1O2qOq
bGYZS57XwT9s1ShpT2CQ1/vENty6xBzkJ+tjQ33zvS2pbcjOsbWbo5DfP+FY
wcghz98oyP60j4Cr88NtgR/I+HRvHObuIPP/Zf+R8YY2mK6Q+HGplay/qW2n
9VvaoD2Vo9FF1rPW1YpIkZ42/Nxnk2NF1vvGyO9zWaw2ZJgkUSPfEqiwC8gq
/Ena8zpnV2YpmX9715x6+6cN1a08G/KLyf7WrVLatKwdlJdS9Id5ZD+SvH+R
WNuOBdZiYmIKgTcsSZk/69sRvOeliUoSAfOqgi62ze1w4w2rr39K4LFDzz6h
He3I/+E4VxRNQChb9uc+tONFaNj0txACBVffpahptSPrjgDXP7IfGh83Pqlz
rB3Vv17+FrxBIGLqUoGFSTvCovKu81wkwKdc73XFpR3CveyP9ZwIcNU6MSoj
2lEWLKTx9zCBtMdzTxui21HpMzQjT/ZrLZcw/fa4dmjfjv9orEwgiKc4ezi1
HXsfqX90J/v9ojHnWa7Sdvy3ZbqUECXzdSBlTI/aDgHuctN9TBa+z1IGu3Z3
4FHjh+re+yyUuETU6O3vAFd50OVXt1i4+VX9ReWhDnAkTN/xuMbC2jeJHlk6
HfjWUtr63oMFjYvW/66d7kCqELX3iREL8b+6xaTudmDFnVNlB8j5qTvdbOpL
6YDuHtlDPiFMrLG7foA22gEDsy2HcY2JwTZ5idOTHXijsap1wZeJC/kPRrR/
d5D3q6YiA1smkryO+YrxdmJq7WidogoTM8zaiKr9nfirG7tL7jsDaZNvGwXC
O5G7oJXPq8GA5xOjrW6POrHFrPjXXmUGlLVGrtbFdqL42tAbQ3kGGhN5dl5L
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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 6.573035283614884*^-14}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV0Xk01Pv/B3DbmM+ULKUylpCle6srLUx86fm2VJKQFEoiVJLoSgplKSoh
FYprzS5b1si+jZiZIqVSWW66Kl0huhR+8/vjdZ7ncc7rvM7znJfyUU8rVyEB
AYFm/vx/mrqOdDV82r/t2zpj65/KDCJiJOvVz9wCxz6W2w++N6fcSyxlGoMl
fKv6C98f5FWDfdXNwepZbfiK793c3pIkpjXkDrIXavhWjVDIXFC0g+F7k8l4
vn+ZOt91UnfA+IyBvCffn6/0tDjFOYHh6Oqnx7eNy4/a20wXsExPLRHiu8VI
trI58RjKtGZ66pUYRFNFv/i7ohvGh+4+8+E7UcgxVy3dHUPWtQsqfFNDIfcP
qJ8G7ynbqUORQaoHurnN1l6o7J2fOsG3l6WLqX3cGVhr3Hm8sIpB3m24ahTJ
PIu676q9y/mOSZFpUDvkA+E6lXWxCgxiKpGnV5d4DrsDavLF+K74l6M1pngB
pbHzWz7IMcgpB4eSq05+KLoQrWPM92remIZSuj/SHSOPJ8oySFTB0t/2ql9C
BT1FV4vJINsVMjI+HQ/E/ww+vvWRYZBLbQmSjdZB8HCbu1+4kkG2aK+PtIsL
RnW9eAy1gkFSl1uEhTOvIPqf7LeHlzKIP/duy4HqKzC7l+F5RIpBDoQOCKkc
CsVH3VcydpIMIjZ1JvBxYhgWbajN3CLOIOd7Ys6PKl5HSMcr9wgGg+yLeFfx
qOE6Ih2VzppTDKJhrD51xSkcyn7/BVF0/j9LK88opN+AQUpOsosIg+y98+ak
uXoUot5pptXMU2T9bpVcWXYU7r9rDt02RxFK+NQ/H4/fBCdf3+7RT4ocqZp/
WG8djcGn3o13/qPI8t+jNWzjbsG70cjo0zhFgqnSNdeZMejr8FQR+5sia3fe
ulbiFYM1OirT/QMU6Q71/NTHjsHpNBnxvPcUURVe/0DjXCz0GkNmld5QpG0u
Q6OnOw7nN0ew4p9RRGwyTksxIh6qRb97FD6mSPlGnziTv+Nh7HNM6sMjijh4
7ftxRjcBrjVjqRIVFCn6KlHVMpKADOleN5NiiliNXNM7uT0RM1Itk8igyL13
fkbl88nYkS3EMAiniIG8Xcb7/SlouM607A6jyOeDLBpVkIL+KG1pu8sUWTV6
wbngj1RkjfO+7wigiKebtprA21Sww3g70j0ostSlKCdz631cOBOxx8acIrZ2
aUXfxjNg2egf5EWnyFif9aL7splIMB62nRSiSJgD5brPKBM3wvKXn5qnk1Jn
T9mKmEwcS8qTwxSdiJ/WD/VnZeH6FgOvk0N00hry+qDoxWxwfDkfeNV0Yk+L
LK/MzMZPq1S5/HI6mbhKJN142RjZVVV8qZhOlCKzWzsVczBC1XYLZ9FJwF0f
zVtNOSgqMpqLiKaTTflSovJUHmJl2ydvO9PJE41WR65mHuYkfHsbD9OJ48Pz
jy/Z5YG5pePasA2dRFb0ew3m5SFga9eGxWZ0MtJQ0Je15wGOX82J4G2mk+QX
ux5uvJOPc761hn8I0snihWD7nauKcNT3/AD9jii552bjsH5HEXYmC08P3RAl
qj3rHaVOF8F55tGakiuiZFtur3NfbRFylqFm/TlRUpUbV16pUYzdSTMPb9mK
kq/7Rmt284oxta+euUxOlOzPudvpvaQEcT0lQdVxNJJ4OMTsmHIJ4kNNeFQU
jQwt9eDaapWgY7ZZ2zSURjwvGj7VP1yCG7cf62V508h1q6/d9IISHBjzOtJk
QSO1vwzf/GVWih/7rPxCaTSitvffkeYbZXBN/BErfVyEyAbu1D2eVgbFDcHH
3hwSIZIFqTcWVZbhXpW8fbSlCJml9mnsHSrDWamLBRwdEfKsodL7/dZyaDif
qApbLEL8NIPn/xsuB+vfNieBfGHCk5CW1iCVSNqar71qUIj48nRw73sVaOP2
x1auEiTiGuXDT6hqSC9pKZKRFCQZkZoRP+WrEVx14aG4kCDpMlvz2mF7NS4J
zuu/HhYg6zqlvdXiqlHX/lLrS74A6WePZZWwHkP4tORXpo4A2dmYKc71q0Fc
XrX6SMw8VpZJvRcUrMdtwT/TF5fMomLIiPNUrwm3fWdUDxlP4KVJ8Hjkzia8
U2Y/nFSdwHRh3QozqyZEral0S6NNgOWv49R+vAlCn92v6bPH8WjZhumG2004
KPIqKGj3OKqMZZVKRprQ0eSS5WH7DTVZ37xjYprxZShlVnrxV7wV04i3SmkG
KyQz/Xr3KH796V4nmdeM3EJbMVbCKPTxkYqsb0aF7K7d+mtHUdfblxT6uRne
UrV7Fsy+oJ5is8+RFtj6ylC3kj6h6WSSnN1oC46njZqQUx9R+snd3WG6Bat2
al4O2fYRGSd0HzsLtGKpZtzPWcmPCD3We/C0dCu+vvDpjqoYhslRqYTLeq34
LSZsiZHIMJ7ahcoURrRikjY3P5j7N96aeCwX/qMNb46Gdn9WGASX/T9XitWG
g7SPej+mB1C3Y1H5EoM2lCd3uug8G0CKcba1zP423LE8kupweQBHyeCdPy62
4ZKE1Kr9r/oxwtq/1JbbBl6CTZ/bzXeYUteXKPBgIzBXZrZ192tsGzJkh59n
4+eyVtlA2muEJZkEnrjMxtyFwc+F9a+wQtp6TCWejYiF3m1ntF5BW9D9aUIL
G+vSlX73Ve/F+b57N6/JtWOEntylu+oFGuKSdx5Tb8dP5s1arf4eUFYZC0Yb
21HzOuB5WmoP4tuLPBd2tCNBYLsMR7UH1eVtFuf+bIfziXfGRzY9x6+b3yVc
nrTDnplzZtPRLhjvnmUb9LSjFrS1K9Z2IUJUIEixvx3Rng8dXSeeQeHi4m9v
vrfDbXlgm/GVZ9h2cvWzvUpPQDeVmpqxe4pAY8to+D7BLbGKIEFVDoRmHkjK
qXVAvM3PsN6iDXJcw0ls6MDj4KTfGuZbsSXt9QsXnQ5IKfisditshesu+l+F
ezrw9cuE2EOJVrTHH1UzPNeB+So5KcabZtzUZeq6sTsQHiF10zGyETnixfJR
XR1QVQ1fSN3RiIahHQslfR0INmuZCRJoxET42ZZfYx3QvXMqVuFcAw70PTWP
lunE3evzY75ddZAPCHOudOvE5jkTG7OX1dCyVNjx1rsTXkYHNc3tq2GuWvab
4KVOTDBlkoL+rkIgZ/Cr6e1ObFO5+6/31CMMyeuff1/dicprLzUvralEbu1k
BE2Mg/0GASPHm0vRdCvcc+0KDrSgfEXSvhRvXJWtLJQ4GFa28387VQIxcYuV
8Vs4uLVoqV3f+hJ4OeSlrT/MwfSkysUjOcXQXnCs2FfIwVIBxayG3Acw29MQ
sv0RBydDdRJUhR7A+S9FC1YTBzSlNQLp9nmIZr3/R/YlB65dbrGfV+bik+ch
5tAcB3HBLL2w7CwI1FUPP6dzQaZVvyVLZmGFmGxJqxQX1Tlx1574Z8Iw55Vp
rhoXI72PQy1tM5A4sD/Aaw8XTgeCDi1eex8lGuUmR224eHvoB+teehraA6SX
WztxUbWpeUxDMQ1TMs8LWD5clLUuS/ORT4X5Xsv++UQuxBrWKMc5JEKwydQw
cpSLwI3pgsEnYyEjmSceOM1FsYjTns9JMdBwYPR5CfBwU+1n164Xd3Bwlu1t
Lc2DNXs8a9jiNso2bc+U0+MhQMIr9vlIFGJub3knvp2HXWqeNnPFkRjgCW9b
sOBBcN1/NH+9CEzLOy8at+Oh06dOV2IiHEZ2m9wHXXhQj/UvTbt5HapVyuk9
HjzMLPmVXXD2GnTpwZ5tvjx8uOpUX2pwFQueWw/rBvHwqNw65x/DMBiumjAK
Dedh0NDsE5EOhcDSQpXsOB7qdKTHtKsvo1Bb+4tYKg8X8mvUVleEIC/ysEdg
Lg9lGxVo+ZXBaOir0TlTyoOI89Rr59IgvPxdXtS5ln9/5exEjUcguoKMrr1o
46HLj1lrmXgRW8tMN2/v5uG515qCZH9/MKV13bf28WCq4rsvqf8Clrs7fc37
wN9vvmtjrnseAckn7sl+4+FGqaHMpPk52M/bPFsyw+/rs9kt4+1Z2OwPtAoS
egpVP/XT5s7e+D9Cx5ma
         "]], 
        LineBox[CompressedData["
1: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
c9OFMEFyRONE6Hr3VvRuDuteGS1I0ng5vqrerTifdTasOlGQWESNO+4IbkWC
cs0kf5Yg+Vwsq3/wSSs2OF6tqmgQJHfkT426lrWiMrtlanKhEJFu6DcslW0D
d+ez5ZP3hIhdwpVdFcvacKs699yKKCFSZDerWbOyDYJiO7MQJ0Su8EuuaFvf
BgdrsVtH0oVI80a1icFdbRiy76wbLBUicXevPV14oQ2zeotu/JkWImt3Cs+c
yWtD8fu219cshcnrlNRVTQVtePGO3vDKRpiozTtw0KCkDfJ9Cv81XRAm27lR
SWur20Af/sfmcxUm+4KU9w5x2lBwb4HE5xBh4tRsFOUm1Q6loJD0nx+Eydiu
kc8/F7ZjLNls1LRQmFxPi/x1bEk7Vh9uW5P3VZh4uzO1tFa3Y5p1MuBYjTCJ
VHTs4dNqx+BRtx1zuMLkvWPE5sBz7cj68H1yuziNaLX+d3zavh2+zWm1A1I0
UqjT7mPv3I7qq/Xq9xfSSNlCpeYD7u3IXC1e+EmeRto+vnOff78d8UVy0kGb
aYRHpPV7bEE7DPUDZiWO0Ij3ZfexuSXtSGufFpcwpRF6+wp5z3Jqfl8yBI7T
iNRru8unG9ohefWk0vfTNLLy6IzM6r52zNwqGGhxohG9Jwq2GQs7sPVkufpk
MI2oRYkrlch1oIEpVrkwjEbkgye7WxQ6kBL6w3jtfRr551ZvJaDSgcCZLgPN
aBpJP+hvYUI6oFlhZ9z1jEakeYeNp892IA3Xxu99oOIdb58nZd+BRQOK8ss+
0UhfX1mt0uUOyJ9TCE36TCMlTUkHD9zsQO1Wj5P3S2jE7bWpUWJoB5an9GnN
ZdAI07JAxyC3Az/5S6ds2TTy3Tid3+JTB/JslZl2XTSSs/dRoVNRB1iWvw+c
66GRME1n8riyAz7Pdg7r/6AR3bmrtw92dkA72toncYhGNgvOn+Tv7cC5FnUd
mxEaWTrJm7uovwNzvsumLx2lkb+cVs1d4x2gPXrn5zpOI6n5Iar3RZmYTFbL
LJ2mkajMGyPJEkzYyGpL689S+U85l5E/n4nnfz3VPvHQiUWk9obeZUw4SCiX
R/DTiaT9uPI2NSb6nwslttPoZOZ094/9W5hI+aFov1iETn6aVb+w1mLCcYnq
vIOidFKkm6oUrM/EiaS0ycQ5dHJ1ieVy9nEmem6N3uiVpBOrAxuPtp1i4oG0
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
XAZ36eMIZiEXJP/wKneaE/4HJI2v6g==
         "]], 
        LineBox[CompressedData["
1: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
TgO9gF8c/w/o34Nr
         "]], 
        LineBox[{{0.2532396419027004, 0.0008291053191789857}, {
         0.25337135412108336`, 0.0008979281059766131}, {0.25365124258514776`, 
         0.001053297014579336}, {0.25397311431882197`, 
         0.0012473070285302227`}}], 
        LineBox[{{0.7437312291537406, 0.0031058782633996084`}, {
         0.7438710311500351, 0.002968746820874891}, {0.7439642324808977, 
         0.0028790535547456213`}, {0.7440698606558758, 
         0.0027790717148930793`}}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF0nssFAAcB/A7HErhyPvVcSqvkjymkch2nmt5jRFmESrV7ZrSirNTIdWa
MI9CVh5xrGOV6oyb7CbvPIqTczhchxZ2Hqf6w+/3x2+/ff747rf9fj9K3NWg
eAUCgRD5r/53v3hxf9t86Cl9O++QTYqMW65z9l6OActj10zVt4ezDfLB4REV
7OWVKrDaDjOKZsoGW56TijtyOeDUHlePoj/vwXocsoBI5IJbhGe6e93awe3J
ZUYREh549ZC7Rv2VL2AFWZ2mkSUf7LwT2xLc0A0mtvt55Um+grtZjj2d1r3g
k6Niuj4TXW1Tppc8gtZtORHgKESzTvMz5BL0b35sc9c6urF2k+FL7Nu1h6nT
0xrtfehc7hHBhC46YSiURrdFe81nNip7oRvdXELDi9BmTxZlNVI0iRcv4T7u
By+uTwq+2Q+AqxZa+eqPBsHqJq+XRKIh8MOk5oRy6jB47XSdKDF9BMxw4HF0
O0bBkw283H7Kd/Bm8lCJVdoPsI2nijyhdRxMq6RcbNITYD6mzdv3AzrVJMZ8
KmoSbB9Aj8l/gxanZZXSttALYTaJFYSfsO/YZW0FM0X0cPZWSSkJ7W8x42So
inYOa0nS2Y82z75fpqmFlkmtSCrG6L6Q7svblui7B8luC65oW0mo2kggunzb
PCewCq2tsazK20ArcUvYFqVT4EuOrWN7/IXgOt+48s9r6NVFQ83ZgmlwczBN
Md9bBE73yXrBmUVTJvxGX2bN4H+7sPINHGbBUaa9MuIguppxNMXVeg7n8fOE
15jo6DEizaoW3Tl3o25qAL0hZU+4z6GPrc1rFG+idV2OF1jK0VupN42bCGK4
5/Q7bqWbIpovU7bqIqELbz9zmtyLvrBt4bWmgZYTPCOphugipWhGEBUdtpKd
a81AawuaKxV4aNIdZojr9XkwoSaaLdRaANOL2Xla7ehPNg9UySmLYLIf3TZT
XQIet+sbvPUR3fjcgyqK/gU+z3Ymm8jRGVkVzPFaKbhebFKiHrAENmcd8FF5
hS40U1vd2UH/BVQzqFc=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423890691175`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.044000000000000004`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.001, 1, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$108809$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$108809$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.001, 1, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {290., 297.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423893576083`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1853,1034,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350489430117025`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1853,1035,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.835048943049575*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1853,1036,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350489430864773`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1853,1037,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350489431243753`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1853,1038,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.835048943156289*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,1853,1039,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350489431941876`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1853,1040,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.835048943227101*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1853,1041,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.835048943260044*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rabi oscillations - constant detuning", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835042413463442*^9, 3.835042440620765*^9}}],

Cell[TextData[{
 "Population transfer between ",
 Cell[BoxData[
  TemplateBox[{"0"},
   "Ket"]]],
 " and ",
 Cell[BoxData[
  TemplateBox[{"1"},
   "Ket"]]],
 " by applying a constant laser or microwave pulse off resonant with the \
qubit transition. The oscillations are faster than the resonant case and the \
population transfer is incomplete, which is a good diagnostic for laser \
frequency in the lab. The incomplete rotation is not very obvious for small \
detuning, so it is helpful to generate plots below with large detuning (of \
order or greater than the Rabi frequency)."
}], "Text",
 CellChangeTimes->{{3.8350362044024034`*^9, 3.835036267954064*^9}, {
  3.8350363230918264`*^9, 3.835036491716954*^9}, {3.835042456252944*^9, 
  3.8350425292047763`*^9}, {3.8350426131536193`*^9, 3.835042698075835*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", 
      " ", "approximation", " ", 
      RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", "\[CapitalOmega]"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", " ", "=", " ", "1"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.8350362743759365`*^9, 3.8350362745025606`*^9}, {3.8350425379361563`*^9, 
   3.8350426033011312`*^9}, {3.835042675257586*^9, 3.8350426757641683`*^9}, 
   3.835042706788735*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.001", ",", "1", ",", "0.001"}], "}"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Time to run sim: ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350362774249263`*^9, 
   3.8350372242021976`*^9, {3.835042384029936*^9, 3.8350423887852516`*^9}, {
   3.835042545386286*^9, 3.8350426055221767`*^9}, 3.835042677895819*^9, 
   3.8350427087805963`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
q9l8i4CQ/lWF2wJs0KzKxt+T83N8ueCyPUJsuNm225x/SUB597ux78JsPHUM
XSuYQMBYdjTZUZQNImLg0mZy/g5eZLfpgDQbGZW3a2+S87vorel/kzJsXBrU
408uIvDmd0RflhwbItMZLp8+EagZaoneqMTGM2bf3Xxy/l9QqSfCs4eNPQcu
v2qqJ/Bsz8ivD/vYKLXvv3+xiYBkdkCLC9h4d1HO+2cLgf2vSkP7tdhYUSR2
tq6TQMPaEy4vdNjIzNluJ9FDwC50yshEnw2+JRNm9r0EfHzVlpWakOurOUmn
fiHA/6d5zNOcjX2V12ezBwnEOF+pVTzCht56kdo0JoGiE2/vxh1jo/tFkYzT
GAG9Nl0nqxNsBLop5m1mEeg0HD4o4MBG6D0e+TY2gYm9m3hunSb3UxP+8f/7
mbs5JX1q58j9pFY3e34nsGrr8U+cC2z8U1H4/P99TuLrv9FJl0n7NWcf/3/f
s2PdC+8TV9jgfeOi/P99UMUTVZvVbmww9AsTkiYImC9pVq/zYKNo3oqRyj8E
rkzy/953g416ieJmyl8C/1zSWn75sKG4z8fj/RSBRyM62el+bNjOSfYGThMQ
t2eGOt1hQ3173OL/77PS22+7iAWycWPlkt9TJO813mjcGkTmce5gUuQsAern
TwohD9gQks9Y9/992TEN22Vaj9gwuztq8f992lju5Nh0KBtNnSvN/79v81II
r815xsYS9Xer7UjmS9yRcjGcDZds9ZevSH6xvumuVCQbXidUiGaSZZ45O/VE
sxGrL77oB8l5S/kPPYtjwzzEa2iOZK3bqZsMXpH+VKsK/ktyy19tnvmJbBhY
+/39QvJJ16G+omQ2vBdu215A8vdR/09XU9lYba6vcpNkPweJGPl0Mj4mR2e3
kbyis9j7awYbTis6ntaR+39pcswm6j0bC1O0fx4jWbHmj7p5LhvszVsk2kn7
SzSfiyz9wMbDl5MiINkoX+V3eSEbDjJ7e56T/mJsa2y5XsxGD935Ujfp35cs
IZ/5pWxYTQvMX0/yyVQLmYflbCyXzfxkQMZD5uzzBpEqNqSCP8RcIuM1Jt3h
FV9NxvNoaLzPJBmPr2sl5Sls/KS+otz6P77xx2g5NDK/1liuvULGf2J9n3hN
IxufNuyTlSL1UtQlUWPaQvpf++D4EKknnxeOV7rb2FCWCW4JJ/W2QJhZwelm
Y1FBrziNS+b3UvbZVUw22jdNNHiMEmit2SYUN0Lac5IzVzBMIOKuS9GWcTJf
3JXPsYcIbOD9yb+XYGOVbMdvKTJfFCb/vnf8S+ZfvLlFO5lvRN5eW9Y0G1Xq
lmnR7WR9cvNZ4DHHxofu9ZZmrQR2EzzWQfM5eOK4J/1hA1lvhhfPZCzn4N1+
hyr9zwSWJOol7VrBARZoLn5WQdY7xwfGFSs5uChwPI9WSsCiV+BV2xoOvgmH
2wuQ9cOhdbX2zCYOdN6/O9D1joD0U2virjQHB6/tVk0i68+ISWSE4BYOnpf4
pjmmkPWPJsaSVODgFddLMT2ewI0KqVC9nRwk/z7z7d5TApp+p3e37OJgmZLA
yc5HBOZppnw9vpcD5duDXqIPCAQVyqtd2c+BzKfo9Mt3CIRnbe8O1+fA73oX
xc6NQFYcpIfsOLBJO1B7zpTAT++fix0dOVjMP/Om14DATusUVu8pDmpsTmzQ
0iHwUVAwp+McB3Gf9BlMDQLVfn0HaFc5CKrU3+0jT6DnpI99diAHeZlZ63l4
Sf9j+yGl+xzcUTxWGTrNhcN6pkz6Aw6YYhZWwhNcDLcYcpNCOZBa8+o4d5yL
b1piPpFRHPC/e14608LFoi0fo/wyOPhRKBnon8CF3nyXW7NZHNyY1nNTjeUi
pF/ypHcOB+6rLn7uCudCKCJYzr2AA2GxhR+m75P9a8mxgrMVZJ9955cY68KF
Cmuyzbidg4kdHSYOu7g4kblTSHyOg59LRmfWlnGQf2xSoJGHi/Pnagu8P3Ag
sKiI/858Lhb2hGbXkfsoO67BN8ZH9lHhsCc6sRxILtX6lyvMxayHt03IdQ6G
ncw4hnJcyAve/O6kxIHzukuUm5ZcHAlenvSWrDN+d1/5M9K4kLs1XlqkwMLy
a4v1Hd+R6z0uvJawiYWoc5dXDmdyYXv1+K3bIizkGOxOIHK5cOowzpTiYWFY
qKlqHtmn3x/XlPzVPA6DOB4+OdJP/duX2nd5kuehD/aPPEg/v1GTui9SMIZ3
o+LRAoYErplz56KlRhEUe9ehz5jsi5IHvRasHoWTOWdzhhmBP/Ei/qcXjUKs
uDjLyJqs82vLo4XGRhD82LY65CSZ53MvnFdljODczsjvS6+TfWmzolXnzhFI
BqzSXZxMoHmG3fvn0DDmdt1c3vGGgK+Qzv44co7o4gw2J78lEDnqL7B/8zBC
rXNOaL8n8CXUxdCTnGP+yZu73S0m62zGvP7MWiYYTY/j5pN9cWm47thFQyYK
Av+camkjECLkzN+6j4mwvfZyCWTezhKFq3ZvY8IgSTH3YB+BtiAV1anlTBR5
1VH8yT4nvyJF37ZhCOHb1B6bkX1t5f1/Ku9Kh+D6NcZyE9nXVGg2pTOZQ5A1
vNRfRtahLXb+Us9Dh7CAtzUxlKxbD4MWbu3zG8JA3t4LDmTd01b6q7bZdQjF
FxKUlMk6KlaqfvyC4xBeSCz7/f//cfcmxuS9MxvCf0btsNc=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
gfp9Nf0uuErazFqGteG8l3xn5LkuXF6Q80+psQ2uCovjrK91QVP497aXsu3o
s87XXvGoC8ESWS0bu9oROiPldjyiC+F/f33vVSR8fkNEbc7nLkSF9+dKHaYi
q37Z9/SYLtAkd67WuEAlvmnaUCypC4n7JjV3OFIxc7Bt61BOF0TemVSk/c+z
zq5fXRq6UBBdLa9zm4aVy8YXlU92oWHzAuPTLzrRXOD26uhMF05tNk6tfdOJ
t3c3LmiY7cIcsYmUrWGdWFF9fh6NtxuG6zR9fYuIdqqYGRPoRv6ow7LtU2Ru
TPl/XyvdDdclylpXzUhfxShZhm3shgVPfokC4TPvc41jm7Z045ysmUWvCx3L
MueP7NjejWt/VLSnwkkfWFr0H1buxm6O68a+DjqW9GvS7+t0Q+nG96OxqgzU
vus6P3G8G18N1uVUHWXAQ+MJ9ZleN9wWO8/WnGaA/1Nym+vpbjzSk1zqYMYA
n9HappBL3aRPovkiAxhY1DJeUXO/G989rEJavjNQ5eCucfJhN+RLq2fUZhhw
UdhU1mbbDZV/i6VfL2RiodeF4m67bkjN1yhirGViwdEvuX9edcPHkLZt1yEm
eIsCkqQDu/Htq+OlCg8maPs1jrCCyX5VJdJ2v2ciKXe4yz+MnCfnyzyXECbO
Z6quWPG5G32zlIDqFCZSEljWPKndGN/GaGigMOG8zWVpfno3DP6+PHCQ+IGL
MQpRNlnd6L6W3fCWw8SiSIf20fxuHHrGMW37xYRxoLQKo7Ibe/2V7buECI+J
1jZ/rO5GErOsXl+MhcUfre8Y1HXD0c7x+WdpFtJ9KgJrmrsRcu759nHiR/jd
b87mMLpR9YA/cuFxFrIfxZW//9ENj+uSM2fsWPD6o2906nc3bkuuiaa8YOHa
g+lfSye68Tfm7JGdLsTfWR7f7PSvGxHlPN4+bwlv3Bpzvb+YjSmumX53JAsq
fR+k5Jew8aQ3ruhmLPH7JgfyBgXYeHOVa9lA/Fn+pTfDV4TY+OTNpKhnsbDi
7E5dPQk2DIUXmOV9IX6T0tnPL8WGREh/5vFqFgpOvXxeuYGNquj39SV1LNw6
0ZqiJsMGjZmQpkv8pFqtnfakLJvw2r3Pt4nfXKm9qSdDno0/qQkZ1wmPFWra
CG1XYuNu8E5z3i7Cd2USCVxlNiK7rA5+Jn729sEqzQgVNiaHpZ7Kcoh/UxWx
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
UsEjzafNwZLqZxIm0VRkdvawnI5xsNmwJ60piorF378EztEl39/hE386koqL
i2IN7U5y4M3ru3o8nIrEdZ6rJ/Q5OLpi7b/QT1TwKFm0WJ/hYI2Zx71bYVTo
6+h7j5/jYErjsZVWKBVRV3Yfv3uBg8MHI1buC6Hir40IH9eIg7C+3+e1gqnQ
9pr+cu0yB0WL3fVuBVERFMFyZF3lYOJE5FRoIBXjuaUHLlznICcz4+p4ABXq
TZEzbTc5+LX7rPsZon37XXJPmZL8XNF93OJPRf/MHZv6uxyYCnvtvEm0ipDu
Lm1zDjSPb88VJNpDRvFbhSUHQY0Wy1v8qGAeWJV40JoDc9kvynFE7zj717Tg
IQdfPcoV/Il+ada5ee8jDt5myE6FEN3mWNib/oQDz/kD7/KJ3uofFqbwjIM8
56WzY0Q/TX5pHP+cgxH+jp0q5Hv1X26u3eLIQfyFZIUAoiUZ2h3hThwsM9D6
toLs3610X9JpFw60eGVCEon+/lnWeaE7B9se5gpeJ+c/7ylulOPJQUa16KHd
JD6lVgK77nhzwO97WFaKxE/m3CyfuA953/k1FVtIfH1Ux7vr35F87NrHq03i
Py3Vnf38IweRNmA5kfyYLGp+rRjAwaKnHtp0kr/akdIbvUEc1Frd3Hs8ggql
ljTV96EcJBr8COog+V8Q/G5oIpKD2Xxed7UYKu45OpfGRXMw6Cr3XZjUU/st
Gz+jOA4KlQw8lpJ6i95peLgkmQPpbf58milULBfRXnc/jYMm+pPyV6ReH/1T
+bUhk4OraqyLvaSetb+KhbvkcSB3PL5qMJeK1MSlj1UKSTxfbrjtW0Dq2/ef
3nAxB7tW4MXZYiqGjLv+6X7hYOfusvitX6gw0GhqnfOVA5UXJS/2fKUif2tp
fFoNB/eiXp+/XEvy/TP8/JomDiLm3vKcbKZCzu1mJrOTg7Tty/ec7qbivfk5
T28mBwucRy5u4VAxa3DURL2bg5I+w9srB0g/SmxbEdVH+vvegQiFb1RYZoya
mX3jwIupZOxI5gnNn6Uh8ZMDkYbNLwTJvFF/3ri26TcH28vSj2Xy07BCJ/Xr
rmkOxL+d3nBoFQ3pXQ82Ti/og2WPT6vJVhrEvtyYTljch0MZ52XD5Whwijvb
cmlJH9ZoB6X83knDmYd7HcoE++Bw9dxTuhoNf/hn6G5ifRg502UYROalivJL
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
pBr34n8wYf1h
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 6.572850581794162*^-14}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.8350427089371495`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ByMpTK8=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.835042709072136*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0.442, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.001, 1, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$113255$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$113255$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.001, 1, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {290., 297.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.8350362775838437`*^9, 
   3.8350372243570156`*^9, {3.835042384182413*^9, 3.8350423889403214`*^9}, {
   3.835042545551882*^9, 3.8350426057057033`*^9}, 3.8350426780697517`*^9, 
   3.835042709413729*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Adiabatic Rapid Passage (ARP)", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835036115299939*^9, 3.835036136362033*^9}, {3.835040972288479*^9, 
  3.835040974316441*^9}}],

Cell["\<\
By sweeping the frequency of the laser or microwaves through the qubit \
resonance, we can drive a transition adiabatically. This occurs when the \
detuning at the beginning and end of the sweep is much greater than the Rabi \
frequency, so essentially no population transfer occurs at those times. The \
population is transferred rapidly as the detuning goes through zero. Note the \
small oscillations at the tails of the sweep: these are at the frequency of \
the detuning we are in a frame rotating with the qubit. \
\>", "Text",
 CellChangeTimes->{{3.8350361386073995`*^9, 3.835036197901415*^9}, {
  3.8350405830435624`*^9, 3.83504077964559*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", 
      " ", "approximation", " ", 
      RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "=", 
     RowBox[{"10", "\[CapitalOmega]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"t", "/", 
         RowBox[{"(", 
          RowBox[{"tmax", "/", "2"}], ")"}]}]}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", "5"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
   3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
   3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
   3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
   3.835039939334324*^9, 3.8350399397512007`*^9}, {3.8350416380711875`*^9, 
   3.8350416595123973`*^9}, {3.8350417073066025`*^9, 3.8350417081577168`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "elements"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "Rabi", " ", "frequency", " ", "and", " ", 
     "detuning"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<|\[CapitalOmega]|\>\"", ",", "\"\<\[CapitalDelta]\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", "\[CapitalOmega]", "]"}], ",", "\[CapitalDelta]"}],
       "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Frequency [arb.]\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Qubit addressing parameters\>\""}]}], "]"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.01", ",", "tmax", ",", "0.001"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}, {3.8350397592112246`*^9, 
   3.835039761382015*^9}, {3.835040460604765*^9, 3.8350404696549473`*^9}, 
   3.8350405102213683`*^9, 3.8350415787140055`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Time to run sim: ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350394989227295`*^9, 
   3.835039559401267*^9, {3.8350395984673443`*^9, 3.835039608307582*^9}, {
   3.8350396611331615`*^9, 3.835039686522111*^9}, 3.8350397628761225`*^9, {
   3.8350398379321194`*^9, 3.835039859700087*^9}, 3.8350399416329975`*^9, 
   3.8350404703716164`*^9, 3.8350405110810575`*^9, {3.8350415814387646`*^9, 
   3.8350416727697945`*^9}, 3.8350417101078377`*^9, {3.8350491081998186`*^9, 
   3.8350491225072813`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdpOQtcl5LeipAP77Ufqb+VX2sP4C0/N
L3wtvxPOX7e+83aO3ik4P93+4sw3RZfh/Lynmo+3rLsJ53Mptqjft3gA5/cJ
nNZamPAYzk+6HbKf+cwzOL/waEtSvvorOH9jAU+whOdbhHuqs18ZhH+A85vm
/wn88uYjnM9w+YHDnqrPcL5aSVpFiNZXOP/J1+lh3Hu/wfleT7NqJxX+gPP9
nkzQlpP7Bee/OpzUcGLtbzhfT/CarHP8X4T/7L8m3vn8D853fxv1XSmUwQHG
v3EohTFKhxHO39pxJE7hK4Kfxlr64Nw5Jjg/uah6K88sZjhfP137nE8iC5x/
XkiHu9SSFc7fva5ptg4zG5xfzagVcOYugs91p8ojbws7nP90meKU+TUccP4U
DUmWnaGccP6EWWnHExW44PyoKbHneJ4j+D9clv6cv48bzn/81KniUDsPnL/I
1lD6bCIvnL+2tVQwXZcPzm8PTfZm/orgm95ZuLL9LD+cP0Nz9tqz3gJwfv2B
3hneOxF8X+nQpadUBOF8x7zj0YKdCP58mSSVM18RfJXDy6f5RQsh/Kd7SOvS
PgQ/7TPLxZNawnB+0sZPCp39CP6ESzy9R44j+Ps+q/38/x/BBwDRHzU7
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwtlGlTU2cYQNmVJUi4tS0iJMQlgEFRS6sovI9EwBC8V/aCUiAKWI0g1CCb
RVGWyIC0soWlNG4MUkBaaBsXfEGUCiEUI2qbaBkWHaOMC0QIodJ2ph/OnB9w
Zo6TIDk43sjAwGDnv/znuq8FZuv3ZXnXqoaIzAMU9CiZgRHMSCQereEUxVOw
cKfzJJP5JUp7Hu9bG0tBHS5mmDIzUNCMLq0znAKhl+jQDEOMTAnWn0ZcCpT6
/WWvGRKUHJD6fZE9BYtUo+xJRiMCma1bnZwEaV99yguGDI1XhPjhtSS0tIpV
wrV9qFgse3j0USAkoiHJy1Ql2qplsp5U8SFpwmWsveUPdD1peI84JgAsnE6x
/9o0gmoYSe8uWvKgxKbfVRo7hk7yFvNSFP4gUIXeNJY/Rf2X8+ea0/wg5fYp
QTJbg8bsgmvXrfKFtsNWIR/zJpGhEWMmRsMFadZBjXvEa5Tj9PsVw3IfyK2f
D5p++QaZXs1dERy+DQyUI3A9cwrtic3Nf+YAsPpIQnqoqxatyJaXqsu9YFxb
GW554x2qd6nM93fYAgETB459mzKLHvu6epYnbwJyvHSNo+Mc+vVYhEKo8ADN
LcHx35r16EJDwX1p1EZYS3/gwI35G+2C41WyNnewQNo49dR7tLRipjZayAH/
yagZVpgB2IhzTtEs2fCoe59hFMcQuD9tcRvqdoKOwp4vmFpD2HBS/1X9ZTtI
MBWNKBRG0NXhY069o8He1KwOq2pjsH3BF5WbTKN1iWsUgXEmEKPiOw4vm7o5
aMuxFG02BWVUi8b8jjW+1pJbwzE2g9s1S1RPeHY4y9B1l/yxGZxlK8crjFjY
Qp25I6l9ESzwNNWu/mw8ccmprD57MQQV6oXG6zm4zNnORBZmDmemb8QVdbvj
0uqE3jimBbzYoK/+DG3EUWXRCqtnFnAu7LupyFYPPLv9oq6+0xKqzTNKJKGb
8NiET3p3gRWI+3f9kiX3xOe81tsPxNGgzTGWlZXhhZvzRPREN2sYzBHaO+gQ
LgjbyzfWWsMlwSvJsk+3YQ+1tLFgYAmYktv9PU774CqXmuYBvg1E48ot0l4u
zsHFVXyZDQTrzYZqGL54p33Yxb6VdEh3dkkLSvHD25J6d9PFdChX8wSf/+CP
65cLVsq1dAiOzH81acjDK281VJC7bcEiuuvWfQjApW7drvc6beFtcGtDWgYf
J0yZDN11JSCdLuM0yAOxoO0tU3yGgNnwrllncxILc0PmA74hgCZx82qxJrEo
pP2h1VkCHFWSExs/IHGhVlRSWkEANybVwptB4pbNOn1lHQEliSuWh3iQWNe1
8OBSEwGs9Dx0LI7Epfesint6CQiQ8PKHZCSuPn9of/5d4t++HX3hN0l8/oiC
u6OfgMMOrCXqHhL//GHpXL+CgHLpXOXTQRKro4j9ymECRhqbGvUTJGaP2XFH
xwhIvUobWGVLYff2TMcLEwTkzWfQmz6isGeeShf/jIAq76dh7g4UDmTXXXmu
IeBad+cTT2cKpx5kOr55Q4BZf/JrypvC2VtP6H6cIsCepv5kmEvhPNro/SNa
AjjUjowoHoWrWs8Xzc4SEKRkGsWHUvjccZPEq3MEJCwt9tNEUrgpKN4ne56A
oxG608kxFG5n3XHwfk9AoSR+cHofhTunVusWFgj4/1/4H8XuOLI=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Frequency [arb.]\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit addressing parameters\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"|\[CapitalOmega]|\"", "\"\[CapitalDelta]\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9, {3.835049108346554*^9, 
   3.8350491226518917`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
JhkLmXQ9OaQ2BEyv46+a3SZjc0LNhfknh2D2fApvpQ0Z+xNqwj96eAh6GnN9
gu6SsYwV3BXjH4L6gGKVJWcy1nJP7IjjtiEo1q9cMXclY37uT6SnNw1BQmfr
3cMeZMwpMj5ujkGBsPCeQyHPyZiLudM910kKvLk2MLT8koyVcN46qj1Egbv/
6Jer35CxC+IagkQbBSxiZrcfeUfGDkg7KhTVU8DQYqUuNJCMtW1blO2rpIDi
6BbsVjgZS/6nu5U7nwKHk7Yt10SSsUvPDgWKfqeAyB2+bNlPZKzG1vuMZxoF
eKT3OIbFkTF5VvFbR5MosAnfJ7H+Ga2/bfakTDwFFjMkKZbJZKzD/kflw2gK
UO8djapLJWP0eksOzggKNM8pc//3nYyRDV1q+IIoUJ6rUbuRQ8Zmeqo0Xr+j
QM4jHS+rAjL2W2TKU+0tBZKUDJQbishYUTOHp7ovBSLXri4eKyVjAv31B956
U+DdrxtZERVo/aU4ab6XFHj+wtqeqZqMuTZwGQw/p8B9NceDNnVkbIM10Gj2
KQWsNj0YaGwkY6IGKVPqHhQQ2FvTtdJCxgq+Jl+ffEyBxpN7miQ6yJiPe9Vs
lTsFPPXv/TbqJmOHDh7J7nlEAQX7yiLPv2Tss/0+j72opnrz/8j4R8b0LAcE
wt0oEP3JIbV3kIxt8cq/rIpq/fzSeLYRNL8qeV0I1axtOyMVxsnYuV1c3QdR
XUCzDbo1Scb+c5PNNEO1I2vx6wCcjAX3FV4sR7WYCM+LomkyJjRK8jJA63We
snKjzpIx/pc+bFxof28MCu7uWkTfF2x7M41qZQcua/UVMtbMw5O6is4z88rC
7N46GSO2b+aTQef9HJNjFM3EjEkoWzt6ofu4UsCuW8fCjKXv+Xp9/RkFtrab
qS9uZsa+K2h7RbyggMvmzcf0uZixxq5PQvLoviVEr0s+286MXdd8WSTjQ4Fe
xQzR1B1oXPTsusZrCqg7XuZmFWTGakI5gyv8UT/4fN18TJgZ85r4RzoUQIHU
2I11c1Fm7I2IjGoCev8dHV/o+eLM2H4yy72eMAoMKy3WOsgzY3E2uT93oH4K
N9IpizjBjA3lpJ5jTaSAzt2Y/CpFZkxs0+Uf5GQKZMedSxJVYcZ0ea3382VQ
wIvtP+8OXWYsRLww4clPCpzcR39CvoTWn6+MiiimAO20issRQ2Ys2LNJLbcU
4cFpwuL1NWZM4Yn8y9EqCuzvOoWdsWbG9CXJgjMIP91T/ifu3GHGpJ69oP/p
pIAfO0UmzIEZUz/IeiGnhwKzZ97smb7PjCXhr/KV+1G/Xv63Q/ghMzb4N/7X
+CAFTO7JbdV2Z8ZETASvPhumQEXCn+WE58xYml2gh/0EBdyKZWZaXjJjmUXa
+0sQnqW7PSfWX6H1d3eHLtMpMDDdOSD1hhkjTHbcEJiiQAiHVPcVf2ZswP4f
t/AMBc4deNbkHcCM9WR4KrDMUmBVue13VjAzFvYhyb5ujgKZV8SL+z8wY6It
j686L1DglvPjH1sjmLHVOsP4hUXUz3L/fhz6yIxV32k2MFimAPsMlqMZw4zR
tbWF/VYo0PctPudWPDMWK7PzfxRYdzzX3xdW+FifTSpJJE0hKZrnVERSRhGS
1UBJiGRlZGVlZMvee2/ZOyp8iVBGSikjDQ1+79+f5/W+n3uf8zzPOefeT23C
X2I/K1K5axorCvY6f3r8bwIe7jMrf5rJilMHfhpor0yA1kJXeVUOKx6y/DX6
i4h3FUpUDOaz4qjR5uOWqwQ+y+CKpSJW/K3fpVdLxC+klioYZaxYXW3C/5aI
k+a1KiUqWVHl+SXFfiK+V1BZebaGFf+bYnkeQ8RnLAWrTOsIPXXaXWWIWFDK
pcqzkRXdH/CefEqcNz83XpXUwop/0hVn+wl8Tfny1XXtrMjLM6I3TOAPv5Ne
PdJF+Mv96KMcIj8zSe6a5R6iHmRVHZWJ/I/Omdfw97Li10iPY8UEP/T8FzX7
/2PFUxvODb//MQGTFtK1aq9Z0Vpso944wXeZRFjt7Tes2Cal051C6OH79Wet
7xgrPs5ylpMk9LqSp/ssfZwV17P+THch9JSyqH3WPMWKWVkHtod9mgBWCeG6
8Q+syF+k1mjxgajvL+51K59YcUxAIY+H8Etm7vu6TV9ZsTlzZvetdxPgdFup
Xm6BFW9rb7b3H5kA1b3Z9ZpLrOgkXDdk8ZroF18oDdY/WTHsT24Ao38COsz7
GnL+saLtq6+LTzonIFb8YGMHCxt61a2I2RD933I2snGalQ1lVvvz6fUTwG+u
3yTMzYaKm7ZscymZgJk9DU3HKGy4kX57rVreBNR8Fm3WpbPhgX7dH2/Sifly
a6b5CT8bxtxMXi9K9PcDe1RaCjeyIZmicGKUqG/Oz3ktPYJsyL+Fz16N6Of5
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
6X2wweEfD+YGR8PEhQpo/Sd1Np6FjF6DF0mmxP32jM2e/5pYybhGtCegZL4C
1IyEZ8jcZByPdqSzOVVC/6DA3X0UMtqevmdRUVUJ2ufX/dOkk3Gzpsrv8KVK
GGmmeTvwEt9ThvpcdlWBwRFuRjw/Gd9xqwhr6VTBRCFbTNNGMg4YXeT897AK
buxc3fZRkIzqOFlyKbMKPsUt55GFychRHzJ3tqMKLNYtye0TJaPU1Xaztskq
WPT72qi5nYzOTqEqlb+qwHbtjIrDLjJG6LM20Dmr4df9yYE4cTLe07q+s5ZR
DU5zo4ZNkmScURwrKCbu8yw3Xn/6IE3GR6zvk+d4q8FjpNeGfJCM+6Xbg83J
1cB5oXtF6hAZKc9DKdtXq8Cvo81H8ygZJ3+yzArMVgEVG5kOQMZC/8o+9b4q
CCmriY07ScZI/8zg3pIq4N9bvr1JgYydyzWLKUFVEJ1cWPBBiYymtJuOvTeq
QEgg5zBZhYz/Rb7rN5etgsSgtGYpVTKmbUhm+Kytgm0ciec1Nci4MHZWXq69
EjKcY17ba5LRpnWNbIhPJYgvhRnHaZOxQn1DW+GpSii4GTTbeJmM58ZfDJYt
V0D5JU8WsjEZWyStzRe0KuBwj4uv1HUy/h4Pu2a+Ug7P5B34NE3J6GJWM6eX
WA6t++7sjLMgY+sNOxfl4TJQzjArarQiY6BZe0CCZRl0C107+sGGjMdlCrdu
Yy2Dfh4dNSlHMm4dem3ktbkUJt+fvN/oTcaCG9OJL/cWw8n4nqTdfoQfgvJC
4xKKIEFbtzskkIzvQzSFNzKKQL/LauvVMOL3og7/bswWwHBBwnPWZDLmHlcW
KduTC4duiv+8lUZG8p7PFmtXsyFStEKkP5OM7Uu8X7b1ZYFW+It7KQVkdE/1
eVnnmgG9jivCCs/I+JWTzrPIlgL7DviezW0gY+2bCpnHi0kQ9HXdvXUtZDx8
LFj60XQinDfa2/W+i4wld3liVdrjIVeg8vu5F2RchK/Fm8eeArlfXrisl4yf
DeSzUtljofO0nq3XEBlT/uqqmAdGwi6Wj/FfR8joH8I/9n4hHHwq73ZqvSPj
2rUaf8xvhcEH69WlZ5NkFCs92bv0JxROi/tt2fGB8MeK1xnLlBBIfc+v/PgT
GQdrO8dqrgcDW3ySzc8vZNQoE0t/gkFwVVsi3mCBjI2N0lN6twKhkVHV0bZE
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
ITk=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
axsyXlJn3DzRS8zfuSUshj3R34TGFqsBLow6zR1qcSTj9muPxVU/EHlxaWJ6
kzMZczk6K/994oKu28dHDy4T/T/smsj6woXnHg1dhzzISPV3lusaI/Las8Q1
w5OM/YYlPzQmuMDjlSm6xJuM3aq/r9+a4kLq7VdvXXzIyOf9KejlDy4c8406
0nmPjOIdnJFXP4n89Av6qxZIxqBR0k7vWSLfA7yjQh6QUXmgcIv6Hy7YB7lp
/npERrtNJU7Ff7kgGnx20CyMjHW9bnfE5rlQ/fjEjdxIMjavMJrTWSDyNsxk
zYpoMubJO+ppLRJ6R+4tvRJLxnOjdeN8/7jQ9mSHVW88GfXH5LIeEPhmzCY+
jQQyNq5jnvxMYKU4meeRyWTcJbsmdZHAA/GiOnOpRD2GpUkfgf1fCX+2yCCj
PMNj4TKBNZL+3SnMJuOHn1tMWoh6Iyk/1q3OI+OKnQ9nPhL9hL75UnO9kNBT
c+u1dKLfPRn99kMlRL8pVe5b5oj8y2oRggoyGpyXvnWe2G9cbkVSTDUZa7Lo
Kw4TfBzMzzXgqSfjRcYX9uQMF/4VJo+dbCLj8Yn7XurTBL8lMYFlrWTcc0HI
Q57g37L8kZJ0Jxk/SeyhV34j8qjKt8WLQ0aFidPaAiNcyKu5dvFjHxl1bVav
nfxI8Ft/ga0zRMYkqeFCDy7h76ZTGfHvybh+0J6Z3EfcB9oNZmxHyPj17ucf
n1oIPrsgpPobGROLevzG6oj7CUdVXW6CjErNc98DK4j70ODKKyM/ifmpuLMn
PJvgj8sU2/eHjJm7fr1dJPzr94GUnzhPRocUWs6fF1z48uXbnAOJH7N2jdsl
PCb4+sp90kDhx42vJVOPEOeRznjHTkUqP+qannsZSdzHYqcLPMdZ/MhOzZ6p
Ju57B3++kTRayo9PG9L/vLHiwuLs87JUUX7c+tx8jawZFywW/EkXJfjxlp6n
QMpOgg+em/GtUvz4c2/S4RJlLrzlu7Rn81p+PJh2KN5ShgvLBC19pzfwo192
d6SaADGPIorCl7fz49vASa/DdUPEfeH8aJQmP7ZTNgv05A1Bak1qTTnwY5TK
hPdU4hDc99h8m6XLj6lmXOnpu8R9flh9IdmYH/VNTGV3aw9Bfd6uiQ9n+fHB
8pGXtOeDoLHUu0noAj+eZFnkBAcOQpJjZbKyMz/aZ6UaVbkNwj2ZvfY3rvCj
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
52k+DeVgX089/B87l6ip
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
A8D6TdY=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.6336510528773068`*^-12}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9, {3.835049108346554*^9, 
   3.835049122853659*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
tbn/xo4luGugnSaGMV/Fi1p15SVQKKB6cOHnab3kzmbftwR+tye3RN7C92t7
/13ZgSV4izTTWm/i/rhrPiBAdwl0GElWP64TqIfkfMv06BJwyu0+d/gagYSq
us+LnFiC/Xr7+h5cxn0w/OTRLgu8fw8dkfMuBHpgX60Wb7MEt5XI3hOOuH8q
a211dlyCKx5Wn7fZ4/slf+dVurwEYSQ1ecIG+1ON/OLCjSXgoP1yD7HC/nlB
pPqh9xJ06n/SzTDB/VQlKFPfD7+Papm3+kfxvLETcfzBSxCV93JnAJ6PM28Y
N15HL4GETbOLjDqBQi46nDsXvwQbQrkt7qvg/qrabiCdsgSj14Z6/ORx32oo
E/+SvQQ12Z7kn2IEcohGq24VLsGKnPZehhCBIp0z5lDZEmRt+RX4mx/7IUdM
RUXzEjALgs//IRHo7/6bbj1TS7Aj/O6npj+4n3CNn0lYWIKb+xocVzDfdFps
9F1Jy1Akoq0zUUxH6ZePbl5atQzXKl6K7sJ+6P1eskxQehnWh5F/3HmE9Ya/
aaOm1TKcI8sdvSNNR31+ffdDzi9DVh3faimsP6855/r7HZfhw6mWJz+xPnGz
r0/3vbEM5B0xwwNY74ZmTx5qClwGn163HOEqGnrb9tfZoWgZZJwvyt27SkPm
J8fqv5ctA8n5SXS6Aw2tbmLt4aldhtgwBzWKFQ3dr95E+fR3GVqn4Ai3Hg2d
KTgbujS7DHLbs8yp4jS0Hi4vGS4vgysrWuz6ehqq/n7/bDSFBQJ2uYMbeGlI
/Uvs9kN8LOi/VG1DX6Yikfje3GfSLDh3lH3pzR8qapCYlejayYKZW/V1PfVU
9DSa9kRpNwsurbTHX6ygosVXksatB1jw3kppSP8HFaWv25O5XZcFV3/IvHr3
lYocgnVEbx9hQWT1/Ri9NCpq8XMYEDdnwcXVXdevvKWiAE53g2vWLGiZ5X++
+IaKtB89SS+2Z0GYG+1d9SsqYlHC1wm7sKAy8UIOI4SKMu5+9Lh4jQXZvMkv
7AKpyGn5e+ePWyyQFJuq2+5HRRLuFYf477OATerlKo3HVNQ22/bxnA8LDiko
tr1/SEXPr4zyZfiz4MuWtooz96lIb2L5GhHCgn382ioX71AR2Ynnz6lwFhxf
V7yrzIOKMgdFUVI0Cx5rLde4u1ORq+3OtyvvWfDJZ8u62zeoSKobOI2SWRAf
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
JHqlC/wPZ/ay0A==
         "]], 
        LineBox[CompressedData["
1:eJwVkms01AkYxhVtdSjvX4lYZXLJuh6mXFa8r9PFpc7JrWmoaBHRse2qZlU7
oV23qK3MIrOyZCqZzalmhZkxs+y45bLRRin3dTaX41apSGs/POf5+jvP72GF
Hfc/slRNTW37Yv7vrnW/nrz0M9A+qI7M7uahIHm9JuUA9Tq+8F7bfRYl0hbH
plygsRULD5dVJeKUlO8VkweUoB0ff9fxR0wzYGnt+QWoVqUa8B9JwzqDx0Zj
+UCemjfnnNIu4qZ/vtctKgAKLhzck8G7gvwyi1XcQqDVe1eJ544JcMuOxPna
YqCDgfsCahghXl5t/fr0TaAs316HucrrONrVOWp3G6j409XhQp9CLIq16xaW
AqUl+3vmHxXhglN3u99vQLsyTH2kWbcwaGlq0/IyIPZHyfGulhKEnJ7KE/eB
+JP1DU7hdzFBeTF3dyXQPevRko4XD3DkpVLwvgoolH311JcfJciZm7l8SwZ0
LX50LE6/HK0dg9PVlUBrBB9UE84VmBNwMfneH0DLIxljXddKXPqtMim0Fsjj
kNt+lX0VdpWan5HWAd0ay/BTn5Xi9sYgXnQDkLOYVdFQI8O7w5lxek1ATwVC
6xt8ORpoKL9WPQLyGvDnhptXYzJrJuZEC9CM+/CHCWk1TrqbR7HagCYkso0h
bgo8eDAovO0voLzpguDmEgXWn84M5bcD1TUOpZCaEh1yFAesngBt9orv+M5Y
ifmS6f3P/gb6vf3Vhd1blbii3SwwtROoKNBDO8ddiScnuL5bnwE9u2n43nOb
Enu1MvcMPgdKbwkvCLRVoo+lwuvKC6DXD/qvd6xVYrnn9A7sARLdiTjT1qtA
1hEzj/HeRX/9vC0/JCgw8zzXTdi/yMd+mRW6UoGzBRku3oNAhgdCFNrnqjFM
Xr11dgiotd/Q8WiPHFufT9mLhoFOuQi9Iq3k6PLO1DbgXyDetUYNnUgZFuty
LZeMAJkcFgUV/SRFYGeYl40u7h191eZwSRUOx05t0JwAsmI614/dr0C/DFPD
ykmgnaqAyIeihyi7vV8vahrIQZX0Nu9SOWYNyrVr3wA9ttww5eotQQq6oHZ2
fvGf7m+ThlhlWMqTz1ssADXbjnIS68S4TjD57uknoFid6c0QdwfHWzlTDuoM
Vc3u1HoyIkLuWPp4nwZDy9axs+2qb+CfK+WvLn3GkGRJK7uuuBDzdpgMjKxk
yLjYyGNvrBCXhXF6cjUZirBstTdpzcFvEtKf71rFUAgT5jseLcAmj3FO72qG
YpIP9QuPXcEgXYV/BTBkptFXE5GYifc7N7X56jCUrW6jqL+cihve7Hu0sIYh
tg13jevEeUzXSa8X6zKUMtAuzm7j42s7WW2wHkMWfXyx5QIPv9iWRA36DLkK
HZq7HeKwKWaTrNyAIVvRcs7GmBg0sUlx3vs5Q3w/6yhojkC1lDTWvBFD+u2H
Q/zOfYX/ATim6Oc=
         "]], 
        LineBox[CompressedData["
1:eJwVk3swFAgcx/cwKiV+TdNxklS3imyF26Ku38/atq7QeVYeFc770UnlcZxi
x2NLQhZj3Hqky3M8NrHthrZYjxk79OLOVkrhjmuv41xdnPvjO9/5/vOZ73xn
vqb+Z1wDNRgMBndJ//ubhZtsxWagJyeCBJkVYWiYd39A+0ugY60tncG+32Ph
a1aHNxPoHJp9koSdw60WlpOMrUCls8jqykjAnbFjs0nbgIZ2/Z1EWRcxkaT6
ehZA4ys7HAbS+KhYIbQo3Q4k31nZkaeZiVqqUd2XlkA98bk/585ewQlhbtLU
DiBOTw1L+Vku1gZuTnTbBdR6ufdSas11nGd9Er62AkLP/OjWoQLkzj9pPG8D
VMLPvdhvWYy/CARvC3YD9XnZfRdjXYY6DWrXX78G8lEf2bCOXYWe8X2RkQg0
OpXFfedSg+WcyowFAhLELzewjalD28fH723kAmk4rFt2eLQB+T9ZDTceAEqv
YIcETDeiMnjVX5yDQHsVr3heH5ow5EP7tsDDQP2VfLM3WrdRLC/izh0BOvV0
X2XG4m1kZMWcSncC+srZdb2pugUdPZ0SDI4CDRape3nP7mChiVl+1bdAtn+M
vBA1t+LrCUaDnStQOd+55NGlNtzZNNLb5wYUobOlqdpegok/iMd9PJb4ejs8
5tQS7OZeZcx4ArF7WDYFOXdxzeoQo+TjQLv1XFcWmEjx5FN7tr4XUHTBF7U6
xVKsLjVyKfMG2i6cZ27SlOFc6Gy4lS8Q70Rwqt0xGXKsB9LkJ4G0ZypqJEIZ
Xv33Vpn7aaAL8+GW7E4ZjjxMkY77Adm3z70MeiJDZrbP0wsBQP4a61lrl/LZ
4+w/lwUCJTQ8StjfIcN7pvq6RUFAxtof9zPyZajz26SZechSX43xGoG7DD3E
cs7dUKCA3GNjhxalWJpU4usYDpQU+lYszpfi77zYuNEIoAX3tYfCDKS4R98l
LyoKSKGfyrTOuIv8YfP6xTNAp91mQ8fGJags1+q5Fg20b5D57LyVBNdHqF6Z
xgB1GT9UaZ5pw+aFHEPuBaCZodKJdukdXOgOt3kcCyRWltxPV7bg4ZwDR4Pi
gfRKmAEhw7dxbPM//IxEoN5edbmnshlZ04Miwx+X9utmBgd1NmFCS62kOhmo
Ii7br7CuEdd8c/pdfwrQ6hu6lpyP9Wgf1e0NmUBRoS57VUdv4odnk7wHAqD3
QjejutU3UOywyir2ClCc0NjvuaoMI+tZxuZXgVJU3VWqdBEyDV2Wj2YD7Rng
19umFOOL1Jj32TlAXiZqxYbmAiyayVdx8oA+d9ROdtt4HYWRcp0X14EuWoy5
rZ2/hqsejIhvCYG0tnps0hZcxi7WJ5F3IZDlQ6F8amUayuvM++eLgKyzHGKZ
wZcwfdmk33Ax0BajDSyn+HgM4zk/F5UAaSr41XrbzmLtcJqjmWjpv94fMxXM
MJyOaG+rLwVaUdymTOX543/iMuUU
         "]], 
        LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAQAVhJD2qEUBT1hBUXW1mP3qwbHkh
qxFA/D2HQFl/az94L5qlvqwRQFkNMj72UXM/MZq8kHGuEUBnWLqKUYd6P3It
9f34rxFASmu7HV8UgT+kbwFn17ERQHg1qG8fc4Y/XtojUoqzEUDUxrtR/vmL
PxdFRj09tRFAN09ufXkKkT+KGosTo7gRQGj/lrM18Jc/iJm4P0C6EUDXSWqv
ZoubP/3vz+kIvBFAYMqOp5S+nz9wxRTAbr8RQOvLj3kgIaQ/KjA3qyHBEUBD
O9/5JFumP+OaWZbUwhFAw7wWO9CgqD9WcJ5sOsYRQMT2hQH+Pq0/ENvAV+3H
EUDBr/CoMI+vP8lF40KgyRFAwlihFj3tsD88GygZBs0RQIUVj7CSKLM/9oVK
BLnOEUAM8s22ATq0P6/wbO9r0BFAkO7xnHxAtT9oW4/aHtIRQGHGDbAAOrY/
IsaxxdHTEUCTIYCskiS3P9ww1LCE1RFAJbq5zl7+tz+Vm/abN9cRQIffW+Cd
xbg/TgYZh+rYEUDH2dHDtXi5PwhxO3Kd2hFAGM0bdC0Wuj/C211dUNwRQHvr
4HGvnLo/e0aASAPeEUDy8WNWIwu7PzSxojO23xFAkkeJx4lguz/uG8UeaeER
QChfLWownLs/qIbnCRzjEUCY96qyhL27P2HxCfXO5BFARF9hmTfEuz8aXCzg
geYRQImeCmsysLs/1MZOyzToEUAAcKRsioG7P44xcbbn6RFAF7TpR6Q4uz9H
nJOhmusRQAmFfiMB1ro/AAe2jE3tEUCJ6elLclq6P7px2HcA7xFAfeKmk+vG
uT9z3Ppis/ARQFGYPEKZHLk/LEcdTmbyEUD1XazD2ly4P+axPzkZ9BFAsly3
tS2Jtz+fHGIkzPURQC9QwztJo7Y/OjMrLmL3EUA5qQULyL21P9RJ9Df4+BFA
6NodEYrLtD8Id4ZLJPwRQIBqG2F1x7I/cNGqcnwCEkDEg87XjeSsPwroc3wS
BBJAOAEGnQSvqj+k/jyGqAUSQHkdQuFffKg/2CvPmdQIEkDTLa/V8C2kP3JC
mKNqChJALjnruwYZoj8MWWGtAAwSQPWtjPO4FKA/QIbzwCwPEkAUS3+6qZSY
P9qcvMrCEBJASdrpbh0UlT90s4XUWBISQEl5G7sCzJE/DspO3u4TEkDSrs9K
ioKNP7rSzZpwFRJAA9++6b00iD91npvM
         "]], 
        LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAahSYtDcqEkC8MYWzYbFwPxYdF3G5
KxJA5FoBJJEodz/CJZYtOy0SQGUU6FEnvH4/SkqphOUuEkAOocp5WC2EP+Rg
co57MBJAsE2Npi1WiT9+dzuYETISQDk1l/rgB48/sqTNqz01EkCQUd5OlvCV
P0y7lrXTNhJAdKy2NFl6mT/m0V+/aTgSQBoyAm5ANJ0/Gv/x0pU7EkB47UcA
EZCiP4NZFvrtQRJAwhtM9SINqz8ecN8DhEMSQNmLw15tNa0/uIaoDRpFEkCp
5Qo/slmvP+yzOiFGSBJAKzKaHFTDsT+GygMr3EkSQM9Sgu3Mw7I/IOHMNHJL
EkDLC2guk7qzP1QOX0ieThJAVlt/EayDtT/uJChSNFASQCxRE6+GUrY/iDvx
W8pREkBsSbM/vhC3PyJSumVgUxJADGUCBtq8tz+8aINv9lQSQNQlm0h0Vbg/
Vn9MeYxWEkBu7APVXtm4P/CVFYMiWBJAmK49Jn5HuT+KrN6MuFkSQIp/XGjx
nrk/JMOnlk5bEkBBzNL4/N65P84s+KTcXBJA9HA7B4IGuj94lkizal4SQOuL
6d2wFro/IgCZwfhfEkA6tq8LVA+6P8tp6c+GYRJAsIaS23zwuT900zneFGMS
QL7O5BJZurk/Hj2K7KJkEkBakUqySm25P8im2vowZhJAVgH4w+cJuT9yECsJ
v2cSQGW/003gkLg/HHp7F01pEkB+1E6DJQO4P8XjyyXbahJA/YJctrthtz9u
TRw0aWwSQJxP8STZrbY/GLdsQvdtEkBb7A9Z1Oi1P8IgvVCFbxJAeqcTfBsU
tT9sig1fE3ESQICb6XxGMbQ/v12uey90EkDak0aD60eyP2jH/om9dRJAxHQe
ufJEsT8SMU+YS3cSQBtpMGzkOrA/ZgTwtGd6EkDcHBIROTKsPxBuQMP1exJA
CiGfGWYKqj+515DRg30SQMzWTXKf46c/DKsx7p+AEkCz4YDNLaijP7YUgvwt
ghJArylH1c2aoT9gftIKvIMSQO7unCf5OZ8/CugiGUqFEkCsFnjoMmSbP7NR
cyfYhhJANVI18Zm6lz9cu8M1ZogSQLj4mxY+Q5Q/BiUURPSJEkA6c2+7ywOR
P7COZFKCixJA5UXQMeYCjD9a+LRgEI0SQBoveXhMgoY/BGIFb56OEkBFpFrv
So6BP8wsOJYYkBJAkPUNtpTGej+UEoKG
         "]], 
        LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA/2+pAFyhEkB5G1R94dJwP4ReOBDp
ohJAxOmSsmX1dz9MKWs3Y6QSQLG0rCRB438/9ZK7RfGlEkAZJAxTqLCEP578
C1R/pxJA2JD5AYT+iT9IZlxiDakSQDy4VyxT0o8/nDn9fimsEkCMP8tQQHKW
P0ajTY23rRJARg5gb1gGmj/vDJ6bRa8SQAVFkldax50/QuA+uGGyEkD7Ii+Z
y9qiP+xJj8bvsxJAzTwEEVXqpD+Ws9/UfbUSQFI2ThE/Aqc/6YaA8Zm4EkDN
tiMUpDurP5AtwirSvhJAP39czGKysT+oOFsJgsASQLtV6DEyuLI/v0P05zHC
EkDqqeT3I7CzP9ZOjcbhwxJAUc53o9qXtD/uWSalkcUSQAaAtUUmbbU/BWW/
g0HHEkC4nAH88C22PxxwWGLxyBJA9kgFUl3Ytj80e/FAocoSQIMOKqK3arc/
S4aKH1HMEkBbNeUki+O3P2KRI/4AzhJAGZC95Z1BuD96nLzcsM8SQHZ6wgv2
g7g/kadVu2DREkB2j4ne5Km4P6iy7pkQ0xJA5eSkrfiyuD/AvYd4wNQSQJrS
NfYXn7g/18ggV3DWEkBX7VBdYG64P+7TuTUg2BJArynTEU8huD8G31IU0NkS
QPzNi3+RuLc/Herr8n/bEkDmQo90NDW3PzT1hNEv3RJAJ4Blk26Ytj9MAB6w
394SQPrF5YvN47U/Ywu3jo/gEkDE+le4Axm1P3oWUG0/4hJA8MP9+Ao6tD+S
IelL7+MSQARS+DX9SLM/wDcbCU/nEkBwXGHS9DmxP9hCtOf+6BJAvkVFKOog
sD/vTU3GruoSQCv4LqdE/60/HmR/gw7uEkBtbxjh/V2pP3uQ4/3N9BJACBEJ
FKw/oD+Sm3zcffYSQMFeEmE+O5w/qqYVuy34EkBJaKUrVyiYP8Gxrpnd+RJA
G+ZZ6IBPlD/YvEd4jfsSQHNnjWjYuJA/lbryvif9EkBlEH8E5yiLPwfTeTXt
/hJAQ/1wbfjfhD9Xm2wcMQATQIpeprhx14A/Numr8kwCE0A0Y/Mz1Ah2P9CW
wqllAxNAun2a2/zncD8aGrrf1wUTQEle+8ydcV8/fAp3jlwHE0DGjYY7HbRP
Pz5NHYbIBxNA/CAtr+bxSD+efJCi
         "]], 
        LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAA5BmqH4sPE0DcPtzvomJZP/BBdOfL
DxNAFmlmSAoxXD9BCmfODxETQBmYI7BANmY/rd3ykwMUE0DPkmTLRAt4PzZj
P4PbFBNA6pVhW3OZfD9ObthhixYTQG3TbTrdZYM/ZXlxQDsYE0BNPlGrFi+J
P3yECh/rGRNAXGzLjCecjz+Uj6P9mhsTQDdcTUd+T5M/q5o83EodE0BAzB5x
MBSXP8Kl1br6HhNA67naVrYTmz/asG6ZqiATQNGNytgiRZ8/CMegVgokE0DX
dlDIXAukP2bzBNHJKhNAPPEuC9MmrT9eqkTOXCwTQD7twflzN68/VmGEy+8t
E0AhMB9lXpywP04YxMiCLxNAFi6ayx2TsT9GzwPGFTETQDiA8lDHfbI/PoZD
w6gyE0Bp/PYqRFqzPzY9g8A7NBNA3HjVSJYmtD8u9MK9zjUTQOH5Ya3c4LQ/
JqsCu2E3E0BC56SYY4e1Px5iQrj0OBNAbX1Xj5UYtj8WGYK1hzoTQLsRVNIc
k7Y/DtDBsho8E0Caeg4kw/W2PwaHAbCtPRNAlm6t7p8/tz/+PUGtQD8TQIF+
8uPtb7c/9vSAqtNAE0Cs+iGmOoa3P+6rwKdmQhNAMSjX5T6Ctz/lYgCl+UMT
QGdbpDwCZLc/3BlAooxFE0At82OLwSu3P9TQf58fRxNAH51LXv3Ztj/Mh7+c
skgTQBOIhg11b7Y/xD7/mUVKE0ClvoWeHO21P7z1PpfYSxNAU7OBQyxUtT+0
rH6Ua00TQH/n19oBprQ/rGO+kf5OE0DTrsj2PeSzP6Qa/o6RUBNAbLYhz5oQ
sz+c0T2MJFITQL3NY9MLLbI/lIh9ibdTE0DLQY5bljuxP4T2/IPdVhNASUpF
7n1vrj9k0vt4KV0TQLcIFvoK2qU/XIk7drxeE0ApUG1LRrSjP1RAe3NPYBNA
4MK456mXoT9ErvptdWMTQHsuQSNqF5s/PGU6awhlE0A/De0SrUmXPzQcemib
ZhNAGAhiBvSvkz8s07llLmgTQDzCaCCxUZA/mFq2PK1pE0DranLte7eKP6hw
fIZoaxNANwrlObx/hD8U+Hhd52wTQD+S8xokcn8/9E8yDlJuE0CNb3EhD3p3
PwRm+FcNcBNAwY1XJEx5bj9w7fQujHETQPkutvSlAWM/UxqXiclyE0Bg8jXh
rQJXPyGEfW0=
         "]], 
        LineBox[CompressedData["
1:eJwV0H0s1AEYwHF6ubbLS+spTTfR+/WCbp23iucpZ4u2K9Sk0uoUR+pKZ1Js
QjcUjpPT3VBH8h6/u/uRsqIX0cuMOCV/NFbL5N1KetMf333//6yWyAJOzzMz
M3Oc6/9b7uxUKK4C9THZI3aRiaibmXIdTwLSbs6XLTG/hppaoTAlBaiSn7Di
WHU65oTLBSsUQEob8ePrciUmdU9u8UwDKtxWwDdFqfHyje2bOtKBfq8RueS6
azHa++KG0BtAlua+ifecilBSN+GQlgV0LeD4RvnDYoxKCvzllw10GRLFfStL
MSbQYLJQAYUFuzJWCWWYOh2TqcwD+vHrxzaJUzXmvOiJCMgH2jNpnm6Q3Uet
2s1nmQbopVeTreB1LZZI8x16tEC8EsPW4Y46rPGYmVUXANk1VvAHWhhs4B4x
BRcBRe+b5K8r0mNzXyPDuwN0Vfbtw6jEgO1VvMx+HZBfr6m6d7ER3yXERxSV
ANlWljgxaiP2i/tFJ0uBNELH740LWPxs7+WwtgxokeD60gR/FsfGCmcHy+e8
Ykfu/o1ncab5b09pJVBqa5imUMHiPNUJRloNNPBpS5P7ORYtTjVnbL4PZL1x
/mKukMXlLmsihmvnfC9ReXuvEVdxkkU1DJB4SOF2M8SIfNOA/XkDUHfN0dbR
pwYUlIlmBSyQJFgW1GJpwB1xd3sm64E4M+0pvp56FPlxGOMDoIpP8gu8QwyK
eeEZsQ+BHrsOWXEP12HQcKvUownoTE7woLNvLUZmptk3PQEK/PPoloZThcpO
i4xnrUDezQe+fL2gQ03xWamiDYj4U+unebexWP7We+8roOOhQ4NKvRarfJzt
uW+ApsL1Z3NC1cjaKH++egskD9h+xfqgCm0rngfFdgDpeg1vxuOzsK3Bv25/
J5A+mV9u45OKrqqFufVdQCHf3bi7/JPx4xGQdnUD5U0LvXazcTgePfHS3wSE
y9Pec6yiUWc9Rp7vgSKqVHxn31P4Dyg8R/A=
         "]], 
        LineBox[{{4.977781106726024, 0.008389837747553293}, {4.9794928846179, 
         0.01129819660460453}, {4.981123149276831, 0.014409132218983356`}, {
         4.982839217338863, 0.018008663512304037`}, {4.986271353462927, 
         0.02604697891068869}, {4.987987421524959, 0.03039500289887097}, {
         4.989703489586991, 0.034896485152692676`}, {4.993135625711055, 
         0.04414708851567552}, {4.994851693773088, 0.0487854855367463}, {
         4.996567761835119, 0.05335705939898078}, {4.998283829897151, 
         0.05780499617267381}, {4.999999897959183, 0.062073196410129865`}}], 
        LineBox[{{4.971427364726352, 0.001263150735970675}, {
         4.972542808966671, 0.0020658889848980135`}}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4gYBM6uP5xW/oZyA7mg9K25wyei+d78/DV2PvF764yE3XL9+SneoIxFVDalq
bXnCDT4bzpiXeiQgBWnJFodn3CBZU+637Woc4k0eHd79khsMt59/xNcYhTJy
75CCg7jBfLx8veLlYMTT5qBmmcINcjh59xNCIJaz+0J9lc6+r0pozx6p99iI
2VQTn8kNNfprwq13heMMNdnL07ncYFPydbnaMgpfT520si3nBtuf+0M2+CXh
PK+rIQ4D3PA7I7etMgjjMck3hiHDbP4qzB1a3+fijT/ytmePcQMULji138nD
ln+FE1ZmuOGP9V3LaL4CvNm0ufDRP27QGRL8nqz7E9sf+2/CdSMRlBqmjstl
/8IRbU7JnzcR4XVyvIbc03JcaRdjXyxMhNX38yc/qVVg8TjiWp7tRPDBmeev
VlTiWsECfs+9REAr1Fq6UTVeTZ1uiz1AhFcPmMMZ2dVY6uyW8IqDRMi6sGi2
jb8GP3r+QJp+lAjfLvw5slhUg2XmDh57o04E5yzm/Xb+Onzp1XWuFE0iuIrV
/8Y36vAzKb+yujNEiCMRjrem1uE2wxntDReIQDz3aa+lRj0mLm/ZdPASEcIu
JM5j33q8P+B014XLRKCsvZe90lKP3cu/3goyIcKpsBa+UcMGnGbaujvzOhGO
qw/+tgxrwN1reeZbbhJB8JH67eftDVhe4Ybz5jtE+Pq35+WmM43YpN5P+YgN
ESKem3Hcesaun+4UkgzuEeFtT53PVHoj7v+01TfUiQi8VTezjvA14TGX7qW1
j4iwRtZgp9SxJjxj/OGK6VN2fE9bLpy+1YSXwOjHL1ci9Mhu/en+qglziGzd
udedCBcuy4+lJzRhrpUubz9PInzgJfAllDdhamvY7yVvIqgJcamoDzRhvm+G
+ga+RPBK187V+9OEBQO25OcHEEFzJT4zi9SMt97tkpAIIYLji+wdx/ia8Y5z
YZ4e74nwcN2lhFyBZiyz13B28gMRRC6lBVEEm7Es75aL5yOJ0Gt4oGCOvV5x
vPN7RhQR1p5/26TK04yVykLFhL4SQfTOTGDjUhM++eWK++N4Imy+dYV2t7cJ
n3kuMtWfRIQfj8vEJ3824QvXOrXV04jwbFwOMyOasMHx0Ky4b2y99POmRTs0
4atbr2xl5RAh8yPB6ol6Ezb7J/zcLpcINdu+Zt5kNWHr9o6x1gIiJEVYMfbU
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
JX2+a62+kwp9j/vcDL0bEcNozbskGSr0xPBxhDs3ozuCnkWC+6iQv9GDg3Gg
FVXWbpx5IksFibP7TIri25CMZ8TmUXkqRJ4Rq/eZb0eeKntUzylSYSpqv3ss
sRON/cuyykJUkOy4N3RrrBOd+qb6VvQ4FfRyWxMoWl0o2rr2p4cKe/0XRpFb
UBciSV+Znj1Jhc4Qi53HK7qQaf/IJn1NKtyiF6UlT3ehovf3VArPUKFtgy3/
QUI3EtfltJI+T4VM82E3IZ5u9IzhFeJ7gQojb6at/Nd0o75SgZ/Ll6hAeFN7
MG6sCx13iZy6akCFJ76k35d/daHwI3s3lRtRIedm9cTrD10o/z+ep3+vUmH8
3r3+1jtdqOdK74ikKRWEw4f91eW7EKdVtpauGRV87/edaZzqRKJP/DJdLakw
6fUsxMOkEym/sdyWakWFhsKPTu9KOtDVCFX3XlsqbGuuF2kR7UARP5cugiMV
WhNvSoynt6HCxpo8y4dUIFXrL0rPst+noRjJd4+p8PJWtvOl7a1IjGywtPSc
CodJqrtz7zSjyNP5gcm+bL6khWkKifXop2EIR08AFd60ep6uTKxDA1a2pvQQ
KvDIkBf6vtYicV9xeYsPVNi8mRo+/KYafWpybxSPo4Lcd7OXL/VKUZTRuQ3B
RVRQTd519My5OFRsLf2wuJQKzf341afwCDT0lDDwu5wKnEaj4cu//NCOT+mp
5+qoULBfwVpa7zX+MrJJm9pNhTuHVc+LkzNwtE3fm0d/qLDrSaJgbEglLnXJ
+Ru3QoV7F/4SzNZU4xE/f5N2DhqM6zyN6d1Xg3dmqO1X4KZBefJVH0uvOvx1
+WvNLIsGgYxHU/oizfgX1VVhGz8NLqpIXIk+1ILHhK+EnxFkry+87HH0dCuW
Psawjt1Cg9NNFo4Wt9px7LO7jBu7aPDSJf+R8JcuPKZ4+cmzPTSotTUo7Bbo
Zr8PyrMf99OgQXPcfaMrO9/ESF/Nl6MB6Yn57nPj3TjamK++6xANCgbvWvKf
7sEjAssn/inSQD8okH8gugdLVvemCQENNgq+UN/J0YtN3cokFI/TQMszX0jh
v14chZIDL6mw11vsntbx7cVDv4NJ90/SQC6u1ia1uhdLxD1xCNCggVHmb+3r
hD58/dqt0dTTNJDKc9E6J9OHP23W0q/TYu/vnZ+ieaoPD9QeKp/RpsESx317
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
lu3/GY9TSjyD6CLn81LueDpcOPlBOunaAKIHdHyzSWLjRbpf2r3Uh8yN3BMl
U+hgsz9+0UG2DxXvlPvSmUqHx4LnBttMe5FzrmfgqW9sPf449j0wsxuNtOf6
LmXSgaf4kqFjRxfS+Tvr/TmbDuqhx58H/+lE0nKXXqzNpUPtXT4HHr021BQj
7pD1kw7aPEck8n6w64sArLezjg6jD+feSk8loXcpMxea6+lAVrpTwmkdiYg1
288/b6TDavf0q6S2p6iT8lKjt4WtNwmi5I+NX/HLJ7pHQrrZenTtP8DyK8ID
FtPC5Ek69AQjdJSvDZ/1ENv0bYrtD6U3er60DpwddYH/xgwdpMr7BwbWdOE3
vTm8BfN0mDisIUef6MarHNNkqwU63N4reLi4owffEhYjiizRYW1575haWS+G
i+4cjst0oC0eUtjl149j7uUs71ilQ6wD6yG/1QDe4Du12PCPDu3GlYa5Jwbx
k0TReZc1DOB3uudPZA7h8Qqd6X1rGfDrnGy6Xd0Q1h17Md61jgFXvSS69dl+
KyTlDHtxMWD9d5kQ9wMjeLfEVL8ikQFtEeGqB8pHcLCyaM8IiQFxBK6QobOj
mGCs0xFIZkCUbLTPmu+j+I7zixYVKgPKFkUnrMhjuO1tdsMcjQEHAj2+ie0b
w6qZkzXhdAZ83dpwrlZ8DCc1bqs8w2RAjLLLB0LLKBae1y5bZTHAXKnAIUR2
FL9gvij6up4BEcUf1r0VGMFzu7MLLvEzwLg4pFZQdwhf0ZzERAEGfGoqZRTG
9+PSW9uy0wQZcLfe9ITar24s66adcXUzA0QK5UySMppwWKRbClOYAbIuGjr0
2z8wuSArIVeEATuFRNvv8qage10TXy23MmCFd3e20EAt6lnZ+mWzKAOOCXjd
VFvoRJqbtCNLxRiwLv1MdeT1PhTYJ5OrJ84AwceHfD6fHER9scTWMQkGEPO2
P95zYhjtseuZfyDJgDnlzumd/iPICbLpvDsZwBH+PS365igqJvnvDJNmwL/I
o01ru0YRX+1tlb0yDLgiyP2SRR9Dhm9PGuXvZgB1ySmByDOGvl4TdTq3lwHe
5VziJc2jaFFmxb9vHwMeudV4LT4fRcqLDYl3DzBA/9kFzTWbRpF3XsIvLjkG
tLoeaOwLGEGt7u6DAQcZcHnmtY4B5wgSP3+VU/IQA4L5O1avXB5G1kJHhTIV
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
6Pus+NK/f2x/nDdaqRnvRv8DCVRUBg==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9, {3.835049108346554*^9, 
   3.8350491230329266`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 1.627, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.01, 5, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$138670$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$138670$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.01, 5, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {290., 297.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350415815772676`*^9, 
   3.8350416729034433`*^9}, 3.8350417102439885`*^9, {3.835049108346554*^9, 
   3.8350491230611715`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time-dependent Rabi frequency", "Subsection",
 CellChangeTimes->{{3.8350360572082973`*^9, 3.835036061099975*^9}, {
  3.835036115299939*^9, 3.835036136362033*^9}, {3.835040972288479*^9, 
  3.835040974316441*^9}, {3.835041178847898*^9, 3.835041186175006*^9}}],

Cell[TextData[{
 "Ramping the microwave power (i.e. the Rabi freq.).\n\nOne way of doing a \
rapid X gate is by simply applying a very short but high power Rabi pulse \
such that the integral of the pulse is still \[Pi]. For a Gaussian pulse ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalOmega]", "peak"], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "a"}], " ", 
      SuperscriptBox["t", "2"]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the time integral is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalOmega]", "peak"], 
    SqrtBox[
     RowBox[{"\[Pi]", "/", "a"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so we want ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[CapitalOmega]", "peak"], "2"], "/", "\[Pi]"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". For tmax=10, ",
 Cell[BoxData[
  RowBox[{"\[CapitalOmega]", " ", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "50"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"tmax", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}]], "Input",
  CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
    3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
    3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
    3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
    3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
    3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
    3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
    3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
    3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
    3.835039939334324*^9, 3.8350399397512007`*^9}, {3.835041047675274*^9, 
    3.835041143093012*^9}, {3.8350412022616234`*^9, 3.8350413033955727`*^9}, {
    3.8350418641059284`*^9, 3.835041907622984*^9}, {3.835041996312902*^9, 
    3.835042174768655*^9}, {3.835043464621416*^9, 3.835043465074932*^9}}],
 " approximately satisfies this. "
}], "Text",
 CellChangeTimes->{{3.8350361386073995`*^9, 3.835036197901415*^9}, {
  3.8350405830435624`*^9, 3.83504077964559*^9}, {3.8350409903245263`*^9, 
  3.835041040811996*^9}, {3.8350411472184086`*^9, 3.8350411598650036`*^9}, {
  3.8350422158357077`*^9, 3.8350423134230366`*^9}, {3.8350429681392603`*^9, 
  3.8350429915841527`*^9}, {3.835043486972205*^9, 3.8350435819270077`*^9}, {
  3.8350437153746996`*^9, 3.835043831798624*^9}, {3.8350852229266453`*^9, 
  3.8350853098255243`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "qubit", " ", "state"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"(", GridBox[{
        {"1", "0"},
        {"0", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "\[CapitalOmega]"},
        {"\[CapitalOmega]", 
         RowBox[{"-", "\[CapitalDelta]"}]}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Hamiltonian", " ", "with", " ", "the", " ", "rotating", " ", "wave", " ",
      "approximation", " ", 
     RowBox[{"(", "RWA", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", " ", "=", 
     RowBox[{"2", " ", "\[Pi]", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "50"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"t", "-", 
           RowBox[{"tmax", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]", " ", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"qubit", "/", "laser"}], " ", "detuning"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalGamma]", "=", "0"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"decay", " ", "rate"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tmax", " ", "=", " ", "10"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"evolution", " ", "time"}], "*)"}], "\[IndentingNewLine]"}]}]}]],
  "Input",
 CellChangeTimes->{{3.835015555175582*^9, 3.8350155775852833`*^9}, {
   3.835015611754115*^9, 3.8350158059890695`*^9}, {3.8350173136863713`*^9, 
   3.8350173156693516`*^9}, 3.8350182990823665`*^9, {3.8350187207440853`*^9, 
   3.8350187222480097`*^9}, {3.8350194081952477`*^9, 
   3.8350194554571996`*^9}, {3.8350360654863176`*^9, 3.835036083411008*^9}, {
   3.835039279827968*^9, 3.835039336473112*^9}, {3.835039375111665*^9, 
   3.835039485980007*^9}, {3.835039555272379*^9, 3.835039556740214*^9}, {
   3.835039596160475*^9, 3.8350396066214724`*^9}, {3.8350396516733413`*^9, 
   3.835039684969122*^9}, {3.8350398363884706`*^9, 3.835039858489589*^9}, {
   3.835039939334324*^9, 3.8350399397512007`*^9}, {3.835041047675274*^9, 
   3.835041143093012*^9}, {3.8350412022616234`*^9, 3.8350413033955727`*^9}, {
   3.8350418641059284`*^9, 3.835041907622984*^9}, {3.835041996312902*^9, 
   3.835042174768655*^9}, {3.835043464621416*^9, 3.835043465074932*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"build", " ", "the", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eqs", ",", "IC", ",", " ", "rho", ",", "popIdxList", ",", 
       "cohIdxList"}], "}"}], "=", 
     RowBox[{"BuildMasterEq", "[", 
      RowBox[{"\[Rho]0", ",", "H"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "for", " ", "the", " ", "time", " ", "evolution"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"eqs", ",", "IC"}], "]"}]}], ",", " ", "rho", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "a", " ", "plot", " ", "of", " ", "the", " ", "\[Rho]", " ",
      "elements"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plt", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plt", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "Rabi", " ", "frequency", " ", "and", " ", 
     "detuning"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<|\[CapitalOmega]|\>\"", ",", "\"\<\[CapitalDelta]\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]", ",", "\[CapitalDelta]"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Frequency [arb.]\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Qubit addressing parameters\>\""}]}], "]"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "plot", " ", "the", " ", "populations", " ", "and", " ", "coherence"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Rho]00\>\"", ",", "\"\<|\[Rho]01|\>\"", ",", 
       "\"\<\[Rho]11\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "plt", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}],
        "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Elements of \[Rho]\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plot", " ", "the", " ", "qubit", " ", "angles"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "=", 
     RowBox[{"soln", "//", "theta"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", 
     RowBox[{"soln", "//", "phi"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labels", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Phi]\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "labels"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "Off"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<2\[Pi]/\[CapitalOmega]\>\"", ",", "\"\<Radians\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Qubit angle\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "show", " ", "the", " ", "vector", " ", "on", " ", "the", " ", "Bloch", 
     " ", "sphere", " ", "with", " ", "a", " ", "manipulate", " ", "plot"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BlochSphereVector", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0.001", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"BlochSphereVector", "[", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"SingleQubitRhoPlot", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"soln", "//", "op"}], ",", 
               RowBox[{"{", 
                RowBox[{"op", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "phi", ",", "\[Rho]00", ",", "\[Rho]01", ",", "\[Rho]11"}], 
                  "}"}]}], "}"}]}], "]"}]}], "/.", 
            RowBox[{"t", "\[Rule]", "\[Tau]"}]}], "]"}]}], "}"}], "}"}], 
       "]"}], "//", "DisplayForm"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0.01", ",", "tmax", ",", "0.001"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8350174447531843`*^9, 3.835017495712969*^9}, {
   3.835017988392829*^9, 3.8350180133581915`*^9}, {3.835018077781352*^9, 
   3.835018083326502*^9}, {3.835018407739362*^9, 3.83501854396568*^9}, {
   3.8350186070827513`*^9, 3.8350186768702*^9}, 3.8350187285732646`*^9, {
   3.8350187756722016`*^9, 3.8350188657789707`*^9}, {3.8350189353983974`*^9, 
   3.835019022032487*^9}, {3.835019308507373*^9, 3.8350193405081263`*^9}, {
   3.835019373785277*^9, 3.8350194040323973`*^9}, {3.835019442840927*^9, 
   3.835019492117589*^9}, {3.8350195552673483`*^9, 3.8350195908102074`*^9}, 
   3.8350196637723875`*^9, {3.8350223190646396`*^9, 3.8350223536793756`*^9}, {
   3.8350253760420957`*^9, 3.835025514090223*^9}, {3.8350318318355703`*^9, 
   3.835031949332437*^9}, {3.8350319918936896`*^9, 3.8350320755583754`*^9}, {
   3.835032156093828*^9, 3.835032182204419*^9}, 3.835035708635909*^9, {
   3.8350358237768025`*^9, 3.8350358854817686`*^9}, {3.8350397592112246`*^9, 
   3.835039761382015*^9}, {3.835040460604765*^9, 3.8350404696549473`*^9}, 
   3.8350405102213683`*^9, {3.8350413399798746`*^9, 3.835041513400248*^9}, 
   3.8350415608082085`*^9, {3.8350418107868867`*^9, 3.835041812454124*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["Time to run sim: ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8350320110531416`*^9, {3.8350320555525637`*^9, 3.835032076249228*^9}, 
   3.835035587735854*^9, 3.83503564712823*^9, 3.8350357366117125`*^9, {
   3.8350358629148316`*^9, 3.8350358862078004`*^9}, 3.8350394989227295`*^9, 
   3.835039559401267*^9, {3.8350395984673443`*^9, 3.835039608307582*^9}, {
   3.8350396611331615`*^9, 3.835039686522111*^9}, 3.8350397628761225`*^9, {
   3.8350398379321194`*^9, 3.835039859700087*^9}, 3.8350399416329975`*^9, 
   3.8350404703716164`*^9, 3.8350405110810575`*^9, {3.835041212730671*^9, 
   3.8350412641240807`*^9}, 3.835041305950017*^9, 3.8350414166264553`*^9, 
   3.835041515167165*^9, 3.8350418132730255`*^9, {3.835041883426692*^9, 
   3.835041909817813*^9}, 3.8350419995122194`*^9, {3.835042055568327*^9, 
   3.835042175801793*^9}, 3.8350434681102476`*^9, 3.8350442647501116`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
P9fagBY=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Frequency [arb.]\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit addressing parameters\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"|\[CapitalOmega]|\"", "\"\[CapitalDelta]\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}, 3.8350434682259083`*^9, 3.835044264867798*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF1nc81e/7OHBRVuKs16HsUSlbJcV53ZdZohJJUUIysg5RkjJSZlZGRhOZ
qUQoe49CRMrMKkQSJSq/V9/H59f7/HMez8e9r+u6z7nFrV2NTrOysLDMrmJh
+ft967I1u5JNGM7yv09tp5iBqZgD+v9eqS+/IiZ24Z9vVV4XXSMW8s9ODE/n
H6KJ/9y5bB87K5r1zxy9w5unRUv++V7zHbcp0aZ/znsU0usk//6f7dDrxM/u
I//sMrZlpCBv4p+5xQM3D6rOIha/H9/EVxfRI0gtW+9ZfkNDt4MUjpPU+a17
D1ewvfyOjvbw3SblH+d3qwu0dt28hCzCXgt84GPyP2HyGAvo/UZQ6Kg6FXKR
/95Fx0lFUxZg+XN4/OyUp1zAnV+H5j+vAktTUaeA6gY5ls4hKPVmA9WWmWfU
sBG5TR62Xoe3rgHhX4XB65MW5EYXEo6sLWOHRdXEFwX2rPL7xs5cinHjBBbJ
n5PbA1erHRiNkhER4QZF6vX9A6sPqk3WWPs1PlwLb77NvxCPtFOTJ3cLa51c
Bye9NSQTFC+ocaMFq75vvFCtymnJK3ZVzUtDmvPZEi/UqK/j7te7qjauZZ4X
uYoPtm0rm3hz9qpa9d6qJU0+PrD8IbwPGq+qeRtdv5G1lQ9m+4Yj1py9pjZ1
emPdOSs+mBHylt7XHqT2MtxEmtzGB5rMgeQXWaFquyODWye7+EC6WmP5cU+o
Wmb0C4/aPj7wYTeMauMIUwuMF686P8kHHrbO5sG2YWoi7d9lv7CSgIUlU5RL
zVzd5BCJ5Tg7YcjMU9Z9oB7esaWzkYtwyoeCrRLV6jXGWg92rCP8fY4uPd+h
vvTm+IX7JMI1D3VWVIfUlY6cM+CjEVbvMjeo+6Ru/zZS1IefBH7zPx5civyq
fudo1tynDUT7yJ917Kk/1LvfVdeZiBDtjivW6NYf9XXmfTerxQnX/+qgITaG
dt+Co8JGon/aOcfh+xyMiyf4UIo0CSr3T3tzevMw8gekKVyyJBCzfuynNUxi
TJzUHPNUINqv2K/IV1EZYh/Mi4eVifnW3impf0dnRIxEWJTuIvofCBpaKhJm
1NlkKm1hkIAZmPKgpVyM8WusanU8EOvFFSy5lkswznyaz3bdQ7QflPi1m7aZ
cc+B93LfPsI/z2dZndnC6JncfEjvADF/d7iHRb8MY8+02Q8JExJ4YUtK0+GK
jNu0K52+R0kgwNw5xzOlxJhXy3nUZ06CIe2VaIrpNsbd0GW7eGui3UKe2XZU
hfH9iaT2t9PEfPfj8q7N7GTsf6cvZuhAgkWroJeSMbsYS5tTeriYRH9D7gw+
NgbD8GBtge1ZEhRfTj5l0Y4zHpz7HFVzjgTzN3p9m0yAYVynrnfpEgnwBd2p
bh1NRq51f8lsKAlG44+vHL6gy2ANXRO/P4IEZwTaem8k7GEcfSLnnh1Ngu1v
2TPrSvcy1rBc3mpzk1ifp56PVUifYXFLJPltOgnKczR4v9ANGaSekz7llSQY
L/CJi24zYdiuBB0VrCVB3+Cg/974I4zSTY+3ezWQwDNr47iXpSnDwZNlWqmV
BK0Cx+i6K0cZ1ZR7J9J7STBjexKLsT3OENjdtIt1kAR/rr2tpOmdYLhYfcVO
DpPgiY7yKEnBgiH4WKNVYIIEqW17mp6zWjI89g/j4d9JMDU0r7s4bcVo9uAW
nPhJAl9HNR9RZ2uGWIryD53fJLDVOevMNmPNOFdj1nmfhQy3XFI2pDFPMV5N
BjxaYSPDvc5g1yUBG4YUJSfsOAcZhAb2vE9mnmZ47+q0K+EmgyqZRUhAy47R
brmsReclQ5LzRDJV24GxKVhS7CyZDCnf1KqUNzsyfB7p/2qjkaHy9niuYrYz
o6P7bI+sABk2Fb3uvCvpxpD+k1wQIkiG4bTvF5woHgzfjbVR4yJk0G9yTDOX
Pc/oNvjspCVBBq93azqK/1xgyHrQ9O5uJNZ35bn97ZwfIyBZfeNvaTIssh/K
uecTxOiptlllJksGWdI3U7P8KMasxvsNlxTIsKFx65MAo3gGR9XB7XeVyaBe
kV0anZrCUKnYbTeuSga/CBnpFrF0xgH8sR+XOhnsc59djfHPZJwu25gki8jw
qfygq+2jHIaPevLTg5rE+jEoenNYHiP2BemVuw4x/sx8cnFMPiN397XxuL1k
qHUymsRXlTBqSpZXivXJEJEXLNHEWsV4r+q2vu8AGWh2tSJ8ofWMuaJx5ZVD
ZAjfGqyc0f6SwbXzuIGECRnyB9CNU42vGWLPXp/WOUoGFs8cKyPNLobqjj2+
9uZkuFbW92n30x7GwYLSm2EWZNBL2rJOdbGXYbtNOT/Pigzpsx/zbWYGGJfz
M1pe2xDjyxsuTPNPMuKUhMfm7QjfSIyZdvjDyH0c84ffkcgPh48FZ/I6vFaB
U0DNhTjPzmmJVzkCeG/eJSULNzKQctuzrgZI4HNy3/b5e5CheCR18sKbLTj3
Q3ubtPNk8PD+NtO6XgmXkB241OBNWLeRfbxmB74rxzhh8hIZ2nNa/F37duP2
WXizYiAZWjvTzfbQtHA/6YIR4yAy9JwbvLgirosnZGz5fS6U2A+WcbTlgB5e
n05TLIsig89Sd6vX9EF8QCpUb+gGGTgNbnWnZh3CF1JXrNkSyGDLjLZntTTG
pe5PxundIkM5tXQXpeUIri5u+cjpLhF/nCn4/MJR3PhuV2NkKhky6cM29aJm
eMDtyuWuLDIESy+d/alzAk8SVsF+5pJBhFekj15pgT9JyZEXekwGK59Li9UU
S7xRUHwvekoG1iNXPdlqLPGhpHgr62dk4HLGd843WOGL63kuXi0hw0/h+RSp
n9Y4X6J/bGYpGVYG3pX3y9jgmwR+PGypIMb3zhx8+Ok0jic4NcxUk2HmY7z4
tT47/Ah9eIhcT+SnQZzk8sIBd44zXdreRNSf42XKIw4nPJD2inr0JXFeeDTT
1eGCp9zQlLvYRoYGCTMjN143vIBSrHu7gwyaZbpJk3PueEu0nGVVFxlGXYTb
uume+DAp9cJoDxkEqOMp526fx5ciBW5w9JGhbeyk0lCNN07hi8jdOkjUHyR5
vg26jG+JYKvfP0wGiejm7fKe/jisuzDIHCNDh07mtaKFK/jR8JnFG5/IsGYy
jxxZfw13XWtDKZoiQ5Nfk7OsXCh+LfSdzPsZ4rxyk1U5xhH4ba6DOr+/kkHR
izOI/VY0XhhcayG2QIbxEZEt0sxYPHNfi0DQIhmUeEuGYj8n4Ek8HR3Ty2S4
X66mXzGSjF9v7Qk/vEL8XlRMHh4xuIv7RQ3qvmClgJlzdDi3UCp+1micRYKd
AuwTbDoBzAe4LW36eTAXBeS3F5w7b56NH+v+5vGFhwJihrQN/DN5uMHNJfkj
JArM7wqscxTJx5HZqolSKgX0inP3aWsU4spCnKmS/BSwidFjn1goxqUGeE+E
bqDAp8am484HynD+uxj/V2EKKCseOOYuX4VzWwu9NhWnwAZq/IkuwVr8l6Rk
WLkUBe6/Cl+vENqAfxnborNRmgInKh+3Dl9vwYczFFfCZCjwVt9JMlCoHe9y
2FkyJ0+BJUPu+4ntHXijDH72mDIFbr0pVO9f7MKfT2vLVe6gwF6X+eYND97h
Dx/pf9y0iwImyimWhR/78btuRveuq1NgW+OI7ZjdBzxm2zHzeUQB7jGjMi4Y
xa8unMTMtSgwObv3vm7oR9yryLatSpcCz4NJc2ImU7jjBecQ6X0UuD7G1Awu
+oJbqHloRe6nwOjtvMp66znc8Lf37wVDCvRtVy//pLeAa1X4Fx0/TIGdxH+N
zL1FXMU/2K3GlAIGWMZn3fO/cGmtSJmt5hQQSJq9wurKggTXxI9FWVAg77um
nuYCK+JtSLnzw4oCM6PHNax71qBVIanHLE5TwP94Qv2lTVxofl82tc6eAm2Z
SoVln3nQOM+TVzJOFMh05ug7eYuE3rUWBcW4UmDCVXU0gkxFL6PKNX66UyBJ
N6y0qQ9D5UZ1yyfPUYDiG/bckXs9ekJ7WVh/gQKRJzpSHj8QQmndHa5ylyiw
UhxXMHFSDCXcfLcl1o8CJRn+VT75EijUbGhk6QoFeKc3S04Yb0Q+Qh9vWQUR
9aGrGC60Xxq5DkybNoZSIHvd5vBDWTLI+u48WSGCAlGvVE/v8FBAh62XW+Ki
KfB0w+nLbv1KaI8U67VfsRSokI24M6izHe0e54RTNykQ29YhZLSsguQy+Zaa
kilw5uaGxTvsu5HYGXqB4h0KHDvNzAM3BqLICrsk3KdAee+bVo5UQGtmJKX/
pFNAP6RUaFujJlp8tHXYJosClQcUbbPkddCkm1JKSy4R7/oad63+Pah/m+oR
5ccUEDYaCc3r3YfaF3BS4lOiPibUE88rH0A1RTrNK88oEKqvmy6zYIieXTAI
tH1Ogf0WZ4MK2Y1Rppox/qqMAtohhsLGxiYo+fexxW1VFJBcNdyeMWSKIios
85NqiXr34o9QLzRDfv52TqsaifsV2zk78fYEOqvlssm+hQIiqtWZ8xmWyHaN
51BrKwUOnFfLq4mxRhtEm94uvybyax76cXWYDWpVFW6T7qKAaVwCt+9TWxRg
5FZv0kOBtVF6j6xIDkjFqa4soJcCRf2d/JPpjmjy6vrCRwNE/nZpvbvn5YJu
33HO7ftA3K/DZszWeiZi78SSVT5RYER7ejxJzwM9/+wQc2qKmF+aubpwzznk
wl4eEjVDtP9QnDnj7oUkxCj+ZV8pgApa2yZeeqPuXbZek/MUcPLfqdlsdgmF
Gj935V+kwCPRtfITfH4Id+a1014m6sEvbmI00h+l331mcnsVFXqCMnTiZwPR
0efc+1tWU8HNgqRU33UN8byx0F7koIKPRWMP/iEYVU7nq21cSwX2ly62IVgY
8uDg2GbES4XuikBbNc/rSFrcfKsvmQpSgTxjvquiUN/uR+K5NCqsojEi3llG
I20XUxK7IBWMV2xcX7nEosWgHI5tIlQQTWQ/7y8Wj3Lvrfw5KU4Fo+0HP3bM
JiDLF8bfw6WI9cbNrjA/JCJaV8Z0yWYqPBz3E8fmk1HjzPLo+FYqyBVuPeW3
9Tby4TTso8pTYe1TRR4trbtoVG2x2Xk7FXgvCXHa9d5HN00MqpN2UsF2V72M
6540ZOB6t6RhNxVkhT0USc3pqOD+3kxxDSo0iHfvXMefhexLU+4c0KaC+ahq
xKmRbCTUPRt/cQ8V5h3Oe+s256JArsSrXfupsL1z8Umr52OkKjntw3qICrnf
ul+s3HiCPqtreCgcpoJnzLi7dVU+OsycsA4xo4LyrsTWYP1CxBnKMHt2ggqH
Z1eHSGU9Q6Wp0YdGLKmwRiD66V3+YiT1dhcw7KigcPy67C3pF6hn9vrOM2eo
IDJWk1nYUorCuYflE5yJ+N/rNR3yK0fzjFDhr2ep0LxpQzMnuQplmg7QRM5T
4XLNh69SHNXouJsyj743FTx+dWy5wF6DatPeL6X5UUHPPrMsVqwOeZXLz72+
QoW+gIrpzWr1SLYnYOLPNSKfv4JzQiwaUOxamZ6j14n9bFPoqS9vQqfcLxby
JFHh27mLvUG9rUhFeaBwyy0qWM2X4Tvp7Yh7Dp7p3qVCkhTp8J6qdvTYjb3I
7wEVVOa2dXwQ7kC/mNHF8/lU+DwmF1I19ga1Kc4Xk58R+zXf5MJ/swvdnz1S
Il9ChfBzZVyhet1Ijyn03L6CCgy2r3qBGW9RvGvGi74WKmheCGAs4u+RgwJ3
6c9WKhSxc5fGvXuP1L84ldI7qGDA7v/IxaUXkR61lW7rIvLv5bBn+FcvGnFR
LjPsoUKWlS4yCuxDz+Tjypx7qbDidMFKanU/Cp35URY6QMRrjwql9mI/OpFn
Vp7xgQqrx0Qf3p/sR4ouZeW1o1Rgbe3k3m04gNjkxSo+fKTCve8sH3lyB1D3
dEDFn0kqcJD0H2b8HkBZD8cqBGeocDtfXD5VexD5OO+tVP1KhfSKC6mpfoPo
oFxOpck8Fb5Y38w3ezKIJKbXVbn/oALX86r64O5B9D2XWRW5RIWDeaXpy18G
UZNTZ1Xubyp8V/Y9Hv17EKXIqlQ3sdDgpEHm4Z0rg4j5+Wb1OBsNAuV7iyfm
B5FW7nI1GwcNvqz+Ml84MIjoThY1Ytw06HaPW11cOogmZKpqGOtoEHrVdqdg
5CAqnZKsNSPRQE9avWzDkUEUmXOt9jyVBsGqoi//kAeRteNEbSydBuPb+1hF
agbQDhmDuifraXCwUaSx12EAcU7l1bUK0YA9O8HzAfsA6ssm10+J0oDF0Fxw
MbEfPTrjUc8pSQPoP1JvLNWPAra+rd+4iQa2lzXqtR/0oSOTuxo0txD7XWdE
shDrQ78cVhp8FGgglvv9sOvKe9S2xboxUZkG88feFKedfo/uT9Q2PttBg67c
1/re9e+QnkNo06waDZ77JJBivHtQvD3WYrOXBkfDWg/+KOtCCnYyrQZWNHA4
NX8uTaEdDTiIuj60oQGdbnjLZroVhTtRSbz2RPzykzlVAl6hCbflQ20uNPg2
nvC1oroZ3fT4MqfgTgM2pnfoA9cmpHt+5EaUJw2EZZq9725sRKk+LV2HfGiw
PcV24lBeHTLyrTiX70uDGqZ++G3/WsQS8JSfeoUG++qdRWVO1qATQcnH3oQQ
8WUzZfXbVYV4QiOXtl+ngWunR4WNSiV6Hn4lOS6KBmUfXH2CLpYj/hjH/iMJ
NDDL+T1i8vY5qo89ebkoiQa4yvWMOckS5JFgLCpwmwa9HV/tbwcWodcpalbv
0mig/3FveJJfAfK7o8C6O5MGfftoQZyCT5H8fcnUpBwacJ4tPFHb8ASFZawd
M88n8lH4TJiam4d2Z69cLS2kwQonbc2UUy76lPttk3AJDVIU9k1/2Z+N4h99
bLhUSgO/hfUX5vdnIp38XvuBChpImaapNjg+QPMFbVyohgazi39CdzxIQ/eL
arLv1NOgIPiU7Lpf99FKac5ny1c0GNWXZTpP3kF5FXeuV7XTQNUp5ryV7C10
vPqGvMQbGkwOdTEak5MQd11QW8BbGmRnTfucVrmJShouMkfe06Dc+GUr21Ic
sm92JWsP0CB9D0r1Hb2B6K9O5ad9oIEXr8Sp2m/R6GyH/vzpTzTgfVHiyvga
jiS6UFz9FA3MP2dzFb0JQe1vt6ls/kIDmYs51NNz19Dl95vfBs3RYGjnk9Fq
3UAk1y/o9WmBBuseChV7tvqjvkG+9Xo/aeBu+DMpnscXhQ6zPc/6RQObxK8v
DnV7o48fp5bPsGGwqfEr+1fLsyh+cjClhR2DGTGxWx/pTKQ93cmQ5cZgT5/g
hkSJM2juS8NA+DoMzDzHDjvF26B7cy98p0kYND8/Eq/PchIZLjwSO0DDIGW1
v4DKIxP050dqVR4/BvsEqLavjfah3KUEaz5BDBodxyJ8fHYg899hbEwRDD5t
Vx+60SWIuFn80trFMXCIW5Um7g6omNVDR2kjBjmr+9NpmgbE+8d+PFoag3j5
S3YrfsYI4zweNCeDQbQWv7TZqaOolttQ2lgBgznTnCbPjuPIfZ1201NlDBjz
M1PCTpZIjKR6hqaCQezeZ9Rg3Bq1UWTXeu7CwPrr9vUBo6eI94jzRLI6BqGb
vpiW651GeQ15DdUIA6Vloa8pEbZIRGI2fUITA/WAdLbUQjsU4aMUSNLFYL2g
r6dxlT360+1uvVMPg9a5J0IiBQ7IWakALAww6MtJP8AddQb1hS2IXD1IxE9X
yO3XEUdkMK7yO8cIg7yH7RU93E6oFLx6O0wweJ/zjXzyoROSTS4p+XkUg4OZ
U4Es4IxSFpYSxI5jUGP2eKdUrTNaa6h+bs9JDLJ5T31SUHNB3tmXDrtYYxDH
ePzd/IELmlxdoRx3GoOikqup2eyuyOwkC7nUHoPBE8k8gidcUXOJxpdhRwyE
EwdkcrNd0W7alVdcrhgkrNOI0Jp1RdkutTmK7kS82DaN6/Ez0YamNaGmnkS7
c/yk1DYmCpHcY3/ZC4OLrpwGXAZMtHgpWDf9Iga1lxIj9KyZyL6nSerlZQys
9m57LHWOiXqU17J988fgqcWGdW+CmGjvdYMP669iIB94bU10AhMVf7xeAcEY
8HVRN8emM9FmzbZbdmEYPPPYm8Gdz0TxKSSfiAgMKmb2za4vI96nPw6ZFUZj
oGDYYPiReK+eO3RDtS8Wg0jvzew325hoPOcNne0mBok87rsM3jLREXb6wpZk
DHQLqFpCA0xUZ2naaXgbg/rusI+io0y0/cXNJ+fvYaD/7tiUywQTpWHvI2+n
YRCcxHFWdIaJaExBl7oMDEbCw29ozDFRYPNxg8/ZGLBzNUuOLjDRvNTtrdQ8
4jxBJsvYTyY65TvIufsJUb/f42LHlpmo453YR8sCDB5PPX134g8TaW63rgsq
wuB5u+lQEIsbyo9ITc17jkHD+/JyJ1Y3JDEx6t9VhoHWl1g/bLUbitHaZPmr
EgO/0YmokDVuaNVtO1yyFoOf0lfOt7K7IeZiptC+BgzEn67OmuBwQ0NGk0vM
ZgycLlCShjjdkOFDmXcJr4j1yIfNi7ncUCWHc1F5O3FfbM4c9OB2Q4rWeXFj
nRh01+ee5l/rhu6WfjnL8xYD/IL79TTCJH4lo23vMVgpozwT4XFDvm7uimb9
GMx2j7YGE55pecrrP4TBr8t39o4Rtti08DljhLgvHlMndqxzQ61+Ki2t4xjI
UiocvAnjveezFiYw+G4Y0lhIOG9HSZDQNHF+6ZLuT4SFo5ZOa81i0BRdNkvj
dUPhk2raZ75hMHporboa4V/alySivxP5ul+qeJyw051yluKfxP5iXe29CPf9
XBkY+IUB5eUJvyjCBoc1ytaw0OHGRCWWTvhFXkCyLBsdoiI76p4RZjcw2ZDA
ToctTy/rNBA+NLE5cRU3HbBkmmIX4ZRrS/xO6+igSjvUM0T4o+Sr+G4SHRKm
xuImCStX3cE0aHRQmQmsnCN8ycI9NoefsM67Rz8JNy5rU+mCdOh+0R+9Qpia
yB/jJ0IH8fq6c6v5iHipTJKmxOnQt6wfyEk4q7M00mQjHRrntw6tJTzPjOSt
lKZD5l7hx7yEEa/19a2ydIgjcfKTCYfmbOeJU6BD7UQMP5Vw116OsBVlOrRE
db6gERYbf8d1RoUOpzTyqXTCjldyg9/sooPuTn4FfsLPxHw5EIMOsnmTwgKE
V5UfupYFdNilIzf51wbmUmto2nSQp2hErSecsPj9yuU9dNgeKUnfQHg4rol1
Yh8d+L87B/y13LYUf+MDdLjnV9L7117tLizlh+jg1xUjLUi4xlnDV9qEDtya
o/Z/zbuW9ifmKB2Khd4m//WxzHGf3+Z06DIRrv3rNJ2SZbuTdMjqtx/96y/D
Yd4d1nTwSXNc+eurwkpeGQ508LqhICZEWPBot6cPkw4BMvXYX+95Jea26TId
qg/tm/vb/6ymo1N7GB3ifyhP/vWdokI770Q6+MZZ9v51iyzLKakMOihV5b3+
a0n+uGNe1XToLZBu/OuLq7YavuynQ6dSc91fV7sYGQjr8UPudbnKv+bu897r
UsAPkie7rv11VYRNsvc4P0j1cB39ay+NAzPXBAQgRDd7/1/Lz+/UuLFPAJjj
o9p/PfZAPPaOjwBo78r4P5faCRvITghAUG7o/zlWev3qEpP1cON/jvlQcXrd
i/8clWTbYCW24Z/NYk+08nzcALH/86J2+s875YL/PDKm6VUdJARx//N9hpLg
Kyvhf3541ZNsJyfyz0Emp/TZFkQg/n/e0XcvK+iVKCT8zze3JD98pS/2z76V
12/ql/zn/YIm6c1S4v+s4dJgTg75z3eErKVeLvxnqZqM+APmEv8cJVe9taP8
P9t+W/26aavkP1s/mRMLifzPUR0812sb/nP5t00/V1b+8/8DPCVqaQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Yb/Afw5qXB5QWvHPhSMbJ+fm/vk/fnQZRQ==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Elements of \[Rho]\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Rho]00\"", "\"|\[Rho]01|\"", "\"\[Rho]11\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}, 3.8350434682259083`*^9, 3.8350442650203896`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1851,874,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.835044265103634*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1851,875,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350442651395783`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1851,876,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350442651734457`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1851,877,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350442652073545`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,1851,878,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350442652382708`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,1851,879,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.835044265270187*^9}],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"+\\\", \
RowBox[{\\\"0.`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \
\\\", \\\"ComplexInfinity\\\"}]\\) encountered.\"",2,1851,880,
   30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350442652971134`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1851,881,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350442653300514`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]], 
        LineBox[{{5.2137582374143046`, 0.0009221801480030386}, {
         5.214417896779615, 0.0008865173773958479}, {5.21560528363718, 
         0.0008253080772909936}}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz1tM0gEYxmEIdQ6pwCQxhMCYJIcOF2114aBk64A5LdAFHeCv4qbNQ8Xm
tGZzNnLNco4F0y1GzVwLbW554TRU1JEJtKS1trDcktlIWolkqER10fddvPvt
uXz5RN2Zyi0kEkn+d//KLEiZDaR+l7GkCtUGPzb2MbT5rZCOtva9Jfs56JIK
R8Y5MZrKbxN+Ooz2WIV5454f4Lv0WZFdFwETH1RjFM9PcMN0G1EnXAcP1tPO
sk7GwfbmmtCBMpL8v1ttmyWry2Qwyb8gH22igHOvGRpVomTwYtRSmvYiBXwq
WH2jqyEVXLTYKeZyqeDQJHHzZX8aeB/jHafg0lYwVRbVByLbwMfDmrUcNR38
3lVB1kgY4KHbUxd5UbQh2bjg86WDy680D9G6d4BnLvsnHHH0/iqxr1CfAc7s
qpkvtaATo0+XdV701TnlauUX9NLS141qChOsCPvzJVS0fWWkJUxHF0ef8Yoy
0L/XHk0MZKId6xZiOxutjd+h1HPBMmbqedOKGP06XZJmPIKe1pX5ix+gRwZa
eySUneBmsqjYM4+mBppO1D7PBAcf88226yyweW9W0rA6C9zZbXDrebvAGvMF
H20J/UvRG7M52eDPwWONLlM2+GH+QbZXzwH33zIyqqRcsEldrqRE0YcC9icm
726wNa+n36vkgVvGO6zKYfRptrr3lYAPPlrr1jLa0bZsQuCJogWTffeLtDn4
T+oSzTnRhkjSmxnRHjAxuMJrv4funKN1TLnRzkhuLJFA/wE28b6c
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Radians\"", TraditionalForm], None}, {
        FormBox["\"2\[Pi]/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Qubit angle\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta]\"", "\"\[Phi]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}, 3.8350434682259083`*^9, 3.835044265433751*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 6.074, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0.01, 10, 0.001}}, Typeset`size$$ = {
    873., {225., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$125604$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$125604$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> DisplayForm[
        GridBox[{{
           ReplaceAll[
            $CellContext`BlochSphereVector[$CellContext`\[Theta], \
$CellContext`\[Phi]], $CellContext`t -> $CellContext`\[Tau]$$], 
           Quiet[
            ReplaceAll[
             Apply[$CellContext`SingleQubitRhoPlot, 
              Table[
               $CellContext`op[$CellContext`soln], {$CellContext`op, \
{$CellContext`phi, $CellContext`\[Rho]00, $CellContext`\[Rho]01, \
$CellContext`\[Rho]11}}]], $CellContext`t -> $CellContext`\[Tau]$$]]}}]], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0.01, 10, 0.001}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{928., {290., 297.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8350320112046747`*^9, {3.8350320557098074`*^9, 3.835032076409831*^9}, 
   3.835035587890105*^9, 3.8350356472829437`*^9, 3.8350357367417865`*^9, {
   3.8350358630353775`*^9, 3.8350358863324676`*^9}, 3.835039499147661*^9, 
   3.83503955958739*^9, {3.8350395986039467`*^9, 3.835039608463195*^9}, {
   3.8350396612778635`*^9, 3.835039686685804*^9}, 3.8350397630480413`*^9, {
   3.835039838144553*^9, 3.8350398598527*^9}, 3.835039941862978*^9, 
   3.835040470556122*^9, 3.835040511262545*^9, {3.8350412129757786`*^9, 
   3.8350412642638655`*^9}, 3.83504130613976*^9, 3.8350414167401485`*^9, 
   3.8350415152807217`*^9, 3.8350418133803406`*^9, {3.835041883540409*^9, 
   3.835041909924634*^9}, 3.8350419996336284`*^9, {3.8350420556770387`*^9, 
   3.8350421759095607`*^9}, 3.8350434682259083`*^9, 3.8350442654826174`*^9}],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.074`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1908,1042,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350853219165196`*^9}],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.074`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1908,1043,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350853221139917`*^9}],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"6.074`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"",2,1908,1044,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350853222765565`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1908,1045,30866947600037938740,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8350853224520864`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 102, 1, 111, "Title"],
Cell[685, 25, 93, 1, 32, "Text"],
Cell[781, 28, 262, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[1068, 37, 159, 2, 78, "Section"],
Cell[1230, 41, 25648, 625, 1908, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[26915, 671, 104, 1, 62, "Section"],
Cell[CellGroupData[{
Cell[27044, 676, 169, 2, 53, "Subsection"],
Cell[27216, 680, 789, 21, 58, "Text"],
Cell[28008, 703, 2120, 55, 270, "Input"],
Cell[CellGroupData[{
Cell[30153, 762, 6984, 175, 606, "Input"],
Cell[37140, 939, 505, 9, 23, "Print"],
Cell[37648, 950, 59976, 1048, 293, "Output"],
Cell[97627, 2000, 29494, 538, 295, "Output"],
Cell[127124, 2540, 2405, 47, 605, "Output"],
Cell[129532, 2589, 266, 6, 50, "Message"],
Cell[129801, 2597, 449, 9, 23, "Message"],
Cell[130253, 2608, 266, 6, 50, "Message"],
Cell[130522, 2616, 451, 9, 23, "Message"],
Cell[130976, 2627, 264, 6, 50, "Message"],
Cell[131243, 2635, 344, 7, 23, "Message"],
Cell[131590, 2644, 449, 9, 23, "Message"],
Cell[132042, 2655, 346, 7, 23, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132437, 2668, 176, 2, 53, "Subsection"],
Cell[132616, 2672, 813, 18, 78, "Text"],
Cell[133432, 2692, 2262, 57, 270, "Input"],
Cell[CellGroupData[{
Cell[135719, 2753, 6984, 175, 606, "Input"],
Cell[142706, 2930, 595, 11, 23, "Print"],
Cell[143304, 2943, 65220, 1134, 293, "Output"],
Cell[208527, 4079, 36371, 647, 295, "Output"],
Cell[244901, 4728, 2491, 49, 605, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[247441, 4783, 217, 3, 43, "Subsection"],
Cell[247661, 4788, 661, 10, 73, "Text"],
Cell[248325, 4800, 2721, 67, 270, "Input"],
Cell[CellGroupData[{
Cell[251071, 4871, 8576, 214, 738, "Input"],
Cell[259650, 5087, 827, 14, 23, "Print"],
Cell[260480, 5103, 14544, 287, 292, "Output"],
Cell[275027, 5392, 156668, 2634, 293, "Output"],
Cell[431698, 8028, 101161, 1719, 295, "Output"],
Cell[532862, 9749, 2705, 52, 605, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[535616, 9807, 263, 3, 53, "Subsection"],
Cell[535882, 9812, 2751, 62, 108, "Text"],
Cell[538636, 9876, 2882, 69, 274, "Input"],
Cell[CellGroupData[{
Cell[541543, 9949, 8466, 207, 738, "Input"],
Cell[550012, 10158, 1015, 16, 23, "Print"],
Cell[551030, 10176, 25131, 461, 299, "Output"],
Cell[576164, 10639, 39775, 715, 293, "Output"],
Cell[615942, 11356, 263, 6, 50, "Message"],
Cell[616208, 11364, 450, 9, 23, "Message"],
Cell[616661, 11375, 265, 6, 50, "Message"],
Cell[616929, 11383, 450, 9, 23, "Message"],
Cell[617382, 11394, 265, 6, 50, "Message"],
Cell[617650, 11402, 341, 7, 23, "Message"],
Cell[617994, 11411, 450, 9, 23, "Message"],
Cell[618447, 11422, 347, 7, 23, "Message"],
Cell[618797, 11431, 17131, 330, 295, "Output"],
Cell[635931, 11763, 2904, 54, 605, "Output"],
Cell[638838, 11819, 365, 7, 23, "Message"],
Cell[639206, 11828, 365, 7, 23, "Message"],
Cell[639574, 11837, 365, 7, 23, "Message"],
Cell[639942, 11846, 361, 7, 23, "Message"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

