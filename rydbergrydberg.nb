(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    183434,       3486]
NotebookOptionsPosition[    181550,       3418]
NotebookOutlinePosition[    181893,       3433]
CellTagsIndexPosition[    181850,       3430]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["rydberg-rydberg interactions", "Title",
 CellChangeTimes->{{3.811971011166643*^9, 3.8119710227062626`*^9}}],

Cell["P. Huft", "Text",
 CellChangeTimes->{{3.8119710266233625`*^9, 3.811971028517356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.812036266427552*^9, 3.812036274565545*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\gothr\\\\Documents\\\\Graduate \
Research\\\\Mathematica\"\>"], "Output",
 CellChangeTimes->{3.812036275158825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["single Rydberg state", "Section",
 CellChangeTimes->{{3.811971059534021*^9, 3.811971074218193*^9}, {
  3.8119761202895975`*^9, 3.81197612582969*^9}, {3.8120319817610683`*^9, 
  3.812032003095702*^9}}],

Cell[CellGroupData[{

Cell["algebra", "Subsection",
 CellChangeTimes->{{3.8120320134004145`*^9, 3.812032015589334*^9}}],

Cell["\<\
Single atom dipole matrix elements to be computed with PairInteraction module \
in python. \
\>", "Text",
 CellChangeTimes->{{3.81197110386451*^9, 3.8119711740232415`*^9}, {
  3.8119757764858866`*^9, 3.8119757867270527`*^9}, {3.811976066784577*^9, 
  3.811976068590216*^9}, {3.811978425140011*^9, 3.8119784301619263`*^9}}],

Cell["\<\
Single atom structure: include two ground states, intermediate excited state, \
Rydberg state. Assume that large Zeeman shifts isolate an effective 4 level \
lambda system.\
\>", "Text",
 CellChangeTimes->{{3.8119760735956793`*^9, 3.8119761470999784`*^9}, {
  3.8119763400632763`*^9, 3.81197636915459*^9}}],

Cell[TextData[{
 "Matrix elems. reshape H into atoms*states x atoms*states. \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{
      RowBox[{
       RowBox[{"4", " ", "atomi"}], " ", "-", " ", "statei", "+", "1"}], ",", 
      RowBox[{
       RowBox[{"4", "atomj"}], "-", "statej", "+", "1"}]}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "g1"], 
      SubscriptBox["\[Delta]", "ij"], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statei", ",", "1"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statej", ",", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "g2"], 
      SubscriptBox["\[Delta]", "ij"], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statei", ",", "2"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statej", ",", "2"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[CapitalDelta]", "e"], 
      SubscriptBox["\[Delta]", "ij"], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statei", ",", "3"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statej", ",", "3"}]]}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[HBar]\[CapitalOmega]", 
        RowBox[{"1", "A"}]], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "2"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "3"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "3"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "2"}]]}]}], ")"}], "/", "2"}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[HBar]\[CapitalOmega]", 
        RowBox[{"1", "B"}]], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "1"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "3"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "3"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "1"}]]}]}], ")"}], "/", "2"}], "+", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[HBar]\[CapitalOmega]", "2"], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "3"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "4"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Delta]", "ij"], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statei", ",", "4"}]], 
         SubscriptBox["\[Delta]", 
          RowBox[{"statej", ",", "3"}]]}]}], ")"}], "/", "2"}], "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["\[Delta]", "ij"]}], ")"}], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statei", ",", "4"}]], 
      SubscriptBox["\[Delta]", 
       RowBox[{"statej", ",", "4"}]], "Vdd"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nComputationally more friendly to define a matrix Hij that describes the \
energy levels and coupling scheme of atom i, plus the interactions to atom j. \
Then just build Hfull by iterating over Hfull and plopping in Hij at each \
section atom x atom section.hmmm this is mixing a single atom basis with a \
two-atom basis... doesn\[CloseCurlyQuote]t really make sense as framed. "
}], "Text",
 CellChangeTimes->{{3.8119767666849937`*^9, 3.811976772461507*^9}, {
  3.8119770210380845`*^9, 3.811977361889329*^9}, {3.8119774099496436`*^9, 
  3.8119776907220573`*^9}, {3.812030058103647*^9, 3.8120300939914293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hi", " ", "=", 
    RowBox[{"(", GridBox[{
       {"0", "0", "\[CapitalOmega]1B", "0"},
       {"0", "\[CapitalDelta]g1", "\[CapitalOmega]1A", "0"},
       {
        RowBox[{"\[CapitalOmega]1B", "\[Conjugate]"}], 
        RowBox[{"\[CapitalOmega]1A", "\[Conjugate]"}], "\[CapitalDelta]e1", 
        "\[CapitalOmega]2"},
       {"0", "0", 
        RowBox[{"\[CapitalOmega]2", "\[Conjugate]"}], "\[CapitalDelta]r"}
      }], ")"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.811977694380393*^9, 3.811977794086028*^9}, {
  3.81197784455519*^9, 3.811977904817491*^9}, {3.8119779430649643`*^9, 
  3.811977953583963*^9}, {3.811978059781856*^9, 3.8119780938794847`*^9}, {
  3.8119783149808874`*^9, 3.811978322010812*^9}, {3.812030041208006*^9, 
  3.812030046496875*^9}, {3.812030101409261*^9, 3.812030151921111*^9}}],

Cell["\<\
test building the hamiltonian with kronecker products using only two-level \
systems\
\>", "Text",
 CellChangeTimes->{{3.812030160145507*^9, 3.8120301790847583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H1", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]1", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]1", "/", "2"}], "\[CapitalDelta]1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]2", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]2", "/", "2"}], "\[CapitalDelta]2"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H12", " ", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "H1"}], "]"}], " ", "+",
     " ", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H2", ",", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8120301809072*^9, 3.812030242193406*^9}, {
   3.812030284454749*^9, 3.8120303132042327`*^9}, 3.8120303994139166`*^9, {
   3.812030630722088*^9, 3.8120306480422354`*^9}, {3.8120308617508698`*^9, 
   3.812030863104282*^9}, {3.8120315966550913`*^9, 3.8120316124931498`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812030237354156*^9, 3.812030242521632*^9}, {
   3.8120302954932985`*^9, 3.8120303135118318`*^9}, 3.8120303998924*^9, 
   3.8120306504940243`*^9, 3.812030863797557*^9, 3.8120316131481867`*^9}]
}, Open  ]],

Cell["Now three atoms:", "Text",
 CellChangeTimes->{{3.8120307225666714`*^9, 3.8120307558840237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H3", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"\[CapitalOmega]3", "/", "2"}]},
      {
       RowBox[{"\[CapitalOmega]3", "/", "2"}], "\[CapitalDelta]3"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "H12"}], "]"}], " ", "+",
    " ", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"H3", ",", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8120307473209925`*^9, 3.8120308353709655`*^9}, {
  3.8120308676428714`*^9, 3.8120308994836316`*^9}, {3.8120312352229805`*^9, 
  3.8120312439130335`*^9}, {3.81203167518322*^9, 3.812031706909399*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0"},
     {
      FractionBox["\[CapitalOmega]1", "2"], "\[CapitalDelta]1", "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0"},
     {
      FractionBox["\[CapitalOmega]2", "2"], "0", "\[CapitalDelta]2", 
      FractionBox["\[CapitalOmega]1", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]2"}], "0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"]},
     {
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", "0", "\[CapitalDelta]3", 
      FractionBox["\[CapitalOmega]1", "2"], 
      FractionBox["\[CapitalOmega]2", "2"], "0"},
     {"0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", "0", 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{"\[CapitalDelta]1", "+", "\[CapitalDelta]3"}], "0", 
      FractionBox["\[CapitalOmega]2", "2"]},
     {"0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], "0", 
      RowBox[{"\[CapitalDelta]2", "+", "\[CapitalDelta]3"}], 
      FractionBox["\[CapitalOmega]1", "2"]},
     {"0", "0", "0", 
      FractionBox["\[CapitalOmega]3", "2"], "0", 
      FractionBox["\[CapitalOmega]2", "2"], 
      FractionBox["\[CapitalOmega]1", "2"], 
      RowBox[{
      "\[CapitalDelta]1", "+", "\[CapitalDelta]2", "+", "\[CapitalDelta]3"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.812030886670458*^9, 3.8120309027320185`*^9}, 
   3.8120312445475373`*^9, 3.812031710251564*^9}]
}, Open  ]],

Cell[TextData[{
 "What is the basis of this Hamiltonian?\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"123", "g"}], ",", 
     RowBox[{"1", "e"}], ",", 
     RowBox[{"2", "e"}], ",", 
     RowBox[{"12", "e"}], ",", 
     RowBox[{"3", "e"}], ",", 
     RowBox[{"13", "e"}], ",", 
     RowBox[{"23", "e"}], ",", 
     RowBox[{"123", "e"}]}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nThe singly-excited state is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      SqrtBox["3"]}], ")"}], 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
      "0"}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.8120312779991755`*^9, 3.812031451649247*^9}, {
  3.8120315338940687`*^9, 3.8120315692131248`*^9}, {3.812031748887643*^9, 
  3.8120317823897038`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["rabi flopping", "Subsection",
 CellChangeTimes->{{3.8120320269110794`*^9, 3.812032045999884*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "constants", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[HBar]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ee", "=", " ", "1.602*^-19"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", " ", "=", " ", 
     RowBox[{"3", "*", 
      SuperscriptBox["10", "8"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", " ", "=", 
     RowBox[{"4", "\[Pi]", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]0", " ", "=", " ", 
     RowBox[{"1", "/", 
      SqrtBox[
       RowBox[{"c", " ", "\[Mu]0"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qq", " ", "=", " ", 
     RowBox[{
      RowBox[{"ee", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", "\[Pi]", " ", "\[Epsilon]0"}], ")"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.811975789738289*^9, 3.8119757914525995`*^9}, {
  3.8119758384794707`*^9, 3.811976007140537*^9}, {3.811976189672579*^9, 
  3.8119762347925587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "single", " ", "atom", " ", "Hamiltonian", " ", "with", " ", "effective", 
    " ", "basis", " ", 
    RowBox[{"{", 
     RowBox[{"g", ",", "e"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[CapitalOmega]", ",", "\[CapitalDelta]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numStates", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H1", "=", 
     RowBox[{"(", GridBox[{
        {"0", 
         RowBox[{"\[CapitalOmega]", "/", "2"}]},
        {
         RowBox[{"\[CapitalOmega]", "/", "2"}], "\[CapitalDelta]"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"assume", " ", "real", " ", "Rabi", " ", 
     RowBox[{"freq", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H2int", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"numAtoms", " ", "numStates"}], ",", 
         RowBox[{"numAtoms", " ", "numStates"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"H2int", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"numAtoms", " ", "numStates"}], ",", 
        RowBox[{"numAtoms", " ", "numStates"}]}], "]"}], "]"}], "=", 
     "\[CapitalOmega]B"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"interaction", " ", "Hamiltonian"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.8120321199097586`*^9, 3.8120321377282906`*^9}, {
  3.812032183183058*^9, 3.812032287377491*^9}, {3.812032367147503*^9, 
  3.812032497202208*^9}, {3.812032977459511*^9, 3.8120330534591637`*^9}, {
  3.812033121977349*^9, 3.8120331525833473`*^9}, {3.8120333271320696`*^9, 
  3.812033344197033*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H12", " ", "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "numStates", "]"}], ",", "H1"}], "]"}], 
    "+", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H1", ",", 
      RowBox[{"IdentityMatrix", "[", "numStates", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H12", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8120322033613386`*^9, 3.8120322069105406`*^9}, {
  3.812032268489911*^9, 3.812032310948084*^9}, {3.8120323444763346`*^9, 
  3.812032357765974*^9}, {3.8120331602403135`*^9, 3.812033185926959*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{"2", " ", "\[CapitalDelta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.812032207259726*^9, 3.812032241695924*^9, {3.8120323417333837`*^9, 
   3.8120323580565414`*^9}, 3.812033081771367*^9, 3.812033156313499*^9, 
   3.8120331894534035`*^9, 3.81203335567986*^9, 3.812033407982769*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"H12", "+", "H2int"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8120325819432306`*^9, 3.812032596166089*^9}, 
   3.8120333499286237`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], "0"},
     {
      FractionBox["\[CapitalOmega]", "2"], "\[CapitalDelta]", "0", 
      FractionBox["\[CapitalOmega]", "2"]},
     {
      FractionBox["\[CapitalOmega]", "2"], "0", "\[CapitalDelta]", 
      FractionBox["\[CapitalOmega]", "2"]},
     {"0", 
      FractionBox["\[CapitalOmega]", "2"], 
      FractionBox["\[CapitalOmega]", "2"], 
      RowBox[{
       RowBox[{"2", " ", "\[CapitalDelta]"}], "+", "\[CapitalOmega]B"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8120325848763714`*^9, 3.812032596428321*^9}, 
   3.8120330827911663`*^9, 3.812033157214533*^9, 3.8120333576269274`*^9, 
   3.812033411009194*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]B", "=", 
     RowBox[{"20", "\[CapitalOmega]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hamiltonian", " ", "=", " ", 
     RowBox[{"H12", "+", "Hint"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"numAtoms", " ", "numStates"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "start", " ", "with", " ", "all", " ", "atoms", " ", "in", " ", "ground",
       " ", "state"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"eqs", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ics", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"numAtoms", " ", "numStates"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"eqs", ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"hamiltonian", ".", "\[Psi]"}], ")"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"ics", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
          RowBox[{"\[Psi]0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sys", " ", "=", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Join", "[", 
       RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "\[Psi]0", ",", "sys"}], "}"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"sys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "soln", "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8120326310307016`*^9, 3.812032717415327*^9}, {
   3.8120327519451046`*^9, 3.812032766185772*^9}, 3.812032802698085*^9, 
   3.81203296317837*^9, {3.8120330900433073`*^9, 3.8120331055650053`*^9}, {
   3.812033200974555*^9, 3.8120332434824085`*^9}, {3.812033277939681*^9, 
   3.81203332205126*^9}, {3.8120334901584063`*^9, 3.812033500978674*^9}, 
   3.812033539184661*^9, {3.8120335959741964`*^9, 3.8120336038399963`*^9}, {
   3.812033760698806*^9, 3.8120337835128117`*^9}, {3.812033871982972*^9, 
   3.8120338723573837`*^9}, {3.8120345945584507`*^9, 3.812034623601763*^9}, {
   3.812035215194293*^9, 3.812035233047205*^9}, {3.812035270672146*^9, 
   3.8120352785507517`*^9}, {3.8120359619125443`*^9, 3.812035962731064*^9}, {
   3.8120360527905293`*^9, 3.8120361454757648`*^9}, {3.812036311573468*^9, 
   3.812036360055635*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8120363142204657`*^9, 3.812036360455145*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"leg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<\!\(\*TemplateBox[{RowBox[{
SubscriptBox[\"g\", \"1\"], 
SubscriptBox[\"g\", \"2\"]}]},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{RowBox[{
SubscriptBox[\"r\", \"1\"], 
SubscriptBox[\"g\", \"2\"]}]},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{RowBox[{
SubscriptBox[\"g\", \"1\"], 
SubscriptBox[\"r\", \"2\"]}]},
\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{RowBox[{
SubscriptBox[\"r\", \"1\"], 
SubscriptBox[\"r\", \"2\"]}]},
\"Ket\"]\)\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "soln", "]"}], "2"], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "leg"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Rabi Oscillations, `` atoms, \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)=``\[CapitalOmega]\>\"", ",", 
         "numAtoms", ",", 
         RowBox[{"\[CapitalOmega]B", "/", "\[CapitalOmega]"}]}], "]"}], ",", 
       "Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t/\[CapitalOmega]\>\"", ",", "\"\<Probability\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<plot_rabi_flop_``atoms_``states_blockaded``.png\>\"", ",", 
      "numAtoms", ",", "numStates", ",", 
      RowBox[{"\[CapitalOmega]B", "/", "\[CapitalOmega]"}]}], "]"}], "]"}], 
   ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8120339387180862`*^9, 3.8120340067756634`*^9}, {
  3.8120342152885523`*^9, 3.8120342441158876`*^9}, {3.812034383659404*^9, 
  3.812034462421711*^9}, {3.812034659984968*^9, 3.812034966108579*^9}, {
  3.812035014877201*^9, 3.812035190703578*^9}, {3.8120352433652563`*^9, 
  3.812035246081111*^9}, {3.8120353286570177`*^9, 3.8120353628028383`*^9}, {
  3.812035570358143*^9, 3.8120355710723085`*^9}, {3.812036322547566*^9, 
  3.812036326010353*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
f/r8fzochLWxpLmrQhoW7uef4jtN5XfNyqe0Og0p83KaAmc5iKSTQZck76Vj
Hd8atQ0XOYim2oPm61I+oW9vo8yOaxyEmDF/WMjxL3j+VJf3hDkHEXeFfXL3
vxzki94scPfmIC4lBm/KyciHaFvlWhNfDiJIUbn2mFABrEMO3tX05yBsIu8f
fulYgN3rBFatDKTyv3bqgfzJQgTz/7z6OpyDOCsl11lA/oIFQ2w+PImDmD06
rWigUwrxwRaZjDIOYm/lyB7Jn5VwzjgT/m8pJ/Fia8FvuchG7K489nyAh5N4
t36sX7G/EX/6lU0nl3MS0T82H7mypwnSwjsPcvNzEjN5xYuLuU1oc2Y07l7P
SWhHfyQftv6Bok7GCgcpTsLsXdJeDpFWjAwKOggf5ySe//5zbI/OPwQzeG9t
OclJlMnwRyk/+Ad1Uc6T0lqcxPb/9F9pBP5D6KnR9WqnOYnTnNu0DrX/w7HM
ooy7lzkJ5YB9etn32vHOxZrMvsNJ3OJWddnu2YHLYs16lzw4CaNjr1cs+dyF
RLPfISpenIRUpPhHt/ousOXmNG99xUkksilJMZldeHcp/OK0LydBy3J1s5br
xojvzbN+wZzE1I8jP/Ykd8N5yeiJ8nhOovOm38aOiB4kDHIePFTMSVx2uWSY
ZdyHBcWpx9tKOQl5Yl379LM+aL/ozeQr4ySOx+v3LovoA3NzicLfSk7i0m2O
lKT6PhBXXsraNnISF11N53uIftRUrtue0ctJeE/WF0UvHcDcp13rpZYwCPqJ
OCuth4PYGczM5+JmEN/tPpyfdh+EvuNXs+6lDGKV5v7LRuGD+HnsWEH4cgZh
qMq0jC8ahPvfm/cEVzMIuxaBuoA1QxBaGlrIuZlBHHcqUGp6P4ST5HXzDgkG
sbuvYsfClyE41Eht+LaFQVwaYmn2FA+hM/SLuc12BrFksIyHa3AICTK1G8Zl
GMSno8pxj6WGcUCXx+KvCoPwXKe9dCR0GCYq1cI5qgyCbY19h1oCxfuSgUVB
agzCYO/WX3pfhsExJilyToOKf/xzcUXVMEqfHSr+rc0g8q7w+WewU3xsvNQy
/hSD2P/+a9SK5SR2a1eKvDjDIK4n5C3bupbiv/VXLFUvMAibg2kbX+8kcTnJ
WjRLn0HcWLvKzOAsCU8/5ZKAawyCNLPan3KFRJ4114MH1xlEqYsSLdeQ4ovD
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
FZehtHvpsTNO7VxbA7LxmNPVdh3+Bz3WC8U=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
+QJimi4RaQMk7M39xjbcW4DQ4atzbb0kNAp3dtIfLECM1k4f/kVCaG1NWfij
BTiezXv9jU6i/6Z5ppH9ArSGv5poMPuR/m1l9EZHZv0n2W77M/vlxBv/stt5
ATZuEmRIPYkz147bRbst4KTva9KomsTQStfzUj4LMHppMLPpB4lsI0nVfr8F
VMfsVpAoYPYrvXBbbNAC4JytRv9KYqPeMsfm8AXc+OA++DKZxMint1O/oxYg
RfKYunwkkUM98Ovj+wVs0REP2cvUp278wy/ySQuwN/r4pTmQhPTy2tjhlAXo
/ZS9U/SSxNS5DL+kjAUEfDA1vO3G1Pvc+O0d3xbgqRxsNf2QxI/jZmJKlQtI
+/rVtEuHef/ecq2crl6Aet6OfamnSBiPx85m1C9gZCpJjWDet8Xg3to97QtY
3bb5h88OEkqD+s77hxZw0G2nApXG7PeBBcuFYWZ9Lqdey5yjo+blG/1v4wu4
UnVQQHqUDrM9zbvxbwGjC9Ef9jfTEeWq+VuVcxGdzQ9XHo2hw7JtpJG6chG6
C3V7+wLpUNnmXVjMs4jZ8f4zqu50tDaWhagLLmKEB//tv0PHaqnDpzWkF3F6
e52ZkgId9Ie/9nFvWUSDf+TNZgk6EiqfylRuXURlxtFzB/noOGqVQzm9axE1
VuMs2pOdeFK0K+2s2iLYVXJkvyZ34s8VWaGLxoug5z6TaRDvxKXb7XJm1xeh
mjiVTKzsRKn1C9jfWgTjs9ef2zMdeOc5dT3y3iJevZ2/wf6zA4YZ+Rm/nRYx
F+fsuf9BB+o5L2rZMocb1StF3m2f2/H1k/uLkN5FFIn3XPok0IYtXw5EJQ4u
4kVD2rMX/1oRXDyakfd3EdFVgtR9na140Hq+s2dqEQFB+i//RbdiO1VCXp59
CddfCZUpbm9FtM6XshypJVD5lATOHmyB5+IQG/36Eu661u31O9CEY3f9Sz/e
WsLxdo87/huawNZ30MvGfAm8D+YEHy014kmlDx+v9RLK4jswktcIy5DdEmou
S+Cx89TzO9QIHWUnfIxewsZ0fZUDRAMkHqyzte5aguKHmuGu7XX48vfo6KpL
y2i8mZNrMl+B3S9CPUr1l1FRzUa2fq5A6vZxKacry5BXzmYzfFiBuHtv9KZN
l1HW03c+ZLocwbN/y9ptltEXmeVFGS+DNZtvzIeAZfDp3DdI+1sCRZGOi6q1
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
+QJimi4RaQMk7M39xjbcW4DQ4atzbb0kNAp3dtIfLECM1k4f/kVCaG1NWfij
BTiezXv9jU6i/6Z5ppH9ArSGv5poMPuR/m1l9EZHZv0n2W77M/vlxBv/stt5
ATZuEmRIPYkz147bRbst4KTva9KomsTQStfzUj4LMHppMLPpB4lsI0nVfr8F
VMfsVpAoYPYrvXBbbNAC4JytRv9KYqPeMsfm8AXc+OA++DKZxMint1O/oxYg
RfKYunwkkUM98Ovj+wVs0REP2cvUp278wy/ySQuwN/r4pTmQhPTy2tjhlAXo
/ZS9U/SSxNS5DL+kjAUEfDA1vO3G1Pvc+O0d3xbgqRxsNf2QxI/jZmJKlQtI
+/rVtEuHef/ecq2crl6Aet6OfamnSBiPx85m1C9gZCpJjWDet8Xg3to97QtY
3bb5h88OEkqD+s77hxZw0G2nApXG7PeBBcuFYWZ9Lqdey5yjo+blG/1v4wu4
UnVQQHqUDrM9zbvxbwGjC9Ef9jfTEeWq+VuVcxGdzQ9XHo2hw7JtpJG6chG6
C3V7+wLpUNnmXVjMs4jZ8f4zqu50tDaWhagLLmKEB//tv0PHaqnDpzWkF3F6
e52ZkgId9Ie/9nFvWUSDf+TNZgk6EiqfylRuXURlxtFzB/noOGqVQzm9axE1
VuMs2pOdeFK0K+2s2iLYVXJkvyZ34s8VWaGLxoug5z6TaRDvxKXb7XJm1xeh
mjiVTKzsRKn1C9jfWgTjs9ef2zMdeOc5dT3y3iJevZ2/wf6zA4YZ+Rm/nRYx
F+fsuf9BB+o5L2rZMocb1StF3m2f2/H1k/uLkN5FFIn3XPok0IYtXw5EJQ4u
4kVD2rMX/1oRXDyakfd3EdFVgtR9na140Hq+s2dqEQFB+i//RbdiO1VCXp59
CddfCZUpbm9FtM6XshypJVD5lATOHmyB5+IQG/36Eu661u31O9CEY3f9Sz/e
WsLxdo87/huawNZ30MvGfAm8D+YEHy014kmlDx+v9RLK4jswktcIy5DdEmou
S+Cx89TzO9QIHWUnfIxewsZ0fZUDRAMkHqyzte5aguKHmuGu7XX48vfo6KpL
y2i8mZNrMl+B3S9CPUr1l1FRzUa2fq5A6vZxKacry5BXzmYzfFiBuHtv9KZN
l1HW03c+ZLocwbN/y9ptltEXmeVFGS+DNZtvzIeAZfDp3DdI+1sCRZGOi6q1
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ZGHou4Pt+k+IeGkz9TFpOrnKXuRTvOpLwogZ3NUiSyetA+xd00/XE8MtOefL
5Sn/rp+78orzgbj28J3rRUU6ubCh6OV5gxZi/bmp2YeV6KTIugFv1/8+E2KR
2i+2KdPJ2FTpA8/NO4nn67fEmKvQyV2V+h+lPvUSdWfk6p1U6aSxYe27baID
xPsPH2U3qtHJOT33HnCyfxEdNlal+5bSyeA7yyZv5/0juhP4k4c06WRO+6l9
V2YxiIHaSttELTr50bKqNGMbixg10v2eo0cntYO+0gM2TBCcsF+6hSvo5GOV
wKaskSliuvRadJkBnTQXeZhZfJpPzFomL9tgRCcXPVqp2TxEh9jOT9tbjenk
c3rFtlyjGZDOS7nTY0on0/VkCxdGC0NFQWDDIehk54uDby9/mwl1z8dn6eZ0
kpt59fgT5ixonf6vV8ySTr6ZmvYbGp+NFe90dRWt6eTwxczxBT/nYPWswUNL
bCn/qufHxtaIwtQyv07Pnsr/ksHK0UNzQR7ZKmPqSCd9Nw4HFSwUg021/HZr
ZzpZ3NGVdbpQDE7jn267udJJrR2n1oopzoPHqtSJLe50MlPpn6px6Dxs3G9t
E+hJJzlC6bp378/DthLBmTBvKj/6kYWPu+dh56/HPbEb6ORR47Th5ZPzELQk
XCd5E500vbQ5eccscezz1TuUtYVOvuRor7QRFUd4zuDrPB866baLaahN6aM/
50uX+NLJn4tKWxqFxHFUxse3fAeVTxHddWsoOclV4fbznXSy9nuTzm1q/6nU
Ju57fzp5atePS5cXiyPzTap1RyCdlB+JrzzkJI7zM2zO9O+mk/dcFt+qyRBH
Lmg9I8F08nzK3/MXmeLIj6nSntxLJ7tvfOxfGS2BWxXhUSKhdHJMbI5Lmix1
nzH1XkuG0Um9aw1zNyVI4qH+bynlcDqpM7BZ12G2FKqCr29bFknp/3tVxCuU
wtNCnxKDKCrfsqtWXvGTxqt+Be66aDrprvff2DwTGbxd1Gxlf5hObt8giC7X
lsWnLacyveLo5Ge/T5/zTeXQnm3T7XuUTq5eoF4c5C+PzhaadnACnRzp+tCk
V6KAPonqg5HH6eSjJqH2e6Lz8feEvlTaSTop6B15UiChDMbL3z4XUujkM/Fr
8bH3FoIruF58/RSFd+yX7N87FkE4StGqKoNOeibKn38bvhiiD5szXp+hkxfa
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
OmuQU3pwiDuKgpb92gUy5PqBhuHZoWgK3kvy1TCtsgZj/VepdedI/tlFxD4g
471Bp9u3YimY92yYVyDPGlytex5Gn6fghu2JD9elWsMXh731Pgmk/pNODxSd
soYDbpOdZhcpKGKRuf04mX/MHq45zssUVBsyfGlibA27X0tkcadQ8I9MzJyo
vDWYqmiZrv6Pgtqvvx/kXGkNkhetB4XTKcjukbcm5q3g38T2OOmrFAxcsfaA
4pgVdDqHbFiXSUGuP4fWeH+1gtKHMR/UrlGwqfUY/b9PVnBJNCtsYzYZ37Ty
56UvVhB4rEQUbpB+V3I7jCD3b+qvr7DMJddxZpqnl6xgnVmft/1tCn6eFFQ7
IWoNtFtTdNd8Cqpso/9wYpL1cXEXbC+g4AGvxR9ryXoq90s67L5LwXI/7mp6
tjVkvNOa8r9P/l/+OqnrkzWEa9j8F1pExrMa/uWjaAMuyZ6GkSUk/3u/fIDD
NqD5N+TTmTKSPwG8yj/e2cAK99gz5x9S0GPskP8zVVuolyp9e+UpBaddc1vu
LtiCUQG3x+Masv7y/3q2vN0MIiukOKpqKdihm9vXbGIH00HaN+vrKNjmef+M
wkM7uK+7Y7TjLQWpFZKv76TbQ3x6aOKnRgpuzRG/nUJ1AN/5WO3vTRSs+B0l
3bHPASx2XOv82UxBpX/u0pH1DiBbXRo53ULy7ZKQWtNKR1iSeyO92EbBNSei
43CjI/Sc+/SS1kniJ1zCMnJ3hMcjv315P1LQOyToe1S4I6Ta8fAK9FBQIt5e
bOiSI4Q8kCoS7yP118ubu/mWIzjy67jI9VNwc/HlpdtljqASZjur/IWCh67K
vqC/cATurh2ZWt9IPMUI1rlaRxg0PGRiOEhBlopy/rZXjlCdFTdgOkTyo6Tr
yOtqR7jGeT3WdoRC3hcq0+WfOkKkT5kqa5T08znPuM77jrC17k3z1p8UHOSR
T3XJdgRdpf5DXuMUvEMMSMskOgJ/wh+RfZMUzD1Ycv1VpCOM/+KpCPpNwX2x
oTd69zpCI0vaO3yanB/FxfWcLEe4U6ZDPzlD6u/cJZ5WQ0c4K7zpzrk5Ej+N
vMfT8o6wK2Kn/cV5Cvrn1gDPakfAvkOTqYsU/OD518f9nwOIm5xPzeIgcKfu
r9QfnQ4we+O6wS0KgYvr6JeGnjpAO7287y6VwK6nRU/dch2gZN/b02V0Atlv
+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
FTLtGif53krJiTeiURFDdXdXurpA3h8jcVsGFbuDQq9X+bnAsaGOAjduKqre
fW506YgLsLoPGu5eRsVG7xXfPp52AYV3vG8P8pLxCgdFfc66wNyLPPeTK6nY
k5RXSI1ygXclZiMJq6mYFszMKoog9WBcOnCJn4pm/9hOLwJcQLdO7nOKABU/
L/jEGri7wIhjSk+6EBWfrup94mDiAlkfaZ2ZIlR00PlXuHkteb5PWEu2GBUL
Lj7uiOFwAfrPwXe5ElRc7XVI+VCXMzw57PYmX4qKK71q3OPvOUMAZ33tXRkq
KjwFusdJZ5A+r1dVtJY8b4/plaMOztC6Jv9ZmTwVtxY5v48l+Wy0Lq7k+Xoq
mq4JbZAqYcN40dy9KmXyvG5/bcpxNtw03H+nVpWKIdF2387akP132JzdqEFF
ng1rTogOsOBF57OMZi0qdoh7HfQlH6Ch3qppbTpUdDObPNoax4J1o5mXuzaS
9XkM83/yZkHPoRUXe/XJeL3zh5aYLEhcOh732ZCKTD4tlRQpFpjH/ooeMKbi
vto7Sr+pLJjh23lqGKi4lnubtOsvJyjIeB85ZkJFw/Wa4wN9TuCpYBI+YUbF
yatyDaUtTsD3oCjkjwUVd7X/jqhqdIJX+rIHZq2oGDq2jfm7wQmO1iT5LdhQ
MaLhYq9UsxNssCP2cG6m4pk17vq0j07wpT3Ei2ZPRdvDBwLsvztB6s5vHtyO
5PnzW6PTZpzAdsR5Cy+Lin9f/RXZz0vOp5Ba9mpnKi4MxHw0l2dB8YKOg4Ar
Fa/zTxpfBhaIrhaylHCnosEaJo/sERa8u3LORMaDih+qX7qI/EfOM7kZI3lP
KjKeLWTOlbJgeGOXlqo3FW/4hCp0jbEgo8pGTcOHisbKo+oXyXnsuOmJks4e
Kl7boTSUS/oBtU1JQd+XisenjWwuaLLhkedVGWM/Kha3+gjVkvr1H1omYeJP
8t2csq3Dng3SByOFLQKp2DeXdNXTlQ2t/0b5bYKo+Kjux7plW8n7U/T2lXYH
qXh+y9ft6eR3o5XveJxCqahCTNl+JvePpzHpLmFU1OGuuvDKhOSH7H3OreFU
HOYIi7Ql/cqtUGrB4ygVJRpHHY8KsYFHN3FmZyQVCcX4kBNzLKio5Pjtc5yK
nbID3omd5H3AJviX70kqLsu+bPeviJynLZ9H/E9T8W3Cg0zxcyz46MEaDIqi
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
eZa24dW9s3Tc011w9kXSDyaX5QlqWQwdczNU/c9PDzHjzr43fRpHxzP6qcFv
IgeZy+tkTlXF09Hra7gZQ+Ub8yIjpLLuAh3rcn2nV/J8YfJZv1xoTKQjV5RE
nI9YPzM5RsCoNYnkm/A+mZFXPUzB13uOfkymY1Z70ad39V3MNO5Hj/pTSX+g
ZAyYMzuYorbcfwfT6HgxWfjVc4U2Zmacu87YFTou5Zi3SpxoYUq/LQiZyqDj
3ifKYs6mH5g5yxaKZrPoeDlH4s28bzNTbrP9+NJ1Osr+xGSHkffM2/HXNtBv
kHqdVb2S//Q9U6lx3H95Lh0fbJ+aKWl+zyzkNS3gu03Hpz3mWYNSzcwN9peH
hfPpWFtoSHuZ3swsuvBNUaqA9Ju2/+r8ND8wtZt09sjfpWPjumGJZ70fmOUr
z91Uvk/yVX+lpEBiC1PPsfOLRhEdX3G+zNeFVubTxPUyeiV0vDnpfFnvSyuT
2Xx0B7OM3H/q8F2Bg23MF6sbMs0f0pGDz6m9e7iNacqS6LF9TEfRgncOrZbt
zJdJgaJOT+k4eP/5k96YdqZlS+UWt+d0nFn9b8isuJ35mn/1f9srSX0O/APR
+nbmZmfvtl1VdLxlf1PkZ3M7811yCb9fDR197k/MjXS1Mx3bqKygWtJ/kroF
MkbbmR8EXBPD6ujo8cG2+o5wB9PZ9fa7yNd0XFGlfaItsIPZkTqz/Mxbcm2v
76nP2cl077DZFNtIR41N3iEnv3Yye4Suxl5souM71g+ftvUfmZ5bRutSmumo
ci6dQ3a4m/k5zZie0UL6Rae6/G+dPqZP1wXznDY6eutoXrFI6mcOivSfzusg
50m52yOKzxemr7tG1b0uMp74aOZi2jfmjyunl0q7SX5rMnpk9b8zA7tbjJ/2
0rHXh+fBvO0Ic1xMPrLqEx0Nfh1t+dUyxjzoEfak7jPp/2qEQNWPceafjLqZ
xq90zB6s4BtWnmKG9wpvbB2g40Amnb33zh/mnITfoY/f6Sj/tFtl154ZZqTn
05L+YTr+2XdJ7cv2f8zFrOWTgz9IfnpMPKJcWGQS0vcDp37RUd1kW9rzGgqc
3clxd3aCjopCoyLCN6jAle30Y2mKjnMRmZ8Uk+mwXPb33uUzdEyLmCjem8ED
gnL6XvIcDDy8LNqPY+9qwPTov1wUBu4InzzeyuKDfSs+JIwSDDxy8G5NzEZ+
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
rhUMUyhyq/+7tMRA179y2vqEKfwPyCfxEQ==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 2.1862449745954978`*^-26}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox["\"t/\[CapitalOmega]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"Rabi Oscillations, \\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\) \
atoms, \\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(B\\)]\\)=\\!\\(\\*FormBox[\\\"20\\\", \
TraditionalForm]\\)\[CapitalOmega]\"", 
         StringForm[
         "Rabi Oscillations, `` atoms, \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)=``\[CapitalOmega]", 2, 20], 
         Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"g\\\", \\\"1\\\"], \
SubscriptBox[\\\"g\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"r\\\", \\\"1\\\"], \
SubscriptBox[\\\"g\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"g\\\", \\\"1\\\"], \
SubscriptBox[\\\"r\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\"", 
       "\"\\!\\(\\*TemplateBox[{RowBox[{SubscriptBox[\\\"r\\\", \\\"1\\\"], \
SubscriptBox[\\\"r\\\", \\\"2\\\"]}]},\\n\\\"Ket\\\"]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8120348460180254`*^9, 3.8120348614983006`*^9}, {
   3.8120350377553368`*^9, 3.8120350501641417`*^9}, {3.8120351651371155`*^9, 
   3.812035191176264*^9}, {3.812035238601058*^9, 3.8120352464778843`*^9}, 
   3.812035283499307*^9, {3.812035340352313*^9, 3.8120353637812185`*^9}, 
   3.8120355787968903`*^9, 3.8120360004339266`*^9, {3.8120360634148664`*^9, 
   3.8120361554432697`*^9}, {3.81203632902205*^9, 3.81203636293923*^9}}],

Cell[BoxData["\<\"plot_rabi_flop_2atoms_2states_blockaded20.png\"\>"], \
"Output",
 CellChangeTimes->{{3.8120348460180254`*^9, 3.8120348614983006`*^9}, {
   3.8120350377553368`*^9, 3.8120350501641417`*^9}, {3.8120351651371155`*^9, 
   3.812035191176264*^9}, {3.812035238601058*^9, 3.8120352464778843`*^9}, 
   3.812035283499307*^9, {3.812035340352313*^9, 3.8120353637812185`*^9}, 
   3.8120355787968903`*^9, 3.8120360004339266`*^9, {3.8120360634148664`*^9, 
   3.8120361554432697`*^9}, {3.81203632902205*^9, 3.812036363333432*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc testing", "Section",
 CellChangeTimes->{{3.8120321084963675`*^9, 3.8120321102933493`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"system", " ", "params"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numStates", " ", "=", "4"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"single", " ", "atom", " ", "states"}], "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numAtoms", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dim", " ", "=", " ", 
     RowBox[{"numStates", "*", "numAtoms"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalOmega]1A", ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"\[CapitalOmega]1B", ";"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalOmega]2", ";"}], "\[IndentingNewLine]", 
   RowBox[{"Vdd", ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "build", " ", "the", " ", "hamiltonian", " ", "in", " ", "a", " ", 
     "generalizable", " ", "way", " ", "for", " ", "more", " ", "atoms"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Hfull", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"atomi", "=", "1"}], ",", 
     RowBox[{"atomi", "<", 
      RowBox[{"numAtoms", "+", "1"}]}], ",", 
     RowBox[{"atomi", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"atomj", "=", "1"}], ",", 
       RowBox[{"atomj", "<", 
        RowBox[{"numAtoms", "+", "1"}]}], ",", 
       RowBox[{"atomj", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"statei", "=", "1"}], ",", 
         RowBox[{"statei", "<", 
          RowBox[{"numStates", "+", "1"}]}], ",", 
         RowBox[{"statei", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"statej", "=", "1"}], ",", 
           RowBox[{"statej", "<", 
            RowBox[{"numStates", "+", "1"}]}], ",", 
           RowBox[{"statej", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Hfull", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"numStates", " ", "atomi"}], " ", "-", " ", "statei", 
                "+", "1"}], ",", 
               RowBox[{
                RowBox[{"numStates", " ", "atomj"}], " ", "-", " ", "statej", 
                "+", "1"}]}], "]"}], "]"}], "="}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.811975941372938*^9, 3.81197594291763*^9}, {
  3.8119760233216057`*^9, 3.811976023750677*^9}, {3.8119761849252896`*^9, 
  3.811976238820321*^9}, {3.8119762970152073`*^9, 3.811976327493642*^9}, {
  3.8119763728698115`*^9, 3.811976419658043*^9}, {3.8119764909618597`*^9, 
  3.8119767297301025`*^9}, {3.81197677517649*^9, 3.811976800869766*^9}, {
  3.811976870581002*^9, 3.811976996868896*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.8119775825855646`*^9, 3.8119775841089497`*^9}}]
}, Closed]]
}, Open  ]]
},
WindowSize->{759, 697},
WindowMargins->{{Automatic, 351}, {-3, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 113, 1, 101, "Title"],
Cell[696, 25, 91, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[812, 30, 170, 3, 30, "Input"],
Cell[985, 35, 148, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1170, 42, 206, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[1401, 49, 97, 1, 49, "Subsection"],
Cell[1501, 52, 332, 6, 30, "Text"],
Cell[1836, 60, 316, 6, 49, "Text"],
Cell[2155, 68, 3766, 100, 175, "Text"],
Cell[5924, 170, 879, 18, 108, "Input"],
Cell[6806, 190, 176, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[7007, 198, 1192, 32, 142, "Input"],
Cell[8202, 232, 1280, 31, 142, "Output"]
}, Open  ]],
Cell[9497, 266, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[9624, 271, 839, 22, 86, "Input"],
Cell[10466, 295, 2310, 54, 258, "Output"]
}, Open  ]],
Cell[12791, 352, 947, 30, 80, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13775, 387, 103, 1, 49, "Subsection"],
Cell[13881, 390, 1114, 31, 156, "Input"],
Cell[14998, 423, 2014, 55, 181, "Input"],
Cell[CellGroupData[{
Cell[17037, 482, 638, 15, 69, "Input"],
Cell[17678, 499, 1276, 32, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18991, 536, 184, 4, 30, "Input"],
Cell[19178, 542, 1251, 32, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20466, 579, 5225, 136, 392, "Input"],
Cell[25694, 717, 242, 5, 22, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25973, 727, 2716, 65, 180, "Input"],
Cell[28692, 794, 148990, 2528, 269, "Output"],
Cell[177685, 3324, 531, 7, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178277, 3338, 101, 1, 70, "Section"],
Cell[178381, 3341, 3052, 70, 373, "Input"],
Cell[181436, 3413, 86, 1, 30, "Text"]
}, Closed]]
}, Open  ]]
}
]
*)

