(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    362826,       7071]
NotebookOptionsPosition[    356352,       6953]
NotebookOutlinePosition[    356700,       6968]
CellTagsIndexPosition[    356657,       6965]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Duffing equation solver", "Title",
 CellChangeTimes->{{3.8502260865256677`*^9, 
  3.850226091256565*^9}},ExpressionUUID->"8b266996-2355-41a6-b12c-\
60b8741254d9"],

Cell["\<\
P. Huft
\
\>", "Text",
 CellChangeTimes->{{3.8502267451021585`*^9, 
  3.8502267536639805`*^9}},ExpressionUUID->"1c789681-738b-4b54-be31-\
cb5169fe18b4"],

Cell["\<\
Implements the method described in Qaisi paper to solve the Duffing eq by \
power expansion.
m dx^2/dt + alpha x + beta x^3 = F cos(wf t). m=1 in the Qaisi example.\
\>", "Text",
 CellChangeTimes->{{3.850226111183248*^9, 3.8502261687415323`*^9}, {
  3.850226215431532*^9, 3.8502262160114074`*^9}, {3.850226756997877*^9, 
  3.850226785329485*^9}, {3.850231414920844*^9, 3.8502314150713587`*^9}, {
  3.8503003943638773`*^9, 
  3.850300404857226*^9}},ExpressionUUID->"43338bb5-1838-4359-a49f-\
bd46b3b774df"],

Cell[CellGroupData[{

Cell["Check with Qaisi paper params", "Chapter",
 CellChangeTimes->{{3.8503003422943974`*^9, 
  3.850300350335994*^9}},ExpressionUUID->"ef1b1b06-4ee2-4a31-a928-\
12c5fbb64d5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "PARAMS", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F", "=", "0.212"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]f", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x0", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"terms", " ", "=", "10"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "number", " ", "of", " ", "terms", " ", "to", " ", "represent", " ", 
      "x"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8502260945734725`*^9, 3.850226107276212*^9}, {
  3.850226172814377*^9, 3.8502262005153913`*^9}, {3.8502262432288685`*^9, 
  3.8502262540174646`*^9}, {3.8502264238010683`*^9, 3.850226430284734*^9}, {
  3.8502265280997286`*^9, 3.850226530637396*^9}, {3.850227252878863*^9, 
  3.850227279882953*^9}, {3.850227933192087*^9, 3.8502279576010294`*^9}, {
  3.8502313781462593`*^9, 3.8502314525715265`*^9}, {3.850235786109734*^9, 
  3.850235786162445*^9}, {3.8502362327391047`*^9, 3.8502362332733045`*^9}, {
  3.8502370792347555`*^9, 3.850237079281427*^9}, {3.850237255959464*^9, 
  3.850237275142292*^9}},ExpressionUUID->"63041d65-fc15-4b87-9d5a-\
ea0bec8def10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"COMPUTE", " ", "POWER", " ", "SERIES", " ", "SOLUTION"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\[Omega]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alist", "=", 
     RowBox[{"{", 
      RowBox[{"x0", ",", 
       RowBox[{"v0", "/", "\[Omega]"}]}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "coeffs", " ", "for", " ", "power", " ", "series", " ", "of", " ", "x"}],
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{"b1", " ", "=", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"alist", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             SuperscriptBox["\[Tau]", 
              RowBox[{"i", "-", "1"}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "alist", "]"}]}], "}"}]}], "]"}], "3"], 
         ",", "\[Tau]"}], "]"}], ",", "\[Tau]", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", " ", "=", " ", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"alist", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             SuperscriptBox["\[Tau]", 
              RowBox[{"i", "-", "1"}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "alist", "]"}]}], "}"}]}], "]"}], "3"], 
         ",", "\[Tau]"}], "]"}], ",", "\[Tau]", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blist", " ", "=", 
     RowBox[{"{", 
      RowBox[{"b1", ",", "b2"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "coeffs", " ", "for", " ", "power", " ", "series", " ", "exp", " ", "of",
       " ", 
      SuperscriptBox["x", "3"]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"clist", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "coeffs", " ", "for", " ", "power", " ", "series", " ", "exp", " ", "of",
       " ", "force", " ", "term"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "\[Omega]", " ", "below", " ", "is", " ", "computed", " ", "later"}], 
      ",", " ", 
      RowBox[{"after", " ", 
       RowBox[{"we", "'"}], "ve", " ", "found", " ", "the", " ", "symbolic", 
       " ", "coefficients", " ", "ak"}], ",", "bk", ",", " ", 
      RowBox[{"and", " ", "ck"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ck2", "[", "k_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Omega]f", "/", "\[Omega]"}], ")"}], "2"]}], 
        RowBox[{"k", 
         RowBox[{"(", 
          RowBox[{"k", "+", "1"}], ")"}]}]], ")"}], 
      RowBox[{"clist", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", "2", ",", ".."}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ak2", "[", "k_", "]"}], ":=", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Omega]", "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"k", "-", "1"}], ")"}], "2"]}], "-", "\[Alpha]"}], 
          ")"}], 
         RowBox[{"alist", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "-", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{"blist", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], " ", "+", " ", 
        RowBox[{"F", " ", 
         RowBox[{"clist", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}]}], 
       RowBox[{"k", 
        RowBox[{"(", 
         RowBox[{"k", "+", "1"}], ")"}], 
        SuperscriptBox["\[Omega]", "2"]}]], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "coeffs_", "]"}], ":=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"coeffs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          SuperscriptBox["\[Tau]", 
           RowBox[{"i", "-", "1"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "coeffs", "]"}]}], "}"}]}], "]"}], ",", 
       "\[Tau]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "the", " ", "main", " ", "loop", " ", "to", " ", "compute", " ", "a"}], 
     ",", "b", ",", 
     RowBox[{
      RowBox[{"c", "'"}], "s"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "<", 
      RowBox[{"terms", "+", "1"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"compute", " ", "ak"}], "+", "2"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"alist", ",", 
        RowBox[{
         RowBox[{"ak2", "[", "k", "]"}], "//", "FullSimplify"}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"compute", " ", "bk"}], "+", 
        RowBox[{"2", " ", "from", " ", "updated", " ", "alist"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"blist", ",", 
        RowBox[{
         RowBox[{"Coefficient", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"x", "[", "alist", "]"}], "3"], ",", "\[Tau]", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], "//", "FullSimplify"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"compute", " ", "ck"}], "+", "2"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"clist", ",", 
        RowBox[{
         RowBox[{"ck2", "[", "k", "]"}], "//", "FullSimplify"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x\[Tau]", "=", 
     RowBox[{"x", "[", "alist", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f\[Tau]", "  ", "=", 
     RowBox[{
      RowBox[{"F", " ", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"coeffs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", 
            SuperscriptBox["\[Tau]", 
             RowBox[{"i", "-", "1"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "coeffs", "]"}]}], "}"}]}], "]"}], ",", 
         "\[Tau]"}], "]"}]}], "/.", 
      RowBox[{"coeffs", "\[Rule]", "clist"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KE", " ", "=", " ", 
     RowBox[{"0.5", 
      SuperscriptBox["\[Omega]", "2"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Tau]", "2"]}], ")"}], 
      SuperscriptBox[
       RowBox[{"D", "[", 
        RowBox[{"x\[Tau]", ",", "\[Tau]"}], "]"}], "2"]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PE", " ", "=", " ", 
     RowBox[{
      RowBox[{"0.5", "\[Alpha]", " ", 
       SuperscriptBox["x\[Tau]", "2"]}], "+", 
      RowBox[{"0.25", " ", "\[Beta]", " ", 
       SuperscriptBox["x\[Tau]", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"W", " ", "=", " ", 
     RowBox[{"f\[Tau]", " ", "x\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L", "[", 
     RowBox[{"\[Omega]_", ",", "\[Tau]_"}], "]"}], ":=", 
    RowBox[{"KE", "-", "PE", "-", "W"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Hamilton", "'"}], "s", " ", 
     RowBox[{"principle", "--"}], " ", "this", " ", "integral", " ", "must", 
     " ", "be", " ", "zero"}], "*)"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdylsoQwEAh/HTmMtIiqFNNKLEg5HF8mDSEJkmI1nWiqYIc8nWmmS5lC1S
I022UFYWYuW6QlbixYO1mEhiaY3WtPbgcv7n4ev38nHkfeJOGkEQmWTwfmu2
+nDbJ4jITuqFRBJPCZWuO0q3olYFq16d43CpjD0JH9sUlB0J3ksoGWU44fqI
/RrK6bwb+Jzf4oFqW/8LDOSdvcME2Q/ldddj2hHpsJTPhkUmfSbMC8cWwyzm
USncsQxWUN9VlRAKY4huODfx2QNTBOZFKL1gmKFmJnoD6vboVrhWqNqCaoen
/5h0XlSvg1KNyQqNrBIbTFb97cKDSK0djhXLXbAubKe8TXS/Q9nrshcW5D74
YLzN44dibU0QerlNxAnpr3w1Br7xP+JgWw4tFRoHstmwsTaNAw+eZnLhdGio
HCpD7ZXQK+J+nZIaRBJKP2MqCPV84TcMNmyyHaT7za3p0MISLMCAXkI5bmCa
zkgzos5X4D8CFRic
  "],ExpressionUUID->"a8a14583-33ff-45dd-80c1-a6097dfe7aa8"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8502433034109473`*^9, 
  3.8502433133506565`*^9}},ExpressionUUID->"db05a111-95db-418a-af92-\
920649256092"],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.85023708645722*^9, 
  3.850237089099859*^9}},ExpressionUUID->"e9948116-9653-4095-aece-\
6d646e82d5dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox["0.106`", 
    SuperscriptBox["\[Omega]", "2"]], ",", "0.`", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "0.11483333333333332`"}], "+", 
     RowBox[{"0.03533333333333333`", " ", 
      SuperscriptBox["\[Omega]", "2"]}]}], 
    SuperscriptBox["\[Omega]", "4"]], ",", "0.`", ",", 
   FractionBox[
    RowBox[{"0.03916111111111111`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.07655555555555554`", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "+", 
     RowBox[{"0.01884444444444444`", " ", 
      SuperscriptBox["\[Omega]", "4"]}]}], 
    SuperscriptBox["\[Omega]", "6"]], ",", "0.`", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "0.006630257936507936`"}], "+", 
     RowBox[{"0.0391611111111111`", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "-", 
     RowBox[{"0.05358888888888887`", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "+", 
     RowBox[{"0.012114285714285711`", " ", 
      SuperscriptBox["\[Omega]", "6"]}]}], 
    SuperscriptBox["\[Omega]", "8"]], ",", "0.`", ",", 
   FractionBox[
    RowBox[{"0.0006779817019400352`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.008853577426455025`", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "+", 
     RowBox[{"0.03393962962962962`", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "-", 
     RowBox[{"0.03985749559082892`", " ", 
      SuperscriptBox["\[Omega]", "6"]}], "+", 
     RowBox[{"0.008614603174603172`", " ", 
      SuperscriptBox["\[Omega]", "8"]}]}], 
    SuperscriptBox["\[Omega]", "10"]], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8502370898150177`*^9, {3.8502372626496*^9, 3.850237280320858*^9}, 
   3.850238678010626*^9},ExpressionUUID->"33554026-aa84-4fca-b39e-\
e55faeaf9a34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"action", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"L", "[", 
       RowBox[{"\[Omega]", ",", "\[Tau]"}], "]"}], "\[Omega]"], 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["\[Tau]", "2"]}]]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.850243484766082*^9, {3.8502988783712945`*^9, 
   3.8502988907892847`*^9}},ExpressionUUID->"5bb1da2e-db29-4a82-897d-\
dcfbf3e7bb1f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox["\[Omega]", "41"]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1.0402261924342484`*^-14"}], "+", 
    RowBox[{"9.60706543543302`*^-13", " ", 
     SuperscriptBox["\[Omega]", "2"]}], "-", 
    RowBox[{"4.03605504021033`*^-11", " ", 
     SuperscriptBox["\[Omega]", "4"]}], "+", 
    RowBox[{"1.0216501084579918`*^-9", " ", 
     SuperscriptBox["\[Omega]", "6"]}], "-", 
    RowBox[{"1.7399549348382307`*^-8", " ", 
     SuperscriptBox["\[Omega]", "8"]}], "+", 
    RowBox[{"2.108588135778781`*^-7", " ", 
     SuperscriptBox["\[Omega]", "10"]}], "-", 
    RowBox[{"1.875514363543473`*^-6", " ", 
     SuperscriptBox["\[Omega]", "12"]}], "+", 
    RowBox[{"0.000012450047499993443`", " ", 
     SuperscriptBox["\[Omega]", "14"]}], "-", 
    RowBox[{"0.00006211539583953095`", " ", 
     SuperscriptBox["\[Omega]", "16"]}], "+", 
    RowBox[{"0.00023278857222077824`", " ", 
     SuperscriptBox["\[Omega]", "18"]}], "-", 
    RowBox[{"0.000650681958650753`", " ", 
     SuperscriptBox["\[Omega]", "20"]}], "+", 
    RowBox[{"0.0013471935577621195`", " ", 
     SuperscriptBox["\[Omega]", "22"]}], "-", 
    RowBox[{"0.002208650389759143`", " ", 
     SuperscriptBox["\[Omega]", "24"]}], "+", 
    RowBox[{"0.004599468059436006`", " ", 
     SuperscriptBox["\[Omega]", "26"]}], "-", 
    RowBox[{"0.017525720104086775`", " ", 
     SuperscriptBox["\[Omega]", "28"]}], "+", 
    RowBox[{"0.060427955222573514`", " ", 
     SuperscriptBox["\[Omega]", "30"]}], "-", 
    RowBox[{"0.12800259293354685`", " ", 
     SuperscriptBox["\[Omega]", "32"]}], "+", 
    RowBox[{"0.1460813553798535`", " ", 
     SuperscriptBox["\[Omega]", "34"]}], "-", 
    RowBox[{"0.07681095938220714`", " ", 
     SuperscriptBox["\[Omega]", "36"]}], "+", 
    RowBox[{"0.013321393084274978`", " ", 
     SuperscriptBox["\[Omega]", "38"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8502436249732213`*^9, 
  3.850298987032696*^9},ExpressionUUID->"684e0354-7170-4897-a290-\
0d868c37bd44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"action", ",", "\[Omega]"}], "]"}], "\[Equal]", "0"}], " ", "&&",
     " ", 
    RowBox[{"\[Omega]", ">", "0"}]}], ",", "\[Omega]", ",", "Reals"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8502432153410234`*^9, 3.8502432360223455`*^9}, {
  3.8502433238519344`*^9, 3.8502433709421487`*^9}, {3.8502434206183453`*^9, 
  3.8502434361525183`*^9}, {3.8502437002478967`*^9, 3.850243702583641*^9}, {
  3.850298647433972*^9, 3.8502986582923546`*^9}, {3.8502987485910397`*^9, 
  3.850298779359028*^9}, {3.8502988507312627`*^9, 3.850298854375293*^9}, {
  3.8502988864815617`*^9, 
  3.850298894242456*^9}},ExpressionUUID->"f8203c48-caed-4e0c-a92b-\
acddfd51f3f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "0.29781329524622824`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "0.3167170950536776`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "0.3707574315903521`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "0.4102853838030857`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "0.4966619591875398`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "0.6040906486873574`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "0.8447980447916964`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "1.2853022867782087`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "2.4776380956168063`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.850243411595253*^9, 3.850243470835275*^9, 3.850243705566037*^9, {
   3.8502987571094327`*^9, 3.850298771739835*^9}, 3.8502988563192863`*^9, 
   3.850299247546838*^9},ExpressionUUID->"94b5896d-e953-4fc0-92f1-\
a6ce206992d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.850242003416189*^9, 
  3.8502420039254923`*^9}},ExpressionUUID->"993f297e-d5b1-4be8-a991-\
d53d347ab2a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox["0.106`", 
    SuperscriptBox["\[Omega]", "2"]], ",", "0.`", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "0.11483333333333332`"}], "+", 
     RowBox[{"0.03533333333333333`", " ", 
      SuperscriptBox["\[Omega]", "2"]}]}], 
    SuperscriptBox["\[Omega]", "4"]], ",", "0.`", ",", 
   FractionBox[
    RowBox[{"0.03916111111111111`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.07655555555555554`", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "+", 
     RowBox[{"0.01884444444444444`", " ", 
      SuperscriptBox["\[Omega]", "4"]}]}], 
    SuperscriptBox["\[Omega]", "6"]], ",", "0.`", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "0.006630257936507936`"}], "+", 
     RowBox[{"0.0391611111111111`", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "-", 
     RowBox[{"0.05358888888888887`", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "+", 
     RowBox[{"0.012114285714285711`", " ", 
      SuperscriptBox["\[Omega]", "6"]}]}], 
    SuperscriptBox["\[Omega]", "8"]], ",", "0.`", ",", 
   FractionBox[
    RowBox[{"0.0006779817019400352`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.008853577426455025`", " ", 
      SuperscriptBox["\[Omega]", "2"]}], "+", 
     RowBox[{"0.03393962962962962`", " ", 
      SuperscriptBox["\[Omega]", "4"]}], "-", 
     RowBox[{"0.03985749559082892`", " ", 
      SuperscriptBox["\[Omega]", "6"]}], "+", 
     RowBox[{"0.008614603174603172`", " ", 
      SuperscriptBox["\[Omega]", "8"]}]}], 
    SuperscriptBox["\[Omega]", "10"]], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8502416922921486`*^9, 3.85024171154885*^9}, {
  3.8502420011546535`*^9, 
  3.850242004366688*^9}},ExpressionUUID->"847a0489-9038-40b6-a0cf-\
22ee2d6088db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"D", "[", 
     RowBox[{"action", ",", "\[Omega]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8502994741060443`*^9, 
  3.8502995824361362`*^9}},ExpressionUUID->"fe37263b-aa4f-4434-97b2-\
e7dc3c57347c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
9YebMObHysHWUvl/QdfftOnkMX7ceG/1tawJ0G97cCQ08GPq4t3o5AXg7bE5
O8IFcE7BM18/YS4y4t/5zrHvgrhVdNhIcysXSQlWKkoKE8GKak2sR/qgfzF1
a3oogoNR4VMlI9BjuTW7WkSw9LGgjQTJRZLBk4cLhVdhrzqKEr8V6CMpflJu
qzDrlBT/sBsXWb3tFvXa7Cqs8NWqJysK4vsv2N8XE8VxNUZFzjHA5bUvGKqi
eOqRZjTPZYinZf7mMhLFNQHCOkeToH5OATcXQxR78bYlbr4D/jTbjp4cUZyz
Za/562KI11fM+6u7BmvF/ffs2xcukvGBfumgMRXfOEFPSPrGRWauFLxSsaPi
FSdLr50/ID9d/H6nGxW3ymmIZg+Cf/fD5omzVOz/dMzXdxL8etT45MqpuKwv
eN0SNzfZd0b7l6+2GDbUi0yR2sxNUqJZUf8JieMuD6mtd3WAVV3e5UqJ48Ar
hd3yetyk/DnZvt514jj/V4+06jZukgxLfytkLI5lUzbc22rGTVYL7DJ44CuO
2Se7Chz3QXxqgWPJO3HclKv2NuECN8nQsVZ9HiyBfbqqfFZHcZMRevjV1DkJ
zMnuxH/9EtSbeCggFyeBjfeG26bFQ/5ODX6rdAlczNPennsD+g1co/C3TgKn
eJ3te5sLXGXK4y0qiV1lP8yztUP8dUZ3eqYkFpYKeFrRyU1mihkqv34siV+v
EfMP7oH6bxvD20slsQrf/uHhr6BrvU9vqJXE49ODXR+GgS31HeeGJPGFd8tP
7i7D+louZvlqSGGd2nsnaGw8ZHXcJOPWFik8VGWqsZqTh5SvsNQsM5LCNmVx
9yP5eEjGnnp1bC2FxTLErx6lAqernVQ+KoVzgrSOG6gDu09fNXgkhfed+Kg2
rclDRqzWcDlbKIWFjgT9yt8IfgHS0iVPpXDAgXJXeV0ekhwu+DLxRgobWZlZ
85A8JOV6Ym/jdyn8Xs5dtdMZ8tcHMWap0ni2MeGn33nIv7dLMjpYGvcKdPos
XeQh+3wr6HWh0rjGRmb8UjT0P4J/zZ+TxknvcxfTL0P+r34RkzhprN72ltpy
Hfxlbje5pEtj909s5mq5oKc8Xoivlcam0pYtZfk8ZOa1ld/r3kljjf1JjmQR
+H8IaSprkcasXlkGrQz8nbgSyrqkcXKfUUhUFejPnyhsH5bG9UPBeT/aoL+N
+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
3EpRpeL/AcwZ6n0=
       "]], 
      LineBox[{{0.8321479726879318, 0.003842159321468824}, {
       0.8368421683060933, 0.002332339116615581}, {0.8380804596240141, 
       0.0019512165381999486`}, {0.8393187509419349, 
       0.0015768503605982642`}, {0.8417953335777766, 0.0008481686419456597}, {
       0.84674849884946, -0.0005305620853340853}, {
       0.8545958539769842, -0.002476072614320139}}], 
      LineBox[{{0.603320013481775, -0.002476072614320139}, {
       0.6040189648065841, -0.00022759834528562894`}, {0.60533293057159, 
       0.003842159321468824}}], 
      LineBox[{{0.4964444490667932, 0.003842159321468824}, {
       0.4964580650350645, 0.003594696701699762}, {
       0.4968103270788858, -0.002476072614320139}}], 
      LineBox[{{0.2978274986748657, 0.003842159321468824}, {
       0.2978275510122479, -0.002476072614320139}}], 
      LineBox[{{0.3167334724444112, -0.002476072614320139}, {
       0.3167337475700453, 0.003842159321468824}}], 
      LineBox[{{0.4102761286213282, -0.002476072614320139}, {
       0.41032107652606414`, 0.003842159321468824}}], 
      LineBox[{{0.37077501828794046`, 0.003842159321468824}, {
       0.37078443751298484`, -0.002476072614320139}}]},
     Annotation[#, "Charting`Private`Tag$469835#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-0.002476072614320139, 0.003842159321468824}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8502994848122597`*^9, 3.850299521977337*^9}, {
  3.850299561269599*^9, 
  3.8502995828975835`*^9}},ExpressionUUID->"97fe154a-eea9-436f-995b-\
ac46735f5b96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dt", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "@@", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0.3", ",", "0.7", ",", "0.05"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"(", 
                RowBox[{"KE", "-", "PE", "-", "W"}], ")"}], "\[Omega]"], 
              RowBox[{"Series", "[", 
               RowBox[{
                FractionBox["1", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Tau]", "2"]}]]], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Tau]", ",", "0", ",", "50"}], "}"}]}], "]"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{"0", "+", "dt"}], ",", 
               RowBox[{"1", "+", "dt"}]}], "}"}]}], "]"}], "-", 
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"(", 
                RowBox[{"KE", "-", "PE", "-", "W"}], ")"}], "\[Omega]"], 
              RowBox[{"Series", "[", 
               RowBox[{
                FractionBox["1", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   SuperscriptBox["\[Tau]", "2"]}]]], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Tau]", ",", "0", ",", "50"}], "}"}]}], "]"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{"0", "-", "dt"}], ",", 
               RowBox[{"1", "-", "dt"}]}], "}"}]}], "]"}]}], ")"}], "/", 
         "dt"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", 
          RowBox[{"Range", "[", 
           RowBox[{"0.3", ",", "0.7", ",", "0.05"}], "]"}]}], "}"}]}], 
       "]"}]}], "}"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.850238387183589*^9, 3.8502384156482897`*^9}, {
  3.8502386314190397`*^9, 3.850238856418168*^9}, {3.8502389276133547`*^9, 
  3.8502390423239098`*^9}, {3.8502390958308816`*^9, 3.850239165535861*^9}, {
  3.850239212735752*^9, 
  3.85023922619375*^9}},ExpressionUUID->"e8cadff7-1bed-4dc3-b9f4-\
3802bf451a4c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.3, 2217.287088844279}, {0.35, -3944.8278300379325`}, {
      0.4, -221.9102280384373}, {0.45, -309.6994449157911}, {
      0.5, -74.95473850152686}, {0.55, -13.646638131919264`}, {
      0.6000000000000001, -21.003758402551487`}, {0.65, -28.2445650299227}, {
      0.7, -26.17408054177225}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.29374999999999996`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.3, 0.7}, {-753.7786550915989, 430.43257204388857`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8502386278869033`*^9, 3.850238671095351*^9}, {
   3.8502387269075565`*^9, 3.8502387884901433`*^9}, {3.8502388345654755`*^9, 
   3.8502388617892666`*^9}, {3.850238986411674*^9, 3.8502390083428917`*^9}, 
   3.8502390609596357`*^9, 3.850239183486217*^9, 
   3.850239245048078*^9},ExpressionUUID->"42cc2f15-0024-4515-bec0-\
c6b4d39aec91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "/.", 
  RowBox[{"\[Omega]", "\[Rule]", "0.49666"}]}]], "Input",
 CellChangeTimes->{{3.8502362726556516`*^9, 3.850236274540308*^9}, {
   3.85023632542397*^9, 3.8502363306598372`*^9}, {3.850242116732112*^9, 
   3.8502421173361945`*^9}, 3.850242167220152*^9, {3.8502469505486317`*^9, 
   3.850246966881464*^9}, 
   3.8502993099439945`*^9},ExpressionUUID->"c3452c9c-d4e9-4431-b942-\
36daf378ccb5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0.4297219094878234`", ",", "0.`", ",", 
   RowBox[{"-", "1.7440171885199345`"}], ",", "0.`", ",", 
   "1.427378246705989`", ",", "0.`", ",", 
   RowBox[{"-", "0.013294796608024857`"}], ",", "0.`", ",", 
   RowBox[{"-", "0.007839196994488574`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8502362748974347`*^9, 3.850236331121276*^9, 3.8502421299940987`*^9, 
   3.850242167884164*^9, {3.850246954208831*^9, 3.8502469677283955`*^9}, 
   3.850299310725103*^9},ExpressionUUID->"cb0ba237-9cd8-4feb-a2e1-\
42a77475295c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xt", " ", "=", " ", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"alist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Omega]", " ", "t"}], "]"}], 
          RowBox[{"i", "-", "1"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "alist", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}]}], "]"}], "/.", 
    RowBox[{"\[Omega]", "\[Rule]", "0.49666"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"xt", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3", "*", "2", 
      RowBox[{"\[Pi]", "/", "\[Omega]f"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.08"}], ",", "0.085"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.850226934500517*^9, 3.850227060412876*^9}, {
   3.850227112446116*^9, 3.8502271256846313`*^9}, {3.8502271707416043`*^9, 
   3.8502271865242977`*^9}, {3.8502273600181627`*^9, 
   3.8502274179699945`*^9}, {3.850227543758294*^9, 3.850227581941576*^9}, {
   3.850227620482909*^9, 3.8502276329287157`*^9}, {3.8502276766018105`*^9, 
   3.850227678231593*^9}, 3.8502312165335665`*^9, {3.8502312495581512`*^9, 
   3.850231362497651*^9}, {3.850236364244034*^9, 3.850236390722373*^9}, {
   3.8502366240292716`*^9, 3.8502366494408035`*^9}, {3.8502421424645834`*^9, 
   3.8502421712407236`*^9}, {3.850246958069557*^9, 3.8502469634781895`*^9}, 
   3.850299315858539*^9},ExpressionUUID->"3bb533f2-103d-4c34-af4c-\
fabed9e4ef1f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVV3k4Ve3XPqZo4KeoEJKXiLxJZEjWDmlCijSYJQmZUmRWSCpJ5uEcMxnP
NiXTI685UxkilSHDMQ9JxnO+/f21r/u67+dZa91rree69iFLx6t3mEkkUgAT
ifT/Xxa0o/2Xgr+a+PKHqg93BlXFJ6tPCb81g+KGtGO37OLU1qnHrPrDHcGj
h7rvi225Gr4CPbvz3eCB7T9r/e/b1MZ4bVZLw30hSGJ0UtP2m9pL/ibO/Iqn
8OLW1s9PKaNqGZLGFFL+M2DL/3JqoHRWrUZxQVY/6QUI+EhOxiotq33TCqhN
D38NR7pC+vpt1tXWpXZJedW+gR1niqd3lZLgmVyvS3rFW/Bee/ftUDIr8Kok
VbQXR8JCgKQ+5Q8HJJ+xZV3Ni4ZrLs+T3Yo44d8L8jqHMmOhhE1vROf+bqjQ
o0deTIqHtzfmS70VeKHHLFwiMZwCWxvXP4XfFgD8xL9Kv+qToEp5yNOqWQjc
FN9+d6tNBv2gSJteXARYwUQ8uSIVppHY2w9xYtCiXtusUJYGF8afydmXHoY3
WhIOLcXpINhrcvvMjCQI6y6W/s7LhIams5KKGTIwesXQKDg7C/5y21uK7ZWF
nGsVDMHMd5AWz/TkmNVxUDIJPK+VlANPzPj/njoiD1ft+b/FhBeAzsvApwW6
KrBLCVDUOSqgXuEmndVTsPDBefdwPRXqLZmKm/JPQ2lVb8nDWhx80oP0DiZj
oFGfRCdXFMG244pmmv6acPhcl96kcjGYnZdPV3h+FnY0s6WeKCuG2iAfbe9o
LehstT3XVFwCXy2OazI3ngeTbvmwxbz34F3qyOPnrAOY4d2RU0fLwGp5j0xt
ji6I9cXKB2WXgfMbyDw9cxmmBuh9Apkf4IT6EXMaXAG3X02HNJMqYEpcK/nx
qj68WTIuigpHUHTR8nrqxk14tTdOtYazBhRGa7MY327BFzzwoMLVGvjlG6jW
X2UERlPGY8IDNeBibTay8soEHIx2Oi/NfAQ2Kc7pqhxziDhtExzLXQdiXWMz
0GAF/f36dlzX6sC1COUzX7kDwo9A92lsHfg1a7ha/7gDmfn7eO+L1sMhLu1a
jg1rKD9YT8HkG0BqUJzX+8I9GGQSfT9xvQnKTftjFY47gBiZM844oQkuvU/X
Z+lxABuVNa/PQ02gQas4rOvhCEsuneoV95rhCG91epaVE7CO+rSHerbAQ/G2
ntuVziDVMDCmQGmF9rzL92JfucKp+os71B90Ahu5+vPdPA/g7s7oUHzbCZKp
Dmw4pyeMjjBHyhR1wml5ofTHDp4QSqo4yP+7E96YLPMEHPeCkVPSCgsun8FI
7MuHm1XeEFy405zs8gVWDBwvOz/0g15Ka8m6czf0nXfNXmp+Ck4euhZFTn2w
jb2pBRsPgftld0KZ/xmCV20x64rJEcR+XBFhkh+CwesPniqhCFjoVy1kaA5B
+QfBDrEfEeC6wdO7aT0EjSHiKdV8keChViv0N3sIpJ+sD9NCIyGoTjhvWm4Y
8nf+tE1/FAVJnV8/dauPwGO199fkZGPA0uI/ky79EZipmRcsuBgD/yzlz3+2
GoHJ/6n4sN+JgQyeIJ6OoBGI4o/YdyE2BvIM5Y2aW0agSGV+mIkUC+Xfw6aq
rv6Cj+zbp7/Xx0I37cL2TMtRuNG/nDh8LB7mYyXPPnUZhUrnK8XeGvGw4xK7
v9mTUejT96DNGMYDlle3uj9lFGR4uOQ1vOMhxxlowcOjEDcqKFvfGA9P1uUb
bc3HIGQzldKunwCJOTws55zGwOTjN2dnqwQoM15S+8dvDMYoHIXDrgkwW11Q
OkAZA3FJA6EjkQlw46lUhvbgGAzIHhe62JUAx3aJBP5rOg49IR/YQs4mwsUq
es0Oh3FoHe69P3A1EawcfmyOe4+D3svGv8tmiRDXGedKSRyH2mBpGd/HibAt
cq8V949xOK9UZDTxLhEOaS1TZmbGgX+KhdO5JBFU/34ZaNocBxt1CauamkRw
vhmm7y84AWkOLe35vYnwXWinxpLRBPzQr1OtZSTC3/ZJn3a7CRhNTqxx2k6G
PX5N5dmeE3DGvPTlyB4ynB8JlLsdPwGBiZp9XOJkuP3WygFyJuDgO52GJhky
+GhqZB+omICp8ep+zZNkKMogiXZ/m4DxzXT9J1pkaL8+aEKdmoC71u1HNXTJ
QOOojn25PgF76+q566+RQdjOc/dZARq0nro8usOKDMqCt3QOSdFAdKT1Yrst
GQzalJ5vKdPgvvTSuyvOZAg5tkIqvUmDO4ErZ6O9yeDhdkF63JYGKplG9z8/
JcM9lHBtnxcNinak/YOek+EG+4Kv1isaSEwd2Wf+mqjnskb2IzINqv7b+bso
ggxK0VHdGQU0UPKUuVceSwbJwUl6bw0Nmh4rSz4gk4HdMUxf8RcNyKrJGusZ
ZFgp/eV9d5kGN5xUWZqyyTBOP5kVzTYJTzbUv2jlk6FXK+RL475J+OCuZ/UI
J0ND6I/NvxKToJLQdt+wmAylvbISksqT4H52MXW8lAzpwgFXblycBKvQj5WH
P5AhwvqrZ7DRJAz18TruqyBDQL5URpn9JHzqD3cpqSSD64p3J817EqRTSnxZ
qol+qH1e53s9CevpLZdJiAxXg8TELyRNAtfH3wk5BFZvd7v8GJ+EUGVJUbYa
Msjt+/T4Xe0keNYoxO8isKipcFp/1yT0On6s+0jo92Q4t28fm4SqhvPGYgRm
mqtbVV6ZBLlUURF5It6CAt8/tuxTgJT9OhaIfIa87XTi+Kbg8w4HqVtEvp31
1W4tR6bgS0/3oiNRTw3nnpR1lSkQDvGYOP6eDNRrd1qltKcgRoGlnUL4QUks
W7llMgULC4s2Hwi/Qsd2HnrhMAW1ze+8fAg/fWTMLlX4ToFJtkP7HOG3w8PC
h9NhU8AH1mI7MslgUsWWdCBlCsL6Y852ppBBm+1my6WiKbh/ZWkNI/qnqpO7
7Fk3BR0j6juMif4ejWQI5/ZMgesODDtE9F/wx9UL38en4IFZoHVYKBk27NcS
VbdPQ5bnt0K7J2SYKtZusheYBmvPTJevnmT4tklZSpCehoeVSoYzrmQof6l1
bktnGsRlZBq4rcmQ3R3rLGM2DbvUKb8PmpIhVnA23sRpGvSWloO+EvPunvt2
oSp8GqbPREmDJhlslscF5lKnYdnWaGxOhQzXVVXOCpdMQ3T16jWt42Q42ToU
6/N1Gl4rbJVOC5JheVpGAwRnoPTkV+ldC4kwesL/vqPMDDixeFz48ysRujy7
oylqMxAuwT8b8DURCnd6zjDMZwCtk7DoKuI9kG6KrEmfAY7rTuSAQOL8nVG/
pNIZqGnrbBt9lAiGSSR7v8YZMPgy1D17NxFU9iqrY5MzsEvgHMf6+URgZryb
Q0dngWuxN2R1WyK4Kjf0U07PQirOsprwJwHGH4zU+erOwsUUwTeTvxKghSYQ
D06zMKSXz+yJEiD8y4tzqGgW8P1PlLxdEoCVM0uOUkfohz/pW5gmwKNzdUK+
PbPw7pel1OyFBLhVuflb7e8sdCqNj2wcTADRjPtJ1Spz8Hp1MHOZeJ8LH19e
q/o4Byo9pzsus8eDWLHdaOKXOXCZ7+DMm42DqLlnHd6/5mBGc/4b3hUHHrdr
0k+zzYPN7PjJQnIcqOscv1p1fh5k9WrrQ2XjoEuEJ6eyYx4y9keO1mjEgpbR
saiEoXkQm6lIjBeLhbLIS/5ei/OAeczkCrPFgi5brTR5+wIcbJ4XEa6PATmP
dSZT6QVwf77vJ+uZGFi/bZf/w2EBvC5xfwqWjAbz3b/dKx8tgJgJpcx+WzTU
V3toxPssgNqy1jDbaBSE8Yf03QhdgP7GKzdvkKNAoiOLuTtvAaJWjmn4/y8K
DFTGDVtmFkDLuMWQNBoB+dwWjFLbRbjhvPtknWE48FbTmiNdFuHZW02+KOlw
eGznFOHqsQhrVu/PiJLCQbPB94hcyCIwxBtP2Wa9gQFPsn7eu0VwzhjJq/4T
BhwTA5mptEUw3t5ac439NVhWGeqFWS+B34fyTZ/vwSBXyreH33EJEq5Spsbs
g4G54FtXstsSiMhyOVRsPoOUJNPrRcFLsDDkKl0i8AxGnlqb9mYvgfw9Dsrq
5UCwvPjIXnB+Ccz/16rqkOQPll8jg7PcfoMe3fpZW9UDuL3YXVMTvAwi/1vt
xyfs0EvZ944ZQSuw3EB60dwQgZhr3isGeKyCu9GNR1lMqSibc0/G1pNVOLrr
WfAn8VR01cie1+3FKqTxDNZ+v5CKUldEFu8lEHx6v07Tm1SkKROSfbl6Fcr6
NbnLRdJQUJyx0AHmNTBe5dxToZKOdjxkYil8vgaqtWlP24wzUWGtkbN0+Bpw
iOZf3+mTiW5xlw6mxa2B3k8Dm6OUTJSTY1sZnbMGxeVJk/uGM5H2SNdD77Y1
SFjtPRBwOwuFXs6gnd+9DmJ46tmHlu/QbqlL7YMx64CZXQiz18pB4+yU3U1J
65A7tkLztchB5WNLBtSsdZD9T0LV2SsHWSXHDfiVrYN75b+fZ/AcVMY3RTvU
tw4B6nfKsQO5yJT9OYvV/g1gdbxrKDaRi06MfdfSPrgBy0Lt6WuMXMTxn2yI
vMQGeI28YHnHl4cKffq42RQ3QFLNfSXiQh5iW5EQzjDcgCS1BqH4d3kod7RB
iRa5AWF+VIOjlvnIv1bAqzNxA0Sozx4HuecjwyQHVJa+AX0mFWulofmIZLxP
63nJBigVHJCMK89H+l139KV6NmD1dSjXbe4CtP6R1cGedxP8RJqc2osKUAfl
Bm4guAnmlHRB18YClOadu6wqtgmrpk8LZ74VIF1lA09O+U1wOt41mk2iomRq
anC+/iZoz3avkQ5T0XmKeupC+CYcdUztvGhPRc+aOn88id+El2LVuNFDKmpY
NOXbm0bgQUFlPR8qOqvp+Uq5ZBNm/Ng//npNReqTRW5Pvm5CzHy8A45Tkf8e
9ULeoU0I6zVS/v6BimpOdc5k0DaBe2K6cvIjFUHojMWnNSK/3VxeuZ+pSPWE
uDav4Ba4c55vaJunIk/joqAMsS0IXvp5ZudfKioPPPNRSWYLNm88jJaiU5Fy
n8lJE7UtMHYqusO1C0cnvaNEMswJbPig4O5hHD3MEDNSurcFrglGAvhRHBV3
FEa2OG+Bzc7i1wNyODoh2rFj/skW5P6KPNmlhiPZRvY/iulb8H1Ute3iNRw5
LkQea8nbAj2pXSOxt3CUzy9ma1y6BUdXws80m+FIxh4b9GskeIuqwKZ7OLKP
bOfn6STiLfmdjnHAUW61sUF63xYsu6iOn3uAI6ndj5ubJ7eAulRSpOWFo3sq
7KzGS1sgmZ+VF+mHo6zbkWpz61uQdmVLvS4ARxKleNGeXXSwxw/Mopc4EjOa
SjT6lw4zIad3HovH0e0A977Zk3R4SXHPdifjKCVvG48f0CFhIF0rORlHh0j/
BKfp0YG1t0r6dSaOzI/gtSdv0sE4+aKeQTaOkq7CVpMFHawOch1ZzcWRcLqR
y6wLHVo3/PEBHEcm7ZO5vp50SHvADgeKcZTw121idwAdhk47qCqX4mhAZJto
2ks6BLy+GqtQhiOBixHGJyPpoMoZc5a7HEc3H4hGNyXSYZN+73hzBY5iEqif
b2UQ8Z+e0jGvwlFfvdqu2Xw66NU2Pu+pxtH++VYt3/d0oAnv6ZOsIfRvkMUk
ooPSiWsjBh9xxCdf6KXfRAen8AtC5rUE35sWXdVJh+8erzwv/kfwj6MLJfrp
sPqbeYGnjuAPhLS9GSbqX+u4X0lg/mov2sYkHQRTTWka9TiKM3dksV4i+Ksm
+tkEFmCxFO5cp0NNT3XK/P/z6QbKKiwMWI0sb+FpwNGB8+cM0nYyYOhDK9pH
4IQpZUcuXgZwXC59tEroBV8dDXEXZECTo/doGYETjh1MHxFjQKvNffp1Agt9
2V2jLcMA7p/7ynuIfMiurAOlCgzom7/MKUdg4f1//4ioMYBkKj9nT9RD/jDJ
/UKLAe454vpBRL0Hjb9L/9El9NgnOR/CjyR6u5bZdQZohu4JMCD8Ekn+aNFs
xgADmWNq2xHBaxR7nbBhQCUp/kYC4feh8YzoRCcGFF/b94mzEkei0i/bnP0Z
wBqUGPOC6F9Kmw9t4DkDJMVfjEYT/f3HyZlFK5wBTtu1bZ8Q/RcrMVQWSGVA
t81+jqUCHKVdv2AQkEOczzvF45aHI/H1U45zRQzQZlirfSPm6zAcSq+tY0DY
3f0/VdJxlDHMU3O0jQHUssVzSikEH7BtIKqH8Ad5V/JQiHlvnua2G2cAX71t
kVUMsQ92P6V75hiQ8MJM5lsEjiS5PmvBX8KPeplkmTc4ijhiVL2dlYSF3Yu2
cXiOo26P7k9qHCTMdYm91CgQR7ytOv0PdpEwboPNhcP+OIp0wJZ/8JKw4hjF
w9fdcRRVJC5VKE7C+m5dMhG+g6NeVorixBECj8uNrhP7vc+Q76zgvyRs6ECo
Tgmx/9GrO8yDTpIwWrBv43+Xifk6vRB56xwJc3K0vXtOiZiXxnImlntEPo6O
NVPMOFoYoj6etydhwYXpj8U2qejcesbigBMJa+paSMH+UNHy0bfDxe4kTKnU
3kBkgop0w+0+WgeTMD7mknTvZipiNhH0b8kk8MFqneJgKrrxaM9aaQ4JK3Oa
lNvvR0UFrzmcUwuI/Eh/BozdqMi4dtnc6z0Rn6IYFXaHikol2rB/G0nYgreh
bxxGRXZL3qTwcRJG8p9c9BkpQLU7Xd19pkhYTSxXe1pbAeITt12wnSNhSer3
z78pK0AN1w2HNFZImLnCc/vqVwVIpOrfmj9sTFgnM9+AnUIB6n426HtTnAmj
umMMCY98pCp0hiFixYSRtFj2DvfnovPG3S6WNkxYWFCAe35FLjKIvzueas+E
6YUZOKom5iI7/tC2ww+ZMJGYP41xZrkobu9A/NEgQi/oI2g9nINWOR8qKWUx
YX6mHaPm/dmomJ7lfHmGiDccEK6XkIVqTquOhS0wYeZjvnlhj7JQq1fHjS/L
BL4StBStl4V+rf+Ba1tMmFPey8VNliy05686lxEXMzZUdzVJwiYTOc1/z7aW
ZcaoasYGSoczkPQQ96i3KzOGvf79XdwzFelOiNQ+cmfGwsjaqrVXUpHTnGyS
oxfBVxdR5CVTUfGmnrFFAHFeafB+QncKUuV/060ZQdzfd4jfVzoFaV/dXb+z
mBnTO2Kt1/w5CdnX7c6I/c2M1XwV6wllTUB5WXtsSlxYMCyCPfwYWxjy+mnS
JR3EivlZdkRgZ4PBWVXpEjmCDfOTTJ/L/JMKJIcI39cxbNjQL8ENd4k0CKUs
FPklsGHmA8fkT9xMg2zmd4K30wg+1arfojINRpr45ySK2TARCblisn86GFzb
CMO72DDSrYcaOuyZcNKhurduzzbMnKSNVLbeQR1FYGfpPgLLugiESWfD1c+P
IFNgG4bdFb5RdzMbHOSPZT0X3YbVPKadbirJhsx1ymNdOUIvdIBHwT4H+J75
C/Zd2YaRnFtiTL/kwjpF03I6bBuWpPii65t/Aaj9PR1+PHIb5ncm7thKfgH4
6yrWusVuw0TixlwHBwqAY+uIKGsKoZ83lXglQIW9t/43IlhE6Blr+W9dqCDL
+81Ct2cbFnaoLDJLCIc7wY4WOD87Rj3R9K7etBCyBm3e/BViJ+bFzPuHcyHM
nLT8eFqUHRt62braG1AILmMGh1qkCH3aI22H7ELwU1cZHjnFjtUQf/BSy4UQ
t8lqwWvKjnHjui9K/Yug0ynO3C2FHdOTOANHAopBKox7wzWDHessqy46Hl4M
TwuCIl2y2TGnWa6pA0nFcHLOpeV+IREvZEEpsqIYEu0uyVvVEvmcoRfzLRaD
rfUm+5URdozkOPpE17AE6gJdUnTHCWzpOHrXsgSE0mmq2lPsWJhW6lsLhxLo
/NXtfG6JHcPevw78E1gCihZ5A6eZObCw/qT7iUUl0P5QsbKXnQP774+k8eva
Evg/0T1H6w==
       "]], LineBox[CompressedData["
1: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
VOYI8ltvRGo6OaYzK+n6901ieJ6vR/8DX3YXRg==
       "]]},
     Annotation[#, "Charting`Private`Tag$465904#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 6.283185178951315}, {-0.08, 0.085}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.850227174293539*^9, 3.850227188758926*^9}, 
   3.850227423786584*^9, {3.8502275252022033`*^9, 3.850227562369403*^9}, 
   3.8502276303489943`*^9, {3.85023637528395*^9, 3.850236391098507*^9}, {
   3.8502366371589785`*^9, 3.8502366496000834`*^9}, {3.8502421371777763`*^9, 
   3.850242171463796*^9}, 3.850246971099247*^9, 
   3.8502993170500846`*^9},ExpressionUUID->"60d8ab0a-6a27-409b-81d9-\
704192488194"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"p", ",", "q"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KE", " ", "=", " ", 
   RowBox[{"0.5", 
    SuperscriptBox["\[Omega]", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Tau]", "2"]}], ")"}], 
    SuperscriptBox["p", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PE", " ", "=", " ", 
   RowBox[{
    RowBox[{"0.5", "\[Alpha]", " ", 
     SuperscriptBox["q", "2"]}], "+", 
    RowBox[{"0.25", " ", "\[Beta]", " ", 
     SuperscriptBox["q", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", " ", "=", " ", 
   RowBox[{"f\[Tau]", " ", "q"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{"KE", "-", "PE", " ", "-", " ", "W"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8502397194026318`*^9, 3.850239847985117*^9}, {
  3.850239880038806*^9, 3.850239892421234*^9}, {3.8502399819230003`*^9, 
  3.850240011164671*^9}},ExpressionUUID->"f3b2dac8-15be-4b0f-a9ef-\
9ec8ee0a9c85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"\[Tau]", " ", "\[Epsilon]", " ", "Reals"}], ",", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{"L", ",", "p"}], "]"}], "/.", 
            RowBox[{"p", "\[Rule]", 
             RowBox[{"D", "[", 
              RowBox[{"x\[Tau]", ",", "\[Tau]"}], "]"}]}]}], ",", "\[Tau]"}], 
          "]"}], "==", 
         RowBox[{"D", "[", 
          RowBox[{"L", ",", "q"}], "]"}]}], "/.", 
        RowBox[{"q", "\[Rule]", "x\[Tau]"}]}], ")"}], "]"}], ",", "\[Omega]", 
     ",", "Reals"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.850239858140323*^9, 3.850239859238036*^9}, {
  3.850239900864943*^9, 3.850239937042404*^9}, {3.8502400234812922`*^9, 
  3.850240033816637*^9}, {3.850240923572068*^9, 3.8502409835478735`*^9}, {
  3.850241016331339*^9, 
  3.850241037193409*^9}},ExpressionUUID->"e4158fa0-5c81-4422-b7bf-\
924fbe4e6189"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.8502414347471123`*^9},ExpressionUUID->"eb8bc1cf-4384-40f5-b5c6-\
1e35079d3266"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"0.7071067811865476`", " ", 
     SqrtBox["q"], " ", 
     SqrtBox[
      RowBox[{"4.`", "\[VeryThinSpace]", "+", 
       SuperscriptBox["q", "2"]}]]}], 
    RowBox[{
     SqrtBox["p"], " ", 
     SqrtBox["\[Tau]"]}]], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "x\[Tau]"}], ",", 
     RowBox[{"p", "\[Rule]", 
      RowBox[{"D", "[", 
       RowBox[{"x\[Tau]", ",", "\[Tau]"}], "]"}]}]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8502400487485576`*^9, 
  3.850240124612933*^9}},ExpressionUUID->"fbcc8d70-90f5-47f0-af05-\
a80c0367ebdd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"0.7071067811865476`", " ", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["\[Omega]", "10"]], 
       SuperscriptBox["\[Tau]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.106`", " ", 
          SuperscriptBox["\[Omega]", "8"]}], "+", 
         RowBox[{
          SuperscriptBox["\[Tau]", "2"], " ", 
          SuperscriptBox["\[Omega]", "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.11483333333333332`"}], "+", 
            RowBox[{"0.03533333333333333`", " ", 
             SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Tau]", "4"], " ", 
          SuperscriptBox["\[Omega]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"0.03916111111111111`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.07655555555555553`", " ", 
             SuperscriptBox["\[Omega]", "2"]}], "+", 
            RowBox[{"0.018844444444444438`", " ", 
             SuperscriptBox["\[Omega]", "4"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Tau]", "6"], " ", 
          SuperscriptBox["\[Omega]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.006630257936507936`"}], "+", 
            RowBox[{"0.0391611111111111`", " ", 
             SuperscriptBox["\[Omega]", "2"]}], "-", 
            RowBox[{"0.05358888888888887`", " ", 
             SuperscriptBox["\[Omega]", "4"]}], "+", 
            RowBox[{"0.012114285714285711`", " ", 
             SuperscriptBox["\[Omega]", "6"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Tau]", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"0.0006779817019400352`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.008853577426455025`", " ", 
             SuperscriptBox["\[Omega]", "2"]}], "+", 
            RowBox[{"0.03393962962962962`", " ", 
             SuperscriptBox["\[Omega]", "4"]}], "-", 
            RowBox[{"0.03985749559082892`", " ", 
             SuperscriptBox["\[Omega]", "6"]}], "+", 
            RowBox[{"0.008614603174603172`", " ", 
             SuperscriptBox["\[Omega]", "8"]}]}], ")"}]}]}], ")"}]}], ")"}]}],
     " ", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{"4.`", "\[VeryThinSpace]", "+", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["\[Omega]", "20"]], "0.00007421138785588306`", " ", 
        SuperscriptBox["\[Tau]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"12.304687500000004`", " ", 
            SuperscriptBox["\[Omega]", "8"]}], "+", 
           RowBox[{
            SuperscriptBox["\[Tau]", "2"], " ", 
            SuperscriptBox["\[Omega]", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "13.330078125000002`"}], "+", 
              RowBox[{"4.1015625`", " ", 
               SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Tau]", "4"], " ", 
            SuperscriptBox["\[Omega]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"4.545898437500001`", "\[VeryThinSpace]", "-", 
              RowBox[{"8.88671875`", " ", 
               SuperscriptBox["\[Omega]", "2"]}], "+", 
              RowBox[{"2.1875`", " ", 
               SuperscriptBox["\[Omega]", "4"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Tau]", "6"], " ", 
            SuperscriptBox["\[Omega]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.7696533203125001`"}], "+", 
              RowBox[{"4.5458984375`", " ", 
               SuperscriptBox["\[Omega]", "2"]}], "-", 
              RowBox[{"6.220703125`", " ", 
               SuperscriptBox["\[Omega]", "4"]}], "+", 
              RowBox[{"1.40625`", " ", 
               SuperscriptBox["\[Omega]", "6"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Tau]", "8"], " ", 
            RowBox[{"(", 
             RowBox[{"0.07870144314236112`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.0277405989583335`", " ", 
               SuperscriptBox["\[Omega]", "2"]}], "+", 
              RowBox[{"3.939778645833333`", " ", 
               SuperscriptBox["\[Omega]", "4"]}], "-", 
              RowBox[{"4.626736111111112`", " ", 
               SuperscriptBox["\[Omega]", "6"]}], "+", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["\[Omega]", "8"]}]}], ")"}]}]}], ")"}], 
         "2"]}]}], ")"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox["\[Tau]"], " ", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["\[Omega]", "10"]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.21199999999999997`", " ", "\[Tau]", " ", 
          SuperscriptBox["\[Omega]", "8"]}], "+", 
         RowBox[{
          SuperscriptBox["\[Tau]", "3"], " ", 
          SuperscriptBox["\[Omega]", "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.45933333333333326`"}], "+", 
            RowBox[{"0.1413333333333333`", " ", 
             SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Tau]", "5"], " ", 
          SuperscriptBox["\[Omega]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"0.23496666666666668`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.45933333333333326`", " ", 
             SuperscriptBox["\[Omega]", "2"]}], "+", 
            RowBox[{"0.11306666666666665`", " ", 
             SuperscriptBox["\[Omega]", "4"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Tau]", "7"], " ", 
          SuperscriptBox["\[Omega]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.05304206349206349`"}], "+", 
            RowBox[{"0.3132888888888888`", " ", 
             SuperscriptBox["\[Omega]", "2"]}], "-", 
            RowBox[{"0.428711111111111`", " ", 
             SuperscriptBox["\[Omega]", "4"]}], "+", 
            RowBox[{"0.09691428571428569`", " ", 
             SuperscriptBox["\[Omega]", "6"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Tau]", "9"], " ", 
          RowBox[{"(", 
           RowBox[{"0.006779817019400352`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.08853577426455025`", " ", 
             SuperscriptBox["\[Omega]", "2"]}], "+", 
            RowBox[{"0.3393962962962962`", " ", 
             SuperscriptBox["\[Omega]", "4"]}], "-", 
            RowBox[{"0.3985749559082892`", " ", 
             SuperscriptBox["\[Omega]", "6"]}], "+", 
            RowBox[{"0.08614603174603172`", " ", 
             SuperscriptBox["\[Omega]", "8"]}]}], ")"}]}]}], ")"}]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8502401168754663`*^9, 
  3.8502401286427174`*^9}},ExpressionUUID->"740dc51e-c962-436e-b9d3-\
5ad0fecfb980"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve ODE numerically", "Subsubsection",
 CellChangeTimes->{{3.8502996220050764`*^9, 3.850299649650917*^9}, {
  3.8502996851013966`*^9, 
  3.8502997021376467`*^9}},ExpressionUUID->"af305ecf-3546-472a-a5b1-\
6a1caca7e23a"],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.8502998521134973`*^9, 
  3.8502998584975023`*^9}},ExpressionUUID->"5f7ffb96-2629-484e-b198-\
0111efa3249c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"x", "[", "t", "]"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox[
          RowBox[{"x", "[", "t", "]"}], "3"]}]}], "\[Equal]", 
       RowBox[{"F", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Omega]f", " ", "t"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    "x", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"3", "*", "2", 
       RowBox[{"\[Pi]", "/", "\[Omega]f"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.850299707048806*^9, 3.8502997742234674`*^9}, {
  3.8502998365004473`*^9, 3.850299838841427*^9}},
 CellID->5423,ExpressionUUID->"0564425a-cec3-4391-84ad-461a6f1c6fd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["InterpolatingFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWfD4AAAC23LrVPM/aSIyo
OLo/+C9ty6gDUj+WOpaK+FLLP9ox3HjS0nI/2+dwMj5M1D9wcJ28dImDP1Yy
X3etzdo/JCtSlPhCjz9QmuaWIu7gP0QsyP4xApY/cg2UVyY55D95ur4ysvua
P3xcAVG+yuc/SZubSUQ+nj9761L2rEvrP9RQAJzjZp4/d+wagVOQ7j+OwLBP
KVCbP65kUSLHDfE/4t1GRtA/lD8ejNB2QLXyP82aVQLFw4Q/idNBIWVU9D9G
D4Hzbdxcv+gIE+jTFvY/Dv6YZlndkL9Fd5+hHrv3P9MZIyFBep+/ltOLd7OC
+T//wXsJSTmnv+JPaqPzQfs/vnc0JRBfrb8sBQTCD+P8P0CmHMi2tLC/aqj9
/HWn/j9avFkB9LOxv1NCWRXcJgBAvo6LjO5Zsb9rp2M6ogsBQAYyytPcBq+/
gRxnCj7sAUCv3DhALJ+ovxYuyNPHvQJANfjfB4iEoL+lNlmr9qADQD7BI3d3
KIi/s9tHfBN1BEDQtjoUbV+CP76QL/gFRQVAY3dunZkRnj/DPEeCnSYGQBdo
n8GIfKk/R4W8BSP5BkDgQ9Jl6NCwP8XEYZdN3QdAsFtMv+X6sz9BFADUTb0I
QBTZw7zbjLU/PAD8CTyOCUDxqiJ0QYS1PzHjJ07PcApASJYr8VzZsz+lYrGL
UEQLQCu00y0M5LA/FvIzdKcTDECGkbynBs+pP4F45mqj9AxAn/NaOuPZnj9r
m/ZajcYNQPWXj9Bnj4M/T7U2WRyqDkAeM95GWxaKv7Nr1FCZfg9AEXhaYYhU
oL8KmbX5dScQQDhvOHY2dKi/t/cY0nGYEEAGhOSQXPuuv6QkK6fkARFASoyJ
n/NGsb8OTVUDKnQRQIuQFSLLwbG/d/37NFrkEUC8H6KRwM6wvx98UWMBTRJA
K9t1N7Werb9E9r4Ye74SQHUt3MhkZ6e/qT7bymsoE0BzqLNv+nSgvw0PdFJH
kBNAQCXMWrNukr/u2iRh9QAUQIZyS2sRamm/DnWEbBpqFEAAckSws+CCP6sK
/P4R3BRAz2zFLItJlD9HKPBm9EsVQP5vxfPlY5s/IhSTy020FUDZ9FodE52e
P3r7Tbd5JRZAxbWymWSRnj8SsbefHI8WQKxEoNaks5s/J2I5D5IBF0B7fWfu
32OWPzubN1TycRdA98rfkVsFkD+OouSVydoXQE/b6YfhH4Q/XqWpXnNMGEBw
8uOjk3JyP252HSSUthhAdNWbpRzJUz+ZnB5N+yEZQPtxfG9kSay+KZzHug==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$472006#1"]& ]}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 6.283185307179586}, {-0.0693633039678067, 
                  0.0841805778362395}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWfD4AAAC23LrVPM/aSIyo
OLo/+C9ty6gDUj+WOpaK+FLLP9ox3HjS0nI/2+dwMj5M1D9wcJ28dImDP1Yy
X3etzdo/JCtSlPhCjz9QmuaWIu7gP0QsyP4xApY/cg2UVyY55D95ur4ysvua
P3xcAVG+yuc/SZubSUQ+nj9761L2rEvrP9RQAJzjZp4/d+wagVOQ7j+OwLBP
KVCbP65kUSLHDfE/4t1GRtA/lD8ejNB2QLXyP82aVQLFw4Q/idNBIWVU9D9G
D4Hzbdxcv+gIE+jTFvY/Dv6YZlndkL9Fd5+hHrv3P9MZIyFBep+/ltOLd7OC
+T//wXsJSTmnv+JPaqPzQfs/vnc0JRBfrb8sBQTCD+P8P0CmHMi2tLC/aqj9
/HWn/j9avFkB9LOxv1NCWRXcJgBAvo6LjO5Zsb9rp2M6ogsBQAYyytPcBq+/
gRxnCj7sAUCv3DhALJ+ovxYuyNPHvQJANfjfB4iEoL+lNlmr9qADQD7BI3d3
KIi/s9tHfBN1BEDQtjoUbV+CP76QL/gFRQVAY3dunZkRnj/DPEeCnSYGQBdo
n8GIfKk/R4W8BSP5BkDgQ9Jl6NCwP8XEYZdN3QdAsFtMv+X6sz9BFADUTb0I
QBTZw7zbjLU/PAD8CTyOCUDxqiJ0QYS1PzHjJ07PcApASJYr8VzZsz+lYrGL
UEQLQCu00y0M5LA/FvIzdKcTDECGkbynBs+pP4F45mqj9AxAn/NaOuPZnj9r
m/ZajcYNQPWXj9Bnj4M/T7U2WRyqDkAeM95GWxaKv7Nr1FCZfg9AEXhaYYhU
oL8KmbX5dScQQDhvOHY2dKi/t/cY0nGYEEAGhOSQXPuuv6QkK6fkARFASoyJ
n/NGsb8OTVUDKnQRQIuQFSLLwbG/d/37NFrkEUC8H6KRwM6wvx98UWMBTRJA
K9t1N7Werb9E9r4Ye74SQHUt3MhkZ6e/qT7bymsoE0BzqLNv+nSgvw0PdFJH
kBNAQCXMWrNukr/u2iRh9QAUQIZyS2sRamm/DnWEbBpqFEAAckSws+CCP6sK
/P4R3BRAz2zFLItJlD9HKPBm9EsVQP5vxfPlY5s/IhSTy020FUDZ9FodE52e
P3r7Tbd5JRZAxbWymWSRnj8SsbefHI8WQKxEoNaks5s/J2I5D5IBF0B7fWfu
32OWPzubN1TycRdA98rfkVsFkD+OouSVydoXQE/b6YfhH4Q/XqWpXnNMGEBw
8uOjk3JyP252HSSUthhAdNWbpRzJUz+ZnB5N+yEZQPtxfG9kSay+KZzHug==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$472006#1"]& ]}}, {}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                 Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   AbsolutePointSize[6], "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 6.283185307179586}, {-0.0693633039678067, 
                  0.0841805778362395}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.283185307179586`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel",
        DisplayFunction->(
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )],
       DynamicModuleValues:>{}], "]"}],
     InterpolatingFunction[{{0., 6.283185307179586}}, {
      5, 7, 2, {123}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1:eJxFiAtQEwQchzfeG69t7CWIsvRCRDk4HvL+/8EFdAeYKHqQIRJKZCcIAhIC
JgYqjwgcQ8YsogSKlNdGyKNFrSGuFHlsGArKQ57KQJDBhLryru/ud9/9Pk5U
XMhxLQKBQPxnaYT/qdlmGLuc6gT/mfvGByFDVChUiSPe/Ghw+nlK0Dz9GaT/
2wtgtF9wj/cLDwz2x91vsC6HRGYN/bfCanDwzY9UZNfDDrVUHCgVg1XdulGn
dhvkNQrqLSokMPRjzPL2H6RgW+3oYSfqBqYgSehU/ScQZX9lCoN6IFmiqbPy
74XZFsunldgPUY3eZtbuClDUHuV+7zgIRTvt2AsZQxBYrZlx6x4G7eLxYcmV
JzDSI78TbT8K7ZSmRoOBMSjbJxDWpk1ASsGFnPc4k8DhEcuMSdNwV3C+tnt+
Bs58s9GRo5yDLTUZPVzJCxhTrKsIffPg9r532rBMBQWP03U6Whdg9Fh7fvmt
RdgzrmGmVb6EvI88vw7jL8GTmTQb19xlcIlrbWBmvoLchVWPpYQVGElyl/ae
UIOzOjW4IXwVrpxrURQGr8HjjZXIOF8NOGa5Tge5vIZLemcTd+1ch0eXmzXk
LRtwLXut86UBAfcGCPTHLhDwOckjsFdDwNK7Dws7k4m4N//T/vp5Is4Fm5tX
fKyFpZTbEYVjWuj7IKwyM0IbZ4vVz04ptZEfem1XRIgO+rDcTgfJdXBWqRR5
+uliSdnZVVuJLvocYYOFux7OWP6URW7Sw5Lhw13q3fqIFa+Mpqr0cTqKv1/J
MUDe9j0lMoEBwsTAQzGDhNNVyVtvfEHCq7HMaB6JjGArrr6YRcap2dC5xNdk
LL655PBhiiF6x/OSQ1SGOOng3Opz0giLF/s27MeN0Et0hmt11Bgnk+mXTQeN
sci16Y/1EBP0Wj1Aey43wWeti4ce+Znil+nFArnEFK9/tWn+A0sKJp6PLQoN
p2DAsRanID4Ft/iSFNw+Ci6+FZbqSaVil3aNhVMwFYVjK+22uVRMkAZEbuui
YsCNUi0LXRpa5kx+S/Ol4UKMqz85k4aygEtTxDYaCm2UueoVGiaQd9ipnM3Q
fybl/mSCGW6WyxJGbpmhqpbFUM6aoSw/pvmeDR3LTzWHyU7Q8fQ+fU1HJR39
7A9fF4/QcTO1Cm9aMlClWn76XTgDf3/g97mQz0BBY4k1r4+B8Vcn7uRRmeiX
5PLJxWAmWhzKNjmXy8R5l4G6xC4mSllvHzipy8KylaSlKF8Wxg9K+eGZLHzn
NsM9pI2F5oLjQ++qWfgiTZTh48JG6RFdjlsiG8u8Qn+1r2NjmEhuyJxiI3s3
9+AaZxP+DcaQxi8=
      "], {Developer`PackedArrayForm, CompressedData["
1:eJwl0Q1HnQEAhuG3TWlKKc3SlI5SmlJKKUsppZTSl1JKOVNK6ShGlDEiIiIi
IiIiIiIiIiIiIiIiIsaIGBF1ZQ/XH3juUDjSMRkVBMFc8H8fieET8SSSzGdS
+UoGIbLJ5RsFFFFCGRVUUk0t9TTSTCvtdNFDHwMM8YMRxpggwjQ/mWGWX/xm
ngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454H/vCX
R574xzMvvPLBwdHEEkcCSaTwhTTSySSLHPLIp5BiSinnO1XUUEcDTbTQRifd
9NLPIGGGGWWc9+BTvAH6BTW0
       "], CompressedData["
1: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
       "]}, {Automatic}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8502997753984823`*^9, 3.85029986851989*^9},
 ImageSize->{371, 47},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ExpressionUUID->"0b2536dc-5204-4232-ae82-b303ae662168"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "/.", "s"}], "]"}], ",", "xt"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3", "*", "2", 
      RowBox[{"\[Pi]", "/", "\[Omega]f"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<numerical\>\"", ",", "\"\<power series\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.850299883939917*^9, 3.850299928735997*^9}},
 CellID->28908,ExpressionUUID->"702c63a5-940c-4610-8961-b282daf8f49a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$472983#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
gN41FbAxm0jBMZWCc+v78fr5ulF0rRLwP0gu/DI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$472983#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"numerical\"", "\"power series\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8502998896232753`*^9, 3.8502999296977167`*^9},
 ImageSize->{244, 150},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ExpressionUUID->"1f4bb94e-105a-41e0-857d-01dd6fec8bd7"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Quartic, non-driven oscillator", "Chapter",
 CellChangeTimes->{{3.8503003422943974`*^9, 
  3.8503003754135647`*^9}},ExpressionUUID->"eb988e3e-5412-4986-bd48-\
c123a82f2e67"],

Cell["\<\
The axial equation of motion for an atom in a dark trap described by U = kB T \
| 1 - E_gaussian(rho,z) |^2  is given by dz^2/dt + (kB T/(m zR^4))z^4 = 0.\
\>", "Text",
 CellChangeTimes->{{3.8503004294215117`*^9, 3.8503004298601794`*^9}, {
  3.850300861766548*^9, 3.8503008773552303`*^9}, {3.8503016023823395`*^9, 
  3.8503016643889403`*^9}, {3.8503017025543685`*^9, 3.8503017637177553`*^9}, {
  3.8503032741147738`*^9, 
  3.850303280563216*^9}},ExpressionUUID->"b04d4f87-b078-4521-a924-\
222ef170308d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "PARAMS", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"kB", " ", "=", " ", "1.38*^-23"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", " ", "=", " ", "5*^-4"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"trap", " ", 
     RowBox[{"depth", " ", "[", "K", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zR", " ", "=", " ", 
     RowBox[{"\[Pi]", "*", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", "1*^-6", ")"}], "2"], "/", "8.08*^-7"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mCs", "=", " ", 
     RowBox[{"2.2069393", "\[Times]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "25"}]}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"[", "kg", "]"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[Alpha]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "=", 
     RowBox[{"kB", " ", 
      RowBox[{"T", "/", 
       RowBox[{"(", 
        RowBox[{"mCs", " ", 
         SuperscriptBox["zR", "4"]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F", "=", ".0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]f", "=", ".0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", 
     SqrtBox[
      RowBox[{"2", " ", "kB", "*", 
       RowBox[{"40*^-6", "/", "mCs"}]}]]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"initial", " ", "speed", " ", "guess"}], " ", "=", " ", 
      RowBox[{
      "mean", " ", "speed", " ", "for", " ", "40", " ", "uK", " ", "atom"}]}],
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{"x0", "=", ".0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"terms", " ", "=", "13"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "number", " ", "of", " ", "terms", " ", "to", " ", "represent", " ", 
      "x"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/TjykunO9W8cd1/LMAfRCfyz7EG0WJ2AM4h+EpTu
AaKF+g94guioRT/jQHSXzMl4EP3LgDkHRPekhoDppfJzjoFodcc/J0H0FNVl
0ruA9CLrzXIgWmOdy6ndQPqT56TLIPpjk/PHvUD6gJErmN6/TFxzH5B+uU8D
TMs1P58EoosZX4Lpd5v/rQDRK3pTVoNomfKvdXeBtEAOTyOI9vkvrnkPSB8X
SwbTctf19EC02nJeWxA9822lI4guylsApv/xFgWD6A9BfeEgWmPHjmwQPUf8
SCWInrKG9xqIdmLYeB9EAwDLFq31
  "],ExpressionUUID->"04c88868-1fb6-47c8-880c-cc65abad08a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"COMPUTE", " ", "POWER", " ", "SERIES", " ", "SOLUTION"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\[Omega]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alist", "=", 
     RowBox[{"{", 
      RowBox[{"x0", ",", 
       RowBox[{"v0", "/", "\[Omega]"}]}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "coeffs", " ", "for", " ", "power", " ", "series", " ", "of", " ", "x"}],
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{"b1", " ", "=", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"alist", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             SuperscriptBox["\[Tau]", 
              RowBox[{"i", "-", "1"}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "alist", "]"}]}], "}"}]}], "]"}], "3"], 
         ",", "\[Tau]"}], "]"}], ",", "\[Tau]", ",", "0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", " ", "=", " ", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"alist", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             SuperscriptBox["\[Tau]", 
              RowBox[{"i", "-", "1"}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "alist", "]"}]}], "}"}]}], "]"}], "3"], 
         ",", "\[Tau]"}], "]"}], ",", "\[Tau]", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blist", " ", "=", 
     RowBox[{"{", 
      RowBox[{"b1", ",", "b2"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "coeffs", " ", "for", " ", "power", " ", "series", " ", "exp", " ", "of",
       " ", 
      SuperscriptBox["x", "3"]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"clist", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "coeffs", " ", "for", " ", "power", " ", "series", " ", "exp", " ", "of",
       " ", "force", " ", "term"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "\[Omega]", " ", "below", " ", "is", " ", "computed", " ", "later"}], 
      ",", " ", 
      RowBox[{"after", " ", 
       RowBox[{"we", "'"}], "ve", " ", "found", " ", "the", " ", "symbolic", 
       " ", "coefficients", " ", "ak"}], ",", "bk", ",", " ", 
      RowBox[{"and", " ", "ck"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ck2", "[", "k_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Omega]f", "/", "\[Omega]"}], ")"}], "2"]}], 
        RowBox[{"k", 
         RowBox[{"(", 
          RowBox[{"k", "+", "1"}], ")"}]}]], ")"}], 
      RowBox[{"clist", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", "2", ",", ".."}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ak2", "[", "k_", "]"}], ":=", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Omega]", "2"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"k", "-", "1"}], ")"}], "2"]}], "-", "\[Alpha]"}], 
          ")"}], 
         RowBox[{"alist", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], "-", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{"blist", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], " ", "+", " ", 
        RowBox[{"F", " ", 
         RowBox[{"clist", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}]}], 
       RowBox[{"k", 
        RowBox[{"(", 
         RowBox[{"k", "+", "1"}], ")"}], 
        SuperscriptBox["\[Omega]", "2"]}]], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "coeffs_", "]"}], ":=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"coeffs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          SuperscriptBox["\[Tau]", 
           RowBox[{"i", "-", "1"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "coeffs", "]"}]}], "}"}]}], "]"}], ",", 
       "\[Tau]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "the", " ", "main", " ", "loop", " ", "to", " ", "compute", " ", "a"}], 
     ",", "b", ",", 
     RowBox[{
      RowBox[{"c", "'"}], "s"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "<", 
      RowBox[{"terms", "+", "1"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"compute", " ", "ak"}], "+", "2"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"alist", ",", 
        RowBox[{
         RowBox[{"ak2", "[", "k", "]"}], "//", "FullSimplify"}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"compute", " ", "bk"}], "+", 
        RowBox[{"2", " ", "from", " ", "updated", " ", "alist"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"blist", ",", 
        RowBox[{
         RowBox[{"Coefficient", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"x", "[", "alist", "]"}], "3"], ",", "\[Tau]", ",", 
           RowBox[{"k", "-", "1"}]}], "]"}], "//", "FullSimplify"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"compute", " ", "ck"}], "+", "2"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"clist", ",", 
        RowBox[{
         RowBox[{"ck2", "[", "k", "]"}], "//", "FullSimplify"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x\[Tau]", "=", 
     RowBox[{"x", "[", "alist", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f\[Tau]", "  ", "=", 
     RowBox[{
      RowBox[{"F", " ", 
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"coeffs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", 
            SuperscriptBox["\[Tau]", 
             RowBox[{"i", "-", "1"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "coeffs", "]"}]}], "}"}]}], "]"}], ",", 
         "\[Tau]"}], "]"}]}], "/.", 
      RowBox[{"coeffs", "\[Rule]", "clist"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KE", " ", "=", " ", 
     RowBox[{"0.5", 
      SuperscriptBox["\[Omega]", "2"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Tau]", "2"]}], ")"}], 
      SuperscriptBox[
       RowBox[{"D", "[", 
        RowBox[{"x\[Tau]", ",", "\[Tau]"}], "]"}], "2"]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PE", " ", "=", " ", 
     RowBox[{
      RowBox[{"0.5", "\[Alpha]", " ", 
       SuperscriptBox["x\[Tau]", "2"]}], "+", 
      RowBox[{"0.25", " ", "\[Beta]", " ", 
       SuperscriptBox["x\[Tau]", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"W", " ", "=", " ", 
     RowBox[{"f\[Tau]", " ", "x\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"L", "[", 
      RowBox[{"\[Omega]_", ",", "\[Tau]_"}], "]"}], ":=", 
     RowBox[{"KE", "-", "PE", "-", "W"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Hamilton", "'"}], "s", " ", 
     RowBox[{"principle", "--"}], " ", "this", " ", "integral", " ", "must", 
     " ", "be", " ", "zero"}], "*)"}], "\[IndentingNewLine]", 
   "alist"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0VsogwEAxfEvjBlpcs1EIyvxgEUsDyZtFpnIaFnWiqYIc8nWmpaFlS1S
I00IZWUhVnMtRMlepC0xlyRbEtIkDy7f+R5Ov5fz9mcrOmqagwiCYJODVyuj
wq3VF35wekw7JGIKVFDlcVNeKkVqWPZ4oodTRawheCNVUjZF+Y+hpJ9xAhf7
HGdQQStwwfusei/U2Dsf4EfmgQ9GyX8oz1puErdJe2U8FsyzmlJh5nc4F6bF
bRfCtfnuEup3WiaAAjrRCscG39pgPH9uEsqOGHNQawxbgoYNmg0u5KhXoGbf
27lDOi6uNECZ1mqDlqR8O4xV/61DZ4jOAQe4Cg+s+HZQnjMvfVD+OO2H2Zzr
Fxhp977CGl15APpza4ld0l/FLB0+8Z4joDQjKAFautJZsFqUyIbOOyMHjnz1
FEPVV2Mp9Itz3/dIzWIJ5StjOABNPMEnDFQts/ZJN+sakuF8En8CfpgklHpz
nPWANCX0cAYKl7SaW3R0mymZ0bZr6HJeeOE/VykstQ==
  "],ExpressionUUID->"81241e06-1c81-4d7d-bba9-52383c4b87cc"],

Cell[BoxData[
 TemplateBox[{
  "Power","indet",
   "\"Indeterminate expression \\!\\(\\*SuperscriptBox[\\\"0.`\\\", \
\\\"0\\\"]\\) encountered.\"",2,638,82,34062628206728742854,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8503031537319317`*^9, 
  3.850303230702385*^9}},ExpressionUUID->"c308c2ee-81d7-4de2-a6f7-\
90459e607827"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   FractionBox["0.07072766857382382`", "\[Omega]"], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    FractionBox["0.011787944762303968`", "\[Omega]"]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    FractionBox["0.005304575143036786`", "\[Omega]"]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    FractionBox["1.1524534482413082`*^15", 
     SuperscriptBox["\[Omega]", "5"]], "+", 
    FractionBox["0.003157485204188563`", "\[Omega]"]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    FractionBox["1.1204408524568275`*^15", 
     SuperscriptBox["\[Omega]", "5"]], "+", 
    FractionBox["0.002148844097294994`", "\[Omega]"]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    FractionBox["9.607271018520724`*^14", 
     SuperscriptBox["\[Omega]", "5"]], "+", 
    FractionBox["0.0015823306534626773`", "\[Omega]"]}], ",", "0.`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    FractionBox["1.5167129248129252`*^31", 
     SuperscriptBox["\[Omega]", "9"]], "-", 
    FractionBox["8.114413237366`*^14", 
     SuperscriptBox["\[Omega]", "5"]], "+", 
    FractionBox["0.0012273205709550253`", "\[Omega]"]}], ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8503032072679377`*^9, 
  3.850303230723876*^9}},ExpressionUUID->"3bd2cf22-dc5e-446e-86cf-\
9e4905fb295b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"action", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"L", "[", 
       RowBox[{"\[Omega]", ",", "\[Tau]"}], "]"}], "\[Omega]"], 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["\[Tau]", "2"]}]]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.850243484766082*^9, {3.8502988783712945`*^9, 
   3.8502988907892847`*^9}},ExpressionUUID->"79e840dd-4c5d-4784-b305-\
a4c04b4cdcbf"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox["\[Omega]", "37"]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3.1306077430035085`*^143"}], "+", 
    RowBox[{"3.452183190764818`*^128", " ", 
     SuperscriptBox["\[Omega]", "4"]}], "-", 
    RowBox[{"1.5200960169374131`*^113", " ", 
     SuperscriptBox["\[Omega]", "8"]}], "+", 
    RowBox[{"3.387495004123218`*^97", " ", 
     SuperscriptBox["\[Omega]", "12"]}], "-", 
    RowBox[{"4.014285258438899`*^81", " ", 
     SuperscriptBox["\[Omega]", "16"]}], "+", 
    RowBox[{"2.5052124709511066`*^65", " ", 
     SuperscriptBox["\[Omega]", "20"]}], "-", 
    RowBox[{"8.58322492278107`*^48", " ", 
     SuperscriptBox["\[Omega]", "24"]}], "+", 
    RowBox[{"1.66320195808125`*^32", " ", 
     SuperscriptBox["\[Omega]", "28"]}], "-", 
    RowBox[{"1.5359557672722138`*^15", " ", 
     SuperscriptBox["\[Omega]", "32"]}], "+", 
    RowBox[{"0.003172947736015591`", " ", 
     SuperscriptBox["\[Omega]", "36"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8502436249732213`*^9, 3.850298987032696*^9, 
  3.850302449344366*^9, 
  3.850303276794349*^9},ExpressionUUID->"7c67db28-3519-488c-aefa-\
1f606832165c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"action", ",", "\[Omega]"}], "]"}], "\[Equal]", "0"}], " ", "&&",
     " ", 
    RowBox[{"\[Omega]", ">", "0"}]}], ",", "\[Omega]", ",", "Reals"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8502432153410234`*^9, 3.8502432360223455`*^9}, {
  3.8502433238519344`*^9, 3.8502433709421487`*^9}, {3.8502434206183453`*^9, 
  3.8502434361525183`*^9}, {3.8502437002478967`*^9, 3.850243702583641*^9}, {
  3.850298647433972*^9, 3.8502986582923546`*^9}, {3.8502987485910397`*^9, 
  3.850298779359028*^9}, {3.8502988507312627`*^9, 3.850298854375293*^9}, {
  3.8502988864815617`*^9, 
  3.850298894242456*^9}},ExpressionUUID->"51517c87-d7a1-4795-8e14-\
cc747b178fbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "7914.7845764519825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "9010.042831970904`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "12225.609507260295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "17665.658504437943`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", "\[Rule]", "38575.70844955388`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.850243411595253*^9, 3.850243470835275*^9, 3.850243705566037*^9, {
   3.8502987571094327`*^9, 3.850298771739835*^9}, 3.8502988563192863`*^9, 
   3.850299247546838*^9, 3.850302479733712*^9, 
   3.8503032882692056`*^9},ExpressionUUID->"f1481eb0-19f3-4713-807a-\
7696475d4396"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xt", " ", "=", " ", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"alist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Omega]", " ", "t"}], "]"}], 
          RowBox[{"i", "-", "1"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "alist", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}]}], "]"}], "/.", 
    RowBox[{"\[Omega]", "\[Rule]", "\[Omega]0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"x", "[", "t", "]"}]}], "+", 
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "t", "]"}], "3"]}]}], "\[Equal]", 
        RowBox[{"F", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]f", " ", "t"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "v0"}]}], "}"}], 
     ",", "x", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"3", "*", "2", 
        RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "/.", "s"}], "]"}], ",", "xt"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3", "*", "2", 
      RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<numerical\>\"", ",", "\"\<power series\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.850226934500517*^9, 3.850227060412876*^9}, {
   3.850227112446116*^9, 3.8502271256846313`*^9}, {3.8502271707416043`*^9, 
   3.8502271865242977`*^9}, {3.8502273600181627`*^9, 
   3.8502274179699945`*^9}, {3.850227543758294*^9, 3.850227581941576*^9}, {
   3.850227620482909*^9, 3.8502276329287157`*^9}, {3.8502276766018105`*^9, 
   3.850227678231593*^9}, 3.8502312165335665`*^9, {3.8502312495581512`*^9, 
   3.850231362497651*^9}, {3.850236364244034*^9, 3.850236390722373*^9}, {
   3.8502366240292716`*^9, 3.8502366494408035`*^9}, {3.8502421424645834`*^9, 
   3.8502421712407236`*^9}, {3.850246958069557*^9, 3.8502469634781895`*^9}, 
   3.850299315858539*^9, {3.850302543600348*^9, 3.85030273323333*^9}, {
   3.850302782853613*^9, 3.8503028731864805`*^9}, {3.8503033002654586`*^9, 
   3.850303330512573*^9}},ExpressionUUID->"3108901d-e56b-4ecc-b8a5-\
8958d712f3a0"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", "=", "29000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"guess", "=", " ", 
   RowBox[{"3", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Omega]0", " ", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"x", "[", "t", "]"}]}], "+", 
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox[
           RowBox[{"x", "[", "t", "]"}], "3"]}]}], "\[Equal]", 
        RowBox[{"F", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]f", " ", "t"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "1*^-6"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "v0"}]}], "}"}], 
     ",", "x", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"3", "*", "2", 
        RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "/.", "s"}], "]"}], ",", "guess"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3", "*", "2", 
      RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<numerical\>\"", ",", "\"\<guess\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8503033540999637`*^9, 3.8503034351855927`*^9}, {
  3.8503038572945237`*^9, 
  3.8503039345974956`*^9}},ExpressionUUID->"e54b76eb-2695-4eb8-a632-\
5a1fb63fd30f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", "=", "5000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"guess", "=", " ", 
   RowBox[{"1", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Omega]0", " ", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"guessplt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"guess", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"3", "*", "2", 
        RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<guess\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plts", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "5"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"speed0", "=", 
      RowBox[{"0.01", "*", "i", "*", 
       SqrtBox[
        FractionBox[
         RowBox[{"kB", " ", "*", "40*^-6"}], "mCs"]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
            RowBox[{"\[Alpha]", " ", 
             RowBox[{"x", "[", "t", "]"}]}], "+", 
            RowBox[{"\[Beta]", " ", 
             SuperscriptBox[
              RowBox[{"x", "[", "t", "]"}], "3"]}]}], "\[Equal]", 
           RowBox[{"F", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Omega]f", " ", "t"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "speed0"}]}], 
         "}"}], ",", "x", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"3", "*", "2", 
           RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"plts", ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "/.", "s"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"3", "*", "2", 
            RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], ",", 
            RowBox[{"RandomReal", "[", "]"}], ",", 
            RowBox[{"RandomReal", "[", "]"}]}], "]"}]}]}], "]"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"guessplt", ",", "plts", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<U ~ \!\(\*SuperscriptBox[\(x\), \(4\)]\)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.850304907193241*^9, 
  3.850304970087347*^9}},ExpressionUUID->"b2bf0576-f85b-40f1-bc15-\
9372be01b094"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$530079#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.8226136724538626, 0.2579093502094627, 0.5209846896231258]], 
          LineBox[CompressedData["
1:eJwVmHk8VO8XxykqslSUNbQoIiRE8hzL2FK2LNlmxm7uMLKEsiSRdWYuslQo
KoQkyZauaCGktBFRKUppkUj45nd/f83r/br3nuc853zOZ557N3kF2/su4+Hh
WeLl4fn/r4SnreyM4ksDniNa0XpXFQ1+WH9Lp/jdRAPyIFs9shxZb1huKO13
DxWwupoTRsTQv7/C0vx+z9H9mtbOwJEt6BVTLHne9wPKTdA96jmyG7VvzTWY
8Z1GXQXDSq4jJkj3ZH/+L9/lMLFE0z0wcgiFqUeZTfmKQeloMt/4sDfS1ePT
6dbZCiUBEaeaq8NRtszkkP4qNeioK/z6qSAO1SYTdPUXu2Fh17oL6/kT0ffB
j/LVQnqAf7/y/A2RglpurnRWUdAD+sGibpcnKSg9YwenfLce/K6uiet5m4KU
0JHFElc9MG/49CCLJxV5Fy8M5JXrwV75NdcuGqWiAf91WScpe+FuzsyLmrZU
dO838DnG6IMj/8/7ok1pKOuxl/4zrj6s+dlwWLYzDdFLk0JtLulDc5U+j2x/
Gvrn3P3OsksfSme27fr9Ow3p3na6gyT3QayqTw2/RjqqPhkUoVS3D/iF/wSd
u5SO8kXOf174agAMGx3ThRMZqIf644U0LwLpEJ0Rd04G4rlu0qa3AUHcaVmZ
qoIMFGAzeTbSEMEWuxQBsaYMpIsbWE2fQRArnxmz9DMDDax9d+2LAYD8yb5s
PQ82EvLSOidwCKB3V+wbf4yNDGtTTisFAHQVJwkkRLJRuf0uml8WQEY7/41j
mWwUlZ2wZnQcgFnsfiHsPhtlpGU1TZobAt/0IZOYbRxUWtuiHmNvCCUttU4e
mhx0d3D8ymoPQwjec+iOEuKg3zv0s3aEGsKiQ6d0nCMHuXd/wAIKDOHpqyZN
hVMcpCqkLfvxpyGc+vH5w45BDupm98cNnTWCdXs91asiuGiWalSmd9kIvHQq
xGNPcNFmjconedVG4FjF3KOTwkVRz+IUHO4ZgT32cJR+lou2SWxr75k0Ag2Z
qKKcZi5KuBjOT4AxmPRy5plzXFQdMrJTdr8xnCLun2tY4qLXxhZOxx2M4cHN
8m1Hl+NIY0ymTIdhDBrhLYcSBHE0onzP4nqWMVCrcxr4JXGkd3NtxsUxY4jM
27h0VQNHPonRdf9+GAPXMKI1cTeOcMexN+7zxnDrYm2mvQ6Oxv807pQSNYGt
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
N9u8UGyUBUJnt5cq2mHof3yg2bE=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$530146#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.18021019579355513`, 0.2632367522328416, 0.4083543598260726]], 
          LineBox[CompressedData["
1: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
/wD2j4W9
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$530201#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.7879988569156045, 0.9876210014830877, 0.7959853616201413]], 
          LineBox[CompressedData["
1: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
UZ7rvkTg2ew9JzeNMUF1QcaLGRGJ/wcLtf1o
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$530256#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.47534008420116325`, 0.54755771182315, 0.7344821760242726]], 
          LineBox[CompressedData["
1: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
rxF6zQQD/bGtInJZ+H+weJKV
           "]]}, 
         Annotation[#, "Charting`Private`Tag$530311#1"]& ]}}, {}, {}}}, {
    PlotRange -> All, PlotLabel -> 
     FormBox["\"U ~ \\!\\(\\*SuperscriptBox[\\(x\\), \\(4\\)]\\)\"", 
       TraditionalForm], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 0.0037699111073707884`}, {-9.999990687548603*^-7, 
      9.99998732918772*^-7}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"guess\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8503049200179186`*^9, 
  3.8503049706403337`*^9}},ExpressionUUID->"597ef186-9503-46b6-adc4-\
22c20e145186"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", "=", "250"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"guess", "=", " ", 
   RowBox[{"10", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Omega]0", " ", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"guessplt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"guess", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"3", "*", "2", 
        RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<guess\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plts", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "5"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"speed0", "=", 
      RowBox[{"0.01", "*", "i", "*", 
       SqrtBox[
        FractionBox[
         RowBox[{"kB", " ", "*", "40*^-6"}], "mCs"]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"kB", " ", "0.001"}], 
              RowBox[{"mCs", " ", "1*^-6"}]], " ", 
             RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "speed0"}]}], 
         "}"}], ",", "x", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"3", "*", "2", 
           RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"plts", ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "/.", "s"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"3", "*", "2", 
            RowBox[{"\[Pi]", "/", "\[Omega]0"}]}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], ",", 
            RowBox[{"RandomReal", "[", "]"}], ",", 
            RowBox[{"RandomReal", "[", "]"}]}], "]"}]}]}], "]"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"guessplt", ",", "plts", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<U ~ \!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.85030403366217*^9, 3.850304252115979*^9}, {
  3.850304304297303*^9, 3.850304513659811*^9}, {3.8503045499032316`*^9, 
  3.850304760224684*^9}, {3.850304841864149*^9, 
  3.850304863290147*^9}},ExpressionUUID->"799aa0bf-f368-46bf-9563-\
eead2d64ba46"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
R443
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$526637#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.034476476257075506`, 0.09908687763635937, 0.255382567410813]], 
          LineBox[CompressedData["
1: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
55AFB1arL9gHEKSdLLHvcmgWKL0f23UzlqBeyared1FZUHDmR8ntRIKMWJpO
NvFZ4MBOirqcQtDZHocKS1oWrOjdqF1AI+i1xYLBS3oWpLYIr+fNI+jih5iv
5qVZ4JHSsgUKCHJeWiNr0pAFa2NK+veXEvQjRuvpE5IF1Q5cVz5S+7yP2LCb
wYMsmOOQ2kL9fYMWSq4K9vZkQU558+fRKoJuKnNU6z7LgiLBgx0itQTxPogz
eTiUBcXM8nzpeoKiTm2f03ydBQY2nwMFGwlaO16b1PY+C5zm75980kRQkpOO
4tHpLHi5af+yi5ggkX8vX7C/Z0HatE3uYzZBWbedvNT+ZsFK7nrRNfcp/fmC
okY4aMC/k+Yi2ULQM6Ous5u5aKC0LyltTStVL2Xd3jPLaPCuTzDl/+97zMfO
/ktZQQPfoFuXL7URtFmK3jO4iga30L7lzyg8evVLhvBaGry8vNdXqJ0gWpXS
NVNBGgzdu8DeR2Gbv0EoUZgGHm5WLzZTeMfRR6ufidDAJ+BS+xj1/Q/hgq8E
xGiQ8+dElA+Fix+fKzeUoMGjMo/9n6jzrwoVBMRI0mDzg/us/RQ+cG5G/7EU
Dfbm3xDRpfjP5iqLr95DA5macw6qVH9Vn4Jn9PbRQELLungpIchTpptEytDg
jeWzlzRKn0Ne62O75GngHiHLK9hM0Dy2vLBciQbrarfJnqP0xdyFMloqNLjI
d8XKj9I/SO/rkjBEg6K6x/dcKH94hm7mcB2jAeERhVHKz07xHld1LRqcabCo
M6kgKPKSkHqwLg0643SNcqk88P8ofLNoSIOqI/3zhMrLE5XZSmRCg2U9E0Kx
VJ4SglVu+ZvR4ABXgq1iNkEb+Xsl/1pS+oY1FvKkEvTSVPiHsjUN+qNMC/Yn
EZSZYdXuZUeDbcHSn/fFEbR1zze7OQcahA8WW1VEEPTWRVXhoBMNaCcN82RD
CCqoC+Fxd6WBEJ+AYWQgQdKaGwq+etFgFX/4euJB0HTUBc8DfjSoN796PN2F
IObT4uNOAVT/YhVC+o4EKVxQ+zAZQn0eNdKldIGgw37Wuz7EUfpeUjwvpk3Q
l6a1Kl8SqfMePPwmrk7x+0f05u7R4GDX87+LqgT9vbHFmSuL0l9xBd34AEE1
QS9rxEto1P0us8d4PUG2LZGdUmU06JGuk1BZTdC6pSpD+5g0cF7asZpjGTVf
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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$526704#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.2847587855484912, 0.08689181630909548, 0.28722800367318957`]], 
          LineBox[CompressedData["
1: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

           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$526759#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.5218083469953605, 0.7648200681287309, 0.4522638675056343]], 
          LineBox[CompressedData["
1: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
Q7ZZlPuiYC/ONnmaeYSbDuuSph6pKvXiSkv61S9r6eB6KbdO80gvHrj7aUB5
HR1yGgXqsx17sVSedmfVBjpwTHec4mvvxbm87C/6pehgeNlqrNGrD78SFXfz
kabD4uGPo7lRfbh1+9590jJ0MFjmDDGm9uEfBy3zb8rT4fDAuQ8cHX1Y1a42
bV6ZDo78PAV4CwNXtwaEiBykg4dfU9j9IgbuJBKPv9SiA5tO/DXiDQMPfy5e
bY7ocMdAdXqmm4FXLw37ZGnTofYd3cZjloH1lY86q+rRQcrLlV6tysS94Rxm
Z43pcJNzjBDLZeL38e2a/SZ0uLjpfEZ7OROPpD4VtbxIh0Sd6VtGdUw8Q9/d
43iZDopoOJ4+wMQCjMv6UVfpwLwmUPB7LYHFPsopbLKiQ+C1+Uq2jQTeOvaT
M+0aHQpORvzp20rgXX+D3xTZ0CEuzj/5gyqBDSRLNTpvs/SVcpdamxH4rLyv
yEV7OqQVn7Cvtiaw6R792Y8OdPDZ9TBy+A6BbxwZKvzhTAdtRSgMZO23Qdf5
5NffpYOLjpOpehqBH9szVyfcowM11f8AydqP4zzShyW96aC8y+2fThGBM0M0
Unb5sfIVYDnphglcW3Bto2EQHZ7aWY8eIQjcXLH7V18wHSxayAM7WPt5V83f
zv8e0WHUqnhxYITAQ92RYbfDWPUhZfIgfoq1Tw9cvvU7nA5ytv9UKL9Y+/Bn
OT3vCDok6U0KOs0TePlPFUd4NB3+bSnSvLOKxFxsDz8Jx9JB9ZDtrSecJF63
9lx1Uhwd6PrOlJC1JBYWkkyWSaDDodtR3TrrSLxZ4ttd2hM63M/LmW8QIPF2
mdKLqoksfjNtvILCJFZS9lWvekYHIwkLru2iJNaEjTMtKXSouSycnrKZxIf1
hjrOUejwt/KiFvdWEuudycsfSKPD0j+FAs1tJDYydQu1yqBDZ+vSzN7tJDax
0r75PZMOIWUJXLMyJDa34zvuTKVDSTPnqJccia1dmTKL2XQo1KGFtMmT2M4n
nf3+czoobTWYHVUgsUvw7SGePDp4V6ze2qBIYq9IDRxNo4OE7TXuO0okvv+U
I0m8gA5zatYFgywckt7umV5Ih6nTHus37iBxdN7TC0p0OuzpDFUSZuHE0mtq
xcV0oGkLrvSz5NNe795woJSVb4PV4TdZOKfh7/SbMpZ9/Z+91Sx7RR1v209U
0MH6xyJzkMVHuuXWfFMlHfJaFQqbWHxjG9ZL679k9c+iipsvyx+u2lKD5ld0
WP/kz+4Vlr8ery+56r9m+V+18FGPFY/xyuWUZkwHWd8bIWaseJmVZjTq17Dy
Mb1V9QArnu2FejPNb+hgl1c0/IkVb+28SQmDOjooTF5/dk6cxKXUaN2WejoI
zHpaRrDyI5e+396ggQ7k0mutOFb+eJ761xo00eE7l/CRFVa+vWLlJlqa6fB4
MuWuFQ+JpyJaNp5sZfV36sFPUVwk7g7aePNkBx1UQODyqWUC6wS8jG7tpMNd
21X+/QsELve+UnWymw6fGdZ/VX4T+JnL8/Wn+uiQemVe6PB3AvM7GGq2MegQ
kLm+6c8ogf1sf1meIlj2HS6zeQwR+JrlofJTA3TY3vtNpr+XwIz/hj+2vafD
NQG1na/aCax3KXit4Qc6HBcrG7veSOCdp7vMDD/RYVDWtVLyFYF/H7LmMPpK
h3s5qkgwhdWvmjzKHWN0cOIscj0RT+B+1UITo3E67P0voevkYwLjHQvPjSZZ
8q3LamXerH7eFH769C866L55mMNvSuB54b13O2fpgJxSfqadJvAtAWbG6T90
eGtvOsd2nMBGa7bNnV6gAyGZFSO9jzV/fpcmn1lh1RO3TtYfbgKHTF9618VW
DIa8d6+NLzHxv+/L02fYi2GZvSA1d4aJh4b1dM5yFkOLffdEJGuePe98P36W
txg+ZT0Jm2PNwwO01RrnRYuhNerQ2iOHmZjtQRfHb7FiyC88Gt61h4kb/kvp
iBMvhgeJa6/KbWPis+s1bJhbimHL+sJ0qVVMfMvJNt5Uphi8qPxWZpiBn2l0
z1qoFEMwoXVKbBcDWwqm1qzaVwxP48VjBSUYWGHcNixdtRga7+lMda9h4NJn
nDKf9xdD7+fRhIIh1n2xrHHOBhVDj1yvfEdEH/5Xn0q/bVAMG+J3FY+M9OLa
ZDtv/lPFMPan+pxbWy9+6KZ5otCwGAxm5q/2lvdiYYWeoekzLH9spXN/PezF
yqFcAi4XWbh/o8Jb1v1mfub2nbvWxWDbkPDg67UeXD14YEewbzGkyfws/Fba
hb1KXory+ReD0GonS4PELqzx6MDqqIBioDmKng3y7cJFqgcGEx8UQ6StXd/D
E12YEqoZURBaDCpS5r8aBjpxgKbGr76EYlCs5bv1YqYDH4tTeyVTVAzbV6FJ
I7VW3Hpyj0HtUDFc8dq5bpm7HnthPmeXYZb8Jp8xy6o6vHPPt0S5z8WgFv0i
Ocq+DoduSB8P+VoMvqTDL6O+WqzfvyHk3FQx3JmJH7NJeYPf2cw1fl4shnTj
iMQAI4xrA/CxNaIlwBV+Q+6nZil2mk2880KsBE4oh59wiy/B0tfd423FS2Cy
do75dqYY+5/Y86VjC0ve2OhoSy4dHxZIf/BEpgT6Elz1DqsUYJz8oF5xbwmE
yZ7onCQz8J31lhMD+0qg+mJW9Vh4Opb0R8KP1UpA4z+rl0Xaadj72pzVjEYJ
7OjUPW53Jhlr7bjJ8QpK4DnX9qN/vkXjiSTdHbe1SyAg5bLPA6NI/Ixf+tzW
oyXg1SBt2HkzFP/92Z9+/1gJJAapVz9c9sO5VhXNanoloFagObInyh2b9sXM
fD1RAuXDe0Ok9G9hnuMO4okGJRBf6FJs0aCLX1SePHLyVAm0ad/cstRmjv4H
Dky5/Q==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$526814#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.14654149346273915`, 0.43476394015455555`, 0.9404567295152211]], 
          LineBox[CompressedData["
1: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
wDGBJzxfTMiuZILhtOP2HzCBxQrU++rWMSH6XxlsrZ3A+Xycj8fFmFBgp8jB
nTWJa4U3ut2WYMJI22PRsYZJ3L1t/wEJSSbU0l8GWk5M4o/KFoXXpan71g9t
SV3LwvJ2zRk/ZJlgoSE8EO7Jwg3dASFCykwIpN8VlENTuG806ViNChMsBU88
1jGawi9flXKbIiacypsOErKbwtx/X97OVmeC2JGUmpaHU1hHVsNZXpsJBgFB
YQ4fpvBgONdFQyMmzGpi39EQNp6M7z08bswEfb8erq5kNp5OTxS2MGFCh77d
tAuDjeeZe5/fvMCEJ7Rv6791s/Ga4Qs6UeZM+G/fyn8GPASLsKV2bLhC2efg
X1XIT/DWuc88GZZMaHbefvC/dQTv+RXcVHKNCY41L0JfixOsu6Vcsc+eCTnJ
njVqKgQbSvsKmTgyIXf511deRwg+v0/nC/sGE1qDK8qjtQm2PkKKPzpT9s1O
C5w+Q3DQVX7p1Z5M4O6667HZhuAHjiPcCV5MuMTY7CvvSHCce+bLLT6U3qy+
bikXgrNCFNP2+DGBV+aDYKoPwc1Fluv1gpiwpkJ/x7MHBHdV7V0YCqbikSKH
GqIJ7m/81XfpPhN+yL7UDIknmAxEhtmHMeEpcP0pSaXm6YkLNl/DmfBhbmkS
fwY1D7+S0vaJYIKJ9WcujSyCF7/VcYVHM+FAp8YWtXyCeTnuvRCMZcKYXlYT
byHBK5efbkiJY4JsbbtQbjHBggJbUiUTKD2FwkUkSwkW3fTak/GQCdv1TJo9
ywneJlluIp/EBC/Bf6sZlQTvlPVVqEtmwquO1r9V1QQfhvXzT9OYML/jEeNy
HTXfa5Nnp2lMSP242vp3PcHapwoKJzKYcC1TrvpmA8H6591Crzyi8tfoZVJz
IzX/X1G//jaLCe1b96/60ESwqR3/MWc6E8I5TNd8aSbYynVE8ncOE/qb2tMH
Wwi2u53JeSePCVtZszURrQS7BNuTFQVMMLusZ7a9jWDvSEUczWACqzviQRyF
7yRypWwsYoIij7omoXBIZq9HZjGVD9LvfXnaCY4uSDy7k8mECVd+tf/jpHLL
g6WlTNit9DuATe3PqN+7TqmcCT9bP2nFUji3/denpgqKD9/+kG0ULnnW1nu8
igmitSW64f9/b3pq86Ozmjr/MvnhEOVvbPtqCZ0aJmRuGBn7SfHhbS7X7aql
4m0UueYXxde9/pyrTj0TDgcno2FKjzfVi2ldmKqfzutXH1B6XSx/1KHTyIT7
DzhCJTDBvcXa811NTLjS96k4mtJbveD9Jt0WJigr641N1RBcTo8++rSVCSsu
0fmWPiZYKvOQo247E74NfNflqyJ4RaJ/s24nE0wf+PPnUvH2jpV697SL8v9b
ykO1EoI/RDxdf6KbCSsNr+pUUPkyELT++olnTEi49vfwgVyCNQNqorv7mLDn
1dBdlWyCK30u150YYMIdBbN1EpkEJ7vkrT45xATdv/prA5IJXnVD73DPMBNc
HvRE/kkg2M92weLkKFUvIZtunI4l2NJCtfLkBBPWfw20iw8jePjSS3bPJBPO
xBQ8DLhH5c+54OV6U0yoMc45ohtI8G6D/ot6L5gwfXdut5MXwV9Vrbj0Z5mw
uHNkv7A1Va+HV8g+m2OCa17fjjkLgsfli4313zBBSljtZdwlgvGun3n675lg
PCPdG2xI1fOGcAODBSYcabP60K5E8A/B/Z59X5jwm+PVZV95gm3WjDwy+MaE
j6enFwX3UPm7VPy7wU8m0A3fLhkVo/rP1/LUU/+YEHK/oB9zU/n16dyTfo5S
cDgT1Nr6i43/vF38dIqzFOg2MapP3rIxeamtachTChsivj5epPpZXt/kG0O+
Usi7XWyjHMbGSgxuxTPCpZArULh72eIU5rjbz/VVhFr/7rrK9fUUbr+U9ixu
YymIrbIsjRmcwoarFa+NbC4FzbtKorN5U9jGyTb+vGQpSFUerHlnMIWTFQe+
mMmVwg7O9W9zIlnYYm1645IDpXDnlUnYiVssvOONbVimfCkoXTpdSb/EwuXJ
PJKvDpXCxIXaFG8ZFu5eVDx9DZWC4HzpmYr6SfynNZ1pr1sKV/1qMqJGJ3Bz
qp3PqpOlYPBV1otRM4HvuR0+XqxXCl8ePebzT5nAgjuek0+nSsHwZ0uEyeUJ
LBvKu8bFpBQWfRYFu16MY9NT9g6eVqWg1y5QtWR8DDewlHYF+5ZCH40/cn/S
CPYuqxHm96f2G2g6VbuNYMX7StxRAaUwIr8nacXpEVwir8RKulsKKjP2g4J8
I5gWejiiKLQUTpbPbul0H8YBhxUXhhJKgS9lo+4PnSGsFXewVrKkFDbvnz/I
7h7A3Sf26TaTUpjK/zbxs7wLe2N+Z5eXpeB1Nuwe0evCu/e9TpJ6VQqfavr3
+c514tB1mW9CZin+mjEVcxs7sc74upDTH0pBrYZ7W4j3E/zk2veOV79L4Ugk
y+v3gVbcHIC1lgqXgWjB+wCZ7zXY6UuSw2ORMkhifr+ltbkGS1y9FW+7sQxe
RW8a36TxGPsf3zfzbHMZoLwUjp/hVVhtTebdh5JlsJt3YVu9WDnGqXdbZfaX
QVymwb0F93zssNri3cSBMuA9/EjzOs7FW/yR4IODZXAgcUEsmSsH+1h+vzKv
WAatZm+8tMIfYZVd17lqgVpXq/8cqJKI36Uc3WWvXgbud9YMQmscTl4lcXqr
RhnsNQ/sbdCNxr8+j2fe0SqDsSW2yjblQTj/SlXXQe0yyFJ3fPg10BefH4qZ
nz1eBvNhJsXNtJt4xbEbG5N0y2DSTGpo+fRJ/Lj6xJETJ8vATH3io4CBJfof
jDT1uA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$526869#1"]& ]}}, {}, {}}}, {
    PlotRange -> All, PlotLabel -> 
     FormBox["\"U ~ \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\"", 
       TraditionalForm], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 0.07539822214741577}, {-9.999990687548604*^-6, 
      9.999987329187722*^-6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"guess\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8503046894233966`*^9, {3.8503047287414*^9, 3.8503047609152403`*^9}, 
   3.850304870474511*^9},ExpressionUUID->"870949bb-a4c9-4b3b-8b63-\
a322718b85ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"FourierTransform", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/.", "s"}], ",", "t", ",", 
        "\[Omega]"}], "]"}], "]"}], "2"], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", ",", 
      RowBox[{"2", "\[Pi]", "*", "1000"}], ",", 
      RowBox[{"2", "\[Pi]", "*", "30000"}]}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8503028940919337`*^9, 3.850302904162813*^9}, {
   3.850302965148549*^9, 3.850303113224657*^9}, 
   3.850303147193061*^9},ExpressionUUID->"215f24f8-40ad-41f7-89a5-\
e63dc96fa9da"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvi",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) iterated refinements in \
\\!\\(\\*RowBox[{\\\"t\\\"}]\\) in the region \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"\
\[Infinity]\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.055906821970919`*^78\\\", \\\"+\\\", \
RowBox[{\\\"1.0271836992258744`*^78\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\
\\) and \\!\\(\\*RowBox[{\\\"4.0123376334059154`*^78\\\"}]\\) for the \
integral and error estimates.\"",2,438,72,34062628206728742854,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8503030921080227`*^9, 
  3.850303114994254*^9}},ExpressionUUID->"5912921f-4804-4563-89a7-\
a474180fd77f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", "2*^-6", ")"}], 
   RowBox[{"-", "1"}]], 
  SqrtBox[
   RowBox[{"kB", " ", 
    RowBox[{"T", "/", "mCs"}]}]]}]], "Input",
 CellChangeTimes->{{3.850303612918459*^9, 3.850303643506423*^9}, {
  3.8503037193720455`*^9, 
  3.8503037313775377`*^9}},ExpressionUUID->"a4c44f2d-8896-4813-a884-\
ad54af1938de"],

Cell[BoxData["88409.58571727977`"], "Output",
 CellChangeTimes->{
  3.850303099748455*^9, 3.8503031477191477`*^9, {3.850303631775592*^9, 
   3.8503036438292637`*^9}, {3.8503037197482367`*^9, 
   3.8503037320459414`*^9}},ExpressionUUID->"357802a6-a28d-46dc-b4e8-\
ba83059567b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["xt"], "Input",
 CellChangeTimes->{{3.85030279744536*^9, 
  3.8503027983478756`*^9}},ExpressionUUID->"06caca55-69b4-442e-9bb7-\
a74638742c15"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  FractionBox[
   RowBox[{"0.07072766857382382`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"12127.2`", " ", "t"}], "]"}]}], "\[Omega]"], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     FractionBox["0.011787944762303968`", "\[Omega]"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"12127.2`", " ", "t"}], "]"}], "3"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     FractionBox["0.005304575143036786`", "\[Omega]"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"12127.2`", " ", "t"}], "]"}], "5"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "-", 
     FractionBox["1.1524534482413082`*^15", 
      SuperscriptBox["\[Omega]", "5"]], "+", 
     FractionBox["0.003157485204188563`", "\[Omega]"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"12127.2`", " ", "t"}], "]"}], "7"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "-", 
     FractionBox["1.1204408524568275`*^15", 
      SuperscriptBox["\[Omega]", "5"]], "+", 
     FractionBox["0.002148844097294994`", "\[Omega]"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"12127.2`", " ", "t"}], "]"}], "9"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.`", "\[VeryThinSpace]", "-", 
     FractionBox["9.607271018520724`*^14", 
      SuperscriptBox["\[Omega]", "5"]], "+", 
     FractionBox["0.0015823306534626773`", "\[Omega]"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"12127.2`", " ", "t"}], "]"}], "11"]}]}]], "Output",
 CellChangeTimes->{
  3.850302798731755*^9},ExpressionUUID->"5bc4b250-78fc-46c7-80c6-\
e92e44818c4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 677},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 96, "Title",ExpressionUUID->"8b266996-2355-41a6-b12c-60b8741254d9"],
Cell[751, 27, 162, 6, 56, "Text",ExpressionUUID->"1c789681-738b-4b54-be31-cb5169fe18b4"],
Cell[916, 35, 515, 10, 56, "Text",ExpressionUUID->"43338bb5-1838-4359-a49f-bd46b3b774df"],
Cell[CellGroupData[{
Cell[1456, 49, 176, 3, 67, "Chapter",ExpressionUUID->"ef1b1b06-4ee2-4a31-a928-12c5fbb64d5b"],
Cell[1635, 54, 1435, 31, 162, "Input",ExpressionUUID->"63041d65-fc15-4b87-9d5a-ea0bec8def10"],
Cell[3073, 87, 8949, 251, 633, "Input",ExpressionUUID->"a8a14583-33ff-45dd-80c1-a6097dfe7aa8"],
Cell[12025, 340, 156, 3, 28, "Input",ExpressionUUID->"db05a111-95db-418a-af92-920649256092"],
Cell[CellGroupData[{
Cell[12206, 347, 156, 3, 28, "Input",ExpressionUUID->"e9948116-9653-4095-aece-6d646e82d5dd"],
Cell[12365, 352, 1761, 42, 110, "Output",ExpressionUUID->"33554026-aa84-4fca-b39e-e55faeaf9a34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14163, 399, 572, 17, 68, "Input",ExpressionUUID->"5bb1da2e-db29-4a82-897d-dcfbf3e7bb1f"],
Cell[14738, 418, 2023, 47, 82, "Output",ExpressionUUID->"684e0354-7170-4897-a290-0d868c37bd44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16798, 470, 765, 17, 28, "Input",ExpressionUUID->"f8203c48-caed-4e0c-a92b-acddfd51f3f3"],
Cell[17566, 489, 1115, 26, 32, "Output",ExpressionUUID->"94b5896d-e953-4fc0-92f1-a6ce206992d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18718, 520, 159, 3, 28, "Input",ExpressionUUID->"993f297e-d5b1-4be8-a991-d53d347ab2a2"],
Cell[18880, 525, 1765, 42, 110, "Output",ExpressionUUID->"847a0489-9038-40b6-a0cf-22ee2d6088db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20682, 572, 380, 10, 28, "Input",ExpressionUUID->"fe37263b-aa4f-4434-97b2-e7dc3c57347c"],
Cell[21065, 584, 11991, 216, 223, "Output",ExpressionUUID->"97fe154a-eea9-436f-995b-ac46735f5b96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33093, 805, 2424, 64, 212, "Input",ExpressionUUID->"e8cadff7-1bed-4dc3-b9f4-3802bf451a4c"],
Cell[35520, 871, 1812, 43, 228, "Output",ExpressionUUID->"42cc2f15-0024-4515-bec0-c6b4d39aec91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37369, 919, 426, 8, 28, "Input",ExpressionUUID->"c3452c9c-d4e9-4431-b942-36daf378ccb5"],
Cell[37798, 929, 587, 11, 32, "Output",ExpressionUUID->"cb0ba237-9cd8-4feb-a2e1-42a77475295c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38422, 945, 1773, 42, 54, "Input",ExpressionUUID->"3bb533f2-103d-4c34-af4c-fabed9e4ef1f"],
Cell[40198, 989, 17864, 310, 226, "Output",ExpressionUUID->"60d8ab0a-6a27-409b-81d9-704192488194"]
}, Open  ]],
Cell[58077, 1302, 1052, 28, 110, "Input",ExpressionUUID->"f3b2dac8-15be-4b0f-a9ef-9ec8ee0a9c85"],
Cell[CellGroupData[{
Cell[59154, 1334, 1087, 28, 28, "Input",ExpressionUUID->"e4158fa0-5c81-4422-b7bf-924fbe4e6189"],
Cell[60244, 1364, 139, 3, 32, "Output",ExpressionUUID->"eb8bc1cf-4384-40f5-b5c6-1e35079d3266"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60420, 1372, 649, 21, 73, "Input",ExpressionUUID->"fbcc8d70-90f5-47f0-af05-a80c0367ebdd"],
Cell[61072, 1395, 7008, 166, 334, "Output",ExpressionUUID->"740dc51e-c962-436e-b9d3-5ad0fecfb980"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68117, 1566, 227, 4, 44, "Subsubsection",ExpressionUUID->"af305ecf-3546-472a-a5b1-6a1caca7e23a"],
Cell[68347, 1572, 188, 4, 28, "Input",ExpressionUUID->"5f7ffb96-2629-484e-b198-0111efa3249c"],
Cell[CellGroupData[{
Cell[68560, 1580, 1070, 30, 32, "Input",ExpressionUUID->"0564425a-cec3-4391-84ad-461a6f1c6fd1",
 CellID->5423],
Cell[69633, 1612, 19277, 364, 71, "Output",ExpressionUUID->"0b2536dc-5204-4232-ae82-b303ae662168"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88947, 1981, 688, 19, 28, "Input",ExpressionUUID->"702c63a5-940c-4610-8961-b282daf8f49a",
 CellID->28908],
Cell[89638, 2002, 47751, 837, 266, "Output",ExpressionUUID->"1f4bb94e-105a-41e0-857d-01dd6fec8bd7"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[137450, 2846, 179, 3, 56, "Chapter",ExpressionUUID->"eb988e3e-5412-4986-bd48-c123a82f2e67"],
Cell[137632, 2851, 513, 9, 34, "Text",ExpressionUUID->"b04d4f87-b078-4521-a924-222ef170308d"],
Cell[138148, 2862, 2388, 64, 270, "Input",ExpressionUUID->"04c88868-1fb6-47c8-880c-cc65abad08a0"],
Cell[CellGroupData[{
Cell[140561, 2930, 9013, 253, 633, "Input",ExpressionUUID->"81241e06-1c81-4d7d-bba9-52383c4b87cc"],
Cell[149577, 3185, 356, 8, 24, "Message",ExpressionUUID->"c308c2ee-81d7-4de2-a6f7-90459e607827"],
Cell[149936, 3195, 1416, 29, 110, "Output",ExpressionUUID->"3bd2cf22-dc5e-446e-86cf-9e4905fb295b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151389, 3229, 572, 17, 68, "Input",ExpressionUUID->"79e840dd-4c5d-4784-b305-a4c04b4cdcbf"],
Cell[151964, 3248, 1171, 28, 82, "Output",ExpressionUUID->"7c67db28-3519-488c-aefa-1f606832165c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153172, 3281, 765, 17, 28, "Input",ExpressionUUID->"51517c87-d7a1-4795-8e14-cc747b178fbe"],
Cell[153940, 3300, 802, 19, 32, "Output",ExpressionUUID->"f1481eb0-19f3-4713-807a-7696475d4396"]
}, Open  ]],
Cell[154757, 3322, 3213, 83, 115, "Input",ExpressionUUID->"3108901d-e56b-4ecc-b8a5-8958d712f3a0"],
Cell[157973, 3407, 2037, 60, 110, "Input",ExpressionUUID->"e54b76eb-2695-4eb8-a632-5a1fb63fd30f"],
Cell[CellGroupData[{
Cell[160035, 3471, 3444, 94, 296, "Input",ExpressionUUID->"b2bf0576-f85b-40f1-bc15-9372be01b094"],
Cell[163482, 3567, 81413, 1396, 266, "Output",ExpressionUUID->"597ef186-9503-46b6-adc4-22c20e145186"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244932, 4968, 3456, 93, 320, "Input",ExpressionUUID->"799aa0bf-f368-46bf-9563-eead2d64ba46"],
Cell[248391, 5063, 103668, 1763, 233, "Output",ExpressionUUID->"870949bb-a4c9-4b3b-8b63-a322718b85ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352096, 6831, 679, 18, 28, "Input",ExpressionUUID->"215f24f8-40ad-41f7-89a5-e63dc96fa9da"],
Cell[352778, 6851, 855, 15, 43, "Message",ExpressionUUID->"5912921f-4804-4563-89a7-a474180fd77f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353670, 6871, 358, 11, 34, "Input",ExpressionUUID->"a4c44f2d-8896-4813-a884-ad54af1938de"],
Cell[354031, 6884, 277, 5, 32, "Output",ExpressionUUID->"357802a6-a28d-46dc-b4e8-ba83059567b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354345, 6894, 155, 3, 28, "Input",ExpressionUUID->"06caca55-69b4-442e-9bb7-a74638742c15"],
Cell[354503, 6899, 1809, 49, 110, "Output",ExpressionUUID->"5bc4b250-78fc-46c7-80c6-e92e44818c4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

