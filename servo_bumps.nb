(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     59870,       1331]
NotebookOptionsPosition[     58022,       1263]
NotebookOutlinePosition[     58364,       1278]
CellTagsIndexPosition[     58321,       1275]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["servo bumps", "Title",
 CellChangeTimes->{{3.814920409916563*^9, 3.8149204115038033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xs", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", ".1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}]], "+", "0.1", "+", 
    RowBox[{"0.2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", "\[Mu]"}], ")"}], "2"]}], "/", 
         SuperscriptBox["w", "2"]}], "]"}], "+", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
         SuperscriptBox["w", "2"]}], "]"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "150"}], ",", "150"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.814920415974416*^9, 3.8149207731151104`*^9}, {
   3.814926801392273*^9, 3.8149268053782988`*^9}, 3.814966676481635*^9, {
   3.815063965105875*^9, 3.815064147525694*^9}, 3.815064194355751*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1: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
xg==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-149.99999387755102`, 149.99999387755102`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.814920511360447*^9, 3.8149206051918507`*^9}, {
   3.8149206361648536`*^9, 3.8149206553877497`*^9}, {3.8149206876006594`*^9, 
   3.8149206994203763`*^9}, {3.814920755637745*^9, 3.8149207739199877`*^9}, 
   3.814926805949211*^9, 3.814966678193223*^9, {3.8150640227550783`*^9, 
   3.815064038375665*^9}, {3.8150641137426987`*^9, 3.815064147915143*^9}, 
   3.8150641954866195`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["time evolution", "Section",
 CellChangeTimes->{{3.7986340642056274`*^9, 3.798634087358054*^9}, {
  3.80943338808978*^9, 3.8094333999627023`*^9}, {3.8149235743797693`*^9, 
  3.8149235768862066`*^9}}],

Cell["\<\
simple example with two level system, but the procedure is general and will \
work for any size hamiltonian\
\>", "Text",
 CellChangeTimes->{{3.80943454946667*^9, 3.8094345752064476`*^9}, 
   3.814103666915594*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "build", " ", "hamiltonian", " ", "and", " ", "symbolic", " ", "\[Rho]"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", "\[CapitalGamma]"}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", " ", "=", " ", 
     RowBox[{"(", GridBox[{
        {"0", "1"},
        {"\[Placeholder]", "\[Placeholder]"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", " ", "=", " ", "0"}], ";", " ", 
    RowBox[{"\[CapitalDelta]", " ", "=", "0.1"}], ";", 
    RowBox[{"\[CapitalGamma]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]0", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.809337932931282*^9, 3.809338001103017*^9}, {
   3.809338046861168*^9, 3.809338047195247*^9}, {3.8093380898709774`*^9, 
   3.809338106932873*^9}, {3.809338140669448*^9, 3.809338285416336*^9}, {
   3.8093383216931086`*^9, 3.809338342088194*^9}, {3.8093385423964353`*^9, 
   3.8093386728065805`*^9}, {3.809338704970415*^9, 3.80933871234814*^9}, {
   3.809431046993889*^9, 3.809431101412342*^9}, {3.809431178204912*^9, 
   3.809431183728198*^9}, {3.809431799238978*^9, 3.809431818656557*^9}, {
   3.809431921318925*^9, 3.8094320166480045`*^9}, {3.809432054079571*^9, 
   3.809432125999241*^9}, {3.809432962542143*^9, 3.80943300147301*^9}, 
   3.809433034300557*^9, {3.809433158072322*^9, 3.8094331711691923`*^9}, {
   3.8094332767926807`*^9, 3.809433356445491*^9}, {3.809433437337186*^9, 
   3.809433495944478*^9}, {3.809433670957245*^9, 3.809433743778289*^9}, {
   3.809433783706456*^9, 3.8094337938801217`*^9}, {3.8094338724735994`*^9, 
   3.8094338918261943`*^9}, {3.8094340122245436`*^9, 3.809434074274124*^9}, {
   3.809434319112606*^9, 3.8094343249282627`*^9}, {3.8094344229452105`*^9, 
   3.80943444252285*^9}, {3.809532347429755*^9, 3.8095323567208576`*^9}, {
   3.8141040185169373`*^9, 3.814104030598036*^9}, {3.814104092540868*^9, 
   3.8141041343219104`*^9}, {3.814104178888238*^9, 3.8141041797200413`*^9}, {
   3.814104296152893*^9, 3.814104310400894*^9}, {3.814104350910676*^9, 
   3.814104399538663*^9}, {3.8141044322563705`*^9, 3.8141045270906954`*^9}, {
   3.8141056696721983`*^9, 3.8141057096270065`*^9}, {3.814105791816298*^9, 
   3.814105825597658*^9}, {3.814105962523959*^9, 3.8141059973588815`*^9}, {
   3.814106065997021*^9, 3.8141060746439514`*^9}, {3.8141061085221286`*^9, 
   3.8141061456121635`*^9}, {3.8141083026149735`*^9, 
   3.8141083027061872`*^9}, {3.8141085870663104`*^9, 3.814108616434139*^9}, {
   3.814108655927149*^9, 3.814108676314252*^9}, {3.814108780177362*^9, 
   3.814108780360708*^9}, {3.8141088393242903`*^9, 3.8141088692642007`*^9}, {
   3.814108912893776*^9, 3.8141089427238803`*^9}, {3.8141090157804127`*^9, 
   3.8141090226194487`*^9}, {3.814109372327854*^9, 3.8141093767662783`*^9}, {
   3.8149236179496336`*^9, 3.814923657785591*^9}}],

Cell[CellGroupData[{

Cell["build master eqs", "Subsection",
 CellChangeTimes->{{3.814108691318899*^9, 3.814108723628281*^9}, {
  3.8141089165156937`*^9, 3.8141089171413918`*^9}, {3.8141135519622765`*^9, 
  3.8141135614058876`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", " ", "=", " ", 
   RowBox[{"Length", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "=", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Rho]", 
         RowBox[{"#1", ",", "#2"}]], "[", "t", "]"}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "[", "t", "]"}], "*)"}], "&"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"enforce", " ", "conjugate", " ", "relationship", " ", "of", " ", 
     RowBox[{"\[Rho]", "'"}], "s", " ", "off"}], "-", "diagonals"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqIdcs", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<", 
      RowBox[{"dim", "+", "1"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "dim"}], ",", 
       RowBox[{"j", ">", "i"}], ",", 
       RowBox[{"j", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"rho", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i"}], "]"}], "]"}], " ", "=", " ", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"rho", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"eqIdcs", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"generate", " ", "non"}], "-", 
    RowBox[{
    "redundant", " ", "eqs", " ", "and", " ", "initial", " ", 
     "conditions"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"comm", " ", "=", " ", 
   RowBox[{
    RowBox[{"rho", ".", "H"}], " ", "-", " ", 
    RowBox[{"H", ".", "rho"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linblad", " ", "=", 
   RowBox[{"\[CapitalGamma]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sigma]m", ".", "rho", ".", "\[Sigma]p"}], "-", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}], ".", "rho"}], " ", 
         "+", " ", 
         RowBox[{"rho", ".", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]p", ".", "\[Sigma]m"}], ")"}]}]}], ")"}]}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhoPruned", " ", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqsPruned", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhoICPruned", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"dim", "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<", 
       RowBox[{"dim", "+", "1"}]}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "<=", "j"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"eqsPruned", ",", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"rho", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"comm", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "+", 
             RowBox[{"linblad", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"rhoICPruned", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"rho", "/.", 
               RowBox[{"t", "\[Rule]", " ", "0"}]}], ")"}], "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "==", 
            RowBox[{"\[Rho]0", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"rhoPruned", ",", 
           RowBox[{"rho", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "generate", " ", "indices", " ", "for", " ", "population", " ", "and", " ",
     "coherence", " ", "terms", " ", "in", " ", "pruned", " ", "eq", " ", 
    "list"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popIdxList", " ", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cohIdxList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"last", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elems", " ", "=", " ", 
   RowBox[{"dim", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dim", "+", "1"}], ")"}], "/", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "elems"}], ",", 
   RowBox[{
    RowBox[{"i", "++"}], "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "\[Equal]", 
       RowBox[{"last", "+", "dim", "-", "j"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"popIdxList", ",", "i"}], "]"}], ",", 
        RowBox[{"last", "=", "i"}], ",", 
        RowBox[{"j", "++"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cohIdxList", ",", "i"}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.809337932931282*^9, 3.809338001103017*^9}, {
   3.809338046861168*^9, 3.809338047195247*^9}, {3.8093380898709774`*^9, 
   3.809338106932873*^9}, {3.809338140669448*^9, 3.809338285416336*^9}, {
   3.8093383216931086`*^9, 3.809338342088194*^9}, {3.8093385423964353`*^9, 
   3.8093386728065805`*^9}, {3.809338704970415*^9, 3.80933871234814*^9}, {
   3.809431046993889*^9, 3.809431101412342*^9}, {3.809431178204912*^9, 
   3.809431183728198*^9}, {3.809431799238978*^9, 3.809431818656557*^9}, {
   3.809431921318925*^9, 3.8094320166480045`*^9}, {3.809432054079571*^9, 
   3.809432125999241*^9}, {3.809432962542143*^9, 3.80943300147301*^9}, 
   3.809433034300557*^9, {3.809433158072322*^9, 3.8094331711691923`*^9}, {
   3.8094332767926807`*^9, 3.809433356445491*^9}, {3.809433437337186*^9, 
   3.809433495944478*^9}, {3.809433670957245*^9, 3.809433743778289*^9}, {
   3.809433783706456*^9, 3.8094337938801217`*^9}, {3.8094338724735994`*^9, 
   3.8094338918261943`*^9}, {3.8094340122245436`*^9, 3.809434074274124*^9}, {
   3.809434319112606*^9, 3.8094343249282627`*^9}, {3.8094344229452105`*^9, 
   3.80943444252285*^9}, {3.809532347429755*^9, 3.8095323567208576`*^9}, {
   3.8141040185169373`*^9, 3.814104030598036*^9}, {3.814104092540868*^9, 
   3.8141041343219104`*^9}, {3.814104178888238*^9, 3.8141041797200413`*^9}, {
   3.814104296152893*^9, 3.814104310400894*^9}, {3.814104350910676*^9, 
   3.814104399538663*^9}, {3.8141044322563705`*^9, 3.8141045270906954`*^9}, {
   3.8141056696721983`*^9, 3.8141057096270065`*^9}, {3.814105791816298*^9, 
   3.814105825597658*^9}, {3.814105962523959*^9, 3.8141059973588815`*^9}, {
   3.814106065997021*^9, 3.8141060746439514`*^9}, {3.8141061085221286`*^9, 
   3.8141061456121635`*^9}, {3.8141083026149735`*^9, 
   3.8141083027061872`*^9}, {3.8141085870663104`*^9, 3.814108616434139*^9}, {
   3.814108655927149*^9, 3.8141086886897354`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["rhoPruned"], "Input",
 CellChangeTimes->{{3.809532305670158*^9, 3.8095323094804573`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"1", ",", "1"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"1", ",", "2"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Rho]", 
     RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8095323099874163`*^9, 3.8095324032400255`*^9, 3.8141058679441357`*^9, {
   3.8141087148799334`*^9, 3.814108740544721*^9}, 3.8141088065626*^9, {
   3.81410884761349*^9, 3.8141088747653723`*^9}, {3.814108919986145*^9, 
   3.8141089483288097`*^9}, 3.8141090278459363`*^9, 3.8141093799543543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["eqsPruned"], "Input",
 CellChangeTimes->{{3.8095324077584605`*^9, 3.809532412185214*^9}, {
  3.814104149063631*^9, 3.814104151595662*^9}, {3.8141041878745747`*^9, 
  3.814104197075035*^9}, {3.814104318435846*^9, 3.814104320704976*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"1", ",", "1"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"0.5`", " ", 
     RowBox[{
      SubscriptBox["\[Rho]", 
       RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"1", ",", "2"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.25`"}], "+", 
       RowBox[{"0.1`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{
      SubscriptBox["\[Rho]", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"2", ",", "2"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
     RowBox[{"0.5`", " ", 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8141043214368916`*^9, {3.814104355961809*^9, 3.81410440388666*^9}, {
   3.81410444051941*^9, 3.8141044911149855`*^9}, 3.814104532601452*^9, {
   3.814105804719206*^9, 3.8141058379916105`*^9}, 3.8141058689469404`*^9, 
   3.814106002925181*^9, {3.8141060850887165`*^9, 3.8141061122100153`*^9}, 
   3.814108641845989*^9, {3.814108714909414*^9, 3.8141087405742607`*^9}, 
   3.8141088066116323`*^9, {3.8141088476499863`*^9, 3.814108874798171*^9}, {
   3.8141089200236626`*^9, 3.8141089483613834`*^9}, 3.814109027880254*^9, 
   3.814109379984353*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["run", "Subsection",
 CellChangeTimes->{{3.8141087061482697`*^9, 3.814108706769188*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"eqsPruned", "\[IndentingNewLine]", "rhoICPruned"}], "Input",
 CellChangeTimes->{{3.8141087542688713`*^9, 3.8141087601424303`*^9}, {
  3.814108992469593*^9, 3.8141090062095437`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"1", ",", "1"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"0.5`", " ", 
     RowBox[{
      SubscriptBox["\[Rho]", 
       RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"1", ",", "2"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.25`"}], "+", 
       RowBox[{"0.1`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{
      SubscriptBox["\[Rho]", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Rho]", 
       RowBox[{"2", ",", "2"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
     RowBox[{"0.5`", " ", 
      RowBox[{
       SubscriptBox["\[Rho]", 
        RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814108760456869*^9, 3.814108813437214*^9}, {
   3.8141088449805*^9, 3.8141088767756553`*^9}, 3.814108921531311*^9, 
   3.814108954383192*^9, {3.8141090066223235`*^9, 3.8141090314693213`*^9}, 
   3.8141093860081625`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"1", ",", "1"}]], "[", "0", "]"}], "\[Equal]", "0.5`"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"1", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Rho]", 
      RowBox[{"2", ",", "2"}]], "[", "0", "]"}], "\[Equal]", "0.5`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814108760456869*^9, 3.814108813437214*^9}, {
   3.8141088449805*^9, 3.8141088767756553`*^9}, 3.814108921531311*^9, 
   3.814108954383192*^9, {3.8141090066223235`*^9, 3.8141090314693213`*^9}, 
   3.8141093860151734`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
   RowBox[{"Timing", "[", 
    RowBox[{"First", "@", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"Join", "[", 
         RowBox[{"eqsPruned", ",", "rhoICPruned"}], "]"}]}], ",", " ", 
       "rhoPruned", ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8095316621756783`*^9, 3.809531665671056*^9}, {
   3.8095316965718718`*^9, 3.80953170039726*^9}, 3.809532026116903*^9, {
   3.8095377849875965`*^9, 3.8095377869023185`*^9}, {3.814108347990142*^9, 
   3.8141083481314983`*^9}, {3.814108454203678*^9, 3.8141084572897635`*^9}, {
   3.8141086311543274`*^9, 3.8141086316090107`*^9}, 3.814109044534695*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time to run sim: \"\>", "\[InvisibleSpace]", "0.015625`"}],
  SequenceForm["Time to run sim: ", 0.015625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.809531757184842*^9, 3.8095320266594596`*^9, 3.80953210269654*^9, 
   3.809532429424903*^9, 3.809537776251668*^9, 3.809537812740676*^9, {
   3.81410828237614*^9, 3.8141083122955427`*^9}, 3.8141083485621624`*^9, 
   3.8141084628266473`*^9, {3.8141085983249345`*^9, 3.8141086329102173`*^9}, {
   3.814108729781131*^9, 3.8141087433570137`*^9}, 3.814108956146496*^9, {
   3.8141090385470104`*^9, 3.814109045153582*^9}, 3.814109386084957*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plt", " ", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", " ", 
    RowBox[{"i", "<", 
     RowBox[{
      RowBox[{"Length", "[", "soln", "]"}], "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"plt", ",", 
      RowBox[{"soln", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"plt", ",", 
     RowBox[{"{", "0.5", "}"}]}], "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"show", " ", "50", "%", " ", "population", " ", "line"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"plt", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]0", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[CapitalGamma]"}], " ", "t"}], "]"}]}], "}"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"plt", ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.798638580718977*^9, 3.798638786999689*^9}, {
  3.7986388927971673`*^9, 3.7986388960499105`*^9}, {3.809531707350404*^9, 
  3.809531721844244*^9}, {3.8095318466764855`*^9, 3.8095318601966352`*^9}, {
  3.8095377947325416`*^9, 3.809537803777375*^9}, {3.8141083565444527`*^9, 
  3.8141084606664677`*^9}, {3.8141086356695538`*^9, 3.814108636287328*^9}, {
  3.814109048682621*^9, 3.814109290045385*^9}, {3.8141093935384607`*^9, 
  3.8141094397954845`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVx38803kcwPHZpOVUw7ZyLDaNDZfTPfrhLO83EuXBI7pKP0QrR3N+d4Vc
Hne0/EqsWqVE9bDRPdI5MXUqlRWd9IOUX7WKlNgnJUTlvvfH6/F6PPnS2KBw
Oo1G86f6/4xrxi0vFxW4M29HCWg0HQjfXHWbdygWnppP3XoxXQcTfzlv71Ck
Qd43Jkevz9ZBHztyvEZxEGYVWigTrXXQuSLjRqmiGI7Td3mXu+vgUajCvkhx
AWJ6bMxCUnUQ9ItF5zHFNTBQRez4MKKDgvebq5SKe2Ba5VWLXc/BTbvK2DNR
B5zw+CfbS15CXErA1qq41yB/KwsWs/sgujY8j277DpbdpV9yX/cK2l6vnKGW
joD/jSyn+1n9kO08SqvZMA5tgpzNnvLXEO/YeKS+9DMwhkOs63a9gYltURU9
MTRc3JlQGOE9ANIr61bn/0zHrveZxZZkALYNt9XXZxqi1d7lSnrBW8j9XhOr
khvhynP23t2cQaDXa5ZkpDBx6WyG9kvmIJg6+LU8O2aMfjenxU+NDoJvsefZ
dwoTTGr+1OofOARzSPOKNM0s5Jakdoaph6Dw9mUDxg4WDh8QT4QOD4GE5zFl
s90UayuK+cIFenDUsXp/22mG68sFvfaRejhfZhZZnWCO06pypjcc1UPq05BW
Rzkbs9dyRy20eoiXLPU7dZiDjR1zo2YN6mGieLn0bT4Xm5wfuRubELgfVxi2
+8wcnLRSjmU7EHD1EXztOT0Xg3kuBgovAk3ermV40gLvhSp5HhsIlFYed33x
57do9PHviLFoAhxbJ9mWckssOpN1ZWwvgYcGzD8s6qxwmhUn2uEggWpmoup+
Ew8NytwbuEUEnDgsmVQ7D33U5rX7ygiQvFH2D+3WaPjwUGlMFQHb/fudY2U2
uNe4rEJaR+DFxq5Oz34bbIrR2AsbCPj2tX6qjuGjOrel5OC/BJISwiO5Q3zU
En9f1QMCATUnVnF3CfBH+e75Ox8T0H+WpTJGBXjveqVwSTeB049/vxiTaIsB
IVku63UEJiKXhSVP2qJrbuivPr0EeF8KNsWnzMdNF28bpfcTeOWTc4dpKMQ0
Px84OkDgpl0zzMsRYnaYk0IyREDGVBnyZ9hhogv/ViQhoCmZv+xmgR1mK0U+
e4YJtLhJtEGm9lh/taB4wQcC47ITa8Ly7HFh9ndt6hECjauL187kipBtHuHK
GiUgdZWo1YdF6OJ5ffbSMQI7hu5+7FaKcFFnSr+Ectzp0OVmx0VIZ2bWeVBO
m5H+PLVIhMkdZ7b4UT7Z0WQZpBJhhBc9fQvl9uT1+Z81Ijx7Qe2fQXnV5YTk
wC4RapozR+5SDowxbJT3iLAmNyn5IeVggZJb90yEB+RvJtspR2RfqrLrFaFH
90+fnlHO2EjTTw6KcM1UUvsw5asTB6SqryJMK1lsyRknoK2wruyiiVEo7Euy
oNwsrZxiMcR4rtqxjUe5607byT3TxfigQp5uR3m80PLxapYYrYZPaJdQngo4
L5SbidGjYSFLQtmIATv/YYvRxyQ6GCmzo6SmdhZiTL3w4LkvZUvrkdBNlmIc
6P0q8KcsaN1Xkc8TY53Xo62BlB32z/mitRajmeu6U2spu7iV+03yxThzYfqT
DZT/A0hgTWI=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxF0GtIk3EUBvDXbdiUim3N2VpzbtNZKlhE1NhME9NSEl1000p71Zqztnmh
0gypbIaWbW8mXlsWTiW0xHRlpiMZqZhJmqLLNNMyykthsrxWkOd/4OHh9+3h
8HGVLJaEYdj+v/nX5Gb7zk/bdbuw/+f6tUnidFvls+K5x14x/UQ6eIwpt9YT
t8ADARkvywg9+F0k4VZCPALLzrAH8olmsO7nsdo84g1YYg6y90saBqtTQ07W
qsfBZ5/G5pCE0+Ce8X125fgMOMtrFqs/agUneLTeMZUtoP3R8dWDSsx3xfiL
Q6HaUyRw9I8ek+k6BXxji1Fl0NiCSSbjjoxUKpjuHtw5lG8P3qv3ezBNrAY7
TnUEpBvXggtfNdiQ42hgKXf3snMMHewxTBu9lMwAV1Uw5HWJ68BpH453e2iY
4ATpzuC7uQ7gOb0//k3LAnepC6PO33cEiwMFS4Ol68Fte8QVvsVscFlNgXjk
4Qawg9BTcaKSA35rQ73CbtwIrqMmGbrauGBPB5oCNzuBp3Jmmdt6eWBhZqaX
SuEMHgm3DPh9Qd471v27TskHX0iMlbMmkEPqi4JY5wTgyQVFGnkWubTv8hNl
khD9Q+4dlTKPzF3URSSkuoA/B2a3Uymu4BZRh49TNrKCaqDw7URg4z0X7xYd
cqdEapbR3cBWRdGBqBzk1lD9wTWsTWBcLC0vz0WOm3j9630esro00p9RgJxu
d/VjWglycX8bR2ZA7k05rF0wIgc1JKaEWZDDlJRWzSDyEUEeq3EI+XTWs1rR
KHJGODY5/x25ae4mblhCNlfzaizYZnAHXrNMIyNb2nuKL65CthZy+kJpyMsh
Va4aBrIt2Sf5OROZGY/TRWxkDm8mMoKDLOi+Vq3lIrtnOi6aechbJZXB83zk
PytKC84=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVxXk41AkYAOBxbIZNzqYk9/WbKNnVlqW+L1HiMQdLyramiWLcR7lT1PAo
jEnuiDKydqSVDAodWiQplTAZW47aXLVlHWl294/3eQ3YoW5+siQSyfU//y/X
qtTzZkv2jtlwolkqlYDJuxZb3fOhsOulTMSPsxJYrLX0HeAnwejbiScJIxIY
0/Sfv8nPgjcPu/vW3pHA4O7Tdyv4pdC9qHFMmCyB5z58s4v8a2Dg2DLkqCAB
tyCtwXx+KyzUbd6oRRmG7I8/1+XyH8NgQUzWib1isG13VrKPHIHeLTr0H1pf
Qlgc7VBd2FuYITbQhf3PIVjklylrNAsn/RYzkt374NnbvYqV7E/gEz8p8Jns
hXTLOdLN/fNQEdWXMTf+CMLNOy60VXyBCdu0ZBWTLlg8HFjzKoSEunnWuYf+
egDs254M3hFZzLIWn8redR8Of3jW1pYmj+kK04LPzXfg3OaGUAF3BVYL777Q
YbaCbFvD1tNxZNzKnehXEzWD2gaXHkm+EpaPPYmWdxKBU6n95Vn+SrQrtmJl
H6uHNTPdu5MaVqGrdJ3Fwv3fofCPJhm5AFWM59VtIh2rBTudnVJ9XzXkaX4z
LtQRgvmI6mhilDpe5jy/fSqxCoRX1f3rIzSw87FDamuKABKGD/aZczUxrrKw
hFVzGcLttrmU5KzGosMRNC0og8VSB/Z7HgUNFQ6YiE6UQG9YISu6fA12sOyU
y2oKwWaP4ddXZWtxo4d4oDUjDzodba5isRaGrLB2FffnQMX1ApvX1evQz6dM
UWMnH1YbWXB+qdJG3m8PaWQDHjyVISdr3VqP5lJRk++Wc1BPjhT0durgdyTP
WVpTGlisVuWw23VxchNlKXv4DMxkzml+/0IPC5O+LfI0TgGj1FTLUI4+Wh9a
9vhp4iS8PjA0aD+hj83FTsZBU4ngNNa3UB9igI3CxnzLbXEQE+HnT5kywC5d
8sCQRTTQbhY5U44bYtKo3f0pxyiY/sJJkJszxAItPbPg0XAo6z91IyTSCJtu
lB/vuRoKi/7bWbFLRnilM/JSuigQdJazvcPjjDGo0mXbQoI/jO8520WWN8Gd
KTdEbf5+cM+0G3TPmiAnurQv+B4bOGSBvIGiKY5n9gzb5LGg4ZLx9nvZpvhg
5mlNuOJB6LG1a3dTM0Pn5GRxW/l+mOcUubMyzZBU8v7KvlpP6GCUeihTCCwa
GLDKkLgD28ausjKHQElpfOJIFhMCph59FucSeCXPRcmKy4SwMh8H9QICjy7P
zHATmJCkmPJnwkUCvVRcm+wDmFA80KntJiBwh3Xs0oI9E17E7uN9aSBQ/dal
Wt9/GODcFBHLHCJQLefINMWXAcwQ+Q7uKwLNL4yvUvZmgJdhLuWWhMCliY8W
ZDcGHE1vrDMdJdAyaY+nMjLg9AHS9NIkgTbeMqvc1zOgZTGDLfhKYJnCCZPz
1XRor9G7PkSiYkBQYOD6Qjp0s69LVeWo6OFFZV5Lo8NQ17PieAUqxrU4jH3w
o8N8oXY/Q5WK1Xxb3jt9OkhpQhOuOhVXSqetW1XosEIOopo1qRg82uNS8pUG
moFsNVMtKq7VsG+MEdNAW++Tj7c2FYe8guSjHtLAsO9MDU+HiumqH36NaaLB
htQ1y+16VNwv0q7kVtHAyrbKZcmAijk9W/++mE+DfwGb3DOi
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj04l2DGDwwD4oR/LWjEn77WH8iZ9iNk+b
dB7Otz7qxeVU/ADOL6jyS9xc8ALOz92R2sek/AHOv/LCk3N50hc4v0v/G8O2
yB9wfqH2iakHlv6B838lZ6+7m8fgAOMn7Q0LmJDGBOcnf7xy4EAHC5zfY7A9
f1kbG5zPdGC7eUsVB5wvqOV97v4MLjjfY77T4g+TeOB88fdn3Oq388H5s47v
YmTOFIDzbWQd/yukCML52g8EntSWCMH5a1cIZWwtEobza+7FXtZuE4HzC20s
vOdNEYXzf813SXo9QQzOv1AwK6F8kTicb+mu9O/uQgk4/6Sr5QqHOZJw/tKN
My0frZaC80WVdbLiVkrD+ZcYOZok98jA+Vs5ipddOCkL5+uICmQlHZWD89/3
fRMxviYP5yu3t+vnZynA+Y+ibt9yeo7gezy9/HNrniKcX1GUmiH2FsH32zbb
S6xMCc5/9yerhvkbgr/weuOWvGJlRHhk2CZU/kbwZf9OjC6sUoHzn7l3n+Jg
UYXzD6udsZfrRvCzOJaxKHKqwfnbF6jYHp6I4J+ztjkaJKgO5//Imh2c0Ifg
nwiYH8orpgHnJ1naLF8+BcH32lVUGXgbwTe0Xun9W1ETzgcARO7tTg==
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVy304FAYcwPHrmPBYczcv2bmcO8ddbNqWldDvR+883Ysr0dVwdY3TvJvd
dWKK5HrhanlJHSov6zmRvEQ4laIkozKvV6aXWaQeTN5u2x/f5/PX11YU4Ssm
EgiE7f/1v3pNxh1/umSuJ0ex6nU6LTD/anRbcSYChDard66b0MJsufP+XmUi
LDJIVfLnWnhpFjJTrTwNFUHj1cubtdC3+ejtK0oV+CeF+quTtfA0UOlwQXkN
4tfb3960VAu+B636spVN0FhPMLWyGILMD3sqzykfw3ydOOHwtgFwa/E29op5
Dr520s3fNf0BkTJOcGXkG+jb7iFX9zyFH2vFp4iMCeCPr01JFnTDkzfbjIpF
k5CY4JET+LYT0p2nCdUBMzD3ySPF9KtHEOXY+qvmyjwstxuNN2U+gNl9YWWD
4QTkrplyEY3eA1GDHy/jABGpk9mtmRvuwr73TzSaNH2kj45op+qb4cSqmoii
VANMfi99Q+U3AVFTs+aozBCVcUkm5Np6IK306dBmGyMzJu2+/tZa2KryujSh
NEHlAWcTZVwVWL5r35xYswyjLWiSubvXIfd+3RK9UFMsU80EEOPKwZ3qqaPt
J2HXx9zAa1Q1OD43HUmIJePvpGUOyQmloC4hh1RFf469gWHdzUeKQD60t9sx
1QwFsYPJ+8ouQZT7Wp+LZ82xy6hERIECmFVtFP2dYYFfkgy+unn4InRG5gbF
F1piJ88psLAsF1y30BcHC5bj0x0ZxPsns6Btk2sJ5lkhYaTYfajnLFypyHEd
vvoF9lvS4s09lWDOcJJ8X0rBWWlInoltBnQtMUy2umWNO4K7fhO7nIAqw5ii
zjYqDnoaLhXUpYGTualE1LICFY6RzKyhFHh3atrs22c2qG880OBndwQYx445
R0hoWKnJ8vN/nQTDu/v7vF7TMCtu0jxqLAG2vuz+WBVui+o96YJVa2Xwc7Q4
xGLMFi/vUa4adooHTvV5b4uf6JgUnE6d2BQL4/MSud40HW9/sG4NH4mCgp5f
boTHMJDbOvniWUkEzIZ4BEnnGJhP9FYrasOAupApjJLZYUBwl2xBHgKvtige
GOozUXpvJ7aFiOGOfTusUDCR6Gp9I/yOCCSGRfq2RvaoE2Y2eGYFQU2+nced
THukCxnxUUZ7ocPNvcWX5IB1Yw+xozAAZiTnBUGnHDBOOEYKKPeDVp5q56cW
LOz4JmkoUysAkat7cfFZFjZFB5FfnuZD6NijqYFzLEzwG9a4pPIhsiBwIzmH
hesuXb6nkPMh0ejIC/kFFh5i2LVvCeVDXm8bxbeIhfzVCwd1Xnx4Jt2VMV/D
wjGfbpnkHx5410VL+f0s1NhwNZT9POCH67emDrIw/7pOQxLywJ9+zuKWloXH
z7Q0mPjy4If0m5X2IyykjJ7JJyEPju4mjM+9ZeEa78JGP2seNM6eFBUt/vdH
7/2YdZULLWU2Ff0ENqYFb5ig5XKhXVShM9Vjo5LXklaZxoX+B0/yDi1lY45/
8PEpMRdmcik9PFM2crSzq9/SuKDjqJmpZDZeM1Bfbv6MCwZ6EFtvxkYp57Ei
f5EDZmEikr0VGxmilKuyAQ5QbCYDhRQ27poo7417yAF6d0pZBpWNETS5RFbH
gZXHLBdabNgoWLjpn1bKga/dSn3mbNlYehBVqmwO/AuWey2l
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8094341386677437`*^9, 3.809434272871342*^9, 3.8094343651659937`*^9, {
   3.809531634760157*^9, 3.809531648365343*^9}, 3.8095316837163563`*^9, 
   3.8095317233950863`*^9, 3.8095317732204833`*^9, {3.8095318434357615`*^9, 
   3.8095318611031804`*^9}, 3.8095320277960715`*^9, 3.8095321329669714`*^9, {
   3.8095378062478895`*^9, 3.8095378154229145`*^9}, 3.8141082839673834`*^9, 
   3.814108314318725*^9, {3.814108349939863*^9, 3.814108369958683*^9}, {
   3.814108422300875*^9, 3.8141084292250795`*^9}, 3.8141084641839094`*^9, {
   3.8141085993446455`*^9, 3.814108636937776*^9}, {3.814108730510811*^9, 
   3.814108744113637*^9}, 3.8141089572741885`*^9, {3.8141090395191383`*^9, 
   3.8141090514079075`*^9}, {3.814109258318666*^9, 3.8141092907548227`*^9}, {
   3.8141093864401712`*^9, 3.814109404913125*^9}, 3.8141094416129055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.814109418379145*^9, 3.814109434378869*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{{3.8141094142518563`*^9, 3.81410942431773*^9}}]
}, Open  ]],

Cell["\<\
Compare system with no driving field and decay to a system that does not \
include the ground state, and solves the Schrodinger eq instead\
\>", "Text",
 CellChangeTimes->{{3.8141085046715965`*^9, 3.8141085468840213`*^9}, {
  3.8141093098932447`*^9, 3.8141093148447857`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "'"}], "=", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"0", "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalGamma]"}]}], ")"}], " ", 
     "\[Psi]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"<", 
     RowBox[{
      RowBox[{"--", " ", "this"}], " ", "will", " ", "have", " ", "only", " ",
       "one", " ", "element", " ", "in", " ", "\[Psi]"}]}], ",", " ", 
    RowBox[{"and", " ", "the", " ", "solution", " ", "is", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "\[CapitalGamma]"}], " ", "t"}], "]"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8141093381190577`*^9, 3.8141093637324305`*^9}, {
  3.8141097002935734`*^9, 3.8141097675714684`*^9}, {3.8141134297126713`*^9, 
  3.8141134927034535`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8149204840330095`*^9, 3.8149204851504235`*^9}}],

Cell[BoxData["13000"], "Input",
 CellChangeTimes->{{3.8149707318691225`*^9, 3.814970759277726*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.76*^9", "/", "13000"}]], "Input",
 CellChangeTimes->{{3.8149707622536*^9, 3.814970822941635*^9}, {
  3.8149708738112297`*^9, 3.8149708829804463`*^9}}],

Cell[BoxData["135384.61538461538`"], "Output",
 CellChangeTimes->{
  3.814970768803189*^9, {3.814970802483965*^9, 3.8149708232905655`*^9}, {
   3.814970875609571*^9, 3.8149708835318375`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["2.998", 
  RowBox[{"2", " ", "0.85"}]]], "Input",
 CellChangeTimes->{{3.8149707796836166`*^9, 3.8149707814477315`*^9}, {
  3.8149708550856013`*^9, 3.814970867457641*^9}}],

Cell[BoxData["1.763529411764706`"], "Output",
 CellChangeTimes->{3.8149708684024954`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 677},
WindowMargins->{{Automatic, 176}, {0, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 96, 1, 101, "Title"],
Cell[CellGroupData[{
Cell[701, 27, 1460, 41, 163, "Input"],
Cell[2164, 70, 22463, 380, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24664, 455, 204, 3, 70, "Section"],
Cell[24871, 460, 224, 5, 49, "Text"],
Cell[25098, 467, 3253, 60, 143, "Input"],
Cell[CellGroupData[{
Cell[28376, 531, 210, 3, 49, "Subsection"],
Cell[28589, 536, 8595, 217, 745, "Input"],
Cell[CellGroupData[{
Cell[37209, 757, 103, 1, 30, "Input"],
Cell[37315, 760, 653, 16, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38005, 781, 249, 3, 30, "Input"],
Cell[38257, 786, 1827, 49, 33, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[40133, 841, 93, 1, 41, "Subsection"],
Cell[CellGroupData[{
Cell[40251, 846, 196, 2, 50, "Input"],
Cell[40450, 850, 1500, 44, 33, "Output"],
Cell[41953, 896, 688, 19, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42678, 920, 1009, 24, 69, "Input"],
Cell[43690, 946, 646, 11, 22, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44373, 962, 1865, 50, 145, "Input"],
Cell[46241, 1014, 9405, 171, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55683, 1190, 92, 1, 30, "Input"],
Cell[55778, 1193, 98, 1, 30, "Output"]
}, Open  ]],
Cell[55891, 1197, 285, 5, 49, "Text"],
Cell[56179, 1204, 868, 23, 69, "Input"],
Cell[57050, 1229, 96, 1, 30, "Input"],
Cell[57149, 1232, 99, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[57273, 1237, 176, 3, 30, "Input"],
Cell[57452, 1242, 191, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57680, 1250, 198, 4, 54, "Input"],
Cell[57881, 1256, 89, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

